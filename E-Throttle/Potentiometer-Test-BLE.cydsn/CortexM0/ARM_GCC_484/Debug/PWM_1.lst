ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_1_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_1_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_1_Stop, %function
  23              	PWM_1_Stop:
  24              	.LFB5:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  This file provides the source code to the API for the PWM_1
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_1.c **** *
   9:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_1.c **** *
  12:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_1.c **** 
  19:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  20:.\Generated_Source\PSoC4/PWM_1.c **** 
  21:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM_1.c **** 
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  26:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM_1.c **** *
  28:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize/Restore default PWM_1 configuration.
  30:.\Generated_Source\PSoC4/PWM_1.c **** *
  31:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM_1.c **** *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_1.c **** *
  34:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  36:.\Generated_Source\PSoC4/PWM_1.c **** *
  37:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void)
  39:.\Generated_Source\PSoC4/PWM_1.c **** {
  40:.\Generated_Source\PSoC4/PWM_1.c **** 
  41:.\Generated_Source\PSoC4/PWM_1.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__QUAD == PWM_1_CONFIG)
  43:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM_1.c ****         
  45:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM_1.c **** 
  48:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM_1.c ****         
  51:.\Generated_Source\PSoC4/PWM_1.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetCounterMode(PWM_1_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__QUAD == PWM_1_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM_1.c **** 
  57:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
  58:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM_1.c ****         
  60:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM_1.c ****     
  63:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM_1.c ****         
  66:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM_1.c **** 
  69:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM_1.c **** 
  72:.\Generated_Source\PSoC4/PWM_1.c ****             #if (1u == PWM_1_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCompareBuf(PWM_1_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (1u == PWM_1_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM_1.c **** 
  78:.\Generated_Source\PSoC4/PWM_1.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM_1.c ****         #elif(PWM_1__COUNT_DOWN == PWM_1_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  84:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__TIMER == PWM_1_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM_1.c **** 
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
  89:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_1.c **** 
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  95:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_ALIGN | PWM_1_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/PWM_1.c ****             
  97:.\Generated_Source\PSoC4/PWM_1.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(PWM_1_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM_1.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_DT == PWM_1_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_DT == PWM_1_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM == PWM_1_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM == PWM_1_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
 115:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PWM_1.c ****     
 118:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM_1.c **** 
 121:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM_1.c ****                     (PWM_1_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 128:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__LEFT == PWM_1_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_LEFT == PWM_1_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM_1.c **** 
 132:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_RIGHT == PWM_1_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__CENTER == PWM_1_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_CENTER == PWM_1_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM_1.c **** 
 140:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCompare(PWM_1_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompareBuf(PWM_1_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM_1.c **** 
 154:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WritePeriodBuf(PWM_1_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM_1.c ****     
 160:.\Generated_Source\PSoC4/PWM_1.c **** }
 161:.\Generated_Source\PSoC4/PWM_1.c **** 
 162:.\Generated_Source\PSoC4/PWM_1.c **** 
 163:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 165:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM_1.c **** *
 167:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM_1.
 169:.\Generated_Source\PSoC4/PWM_1.c **** *
 170:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 172:.\Generated_Source\PSoC4/PWM_1.c **** *
 173:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 175:.\Generated_Source\PSoC4/PWM_1.c **** *
 176:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void)
 178:.\Generated_Source\PSoC4/PWM_1.c **** {
 179:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG |= PWM_1_MASK;
 183:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/PWM_1.c **** 
 185:.\Generated_Source\PSoC4/PWM_1.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
 187:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 189:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM_1.c **** 
 192:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
 193:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 195:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__TIMER == PWM_1_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM_1.c **** }
 198:.\Generated_Source\PSoC4/PWM_1.c **** 
 199:.\Generated_Source\PSoC4/PWM_1.c **** 
 200:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
 202:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 5


 204:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM_1.c **** *  Initializes the PWM_1 with default customizer
 206:.\Generated_Source\PSoC4/PWM_1.c **** *  values when called the first time and enables the PWM_1.
 207:.\Generated_Source\PSoC4/PWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM_1.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM_1.c **** *
 210:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 212:.\Generated_Source\PSoC4/PWM_1.c **** *
 213:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 215:.\Generated_Source\PSoC4/PWM_1.c **** *
 216:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  to 1 the first time PWM_1_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM_1.c **** *  calls to the PWM_1_Start() routine.
 222:.\Generated_Source\PSoC4/PWM_1.c **** *
 223:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void)
 225:.\Generated_Source\PSoC4/PWM_1.c **** {
 226:.\Generated_Source\PSoC4/PWM_1.c ****     if (0u == PWM_1_initVar)
 227:.\Generated_Source\PSoC4/PWM_1.c ****     {
 228:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
 229:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 230:.\Generated_Source\PSoC4/PWM_1.c ****     }
 231:.\Generated_Source\PSoC4/PWM_1.c **** 
 232:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
 233:.\Generated_Source\PSoC4/PWM_1.c **** }
 234:.\Generated_Source\PSoC4/PWM_1.c **** 
 235:.\Generated_Source\PSoC4/PWM_1.c **** 
 236:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 238:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM_1.c **** *
 240:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM_1.c **** *  Disables the PWM_1.
 242:.\Generated_Source\PSoC4/PWM_1.c **** *
 243:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 245:.\Generated_Source\PSoC4/PWM_1.c **** *
 246:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 248:.\Generated_Source\PSoC4/PWM_1.c **** *
 249:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void)
 251:.\Generated_Source\PSoC4/PWM_1.c **** {
  26              		.loc 1 251 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 252:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM_1.c **** 
 254:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 6


  32              		.loc 1 254 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 255:.\Generated_Source\PSoC4/PWM_1.c **** 
 256:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG &= (uint32)~PWM_1_MASK;
  35              		.loc 1 256 0
  36 0006 044B     		ldr	r3, .L2
  37 0008 1A68     		ldr	r2, [r3]
  38 000a 0121     		mov	r1, #1
  39 000c 8A43     		bic	r2, r1
  40 000e 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/PWM_1.c **** 
 258:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 258 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 259:.\Generated_Source\PSoC4/PWM_1.c **** }
  44              		.loc 1 259 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00002040 		.word	1075838976
  51              		.cfi_endproc
  52              	.LFE5:
  53              		.size	PWM_1_Stop, .-PWM_1_Stop
  54              		.section	.text.PWM_1_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	PWM_1_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	PWM_1_SetMode, %function
  60              	PWM_1_SetMode:
  61              	.LFB6:
 260:.\Generated_Source\PSoC4/PWM_1.c **** 
 261:.\Generated_Source\PSoC4/PWM_1.c **** 
 262:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetMode
 264:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM_1.c **** *
 266:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the operation mode of the PWM_1. This function is used when
 268:.\Generated_Source\PSoC4/PWM_1.c **** *  configured as a generic PWM_1 and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM_1.c **** *
 271:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM_1.c **** *  mode: Mode for the PWM_1 to operate in
 273:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM_1.c **** *   - PWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_PR - PWM with pseudo random capability
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 7


 282:.\Generated_Source\PSoC4/PWM_1.c **** *
 283:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 285:.\Generated_Source\PSoC4/PWM_1.c **** *
 286:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM_1.c **** {
  62              		.loc 1 288 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 289:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM_1.c **** 
 291:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 291 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 292:.\Generated_Source\PSoC4/PWM_1.c **** 
 293:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_MODE_MASK;
  73              		.loc 1 293 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mode;
  79              		.loc 1 294 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 295:.\Generated_Source\PSoC4/PWM_1.c **** 
 296:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 296 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 297:.\Generated_Source\PSoC4/PWM_1.c **** }
  87              		.loc 1 297 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 00012040 		.word	1075839232
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE6:
  97              		.size	PWM_1_SetMode, .-PWM_1_SetMode
  98              		.section	.text.PWM_1_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	PWM_1_SetQDMode
 101              		.code	16
 102              		.thumb_func
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 8


 103              		.type	PWM_1_SetQDMode, %function
 104              	PWM_1_SetQDMode:
 105              	.LFB7:
 298:.\Generated_Source\PSoC4/PWM_1.c **** 
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetQDMode
 302:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM_1.c **** *
 304:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM_1.c **** *
 308:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM_1.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM_1.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM_1.c **** *
 316:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 318:.\Generated_Source\PSoC4/PWM_1.c **** *
 319:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM_1.c **** {
 106              		.loc 1 321 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 322:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM_1.c **** 
 324:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 324 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 325:.\Generated_Source\PSoC4/PWM_1.c **** 
 326:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_QUAD_MODE_MASK;
 117              		.loc 1 326 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= qdMode;
 123              		.loc 1 327 0
 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 328:.\Generated_Source\PSoC4/PWM_1.c **** 
 329:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 9


 128              		.loc 1 329 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 330:.\Generated_Source\PSoC4/PWM_1.c **** }
 131              		.loc 1 330 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 00012040 		.word	1075839232
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE7:
 141              		.size	PWM_1_SetQDMode, .-PWM_1_SetQDMode
 142              		.section	.text.PWM_1_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_1_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	PWM_1_SetPrescaler, %function
 148              	PWM_1_SetPrescaler:
 149              	.LFB8:
 331:.\Generated_Source\PSoC4/PWM_1.c **** 
 332:.\Generated_Source\PSoC4/PWM_1.c **** 
 333:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM_1.c **** *
 337:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM_1.c **** *
 341:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM_1.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM_1.c **** *
 353:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 355:.\Generated_Source\PSoC4/PWM_1.c **** *
 356:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM_1.c **** {
 150              		.loc 1 358 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 10


 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 359:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM_1.c **** 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 361 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
 363:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 161              		.loc 1 363 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= prescaler;
 167              		.loc 1 364 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 365:.\Generated_Source\PSoC4/PWM_1.c **** 
 366:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 366 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 367:.\Generated_Source\PSoC4/PWM_1.c **** }
 175              		.loc 1 367 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 00012040 		.word	1075839232
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE8:
 185              		.size	PWM_1_SetPrescaler, .-PWM_1_SetPrescaler
 186              		.section	.text.PWM_1_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	PWM_1_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	PWM_1_SetOneShot, %function
 192              	PWM_1_SetOneShot:
 193              	.LFB9:
 368:.\Generated_Source\PSoC4/PWM_1.c **** 
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetOneShot
 372:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM_1.c **** *
 374:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM_1 runs
 376:.\Generated_Source\PSoC4/PWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1 operates in the continuous mode.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 11


 378:.\Generated_Source\PSoC4/PWM_1.c **** *
 379:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM_1.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM_1.c **** *
 385:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 387:.\Generated_Source\PSoC4/PWM_1.c **** *
 388:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM_1.c **** {
 194              		.loc 1 390 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 391:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM_1.c **** 
 393:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 393 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 394:.\Generated_Source\PSoC4/PWM_1.c **** 
 395:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_ONESHOT_MASK;
 205              		.loc 1 395 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1_1BIT_MASK) <<
 211              		.loc 1 396 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 397:.\Generated_Source\PSoC4/PWM_1.c ****                                                                PWM_1_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM_1.c **** 
 399:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 399 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 400:.\Generated_Source\PSoC4/PWM_1.c **** }
 222              		.loc 1 400 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 12


 228 0024 00012040 		.word	1075839232
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE9:
 232              		.size	PWM_1_SetOneShot, .-PWM_1_SetOneShot
 233              		.section	.text.PWM_1_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_1_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_1_SetPWMMode, %function
 239              	PWM_1_SetPWMMode:
 240              	.LFB10:
 401:.\Generated_Source\PSoC4/PWM_1.c **** 
 402:.\Generated_Source\PSoC4/PWM_1.c **** 
 403:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM_1.c **** *
 407:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM_1.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM_1.c **** *
 414:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM_1.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM_1.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM_1.c **** *
 439:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 441:.\Generated_Source\PSoC4/PWM_1.c **** *
 442:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM_1.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 13


 241              		.loc 1 444 0
 242              		.cfi_startproc
 243              	.LVL18:
 445:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL2_REG = (modeMask & PWM_1_6BIT_MASK);
 244              		.loc 1 445 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/PWM_1.c **** }
 250              		.loc 1 446 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c 28012040 		.word	1075839272
 257              		.cfi_endproc
 258              	.LFE10:
 259              		.size	PWM_1_SetPWMMode, .-PWM_1_SetPWMMode
 260              		.section	.text.PWM_1_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	PWM_1_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	PWM_1_SetPWMSyncKill, %function
 266              	PWM_1_SetPWMSyncKill:
 267              	.LFB11:
 447:.\Generated_Source\PSoC4/PWM_1.c **** 
 448:.\Generated_Source\PSoC4/PWM_1.c **** 
 449:.\Generated_Source\PSoC4/PWM_1.c **** 
 450:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM_1.c **** *
 454:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM_1.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM_1.c **** *
 460:.\Generated_Source\PSoC4/PWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM_1.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM_1.c **** *
 463:.\Generated_Source\PSoC4/PWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM_1.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM_1.c **** 
 468:.\Generated_Source\PSoC4/PWM_1.c **** *
 469:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM_1.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 14


 475:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM_1.c **** {
 268              		.loc 1 480 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 481:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM_1.c **** 
 483:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 483 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 484:.\Generated_Source\PSoC4/PWM_1.c **** 
 485:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_SYNC_KILL_MASK;
 279              		.loc 1 485 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1_1BIT_MASK)  <<
 285              		.loc 1 486 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0121     		mov	r1, #1
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 487:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM_1.c **** 
 489:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 489 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 490:.\Generated_Source\PSoC4/PWM_1.c **** }
 296              		.loc 1 490 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 00012040 		.word	1075839232
 303              		.cfi_endproc
 304              	.LFE11:
 305              		.size	PWM_1_SetPWMSyncKill, .-PWM_1_SetPWMSyncKill
 306              		.section	.text.PWM_1_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_1_SetPWMStopOnKill
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 15


 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_1_SetPWMStopOnKill, %function
 312              	PWM_1_SetPWMStopOnKill:
 313              	.LFB12:
 491:.\Generated_Source\PSoC4/PWM_1.c **** 
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM_1.c **** *
 497:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM_1.c **** *
 502:.\Generated_Source\PSoC4/PWM_1.c **** *
 503:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM_1.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM_1.c **** *
 509:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 511:.\Generated_Source\PSoC4/PWM_1.c **** *
 512:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM_1.c **** {
 314              		.loc 1 514 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 515:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM_1.c **** 
 517:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 517 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 518:.\Generated_Source\PSoC4/PWM_1.c **** 
 519:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_STOP_KILL_MASK;
 325              		.loc 1 519 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1_1BIT_MASK)  <<
 331              		.loc 1 520 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0121     		mov	r1, #1
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 16


 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 521:.\Generated_Source\PSoC4/PWM_1.c ****                                                          PWM_1_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM_1.c **** 
 523:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 523 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 524:.\Generated_Source\PSoC4/PWM_1.c **** }
 342              		.loc 1 524 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 00012040 		.word	1075839232
 349              		.cfi_endproc
 350              	.LFE12:
 351              		.size	PWM_1_SetPWMStopOnKill, .-PWM_1_SetPWMStopOnKill
 352              		.section	.text.PWM_1_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	PWM_1_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	PWM_1_SetPWMDeadTime, %function
 358              	PWM_1_SetPWMDeadTime:
 359              	.LFB13:
 525:.\Generated_Source\PSoC4/PWM_1.c **** 
 526:.\Generated_Source\PSoC4/PWM_1.c **** 
 527:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM_1.c **** *
 531:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM_1.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** *
 538:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM_1.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM_1.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM_1.c **** *
 542:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 544:.\Generated_Source\PSoC4/PWM_1.c **** *
 545:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM_1.c **** {
 360              		.loc 1 547 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 17


 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 548:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM_1.c **** 
 550:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 550 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 551:.\Generated_Source\PSoC4/PWM_1.c **** 
 552:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 371              		.loc 1 552 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((deadTime & PWM_1_8BIT_MASK) <<
 377              		.loc 1 553 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 554:.\Generated_Source\PSoC4/PWM_1.c ****                                                           PWM_1_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM_1.c **** 
 556:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 556 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 557:.\Generated_Source\PSoC4/PWM_1.c **** }
 387              		.loc 1 557 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 00012040 		.word	1075839232
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE13:
 397              		.size	PWM_1_SetPWMDeadTime, .-PWM_1_SetPWMDeadTime
 398              		.section	.text.PWM_1_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	PWM_1_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	PWM_1_SetPWMInvert, %function
 404              	PWM_1_SetPWMInvert:
 405              	.LFB14:
 558:.\Generated_Source\PSoC4/PWM_1.c **** 
 559:.\Generated_Source\PSoC4/PWM_1.c **** 
 560:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM_1.c **** *
 564:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 18


 565:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM_1.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM_1.c **** *
 569:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM_1.c **** *
 575:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 577:.\Generated_Source\PSoC4/PWM_1.c **** *
 578:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM_1.c **** {
 406              		.loc 1 580 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 581:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM_1.c **** 
 583:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 583 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 584:.\Generated_Source\PSoC4/PWM_1.c **** 
 585:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_INV_OUT_MASK;
 417              		.loc 1 585 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mask;
 423              		.loc 1 586 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 587:.\Generated_Source\PSoC4/PWM_1.c **** 
 588:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 588 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 589:.\Generated_Source\PSoC4/PWM_1.c **** }
 431              		.loc 1 589 0
 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 00012040 		.word	1075839232
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 19


 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE14:
 441              		.size	PWM_1_SetPWMInvert, .-PWM_1_SetPWMInvert
 442              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	PWM_1_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	PWM_1_WriteCounter, %function
 448              	PWM_1_WriteCounter:
 449              	.LFB15:
 590:.\Generated_Source\PSoC4/PWM_1.c **** 
 591:.\Generated_Source\PSoC4/PWM_1.c **** 
 592:.\Generated_Source\PSoC4/PWM_1.c **** 
 593:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCounter
 595:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM_1.c **** *
 597:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM_1.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM_1.c **** *
 602:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM_1.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM_1.c **** *
 605:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 607:.\Generated_Source\PSoC4/PWM_1.c **** *
 608:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM_1.c **** {
 450              		.loc 1 610 0
 451              		.cfi_startproc
 452              	.LVL36:
 611:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COUNTER_REG = (count & PWM_1_16BIT_MASK);
 453              		.loc 1 611 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/PWM_1.c **** }
 459              		.loc 1 612 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 08012040 		.word	1075839240
 466              		.cfi_endproc
 467              	.LFE15:
 468              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 469              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	PWM_1_ReadCounter
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 20


 472              		.code	16
 473              		.thumb_func
 474              		.type	PWM_1_ReadCounter, %function
 475              	PWM_1_ReadCounter:
 476              	.LFB16:
 613:.\Generated_Source\PSoC4/PWM_1.c **** 
 614:.\Generated_Source\PSoC4/PWM_1.c **** 
 615:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCounter
 617:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM_1.c **** *
 619:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM_1.c **** *
 622:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 624:.\Generated_Source\PSoC4/PWM_1.c **** *
 625:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM_1.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM_1.c **** *
 628:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM_1.c **** {
 477              		.loc 1 630 0
 478              		.cfi_startproc
 631:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COUNTER_REG & PWM_1_16BIT_MASK);
 479              		.loc 1 631 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 632:.\Generated_Source\PSoC4/PWM_1.c **** }
 484              		.loc 1 632 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 08012040 		.word	1075839240
 491              		.cfi_endproc
 492              	.LFE16:
 493              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 494              		.section	.text.PWM_1_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_1_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_1_SetCounterMode, %function
 500              	PWM_1_SetCounterMode:
 501              	.LFB17:
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c **** 
 635:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM_1.c **** *
 639:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 21


 640:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM_1.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM_1.c **** *
 643:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM_1.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM_1.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM_1.c **** *
 654:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 656:.\Generated_Source\PSoC4/PWM_1.c **** *
 657:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM_1.c **** {
 502              		.loc 1 659 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 660:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM_1.c **** 
 662:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 662 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 663:.\Generated_Source\PSoC4/PWM_1.c **** 
 664:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_UPDOWN_MASK;
 513              		.loc 1 664 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= counterMode;
 519              		.loc 1 665 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 666:.\Generated_Source\PSoC4/PWM_1.c **** 
 667:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 667 0
 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 668:.\Generated_Source\PSoC4/PWM_1.c **** }
 527              		.loc 1 668 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 22


 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 00012040 		.word	1075839232
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE17:
 537              		.size	PWM_1_SetCounterMode, .-PWM_1_SetCounterMode
 538              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	PWM_1_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	PWM_1_WritePeriod, %function
 544              	PWM_1_WritePeriod:
 545              	.LFB18:
 669:.\Generated_Source\PSoC4/PWM_1.c **** 
 670:.\Generated_Source\PSoC4/PWM_1.c **** 
 671:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 673:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM_1.c **** *
 675:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM_1.c **** *
 680:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM_1.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM_1.c **** *
 683:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 685:.\Generated_Source\PSoC4/PWM_1.c **** *
 686:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM_1.c **** {
 546              		.loc 1 688 0
 547              		.cfi_startproc
 548              	.LVL42:
 689:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_REG = (period & PWM_1_16BIT_MASK);
 549              		.loc 1 689 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/PWM_1.c **** }
 555              		.loc 1 690 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
 559 000a C046     		.align	2
 560              	.L41:
 561 000c 14012040 		.word	1075839252
 562              		.cfi_endproc
 563              	.LFE18:
 564              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 23


 565              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	PWM_1_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	PWM_1_ReadPeriod, %function
 571              	PWM_1_ReadPeriod:
 572              	.LFB19:
 691:.\Generated_Source\PSoC4/PWM_1.c **** 
 692:.\Generated_Source\PSoC4/PWM_1.c **** 
 693:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM_1.c **** *
 697:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM_1.c **** *
 700:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 702:.\Generated_Source\PSoC4/PWM_1.c **** *
 703:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM_1.c **** *
 706:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM_1.c **** {
 573              		.loc 1 708 0
 574              		.cfi_startproc
 709:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_REG & PWM_1_16BIT_MASK);
 575              		.loc 1 709 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 710:.\Generated_Source\PSoC4/PWM_1.c **** }
 580              		.loc 1 710 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 14012040 		.word	1075839252
 587              		.cfi_endproc
 588              	.LFE19:
 589              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 590              		.section	.text.PWM_1_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	PWM_1_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	PWM_1_SetCompareSwap, %function
 596              	PWM_1_SetCompareSwap:
 597              	.LFB20:
 711:.\Generated_Source\PSoC4/PWM_1.c **** 
 712:.\Generated_Source\PSoC4/PWM_1.c **** 
 713:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCompareSwap
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 24


 715:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM_1.c **** *
 717:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM_1.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM_1.c **** *
 723:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM_1.c **** *
 729:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 731:.\Generated_Source\PSoC4/PWM_1.c **** *
 732:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM_1.c **** {
 598              		.loc 1 734 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 735:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM_1.c **** 
 737:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 737 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 738:.\Generated_Source\PSoC4/PWM_1.c **** 
 739:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_CC_MASK;
 609              		.loc 1 739 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1968     		ldr	r1, [r3]
 612 000c 0122     		mov	r2, #1
 613 000e 9143     		bic	r1, r2
 614 0010 1960     		str	r1, [r3]
 740:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= (swapEnable & PWM_1_1BIT_MASK);
 615              		.loc 1 740 0
 616 0012 1968     		ldr	r1, [r3]
 617 0014 2240     		and	r2, r4
 618 0016 0A43     		orr	r2, r1
 619 0018 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/PWM_1.c **** 
 742:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 620              		.loc 1 742 0
 621 001a FFF7FEFF 		bl	CyExitCriticalSection
 622              	.LVL46:
 743:.\Generated_Source\PSoC4/PWM_1.c **** }
 623              		.loc 1 743 0
 624              		@ sp needed
 625              	.LVL47:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 25


 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 00012040 		.word	1075839232
 631              		.cfi_endproc
 632              	.LFE20:
 633              		.size	PWM_1_SetCompareSwap, .-PWM_1_SetCompareSwap
 634              		.section	.text.PWM_1_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_1_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_1_WritePeriodBuf, %function
 640              	PWM_1_WritePeriodBuf:
 641              	.LFB21:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c **** *
 750:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM_1.c **** *
 753:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM_1.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM_1.c **** *
 756:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 758:.\Generated_Source\PSoC4/PWM_1.c **** *
 759:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM_1.c **** {
 642              		.loc 1 761 0
 643              		.cfi_startproc
 644              	.LVL48:
 762:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_BUF_REG = (periodBuf & PWM_1_16BIT_MASK);
 645              		.loc 1 762 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/PWM_1.c **** }
 651              		.loc 1 763 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
 657 000c 18012040 		.word	1075839256
 658              		.cfi_endproc
 659              	.LFE21:
 660              		.size	PWM_1_WritePeriodBuf, .-PWM_1_WritePeriodBuf
 661              		.section	.text.PWM_1_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 26


 663              		.global	PWM_1_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	PWM_1_ReadPeriodBuf, %function
 667              	PWM_1_ReadPeriodBuf:
 668              	.LFB22:
 764:.\Generated_Source\PSoC4/PWM_1.c **** 
 765:.\Generated_Source\PSoC4/PWM_1.c **** 
 766:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM_1.c **** *
 770:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM_1.c **** *
 773:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 775:.\Generated_Source\PSoC4/PWM_1.c **** *
 776:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM_1.c **** *
 779:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM_1.c **** {
 669              		.loc 1 781 0
 670              		.cfi_startproc
 782:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_BUF_REG & PWM_1_16BIT_MASK);
 671              		.loc 1 782 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 783:.\Generated_Source\PSoC4/PWM_1.c **** }
 676              		.loc 1 783 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 18012040 		.word	1075839256
 683              		.cfi_endproc
 684              	.LFE22:
 685              		.size	PWM_1_ReadPeriodBuf, .-PWM_1_ReadPeriodBuf
 686              		.section	.text.PWM_1_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	PWM_1_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	PWM_1_SetPeriodSwap, %function
 692              	PWM_1_SetPeriodSwap:
 693              	.LFB23:
 784:.\Generated_Source\PSoC4/PWM_1.c **** 
 785:.\Generated_Source\PSoC4/PWM_1.c **** 
 786:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 27


 790:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM_1.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM_1.c **** *
 796:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM_1.c **** *
 802:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 804:.\Generated_Source\PSoC4/PWM_1.c **** *
 805:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM_1.c **** {
 694              		.loc 1 807 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 808:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM_1.c **** 
 810:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 810 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 811:.\Generated_Source\PSoC4/PWM_1.c **** 
 812:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_PERIOD_MASK;
 705              		.loc 1 812 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((swapEnable & PWM_1_1BIT_MASK) <<
 711              		.loc 1 813 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0121     		mov	r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 814:.\Generated_Source\PSoC4/PWM_1.c ****                                                             PWM_1_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM_1.c **** 
 816:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 816 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 817:.\Generated_Source\PSoC4/PWM_1.c **** }
 722              		.loc 1 817 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 28


 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 00012040 		.word	1075839232
 729              		.cfi_endproc
 730              	.LFE23:
 731              		.size	PWM_1_SetPeriodSwap, .-PWM_1_SetPeriodSwap
 732              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	PWM_1_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	PWM_1_WriteCompare, %function
 738              	PWM_1_WriteCompare:
 739              	.LFB24:
 818:.\Generated_Source\PSoC4/PWM_1.c **** 
 819:.\Generated_Source\PSoC4/PWM_1.c **** 
 820:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompare
 822:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM_1.c **** *
 824:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM_1.c **** *
 828:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM_1.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM_1.c **** *
 831:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 833:.\Generated_Source\PSoC4/PWM_1.c **** *
 834:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM_1.c **** {
 740              		.loc 1 836 0
 741              		.cfi_startproc
 742              	.LVL54:
 837:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM_1.c **** 
 841:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM_1.c **** 
 844:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM_1.c ****         {
 846:.\Generated_Source\PSoC4/PWM_1.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM_1.c ****         }
 848:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM_1.c ****         {
 850:.\Generated_Source\PSoC4/PWM_1.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM_1.c ****         }
 852:.\Generated_Source\PSoC4/PWM_1.c ****         else
 853:.\Generated_Source\PSoC4/PWM_1.c ****         {
 854:.\Generated_Source\PSoC4/PWM_1.c ****         }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 29


 855:.\Generated_Source\PSoC4/PWM_1.c ****         
 856:.\Generated_Source\PSoC4/PWM_1.c ****     
 857:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM_1.c ****     
 859:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_REG = (compare & PWM_1_16BIT_MASK);
 743              		.loc 1 859 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/PWM_1.c **** }
 749              		.loc 1 860 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 0C012040 		.word	1075839244
 756              		.cfi_endproc
 757              	.LFE24:
 758              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 759              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	PWM_1_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	PWM_1_ReadCompare, %function
 765              	PWM_1_ReadCompare:
 766              	.LFB25:
 861:.\Generated_Source\PSoC4/PWM_1.c **** 
 862:.\Generated_Source\PSoC4/PWM_1.c **** 
 863:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompare
 865:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM_1.c **** *
 867:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM_1.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM_1.c **** *
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM_1.c **** {
 767              		.loc 1 879 0
 768              		.cfi_startproc
 880:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM_1.c **** 
 885:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 30


 886:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM_1.c ****         
 888:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM_1.c ****         
 890:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM_1.c ****         {
 892:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM_1.c ****         }
 894:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM_1.c ****         {
 896:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM_1.c ****         }
 898:.\Generated_Source\PSoC4/PWM_1.c ****         else
 899:.\Generated_Source\PSoC4/PWM_1.c ****         {
 900:.\Generated_Source\PSoC4/PWM_1.c ****         }
 901:.\Generated_Source\PSoC4/PWM_1.c **** 
 902:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 904:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 769              		.loc 1 904 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 905:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM_1.c **** }
 774              		.loc 1 906 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 0C012040 		.word	1075839244
 781              		.cfi_endproc
 782              	.LFE25:
 783              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 784              		.section	.text.PWM_1_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	PWM_1_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	PWM_1_WriteCompareBuf, %function
 790              	PWM_1_WriteCompareBuf:
 791              	.LFB26:
 907:.\Generated_Source\PSoC4/PWM_1.c **** 
 908:.\Generated_Source\PSoC4/PWM_1.c **** 
 909:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM_1.c **** *
 913:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM_1.c **** *
 917:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM_1.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 31


 920:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 922:.\Generated_Source\PSoC4/PWM_1.c **** *
 923:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM_1.c **** {
 792              		.loc 1 925 0
 793              		.cfi_startproc
 794              	.LVL56:
 926:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM_1.c **** 
 930:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM_1.c **** 
 933:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM_1.c ****         {
 935:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM_1.c ****         }
 937:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM_1.c ****         {
 939:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM_1.c ****         }
 941:.\Generated_Source\PSoC4/PWM_1.c ****         else
 942:.\Generated_Source\PSoC4/PWM_1.c ****         {
 943:.\Generated_Source\PSoC4/PWM_1.c ****         }
 944:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM_1.c ****     
 946:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_BUF_REG = (compareBuf & PWM_1_16BIT_MASK);
 795              		.loc 1 946 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/PWM_1.c **** }
 801              		.loc 1 947 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 10012040 		.word	1075839248
 808              		.cfi_endproc
 809              	.LFE26:
 810              		.size	PWM_1_WriteCompareBuf, .-PWM_1_WriteCompareBuf
 811              		.section	.text.PWM_1_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	PWM_1_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	PWM_1_ReadCompareBuf, %function
 817              	PWM_1_ReadCompareBuf:
 818              	.LFB27:
 948:.\Generated_Source\PSoC4/PWM_1.c **** 
 949:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 32


 950:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM_1.c **** *
 954:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM_1.c **** *
 958:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 960:.\Generated_Source\PSoC4/PWM_1.c **** *
 961:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM_1.c **** *
 964:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM_1.c **** {
 819              		.loc 1 966 0
 820              		.cfi_startproc
 967:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM_1.c **** 
 972:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM_1.c **** 
 975:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM_1.c ****         
 977:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM_1.c ****         {
 979:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM_1.c ****         }
 981:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM_1.c ****         {
 983:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM_1.c ****         }
 985:.\Generated_Source\PSoC4/PWM_1.c ****         else
 986:.\Generated_Source\PSoC4/PWM_1.c ****         {
 987:.\Generated_Source\PSoC4/PWM_1.c ****         }
 988:.\Generated_Source\PSoC4/PWM_1.c **** 
 989:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 991:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 821              		.loc 1 991 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
 992:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM_1.c **** }
 826              		.loc 1 993 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 33


 832 000c 10012040 		.word	1075839248
 833              		.cfi_endproc
 834              	.LFE27:
 835              		.size	PWM_1_ReadCompareBuf, .-PWM_1_ReadCompareBuf
 836              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	PWM_1_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	PWM_1_ReadCapture, %function
 842              	PWM_1_ReadCapture:
 843              	.LFB28:
 994:.\Generated_Source\PSoC4/PWM_1.c **** 
 995:.\Generated_Source\PSoC4/PWM_1.c **** 
 996:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCapture
 998:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM_1.c **** *
1000:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM_1.c **** *
1004:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1006:.\Generated_Source\PSoC4/PWM_1.c **** *
1007:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM_1.c **** *
1010:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM_1.c **** {
 844              		.loc 1 1012 0
 845              		.cfi_startproc
1013:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 846              		.loc 1 1013 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1014:.\Generated_Source\PSoC4/PWM_1.c **** }
 851              		.loc 1 1014 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 0C012040 		.word	1075839244
 858              		.cfi_endproc
 859              	.LFE28:
 860              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 861              		.section	.text.PWM_1_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	PWM_1_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	PWM_1_ReadCaptureBuf, %function
 867              	PWM_1_ReadCaptureBuf:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 34


 868              	.LFB29:
1015:.\Generated_Source\PSoC4/PWM_1.c **** 
1016:.\Generated_Source\PSoC4/PWM_1.c **** 
1017:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM_1.c **** *
1021:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM_1.c **** *
1025:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1027:.\Generated_Source\PSoC4/PWM_1.c **** *
1028:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM_1.c **** *
1031:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM_1.c **** {
 869              		.loc 1 1033 0
 870              		.cfi_startproc
1034:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 871              		.loc 1 1034 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1035:.\Generated_Source\PSoC4/PWM_1.c **** }
 876              		.loc 1 1035 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 10012040 		.word	1075839248
 883              		.cfi_endproc
 884              	.LFE29:
 885              		.size	PWM_1_ReadCaptureBuf, .-PWM_1_ReadCaptureBuf
 886              		.section	.text.PWM_1_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	PWM_1_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	PWM_1_SetCaptureMode, %function
 892              	PWM_1_SetCaptureMode:
 893              	.LFB30:
1036:.\Generated_Source\PSoC4/PWM_1.c **** 
1037:.\Generated_Source\PSoC4/PWM_1.c **** 
1038:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM_1.c **** *
1042:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM_1.c **** *  Quadrature Decoder modes.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 35


1046:.\Generated_Source\PSoC4/PWM_1.c **** *
1047:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM_1.c **** *
1055:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1057:.\Generated_Source\PSoC4/PWM_1.c **** *
1058:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM_1.c **** {
 894              		.loc 1 1060 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
 901 0002 041C     		mov	r4, r0
1061:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM_1.c **** 
1063:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1063 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1064:.\Generated_Source\PSoC4/PWM_1.c **** 
1065:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_CAPTURE_MASK;
 905              		.loc 1 1065 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1066 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1067:.\Generated_Source\PSoC4/PWM_1.c **** 
1068:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1068 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1069:.\Generated_Source\PSoC4/PWM_1.c **** }
 919              		.loc 1 1069 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 24012040 		.word	1075839268
 926              		.cfi_endproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 36


 927              	.LFE30:
 928              		.size	PWM_1_SetCaptureMode, .-PWM_1_SetCaptureMode
 929              		.section	.text.PWM_1_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	PWM_1_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	PWM_1_SetReloadMode, %function
 935              	PWM_1_SetReloadMode:
 936              	.LFB31:
1070:.\Generated_Source\PSoC4/PWM_1.c **** 
1071:.\Generated_Source\PSoC4/PWM_1.c **** 
1072:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM_1.c **** *
1076:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM_1.c **** *
1080:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM_1.c **** *
1088:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1090:.\Generated_Source\PSoC4/PWM_1.c **** *
1091:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM_1.c **** {
 937              		.loc 1 1093 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1094:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM_1.c **** 
1096:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1096 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1097:.\Generated_Source\PSoC4/PWM_1.c **** 
1098:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_RELOAD_MASK;
 948              		.loc 1 1098 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_RELOAD_SHIFT));
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 37


 954              		.loc 1 1099 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1100:.\Generated_Source\PSoC4/PWM_1.c **** 
1101:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1101 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1102:.\Generated_Source\PSoC4/PWM_1.c **** }
 963              		.loc 1 1102 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 24012040 		.word	1075839268
 970              		.cfi_endproc
 971              	.LFE31:
 972              		.size	PWM_1_SetReloadMode, .-PWM_1_SetReloadMode
 973              		.section	.text.PWM_1_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	PWM_1_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	PWM_1_SetStartMode, %function
 979              	PWM_1_SetStartMode:
 980              	.LFB32:
1103:.\Generated_Source\PSoC4/PWM_1.c **** 
1104:.\Generated_Source\PSoC4/PWM_1.c **** 
1105:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStartMode
1107:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM_1.c **** *
1109:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM_1.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM_1.c **** *
1113:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM_1.c **** *
1121:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1123:.\Generated_Source\PSoC4/PWM_1.c **** *
1124:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM_1.c **** {
 981              		.loc 1 1126 0
 982              		.cfi_startproc
 983              	.LVL66:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 38


 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1127:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM_1.c **** 
1129:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1129 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1130:.\Generated_Source\PSoC4/PWM_1.c **** 
1131:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_START_MASK;
 992              		.loc 1 1131 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_START_SHIFT));
 998              		.loc 1 1132 0
 999 0012 1A68     		ldr	r2, [r3]
 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1133:.\Generated_Source\PSoC4/PWM_1.c **** 
1134:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1134 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1135:.\Generated_Source\PSoC4/PWM_1.c **** }
 1007              		.loc 1 1135 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 24012040 		.word	1075839268
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE32:
 1017              		.size	PWM_1_SetStartMode, .-PWM_1_SetStartMode
 1018              		.section	.text.PWM_1_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	PWM_1_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	PWM_1_SetStopMode, %function
 1024              	PWM_1_SetStopMode:
 1025              	.LFB33:
1136:.\Generated_Source\PSoC4/PWM_1.c **** 
1137:.\Generated_Source\PSoC4/PWM_1.c **** 
1138:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStopMode
1140:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 39


1142:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM_1.c **** *
1145:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM_1.c **** *
1153:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1155:.\Generated_Source\PSoC4/PWM_1.c **** *
1156:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM_1.c **** {
 1026              		.loc 1 1158 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1159:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM_1.c **** 
1161:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1161 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1162:.\Generated_Source\PSoC4/PWM_1.c **** 
1163:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_STOP_MASK;
 1037              		.loc 1 1163 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_STOP_SHIFT));
 1043              		.loc 1 1164 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1165:.\Generated_Source\PSoC4/PWM_1.c **** 
1166:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1166 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1167:.\Generated_Source\PSoC4/PWM_1.c **** }
 1052              		.loc 1 1167 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 40


 1057              	.L86:
 1058 0020 24012040 		.word	1075839268
 1059              		.cfi_endproc
 1060              	.LFE33:
 1061              		.size	PWM_1_SetStopMode, .-PWM_1_SetStopMode
 1062              		.section	.text.PWM_1_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	PWM_1_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	PWM_1_SetCountMode, %function
 1068              	PWM_1_SetCountMode:
 1069              	.LFB34:
1168:.\Generated_Source\PSoC4/PWM_1.c **** 
1169:.\Generated_Source\PSoC4/PWM_1.c **** 
1170:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCountMode
1172:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM_1.c **** *
1174:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM_1.c **** *
1178:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM_1.c **** *
1186:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1188:.\Generated_Source\PSoC4/PWM_1.c **** *
1189:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM_1.c **** {
 1070              		.loc 1 1191 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1192:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM_1.c **** 
1194:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1194 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1195:.\Generated_Source\PSoC4/PWM_1.c **** 
1196:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_COUNT_MASK;
 1081              		.loc 1 1196 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 41


 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_COUNT_SHIFT));
 1087              		.loc 1 1197 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1198:.\Generated_Source\PSoC4/PWM_1.c **** 
1199:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1199 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1200:.\Generated_Source\PSoC4/PWM_1.c **** }
 1096              		.loc 1 1200 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 24012040 		.word	1075839268
 1103              		.cfi_endproc
 1104              	.LFE34:
 1105              		.size	PWM_1_SetCountMode, .-PWM_1_SetCountMode
 1106              		.section	.text.PWM_1_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	PWM_1_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	PWM_1_TriggerCommand, %function
 1112              	PWM_1_TriggerCommand:
 1113              	.LFB35:
1201:.\Generated_Source\PSoC4/PWM_1.c **** 
1202:.\Generated_Source\PSoC4/PWM_1.c **** 
1203:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM_1.c **** *
1207:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM_1.c **** *
1212:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM_1.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM_1.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM_1.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM_1.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_START      - Trigger Start command
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 42


1225:.\Generated_Source\PSoC4/PWM_1.c **** *
1226:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1228:.\Generated_Source\PSoC4/PWM_1.c **** *
1229:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM_1.c **** {
 1114              		.loc 1 1231 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 051C     		mov	r5, r0
 1124 0004 0C1C     		mov	r4, r1
1232:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM_1.c **** 
1234:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1234 0
 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1235:.\Generated_Source\PSoC4/PWM_1.c **** 
1236:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1236 0
 1129 000a A540     		lsl	r5, r5, r4
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1D60     		str	r5, [r3]
1237:.\Generated_Source\PSoC4/PWM_1.c **** 
1238:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1238 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1239:.\Generated_Source\PSoC4/PWM_1.c **** }
 1136              		.loc 1 1239 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08002040 		.word	1075838984
 1144              		.cfi_endproc
 1145              	.LFE35:
 1146              		.size	PWM_1_TriggerCommand, .-PWM_1_TriggerCommand
 1147              		.section	.text.PWM_1_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	PWM_1_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	PWM_1_Enable, %function
 1153              	PWM_1_Enable:
 1154              	.LFB3:
 178:.\Generated_Source\PSoC4/PWM_1.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 43


 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG |= PWM_1_MASK;
 1164              		.loc 1 182 0
 1165 0006 064B     		ldr	r3, .L95
 1166 0008 1968     		ldr	r1, [r3]
 1167 000a 0122     		mov	r2, #1
 1168 000c 0A43     		orr	r2, r1
 1169 000e 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 188:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 1173              		.loc 1 188 0
 1174 0014 0120     		mov	r0, #1
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	PWM_1_TriggerCommand
 1177              	.LVL85:
 197:.\Generated_Source\PSoC4/PWM_1.c **** }
 1178              		.loc 1 197 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00002040 		.word	1075838976
 1185              		.cfi_endproc
 1186              	.LFE3:
 1187              		.size	PWM_1_Enable, .-PWM_1_Enable
 1188              		.section	.text.PWM_1_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	PWM_1_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	PWM_1_ReadStatus, %function
 1194              	PWM_1_ReadStatus:
 1195              	.LFB36:
1240:.\Generated_Source\PSoC4/PWM_1.c **** 
1241:.\Generated_Source\PSoC4/PWM_1.c **** 
1242:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadStatus
1244:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM_1.c **** *
1246:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the status of the PWM_1.
1248:.\Generated_Source\PSoC4/PWM_1.c **** *
1249:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM_1.c **** *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 44


1251:.\Generated_Source\PSoC4/PWM_1.c **** *
1252:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM_1.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM_1.c **** *
1258:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM_1.c **** {
 1196              		.loc 1 1260 0
 1197              		.cfi_startproc
1261:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1261 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1A68     		ldr	r2, [r3]
 1201 0004 920F     		lsr	r2, r2, #30
1262:.\Generated_Source\PSoC4/PWM_1.c ****             (PWM_1_STATUS_REG & PWM_1_STATUS_DOWN));
 1202              		.loc 1 1262 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
1261:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1261 0
 1207 000c 1043     		orr	r0, r2
1263:.\Generated_Source\PSoC4/PWM_1.c **** }
 1208              		.loc 1 1263 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 04012040 		.word	1075839236
 1215              		.cfi_endproc
 1216              	.LFE36:
 1217              		.size	PWM_1_ReadStatus, .-PWM_1_ReadStatus
 1218              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	PWM_1_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	PWM_1_SetInterruptMode, %function
 1224              	PWM_1_SetInterruptMode:
 1225              	.LFB37:
1264:.\Generated_Source\PSoC4/PWM_1.c **** 
1265:.\Generated_Source\PSoC4/PWM_1.c **** 
1266:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM_1.c **** *
1270:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM_1.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM_1.c **** *
1274:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 45


1277:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM_1.c **** *
1280:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1282:.\Generated_Source\PSoC4/PWM_1.c **** *
1283:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM_1.c **** {
 1226              		.loc 1 1285 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1286:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1286 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1287:.\Generated_Source\PSoC4/PWM_1.c **** }
 1232              		.loc 1 1287 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
 1237              	.L101:
 1238 0008 38012040 		.word	1075839288
 1239              		.cfi_endproc
 1240              	.LFE37:
 1241              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 1242              		.section	.text.PWM_1_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	PWM_1_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	PWM_1_Init, %function
 1248              	PWM_1_Init:
 1249              	.LFB2:
  39:.\Generated_Source\PSoC4/PWM_1.c **** {
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 10B5     		push	{r4, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
  89:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_PWM_BASE_CONFIG;
 1256              		.loc 1 89 0
 1257 0002 0E4C     		ldr	r4, .L104
 1258 0004 8023     		mov	r3, #128
 1259 0006 DB04     		lsl	r3, r3, #19
 1260 0008 2360     		str	r3, [r4]
  95:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_ALIGN | PWM_1_CTRL_PWM_KILL_EVENT;
 1261              		.loc 1 95 0
 1262 000a 2368     		ldr	r3, [r4]
 1263 000c 2360     		str	r3, [r4]
 103:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(0u);
 1264              		.loc 1 103 0
 1265 000e 0020     		mov	r0, #0
 1266 0010 FFF7FEFF 		bl	PWM_1_WriteCounter
 1267              	.LVL87:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 46


 112:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_PRESCALER;
 1268              		.loc 1 112 0
 1269 0014 2368     		ldr	r3, [r4]
 1270 0016 2360     		str	r3, [r4]
 116:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_PWM_SIGNALS_MODES;
 1271              		.loc 1 116 0
 1272 0018 0C22     		mov	r2, #12
 1273 001a 094B     		ldr	r3, .L104+4
 1274 001c 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_PWM_INTERRUPT_MASK);
 1275              		.loc 1 119 0
 1276 001e 0120     		mov	r0, #1
 1277 0020 FFF7FEFF 		bl	PWM_1_SetInterruptMode
 1278              	.LVL88:
 129:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_LEFT;
 1279              		.loc 1 129 0
 1280 0024 3122     		mov	r2, #49
 1281 0026 074B     		ldr	r3, .L104+8
 1282 0028 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_PWM_PERIOD_VALUE );
 1283              		.loc 1 146 0
 1284 002a FA20     		mov	r0, #250
 1285 002c 8000     		lsl	r0, r0, #2
 1286 002e FFF7FEFF 		bl	PWM_1_WritePeriod
 1287              	.LVL89:
 147:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCompare(PWM_1_PWM_COMPARE_VALUE);
 1288              		.loc 1 147 0
 1289 0032 0020     		mov	r0, #0
 1290 0034 FFF7FEFF 		bl	PWM_1_WriteCompare
 1291              	.LVL90:
 160:.\Generated_Source\PSoC4/PWM_1.c **** }
 1292              		.loc 1 160 0
 1293              		@ sp needed
 1294 0038 10BD     		pop	{r4, pc}
 1295              	.L105:
 1296 003a C046     		.align	2
 1297              	.L104:
 1298 003c 00012040 		.word	1075839232
 1299 0040 24012040 		.word	1075839268
 1300 0044 28012040 		.word	1075839272
 1301              		.cfi_endproc
 1302              	.LFE2:
 1303              		.size	PWM_1_Init, .-PWM_1_Init
 1304              		.section	.text.PWM_1_Start,"ax",%progbits
 1305              		.align	2
 1306              		.global	PWM_1_Start
 1307              		.code	16
 1308              		.thumb_func
 1309              		.type	PWM_1_Start, %function
 1310              	PWM_1_Start:
 1311              	.LFB4:
 225:.\Generated_Source\PSoC4/PWM_1.c **** {
 1312              		.loc 1 225 0
 1313              		.cfi_startproc
 1314 0000 08B5     		push	{r3, lr}
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 3, -8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 47


 1317              		.cfi_offset 14, -4
 226:.\Generated_Source\PSoC4/PWM_1.c ****     if (0u == PWM_1_initVar)
 1318              		.loc 1 226 0
 1319 0002 064B     		ldr	r3, .L108
 1320 0004 1B78     		ldrb	r3, [r3]
 1321 0006 002B     		cmp	r3, #0
 1322 0008 04D1     		bne	.L107
 228:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
 1323              		.loc 1 228 0
 1324 000a FFF7FEFF 		bl	PWM_1_Init
 1325              	.LVL91:
 229:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 1326              		.loc 1 229 0
 1327 000e 0122     		mov	r2, #1
 1328 0010 024B     		ldr	r3, .L108
 1329 0012 1A70     		strb	r2, [r3]
 1330              	.L107:
 232:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
 1331              		.loc 1 232 0
 1332 0014 FFF7FEFF 		bl	PWM_1_Enable
 1333              	.LVL92:
 233:.\Generated_Source\PSoC4/PWM_1.c **** }
 1334              		.loc 1 233 0
 1335              		@ sp needed
 1336 0018 08BD     		pop	{r3, pc}
 1337              	.L109:
 1338 001a C046     		.align	2
 1339              	.L108:
 1340 001c 00000000 		.word	.LANCHOR0
 1341              		.cfi_endproc
 1342              	.LFE4:
 1343              		.size	PWM_1_Start, .-PWM_1_Start
 1344              		.section	.text.PWM_1_GetInterruptSourceMasked,"ax",%progbits
 1345              		.align	2
 1346              		.global	PWM_1_GetInterruptSourceMasked
 1347              		.code	16
 1348              		.thumb_func
 1349              		.type	PWM_1_GetInterruptSourceMasked, %function
 1350              	PWM_1_GetInterruptSourceMasked:
 1351              	.LFB38:
1288:.\Generated_Source\PSoC4/PWM_1.c **** 
1289:.\Generated_Source\PSoC4/PWM_1.c **** 
1290:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM_1.c **** *
1294:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM_1.c **** *
1297:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM_1.c **** *   None
1299:.\Generated_Source\PSoC4/PWM_1.c **** *
1300:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM_1.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 48


1305:.\Generated_Source\PSoC4/PWM_1.c **** *
1306:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM_1.c **** {
 1352              		.loc 1 1308 0
 1353              		.cfi_startproc
1309:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_MASKED_REG);
 1354              		.loc 1 1309 0
 1355 0000 014B     		ldr	r3, .L111
 1356 0002 1868     		ldr	r0, [r3]
1310:.\Generated_Source\PSoC4/PWM_1.c **** }
 1357              		.loc 1 1310 0
 1358              		@ sp needed
 1359 0004 7047     		bx	lr
 1360              	.L112:
 1361 0006 C046     		.align	2
 1362              	.L111:
 1363 0008 3C012040 		.word	1075839292
 1364              		.cfi_endproc
 1365              	.LFE38:
 1366              		.size	PWM_1_GetInterruptSourceMasked, .-PWM_1_GetInterruptSourceMasked
 1367              		.section	.text.PWM_1_GetInterruptSource,"ax",%progbits
 1368              		.align	2
 1369              		.global	PWM_1_GetInterruptSource
 1370              		.code	16
 1371              		.thumb_func
 1372              		.type	PWM_1_GetInterruptSource, %function
 1373              	PWM_1_GetInterruptSource:
 1374              	.LFB39:
1311:.\Generated_Source\PSoC4/PWM_1.c **** 
1312:.\Generated_Source\PSoC4/PWM_1.c **** 
1313:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM_1.c **** *
1317:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM_1.c **** *
1320:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1322:.\Generated_Source\PSoC4/PWM_1.c **** *
1323:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM_1.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM_1.c **** *
1329:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM_1.c **** {
 1375              		.loc 1 1331 0
 1376              		.cfi_startproc
1332:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_REQ_REG);
 1377              		.loc 1 1332 0
 1378 0000 014B     		ldr	r3, .L114
 1379 0002 1868     		ldr	r0, [r3]
1333:.\Generated_Source\PSoC4/PWM_1.c **** }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 49


 1380              		.loc 1 1333 0
 1381              		@ sp needed
 1382 0004 7047     		bx	lr
 1383              	.L115:
 1384 0006 C046     		.align	2
 1385              	.L114:
 1386 0008 30012040 		.word	1075839280
 1387              		.cfi_endproc
 1388              	.LFE39:
 1389              		.size	PWM_1_GetInterruptSource, .-PWM_1_GetInterruptSource
 1390              		.section	.text.PWM_1_ClearInterrupt,"ax",%progbits
 1391              		.align	2
 1392              		.global	PWM_1_ClearInterrupt
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	PWM_1_ClearInterrupt, %function
 1396              	PWM_1_ClearInterrupt:
 1397              	.LFB40:
1334:.\Generated_Source\PSoC4/PWM_1.c **** 
1335:.\Generated_Source\PSoC4/PWM_1.c **** 
1336:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM_1.c **** *
1340:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM_1.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM_1.c **** *
1343:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM_1.c **** *
1349:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1351:.\Generated_Source\PSoC4/PWM_1.c **** *
1352:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM_1.c **** {
 1398              		.loc 1 1354 0
 1399              		.cfi_startproc
 1400              	.LVL93:
1355:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_REQ_REG = interruptMask;
 1401              		.loc 1 1355 0
 1402 0000 014B     		ldr	r3, .L117
 1403 0002 1860     		str	r0, [r3]
1356:.\Generated_Source\PSoC4/PWM_1.c **** }
 1404              		.loc 1 1356 0
 1405              		@ sp needed
 1406 0004 7047     		bx	lr
 1407              	.L118:
 1408 0006 C046     		.align	2
 1409              	.L117:
 1410 0008 30012040 		.word	1075839280
 1411              		.cfi_endproc
 1412              	.LFE40:
 1413              		.size	PWM_1_ClearInterrupt, .-PWM_1_ClearInterrupt
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 50


 1414              		.section	.text.PWM_1_SetInterrupt,"ax",%progbits
 1415              		.align	2
 1416              		.global	PWM_1_SetInterrupt
 1417              		.code	16
 1418              		.thumb_func
 1419              		.type	PWM_1_SetInterrupt, %function
 1420              	PWM_1_SetInterrupt:
 1421              	.LFB41:
1357:.\Generated_Source\PSoC4/PWM_1.c **** 
1358:.\Generated_Source\PSoC4/PWM_1.c **** 
1359:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM_1.c **** *
1363:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM_1.c **** *
1366:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM_1.c **** *
1372:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1374:.\Generated_Source\PSoC4/PWM_1.c **** *
1375:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM_1.c **** {
 1422              		.loc 1 1377 0
 1423              		.cfi_startproc
 1424              	.LVL94:
1378:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_SET_REG = interruptMask;
 1425              		.loc 1 1378 0
 1426 0000 014B     		ldr	r3, .L120
 1427 0002 1860     		str	r0, [r3]
1379:.\Generated_Source\PSoC4/PWM_1.c **** }
 1428              		.loc 1 1379 0
 1429              		@ sp needed
 1430 0004 7047     		bx	lr
 1431              	.L121:
 1432 0006 C046     		.align	2
 1433              	.L120:
 1434 0008 34012040 		.word	1075839284
 1435              		.cfi_endproc
 1436              	.LFE41:
 1437              		.size	PWM_1_SetInterrupt, .-PWM_1_SetInterrupt
 1438              		.global	PWM_1_initVar
 1439              		.bss
 1440              		.set	.LANCHOR0,. + 0
 1441              		.type	PWM_1_initVar, %object
 1442              		.size	PWM_1_initVar, 1
 1443              	PWM_1_initVar:
 1444 0000 00       		.space	1
 1445              		.text
 1446              	.Letext0:
 1447              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 51


 1448              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1449              		.section	.debug_info,"",%progbits
 1450              	.Ldebug_info0:
 1451 0000 FC080000 		.4byte	0x8fc
 1452 0004 0400     		.2byte	0x4
 1453 0006 00000000 		.4byte	.Ldebug_abbrev0
 1454 000a 04       		.byte	0x4
 1455 000b 01       		.uleb128 0x1
 1456 000c 6E000000 		.4byte	.LASF76
 1457 0010 01       		.byte	0x1
 1458 0011 D4020000 		.4byte	.LASF77
 1459 0015 4D030000 		.4byte	.LASF78
 1460 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1461 001d 00000000 		.4byte	0
 1462 0021 00000000 		.4byte	.Ldebug_line0
 1463 0025 02       		.uleb128 0x2
 1464 0026 01       		.byte	0x1
 1465 0027 06       		.byte	0x6
 1466 0028 4C010000 		.4byte	.LASF0
 1467 002c 02       		.uleb128 0x2
 1468 002d 01       		.byte	0x1
 1469 002e 08       		.byte	0x8
 1470 002f EB030000 		.4byte	.LASF1
 1471 0033 02       		.uleb128 0x2
 1472 0034 02       		.byte	0x2
 1473 0035 05       		.byte	0x5
 1474 0036 34040000 		.4byte	.LASF2
 1475 003a 02       		.uleb128 0x2
 1476 003b 02       		.byte	0x2
 1477 003c 07       		.byte	0x7
 1478 003d 53020000 		.4byte	.LASF3
 1479 0041 02       		.uleb128 0x2
 1480 0042 04       		.byte	0x4
 1481 0043 05       		.byte	0x5
 1482 0044 7E010000 		.4byte	.LASF4
 1483 0048 02       		.uleb128 0x2
 1484 0049 04       		.byte	0x4
 1485 004a 07       		.byte	0x7
 1486 004b FD010000 		.4byte	.LASF5
 1487 004f 02       		.uleb128 0x2
 1488 0050 08       		.byte	0x8
 1489 0051 05       		.byte	0x5
 1490 0052 3E010000 		.4byte	.LASF6
 1491 0056 02       		.uleb128 0x2
 1492 0057 08       		.byte	0x8
 1493 0058 07       		.byte	0x7
 1494 0059 EA000000 		.4byte	.LASF7
 1495 005d 03       		.uleb128 0x3
 1496 005e 04       		.byte	0x4
 1497 005f 05       		.byte	0x5
 1498 0060 696E7400 		.ascii	"int\000"
 1499 0064 02       		.uleb128 0x2
 1500 0065 04       		.byte	0x4
 1501 0066 07       		.byte	0x7
 1502 0067 DA010000 		.4byte	.LASF8
 1503 006b 04       		.uleb128 0x4
 1504 006c 87010000 		.4byte	.LASF9
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 52


 1505 0070 02       		.byte	0x2
 1506 0071 C1       		.byte	0xc1
 1507 0072 2C000000 		.4byte	0x2c
 1508 0076 04       		.uleb128 0x4
 1509 0077 B9010000 		.4byte	.LASF10
 1510 007b 02       		.byte	0x2
 1511 007c C3       		.byte	0xc3
 1512 007d 48000000 		.4byte	0x48
 1513 0081 02       		.uleb128 0x2
 1514 0082 04       		.byte	0x4
 1515 0083 04       		.byte	0x4
 1516 0084 A1030000 		.4byte	.LASF11
 1517 0088 02       		.uleb128 0x2
 1518 0089 08       		.byte	0x8
 1519 008a 04       		.byte	0x4
 1520 008b 8D010000 		.4byte	.LASF12
 1521 008f 02       		.uleb128 0x2
 1522 0090 01       		.byte	0x1
 1523 0091 08       		.byte	0x8
 1524 0092 89040000 		.4byte	.LASF13
 1525 0096 05       		.uleb128 0x5
 1526 0097 8C020000 		.4byte	.LASF14
 1527 009b 02       		.byte	0x2
 1528 009c 6D01     		.2byte	0x16d
 1529 009e A2000000 		.4byte	0xa2
 1530 00a2 06       		.uleb128 0x6
 1531 00a3 76000000 		.4byte	0x76
 1532 00a7 02       		.uleb128 0x2
 1533 00a8 04       		.byte	0x4
 1534 00a9 07       		.byte	0x7
 1535 00aa BC020000 		.4byte	.LASF15
 1536 00ae 07       		.uleb128 0x7
 1537 00af 1C000000 		.4byte	.LASF16
 1538 00b3 01       		.byte	0x1
 1539 00b4 FA       		.byte	0xfa
 1540 00b5 00000000 		.4byte	.LFB5
 1541 00b9 1C000000 		.4byte	.LFE5-.LFB5
 1542 00bd 01       		.uleb128 0x1
 1543 00be 9C       		.byte	0x9c
 1544 00bf E5000000 		.4byte	0xe5
 1545 00c3 08       		.uleb128 0x8
 1546 00c4 1D050000 		.4byte	.LASF18
 1547 00c8 01       		.byte	0x1
 1548 00c9 FC       		.byte	0xfc
 1549 00ca 6B000000 		.4byte	0x6b
 1550 00ce 00000000 		.4byte	.LLST0
 1551 00d2 09       		.uleb128 0x9
 1552 00d3 06000000 		.4byte	.LVL0
 1553 00d7 E7080000 		.4byte	0x8e7
 1554 00db 09       		.uleb128 0x9
 1555 00dc 14000000 		.4byte	.LVL1
 1556 00e0 F2080000 		.4byte	0x8f2
 1557 00e4 00       		.byte	0
 1558 00e5 0A       		.uleb128 0xa
 1559 00e6 E7010000 		.4byte	.LASF17
 1560 00ea 01       		.byte	0x1
 1561 00eb 1F01     		.2byte	0x11f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 53


 1562 00ed 00000000 		.4byte	.LFB6
 1563 00f1 28000000 		.4byte	.LFE6-.LFB6
 1564 00f5 01       		.uleb128 0x1
 1565 00f6 9C       		.byte	0x9c
 1566 00f7 2E010000 		.4byte	0x12e
 1567 00fb 0B       		.uleb128 0xb
 1568 00fc 8E040000 		.4byte	.LASF20
 1569 0100 01       		.byte	0x1
 1570 0101 1F01     		.2byte	0x11f
 1571 0103 76000000 		.4byte	0x76
 1572 0107 13000000 		.4byte	.LLST1
 1573 010b 0C       		.uleb128 0xc
 1574 010c 1D050000 		.4byte	.LASF18
 1575 0110 01       		.byte	0x1
 1576 0111 2101     		.2byte	0x121
 1577 0113 6B000000 		.4byte	0x6b
 1578 0117 3F000000 		.4byte	.LLST2
 1579 011b 09       		.uleb128 0x9
 1580 011c 08000000 		.4byte	.LVL3
 1581 0120 E7080000 		.4byte	0x8e7
 1582 0124 09       		.uleb128 0x9
 1583 0125 1C000000 		.4byte	.LVL5
 1584 0129 F2080000 		.4byte	0x8f2
 1585 012d 00       		.byte	0
 1586 012e 0A       		.uleb128 0xa
 1587 012f 63050000 		.4byte	.LASF19
 1588 0133 01       		.byte	0x1
 1589 0134 4001     		.2byte	0x140
 1590 0136 00000000 		.4byte	.LFB7
 1591 013a 28000000 		.4byte	.LFE7-.LFB7
 1592 013e 01       		.uleb128 0x1
 1593 013f 9C       		.byte	0x9c
 1594 0140 77010000 		.4byte	0x177
 1595 0144 0B       		.uleb128 0xb
 1596 0145 01010000 		.4byte	.LASF21
 1597 0149 01       		.byte	0x1
 1598 014a 4001     		.2byte	0x140
 1599 014c 76000000 		.4byte	0x76
 1600 0150 52000000 		.4byte	.LLST3
 1601 0154 0C       		.uleb128 0xc
 1602 0155 1D050000 		.4byte	.LASF18
 1603 0159 01       		.byte	0x1
 1604 015a 4201     		.2byte	0x142
 1605 015c 6B000000 		.4byte	0x6b
 1606 0160 7E000000 		.4byte	.LLST4
 1607 0164 09       		.uleb128 0x9
 1608 0165 08000000 		.4byte	.LVL7
 1609 0169 E7080000 		.4byte	0x8e7
 1610 016d 09       		.uleb128 0x9
 1611 016e 1C000000 		.4byte	.LVL9
 1612 0172 F2080000 		.4byte	0x8f2
 1613 0176 00       		.byte	0
 1614 0177 0A       		.uleb128 0xa
 1615 0178 A8040000 		.4byte	.LASF22
 1616 017c 01       		.byte	0x1
 1617 017d 6501     		.2byte	0x165
 1618 017f 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 54


 1619 0183 28000000 		.4byte	.LFE8-.LFB8
 1620 0187 01       		.uleb128 0x1
 1621 0188 9C       		.byte	0x9c
 1622 0189 C0010000 		.4byte	0x1c0
 1623 018d 0B       		.uleb128 0xb
 1624 018e A7030000 		.4byte	.LASF23
 1625 0192 01       		.byte	0x1
 1626 0193 6501     		.2byte	0x165
 1627 0195 76000000 		.4byte	0x76
 1628 0199 91000000 		.4byte	.LLST5
 1629 019d 0C       		.uleb128 0xc
 1630 019e 1D050000 		.4byte	.LASF18
 1631 01a2 01       		.byte	0x1
 1632 01a3 6701     		.2byte	0x167
 1633 01a5 6B000000 		.4byte	0x6b
 1634 01a9 BD000000 		.4byte	.LLST6
 1635 01ad 09       		.uleb128 0x9
 1636 01ae 08000000 		.4byte	.LVL11
 1637 01b2 E7080000 		.4byte	0x8e7
 1638 01b6 09       		.uleb128 0x9
 1639 01b7 1C000000 		.4byte	.LVL13
 1640 01bb F2080000 		.4byte	0x8f2
 1641 01bf 00       		.byte	0
 1642 01c0 0A       		.uleb128 0xa
 1643 01c1 08010000 		.4byte	.LASF24
 1644 01c5 01       		.byte	0x1
 1645 01c6 8501     		.2byte	0x185
 1646 01c8 00000000 		.4byte	.LFB9
 1647 01cc 2C000000 		.4byte	.LFE9-.LFB9
 1648 01d0 01       		.uleb128 0x1
 1649 01d1 9C       		.byte	0x9c
 1650 01d2 09020000 		.4byte	0x209
 1651 01d6 0B       		.uleb128 0xb
 1652 01d7 66020000 		.4byte	.LASF25
 1653 01db 01       		.byte	0x1
 1654 01dc 8501     		.2byte	0x185
 1655 01de 76000000 		.4byte	0x76
 1656 01e2 D0000000 		.4byte	.LLST7
 1657 01e6 0C       		.uleb128 0xc
 1658 01e7 1D050000 		.4byte	.LASF18
 1659 01eb 01       		.byte	0x1
 1660 01ec 8701     		.2byte	0x187
 1661 01ee 6B000000 		.4byte	0x6b
 1662 01f2 FC000000 		.4byte	.LLST8
 1663 01f6 09       		.uleb128 0x9
 1664 01f7 08000000 		.4byte	.LVL15
 1665 01fb E7080000 		.4byte	0x8e7
 1666 01ff 09       		.uleb128 0x9
 1667 0200 22000000 		.4byte	.LVL17
 1668 0204 F2080000 		.4byte	0x8f2
 1669 0208 00       		.byte	0
 1670 0209 0A       		.uleb128 0xa
 1671 020a FD020000 		.4byte	.LASF26
 1672 020e 01       		.byte	0x1
 1673 020f BB01     		.2byte	0x1bb
 1674 0211 00000000 		.4byte	.LFB10
 1675 0215 10000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 55


 1676 0219 01       		.uleb128 0x1
 1677 021a 9C       		.byte	0x9c
 1678 021b 30020000 		.4byte	0x230
 1679 021f 0B       		.uleb128 0xb
 1680 0220 0F020000 		.4byte	.LASF27
 1681 0224 01       		.byte	0x1
 1682 0225 BB01     		.2byte	0x1bb
 1683 0227 76000000 		.4byte	0x76
 1684 022b 0F010000 		.4byte	.LLST9
 1685 022f 00       		.byte	0
 1686 0230 0A       		.uleb128 0xa
 1687 0231 0E040000 		.4byte	.LASF28
 1688 0235 01       		.byte	0x1
 1689 0236 DF01     		.2byte	0x1df
 1690 0238 00000000 		.4byte	.LFB11
 1691 023c 28000000 		.4byte	.LFE11-.LFB11
 1692 0240 01       		.uleb128 0x1
 1693 0241 9C       		.byte	0x9c
 1694 0242 79020000 		.4byte	0x279
 1695 0246 0B       		.uleb128 0xb
 1696 0247 C5020000 		.4byte	.LASF29
 1697 024b 01       		.byte	0x1
 1698 024c DF01     		.2byte	0x1df
 1699 024e 76000000 		.4byte	0x76
 1700 0252 30010000 		.4byte	.LLST10
 1701 0256 0C       		.uleb128 0xc
 1702 0257 1D050000 		.4byte	.LASF18
 1703 025b 01       		.byte	0x1
 1704 025c E101     		.2byte	0x1e1
 1705 025e 6B000000 		.4byte	0x6b
 1706 0262 5C010000 		.4byte	.LLST11
 1707 0266 09       		.uleb128 0x9
 1708 0267 08000000 		.4byte	.LVL21
 1709 026b E7080000 		.4byte	0x8e7
 1710 026f 09       		.uleb128 0x9
 1711 0270 22000000 		.4byte	.LVL23
 1712 0274 F2080000 		.4byte	0x8f2
 1713 0278 00       		.byte	0
 1714 0279 0A       		.uleb128 0xa
 1715 027a A5020000 		.4byte	.LASF30
 1716 027e 01       		.byte	0x1
 1717 027f 0102     		.2byte	0x201
 1718 0281 00000000 		.4byte	.LFB12
 1719 0285 28000000 		.4byte	.LFE12-.LFB12
 1720 0289 01       		.uleb128 0x1
 1721 028a 9C       		.byte	0x9c
 1722 028b C2020000 		.4byte	0x2c2
 1723 028f 0B       		.uleb128 0xb
 1724 0290 23040000 		.4byte	.LASF31
 1725 0294 01       		.byte	0x1
 1726 0295 0102     		.2byte	0x201
 1727 0297 76000000 		.4byte	0x76
 1728 029b 6F010000 		.4byte	.LLST12
 1729 029f 0C       		.uleb128 0xc
 1730 02a0 1D050000 		.4byte	.LASF18
 1731 02a4 01       		.byte	0x1
 1732 02a5 0302     		.2byte	0x203
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 56


 1733 02a7 6B000000 		.4byte	0x6b
 1734 02ab 9B010000 		.4byte	.LLST13
 1735 02af 09       		.uleb128 0x9
 1736 02b0 08000000 		.4byte	.LVL25
 1737 02b4 E7080000 		.4byte	0x8e7
 1738 02b8 09       		.uleb128 0x9
 1739 02b9 22000000 		.4byte	.LVL27
 1740 02bd F2080000 		.4byte	0x8f2
 1741 02c1 00       		.byte	0
 1742 02c2 0A       		.uleb128 0xa
 1743 02c3 F9030000 		.4byte	.LASF32
 1744 02c7 01       		.byte	0x1
 1745 02c8 2202     		.2byte	0x222
 1746 02ca 00000000 		.4byte	.LFB13
 1747 02ce 2C000000 		.4byte	.LFE13-.LFB13
 1748 02d2 01       		.uleb128 0x1
 1749 02d3 9C       		.byte	0x9c
 1750 02d4 0B030000 		.4byte	0x30b
 1751 02d8 0B       		.uleb128 0xb
 1752 02d9 D1010000 		.4byte	.LASF33
 1753 02dd 01       		.byte	0x1
 1754 02de 2202     		.2byte	0x222
 1755 02e0 76000000 		.4byte	0x76
 1756 02e4 AE010000 		.4byte	.LLST14
 1757 02e8 0C       		.uleb128 0xc
 1758 02e9 1D050000 		.4byte	.LASF18
 1759 02ed 01       		.byte	0x1
 1760 02ee 2402     		.2byte	0x224
 1761 02f0 6B000000 		.4byte	0x6b
 1762 02f4 DA010000 		.4byte	.LLST15
 1763 02f8 09       		.uleb128 0x9
 1764 02f9 08000000 		.4byte	.LVL29
 1765 02fd E7080000 		.4byte	0x8e7
 1766 0301 09       		.uleb128 0x9
 1767 0302 20000000 		.4byte	.LVL31
 1768 0306 F2080000 		.4byte	0x8f2
 1769 030a 00       		.byte	0
 1770 030b 0A       		.uleb128 0xa
 1771 030c C5030000 		.4byte	.LASF34
 1772 0310 01       		.byte	0x1
 1773 0311 4302     		.2byte	0x243
 1774 0313 00000000 		.4byte	.LFB14
 1775 0317 28000000 		.4byte	.LFE14-.LFB14
 1776 031b 01       		.uleb128 0x1
 1777 031c 9C       		.byte	0x9c
 1778 031d 54030000 		.4byte	0x354
 1779 0321 0B       		.uleb128 0xb
 1780 0322 CC010000 		.4byte	.LASF35
 1781 0326 01       		.byte	0x1
 1782 0327 4302     		.2byte	0x243
 1783 0329 76000000 		.4byte	0x76
 1784 032d ED010000 		.4byte	.LLST16
 1785 0331 0C       		.uleb128 0xc
 1786 0332 1D050000 		.4byte	.LASF18
 1787 0336 01       		.byte	0x1
 1788 0337 4502     		.2byte	0x245
 1789 0339 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 57


 1790 033d 19020000 		.4byte	.LLST17
 1791 0341 09       		.uleb128 0x9
 1792 0342 08000000 		.4byte	.LVL33
 1793 0346 E7080000 		.4byte	0x8e7
 1794 034a 09       		.uleb128 0x9
 1795 034b 1C000000 		.4byte	.LVL35
 1796 034f F2080000 		.4byte	0x8f2
 1797 0353 00       		.byte	0
 1798 0354 0A       		.uleb128 0xa
 1799 0355 92020000 		.4byte	.LASF36
 1800 0359 01       		.byte	0x1
 1801 035a 6102     		.2byte	0x261
 1802 035c 00000000 		.4byte	.LFB15
 1803 0360 10000000 		.4byte	.LFE15-.LFB15
 1804 0364 01       		.uleb128 0x1
 1805 0365 9C       		.byte	0x9c
 1806 0366 7B030000 		.4byte	0x37b
 1807 036a 0B       		.uleb128 0xb
 1808 036b 00000000 		.4byte	.LASF37
 1809 036f 01       		.byte	0x1
 1810 0370 6102     		.2byte	0x261
 1811 0372 76000000 		.4byte	0x76
 1812 0376 2C020000 		.4byte	.LLST18
 1813 037a 00       		.byte	0
 1814 037b 0D       		.uleb128 0xd
 1815 037c 94010000 		.4byte	.LASF42
 1816 0380 01       		.byte	0x1
 1817 0381 7502     		.2byte	0x275
 1818 0383 76000000 		.4byte	0x76
 1819 0387 00000000 		.4byte	.LFB16
 1820 038b 10000000 		.4byte	.LFE16-.LFB16
 1821 038f 01       		.uleb128 0x1
 1822 0390 9C       		.byte	0x9c
 1823 0391 0A       		.uleb128 0xa
 1824 0392 0E030000 		.4byte	.LASF38
 1825 0396 01       		.byte	0x1
 1826 0397 9202     		.2byte	0x292
 1827 0399 00000000 		.4byte	.LFB17
 1828 039d 28000000 		.4byte	.LFE17-.LFB17
 1829 03a1 01       		.uleb128 0x1
 1830 03a2 9C       		.byte	0x9c
 1831 03a3 DA030000 		.4byte	0x3da
 1832 03a7 0B       		.uleb128 0xb
 1833 03a8 E6040000 		.4byte	.LASF39
 1834 03ac 01       		.byte	0x1
 1835 03ad 9202     		.2byte	0x292
 1836 03af 76000000 		.4byte	0x76
 1837 03b3 4D020000 		.4byte	.LLST19
 1838 03b7 0C       		.uleb128 0xc
 1839 03b8 1D050000 		.4byte	.LASF18
 1840 03bc 01       		.byte	0x1
 1841 03bd 9402     		.2byte	0x294
 1842 03bf 6B000000 		.4byte	0x6b
 1843 03c3 79020000 		.4byte	.LLST20
 1844 03c7 09       		.uleb128 0x9
 1845 03c8 08000000 		.4byte	.LVL39
 1846 03cc E7080000 		.4byte	0x8e7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 58


 1847 03d0 09       		.uleb128 0x9
 1848 03d1 1C000000 		.4byte	.LVL41
 1849 03d5 F2080000 		.4byte	0x8f2
 1850 03d9 00       		.byte	0
 1851 03da 0A       		.uleb128 0xa
 1852 03db 2E050000 		.4byte	.LASF40
 1853 03df 01       		.byte	0x1
 1854 03e0 AF02     		.2byte	0x2af
 1855 03e2 00000000 		.4byte	.LFB18
 1856 03e6 10000000 		.4byte	.LFE18-.LFB18
 1857 03ea 01       		.uleb128 0x1
 1858 03eb 9C       		.byte	0x9c
 1859 03ec 01040000 		.4byte	0x401
 1860 03f0 0B       		.uleb128 0xb
 1861 03f1 67000000 		.4byte	.LASF41
 1862 03f5 01       		.byte	0x1
 1863 03f6 AF02     		.2byte	0x2af
 1864 03f8 76000000 		.4byte	0x76
 1865 03fc 8C020000 		.4byte	.LLST21
 1866 0400 00       		.byte	0
 1867 0401 0D       		.uleb128 0xd
 1868 0402 2F020000 		.4byte	.LASF43
 1869 0406 01       		.byte	0x1
 1870 0407 C302     		.2byte	0x2c3
 1871 0409 76000000 		.4byte	0x76
 1872 040d 00000000 		.4byte	.LFB19
 1873 0411 10000000 		.4byte	.LFE19-.LFB19
 1874 0415 01       		.uleb128 0x1
 1875 0416 9C       		.byte	0x9c
 1876 0417 0A       		.uleb128 0xa
 1877 0418 38030000 		.4byte	.LASF44
 1878 041c 01       		.byte	0x1
 1879 041d DD02     		.2byte	0x2dd
 1880 041f 00000000 		.4byte	.LFB20
 1881 0423 24000000 		.4byte	.LFE20-.LFB20
 1882 0427 01       		.uleb128 0x1
 1883 0428 9C       		.byte	0x9c
 1884 0429 60040000 		.4byte	0x460
 1885 042d 0B       		.uleb128 0xb
 1886 042e 73050000 		.4byte	.LASF45
 1887 0432 01       		.byte	0x1
 1888 0433 DD02     		.2byte	0x2dd
 1889 0435 76000000 		.4byte	0x76
 1890 0439 AD020000 		.4byte	.LLST22
 1891 043d 0C       		.uleb128 0xc
 1892 043e 1D050000 		.4byte	.LASF18
 1893 0442 01       		.byte	0x1
 1894 0443 DF02     		.2byte	0x2df
 1895 0445 6B000000 		.4byte	0x6b
 1896 0449 D9020000 		.4byte	.LLST23
 1897 044d 09       		.uleb128 0x9
 1898 044e 08000000 		.4byte	.LVL45
 1899 0452 E7080000 		.4byte	0x8e7
 1900 0456 09       		.uleb128 0x9
 1901 0457 1E000000 		.4byte	.LVL46
 1902 045b F2080000 		.4byte	0x8f2
 1903 045f 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 59


 1904 0460 0A       		.uleb128 0xa
 1905 0461 52000000 		.4byte	.LASF46
 1906 0465 01       		.byte	0x1
 1907 0466 F802     		.2byte	0x2f8
 1908 0468 00000000 		.4byte	.LFB21
 1909 046c 10000000 		.4byte	.LFE21-.LFB21
 1910 0470 01       		.uleb128 0x1
 1911 0471 9C       		.byte	0x9c
 1912 0472 87040000 		.4byte	0x487
 1913 0476 0B       		.uleb128 0xb
 1914 0477 7E050000 		.4byte	.LASF47
 1915 047b 01       		.byte	0x1
 1916 047c F802     		.2byte	0x2f8
 1917 047e 76000000 		.4byte	0x76
 1918 0482 EC020000 		.4byte	.LLST24
 1919 0486 00       		.byte	0
 1920 0487 0D       		.uleb128 0xd
 1921 0488 B1030000 		.4byte	.LASF48
 1922 048c 01       		.byte	0x1
 1923 048d 0C03     		.2byte	0x30c
 1924 048f 76000000 		.4byte	0x76
 1925 0493 00000000 		.4byte	.LFB22
 1926 0497 10000000 		.4byte	.LFE22-.LFB22
 1927 049b 01       		.uleb128 0x1
 1928 049c 9C       		.byte	0x9c
 1929 049d 0A       		.uleb128 0xa
 1930 049e 3E040000 		.4byte	.LASF49
 1931 04a2 01       		.byte	0x1
 1932 04a3 2603     		.2byte	0x326
 1933 04a5 00000000 		.4byte	.LFB23
 1934 04a9 28000000 		.4byte	.LFE23-.LFB23
 1935 04ad 01       		.uleb128 0x1
 1936 04ae 9C       		.byte	0x9c
 1937 04af E6040000 		.4byte	0x4e6
 1938 04b3 0B       		.uleb128 0xb
 1939 04b4 73050000 		.4byte	.LASF45
 1940 04b8 01       		.byte	0x1
 1941 04b9 2603     		.2byte	0x326
 1942 04bb 76000000 		.4byte	0x76
 1943 04bf 0D030000 		.4byte	.LLST25
 1944 04c3 0C       		.uleb128 0xc
 1945 04c4 1D050000 		.4byte	.LASF18
 1946 04c8 01       		.byte	0x1
 1947 04c9 2803     		.2byte	0x328
 1948 04cb 6B000000 		.4byte	0x6b
 1949 04cf 39030000 		.4byte	.LLST26
 1950 04d3 09       		.uleb128 0x9
 1951 04d4 08000000 		.4byte	.LVL51
 1952 04d8 E7080000 		.4byte	0x8e7
 1953 04dc 09       		.uleb128 0x9
 1954 04dd 22000000 		.4byte	.LVL53
 1955 04e1 F2080000 		.4byte	0x8f2
 1956 04e5 00       		.byte	0
 1957 04e6 0A       		.uleb128 0xa
 1958 04e7 40020000 		.4byte	.LASF50
 1959 04eb 01       		.byte	0x1
 1960 04ec 4303     		.2byte	0x343
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 60


 1961 04ee 00000000 		.4byte	.LFB24
 1962 04f2 10000000 		.4byte	.LFE24-.LFB24
 1963 04f6 01       		.uleb128 0x1
 1964 04f7 9C       		.byte	0x9c
 1965 04f8 0D050000 		.4byte	0x50d
 1966 04fc 0B       		.uleb128 0xb
 1967 04fd F5020000 		.4byte	.LASF51
 1968 0501 01       		.byte	0x1
 1969 0502 4303     		.2byte	0x343
 1970 0504 76000000 		.4byte	0x76
 1971 0508 4C030000 		.4byte	.LLST27
 1972 050c 00       		.byte	0
 1973 050d 0D       		.uleb128 0xd
 1974 050e 19010000 		.4byte	.LASF52
 1975 0512 01       		.byte	0x1
 1976 0513 6E03     		.2byte	0x36e
 1977 0515 76000000 		.4byte	0x76
 1978 0519 00000000 		.4byte	.LFB25
 1979 051d 10000000 		.4byte	.LFE25-.LFB25
 1980 0521 01       		.uleb128 0x1
 1981 0522 9C       		.byte	0x9c
 1982 0523 0A       		.uleb128 0xa
 1983 0524 D0040000 		.4byte	.LASF53
 1984 0528 01       		.byte	0x1
 1985 0529 9C03     		.2byte	0x39c
 1986 052b 00000000 		.4byte	.LFB26
 1987 052f 10000000 		.4byte	.LFE26-.LFB26
 1988 0533 01       		.uleb128 0x1
 1989 0534 9C       		.byte	0x9c
 1990 0535 4A050000 		.4byte	0x54a
 1991 0539 0B       		.uleb128 0xb
 1992 053a F2040000 		.4byte	.LASF54
 1993 053e 01       		.byte	0x1
 1994 053f 9C03     		.2byte	0x39c
 1995 0541 76000000 		.4byte	0x76
 1996 0545 6D030000 		.4byte	.LLST28
 1997 0549 00       		.byte	0
 1998 054a 0D       		.uleb128 0xd
 1999 054b 23030000 		.4byte	.LASF55
 2000 054f 01       		.byte	0x1
 2001 0550 C503     		.2byte	0x3c5
 2002 0552 76000000 		.4byte	0x76
 2003 0556 00000000 		.4byte	.LFB27
 2004 055a 10000000 		.4byte	.LFE27-.LFB27
 2005 055e 01       		.uleb128 0x1
 2006 055f 9C       		.byte	0x9c
 2007 0560 0D       		.uleb128 0xd
 2008 0561 27000000 		.4byte	.LASF56
 2009 0565 01       		.byte	0x1
 2010 0566 F303     		.2byte	0x3f3
 2011 0568 76000000 		.4byte	0x76
 2012 056c 00000000 		.4byte	.LFB28
 2013 0570 10000000 		.4byte	.LFE28-.LFB28
 2014 0574 01       		.uleb128 0x1
 2015 0575 9C       		.byte	0x9c
 2016 0576 0D       		.uleb128 0xd
 2017 0577 58010000 		.4byte	.LASF57
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 61


 2018 057b 01       		.byte	0x1
 2019 057c 0804     		.2byte	0x408
 2020 057e 76000000 		.4byte	0x76
 2021 0582 00000000 		.4byte	.LFB29
 2022 0586 10000000 		.4byte	.LFE29-.LFB29
 2023 058a 01       		.uleb128 0x1
 2024 058b 9C       		.byte	0x9c
 2025 058c 0A       		.uleb128 0xa
 2026 058d 40050000 		.4byte	.LASF58
 2027 0591 01       		.byte	0x1
 2028 0592 2304     		.2byte	0x423
 2029 0594 00000000 		.4byte	.LFB30
 2030 0598 24000000 		.4byte	.LFE30-.LFB30
 2031 059c 01       		.uleb128 0x1
 2032 059d 9C       		.byte	0x9c
 2033 059e D5050000 		.4byte	0x5d5
 2034 05a2 0B       		.uleb128 0xb
 2035 05a3 C0010000 		.4byte	.LASF59
 2036 05a7 01       		.byte	0x1
 2037 05a8 2304     		.2byte	0x423
 2038 05aa 76000000 		.4byte	0x76
 2039 05ae 8E030000 		.4byte	.LLST29
 2040 05b2 0C       		.uleb128 0xc
 2041 05b3 1D050000 		.4byte	.LASF18
 2042 05b7 01       		.byte	0x1
 2043 05b8 2504     		.2byte	0x425
 2044 05ba 6B000000 		.4byte	0x6b
 2045 05be BA030000 		.4byte	.LLST30
 2046 05c2 09       		.uleb128 0x9
 2047 05c3 08000000 		.4byte	.LVL59
 2048 05c7 E7080000 		.4byte	0x8e7
 2049 05cb 09       		.uleb128 0x9
 2050 05cc 1C000000 		.4byte	.LVL61
 2051 05d0 F2080000 		.4byte	0x8f2
 2052 05d4 00       		.byte	0
 2053 05d5 0A       		.uleb128 0xa
 2054 05d6 09050000 		.4byte	.LASF60
 2055 05da 01       		.byte	0x1
 2056 05db 4404     		.2byte	0x444
 2057 05dd 00000000 		.4byte	.LFB31
 2058 05e1 24000000 		.4byte	.LFE31-.LFB31
 2059 05e5 01       		.uleb128 0x1
 2060 05e6 9C       		.byte	0x9c
 2061 05e7 1E060000 		.4byte	0x61e
 2062 05eb 0B       		.uleb128 0xb
 2063 05ec C0010000 		.4byte	.LASF59
 2064 05f0 01       		.byte	0x1
 2065 05f1 4404     		.2byte	0x444
 2066 05f3 76000000 		.4byte	0x76
 2067 05f7 CD030000 		.4byte	.LLST31
 2068 05fb 0C       		.uleb128 0xc
 2069 05fc 1D050000 		.4byte	.LASF18
 2070 0600 01       		.byte	0x1
 2071 0601 4604     		.2byte	0x446
 2072 0603 6B000000 		.4byte	0x6b
 2073 0607 F9030000 		.4byte	.LLST32
 2074 060b 09       		.uleb128 0x9
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 62


 2075 060c 08000000 		.4byte	.LVL63
 2076 0610 E7080000 		.4byte	0x8e7
 2077 0614 09       		.uleb128 0x9
 2078 0615 1E000000 		.4byte	.LVL65
 2079 0619 F2080000 		.4byte	0x8f2
 2080 061d 00       		.byte	0
 2081 061e 0A       		.uleb128 0xa
 2082 061f D8030000 		.4byte	.LASF61
 2083 0623 01       		.byte	0x1
 2084 0624 6504     		.2byte	0x465
 2085 0626 00000000 		.4byte	.LFB32
 2086 062a 28000000 		.4byte	.LFE32-.LFB32
 2087 062e 01       		.uleb128 0x1
 2088 062f 9C       		.byte	0x9c
 2089 0630 67060000 		.4byte	0x667
 2090 0634 0B       		.uleb128 0xb
 2091 0635 C0010000 		.4byte	.LASF59
 2092 0639 01       		.byte	0x1
 2093 063a 6504     		.2byte	0x465
 2094 063c 76000000 		.4byte	0x76
 2095 0640 0C040000 		.4byte	.LLST33
 2096 0644 0C       		.uleb128 0xc
 2097 0645 1D050000 		.4byte	.LASF18
 2098 0649 01       		.byte	0x1
 2099 064a 6704     		.2byte	0x467
 2100 064c 6B000000 		.4byte	0x6b
 2101 0650 38040000 		.4byte	.LLST34
 2102 0654 09       		.uleb128 0x9
 2103 0655 08000000 		.4byte	.LVL67
 2104 0659 E7080000 		.4byte	0x8e7
 2105 065d 09       		.uleb128 0x9
 2106 065e 1E000000 		.4byte	.LVL69
 2107 0662 F2080000 		.4byte	0x8f2
 2108 0666 00       		.byte	0
 2109 0667 0A       		.uleb128 0xa
 2110 0668 77040000 		.4byte	.LASF62
 2111 066c 01       		.byte	0x1
 2112 066d 8504     		.2byte	0x485
 2113 066f 00000000 		.4byte	.LFB33
 2114 0673 24000000 		.4byte	.LFE33-.LFB33
 2115 0677 01       		.uleb128 0x1
 2116 0678 9C       		.byte	0x9c
 2117 0679 B0060000 		.4byte	0x6b0
 2118 067d 0B       		.uleb128 0xb
 2119 067e C0010000 		.4byte	.LASF59
 2120 0682 01       		.byte	0x1
 2121 0683 8504     		.2byte	0x485
 2122 0685 76000000 		.4byte	0x76
 2123 0689 4B040000 		.4byte	.LLST35
 2124 068d 0C       		.uleb128 0xc
 2125 068e 1D050000 		.4byte	.LASF18
 2126 0692 01       		.byte	0x1
 2127 0693 8704     		.2byte	0x487
 2128 0695 6B000000 		.4byte	0x6b
 2129 0699 77040000 		.4byte	.LLST36
 2130 069d 09       		.uleb128 0x9
 2131 069e 08000000 		.4byte	.LVL71
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 63


 2132 06a2 E7080000 		.4byte	0x8e7
 2133 06a6 09       		.uleb128 0x9
 2134 06a7 1E000000 		.4byte	.LVL73
 2135 06ab F2080000 		.4byte	0x8f2
 2136 06af 00       		.byte	0
 2137 06b0 0A       		.uleb128 0xa
 2138 06b1 A6010000 		.4byte	.LASF63
 2139 06b5 01       		.byte	0x1
 2140 06b6 A604     		.2byte	0x4a6
 2141 06b8 00000000 		.4byte	.LFB34
 2142 06bc 24000000 		.4byte	.LFE34-.LFB34
 2143 06c0 01       		.uleb128 0x1
 2144 06c1 9C       		.byte	0x9c
 2145 06c2 F9060000 		.4byte	0x6f9
 2146 06c6 0B       		.uleb128 0xb
 2147 06c7 C0010000 		.4byte	.LASF59
 2148 06cb 01       		.byte	0x1
 2149 06cc A604     		.2byte	0x4a6
 2150 06ce 76000000 		.4byte	0x76
 2151 06d2 8A040000 		.4byte	.LLST37
 2152 06d6 0C       		.uleb128 0xc
 2153 06d7 1D050000 		.4byte	.LASF18
 2154 06db 01       		.byte	0x1
 2155 06dc A804     		.2byte	0x4a8
 2156 06de 6B000000 		.4byte	0x6b
 2157 06e2 B6040000 		.4byte	.LLST38
 2158 06e6 09       		.uleb128 0x9
 2159 06e7 08000000 		.4byte	.LVL75
 2160 06eb E7080000 		.4byte	0x8e7
 2161 06ef 09       		.uleb128 0x9
 2162 06f0 1E000000 		.4byte	.LVL77
 2163 06f4 F2080000 		.4byte	0x8f2
 2164 06f8 00       		.byte	0
 2165 06f9 0A       		.uleb128 0xa
 2166 06fa 93040000 		.4byte	.LASF64
 2167 06fe 01       		.byte	0x1
 2168 06ff CE04     		.2byte	0x4ce
 2169 0701 00000000 		.4byte	.LFB35
 2170 0705 1C000000 		.4byte	.LFE35-.LFB35
 2171 0709 01       		.uleb128 0x1
 2172 070a 9C       		.byte	0x9c
 2173 070b 52070000 		.4byte	0x752
 2174 070f 0B       		.uleb128 0xb
 2175 0710 CC010000 		.4byte	.LASF35
 2176 0714 01       		.byte	0x1
 2177 0715 CE04     		.2byte	0x4ce
 2178 0717 76000000 		.4byte	0x76
 2179 071b C9040000 		.4byte	.LLST39
 2180 071f 0B       		.uleb128 0xb
 2181 0720 F5010000 		.4byte	.LASF65
 2182 0724 01       		.byte	0x1
 2183 0725 CE04     		.2byte	0x4ce
 2184 0727 76000000 		.4byte	0x76
 2185 072b F5040000 		.4byte	.LLST40
 2186 072f 0C       		.uleb128 0xc
 2187 0730 1D050000 		.4byte	.LASF18
 2188 0734 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 64


 2189 0735 D004     		.2byte	0x4d0
 2190 0737 6B000000 		.4byte	0x6b
 2191 073b 21050000 		.4byte	.LLST41
 2192 073f 09       		.uleb128 0x9
 2193 0740 0A000000 		.4byte	.LVL79
 2194 0744 E7080000 		.4byte	0x8e7
 2195 0748 09       		.uleb128 0x9
 2196 0749 14000000 		.4byte	.LVL81
 2197 074d F2080000 		.4byte	0x8f2
 2198 0751 00       		.byte	0
 2199 0752 07       		.uleb128 0x7
 2200 0753 74020000 		.4byte	.LASF66
 2201 0757 01       		.byte	0x1
 2202 0758 B1       		.byte	0xb1
 2203 0759 00000000 		.4byte	.LFB3
 2204 075d 24000000 		.4byte	.LFE3-.LFB3
 2205 0761 01       		.uleb128 0x1
 2206 0762 9C       		.byte	0x9c
 2207 0763 9D070000 		.4byte	0x79d
 2208 0767 08       		.uleb128 0x8
 2209 0768 1D050000 		.4byte	.LASF18
 2210 076c 01       		.byte	0x1
 2211 076d B3       		.byte	0xb3
 2212 076e 6B000000 		.4byte	0x6b
 2213 0772 34050000 		.4byte	.LLST42
 2214 0776 09       		.uleb128 0x9
 2215 0777 06000000 		.4byte	.LVL83
 2216 077b E7080000 		.4byte	0x8e7
 2217 077f 09       		.uleb128 0x9
 2218 0780 14000000 		.4byte	.LVL84
 2219 0784 F2080000 		.4byte	0x8f2
 2220 0788 0E       		.uleb128 0xe
 2221 0789 1C000000 		.4byte	.LVL85
 2222 078d F9060000 		.4byte	0x6f9
 2223 0791 0F       		.uleb128 0xf
 2224 0792 01       		.uleb128 0x1
 2225 0793 51       		.byte	0x51
 2226 0794 01       		.uleb128 0x1
 2227 0795 48       		.byte	0x48
 2228 0796 0F       		.uleb128 0xf
 2229 0797 01       		.uleb128 0x1
 2230 0798 50       		.byte	0x50
 2231 0799 01       		.uleb128 0x1
 2232 079a 31       		.byte	0x31
 2233 079b 00       		.byte	0
 2234 079c 00       		.byte	0
 2235 079d 0D       		.uleb128 0xd
 2236 079e 6D010000 		.4byte	.LASF67
 2237 07a2 01       		.byte	0x1
 2238 07a3 EB04     		.2byte	0x4eb
 2239 07a5 76000000 		.4byte	0x76
 2240 07a9 00000000 		.4byte	.LFB36
 2241 07ad 14000000 		.4byte	.LFE36-.LFB36
 2242 07b1 01       		.uleb128 0x1
 2243 07b2 9C       		.byte	0x9c
 2244 07b3 0A       		.uleb128 0xa
 2245 07b4 60040000 		.4byte	.LASF68
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 65


 2246 07b8 01       		.byte	0x1
 2247 07b9 0405     		.2byte	0x504
 2248 07bb 00000000 		.4byte	.LFB37
 2249 07bf 0C000000 		.4byte	.LFE37-.LFB37
 2250 07c3 01       		.uleb128 0x1
 2251 07c4 9C       		.byte	0x9c
 2252 07c5 D8070000 		.4byte	0x7d8
 2253 07c9 10       		.uleb128 0x10
 2254 07ca 52040000 		.4byte	.LASF69
 2255 07ce 01       		.byte	0x1
 2256 07cf 0405     		.2byte	0x504
 2257 07d1 76000000 		.4byte	0x76
 2258 07d5 01       		.uleb128 0x1
 2259 07d6 50       		.byte	0x50
 2260 07d7 00       		.byte	0
 2261 07d8 07       		.uleb128 0x7
 2262 07d9 81020000 		.4byte	.LASF70
 2263 07dd 01       		.byte	0x1
 2264 07de 26       		.byte	0x26
 2265 07df 00000000 		.4byte	.LFB2
 2266 07e3 48000000 		.4byte	.LFE2-.LFB2
 2267 07e7 01       		.uleb128 0x1
 2268 07e8 9C       		.byte	0x9c
 2269 07e9 38080000 		.4byte	0x838
 2270 07ed 11       		.uleb128 0x11
 2271 07ee 14000000 		.4byte	.LVL87
 2272 07f2 54030000 		.4byte	0x354
 2273 07f6 00080000 		.4byte	0x800
 2274 07fa 0F       		.uleb128 0xf
 2275 07fb 01       		.uleb128 0x1
 2276 07fc 50       		.byte	0x50
 2277 07fd 01       		.uleb128 0x1
 2278 07fe 30       		.byte	0x30
 2279 07ff 00       		.byte	0
 2280 0800 11       		.uleb128 0x11
 2281 0801 24000000 		.4byte	.LVL88
 2282 0805 B3070000 		.4byte	0x7b3
 2283 0809 13080000 		.4byte	0x813
 2284 080d 0F       		.uleb128 0xf
 2285 080e 01       		.uleb128 0x1
 2286 080f 50       		.byte	0x50
 2287 0810 01       		.uleb128 0x1
 2288 0811 31       		.byte	0x31
 2289 0812 00       		.byte	0
 2290 0813 11       		.uleb128 0x11
 2291 0814 32000000 		.4byte	.LVL89
 2292 0818 DA030000 		.4byte	0x3da
 2293 081c 28080000 		.4byte	0x828
 2294 0820 0F       		.uleb128 0xf
 2295 0821 01       		.uleb128 0x1
 2296 0822 50       		.byte	0x50
 2297 0823 03       		.uleb128 0x3
 2298 0824 0A       		.byte	0xa
 2299 0825 E803     		.2byte	0x3e8
 2300 0827 00       		.byte	0
 2301 0828 0E       		.uleb128 0xe
 2302 0829 38000000 		.4byte	.LVL90
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 66


 2303 082d E6040000 		.4byte	0x4e6
 2304 0831 0F       		.uleb128 0xf
 2305 0832 01       		.uleb128 0x1
 2306 0833 50       		.byte	0x50
 2307 0834 01       		.uleb128 0x1
 2308 0835 30       		.byte	0x30
 2309 0836 00       		.byte	0
 2310 0837 00       		.byte	0
 2311 0838 07       		.uleb128 0x7
 2312 0839 FD040000 		.4byte	.LASF71
 2313 083d 01       		.byte	0x1
 2314 083e E0       		.byte	0xe0
 2315 083f 00000000 		.4byte	.LFB4
 2316 0843 20000000 		.4byte	.LFE4-.LFB4
 2317 0847 01       		.uleb128 0x1
 2318 0848 9C       		.byte	0x9c
 2319 0849 60080000 		.4byte	0x860
 2320 084d 09       		.uleb128 0x9
 2321 084e 0E000000 		.4byte	.LVL91
 2322 0852 D8070000 		.4byte	0x7d8
 2323 0856 09       		.uleb128 0x9
 2324 0857 18000000 		.4byte	.LVL92
 2325 085b 52070000 		.4byte	0x752
 2326 085f 00       		.byte	0
 2327 0860 0D       		.uleb128 0xd
 2328 0861 88050000 		.4byte	.LASF72
 2329 0865 01       		.byte	0x1
 2330 0866 1B05     		.2byte	0x51b
 2331 0868 76000000 		.4byte	0x76
 2332 086c 00000000 		.4byte	.LFB38
 2333 0870 0C000000 		.4byte	.LFE38-.LFB38
 2334 0874 01       		.uleb128 0x1
 2335 0875 9C       		.byte	0x9c
 2336 0876 0D       		.uleb128 0xd
 2337 0877 39000000 		.4byte	.LASF73
 2338 087b 01       		.byte	0x1
 2339 087c 3205     		.2byte	0x532
 2340 087e 76000000 		.4byte	0x76
 2341 0882 00000000 		.4byte	.LFB39
 2342 0886 0C000000 		.4byte	.LFE39-.LFB39
 2343 088a 01       		.uleb128 0x1
 2344 088b 9C       		.byte	0x9c
 2345 088c 0A       		.uleb128 0xa
 2346 088d BB040000 		.4byte	.LASF74
 2347 0891 01       		.byte	0x1
 2348 0892 4905     		.2byte	0x549
 2349 0894 00000000 		.4byte	.LFB40
 2350 0898 0C000000 		.4byte	.LFE40-.LFB40
 2351 089c 01       		.uleb128 0x1
 2352 089d 9C       		.byte	0x9c
 2353 089e B1080000 		.4byte	0x8b1
 2354 08a2 10       		.uleb128 0x10
 2355 08a3 52040000 		.4byte	.LASF69
 2356 08a7 01       		.byte	0x1
 2357 08a8 4905     		.2byte	0x549
 2358 08aa 76000000 		.4byte	0x76
 2359 08ae 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 67


 2360 08af 50       		.byte	0x50
 2361 08b0 00       		.byte	0
 2362 08b1 0A       		.uleb128 0xa
 2363 08b2 2B010000 		.4byte	.LASF75
 2364 08b6 01       		.byte	0x1
 2365 08b7 6005     		.2byte	0x560
 2366 08b9 00000000 		.4byte	.LFB41
 2367 08bd 0C000000 		.4byte	.LFE41-.LFB41
 2368 08c1 01       		.uleb128 0x1
 2369 08c2 9C       		.byte	0x9c
 2370 08c3 D6080000 		.4byte	0x8d6
 2371 08c7 10       		.uleb128 0x10
 2372 08c8 52040000 		.4byte	.LASF69
 2373 08cc 01       		.byte	0x1
 2374 08cd 6005     		.2byte	0x560
 2375 08cf 76000000 		.4byte	0x76
 2376 08d3 01       		.uleb128 0x1
 2377 08d4 50       		.byte	0x50
 2378 08d5 00       		.byte	0
 2379 08d6 12       		.uleb128 0x12
 2380 08d7 55050000 		.4byte	.LASF79
 2381 08db 01       		.byte	0x1
 2382 08dc 15       		.byte	0x15
 2383 08dd 6B000000 		.4byte	0x6b
 2384 08e1 05       		.uleb128 0x5
 2385 08e2 03       		.byte	0x3
 2386 08e3 00000000 		.4byte	PWM_1_initVar
 2387 08e7 13       		.uleb128 0x13
 2388 08e8 18020000 		.4byte	.LASF80
 2389 08ec 03       		.byte	0x3
 2390 08ed 5E       		.byte	0x5e
 2391 08ee 6B000000 		.4byte	0x6b
 2392 08f2 14       		.uleb128 0x14
 2393 08f3 06000000 		.4byte	.LASF81
 2394 08f7 03       		.byte	0x3
 2395 08f8 5F       		.byte	0x5f
 2396 08f9 15       		.uleb128 0x15
 2397 08fa 6B000000 		.4byte	0x6b
 2398 08fe 00       		.byte	0
 2399 08ff 00       		.byte	0
 2400              		.section	.debug_abbrev,"",%progbits
 2401              	.Ldebug_abbrev0:
 2402 0000 01       		.uleb128 0x1
 2403 0001 11       		.uleb128 0x11
 2404 0002 01       		.byte	0x1
 2405 0003 25       		.uleb128 0x25
 2406 0004 0E       		.uleb128 0xe
 2407 0005 13       		.uleb128 0x13
 2408 0006 0B       		.uleb128 0xb
 2409 0007 03       		.uleb128 0x3
 2410 0008 0E       		.uleb128 0xe
 2411 0009 1B       		.uleb128 0x1b
 2412 000a 0E       		.uleb128 0xe
 2413 000b 55       		.uleb128 0x55
 2414 000c 17       		.uleb128 0x17
 2415 000d 11       		.uleb128 0x11
 2416 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 68


 2417 000f 10       		.uleb128 0x10
 2418 0010 17       		.uleb128 0x17
 2419 0011 00       		.byte	0
 2420 0012 00       		.byte	0
 2421 0013 02       		.uleb128 0x2
 2422 0014 24       		.uleb128 0x24
 2423 0015 00       		.byte	0
 2424 0016 0B       		.uleb128 0xb
 2425 0017 0B       		.uleb128 0xb
 2426 0018 3E       		.uleb128 0x3e
 2427 0019 0B       		.uleb128 0xb
 2428 001a 03       		.uleb128 0x3
 2429 001b 0E       		.uleb128 0xe
 2430 001c 00       		.byte	0
 2431 001d 00       		.byte	0
 2432 001e 03       		.uleb128 0x3
 2433 001f 24       		.uleb128 0x24
 2434 0020 00       		.byte	0
 2435 0021 0B       		.uleb128 0xb
 2436 0022 0B       		.uleb128 0xb
 2437 0023 3E       		.uleb128 0x3e
 2438 0024 0B       		.uleb128 0xb
 2439 0025 03       		.uleb128 0x3
 2440 0026 08       		.uleb128 0x8
 2441 0027 00       		.byte	0
 2442 0028 00       		.byte	0
 2443 0029 04       		.uleb128 0x4
 2444 002a 16       		.uleb128 0x16
 2445 002b 00       		.byte	0
 2446 002c 03       		.uleb128 0x3
 2447 002d 0E       		.uleb128 0xe
 2448 002e 3A       		.uleb128 0x3a
 2449 002f 0B       		.uleb128 0xb
 2450 0030 3B       		.uleb128 0x3b
 2451 0031 0B       		.uleb128 0xb
 2452 0032 49       		.uleb128 0x49
 2453 0033 13       		.uleb128 0x13
 2454 0034 00       		.byte	0
 2455 0035 00       		.byte	0
 2456 0036 05       		.uleb128 0x5
 2457 0037 16       		.uleb128 0x16
 2458 0038 00       		.byte	0
 2459 0039 03       		.uleb128 0x3
 2460 003a 0E       		.uleb128 0xe
 2461 003b 3A       		.uleb128 0x3a
 2462 003c 0B       		.uleb128 0xb
 2463 003d 3B       		.uleb128 0x3b
 2464 003e 05       		.uleb128 0x5
 2465 003f 49       		.uleb128 0x49
 2466 0040 13       		.uleb128 0x13
 2467 0041 00       		.byte	0
 2468 0042 00       		.byte	0
 2469 0043 06       		.uleb128 0x6
 2470 0044 35       		.uleb128 0x35
 2471 0045 00       		.byte	0
 2472 0046 49       		.uleb128 0x49
 2473 0047 13       		.uleb128 0x13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 69


 2474 0048 00       		.byte	0
 2475 0049 00       		.byte	0
 2476 004a 07       		.uleb128 0x7
 2477 004b 2E       		.uleb128 0x2e
 2478 004c 01       		.byte	0x1
 2479 004d 3F       		.uleb128 0x3f
 2480 004e 19       		.uleb128 0x19
 2481 004f 03       		.uleb128 0x3
 2482 0050 0E       		.uleb128 0xe
 2483 0051 3A       		.uleb128 0x3a
 2484 0052 0B       		.uleb128 0xb
 2485 0053 3B       		.uleb128 0x3b
 2486 0054 0B       		.uleb128 0xb
 2487 0055 27       		.uleb128 0x27
 2488 0056 19       		.uleb128 0x19
 2489 0057 11       		.uleb128 0x11
 2490 0058 01       		.uleb128 0x1
 2491 0059 12       		.uleb128 0x12
 2492 005a 06       		.uleb128 0x6
 2493 005b 40       		.uleb128 0x40
 2494 005c 18       		.uleb128 0x18
 2495 005d 9742     		.uleb128 0x2117
 2496 005f 19       		.uleb128 0x19
 2497 0060 01       		.uleb128 0x1
 2498 0061 13       		.uleb128 0x13
 2499 0062 00       		.byte	0
 2500 0063 00       		.byte	0
 2501 0064 08       		.uleb128 0x8
 2502 0065 34       		.uleb128 0x34
 2503 0066 00       		.byte	0
 2504 0067 03       		.uleb128 0x3
 2505 0068 0E       		.uleb128 0xe
 2506 0069 3A       		.uleb128 0x3a
 2507 006a 0B       		.uleb128 0xb
 2508 006b 3B       		.uleb128 0x3b
 2509 006c 0B       		.uleb128 0xb
 2510 006d 49       		.uleb128 0x49
 2511 006e 13       		.uleb128 0x13
 2512 006f 02       		.uleb128 0x2
 2513 0070 17       		.uleb128 0x17
 2514 0071 00       		.byte	0
 2515 0072 00       		.byte	0
 2516 0073 09       		.uleb128 0x9
 2517 0074 898201   		.uleb128 0x4109
 2518 0077 00       		.byte	0
 2519 0078 11       		.uleb128 0x11
 2520 0079 01       		.uleb128 0x1
 2521 007a 31       		.uleb128 0x31
 2522 007b 13       		.uleb128 0x13
 2523 007c 00       		.byte	0
 2524 007d 00       		.byte	0
 2525 007e 0A       		.uleb128 0xa
 2526 007f 2E       		.uleb128 0x2e
 2527 0080 01       		.byte	0x1
 2528 0081 3F       		.uleb128 0x3f
 2529 0082 19       		.uleb128 0x19
 2530 0083 03       		.uleb128 0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 70


 2531 0084 0E       		.uleb128 0xe
 2532 0085 3A       		.uleb128 0x3a
 2533 0086 0B       		.uleb128 0xb
 2534 0087 3B       		.uleb128 0x3b
 2535 0088 05       		.uleb128 0x5
 2536 0089 27       		.uleb128 0x27
 2537 008a 19       		.uleb128 0x19
 2538 008b 11       		.uleb128 0x11
 2539 008c 01       		.uleb128 0x1
 2540 008d 12       		.uleb128 0x12
 2541 008e 06       		.uleb128 0x6
 2542 008f 40       		.uleb128 0x40
 2543 0090 18       		.uleb128 0x18
 2544 0091 9742     		.uleb128 0x2117
 2545 0093 19       		.uleb128 0x19
 2546 0094 01       		.uleb128 0x1
 2547 0095 13       		.uleb128 0x13
 2548 0096 00       		.byte	0
 2549 0097 00       		.byte	0
 2550 0098 0B       		.uleb128 0xb
 2551 0099 05       		.uleb128 0x5
 2552 009a 00       		.byte	0
 2553 009b 03       		.uleb128 0x3
 2554 009c 0E       		.uleb128 0xe
 2555 009d 3A       		.uleb128 0x3a
 2556 009e 0B       		.uleb128 0xb
 2557 009f 3B       		.uleb128 0x3b
 2558 00a0 05       		.uleb128 0x5
 2559 00a1 49       		.uleb128 0x49
 2560 00a2 13       		.uleb128 0x13
 2561 00a3 02       		.uleb128 0x2
 2562 00a4 17       		.uleb128 0x17
 2563 00a5 00       		.byte	0
 2564 00a6 00       		.byte	0
 2565 00a7 0C       		.uleb128 0xc
 2566 00a8 34       		.uleb128 0x34
 2567 00a9 00       		.byte	0
 2568 00aa 03       		.uleb128 0x3
 2569 00ab 0E       		.uleb128 0xe
 2570 00ac 3A       		.uleb128 0x3a
 2571 00ad 0B       		.uleb128 0xb
 2572 00ae 3B       		.uleb128 0x3b
 2573 00af 05       		.uleb128 0x5
 2574 00b0 49       		.uleb128 0x49
 2575 00b1 13       		.uleb128 0x13
 2576 00b2 02       		.uleb128 0x2
 2577 00b3 17       		.uleb128 0x17
 2578 00b4 00       		.byte	0
 2579 00b5 00       		.byte	0
 2580 00b6 0D       		.uleb128 0xd
 2581 00b7 2E       		.uleb128 0x2e
 2582 00b8 00       		.byte	0
 2583 00b9 3F       		.uleb128 0x3f
 2584 00ba 19       		.uleb128 0x19
 2585 00bb 03       		.uleb128 0x3
 2586 00bc 0E       		.uleb128 0xe
 2587 00bd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 71


 2588 00be 0B       		.uleb128 0xb
 2589 00bf 3B       		.uleb128 0x3b
 2590 00c0 05       		.uleb128 0x5
 2591 00c1 27       		.uleb128 0x27
 2592 00c2 19       		.uleb128 0x19
 2593 00c3 49       		.uleb128 0x49
 2594 00c4 13       		.uleb128 0x13
 2595 00c5 11       		.uleb128 0x11
 2596 00c6 01       		.uleb128 0x1
 2597 00c7 12       		.uleb128 0x12
 2598 00c8 06       		.uleb128 0x6
 2599 00c9 40       		.uleb128 0x40
 2600 00ca 18       		.uleb128 0x18
 2601 00cb 9742     		.uleb128 0x2117
 2602 00cd 19       		.uleb128 0x19
 2603 00ce 00       		.byte	0
 2604 00cf 00       		.byte	0
 2605 00d0 0E       		.uleb128 0xe
 2606 00d1 898201   		.uleb128 0x4109
 2607 00d4 01       		.byte	0x1
 2608 00d5 11       		.uleb128 0x11
 2609 00d6 01       		.uleb128 0x1
 2610 00d7 31       		.uleb128 0x31
 2611 00d8 13       		.uleb128 0x13
 2612 00d9 00       		.byte	0
 2613 00da 00       		.byte	0
 2614 00db 0F       		.uleb128 0xf
 2615 00dc 8A8201   		.uleb128 0x410a
 2616 00df 00       		.byte	0
 2617 00e0 02       		.uleb128 0x2
 2618 00e1 18       		.uleb128 0x18
 2619 00e2 9142     		.uleb128 0x2111
 2620 00e4 18       		.uleb128 0x18
 2621 00e5 00       		.byte	0
 2622 00e6 00       		.byte	0
 2623 00e7 10       		.uleb128 0x10
 2624 00e8 05       		.uleb128 0x5
 2625 00e9 00       		.byte	0
 2626 00ea 03       		.uleb128 0x3
 2627 00eb 0E       		.uleb128 0xe
 2628 00ec 3A       		.uleb128 0x3a
 2629 00ed 0B       		.uleb128 0xb
 2630 00ee 3B       		.uleb128 0x3b
 2631 00ef 05       		.uleb128 0x5
 2632 00f0 49       		.uleb128 0x49
 2633 00f1 13       		.uleb128 0x13
 2634 00f2 02       		.uleb128 0x2
 2635 00f3 18       		.uleb128 0x18
 2636 00f4 00       		.byte	0
 2637 00f5 00       		.byte	0
 2638 00f6 11       		.uleb128 0x11
 2639 00f7 898201   		.uleb128 0x4109
 2640 00fa 01       		.byte	0x1
 2641 00fb 11       		.uleb128 0x11
 2642 00fc 01       		.uleb128 0x1
 2643 00fd 31       		.uleb128 0x31
 2644 00fe 13       		.uleb128 0x13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 72


 2645 00ff 01       		.uleb128 0x1
 2646 0100 13       		.uleb128 0x13
 2647 0101 00       		.byte	0
 2648 0102 00       		.byte	0
 2649 0103 12       		.uleb128 0x12
 2650 0104 34       		.uleb128 0x34
 2651 0105 00       		.byte	0
 2652 0106 03       		.uleb128 0x3
 2653 0107 0E       		.uleb128 0xe
 2654 0108 3A       		.uleb128 0x3a
 2655 0109 0B       		.uleb128 0xb
 2656 010a 3B       		.uleb128 0x3b
 2657 010b 0B       		.uleb128 0xb
 2658 010c 49       		.uleb128 0x49
 2659 010d 13       		.uleb128 0x13
 2660 010e 3F       		.uleb128 0x3f
 2661 010f 19       		.uleb128 0x19
 2662 0110 02       		.uleb128 0x2
 2663 0111 18       		.uleb128 0x18
 2664 0112 00       		.byte	0
 2665 0113 00       		.byte	0
 2666 0114 13       		.uleb128 0x13
 2667 0115 2E       		.uleb128 0x2e
 2668 0116 00       		.byte	0
 2669 0117 3F       		.uleb128 0x3f
 2670 0118 19       		.uleb128 0x19
 2671 0119 03       		.uleb128 0x3
 2672 011a 0E       		.uleb128 0xe
 2673 011b 3A       		.uleb128 0x3a
 2674 011c 0B       		.uleb128 0xb
 2675 011d 3B       		.uleb128 0x3b
 2676 011e 0B       		.uleb128 0xb
 2677 011f 27       		.uleb128 0x27
 2678 0120 19       		.uleb128 0x19
 2679 0121 49       		.uleb128 0x49
 2680 0122 13       		.uleb128 0x13
 2681 0123 3C       		.uleb128 0x3c
 2682 0124 19       		.uleb128 0x19
 2683 0125 00       		.byte	0
 2684 0126 00       		.byte	0
 2685 0127 14       		.uleb128 0x14
 2686 0128 2E       		.uleb128 0x2e
 2687 0129 01       		.byte	0x1
 2688 012a 3F       		.uleb128 0x3f
 2689 012b 19       		.uleb128 0x19
 2690 012c 03       		.uleb128 0x3
 2691 012d 0E       		.uleb128 0xe
 2692 012e 3A       		.uleb128 0x3a
 2693 012f 0B       		.uleb128 0xb
 2694 0130 3B       		.uleb128 0x3b
 2695 0131 0B       		.uleb128 0xb
 2696 0132 27       		.uleb128 0x27
 2697 0133 19       		.uleb128 0x19
 2698 0134 3C       		.uleb128 0x3c
 2699 0135 19       		.uleb128 0x19
 2700 0136 00       		.byte	0
 2701 0137 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 73


 2702 0138 15       		.uleb128 0x15
 2703 0139 05       		.uleb128 0x5
 2704 013a 00       		.byte	0
 2705 013b 49       		.uleb128 0x49
 2706 013c 13       		.uleb128 0x13
 2707 013d 00       		.byte	0
 2708 013e 00       		.byte	0
 2709 013f 00       		.byte	0
 2710              		.section	.debug_loc,"",%progbits
 2711              	.Ldebug_loc0:
 2712              	.LLST0:
 2713 0000 06000000 		.4byte	.LVL0
 2714 0004 13000000 		.4byte	.LVL1-1
 2715 0008 0100     		.2byte	0x1
 2716 000a 50       		.byte	0x50
 2717 000b 00000000 		.4byte	0
 2718 000f 00000000 		.4byte	0
 2719              	.LLST1:
 2720 0013 00000000 		.4byte	.LVL2
 2721 0017 07000000 		.4byte	.LVL3-1
 2722 001b 0100     		.2byte	0x1
 2723 001d 50       		.byte	0x50
 2724 001e 07000000 		.4byte	.LVL3-1
 2725 0022 16000000 		.4byte	.LVL4
 2726 0026 0100     		.2byte	0x1
 2727 0028 54       		.byte	0x54
 2728 0029 16000000 		.4byte	.LVL4
 2729 002d 28000000 		.4byte	.LFE6
 2730 0031 0400     		.2byte	0x4
 2731 0033 F3       		.byte	0xf3
 2732 0034 01       		.uleb128 0x1
 2733 0035 50       		.byte	0x50
 2734 0036 9F       		.byte	0x9f
 2735 0037 00000000 		.4byte	0
 2736 003b 00000000 		.4byte	0
 2737              	.LLST2:
 2738 003f 08000000 		.4byte	.LVL3
 2739 0043 1B000000 		.4byte	.LVL5-1
 2740 0047 0100     		.2byte	0x1
 2741 0049 50       		.byte	0x50
 2742 004a 00000000 		.4byte	0
 2743 004e 00000000 		.4byte	0
 2744              	.LLST3:
 2745 0052 00000000 		.4byte	.LVL6
 2746 0056 07000000 		.4byte	.LVL7-1
 2747 005a 0100     		.2byte	0x1
 2748 005c 50       		.byte	0x50
 2749 005d 07000000 		.4byte	.LVL7-1
 2750 0061 16000000 		.4byte	.LVL8
 2751 0065 0100     		.2byte	0x1
 2752 0067 54       		.byte	0x54
 2753 0068 16000000 		.4byte	.LVL8
 2754 006c 28000000 		.4byte	.LFE7
 2755 0070 0400     		.2byte	0x4
 2756 0072 F3       		.byte	0xf3
 2757 0073 01       		.uleb128 0x1
 2758 0074 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 74


 2759 0075 9F       		.byte	0x9f
 2760 0076 00000000 		.4byte	0
 2761 007a 00000000 		.4byte	0
 2762              	.LLST4:
 2763 007e 08000000 		.4byte	.LVL7
 2764 0082 1B000000 		.4byte	.LVL9-1
 2765 0086 0100     		.2byte	0x1
 2766 0088 50       		.byte	0x50
 2767 0089 00000000 		.4byte	0
 2768 008d 00000000 		.4byte	0
 2769              	.LLST5:
 2770 0091 00000000 		.4byte	.LVL10
 2771 0095 07000000 		.4byte	.LVL11-1
 2772 0099 0100     		.2byte	0x1
 2773 009b 50       		.byte	0x50
 2774 009c 07000000 		.4byte	.LVL11-1
 2775 00a0 16000000 		.4byte	.LVL12
 2776 00a4 0100     		.2byte	0x1
 2777 00a6 54       		.byte	0x54
 2778 00a7 16000000 		.4byte	.LVL12
 2779 00ab 28000000 		.4byte	.LFE8
 2780 00af 0400     		.2byte	0x4
 2781 00b1 F3       		.byte	0xf3
 2782 00b2 01       		.uleb128 0x1
 2783 00b3 50       		.byte	0x50
 2784 00b4 9F       		.byte	0x9f
 2785 00b5 00000000 		.4byte	0
 2786 00b9 00000000 		.4byte	0
 2787              	.LLST6:
 2788 00bd 08000000 		.4byte	.LVL11
 2789 00c1 1B000000 		.4byte	.LVL13-1
 2790 00c5 0100     		.2byte	0x1
 2791 00c7 50       		.byte	0x50
 2792 00c8 00000000 		.4byte	0
 2793 00cc 00000000 		.4byte	0
 2794              	.LLST7:
 2795 00d0 00000000 		.4byte	.LVL14
 2796 00d4 07000000 		.4byte	.LVL15-1
 2797 00d8 0100     		.2byte	0x1
 2798 00da 50       		.byte	0x50
 2799 00db 07000000 		.4byte	.LVL15-1
 2800 00df 18000000 		.4byte	.LVL16
 2801 00e3 0100     		.2byte	0x1
 2802 00e5 54       		.byte	0x54
 2803 00e6 18000000 		.4byte	.LVL16
 2804 00ea 2C000000 		.4byte	.LFE9
 2805 00ee 0400     		.2byte	0x4
 2806 00f0 F3       		.byte	0xf3
 2807 00f1 01       		.uleb128 0x1
 2808 00f2 50       		.byte	0x50
 2809 00f3 9F       		.byte	0x9f
 2810 00f4 00000000 		.4byte	0
 2811 00f8 00000000 		.4byte	0
 2812              	.LLST8:
 2813 00fc 08000000 		.4byte	.LVL15
 2814 0100 21000000 		.4byte	.LVL17-1
 2815 0104 0100     		.2byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 75


 2816 0106 50       		.byte	0x50
 2817 0107 00000000 		.4byte	0
 2818 010b 00000000 		.4byte	0
 2819              	.LLST9:
 2820 010f 00000000 		.4byte	.LVL18
 2821 0113 04000000 		.4byte	.LVL19
 2822 0117 0100     		.2byte	0x1
 2823 0119 50       		.byte	0x50
 2824 011a 04000000 		.4byte	.LVL19
 2825 011e 10000000 		.4byte	.LFE10
 2826 0122 0400     		.2byte	0x4
 2827 0124 F3       		.byte	0xf3
 2828 0125 01       		.uleb128 0x1
 2829 0126 50       		.byte	0x50
 2830 0127 9F       		.byte	0x9f
 2831 0128 00000000 		.4byte	0
 2832 012c 00000000 		.4byte	0
 2833              	.LLST10:
 2834 0130 00000000 		.4byte	.LVL20
 2835 0134 07000000 		.4byte	.LVL21-1
 2836 0138 0100     		.2byte	0x1
 2837 013a 50       		.byte	0x50
 2838 013b 07000000 		.4byte	.LVL21-1
 2839 013f 18000000 		.4byte	.LVL22
 2840 0143 0100     		.2byte	0x1
 2841 0145 54       		.byte	0x54
 2842 0146 18000000 		.4byte	.LVL22
 2843 014a 28000000 		.4byte	.LFE11
 2844 014e 0400     		.2byte	0x4
 2845 0150 F3       		.byte	0xf3
 2846 0151 01       		.uleb128 0x1
 2847 0152 50       		.byte	0x50
 2848 0153 9F       		.byte	0x9f
 2849 0154 00000000 		.4byte	0
 2850 0158 00000000 		.4byte	0
 2851              	.LLST11:
 2852 015c 08000000 		.4byte	.LVL21
 2853 0160 21000000 		.4byte	.LVL23-1
 2854 0164 0100     		.2byte	0x1
 2855 0166 50       		.byte	0x50
 2856 0167 00000000 		.4byte	0
 2857 016b 00000000 		.4byte	0
 2858              	.LLST12:
 2859 016f 00000000 		.4byte	.LVL24
 2860 0173 07000000 		.4byte	.LVL25-1
 2861 0177 0100     		.2byte	0x1
 2862 0179 50       		.byte	0x50
 2863 017a 07000000 		.4byte	.LVL25-1
 2864 017e 18000000 		.4byte	.LVL26
 2865 0182 0100     		.2byte	0x1
 2866 0184 54       		.byte	0x54
 2867 0185 18000000 		.4byte	.LVL26
 2868 0189 28000000 		.4byte	.LFE12
 2869 018d 0400     		.2byte	0x4
 2870 018f F3       		.byte	0xf3
 2871 0190 01       		.uleb128 0x1
 2872 0191 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 76


 2873 0192 9F       		.byte	0x9f
 2874 0193 00000000 		.4byte	0
 2875 0197 00000000 		.4byte	0
 2876              	.LLST13:
 2877 019b 08000000 		.4byte	.LVL25
 2878 019f 21000000 		.4byte	.LVL27-1
 2879 01a3 0100     		.2byte	0x1
 2880 01a5 50       		.byte	0x50
 2881 01a6 00000000 		.4byte	0
 2882 01aa 00000000 		.4byte	0
 2883              	.LLST14:
 2884 01ae 00000000 		.4byte	.LVL28
 2885 01b2 07000000 		.4byte	.LVL29-1
 2886 01b6 0100     		.2byte	0x1
 2887 01b8 50       		.byte	0x50
 2888 01b9 07000000 		.4byte	.LVL29-1
 2889 01bd 16000000 		.4byte	.LVL30
 2890 01c1 0100     		.2byte	0x1
 2891 01c3 54       		.byte	0x54
 2892 01c4 16000000 		.4byte	.LVL30
 2893 01c8 2C000000 		.4byte	.LFE13
 2894 01cc 0400     		.2byte	0x4
 2895 01ce F3       		.byte	0xf3
 2896 01cf 01       		.uleb128 0x1
 2897 01d0 50       		.byte	0x50
 2898 01d1 9F       		.byte	0x9f
 2899 01d2 00000000 		.4byte	0
 2900 01d6 00000000 		.4byte	0
 2901              	.LLST15:
 2902 01da 08000000 		.4byte	.LVL29
 2903 01de 1F000000 		.4byte	.LVL31-1
 2904 01e2 0100     		.2byte	0x1
 2905 01e4 50       		.byte	0x50
 2906 01e5 00000000 		.4byte	0
 2907 01e9 00000000 		.4byte	0
 2908              	.LLST16:
 2909 01ed 00000000 		.4byte	.LVL32
 2910 01f1 07000000 		.4byte	.LVL33-1
 2911 01f5 0100     		.2byte	0x1
 2912 01f7 50       		.byte	0x50
 2913 01f8 07000000 		.4byte	.LVL33-1
 2914 01fc 16000000 		.4byte	.LVL34
 2915 0200 0100     		.2byte	0x1
 2916 0202 54       		.byte	0x54
 2917 0203 16000000 		.4byte	.LVL34
 2918 0207 28000000 		.4byte	.LFE14
 2919 020b 0400     		.2byte	0x4
 2920 020d F3       		.byte	0xf3
 2921 020e 01       		.uleb128 0x1
 2922 020f 50       		.byte	0x50
 2923 0210 9F       		.byte	0x9f
 2924 0211 00000000 		.4byte	0
 2925 0215 00000000 		.4byte	0
 2926              	.LLST17:
 2927 0219 08000000 		.4byte	.LVL33
 2928 021d 1B000000 		.4byte	.LVL35-1
 2929 0221 0100     		.2byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 77


 2930 0223 50       		.byte	0x50
 2931 0224 00000000 		.4byte	0
 2932 0228 00000000 		.4byte	0
 2933              	.LLST18:
 2934 022c 00000000 		.4byte	.LVL36
 2935 0230 02000000 		.4byte	.LVL37
 2936 0234 0100     		.2byte	0x1
 2937 0236 50       		.byte	0x50
 2938 0237 02000000 		.4byte	.LVL37
 2939 023b 10000000 		.4byte	.LFE15
 2940 023f 0400     		.2byte	0x4
 2941 0241 F3       		.byte	0xf3
 2942 0242 01       		.uleb128 0x1
 2943 0243 50       		.byte	0x50
 2944 0244 9F       		.byte	0x9f
 2945 0245 00000000 		.4byte	0
 2946 0249 00000000 		.4byte	0
 2947              	.LLST19:
 2948 024d 00000000 		.4byte	.LVL38
 2949 0251 07000000 		.4byte	.LVL39-1
 2950 0255 0100     		.2byte	0x1
 2951 0257 50       		.byte	0x50
 2952 0258 07000000 		.4byte	.LVL39-1
 2953 025c 16000000 		.4byte	.LVL40
 2954 0260 0100     		.2byte	0x1
 2955 0262 54       		.byte	0x54
 2956 0263 16000000 		.4byte	.LVL40
 2957 0267 28000000 		.4byte	.LFE17
 2958 026b 0400     		.2byte	0x4
 2959 026d F3       		.byte	0xf3
 2960 026e 01       		.uleb128 0x1
 2961 026f 50       		.byte	0x50
 2962 0270 9F       		.byte	0x9f
 2963 0271 00000000 		.4byte	0
 2964 0275 00000000 		.4byte	0
 2965              	.LLST20:
 2966 0279 08000000 		.4byte	.LVL39
 2967 027d 1B000000 		.4byte	.LVL41-1
 2968 0281 0100     		.2byte	0x1
 2969 0283 50       		.byte	0x50
 2970 0284 00000000 		.4byte	0
 2971 0288 00000000 		.4byte	0
 2972              	.LLST21:
 2973 028c 00000000 		.4byte	.LVL42
 2974 0290 02000000 		.4byte	.LVL43
 2975 0294 0100     		.2byte	0x1
 2976 0296 50       		.byte	0x50
 2977 0297 02000000 		.4byte	.LVL43
 2978 029b 10000000 		.4byte	.LFE18
 2979 029f 0400     		.2byte	0x4
 2980 02a1 F3       		.byte	0xf3
 2981 02a2 01       		.uleb128 0x1
 2982 02a3 50       		.byte	0x50
 2983 02a4 9F       		.byte	0x9f
 2984 02a5 00000000 		.4byte	0
 2985 02a9 00000000 		.4byte	0
 2986              	.LLST22:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 78


 2987 02ad 00000000 		.4byte	.LVL44
 2988 02b1 07000000 		.4byte	.LVL45-1
 2989 02b5 0100     		.2byte	0x1
 2990 02b7 50       		.byte	0x50
 2991 02b8 07000000 		.4byte	.LVL45-1
 2992 02bc 1E000000 		.4byte	.LVL47
 2993 02c0 0100     		.2byte	0x1
 2994 02c2 54       		.byte	0x54
 2995 02c3 1E000000 		.4byte	.LVL47
 2996 02c7 24000000 		.4byte	.LFE20
 2997 02cb 0400     		.2byte	0x4
 2998 02cd F3       		.byte	0xf3
 2999 02ce 01       		.uleb128 0x1
 3000 02cf 50       		.byte	0x50
 3001 02d0 9F       		.byte	0x9f
 3002 02d1 00000000 		.4byte	0
 3003 02d5 00000000 		.4byte	0
 3004              	.LLST23:
 3005 02d9 08000000 		.4byte	.LVL45
 3006 02dd 1D000000 		.4byte	.LVL46-1
 3007 02e1 0100     		.2byte	0x1
 3008 02e3 50       		.byte	0x50
 3009 02e4 00000000 		.4byte	0
 3010 02e8 00000000 		.4byte	0
 3011              	.LLST24:
 3012 02ec 00000000 		.4byte	.LVL48
 3013 02f0 02000000 		.4byte	.LVL49
 3014 02f4 0100     		.2byte	0x1
 3015 02f6 50       		.byte	0x50
 3016 02f7 02000000 		.4byte	.LVL49
 3017 02fb 10000000 		.4byte	.LFE21
 3018 02ff 0400     		.2byte	0x4
 3019 0301 F3       		.byte	0xf3
 3020 0302 01       		.uleb128 0x1
 3021 0303 50       		.byte	0x50
 3022 0304 9F       		.byte	0x9f
 3023 0305 00000000 		.4byte	0
 3024 0309 00000000 		.4byte	0
 3025              	.LLST25:
 3026 030d 00000000 		.4byte	.LVL50
 3027 0311 07000000 		.4byte	.LVL51-1
 3028 0315 0100     		.2byte	0x1
 3029 0317 50       		.byte	0x50
 3030 0318 07000000 		.4byte	.LVL51-1
 3031 031c 18000000 		.4byte	.LVL52
 3032 0320 0100     		.2byte	0x1
 3033 0322 54       		.byte	0x54
 3034 0323 18000000 		.4byte	.LVL52
 3035 0327 28000000 		.4byte	.LFE23
 3036 032b 0400     		.2byte	0x4
 3037 032d F3       		.byte	0xf3
 3038 032e 01       		.uleb128 0x1
 3039 032f 50       		.byte	0x50
 3040 0330 9F       		.byte	0x9f
 3041 0331 00000000 		.4byte	0
 3042 0335 00000000 		.4byte	0
 3043              	.LLST26:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 79


 3044 0339 08000000 		.4byte	.LVL51
 3045 033d 21000000 		.4byte	.LVL53-1
 3046 0341 0100     		.2byte	0x1
 3047 0343 50       		.byte	0x50
 3048 0344 00000000 		.4byte	0
 3049 0348 00000000 		.4byte	0
 3050              	.LLST27:
 3051 034c 00000000 		.4byte	.LVL54
 3052 0350 02000000 		.4byte	.LVL55
 3053 0354 0100     		.2byte	0x1
 3054 0356 50       		.byte	0x50
 3055 0357 02000000 		.4byte	.LVL55
 3056 035b 10000000 		.4byte	.LFE24
 3057 035f 0400     		.2byte	0x4
 3058 0361 F3       		.byte	0xf3
 3059 0362 01       		.uleb128 0x1
 3060 0363 50       		.byte	0x50
 3061 0364 9F       		.byte	0x9f
 3062 0365 00000000 		.4byte	0
 3063 0369 00000000 		.4byte	0
 3064              	.LLST28:
 3065 036d 00000000 		.4byte	.LVL56
 3066 0371 02000000 		.4byte	.LVL57
 3067 0375 0100     		.2byte	0x1
 3068 0377 50       		.byte	0x50
 3069 0378 02000000 		.4byte	.LVL57
 3070 037c 10000000 		.4byte	.LFE26
 3071 0380 0400     		.2byte	0x4
 3072 0382 F3       		.byte	0xf3
 3073 0383 01       		.uleb128 0x1
 3074 0384 50       		.byte	0x50
 3075 0385 9F       		.byte	0x9f
 3076 0386 00000000 		.4byte	0
 3077 038a 00000000 		.4byte	0
 3078              	.LLST29:
 3079 038e 00000000 		.4byte	.LVL58
 3080 0392 07000000 		.4byte	.LVL59-1
 3081 0396 0100     		.2byte	0x1
 3082 0398 50       		.byte	0x50
 3083 0399 07000000 		.4byte	.LVL59-1
 3084 039d 16000000 		.4byte	.LVL60
 3085 03a1 0100     		.2byte	0x1
 3086 03a3 54       		.byte	0x54
 3087 03a4 16000000 		.4byte	.LVL60
 3088 03a8 24000000 		.4byte	.LFE30
 3089 03ac 0400     		.2byte	0x4
 3090 03ae F3       		.byte	0xf3
 3091 03af 01       		.uleb128 0x1
 3092 03b0 50       		.byte	0x50
 3093 03b1 9F       		.byte	0x9f
 3094 03b2 00000000 		.4byte	0
 3095 03b6 00000000 		.4byte	0
 3096              	.LLST30:
 3097 03ba 08000000 		.4byte	.LVL59
 3098 03be 1B000000 		.4byte	.LVL61-1
 3099 03c2 0100     		.2byte	0x1
 3100 03c4 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 80


 3101 03c5 00000000 		.4byte	0
 3102 03c9 00000000 		.4byte	0
 3103              	.LLST31:
 3104 03cd 00000000 		.4byte	.LVL62
 3105 03d1 07000000 		.4byte	.LVL63-1
 3106 03d5 0100     		.2byte	0x1
 3107 03d7 50       		.byte	0x50
 3108 03d8 07000000 		.4byte	.LVL63-1
 3109 03dc 16000000 		.4byte	.LVL64
 3110 03e0 0100     		.2byte	0x1
 3111 03e2 54       		.byte	0x54
 3112 03e3 16000000 		.4byte	.LVL64
 3113 03e7 24000000 		.4byte	.LFE31
 3114 03eb 0400     		.2byte	0x4
 3115 03ed F3       		.byte	0xf3
 3116 03ee 01       		.uleb128 0x1
 3117 03ef 50       		.byte	0x50
 3118 03f0 9F       		.byte	0x9f
 3119 03f1 00000000 		.4byte	0
 3120 03f5 00000000 		.4byte	0
 3121              	.LLST32:
 3122 03f9 08000000 		.4byte	.LVL63
 3123 03fd 1D000000 		.4byte	.LVL65-1
 3124 0401 0100     		.2byte	0x1
 3125 0403 50       		.byte	0x50
 3126 0404 00000000 		.4byte	0
 3127 0408 00000000 		.4byte	0
 3128              	.LLST33:
 3129 040c 00000000 		.4byte	.LVL66
 3130 0410 07000000 		.4byte	.LVL67-1
 3131 0414 0100     		.2byte	0x1
 3132 0416 50       		.byte	0x50
 3133 0417 07000000 		.4byte	.LVL67-1
 3134 041b 16000000 		.4byte	.LVL68
 3135 041f 0100     		.2byte	0x1
 3136 0421 54       		.byte	0x54
 3137 0422 16000000 		.4byte	.LVL68
 3138 0426 28000000 		.4byte	.LFE32
 3139 042a 0400     		.2byte	0x4
 3140 042c F3       		.byte	0xf3
 3141 042d 01       		.uleb128 0x1
 3142 042e 50       		.byte	0x50
 3143 042f 9F       		.byte	0x9f
 3144 0430 00000000 		.4byte	0
 3145 0434 00000000 		.4byte	0
 3146              	.LLST34:
 3147 0438 08000000 		.4byte	.LVL67
 3148 043c 1D000000 		.4byte	.LVL69-1
 3149 0440 0100     		.2byte	0x1
 3150 0442 50       		.byte	0x50
 3151 0443 00000000 		.4byte	0
 3152 0447 00000000 		.4byte	0
 3153              	.LLST35:
 3154 044b 00000000 		.4byte	.LVL70
 3155 044f 07000000 		.4byte	.LVL71-1
 3156 0453 0100     		.2byte	0x1
 3157 0455 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 81


 3158 0456 07000000 		.4byte	.LVL71-1
 3159 045a 16000000 		.4byte	.LVL72
 3160 045e 0100     		.2byte	0x1
 3161 0460 54       		.byte	0x54
 3162 0461 16000000 		.4byte	.LVL72
 3163 0465 24000000 		.4byte	.LFE33
 3164 0469 0400     		.2byte	0x4
 3165 046b F3       		.byte	0xf3
 3166 046c 01       		.uleb128 0x1
 3167 046d 50       		.byte	0x50
 3168 046e 9F       		.byte	0x9f
 3169 046f 00000000 		.4byte	0
 3170 0473 00000000 		.4byte	0
 3171              	.LLST36:
 3172 0477 08000000 		.4byte	.LVL71
 3173 047b 1D000000 		.4byte	.LVL73-1
 3174 047f 0100     		.2byte	0x1
 3175 0481 50       		.byte	0x50
 3176 0482 00000000 		.4byte	0
 3177 0486 00000000 		.4byte	0
 3178              	.LLST37:
 3179 048a 00000000 		.4byte	.LVL74
 3180 048e 07000000 		.4byte	.LVL75-1
 3181 0492 0100     		.2byte	0x1
 3182 0494 50       		.byte	0x50
 3183 0495 07000000 		.4byte	.LVL75-1
 3184 0499 16000000 		.4byte	.LVL76
 3185 049d 0100     		.2byte	0x1
 3186 049f 54       		.byte	0x54
 3187 04a0 16000000 		.4byte	.LVL76
 3188 04a4 24000000 		.4byte	.LFE34
 3189 04a8 0400     		.2byte	0x4
 3190 04aa F3       		.byte	0xf3
 3191 04ab 01       		.uleb128 0x1
 3192 04ac 50       		.byte	0x50
 3193 04ad 9F       		.byte	0x9f
 3194 04ae 00000000 		.4byte	0
 3195 04b2 00000000 		.4byte	0
 3196              	.LLST38:
 3197 04b6 08000000 		.4byte	.LVL75
 3198 04ba 1D000000 		.4byte	.LVL77-1
 3199 04be 0100     		.2byte	0x1
 3200 04c0 50       		.byte	0x50
 3201 04c1 00000000 		.4byte	0
 3202 04c5 00000000 		.4byte	0
 3203              	.LLST39:
 3204 04c9 00000000 		.4byte	.LVL78
 3205 04cd 09000000 		.4byte	.LVL79-1
 3206 04d1 0100     		.2byte	0x1
 3207 04d3 50       		.byte	0x50
 3208 04d4 09000000 		.4byte	.LVL79-1
 3209 04d8 0C000000 		.4byte	.LVL80
 3210 04dc 0100     		.2byte	0x1
 3211 04de 55       		.byte	0x55
 3212 04df 0C000000 		.4byte	.LVL80
 3213 04e3 1C000000 		.4byte	.LFE35
 3214 04e7 0400     		.2byte	0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 82


 3215 04e9 F3       		.byte	0xf3
 3216 04ea 01       		.uleb128 0x1
 3217 04eb 50       		.byte	0x50
 3218 04ec 9F       		.byte	0x9f
 3219 04ed 00000000 		.4byte	0
 3220 04f1 00000000 		.4byte	0
 3221              	.LLST40:
 3222 04f5 00000000 		.4byte	.LVL78
 3223 04f9 09000000 		.4byte	.LVL79-1
 3224 04fd 0100     		.2byte	0x1
 3225 04ff 51       		.byte	0x51
 3226 0500 09000000 		.4byte	.LVL79-1
 3227 0504 14000000 		.4byte	.LVL82
 3228 0508 0100     		.2byte	0x1
 3229 050a 54       		.byte	0x54
 3230 050b 14000000 		.4byte	.LVL82
 3231 050f 1C000000 		.4byte	.LFE35
 3232 0513 0400     		.2byte	0x4
 3233 0515 F3       		.byte	0xf3
 3234 0516 01       		.uleb128 0x1
 3235 0517 51       		.byte	0x51
 3236 0518 9F       		.byte	0x9f
 3237 0519 00000000 		.4byte	0
 3238 051d 00000000 		.4byte	0
 3239              	.LLST41:
 3240 0521 0A000000 		.4byte	.LVL79
 3241 0525 13000000 		.4byte	.LVL81-1
 3242 0529 0100     		.2byte	0x1
 3243 052b 50       		.byte	0x50
 3244 052c 00000000 		.4byte	0
 3245 0530 00000000 		.4byte	0
 3246              	.LLST42:
 3247 0534 06000000 		.4byte	.LVL83
 3248 0538 13000000 		.4byte	.LVL84-1
 3249 053c 0100     		.2byte	0x1
 3250 053e 50       		.byte	0x50
 3251 053f 00000000 		.4byte	0
 3252 0543 00000000 		.4byte	0
 3253              		.section	.debug_aranges,"",%progbits
 3254 0000 54010000 		.4byte	0x154
 3255 0004 0200     		.2byte	0x2
 3256 0006 00000000 		.4byte	.Ldebug_info0
 3257 000a 04       		.byte	0x4
 3258 000b 00       		.byte	0
 3259 000c 0000     		.2byte	0
 3260 000e 0000     		.2byte	0
 3261 0010 00000000 		.4byte	.LFB5
 3262 0014 1C000000 		.4byte	.LFE5-.LFB5
 3263 0018 00000000 		.4byte	.LFB6
 3264 001c 28000000 		.4byte	.LFE6-.LFB6
 3265 0020 00000000 		.4byte	.LFB7
 3266 0024 28000000 		.4byte	.LFE7-.LFB7
 3267 0028 00000000 		.4byte	.LFB8
 3268 002c 28000000 		.4byte	.LFE8-.LFB8
 3269 0030 00000000 		.4byte	.LFB9
 3270 0034 2C000000 		.4byte	.LFE9-.LFB9
 3271 0038 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 83


 3272 003c 10000000 		.4byte	.LFE10-.LFB10
 3273 0040 00000000 		.4byte	.LFB11
 3274 0044 28000000 		.4byte	.LFE11-.LFB11
 3275 0048 00000000 		.4byte	.LFB12
 3276 004c 28000000 		.4byte	.LFE12-.LFB12
 3277 0050 00000000 		.4byte	.LFB13
 3278 0054 2C000000 		.4byte	.LFE13-.LFB13
 3279 0058 00000000 		.4byte	.LFB14
 3280 005c 28000000 		.4byte	.LFE14-.LFB14
 3281 0060 00000000 		.4byte	.LFB15
 3282 0064 10000000 		.4byte	.LFE15-.LFB15
 3283 0068 00000000 		.4byte	.LFB16
 3284 006c 10000000 		.4byte	.LFE16-.LFB16
 3285 0070 00000000 		.4byte	.LFB17
 3286 0074 28000000 		.4byte	.LFE17-.LFB17
 3287 0078 00000000 		.4byte	.LFB18
 3288 007c 10000000 		.4byte	.LFE18-.LFB18
 3289 0080 00000000 		.4byte	.LFB19
 3290 0084 10000000 		.4byte	.LFE19-.LFB19
 3291 0088 00000000 		.4byte	.LFB20
 3292 008c 24000000 		.4byte	.LFE20-.LFB20
 3293 0090 00000000 		.4byte	.LFB21
 3294 0094 10000000 		.4byte	.LFE21-.LFB21
 3295 0098 00000000 		.4byte	.LFB22
 3296 009c 10000000 		.4byte	.LFE22-.LFB22
 3297 00a0 00000000 		.4byte	.LFB23
 3298 00a4 28000000 		.4byte	.LFE23-.LFB23
 3299 00a8 00000000 		.4byte	.LFB24
 3300 00ac 10000000 		.4byte	.LFE24-.LFB24
 3301 00b0 00000000 		.4byte	.LFB25
 3302 00b4 10000000 		.4byte	.LFE25-.LFB25
 3303 00b8 00000000 		.4byte	.LFB26
 3304 00bc 10000000 		.4byte	.LFE26-.LFB26
 3305 00c0 00000000 		.4byte	.LFB27
 3306 00c4 10000000 		.4byte	.LFE27-.LFB27
 3307 00c8 00000000 		.4byte	.LFB28
 3308 00cc 10000000 		.4byte	.LFE28-.LFB28
 3309 00d0 00000000 		.4byte	.LFB29
 3310 00d4 10000000 		.4byte	.LFE29-.LFB29
 3311 00d8 00000000 		.4byte	.LFB30
 3312 00dc 24000000 		.4byte	.LFE30-.LFB30
 3313 00e0 00000000 		.4byte	.LFB31
 3314 00e4 24000000 		.4byte	.LFE31-.LFB31
 3315 00e8 00000000 		.4byte	.LFB32
 3316 00ec 28000000 		.4byte	.LFE32-.LFB32
 3317 00f0 00000000 		.4byte	.LFB33
 3318 00f4 24000000 		.4byte	.LFE33-.LFB33
 3319 00f8 00000000 		.4byte	.LFB34
 3320 00fc 24000000 		.4byte	.LFE34-.LFB34
 3321 0100 00000000 		.4byte	.LFB35
 3322 0104 1C000000 		.4byte	.LFE35-.LFB35
 3323 0108 00000000 		.4byte	.LFB3
 3324 010c 24000000 		.4byte	.LFE3-.LFB3
 3325 0110 00000000 		.4byte	.LFB36
 3326 0114 14000000 		.4byte	.LFE36-.LFB36
 3327 0118 00000000 		.4byte	.LFB37
 3328 011c 0C000000 		.4byte	.LFE37-.LFB37
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 84


 3329 0120 00000000 		.4byte	.LFB2
 3330 0124 48000000 		.4byte	.LFE2-.LFB2
 3331 0128 00000000 		.4byte	.LFB4
 3332 012c 20000000 		.4byte	.LFE4-.LFB4
 3333 0130 00000000 		.4byte	.LFB38
 3334 0134 0C000000 		.4byte	.LFE38-.LFB38
 3335 0138 00000000 		.4byte	.LFB39
 3336 013c 0C000000 		.4byte	.LFE39-.LFB39
 3337 0140 00000000 		.4byte	.LFB40
 3338 0144 0C000000 		.4byte	.LFE40-.LFB40
 3339 0148 00000000 		.4byte	.LFB41
 3340 014c 0C000000 		.4byte	.LFE41-.LFB41
 3341 0150 00000000 		.4byte	0
 3342 0154 00000000 		.4byte	0
 3343              		.section	.debug_ranges,"",%progbits
 3344              	.Ldebug_ranges0:
 3345 0000 00000000 		.4byte	.LFB5
 3346 0004 1C000000 		.4byte	.LFE5
 3347 0008 00000000 		.4byte	.LFB6
 3348 000c 28000000 		.4byte	.LFE6
 3349 0010 00000000 		.4byte	.LFB7
 3350 0014 28000000 		.4byte	.LFE7
 3351 0018 00000000 		.4byte	.LFB8
 3352 001c 28000000 		.4byte	.LFE8
 3353 0020 00000000 		.4byte	.LFB9
 3354 0024 2C000000 		.4byte	.LFE9
 3355 0028 00000000 		.4byte	.LFB10
 3356 002c 10000000 		.4byte	.LFE10
 3357 0030 00000000 		.4byte	.LFB11
 3358 0034 28000000 		.4byte	.LFE11
 3359 0038 00000000 		.4byte	.LFB12
 3360 003c 28000000 		.4byte	.LFE12
 3361 0040 00000000 		.4byte	.LFB13
 3362 0044 2C000000 		.4byte	.LFE13
 3363 0048 00000000 		.4byte	.LFB14
 3364 004c 28000000 		.4byte	.LFE14
 3365 0050 00000000 		.4byte	.LFB15
 3366 0054 10000000 		.4byte	.LFE15
 3367 0058 00000000 		.4byte	.LFB16
 3368 005c 10000000 		.4byte	.LFE16
 3369 0060 00000000 		.4byte	.LFB17
 3370 0064 28000000 		.4byte	.LFE17
 3371 0068 00000000 		.4byte	.LFB18
 3372 006c 10000000 		.4byte	.LFE18
 3373 0070 00000000 		.4byte	.LFB19
 3374 0074 10000000 		.4byte	.LFE19
 3375 0078 00000000 		.4byte	.LFB20
 3376 007c 24000000 		.4byte	.LFE20
 3377 0080 00000000 		.4byte	.LFB21
 3378 0084 10000000 		.4byte	.LFE21
 3379 0088 00000000 		.4byte	.LFB22
 3380 008c 10000000 		.4byte	.LFE22
 3381 0090 00000000 		.4byte	.LFB23
 3382 0094 28000000 		.4byte	.LFE23
 3383 0098 00000000 		.4byte	.LFB24
 3384 009c 10000000 		.4byte	.LFE24
 3385 00a0 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 85


 3386 00a4 10000000 		.4byte	.LFE25
 3387 00a8 00000000 		.4byte	.LFB26
 3388 00ac 10000000 		.4byte	.LFE26
 3389 00b0 00000000 		.4byte	.LFB27
 3390 00b4 10000000 		.4byte	.LFE27
 3391 00b8 00000000 		.4byte	.LFB28
 3392 00bc 10000000 		.4byte	.LFE28
 3393 00c0 00000000 		.4byte	.LFB29
 3394 00c4 10000000 		.4byte	.LFE29
 3395 00c8 00000000 		.4byte	.LFB30
 3396 00cc 24000000 		.4byte	.LFE30
 3397 00d0 00000000 		.4byte	.LFB31
 3398 00d4 24000000 		.4byte	.LFE31
 3399 00d8 00000000 		.4byte	.LFB32
 3400 00dc 28000000 		.4byte	.LFE32
 3401 00e0 00000000 		.4byte	.LFB33
 3402 00e4 24000000 		.4byte	.LFE33
 3403 00e8 00000000 		.4byte	.LFB34
 3404 00ec 24000000 		.4byte	.LFE34
 3405 00f0 00000000 		.4byte	.LFB35
 3406 00f4 1C000000 		.4byte	.LFE35
 3407 00f8 00000000 		.4byte	.LFB3
 3408 00fc 24000000 		.4byte	.LFE3
 3409 0100 00000000 		.4byte	.LFB36
 3410 0104 14000000 		.4byte	.LFE36
 3411 0108 00000000 		.4byte	.LFB37
 3412 010c 0C000000 		.4byte	.LFE37
 3413 0110 00000000 		.4byte	.LFB2
 3414 0114 48000000 		.4byte	.LFE2
 3415 0118 00000000 		.4byte	.LFB4
 3416 011c 20000000 		.4byte	.LFE4
 3417 0120 00000000 		.4byte	.LFB38
 3418 0124 0C000000 		.4byte	.LFE38
 3419 0128 00000000 		.4byte	.LFB39
 3420 012c 0C000000 		.4byte	.LFE39
 3421 0130 00000000 		.4byte	.LFB40
 3422 0134 0C000000 		.4byte	.LFE40
 3423 0138 00000000 		.4byte	.LFB41
 3424 013c 0C000000 		.4byte	.LFE41
 3425 0140 00000000 		.4byte	0
 3426 0144 00000000 		.4byte	0
 3427              		.section	.debug_line,"",%progbits
 3428              	.Ldebug_line0:
 3429 0000 7C030000 		.section	.debug_str,"MS",%progbits,1
 3429      02004F00 
 3429      00000201 
 3429      FB0E0D00 
 3429      01010101 
 3430              	.LASF37:
 3431 0000 636F756E 		.ascii	"count\000"
 3431      7400
 3432              	.LASF81:
 3433 0006 43794578 		.ascii	"CyExitCriticalSection\000"
 3433      69744372 
 3433      69746963 
 3433      616C5365 
 3433      6374696F 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 86


 3434              	.LASF16:
 3435 001c 50574D5F 		.ascii	"PWM_1_Stop\000"
 3435      315F5374 
 3435      6F7000
 3436              	.LASF56:
 3437 0027 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 3437      315F5265 
 3437      61644361 
 3437      70747572 
 3437      6500
 3438              	.LASF73:
 3439 0039 50574D5F 		.ascii	"PWM_1_GetInterruptSource\000"
 3439      315F4765 
 3439      74496E74 
 3439      65727275 
 3439      7074536F 
 3440              	.LASF46:
 3441 0052 50574D5F 		.ascii	"PWM_1_WritePeriodBuf\000"
 3441      315F5772 
 3441      69746550 
 3441      6572696F 
 3441      64427566 
 3442              	.LASF41:
 3443 0067 70657269 		.ascii	"period\000"
 3443      6F6400
 3444              	.LASF76:
 3445 006e 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3445      4320342E 
 3445      382E3420 
 3445      32303134 
 3445      30353236 
 3446 00a1 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3446      20726576 
 3446      6973696F 
 3446      6E203231 
 3446      31333538 
 3447 00d4 67202D66 		.ascii	"g -ffunction-sections\000"
 3447      66756E63 
 3447      74696F6E 
 3447      2D736563 
 3447      74696F6E 
 3448              	.LASF7:
 3449 00ea 6C6F6E67 		.ascii	"long long unsigned int\000"
 3449      206C6F6E 
 3449      6720756E 
 3449      7369676E 
 3449      65642069 
 3450              	.LASF21:
 3451 0101 71644D6F 		.ascii	"qdMode\000"
 3451      646500
 3452              	.LASF24:
 3453 0108 50574D5F 		.ascii	"PWM_1_SetOneShot\000"
 3453      315F5365 
 3453      744F6E65 
 3453      53686F74 
 3453      00
 3454              	.LASF52:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 87


 3455 0119 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 3455      315F5265 
 3455      6164436F 
 3455      6D706172 
 3455      6500
 3456              	.LASF75:
 3457 012b 50574D5F 		.ascii	"PWM_1_SetInterrupt\000"
 3457      315F5365 
 3457      74496E74 
 3457      65727275 
 3457      707400
 3458              	.LASF6:
 3459 013e 6C6F6E67 		.ascii	"long long int\000"
 3459      206C6F6E 
 3459      6720696E 
 3459      7400
 3460              	.LASF0:
 3461 014c 7369676E 		.ascii	"signed char\000"
 3461      65642063 
 3461      68617200 
 3462              	.LASF57:
 3463 0158 50574D5F 		.ascii	"PWM_1_ReadCaptureBuf\000"
 3463      315F5265 
 3463      61644361 
 3463      70747572 
 3463      65427566 
 3464              	.LASF67:
 3465 016d 50574D5F 		.ascii	"PWM_1_ReadStatus\000"
 3465      315F5265 
 3465      61645374 
 3465      61747573 
 3465      00
 3466              	.LASF4:
 3467 017e 6C6F6E67 		.ascii	"long int\000"
 3467      20696E74 
 3467      00
 3468              	.LASF9:
 3469 0187 75696E74 		.ascii	"uint8\000"
 3469      3800
 3470              	.LASF12:
 3471 018d 646F7562 		.ascii	"double\000"
 3471      6C6500
 3472              	.LASF42:
 3473 0194 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 3473      315F5265 
 3473      6164436F 
 3473      756E7465 
 3473      7200
 3474              	.LASF63:
 3475 01a6 50574D5F 		.ascii	"PWM_1_SetCountMode\000"
 3475      315F5365 
 3475      74436F75 
 3475      6E744D6F 
 3475      646500
 3476              	.LASF10:
 3477 01b9 75696E74 		.ascii	"uint32\000"
 3477      333200
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 88


 3478              	.LASF59:
 3479 01c0 74726967 		.ascii	"triggerMode\000"
 3479      6765724D 
 3479      6F646500 
 3480              	.LASF35:
 3481 01cc 6D61736B 		.ascii	"mask\000"
 3481      00
 3482              	.LASF33:
 3483 01d1 64656164 		.ascii	"deadTime\000"
 3483      54696D65 
 3483      00
 3484              	.LASF8:
 3485 01da 756E7369 		.ascii	"unsigned int\000"
 3485      676E6564 
 3485      20696E74 
 3485      00
 3486              	.LASF17:
 3487 01e7 50574D5F 		.ascii	"PWM_1_SetMode\000"
 3487      315F5365 
 3487      744D6F64 
 3487      6500
 3488              	.LASF65:
 3489 01f5 636F6D6D 		.ascii	"command\000"
 3489      616E6400 
 3490              	.LASF5:
 3491 01fd 6C6F6E67 		.ascii	"long unsigned int\000"
 3491      20756E73 
 3491      69676E65 
 3491      6420696E 
 3491      7400
 3492              	.LASF27:
 3493 020f 6D6F6465 		.ascii	"modeMask\000"
 3493      4D61736B 
 3493      00
 3494              	.LASF80:
 3495 0218 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3495      74657243 
 3495      72697469 
 3495      63616C53 
 3495      65637469 
 3496              	.LASF43:
 3497 022f 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 3497      315F5265 
 3497      61645065 
 3497      72696F64 
 3497      00
 3498              	.LASF50:
 3499 0240 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 3499      315F5772 
 3499      69746543 
 3499      6F6D7061 
 3499      726500
 3500              	.LASF3:
 3501 0253 73686F72 		.ascii	"short unsigned int\000"
 3501      7420756E 
 3501      7369676E 
 3501      65642069 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 89


 3501      6E7400
 3502              	.LASF25:
 3503 0266 6F6E6553 		.ascii	"oneShotEnable\000"
 3503      686F7445 
 3503      6E61626C 
 3503      6500
 3504              	.LASF66:
 3505 0274 50574D5F 		.ascii	"PWM_1_Enable\000"
 3505      315F456E 
 3505      61626C65 
 3505      00
 3506              	.LASF70:
 3507 0281 50574D5F 		.ascii	"PWM_1_Init\000"
 3507      315F496E 
 3507      697400
 3508              	.LASF14:
 3509 028c 72656733 		.ascii	"reg32\000"
 3509      3200
 3510              	.LASF36:
 3511 0292 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 3511      315F5772 
 3511      69746543 
 3511      6F756E74 
 3511      657200
 3512              	.LASF30:
 3513 02a5 50574D5F 		.ascii	"PWM_1_SetPWMStopOnKill\000"
 3513      315F5365 
 3513      7450574D 
 3513      53746F70 
 3513      4F6E4B69 
 3514              	.LASF15:
 3515 02bc 73697A65 		.ascii	"sizetype\000"
 3515      74797065 
 3515      00
 3516              	.LASF29:
 3517 02c5 73796E63 		.ascii	"syncKillEnable\000"
 3517      4B696C6C 
 3517      456E6162 
 3517      6C6500
 3518              	.LASF77:
 3519 02d4 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 3519      6E657261 
 3519      7465645F 
 3519      536F7572 
 3519      63655C50 
 3520              	.LASF51:
 3521 02f5 636F6D70 		.ascii	"compare\000"
 3521      61726500 
 3522              	.LASF26:
 3523 02fd 50574D5F 		.ascii	"PWM_1_SetPWMMode\000"
 3523      315F5365 
 3523      7450574D 
 3523      4D6F6465 
 3523      00
 3524              	.LASF38:
 3525 030e 50574D5F 		.ascii	"PWM_1_SetCounterMode\000"
 3525      315F5365 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 90


 3525      74436F75 
 3525      6E746572 
 3525      4D6F6465 
 3526              	.LASF55:
 3527 0323 50574D5F 		.ascii	"PWM_1_ReadCompareBuf\000"
 3527      315F5265 
 3527      6164436F 
 3527      6D706172 
 3527      65427566 
 3528              	.LASF44:
 3529 0338 50574D5F 		.ascii	"PWM_1_SetCompareSwap\000"
 3529      315F5365 
 3529      74436F6D 
 3529      70617265 
 3529      53776170 
 3530              	.LASF78:
 3531 034d 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 3531      73657273 
 3531      5C6D6974 
 3531      6368656C 
 3531      6C5C446F 
 3532 037a 2D546872 		.ascii	"-Throttle\\Potentiometer-Test-BLE.cydsn\000"
 3532      6F74746C 
 3532      655C506F 
 3532      74656E74 
 3532      696F6D65 
 3533              	.LASF11:
 3534 03a1 666C6F61 		.ascii	"float\000"
 3534      7400
 3535              	.LASF23:
 3536 03a7 70726573 		.ascii	"prescaler\000"
 3536      63616C65 
 3536      7200
 3537              	.LASF48:
 3538 03b1 50574D5F 		.ascii	"PWM_1_ReadPeriodBuf\000"
 3538      315F5265 
 3538      61645065 
 3538      72696F64 
 3538      42756600 
 3539              	.LASF34:
 3540 03c5 50574D5F 		.ascii	"PWM_1_SetPWMInvert\000"
 3540      315F5365 
 3540      7450574D 
 3540      496E7665 
 3540      727400
 3541              	.LASF61:
 3542 03d8 50574D5F 		.ascii	"PWM_1_SetStartMode\000"
 3542      315F5365 
 3542      74537461 
 3542      72744D6F 
 3542      646500
 3543              	.LASF1:
 3544 03eb 756E7369 		.ascii	"unsigned char\000"
 3544      676E6564 
 3544      20636861 
 3544      7200
 3545              	.LASF32:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 91


 3546 03f9 50574D5F 		.ascii	"PWM_1_SetPWMDeadTime\000"
 3546      315F5365 
 3546      7450574D 
 3546      44656164 
 3546      54696D65 
 3547              	.LASF28:
 3548 040e 50574D5F 		.ascii	"PWM_1_SetPWMSyncKill\000"
 3548      315F5365 
 3548      7450574D 
 3548      53796E63 
 3548      4B696C6C 
 3549              	.LASF31:
 3550 0423 73746F70 		.ascii	"stopOnKillEnable\000"
 3550      4F6E4B69 
 3550      6C6C456E 
 3550      61626C65 
 3550      00
 3551              	.LASF2:
 3552 0434 73686F72 		.ascii	"short int\000"
 3552      7420696E 
 3552      7400
 3553              	.LASF49:
 3554 043e 50574D5F 		.ascii	"PWM_1_SetPeriodSwap\000"
 3554      315F5365 
 3554      74506572 
 3554      696F6453 
 3554      77617000 
 3555              	.LASF69:
 3556 0452 696E7465 		.ascii	"interruptMask\000"
 3556      72727570 
 3556      744D6173 
 3556      6B00
 3557              	.LASF68:
 3558 0460 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 3558      315F5365 
 3558      74496E74 
 3558      65727275 
 3558      70744D6F 
 3559              	.LASF62:
 3560 0477 50574D5F 		.ascii	"PWM_1_SetStopMode\000"
 3560      315F5365 
 3560      7453746F 
 3560      704D6F64 
 3560      6500
 3561              	.LASF13:
 3562 0489 63686172 		.ascii	"char\000"
 3562      00
 3563              	.LASF20:
 3564 048e 6D6F6465 		.ascii	"mode\000"
 3564      00
 3565              	.LASF64:
 3566 0493 50574D5F 		.ascii	"PWM_1_TriggerCommand\000"
 3566      315F5472 
 3566      69676765 
 3566      72436F6D 
 3566      6D616E64 
 3567              	.LASF22:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 92


 3568 04a8 50574D5F 		.ascii	"PWM_1_SetPrescaler\000"
 3568      315F5365 
 3568      74507265 
 3568      7363616C 
 3568      657200
 3569              	.LASF74:
 3570 04bb 50574D5F 		.ascii	"PWM_1_ClearInterrupt\000"
 3570      315F436C 
 3570      65617249 
 3570      6E746572 
 3570      72757074 
 3571              	.LASF53:
 3572 04d0 50574D5F 		.ascii	"PWM_1_WriteCompareBuf\000"
 3572      315F5772 
 3572      69746543 
 3572      6F6D7061 
 3572      72654275 
 3573              	.LASF39:
 3574 04e6 636F756E 		.ascii	"counterMode\000"
 3574      7465724D 
 3574      6F646500 
 3575              	.LASF54:
 3576 04f2 636F6D70 		.ascii	"compareBuf\000"
 3576      61726542 
 3576      756600
 3577              	.LASF71:
 3578 04fd 50574D5F 		.ascii	"PWM_1_Start\000"
 3578      315F5374 
 3578      61727400 
 3579              	.LASF60:
 3580 0509 50574D5F 		.ascii	"PWM_1_SetReloadMode\000"
 3580      315F5365 
 3580      7452656C 
 3580      6F61644D 
 3580      6F646500 
 3581              	.LASF18:
 3582 051d 656E6162 		.ascii	"enableInterrupts\000"
 3582      6C65496E 
 3582      74657272 
 3582      75707473 
 3582      00
 3583              	.LASF40:
 3584 052e 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 3584      315F5772 
 3584      69746550 
 3584      6572696F 
 3584      6400
 3585              	.LASF58:
 3586 0540 50574D5F 		.ascii	"PWM_1_SetCaptureMode\000"
 3586      315F5365 
 3586      74436170 
 3586      74757265 
 3586      4D6F6465 
 3587              	.LASF79:
 3588 0555 50574D5F 		.ascii	"PWM_1_initVar\000"
 3588      315F696E 
 3588      69745661 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDOxWel.s 			page 93


 3588      7200
 3589              	.LASF19:
 3590 0563 50574D5F 		.ascii	"PWM_1_SetQDMode\000"
 3590      315F5365 
 3590      7451444D 
 3590      6F646500 
 3591              	.LASF45:
 3592 0573 73776170 		.ascii	"swapEnable\000"
 3592      456E6162 
 3592      6C6500
 3593              	.LASF47:
 3594 057e 70657269 		.ascii	"periodBuf\000"
 3594      6F644275 
 3594      6600
 3595              	.LASF72:
 3596 0588 50574D5F 		.ascii	"PWM_1_GetInterruptSourceMasked\000"
 3596      315F4765 
 3596      74496E74 
 3596      65727275 
 3596      7074536F 
 3597              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
