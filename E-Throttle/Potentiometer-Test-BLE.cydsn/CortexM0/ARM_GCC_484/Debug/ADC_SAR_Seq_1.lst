ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_SAR_Seq_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_SAR_Seq_1_Init, %function
  23              	ADC_SAR_Seq_1_Init:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 2


  33:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 3


  90:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 38B5     		push	{r3, r4, r5, lr}
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 3, -16
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 5, -8
  33              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 4


 139:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  34              		.loc 1 172 0
  35 0002 0F20     		mov	r0, #15
  36 0004 0321     		mov	r1, #3
  37 0006 FFF7FEFF 		bl	CyIntSetPriority
  38              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  39              		.loc 1 173 0
  40 000a 0F20     		mov	r0, #15
  41 000c 2249     		ldr	r1, .L6
  42 000e FFF7FEFF 		bl	CyIntSetVector
  43              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  44              		.loc 1 177 0
  45 0012 0122     		mov	r2, #1
  46 0014 214B     		ldr	r3, .L6+4
  47 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  48              		.loc 1 178 0
  49 0018 214B     		ldr	r3, .L6+8
  50 001a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 5


 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  51              		.loc 1 180 0
  52 001c 214B     		ldr	r3, .L6+12
  53 001e 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  54              		.loc 1 178 0
  55 0020 002B     		cmp	r3, #0
  56 0022 01DA     		bge	.L5
  57 0024 204B     		ldr	r3, .L6+16
  58 0026 00E0     		b	.L2
  59              	.L5:
  60 0028 204B     		ldr	r3, .L6+20
  61              	.L2:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  62              		.loc 1 178 0 is_stmt 0 discriminator 3
  63 002a 1A43     		orr	r2, r3
  64 002c 1C4B     		ldr	r3, .L6+8
  65 002e 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 3
  67 0030 1F4A     		ldr	r2, .L6+24
  68 0032 204B     		ldr	r3, .L6+28
  69 0034 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 3
  71 0036 204A     		ldr	r2, .L6+32
  72 0038 204B     		ldr	r3, .L6+36
  73 003a 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 3
  75 003c 0023     		mov	r3, #0
  76 003e 204A     		ldr	r2, .L6+40
  77 0040 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 3
  79 0042 204A     		ldr	r2, .L6+44
  80 0044 2049     		ldr	r1, .L6+48
  81 0046 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 3
  83 0048 2049     		ldr	r1, .L6+52
  84 004a 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 190 0 discriminator 3
  86 004c 204A     		ldr	r2, .L6+56
  87 004e 1068     		ldr	r0, [r2]
  88 0050 8021     		mov	r1, #128
  89 0052 4902     		lsl	r1, r1, #9
  90 0054 0143     		orr	r1, r0
  91 0056 1160     		str	r1, [r2]
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 6


 193:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  92              		.loc 1 197 0 discriminator 3
  93 0058 1E4A     		ldr	r2, .L6+60
  94 005a 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  95              		.loc 1 198 0 discriminator 3
  96 005c 1E4A     		ldr	r2, .L6+64
  97 005e 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  98              		.loc 1 199 0 discriminator 3
  99 0060 0122     		mov	r2, #1
 100 0062 1E4B     		ldr	r3, .L6+68
 101 0064 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 102              		.loc 1 206 0 discriminator 3
 103 0066 1E4B     		ldr	r3, .L6+72
 104 0068 1968     		ldr	r1, [r3]
 105              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 106              		.loc 1 221 0 discriminator 3
 107 006a 1E4A     		ldr	r2, .L6+76
 108 006c 0A40     		and	r2, r1
 109 006e 8021     		mov	r1, #128
 110              	.LVL3:
 111 0070 8905     		lsl	r1, r1, #22
 112 0072 0A43     		orr	r2, r1
 113              	.LVL4:
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 114              		.loc 1 226 0 discriminator 3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 7


 115 0074 1A60     		str	r2, [r3]
 116              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 117              		.loc 1 232 0 discriminator 3
 118 0076 0023     		mov	r3, #0
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 119              		.loc 1 253 0 discriminator 3
 120 0078 0022     		mov	r2, #0
 121              	.LVL6:
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 8


 277:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 122              		.loc 1 311 0 discriminator 3
 123 007a 1B48     		ldr	r0, .L6+80
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 124              		.loc 1 232 0 discriminator 3
 125 007c 09E0     		b	.L3
 126              	.LVL7:
 127              	.L4:
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 128              		.loc 1 253 0
 129 007e 9900     		lsl	r1, r3, #2
 130 0080 1A4D     		ldr	r5, .L6+84
 131 0082 4C19     		add	r4, r1, r5
 132 0084 2260     		str	r2, [r4]
 133              	.LVL8:
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 134              		.loc 1 298 0
 135 0086 5C00     		lsl	r4, r3, #1
 136 0088 194D     		ldr	r5, .L6+88
 137 008a 6253     		strh	r2, [r4, r5]
 138              		.loc 1 311 0
 139 008c 194C     		ldr	r4, .L6+92
 140 008e 0851     		str	r0, [r1, r4]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 9


 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 141              		.loc 1 232 0
 142 0090 0133     		add	r3, r3, #1
 143              	.LVL9:
 144              	.L3:
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 145              		.loc 1 232 0 is_stmt 0 discriminator 1
 146 0092 002B     		cmp	r3, #0
 147 0094 F3D0     		beq	.L4
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 148              		.loc 1 314 0 is_stmt 1
 149              		@ sp needed
 150 0096 38BD     		pop	{r3, r4, r5, pc}
 151              	.L7:
 152              		.align	2
 153              	.L6:
 154 0098 00000000 		.word	ADC_SAR_Seq_1_ISR
 155 009c 20003A40 		.word	1077542944
 156 00a0 00003A40 		.word	1077542912
 157 00a4 80033A40 		.word	1077543808
 158 00a8 C0021051 		.word	1360003776
 159 00ac C0020051 		.word	1358955200
 160 00b0 88000080 		.word	-2147483512
 161 00b4 04003A40 		.word	1077542916
 162 00b8 0000FF07 		.word	134152192
 163 00bc 18003A40 		.word	1077542936
 164 00c0 1C003A40 		.word	1077542940
 165 00c4 04000400 		.word	262148
 166 00c8 10003A40 		.word	1077542928
 167 00cc 14003A40 		.word	1077542932
 168 00d0 00033A40 		.word	1077543680
 169 00d4 28023A40 		.word	1077543464
 170 00d8 38023A40 		.word	1077543480
 171 00dc 18023A40 		.word	1077543448
 172 00e0 30003A40 		.word	1077542960
 173 00e4 FEFFFFDF 		.word	-536870914
 174 00e8 204E0000 		.word	20000
 175 00ec 80003A40 		.word	1077543040
 176 00f0 00000000 		.word	ADC_SAR_Seq_1_offset
 177 00f4 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 178              		.cfi_endproc
 179              	.LFE3:
 180              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 181              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 182              		.align	2
 183              		.global	ADC_SAR_Seq_1_Enable
 184              		.code	16
 185              		.thumb_func
 186              		.type	ADC_SAR_Seq_1_Enable, %function
 187              	ADC_SAR_Seq_1_Enable:
 188              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 10


 319:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 189              		.loc 1 331 0
 190              		.cfi_startproc
 191 0000 08B5     		push	{r3, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 3, -8
 194              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 195              		.loc 1 332 0
 196 0002 094B     		ldr	r3, .L13
 197 0004 1B68     		ldr	r3, [r3]
 198 0006 002B     		cmp	r3, #0
 199 0008 0CDB     		blt	.L8
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 200              		.loc 1 336 0 discriminator 1
 201 000a 084A     		ldr	r2, .L13+4
 202              	.L11:
 203 000c 1368     		ldr	r3, [r2]
 204 000e 002B     		cmp	r3, #0
 205 0010 FCDB     		blt	.L11
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 206              		.loc 1 342 0
 207 0012 054B     		ldr	r3, .L13
 208 0014 1968     		ldr	r1, [r3]
 209 0016 8022     		mov	r2, #128
 210 0018 1206     		lsl	r2, r2, #24
 211 001a 0A43     		orr	r2, r1
 212 001c 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 213              		.loc 1 345 0
 214 001e 0A20     		mov	r0, #10
 215 0020 FFF7FEFF 		bl	CyDelayUs
 216              	.LVL10:
 217              	.L8:
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 11


 347:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 218              		.loc 1 347 0
 219              		@ sp needed
 220 0024 08BD     		pop	{r3, pc}
 221              	.L14:
 222 0026 C046     		.align	2
 223              	.L13:
 224 0028 00003A40 		.word	1077542912
 225 002c 08023A40 		.word	1077543432
 226              		.cfi_endproc
 227              	.LFE4:
 228              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 229              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 230              		.align	2
 231              		.global	ADC_SAR_Seq_1_Start
 232              		.code	16
 233              		.thumb_func
 234              		.type	ADC_SAR_Seq_1_Start, %function
 235              	ADC_SAR_Seq_1_Start:
 236              	.LFB2:
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 237              		.loc 1 64 0
 238              		.cfi_startproc
 239 0000 08B5     		push	{r3, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 3, -8
 242              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
 243              		.loc 1 66 0
 244 0002 064B     		ldr	r3, .L17
 245 0004 1B78     		ldrb	r3, [r3]
 246 0006 002B     		cmp	r3, #0
 247 0008 04D1     		bne	.L16
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
 248              		.loc 1 68 0
 249 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 250              	.LVL11:
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 251              		.loc 1 69 0
 252 000e 0122     		mov	r2, #1
 253 0010 024B     		ldr	r3, .L17
 254 0012 1A70     		strb	r2, [r3]
 255              	.L16:
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
 256              		.loc 1 71 0
 257 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 258              	.LVL12:
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 259              		.loc 1 72 0
 260              		@ sp needed
 261 0018 08BD     		pop	{r3, pc}
 262              	.L18:
 263 001a C046     		.align	2
 264              	.L17:
 265 001c 00000000 		.word	.LANCHOR0
 266              		.cfi_endproc
 267              	.LFE2:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 12


 268              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 269              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 270              		.align	2
 271              		.global	ADC_SAR_Seq_1_Stop
 272              		.code	16
 273              		.thumb_func
 274              		.type	ADC_SAR_Seq_1_Stop, %function
 275              	ADC_SAR_Seq_1_Stop:
 276              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 277              		.loc 1 366 0
 278              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 279              		.loc 1 367 0
 280 0000 024B     		ldr	r3, .L20
 281 0002 1A68     		ldr	r2, [r3]
 282 0004 5200     		lsl	r2, r2, #1
 283 0006 5208     		lsr	r2, r2, #1
 284 0008 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 285              		.loc 1 368 0
 286              		@ sp needed
 287 000a 7047     		bx	lr
 288              	.L21:
 289              		.align	2
 290              	.L20:
 291 000c 00003A40 		.word	1077542912
 292              		.cfi_endproc
 293              	.LFE5:
 294              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 295              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 296              		.align	2
 297              		.global	ADC_SAR_Seq_1_StartConvert
 298              		.code	16
 299              		.thumb_func
 300              		.type	ADC_SAR_Seq_1_StartConvert, %function
 301              	ADC_SAR_Seq_1_StartConvert:
 302              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 13


 370:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 303              		.loc 1 392 0
 304              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 305              		.loc 1 394 0
 306 0000 034B     		ldr	r3, .L23
 307 0002 1968     		ldr	r1, [r3]
 308 0004 8022     		mov	r2, #128
 309 0006 5202     		lsl	r2, r2, #9
 310 0008 0A43     		orr	r2, r1
 311 000a 1A60     		str	r2, [r3]
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 312              		.loc 1 399 0
 313              		@ sp needed
 314 000c 7047     		bx	lr
 315              	.L24:
 316 000e C046     		.align	2
 317              	.L23:
 318 0010 04003A40 		.word	1077542916
 319              		.cfi_endproc
 320              	.LFE6:
 321              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 322              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 323              		.align	2
 324              		.global	ADC_SAR_Seq_1_StopConvert
 325              		.code	16
 326              		.thumb_func
 327              		.type	ADC_SAR_Seq_1_StopConvert, %function
 328              	ADC_SAR_Seq_1_StopConvert:
 329              	.LFB7:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 14


 400:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 330              		.loc 1 417 0
 331              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 332              		.loc 1 419 0
 333 0000 024B     		ldr	r3, .L26
 334 0002 1968     		ldr	r1, [r3]
 335 0004 024A     		ldr	r2, .L26+4
 336 0006 0A40     		and	r2, r1
 337 0008 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 338              		.loc 1 421 0
 339              		@ sp needed
 340 000a 7047     		bx	lr
 341              	.L27:
 342              		.align	2
 343              	.L26:
 344 000c 04003A40 		.word	1077542916
 345 0010 FFFFFEFF 		.word	-65537
 346              		.cfi_endproc
 347              	.LFE7:
 348              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 349              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 350              		.align	2
 351              		.global	ADC_SAR_Seq_1_IsEndConversion
 352              		.code	16
 353              		.thumb_func
 354              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 355              	ADC_SAR_Seq_1_IsEndConversion:
 356              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 15


 430:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 357              		.loc 1 451 0
 358              		.cfi_startproc
 359              	.LVL13:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 360              		.loc 1 454 0
 361 0000 8307     		lsl	r3, r0, #30
 362 0002 0ED0     		beq	.L32
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 363              		.loc 1 458 0 discriminator 1
 364 0004 084A     		ldr	r2, .L35
 365 0006 0123     		mov	r3, #1
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 366              		.loc 1 459 0 discriminator 1
 367 0008 0221     		mov	r1, #2
 368 000a 0140     		and	r1, r0
 369              	.LVL14:
 370              	.L33:
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 371              		.loc 1 458 0 discriminator 1
 372 000c 1068     		ldr	r0, [r2]
 373 000e 1840     		and	r0, r3
 374              	.LVL15:
 375              		.loc 1 459 0 discriminator 1
 376 0010 01D1     		bne	.L30
 377 0012 0029     		cmp	r1, #0
 378 0014 FAD1     		bne	.L33
 379              	.L30:
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 380              		.loc 1 461 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 16


 381 0016 0028     		cmp	r0, #0
 382 0018 04D0     		beq	.L29
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 383              		.loc 1 464 0
 384 001a 0122     		mov	r2, #1
 385 001c 024B     		ldr	r3, .L35
 386 001e 1A60     		str	r2, [r3]
 387 0020 00E0     		b	.L29
 388              	.LVL16:
 389              	.L32:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 390              		.loc 1 452 0
 391 0022 0020     		mov	r0, #0
 392              	.LVL17:
 393              	.L29:
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 394              		.loc 1 486 0
 395              		@ sp needed
 396 0024 7047     		bx	lr
 397              	.L36:
 398 0026 C046     		.align	2
 399              	.L35:
 400 0028 10023A40 		.word	1077543440
 401              		.cfi_endproc
 402              	.LFE8:
 403              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 404              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 405              		.align	2
 406              		.global	ADC_SAR_Seq_1_GetResult16
 407              		.code	16
 408              		.thumb_func
 409              		.type	ADC_SAR_Seq_1_GetResult16, %function
 410              	ADC_SAR_Seq_1_GetResult16:
 411              	.LFB9:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 17


 487:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 412              		.loc 1 505 0
 413              		.cfi_startproc
 414              	.LVL18:
 415 0000 10B5     		push	{r4, lr}
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 4, -8
 418              		.cfi_offset 14, -4
 419 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 420              		.loc 1 509 0
 421 0004 02D0     		beq	.L38
 422              		.loc 1 509 0 is_stmt 0 discriminator 1
 423 0006 0020     		mov	r0, #0
 424              	.LVL19:
 425 0008 FFF7FEFF 		bl	CyHalt
 426              	.LVL20:
 427              	.L38:
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 428              		.loc 1 511 0 is_stmt 1
 429 000c 002C     		cmp	r4, #0
 430 000e 06D1     		bne	.L40
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 431              		.loc 1 513 0
 432 0010 A400     		lsl	r4, r4, #2
 433              	.LVL21:
 434 0012 044B     		ldr	r3, .L41
 435 0014 E418     		add	r4, r4, r3
 436 0016 2068     		ldr	r0, [r4]
 437 0018 0004     		lsl	r0, r0, #16
 438 001a 000C     		lsr	r0, r0, #16
 439              	.LVL22:
 440 001c 00E0     		b	.L39
 441              	.LVL23:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 18


 442              	.L40:
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 443              		.loc 1 521 0
 444 001e 0020     		mov	r0, #0
 445              	.LVL24:
 446              	.L39:
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 447              		.loc 1 525 0
 448 0020 00B2     		sxth	r0, r0
 449              	.LVL25:
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 450              		.loc 1 526 0
 451              		@ sp needed
 452 0022 10BD     		pop	{r4, pc}
 453              	.L42:
 454              		.align	2
 455              	.L41:
 456 0024 80013A40 		.word	1077543296
 457              		.cfi_endproc
 458              	.LFE9:
 459              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 460              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 461              		.align	2
 462              		.global	ADC_SAR_Seq_1_SetChanMask
 463              		.code	16
 464              		.thumb_func
 465              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 466              	ADC_SAR_Seq_1_SetChanMask:
 467              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 19


 545:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 468              		.loc 1 550 0
 469              		.cfi_startproc
 470              	.LVL26:
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 471              		.loc 1 551 0
 472 0000 0123     		mov	r3, #1
 473 0002 1840     		and	r0, r3
 474              	.LVL27:
 475 0004 014B     		ldr	r3, .L44
 476 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 477              		.loc 1 552 0
 478              		@ sp needed
 479 0008 7047     		bx	lr
 480              	.L45:
 481 000a C046     		.align	2
 482              	.L44:
 483 000c 20003A40 		.word	1077542944
 484              		.cfi_endproc
 485              	.LFE10:
 486              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 487              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 488              		.align	2
 489              		.global	ADC_SAR_Seq_1_SetLowLimit
 490              		.code	16
 491              		.thumb_func
 492              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 493              	ADC_SAR_Seq_1_SetLowLimit:
 494              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 20


 575:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 495              		.loc 1 594 0
 496              		.cfi_startproc
 497              	.LVL28:
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 498              		.loc 1 595 0
 499 0000 054B     		ldr	r3, .L47
 500 0002 1A68     		ldr	r2, [r3]
 501 0004 120C     		lsr	r2, r2, #16
 502 0006 1204     		lsl	r2, r2, #16
 503 0008 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 504              		.loc 1 596 0
 505 000a 1A68     		ldr	r2, [r3]
 506 000c 0004     		lsl	r0, r0, #16
 507              	.LVL29:
 508 000e 000C     		lsr	r0, r0, #16
 509 0010 1043     		orr	r0, r2
 510 0012 1860     		str	r0, [r3]
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 511              		.loc 1 597 0
 512              		@ sp needed
 513 0014 7047     		bx	lr
 514              	.L48:
 515 0016 C046     		.align	2
 516              	.L47:
 517 0018 18003A40 		.word	1077542936
 518              		.cfi_endproc
 519              	.LFE11:
 520              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 521              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 522              		.align	2
 523              		.global	ADC_SAR_Seq_1_SetHighLimit
 524              		.code	16
 525              		.thumb_func
 526              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 527              	ADC_SAR_Seq_1_SetHighLimit:
 528              	.LFB12:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 21


 598:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 529              		.loc 1 615 0
 530              		.cfi_startproc
 531              	.LVL30:
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 532              		.loc 1 616 0
 533 0000 044B     		ldr	r3, .L50
 534 0002 1A68     		ldr	r2, [r3]
 535 0004 1204     		lsl	r2, r2, #16
 536 0006 120C     		lsr	r2, r2, #16
 537 0008 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 538              		.loc 1 617 0
 539 000a 1A68     		ldr	r2, [r3]
 540 000c 0004     		lsl	r0, r0, #16
 541              	.LVL31:
 542 000e 1043     		orr	r0, r2
 543 0010 1860     		str	r0, [r3]
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 544              		.loc 1 618 0
 545              		@ sp needed
 546 0012 7047     		bx	lr
 547              	.L51:
 548              		.align	2
 549              	.L50:
 550 0014 18003A40 		.word	1077542936
 551              		.cfi_endproc
 552              	.LFE12:
 553              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 554              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 555              		.align	2
 556              		.global	ADC_SAR_Seq_1_SetLimitMask
 557              		.code	16
 558              		.thumb_func
 559              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 560              	ADC_SAR_Seq_1_SetLimitMask:
 561              	.LFB13:
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 22


 622:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 562              		.loc 1 639 0
 563              		.cfi_startproc
 564              	.LVL32:
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 565              		.loc 1 640 0
 566 0000 0123     		mov	r3, #1
 567 0002 1840     		and	r0, r3
 568              	.LVL33:
 569 0004 014B     		ldr	r3, .L53
 570 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 571              		.loc 1 641 0
 572              		@ sp needed
 573 0008 7047     		bx	lr
 574              	.L54:
 575 000a C046     		.align	2
 576              	.L53:
 577 000c 38023A40 		.word	1077543480
 578              		.cfi_endproc
 579              	.LFE13:
 580              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 581              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 582              		.align	2
 583              		.global	ADC_SAR_Seq_1_SetSatMask
 584              		.code	16
 585              		.thumb_func
 586              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 587              	ADC_SAR_Seq_1_SetSatMask:
 588              	.LFB14:
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 23


 652:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 589              		.loc 1 662 0
 590              		.cfi_startproc
 591              	.LVL34:
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 592              		.loc 1 663 0
 593 0000 0123     		mov	r3, #1
 594 0002 1840     		and	r0, r3
 595              	.LVL35:
 596 0004 014B     		ldr	r3, .L56
 597 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 598              		.loc 1 664 0
 599              		@ sp needed
 600 0008 7047     		bx	lr
 601              	.L57:
 602 000a C046     		.align	2
 603              	.L56:
 604 000c 28023A40 		.word	1077543464
 605              		.cfi_endproc
 606              	.LFE14:
 607              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 608              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 609              		.align	2
 610              		.global	ADC_SAR_Seq_1_SetOffset
 611              		.code	16
 612              		.thumb_func
 613              		.type	ADC_SAR_Seq_1_SetOffset, %function
 614              	ADC_SAR_Seq_1_SetOffset:
 615              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 24


 682:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 616              		.loc 1 690 0
 617              		.cfi_startproc
 618              	.LVL36:
 619 0000 38B5     		push	{r3, r4, r5, lr}
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 3, -16
 622              		.cfi_offset 4, -12
 623              		.cfi_offset 5, -8
 624              		.cfi_offset 14, -4
 625 0002 041C     		mov	r4, r0
 626 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 627              		.loc 1 692 0
 628 0006 0028     		cmp	r0, #0
 629 0008 02D0     		beq	.L59
 630              		.loc 1 692 0 is_stmt 0 discriminator 1
 631 000a 0020     		mov	r0, #0
 632              	.LVL37:
 633 000c FFF7FEFF 		bl	CyHalt
 634              	.LVL38:
 635              	.L59:
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 636              		.loc 1 694 0 is_stmt 1
 637 0010 6400     		lsl	r4, r4, #1
 638              	.LVL39:
 639 0012 014B     		ldr	r3, .L60
 640 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 641              		.loc 1 695 0
 642              		@ sp needed
 643 0016 38BD     		pop	{r3, r4, r5, pc}
 644              	.L61:
 645              		.align	2
 646              	.L60:
 647 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 648              		.cfi_endproc
 649              	.LFE15:
 650              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 651              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 652              		.align	2
 653              		.global	ADC_SAR_Seq_1_SetGain
 654              		.code	16
 655              		.thumb_func
 656              		.type	ADC_SAR_Seq_1_SetGain, %function
 657              	ADC_SAR_Seq_1_SetGain:
 658              	.LFB16:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 25


 696:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 659              		.loc 1 724 0
 660              		.cfi_startproc
 661              	.LVL40:
 662 0000 38B5     		push	{r3, r4, r5, lr}
 663              		.cfi_def_cfa_offset 16
 664              		.cfi_offset 3, -16
 665              		.cfi_offset 4, -12
 666              		.cfi_offset 5, -8
 667              		.cfi_offset 14, -4
 668 0002 041C     		mov	r4, r0
 669 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 670              		.loc 1 726 0
 671 0006 0028     		cmp	r0, #0
 672 0008 02D0     		beq	.L63
 673              		.loc 1 726 0 is_stmt 0 discriminator 1
 674 000a 0020     		mov	r0, #0
 675              	.LVL41:
 676 000c FFF7FEFF 		bl	CyHalt
 677              	.LVL42:
 678              	.L63:
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 679              		.loc 1 728 0 is_stmt 1
 680 0010 A400     		lsl	r4, r4, #2
 681              	.LVL43:
 682 0012 014B     		ldr	r3, .L64
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 26


 683 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 684              		.loc 1 729 0
 685              		@ sp needed
 686              	.LVL44:
 687 0016 38BD     		pop	{r3, r4, r5, pc}
 688              	.L65:
 689              		.align	2
 690              	.L64:
 691 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 692              		.cfi_endproc
 693              	.LFE16:
 694              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 695              		.global	__aeabi_idiv
 696              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 697              		.align	2
 698              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 699              		.code	16
 700              		.thumb_func
 701              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 702              	ADC_SAR_Seq_1_CountsTo_mVolts:
 703              	.LFB17:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 704              		.loc 1 757 0
 705              		.cfi_startproc
 706              	.LVL45:
 707 0000 38B5     		push	{r3, r4, r5, lr}
 708              		.cfi_def_cfa_offset 16
 709              		.cfi_offset 3, -16
 710              		.cfi_offset 4, -12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 27


 711              		.cfi_offset 5, -8
 712              		.cfi_offset 14, -4
 713 0002 041C     		mov	r4, r0
 714 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 715              		.loc 1 761 0
 716 0006 0028     		cmp	r0, #0
 717 0008 02D0     		beq	.L67
 718              		.loc 1 761 0 is_stmt 0 discriminator 1
 719 000a 0020     		mov	r0, #0
 720              	.LVL46:
 721 000c FFF7FEFF 		bl	CyHalt
 722              	.LVL47:
 723              	.L67:
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 724              		.loc 1 772 0 is_stmt 1
 725 0010 6300     		lsl	r3, r4, #1
 726 0012 0F4A     		ldr	r2, .L70
 727 0014 995A     		ldrh	r1, [r3, r2]
 728 0016 691A     		sub	r1, r5, r1
 729 0018 09B2     		sxth	r1, r1
 730              	.LVL48:
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 731              		.loc 1 774 0
 732 001a 0E4B     		ldr	r3, .L70+4
 733 001c 4B43     		mul	r3, r1
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 734              		.loc 1 775 0
 735 001e 0029     		cmp	r1, #0
 736 0020 06DD     		ble	.L68
 737              		.loc 1 775 0 is_stmt 0 discriminator 1
 738 0022 A200     		lsl	r2, r4, #2
 739 0024 0C49     		ldr	r1, .L70+8
 740              	.LVL49:
 741 0026 5258     		ldr	r2, [r2, r1]
 742 0028 D00F     		lsr	r0, r2, #31
 743 002a 8018     		add	r0, r0, r2
 744 002c 4010     		asr	r0, r0, #1
 745 002e 06E0     		b	.L69
 746              	.LVL50:
 747              	.L68:
 748              		.loc 1 775 0 discriminator 2
 749 0030 A200     		lsl	r2, r4, #2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 28


 750 0032 0949     		ldr	r1, .L70+8
 751              	.LVL51:
 752 0034 5258     		ldr	r2, [r2, r1]
 753 0036 D00F     		lsr	r0, r2, #31
 754 0038 8018     		add	r0, r0, r2
 755 003a 4010     		asr	r0, r0, #1
 756 003c 4042     		neg	r0, r0
 757              	.L69:
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 758              		.loc 1 774 0 is_stmt 1
 759 003e 1818     		add	r0, r3, r0
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 760              		.loc 1 776 0
 761 0040 A400     		lsl	r4, r4, #2
 762              	.LVL52:
 763 0042 054B     		ldr	r3, .L70+8
 764 0044 E158     		ldr	r1, [r4, r3]
 765 0046 FFF7FEFF 		bl	__aeabi_idiv
 766              	.LVL53:
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 767              		.loc 1 778 0
 768 004a 00B2     		sxth	r0, r0
 769              	.LVL54:
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 770              		.loc 1 779 0
 771              		@ sp needed
 772 004c 38BD     		pop	{r3, r4, r5, pc}
 773              	.L71:
 774 004e C046     		.align	2
 775              	.L70:
 776 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 777 0054 10270000 		.word	10000
 778 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 779              		.cfi_endproc
 780              	.LFE17:
 781              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 782              		.global	__aeabi_lmul
 783              		.global	__aeabi_ldivmod
 784              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 785              		.align	2
 786              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 787              		.code	16
 788              		.thumb_func
 789              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 790              	ADC_SAR_Seq_1_CountsTo_uVolts:
 791              	.LFB18:
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 29


 790:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 792              		.loc 1 811 0
 793              		.cfi_startproc
 794              	.LVL55:
 795 0000 58B5     		push	{r3, r4, r6, lr}
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 3, -16
 798              		.cfi_offset 4, -12
 799              		.cfi_offset 6, -8
 800              		.cfi_offset 14, -4
 801 0002 061C     		mov	r6, r0
 802 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 803              		.loc 1 815 0
 804 0006 0028     		cmp	r0, #0
 805 0008 02D0     		beq	.L73
 806              		.loc 1 815 0 is_stmt 0 discriminator 1
 807 000a 0020     		mov	r0, #0
 808              	.LVL56:
 809 000c FFF7FEFF 		bl	CyHalt
 810              	.LVL57:
 811              	.L73:
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 30


 812              		.loc 1 826 0 is_stmt 1
 813 0010 7200     		lsl	r2, r6, #1
 814 0012 0B4B     		ldr	r3, .L74+8
 815 0014 D05A     		ldrh	r0, [r2, r3]
 816 0016 201A     		sub	r0, r4, r0
 817 0018 00B2     		sxth	r0, r0
 818              	.LVL58:
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 819              		.loc 1 828 0
 820 001a C117     		asr	r1, r0, #31
 821 001c 074B     		ldr	r3, .L74+4
 822 001e 064A     		ldr	r2, .L74
 823 0020 FFF7FEFF 		bl	__aeabi_lmul
 824              	.LVL59:
 825 0024 B600     		lsl	r6, r6, #2
 826              	.LVL60:
 827 0026 074B     		ldr	r3, .L74+12
 828 0028 F258     		ldr	r2, [r6, r3]
 829 002a D317     		asr	r3, r2, #31
 830 002c FFF7FEFF 		bl	__aeabi_ldivmod
 831              	.LVL61:
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 832              		.loc 1 831 0
 833              		@ sp needed
 834 0030 58BD     		pop	{r3, r4, r6, pc}
 835              	.L75:
 836 0032 C046C046 		.align	3
 836      C046
 837              	.L74:
 838 0038 80969800 		.word	10000000
 839 003c 00000000 		.word	0
 840 0040 00000000 		.word	ADC_SAR_Seq_1_offset
 841 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 842              		.cfi_endproc
 843              	.LFE18:
 844              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 845              		.global	__aeabi_i2f
 846              		.global	__aeabi_fmul
 847              		.global	__aeabi_fdiv
 848              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 849              		.align	2
 850              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 851              		.code	16
 852              		.thumb_func
 853              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 854              	ADC_SAR_Seq_1_CountsTo_Volts:
 855              	.LFB19:
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 31


 839:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 856              		.loc 1 856 0
 857              		.cfi_startproc
 858              	.LVL62:
 859 0000 38B5     		push	{r3, r4, r5, lr}
 860              		.cfi_def_cfa_offset 16
 861              		.cfi_offset 3, -16
 862              		.cfi_offset 4, -12
 863              		.cfi_offset 5, -8
 864              		.cfi_offset 14, -4
 865 0002 041C     		mov	r4, r0
 866 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 867              		.loc 1 860 0
 868 0006 0028     		cmp	r0, #0
 869 0008 02D0     		beq	.L77
 870              		.loc 1 860 0 is_stmt 0 discriminator 1
 871 000a 0020     		mov	r0, #0
 872              	.LVL63:
 873 000c FFF7FEFF 		bl	CyHalt
 874              	.LVL64:
 875              	.L77:
 861:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 876              		.loc 1 871 0 is_stmt 1
 877 0010 6200     		lsl	r2, r4, #1
 878 0012 0A4B     		ldr	r3, .L78
 879 0014 D05A     		ldrh	r0, [r2, r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 32


 880 0016 2D1A     		sub	r5, r5, r0
 881 0018 28B2     		sxth	r0, r5
 882              	.LVL65:
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 883              		.loc 1 873 0
 884 001a FFF7FEFF 		bl	__aeabi_i2f
 885              	.LVL66:
 886 001e 0849     		ldr	r1, .L78+4
 887 0020 FFF7FEFF 		bl	__aeabi_fmul
 888              	.LVL67:
 889 0024 051C     		add	r5, r0, #0
 890              	.LVL68:
 891 0026 A400     		lsl	r4, r4, #2
 892              	.LVL69:
 893 0028 064B     		ldr	r3, .L78+8
 894 002a E058     		ldr	r0, [r4, r3]
 895 002c FFF7FEFF 		bl	__aeabi_i2f
 896              	.LVL70:
 897 0030 011C     		add	r1, r0, #0
 898 0032 281C     		add	r0, r5, #0
 899 0034 FFF7FEFF 		bl	__aeabi_fdiv
 900              	.LVL71:
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 901              		.loc 1 876 0
 902              		@ sp needed
 903 0038 38BD     		pop	{r3, r4, r5, pc}
 904              	.L79:
 905 003a C046     		.align	2
 906              	.L78:
 907 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 908 0040 00002041 		.word	1092616192
 909 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 910              		.cfi_endproc
 911              	.LFE19:
 912              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 913              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 914              		.comm	ADC_SAR_Seq_1_offset,2,4
 915              		.global	ADC_SAR_Seq_1_initVar
 916              		.bss
 917              		.set	.LANCHOR0,. + 0
 918              		.type	ADC_SAR_Seq_1_initVar, %object
 919              		.size	ADC_SAR_Seq_1_initVar, 1
 920              	ADC_SAR_Seq_1_initVar:
 921 0000 00       		.space	1
 922              		.text
 923              	.Letext0:
 924              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 925              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 926              		.section	.debug_info,"",%progbits
 927              	.Ldebug_info0:
 928 0000 8A050000 		.4byte	0x58a
 929 0004 0400     		.2byte	0x4
 930 0006 00000000 		.4byte	.Ldebug_abbrev0
 931 000a 04       		.byte	0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 33


 932 000b 01       		.uleb128 0x1
 933 000c 72000000 		.4byte	.LASF62
 934 0010 01       		.byte	0x1
 935 0011 8B020000 		.4byte	.LASF63
 936 0015 06030000 		.4byte	.LASF64
 937 0019 00000000 		.4byte	.Ldebug_ranges0+0
 938 001d 00000000 		.4byte	0
 939 0021 00000000 		.4byte	.Ldebug_line0
 940 0025 02       		.uleb128 0x2
 941 0026 01       		.byte	0x1
 942 0027 06       		.byte	0x6
 943 0028 42010000 		.4byte	.LASF0
 944 002c 02       		.uleb128 0x2
 945 002d 01       		.byte	0x1
 946 002e 08       		.byte	0x8
 947 002f B1030000 		.4byte	.LASF1
 948 0033 02       		.uleb128 0x2
 949 0034 02       		.byte	0x2
 950 0035 05       		.byte	0x5
 951 0036 BF030000 		.4byte	.LASF2
 952 003a 02       		.uleb128 0x2
 953 003b 02       		.byte	0x2
 954 003c 07       		.byte	0x7
 955 003d 3F020000 		.4byte	.LASF3
 956 0041 02       		.uleb128 0x2
 957 0042 04       		.byte	0x4
 958 0043 05       		.byte	0x5
 959 0044 A1010000 		.4byte	.LASF4
 960 0048 02       		.uleb128 0x2
 961 0049 04       		.byte	0x4
 962 004a 07       		.byte	0x7
 963 004b 1D020000 		.4byte	.LASF5
 964 004f 02       		.uleb128 0x2
 965 0050 08       		.byte	0x8
 966 0051 05       		.byte	0x5
 967 0052 34010000 		.4byte	.LASF6
 968 0056 02       		.uleb128 0x2
 969 0057 08       		.byte	0x8
 970 0058 07       		.byte	0x7
 971 0059 EE000000 		.4byte	.LASF7
 972 005d 03       		.uleb128 0x3
 973 005e 04       		.byte	0x4
 974 005f 05       		.byte	0x5
 975 0060 696E7400 		.ascii	"int\000"
 976 0064 02       		.uleb128 0x2
 977 0065 04       		.byte	0x4
 978 0066 07       		.byte	0x7
 979 0067 09020000 		.4byte	.LASF8
 980 006b 04       		.uleb128 0x4
 981 006c AA010000 		.4byte	.LASF9
 982 0070 02       		.byte	0x2
 983 0071 C1       		.byte	0xc1
 984 0072 2C000000 		.4byte	0x2c
 985 0076 04       		.uleb128 0x4
 986 0077 15000000 		.4byte	.LASF10
 987 007b 02       		.byte	0x2
 988 007c C2       		.byte	0xc2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 34


 989 007d 3A000000 		.4byte	0x3a
 990 0081 04       		.uleb128 0x4
 991 0082 C1010000 		.4byte	.LASF11
 992 0086 02       		.byte	0x2
 993 0087 C3       		.byte	0xc3
 994 0088 48000000 		.4byte	0x48
 995 008c 04       		.uleb128 0x4
 996 008d 85040000 		.4byte	.LASF12
 997 0091 02       		.byte	0x2
 998 0092 C5       		.byte	0xc5
 999 0093 33000000 		.4byte	0x33
 1000 0097 04       		.uleb128 0x4
 1001 0098 69010000 		.4byte	.LASF13
 1002 009c 02       		.byte	0x2
 1003 009d C6       		.byte	0xc6
 1004 009e 41000000 		.4byte	0x41
 1005 00a2 04       		.uleb128 0x4
 1006 00a3 B4020000 		.4byte	.LASF14
 1007 00a7 02       		.byte	0x2
 1008 00a8 C7       		.byte	0xc7
 1009 00a9 AD000000 		.4byte	0xad
 1010 00ad 02       		.uleb128 0x2
 1011 00ae 04       		.byte	0x4
 1012 00af 04       		.byte	0x4
 1013 00b0 71030000 		.4byte	.LASF15
 1014 00b4 02       		.uleb128 0x2
 1015 00b5 08       		.byte	0x8
 1016 00b6 04       		.byte	0x4
 1017 00b7 BA010000 		.4byte	.LASF16
 1018 00bb 04       		.uleb128 0x4
 1019 00bc 5A030000 		.4byte	.LASF17
 1020 00c0 02       		.byte	0x2
 1021 00c1 CC       		.byte	0xcc
 1022 00c2 4F000000 		.4byte	0x4f
 1023 00c6 02       		.uleb128 0x2
 1024 00c7 01       		.byte	0x1
 1025 00c8 08       		.byte	0x8
 1026 00c9 0B040000 		.4byte	.LASF18
 1027 00cd 05       		.uleb128 0x5
 1028 00ce 85020000 		.4byte	.LASF19
 1029 00d2 02       		.byte	0x2
 1030 00d3 6D01     		.2byte	0x16d
 1031 00d5 D9000000 		.4byte	0xd9
 1032 00d9 06       		.uleb128 0x6
 1033 00da 81000000 		.4byte	0x81
 1034 00de 05       		.uleb128 0x5
 1035 00df 10040000 		.4byte	.LASF20
 1036 00e3 02       		.byte	0x2
 1037 00e4 7D01     		.2byte	0x17d
 1038 00e6 EA000000 		.4byte	0xea
 1039 00ea 07       		.uleb128 0x7
 1040 00eb 04       		.byte	0x4
 1041 00ec F0000000 		.4byte	0xf0
 1042 00f0 08       		.uleb128 0x8
 1043 00f1 02       		.uleb128 0x2
 1044 00f2 04       		.byte	0x4
 1045 00f3 07       		.byte	0x7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 35


 1046 00f4 BC020000 		.4byte	.LASF21
 1047 00f8 09       		.uleb128 0x9
 1048 00f9 1C000000 		.4byte	.LASF25
 1049 00fd 01       		.byte	0x1
 1050 00fe 5E       		.byte	0x5e
 1051 00ff 00000000 		.4byte	.LFB3
 1052 0103 F8000000 		.4byte	.LFE3-.LFB3
 1053 0107 01       		.uleb128 0x1
 1054 0108 9C       		.byte	0x9c
 1055 0109 62010000 		.4byte	0x162
 1056 010d 0A       		.uleb128 0xa
 1057 010e 00040000 		.4byte	.LASF22
 1058 0112 01       		.byte	0x1
 1059 0113 60       		.byte	0x60
 1060 0114 81000000 		.4byte	0x81
 1061 0118 00000000 		.4byte	.LLST0
 1062 011c 0A       		.uleb128 0xa
 1063 011d 35020000 		.4byte	.LASF23
 1064 0121 01       		.byte	0x1
 1065 0122 61       		.byte	0x61
 1066 0123 81000000 		.4byte	0x81
 1067 0127 1F000000 		.4byte	.LLST1
 1068 012b 0A       		.uleb128 0xa
 1069 012c 37000000 		.4byte	.LASF24
 1070 0130 01       		.byte	0x1
 1071 0131 62       		.byte	0x62
 1072 0132 97000000 		.4byte	0x97
 1073 0136 5E000000 		.4byte	.LLST2
 1074 013a 0B       		.uleb128 0xb
 1075 013b 0A000000 		.4byte	.LVL0
 1076 013f 3F050000 		.4byte	0x53f
 1077 0143 52010000 		.4byte	0x152
 1078 0147 0C       		.uleb128 0xc
 1079 0148 01       		.uleb128 0x1
 1080 0149 51       		.byte	0x51
 1081 014a 01       		.uleb128 0x1
 1082 014b 33       		.byte	0x33
 1083 014c 0C       		.uleb128 0xc
 1084 014d 01       		.uleb128 0x1
 1085 014e 50       		.byte	0x50
 1086 014f 01       		.uleb128 0x1
 1087 0150 3F       		.byte	0x3f
 1088 0151 00       		.byte	0
 1089 0152 0D       		.uleb128 0xd
 1090 0153 12000000 		.4byte	.LVL1
 1091 0157 55050000 		.4byte	0x555
 1092 015b 0C       		.uleb128 0xc
 1093 015c 01       		.uleb128 0x1
 1094 015d 50       		.byte	0x50
 1095 015e 01       		.uleb128 0x1
 1096 015f 3F       		.byte	0x3f
 1097 0160 00       		.byte	0
 1098 0161 00       		.byte	0
 1099 0162 0E       		.uleb128 0xe
 1100 0163 05010000 		.4byte	.LASF26
 1101 0167 01       		.byte	0x1
 1102 0168 4A01     		.2byte	0x14a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 36


 1103 016a 00000000 		.4byte	.LFB4
 1104 016e 30000000 		.4byte	.LFE4-.LFB4
 1105 0172 01       		.uleb128 0x1
 1106 0173 9C       		.byte	0x9c
 1107 0174 88010000 		.4byte	0x188
 1108 0178 0D       		.uleb128 0xd
 1109 0179 24000000 		.4byte	.LVL10
 1110 017d 6F050000 		.4byte	0x56f
 1111 0181 0C       		.uleb128 0xc
 1112 0182 01       		.uleb128 0x1
 1113 0183 50       		.byte	0x50
 1114 0184 01       		.uleb128 0x1
 1115 0185 3A       		.byte	0x3a
 1116 0186 00       		.byte	0
 1117 0187 00       		.byte	0
 1118 0188 09       		.uleb128 0x9
 1119 0189 8D010000 		.4byte	.LASF27
 1120 018d 01       		.byte	0x1
 1121 018e 3F       		.byte	0x3f
 1122 018f 00000000 		.4byte	.LFB2
 1123 0193 20000000 		.4byte	.LFE2-.LFB2
 1124 0197 01       		.uleb128 0x1
 1125 0198 9C       		.byte	0x9c
 1126 0199 B0010000 		.4byte	0x1b0
 1127 019d 0F       		.uleb128 0xf
 1128 019e 0E000000 		.4byte	.LVL11
 1129 01a2 F8000000 		.4byte	0xf8
 1130 01a6 0F       		.uleb128 0xf
 1131 01a7 18000000 		.4byte	.LVL12
 1132 01ab 62010000 		.4byte	0x162
 1133 01af 00       		.byte	0
 1134 01b0 10       		.uleb128 0x10
 1135 01b1 8D030000 		.4byte	.LASF28
 1136 01b5 01       		.byte	0x1
 1137 01b6 6D01     		.2byte	0x16d
 1138 01b8 00000000 		.4byte	.LFB5
 1139 01bc 10000000 		.4byte	.LFE5-.LFB5
 1140 01c0 01       		.uleb128 0x1
 1141 01c1 9C       		.byte	0x9c
 1142 01c2 10       		.uleb128 0x10
 1143 01c3 3E000000 		.4byte	.LASF29
 1144 01c7 01       		.byte	0x1
 1145 01c8 8701     		.2byte	0x187
 1146 01ca 00000000 		.4byte	.LFB6
 1147 01ce 14000000 		.4byte	.LFE6-.LFB6
 1148 01d2 01       		.uleb128 0x1
 1149 01d3 9C       		.byte	0x9c
 1150 01d4 10       		.uleb128 0x10
 1151 01d5 EC020000 		.4byte	.LASF30
 1152 01d9 01       		.byte	0x1
 1153 01da A001     		.2byte	0x1a0
 1154 01dc 00000000 		.4byte	.LFB7
 1155 01e0 14000000 		.4byte	.LFE7-.LFB7
 1156 01e4 01       		.uleb128 0x1
 1157 01e5 9C       		.byte	0x9c
 1158 01e6 11       		.uleb128 0x11
 1159 01e7 CE020000 		.4byte	.LASF32
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 37


 1160 01eb 01       		.byte	0x1
 1161 01ec C201     		.2byte	0x1c2
 1162 01ee 81000000 		.4byte	0x81
 1163 01f2 00000000 		.4byte	.LFB8
 1164 01f6 2C000000 		.4byte	.LFE8-.LFB8
 1165 01fa 01       		.uleb128 0x1
 1166 01fb 9C       		.byte	0x9c
 1167 01fc 21020000 		.4byte	0x221
 1168 0200 12       		.uleb128 0x12
 1169 0201 EB010000 		.4byte	.LASF34
 1170 0205 01       		.byte	0x1
 1171 0206 C201     		.2byte	0x1c2
 1172 0208 81000000 		.4byte	0x81
 1173 020c 74000000 		.4byte	.LLST3
 1174 0210 13       		.uleb128 0x13
 1175 0211 66040000 		.4byte	.LASF31
 1176 0215 01       		.byte	0x1
 1177 0216 C401     		.2byte	0x1c4
 1178 0218 81000000 		.4byte	0x81
 1179 021c AE000000 		.4byte	.LLST4
 1180 0220 00       		.byte	0
 1181 0221 11       		.uleb128 0x11
 1182 0222 1A010000 		.4byte	.LASF33
 1183 0226 01       		.byte	0x1
 1184 0227 F801     		.2byte	0x1f8
 1185 0229 8C000000 		.4byte	0x8c
 1186 022d 00000000 		.4byte	.LFB9
 1187 0231 28000000 		.4byte	.LFE9-.LFB9
 1188 0235 01       		.uleb128 0x1
 1189 0236 9C       		.byte	0x9c
 1190 0237 6B020000 		.4byte	0x26b
 1191 023b 12       		.uleb128 0x12
 1192 023c 06040000 		.4byte	.LASF35
 1193 0240 01       		.byte	0x1
 1194 0241 F801     		.2byte	0x1f8
 1195 0243 81000000 		.4byte	0x81
 1196 0247 E4000000 		.4byte	.LLST5
 1197 024b 13       		.uleb128 0x13
 1198 024c A6040000 		.4byte	.LASF36
 1199 0250 01       		.byte	0x1
 1200 0251 FA01     		.2byte	0x1fa
 1201 0253 81000000 		.4byte	0x81
 1202 0257 29010000 		.4byte	.LLST6
 1203 025b 0D       		.uleb128 0xd
 1204 025c 0C000000 		.4byte	.LVL20
 1205 0260 80050000 		.4byte	0x580
 1206 0264 0C       		.uleb128 0xc
 1207 0265 01       		.uleb128 0x1
 1208 0266 50       		.byte	0x50
 1209 0267 01       		.uleb128 0x1
 1210 0268 30       		.byte	0x30
 1211 0269 00       		.byte	0
 1212 026a 00       		.byte	0
 1213 026b 0E       		.uleb128 0xe
 1214 026c E6030000 		.4byte	.LASF37
 1215 0270 01       		.byte	0x1
 1216 0271 2502     		.2byte	0x225
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 38


 1217 0273 00000000 		.4byte	.LFB10
 1218 0277 10000000 		.4byte	.LFE10-.LFB10
 1219 027b 01       		.uleb128 0x1
 1220 027c 9C       		.byte	0x9c
 1221 027d 92020000 		.4byte	0x292
 1222 0281 12       		.uleb128 0x12
 1223 0282 C8010000 		.4byte	.LASF38
 1224 0286 01       		.byte	0x1
 1225 0287 2502     		.2byte	0x225
 1226 0289 81000000 		.4byte	0x81
 1227 028d 47010000 		.4byte	.LLST7
 1228 0291 00       		.byte	0
 1229 0292 0E       		.uleb128 0xe
 1230 0293 1D040000 		.4byte	.LASF39
 1231 0297 01       		.byte	0x1
 1232 0298 5102     		.2byte	0x251
 1233 029a 00000000 		.4byte	.LFB11
 1234 029e 1C000000 		.4byte	.LFE11-.LFB11
 1235 02a2 01       		.uleb128 0x1
 1236 02a3 9C       		.byte	0x9c
 1237 02a4 B9020000 		.4byte	0x2b9
 1238 02a8 12       		.uleb128 0x12
 1239 02a9 C5020000 		.4byte	.LASF40
 1240 02ad 01       		.byte	0x1
 1241 02ae 5102     		.2byte	0x251
 1242 02b0 81000000 		.4byte	0x81
 1243 02b4 68010000 		.4byte	.LLST8
 1244 02b8 00       		.byte	0
 1245 02b9 0E       		.uleb128 0xe
 1246 02ba 4E010000 		.4byte	.LASF41
 1247 02be 01       		.byte	0x1
 1248 02bf 6602     		.2byte	0x266
 1249 02c1 00000000 		.4byte	.LFB12
 1250 02c5 18000000 		.4byte	.LFE12-.LFB12
 1251 02c9 01       		.uleb128 0x1
 1252 02ca 9C       		.byte	0x9c
 1253 02cb E0020000 		.4byte	0x2e0
 1254 02cf 12       		.uleb128 0x12
 1255 02d0 A0030000 		.4byte	.LASF42
 1256 02d4 01       		.byte	0x1
 1257 02d5 6602     		.2byte	0x266
 1258 02d7 81000000 		.4byte	0x81
 1259 02db 89010000 		.4byte	.LLST9
 1260 02df 00       		.byte	0
 1261 02e0 0E       		.uleb128 0xe
 1262 02e1 8B040000 		.4byte	.LASF43
 1263 02e5 01       		.byte	0x1
 1264 02e6 7E02     		.2byte	0x27e
 1265 02e8 00000000 		.4byte	.LFB13
 1266 02ec 10000000 		.4byte	.LFE13-.LFB13
 1267 02f0 01       		.uleb128 0x1
 1268 02f1 9C       		.byte	0x9c
 1269 02f2 07030000 		.4byte	0x307
 1270 02f6 12       		.uleb128 0x12
 1271 02f7 C8010000 		.4byte	.LASF38
 1272 02fb 01       		.byte	0x1
 1273 02fc 7E02     		.2byte	0x27e
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 39


 1274 02fe 81000000 		.4byte	0x81
 1275 0302 AA010000 		.4byte	.LLST10
 1276 0306 00       		.byte	0
 1277 0307 0E       		.uleb128 0xe
 1278 0308 59000000 		.4byte	.LASF44
 1279 030c 01       		.byte	0x1
 1280 030d 9502     		.2byte	0x295
 1281 030f 00000000 		.4byte	.LFB14
 1282 0313 10000000 		.4byte	.LFE14-.LFB14
 1283 0317 01       		.uleb128 0x1
 1284 0318 9C       		.byte	0x9c
 1285 0319 2E030000 		.4byte	0x32e
 1286 031d 12       		.uleb128 0x12
 1287 031e C8010000 		.4byte	.LASF38
 1288 0322 01       		.byte	0x1
 1289 0323 9502     		.2byte	0x295
 1290 0325 81000000 		.4byte	0x81
 1291 0329 CB010000 		.4byte	.LLST11
 1292 032d 00       		.byte	0
 1293 032e 0E       		.uleb128 0xe
 1294 032f 6D040000 		.4byte	.LASF45
 1295 0333 01       		.byte	0x1
 1296 0334 B102     		.2byte	0x2b1
 1297 0336 00000000 		.4byte	.LFB15
 1298 033a 1C000000 		.4byte	.LFE15-.LFB15
 1299 033e 01       		.uleb128 0x1
 1300 033f 9C       		.byte	0x9c
 1301 0340 74030000 		.4byte	0x374
 1302 0344 12       		.uleb128 0x12
 1303 0345 06040000 		.4byte	.LASF35
 1304 0349 01       		.byte	0x1
 1305 034a B102     		.2byte	0x2b1
 1306 034c 81000000 		.4byte	0x81
 1307 0350 EC010000 		.4byte	.LLST12
 1308 0354 12       		.uleb128 0x12
 1309 0355 37040000 		.4byte	.LASF46
 1310 0359 01       		.byte	0x1
 1311 035a B102     		.2byte	0x2b1
 1312 035c 8C000000 		.4byte	0x8c
 1313 0360 18020000 		.4byte	.LLST13
 1314 0364 0D       		.uleb128 0xd
 1315 0365 10000000 		.4byte	.LVL38
 1316 0369 80050000 		.4byte	0x580
 1317 036d 0C       		.uleb128 0xc
 1318 036e 01       		.uleb128 0x1
 1319 036f 50       		.byte	0x50
 1320 0370 01       		.uleb128 0x1
 1321 0371 30       		.byte	0x30
 1322 0372 00       		.byte	0
 1323 0373 00       		.byte	0
 1324 0374 0E       		.uleb128 0xe
 1325 0375 77030000 		.4byte	.LASF47
 1326 0379 01       		.byte	0x1
 1327 037a D302     		.2byte	0x2d3
 1328 037c 00000000 		.4byte	.LFB16
 1329 0380 1C000000 		.4byte	.LFE16-.LFB16
 1330 0384 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 40


 1331 0385 9C       		.byte	0x9c
 1332 0386 BA030000 		.4byte	0x3ba
 1333 038a 12       		.uleb128 0x12
 1334 038b 06040000 		.4byte	.LASF35
 1335 038f 01       		.byte	0x1
 1336 0390 D302     		.2byte	0x2d3
 1337 0392 81000000 		.4byte	0x81
 1338 0396 39020000 		.4byte	.LLST14
 1339 039a 12       		.uleb128 0x12
 1340 039b 2F000000 		.4byte	.LASF48
 1341 039f 01       		.byte	0x1
 1342 03a0 D302     		.2byte	0x2d3
 1343 03a2 97000000 		.4byte	0x97
 1344 03a6 65020000 		.4byte	.LLST15
 1345 03aa 0D       		.uleb128 0xd
 1346 03ab 10000000 		.4byte	.LVL42
 1347 03af 80050000 		.4byte	0x580
 1348 03b3 0C       		.uleb128 0xc
 1349 03b4 01       		.uleb128 0x1
 1350 03b5 50       		.byte	0x50
 1351 03b6 01       		.uleb128 0x1
 1352 03b7 30       		.byte	0x30
 1353 03b8 00       		.byte	0
 1354 03b9 00       		.byte	0
 1355 03ba 14       		.uleb128 0x14
 1356 03bb CD010000 		.4byte	.LASF49
 1357 03bf 01       		.byte	0x1
 1358 03c0 F402     		.2byte	0x2f4
 1359 03c2 8C000000 		.4byte	0x8c
 1360 03c6 00000000 		.4byte	.LFB17
 1361 03ca 5C000000 		.4byte	.LFE17-.LFB17
 1362 03ce 01       		.uleb128 0x1
 1363 03cf 9C       		.byte	0x9c
 1364 03d0 14040000 		.4byte	0x414
 1365 03d4 12       		.uleb128 0x12
 1366 03d5 06040000 		.4byte	.LASF35
 1367 03d9 01       		.byte	0x1
 1368 03da F402     		.2byte	0x2f4
 1369 03dc 81000000 		.4byte	0x81
 1370 03e0 95020000 		.4byte	.LLST16
 1371 03e4 12       		.uleb128 0x12
 1372 03e5 3E040000 		.4byte	.LASF50
 1373 03e9 01       		.byte	0x1
 1374 03ea F402     		.2byte	0x2f4
 1375 03ec 8C000000 		.4byte	0x8c
 1376 03f0 C1020000 		.4byte	.LLST17
 1377 03f4 13       		.uleb128 0x13
 1378 03f5 7E020000 		.4byte	.LASF51
 1379 03f9 01       		.byte	0x1
 1380 03fa F602     		.2byte	0x2f6
 1381 03fc 8C000000 		.4byte	0x8c
 1382 0400 F8020000 		.4byte	.LLST18
 1383 0404 0D       		.uleb128 0xd
 1384 0405 10000000 		.4byte	.LVL47
 1385 0409 80050000 		.4byte	0x580
 1386 040d 0C       		.uleb128 0xc
 1387 040e 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 41


 1388 040f 50       		.byte	0x50
 1389 0410 01       		.uleb128 0x1
 1390 0411 30       		.byte	0x30
 1391 0412 00       		.byte	0
 1392 0413 00       		.byte	0
 1393 0414 14       		.uleb128 0x14
 1394 0415 6F010000 		.4byte	.LASF52
 1395 0419 01       		.byte	0x1
 1396 041a 2A03     		.2byte	0x32a
 1397 041c 97000000 		.4byte	0x97
 1398 0420 00000000 		.4byte	.LFB18
 1399 0424 48000000 		.4byte	.LFE18-.LFB18
 1400 0428 01       		.uleb128 0x1
 1401 0429 9C       		.byte	0x9c
 1402 042a 6A040000 		.4byte	0x46a
 1403 042e 12       		.uleb128 0x12
 1404 042f 06040000 		.4byte	.LASF35
 1405 0433 01       		.byte	0x1
 1406 0434 2A03     		.2byte	0x32a
 1407 0436 81000000 		.4byte	0x81
 1408 043a 0B030000 		.4byte	.LLST19
 1409 043e 12       		.uleb128 0x12
 1410 043f 3E040000 		.4byte	.LASF50
 1411 0443 01       		.byte	0x1
 1412 0444 2A03     		.2byte	0x32a
 1413 0446 8C000000 		.4byte	0x8c
 1414 044a 37030000 		.4byte	.LLST20
 1415 044e 15       		.uleb128 0x15
 1416 044f 16020000 		.4byte	.LASF55
 1417 0453 01       		.byte	0x1
 1418 0454 2C03     		.2byte	0x32c
 1419 0456 BB000000 		.4byte	0xbb
 1420 045a 0D       		.uleb128 0xd
 1421 045b 10000000 		.4byte	.LVL57
 1422 045f 80050000 		.4byte	0x580
 1423 0463 0C       		.uleb128 0xc
 1424 0464 01       		.uleb128 0x1
 1425 0465 50       		.byte	0x50
 1426 0466 01       		.uleb128 0x1
 1427 0467 30       		.byte	0x30
 1428 0468 00       		.byte	0
 1429 0469 00       		.byte	0
 1430 046a 14       		.uleb128 0x14
 1431 046b C9030000 		.4byte	.LASF53
 1432 046f 01       		.byte	0x1
 1433 0470 5703     		.2byte	0x357
 1434 0472 A2000000 		.4byte	0xa2
 1435 0476 00000000 		.4byte	.LFB19
 1436 047a 48000000 		.4byte	.LFE19-.LFB19
 1437 047e 01       		.uleb128 0x1
 1438 047f 9C       		.byte	0x9c
 1439 0480 C2040000 		.4byte	0x4c2
 1440 0484 12       		.uleb128 0x12
 1441 0485 06040000 		.4byte	.LASF35
 1442 0489 01       		.byte	0x1
 1443 048a 5703     		.2byte	0x357
 1444 048c 81000000 		.4byte	0x81
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 42


 1445 0490 63030000 		.4byte	.LLST21
 1446 0494 12       		.uleb128 0x12
 1447 0495 3E040000 		.4byte	.LASF50
 1448 0499 01       		.byte	0x1
 1449 049a 5703     		.2byte	0x357
 1450 049c 8C000000 		.4byte	0x8c
 1451 04a0 8F030000 		.4byte	.LLST22
 1452 04a4 16       		.uleb128 0x16
 1453 04a5 2F020000 		.4byte	.LASF54
 1454 04a9 01       		.byte	0x1
 1455 04aa 5903     		.2byte	0x359
 1456 04ac A2000000 		.4byte	0xa2
 1457 04b0 01       		.uleb128 0x1
 1458 04b1 50       		.byte	0x50
 1459 04b2 0D       		.uleb128 0xd
 1460 04b3 10000000 		.4byte	.LVL64
 1461 04b7 80050000 		.4byte	0x580
 1462 04bb 0C       		.uleb128 0xc
 1463 04bc 01       		.uleb128 0x1
 1464 04bd 50       		.byte	0x50
 1465 04be 01       		.uleb128 0x1
 1466 04bf 30       		.byte	0x30
 1467 04c0 00       		.byte	0
 1468 04c1 00       		.byte	0
 1469 04c2 17       		.uleb128 0x17
 1470 04c3 81000000 		.4byte	0x81
 1471 04c7 D2040000 		.4byte	0x4d2
 1472 04cb 18       		.uleb128 0x18
 1473 04cc F1000000 		.4byte	0xf1
 1474 04d0 00       		.byte	0
 1475 04d1 00       		.byte	0
 1476 04d2 19       		.uleb128 0x19
 1477 04d3 61020000 		.4byte	.LASF56
 1478 04d7 01       		.byte	0x1
 1479 04d8 21       		.byte	0x21
 1480 04d9 DD040000 		.4byte	0x4dd
 1481 04dd 1A       		.uleb128 0x1a
 1482 04de C2040000 		.4byte	0x4c2
 1483 04e2 1B       		.uleb128 0x1b
 1484 04e3 F3010000 		.4byte	.LASF57
 1485 04e7 01       		.byte	0x1
 1486 04e8 18       		.byte	0x18
 1487 04e9 6B000000 		.4byte	0x6b
 1488 04ed 05       		.uleb128 0x5
 1489 04ee 03       		.byte	0x3
 1490 04ef 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1491 04f3 17       		.uleb128 0x17
 1492 04f4 8C000000 		.4byte	0x8c
 1493 04f8 03050000 		.4byte	0x503
 1494 04fc 18       		.uleb128 0x18
 1495 04fd F1000000 		.4byte	0xf1
 1496 0501 00       		.byte	0
 1497 0502 00       		.byte	0
 1498 0503 1B       		.uleb128 0x1b
 1499 0504 00000000 		.4byte	.LASF58
 1500 0508 01       		.byte	0x1
 1501 0509 19       		.byte	0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 43


 1502 050a 14050000 		.4byte	0x514
 1503 050e 05       		.uleb128 0x5
 1504 050f 03       		.byte	0x3
 1505 0510 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1506 0514 06       		.uleb128 0x6
 1507 0515 F3040000 		.4byte	0x4f3
 1508 0519 17       		.uleb128 0x17
 1509 051a 97000000 		.4byte	0x97
 1510 051e 29050000 		.4byte	0x529
 1511 0522 18       		.uleb128 0x18
 1512 0523 F1000000 		.4byte	0xf1
 1513 0527 00       		.byte	0
 1514 0528 00       		.byte	0
 1515 0529 1B       		.uleb128 0x1b
 1516 052a 48040000 		.4byte	.LASF59
 1517 052e 01       		.byte	0x1
 1518 052f 1A       		.byte	0x1a
 1519 0530 3A050000 		.4byte	0x53a
 1520 0534 05       		.uleb128 0x5
 1521 0535 03       		.byte	0x3
 1522 0536 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1523 053a 06       		.uleb128 0x6
 1524 053b 19050000 		.4byte	0x519
 1525 053f 1C       		.uleb128 0x1c
 1526 0540 60030000 		.4byte	.LASF60
 1527 0544 03       		.byte	0x3
 1528 0545 49       		.byte	0x49
 1529 0546 55050000 		.4byte	0x555
 1530 054a 1D       		.uleb128 0x1d
 1531 054b 6B000000 		.4byte	0x6b
 1532 054f 1D       		.uleb128 0x1d
 1533 0550 6B000000 		.4byte	0x6b
 1534 0554 00       		.byte	0
 1535 0555 1E       		.uleb128 0x1e
 1536 0556 52020000 		.4byte	.LASF65
 1537 055a 03       		.byte	0x3
 1538 055b 46       		.byte	0x46
 1539 055c DE000000 		.4byte	0xde
 1540 0560 6F050000 		.4byte	0x56f
 1541 0564 1D       		.uleb128 0x1d
 1542 0565 6B000000 		.4byte	0x6b
 1543 0569 1D       		.uleb128 0x1d
 1544 056a DE000000 		.4byte	0xde
 1545 056e 00       		.byte	0
 1546 056f 1C       		.uleb128 0x1c
 1547 0570 B0010000 		.4byte	.LASF61
 1548 0574 03       		.byte	0x3
 1549 0575 58       		.byte	0x58
 1550 0576 80050000 		.4byte	0x580
 1551 057a 1D       		.uleb128 0x1d
 1552 057b 76000000 		.4byte	0x76
 1553 057f 00       		.byte	0
 1554 0580 1F       		.uleb128 0x1f
 1555 0581 AA030000 		.4byte	.LASF66
 1556 0585 03       		.byte	0x3
 1557 0586 60       		.byte	0x60
 1558 0587 1D       		.uleb128 0x1d
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 44


 1559 0588 6B000000 		.4byte	0x6b
 1560 058c 00       		.byte	0
 1561 058d 00       		.byte	0
 1562              		.section	.debug_abbrev,"",%progbits
 1563              	.Ldebug_abbrev0:
 1564 0000 01       		.uleb128 0x1
 1565 0001 11       		.uleb128 0x11
 1566 0002 01       		.byte	0x1
 1567 0003 25       		.uleb128 0x25
 1568 0004 0E       		.uleb128 0xe
 1569 0005 13       		.uleb128 0x13
 1570 0006 0B       		.uleb128 0xb
 1571 0007 03       		.uleb128 0x3
 1572 0008 0E       		.uleb128 0xe
 1573 0009 1B       		.uleb128 0x1b
 1574 000a 0E       		.uleb128 0xe
 1575 000b 55       		.uleb128 0x55
 1576 000c 17       		.uleb128 0x17
 1577 000d 11       		.uleb128 0x11
 1578 000e 01       		.uleb128 0x1
 1579 000f 10       		.uleb128 0x10
 1580 0010 17       		.uleb128 0x17
 1581 0011 00       		.byte	0
 1582 0012 00       		.byte	0
 1583 0013 02       		.uleb128 0x2
 1584 0014 24       		.uleb128 0x24
 1585 0015 00       		.byte	0
 1586 0016 0B       		.uleb128 0xb
 1587 0017 0B       		.uleb128 0xb
 1588 0018 3E       		.uleb128 0x3e
 1589 0019 0B       		.uleb128 0xb
 1590 001a 03       		.uleb128 0x3
 1591 001b 0E       		.uleb128 0xe
 1592 001c 00       		.byte	0
 1593 001d 00       		.byte	0
 1594 001e 03       		.uleb128 0x3
 1595 001f 24       		.uleb128 0x24
 1596 0020 00       		.byte	0
 1597 0021 0B       		.uleb128 0xb
 1598 0022 0B       		.uleb128 0xb
 1599 0023 3E       		.uleb128 0x3e
 1600 0024 0B       		.uleb128 0xb
 1601 0025 03       		.uleb128 0x3
 1602 0026 08       		.uleb128 0x8
 1603 0027 00       		.byte	0
 1604 0028 00       		.byte	0
 1605 0029 04       		.uleb128 0x4
 1606 002a 16       		.uleb128 0x16
 1607 002b 00       		.byte	0
 1608 002c 03       		.uleb128 0x3
 1609 002d 0E       		.uleb128 0xe
 1610 002e 3A       		.uleb128 0x3a
 1611 002f 0B       		.uleb128 0xb
 1612 0030 3B       		.uleb128 0x3b
 1613 0031 0B       		.uleb128 0xb
 1614 0032 49       		.uleb128 0x49
 1615 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 45


 1616 0034 00       		.byte	0
 1617 0035 00       		.byte	0
 1618 0036 05       		.uleb128 0x5
 1619 0037 16       		.uleb128 0x16
 1620 0038 00       		.byte	0
 1621 0039 03       		.uleb128 0x3
 1622 003a 0E       		.uleb128 0xe
 1623 003b 3A       		.uleb128 0x3a
 1624 003c 0B       		.uleb128 0xb
 1625 003d 3B       		.uleb128 0x3b
 1626 003e 05       		.uleb128 0x5
 1627 003f 49       		.uleb128 0x49
 1628 0040 13       		.uleb128 0x13
 1629 0041 00       		.byte	0
 1630 0042 00       		.byte	0
 1631 0043 06       		.uleb128 0x6
 1632 0044 35       		.uleb128 0x35
 1633 0045 00       		.byte	0
 1634 0046 49       		.uleb128 0x49
 1635 0047 13       		.uleb128 0x13
 1636 0048 00       		.byte	0
 1637 0049 00       		.byte	0
 1638 004a 07       		.uleb128 0x7
 1639 004b 0F       		.uleb128 0xf
 1640 004c 00       		.byte	0
 1641 004d 0B       		.uleb128 0xb
 1642 004e 0B       		.uleb128 0xb
 1643 004f 49       		.uleb128 0x49
 1644 0050 13       		.uleb128 0x13
 1645 0051 00       		.byte	0
 1646 0052 00       		.byte	0
 1647 0053 08       		.uleb128 0x8
 1648 0054 15       		.uleb128 0x15
 1649 0055 00       		.byte	0
 1650 0056 27       		.uleb128 0x27
 1651 0057 19       		.uleb128 0x19
 1652 0058 00       		.byte	0
 1653 0059 00       		.byte	0
 1654 005a 09       		.uleb128 0x9
 1655 005b 2E       		.uleb128 0x2e
 1656 005c 01       		.byte	0x1
 1657 005d 3F       		.uleb128 0x3f
 1658 005e 19       		.uleb128 0x19
 1659 005f 03       		.uleb128 0x3
 1660 0060 0E       		.uleb128 0xe
 1661 0061 3A       		.uleb128 0x3a
 1662 0062 0B       		.uleb128 0xb
 1663 0063 3B       		.uleb128 0x3b
 1664 0064 0B       		.uleb128 0xb
 1665 0065 27       		.uleb128 0x27
 1666 0066 19       		.uleb128 0x19
 1667 0067 11       		.uleb128 0x11
 1668 0068 01       		.uleb128 0x1
 1669 0069 12       		.uleb128 0x12
 1670 006a 06       		.uleb128 0x6
 1671 006b 40       		.uleb128 0x40
 1672 006c 18       		.uleb128 0x18
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 46


 1673 006d 9742     		.uleb128 0x2117
 1674 006f 19       		.uleb128 0x19
 1675 0070 01       		.uleb128 0x1
 1676 0071 13       		.uleb128 0x13
 1677 0072 00       		.byte	0
 1678 0073 00       		.byte	0
 1679 0074 0A       		.uleb128 0xa
 1680 0075 34       		.uleb128 0x34
 1681 0076 00       		.byte	0
 1682 0077 03       		.uleb128 0x3
 1683 0078 0E       		.uleb128 0xe
 1684 0079 3A       		.uleb128 0x3a
 1685 007a 0B       		.uleb128 0xb
 1686 007b 3B       		.uleb128 0x3b
 1687 007c 0B       		.uleb128 0xb
 1688 007d 49       		.uleb128 0x49
 1689 007e 13       		.uleb128 0x13
 1690 007f 02       		.uleb128 0x2
 1691 0080 17       		.uleb128 0x17
 1692 0081 00       		.byte	0
 1693 0082 00       		.byte	0
 1694 0083 0B       		.uleb128 0xb
 1695 0084 898201   		.uleb128 0x4109
 1696 0087 01       		.byte	0x1
 1697 0088 11       		.uleb128 0x11
 1698 0089 01       		.uleb128 0x1
 1699 008a 31       		.uleb128 0x31
 1700 008b 13       		.uleb128 0x13
 1701 008c 01       		.uleb128 0x1
 1702 008d 13       		.uleb128 0x13
 1703 008e 00       		.byte	0
 1704 008f 00       		.byte	0
 1705 0090 0C       		.uleb128 0xc
 1706 0091 8A8201   		.uleb128 0x410a
 1707 0094 00       		.byte	0
 1708 0095 02       		.uleb128 0x2
 1709 0096 18       		.uleb128 0x18
 1710 0097 9142     		.uleb128 0x2111
 1711 0099 18       		.uleb128 0x18
 1712 009a 00       		.byte	0
 1713 009b 00       		.byte	0
 1714 009c 0D       		.uleb128 0xd
 1715 009d 898201   		.uleb128 0x4109
 1716 00a0 01       		.byte	0x1
 1717 00a1 11       		.uleb128 0x11
 1718 00a2 01       		.uleb128 0x1
 1719 00a3 31       		.uleb128 0x31
 1720 00a4 13       		.uleb128 0x13
 1721 00a5 00       		.byte	0
 1722 00a6 00       		.byte	0
 1723 00a7 0E       		.uleb128 0xe
 1724 00a8 2E       		.uleb128 0x2e
 1725 00a9 01       		.byte	0x1
 1726 00aa 3F       		.uleb128 0x3f
 1727 00ab 19       		.uleb128 0x19
 1728 00ac 03       		.uleb128 0x3
 1729 00ad 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 47


 1730 00ae 3A       		.uleb128 0x3a
 1731 00af 0B       		.uleb128 0xb
 1732 00b0 3B       		.uleb128 0x3b
 1733 00b1 05       		.uleb128 0x5
 1734 00b2 27       		.uleb128 0x27
 1735 00b3 19       		.uleb128 0x19
 1736 00b4 11       		.uleb128 0x11
 1737 00b5 01       		.uleb128 0x1
 1738 00b6 12       		.uleb128 0x12
 1739 00b7 06       		.uleb128 0x6
 1740 00b8 40       		.uleb128 0x40
 1741 00b9 18       		.uleb128 0x18
 1742 00ba 9742     		.uleb128 0x2117
 1743 00bc 19       		.uleb128 0x19
 1744 00bd 01       		.uleb128 0x1
 1745 00be 13       		.uleb128 0x13
 1746 00bf 00       		.byte	0
 1747 00c0 00       		.byte	0
 1748 00c1 0F       		.uleb128 0xf
 1749 00c2 898201   		.uleb128 0x4109
 1750 00c5 00       		.byte	0
 1751 00c6 11       		.uleb128 0x11
 1752 00c7 01       		.uleb128 0x1
 1753 00c8 31       		.uleb128 0x31
 1754 00c9 13       		.uleb128 0x13
 1755 00ca 00       		.byte	0
 1756 00cb 00       		.byte	0
 1757 00cc 10       		.uleb128 0x10
 1758 00cd 2E       		.uleb128 0x2e
 1759 00ce 00       		.byte	0
 1760 00cf 3F       		.uleb128 0x3f
 1761 00d0 19       		.uleb128 0x19
 1762 00d1 03       		.uleb128 0x3
 1763 00d2 0E       		.uleb128 0xe
 1764 00d3 3A       		.uleb128 0x3a
 1765 00d4 0B       		.uleb128 0xb
 1766 00d5 3B       		.uleb128 0x3b
 1767 00d6 05       		.uleb128 0x5
 1768 00d7 27       		.uleb128 0x27
 1769 00d8 19       		.uleb128 0x19
 1770 00d9 11       		.uleb128 0x11
 1771 00da 01       		.uleb128 0x1
 1772 00db 12       		.uleb128 0x12
 1773 00dc 06       		.uleb128 0x6
 1774 00dd 40       		.uleb128 0x40
 1775 00de 18       		.uleb128 0x18
 1776 00df 9742     		.uleb128 0x2117
 1777 00e1 19       		.uleb128 0x19
 1778 00e2 00       		.byte	0
 1779 00e3 00       		.byte	0
 1780 00e4 11       		.uleb128 0x11
 1781 00e5 2E       		.uleb128 0x2e
 1782 00e6 01       		.byte	0x1
 1783 00e7 3F       		.uleb128 0x3f
 1784 00e8 19       		.uleb128 0x19
 1785 00e9 03       		.uleb128 0x3
 1786 00ea 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 48


 1787 00eb 3A       		.uleb128 0x3a
 1788 00ec 0B       		.uleb128 0xb
 1789 00ed 3B       		.uleb128 0x3b
 1790 00ee 05       		.uleb128 0x5
 1791 00ef 27       		.uleb128 0x27
 1792 00f0 19       		.uleb128 0x19
 1793 00f1 49       		.uleb128 0x49
 1794 00f2 13       		.uleb128 0x13
 1795 00f3 11       		.uleb128 0x11
 1796 00f4 01       		.uleb128 0x1
 1797 00f5 12       		.uleb128 0x12
 1798 00f6 06       		.uleb128 0x6
 1799 00f7 40       		.uleb128 0x40
 1800 00f8 18       		.uleb128 0x18
 1801 00f9 9742     		.uleb128 0x2117
 1802 00fb 19       		.uleb128 0x19
 1803 00fc 01       		.uleb128 0x1
 1804 00fd 13       		.uleb128 0x13
 1805 00fe 00       		.byte	0
 1806 00ff 00       		.byte	0
 1807 0100 12       		.uleb128 0x12
 1808 0101 05       		.uleb128 0x5
 1809 0102 00       		.byte	0
 1810 0103 03       		.uleb128 0x3
 1811 0104 0E       		.uleb128 0xe
 1812 0105 3A       		.uleb128 0x3a
 1813 0106 0B       		.uleb128 0xb
 1814 0107 3B       		.uleb128 0x3b
 1815 0108 05       		.uleb128 0x5
 1816 0109 49       		.uleb128 0x49
 1817 010a 13       		.uleb128 0x13
 1818 010b 02       		.uleb128 0x2
 1819 010c 17       		.uleb128 0x17
 1820 010d 00       		.byte	0
 1821 010e 00       		.byte	0
 1822 010f 13       		.uleb128 0x13
 1823 0110 34       		.uleb128 0x34
 1824 0111 00       		.byte	0
 1825 0112 03       		.uleb128 0x3
 1826 0113 0E       		.uleb128 0xe
 1827 0114 3A       		.uleb128 0x3a
 1828 0115 0B       		.uleb128 0xb
 1829 0116 3B       		.uleb128 0x3b
 1830 0117 05       		.uleb128 0x5
 1831 0118 49       		.uleb128 0x49
 1832 0119 13       		.uleb128 0x13
 1833 011a 02       		.uleb128 0x2
 1834 011b 17       		.uleb128 0x17
 1835 011c 00       		.byte	0
 1836 011d 00       		.byte	0
 1837 011e 14       		.uleb128 0x14
 1838 011f 2E       		.uleb128 0x2e
 1839 0120 01       		.byte	0x1
 1840 0121 3F       		.uleb128 0x3f
 1841 0122 19       		.uleb128 0x19
 1842 0123 03       		.uleb128 0x3
 1843 0124 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 49


 1844 0125 3A       		.uleb128 0x3a
 1845 0126 0B       		.uleb128 0xb
 1846 0127 3B       		.uleb128 0x3b
 1847 0128 05       		.uleb128 0x5
 1848 0129 27       		.uleb128 0x27
 1849 012a 19       		.uleb128 0x19
 1850 012b 49       		.uleb128 0x49
 1851 012c 13       		.uleb128 0x13
 1852 012d 11       		.uleb128 0x11
 1853 012e 01       		.uleb128 0x1
 1854 012f 12       		.uleb128 0x12
 1855 0130 06       		.uleb128 0x6
 1856 0131 40       		.uleb128 0x40
 1857 0132 18       		.uleb128 0x18
 1858 0133 9642     		.uleb128 0x2116
 1859 0135 19       		.uleb128 0x19
 1860 0136 01       		.uleb128 0x1
 1861 0137 13       		.uleb128 0x13
 1862 0138 00       		.byte	0
 1863 0139 00       		.byte	0
 1864 013a 15       		.uleb128 0x15
 1865 013b 34       		.uleb128 0x34
 1866 013c 00       		.byte	0
 1867 013d 03       		.uleb128 0x3
 1868 013e 0E       		.uleb128 0xe
 1869 013f 3A       		.uleb128 0x3a
 1870 0140 0B       		.uleb128 0xb
 1871 0141 3B       		.uleb128 0x3b
 1872 0142 05       		.uleb128 0x5
 1873 0143 49       		.uleb128 0x49
 1874 0144 13       		.uleb128 0x13
 1875 0145 00       		.byte	0
 1876 0146 00       		.byte	0
 1877 0147 16       		.uleb128 0x16
 1878 0148 34       		.uleb128 0x34
 1879 0149 00       		.byte	0
 1880 014a 03       		.uleb128 0x3
 1881 014b 0E       		.uleb128 0xe
 1882 014c 3A       		.uleb128 0x3a
 1883 014d 0B       		.uleb128 0xb
 1884 014e 3B       		.uleb128 0x3b
 1885 014f 05       		.uleb128 0x5
 1886 0150 49       		.uleb128 0x49
 1887 0151 13       		.uleb128 0x13
 1888 0152 02       		.uleb128 0x2
 1889 0153 18       		.uleb128 0x18
 1890 0154 00       		.byte	0
 1891 0155 00       		.byte	0
 1892 0156 17       		.uleb128 0x17
 1893 0157 01       		.uleb128 0x1
 1894 0158 01       		.byte	0x1
 1895 0159 49       		.uleb128 0x49
 1896 015a 13       		.uleb128 0x13
 1897 015b 01       		.uleb128 0x1
 1898 015c 13       		.uleb128 0x13
 1899 015d 00       		.byte	0
 1900 015e 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 50


 1901 015f 18       		.uleb128 0x18
 1902 0160 21       		.uleb128 0x21
 1903 0161 00       		.byte	0
 1904 0162 49       		.uleb128 0x49
 1905 0163 13       		.uleb128 0x13
 1906 0164 2F       		.uleb128 0x2f
 1907 0165 0B       		.uleb128 0xb
 1908 0166 00       		.byte	0
 1909 0167 00       		.byte	0
 1910 0168 19       		.uleb128 0x19
 1911 0169 34       		.uleb128 0x34
 1912 016a 00       		.byte	0
 1913 016b 03       		.uleb128 0x3
 1914 016c 0E       		.uleb128 0xe
 1915 016d 3A       		.uleb128 0x3a
 1916 016e 0B       		.uleb128 0xb
 1917 016f 3B       		.uleb128 0x3b
 1918 0170 0B       		.uleb128 0xb
 1919 0171 49       		.uleb128 0x49
 1920 0172 13       		.uleb128 0x13
 1921 0173 00       		.byte	0
 1922 0174 00       		.byte	0
 1923 0175 1A       		.uleb128 0x1a
 1924 0176 26       		.uleb128 0x26
 1925 0177 00       		.byte	0
 1926 0178 49       		.uleb128 0x49
 1927 0179 13       		.uleb128 0x13
 1928 017a 00       		.byte	0
 1929 017b 00       		.byte	0
 1930 017c 1B       		.uleb128 0x1b
 1931 017d 34       		.uleb128 0x34
 1932 017e 00       		.byte	0
 1933 017f 03       		.uleb128 0x3
 1934 0180 0E       		.uleb128 0xe
 1935 0181 3A       		.uleb128 0x3a
 1936 0182 0B       		.uleb128 0xb
 1937 0183 3B       		.uleb128 0x3b
 1938 0184 0B       		.uleb128 0xb
 1939 0185 49       		.uleb128 0x49
 1940 0186 13       		.uleb128 0x13
 1941 0187 3F       		.uleb128 0x3f
 1942 0188 19       		.uleb128 0x19
 1943 0189 02       		.uleb128 0x2
 1944 018a 18       		.uleb128 0x18
 1945 018b 00       		.byte	0
 1946 018c 00       		.byte	0
 1947 018d 1C       		.uleb128 0x1c
 1948 018e 2E       		.uleb128 0x2e
 1949 018f 01       		.byte	0x1
 1950 0190 3F       		.uleb128 0x3f
 1951 0191 19       		.uleb128 0x19
 1952 0192 03       		.uleb128 0x3
 1953 0193 0E       		.uleb128 0xe
 1954 0194 3A       		.uleb128 0x3a
 1955 0195 0B       		.uleb128 0xb
 1956 0196 3B       		.uleb128 0x3b
 1957 0197 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 51


 1958 0198 27       		.uleb128 0x27
 1959 0199 19       		.uleb128 0x19
 1960 019a 3C       		.uleb128 0x3c
 1961 019b 19       		.uleb128 0x19
 1962 019c 01       		.uleb128 0x1
 1963 019d 13       		.uleb128 0x13
 1964 019e 00       		.byte	0
 1965 019f 00       		.byte	0
 1966 01a0 1D       		.uleb128 0x1d
 1967 01a1 05       		.uleb128 0x5
 1968 01a2 00       		.byte	0
 1969 01a3 49       		.uleb128 0x49
 1970 01a4 13       		.uleb128 0x13
 1971 01a5 00       		.byte	0
 1972 01a6 00       		.byte	0
 1973 01a7 1E       		.uleb128 0x1e
 1974 01a8 2E       		.uleb128 0x2e
 1975 01a9 01       		.byte	0x1
 1976 01aa 3F       		.uleb128 0x3f
 1977 01ab 19       		.uleb128 0x19
 1978 01ac 03       		.uleb128 0x3
 1979 01ad 0E       		.uleb128 0xe
 1980 01ae 3A       		.uleb128 0x3a
 1981 01af 0B       		.uleb128 0xb
 1982 01b0 3B       		.uleb128 0x3b
 1983 01b1 0B       		.uleb128 0xb
 1984 01b2 27       		.uleb128 0x27
 1985 01b3 19       		.uleb128 0x19
 1986 01b4 49       		.uleb128 0x49
 1987 01b5 13       		.uleb128 0x13
 1988 01b6 3C       		.uleb128 0x3c
 1989 01b7 19       		.uleb128 0x19
 1990 01b8 01       		.uleb128 0x1
 1991 01b9 13       		.uleb128 0x13
 1992 01ba 00       		.byte	0
 1993 01bb 00       		.byte	0
 1994 01bc 1F       		.uleb128 0x1f
 1995 01bd 2E       		.uleb128 0x2e
 1996 01be 01       		.byte	0x1
 1997 01bf 3F       		.uleb128 0x3f
 1998 01c0 19       		.uleb128 0x19
 1999 01c1 03       		.uleb128 0x3
 2000 01c2 0E       		.uleb128 0xe
 2001 01c3 3A       		.uleb128 0x3a
 2002 01c4 0B       		.uleb128 0xb
 2003 01c5 3B       		.uleb128 0x3b
 2004 01c6 0B       		.uleb128 0xb
 2005 01c7 27       		.uleb128 0x27
 2006 01c8 19       		.uleb128 0x19
 2007 01c9 3C       		.uleb128 0x3c
 2008 01ca 19       		.uleb128 0x19
 2009 01cb 00       		.byte	0
 2010 01cc 00       		.byte	0
 2011 01cd 00       		.byte	0
 2012              		.section	.debug_loc,"",%progbits
 2013              	.Ldebug_loc0:
 2014              	.LLST0:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 52


 2015 0000 76000000 		.4byte	.LVL5
 2016 0004 7E000000 		.4byte	.LVL7
 2017 0008 0200     		.2byte	0x2
 2018 000a 30       		.byte	0x30
 2019 000b 9F       		.byte	0x9f
 2020 000c 7E000000 		.4byte	.LVL7
 2021 0010 F8000000 		.4byte	.LFE3
 2022 0014 0100     		.2byte	0x1
 2023 0016 53       		.byte	0x53
 2024 0017 00000000 		.4byte	0
 2025 001b 00000000 		.4byte	0
 2026              	.LLST1:
 2027 001f 6A000000 		.4byte	.LVL2
 2028 0023 70000000 		.4byte	.LVL3
 2029 0027 0700     		.2byte	0x7
 2030 0029 71       		.byte	0x71
 2031 002a 00       		.sleb128 0
 2032 002b 40       		.byte	0x40
 2033 002c 49       		.byte	0x49
 2034 002d 24       		.byte	0x24
 2035 002e 21       		.byte	0x21
 2036 002f 9F       		.byte	0x9f
 2037 0030 74000000 		.4byte	.LVL4
 2038 0034 7A000000 		.4byte	.LVL6
 2039 0038 0100     		.2byte	0x1
 2040 003a 52       		.byte	0x52
 2041 003b 7A000000 		.4byte	.LVL6
 2042 003f 7E000000 		.4byte	.LVL7
 2043 0043 0500     		.2byte	0x5
 2044 0045 0C       		.byte	0xc
 2045 0046 30003A40 		.4byte	0x403a0030
 2046 004a 7E000000 		.4byte	.LVL7
 2047 004e 92000000 		.4byte	.LVL9
 2048 0052 0200     		.2byte	0x2
 2049 0054 30       		.byte	0x30
 2050 0055 9F       		.byte	0x9f
 2051 0056 00000000 		.4byte	0
 2052 005a 00000000 		.4byte	0
 2053              	.LLST2:
 2054 005e 86000000 		.4byte	.LVL8
 2055 0062 92000000 		.4byte	.LVL9
 2056 0066 0400     		.2byte	0x4
 2057 0068 0A       		.byte	0xa
 2058 0069 0010     		.2byte	0x1000
 2059 006b 9F       		.byte	0x9f
 2060 006c 00000000 		.4byte	0
 2061 0070 00000000 		.4byte	0
 2062              	.LLST3:
 2063 0074 00000000 		.4byte	.LVL13
 2064 0078 0C000000 		.4byte	.LVL14
 2065 007c 0100     		.2byte	0x1
 2066 007e 50       		.byte	0x50
 2067 007f 0C000000 		.4byte	.LVL14
 2068 0083 22000000 		.4byte	.LVL16
 2069 0087 0400     		.2byte	0x4
 2070 0089 F3       		.byte	0xf3
 2071 008a 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 53


 2072 008b 50       		.byte	0x50
 2073 008c 9F       		.byte	0x9f
 2074 008d 22000000 		.4byte	.LVL16
 2075 0091 24000000 		.4byte	.LVL17
 2076 0095 0100     		.2byte	0x1
 2077 0097 50       		.byte	0x50
 2078 0098 24000000 		.4byte	.LVL17
 2079 009c 2C000000 		.4byte	.LFE8
 2080 00a0 0400     		.2byte	0x4
 2081 00a2 F3       		.byte	0xf3
 2082 00a3 01       		.uleb128 0x1
 2083 00a4 50       		.byte	0x50
 2084 00a5 9F       		.byte	0x9f
 2085 00a6 00000000 		.4byte	0
 2086 00aa 00000000 		.4byte	0
 2087              	.LLST4:
 2088 00ae 00000000 		.4byte	.LVL13
 2089 00b2 0C000000 		.4byte	.LVL14
 2090 00b6 0200     		.2byte	0x2
 2091 00b8 30       		.byte	0x30
 2092 00b9 9F       		.byte	0x9f
 2093 00ba 10000000 		.4byte	.LVL15
 2094 00be 22000000 		.4byte	.LVL16
 2095 00c2 0100     		.2byte	0x1
 2096 00c4 50       		.byte	0x50
 2097 00c5 22000000 		.4byte	.LVL16
 2098 00c9 24000000 		.4byte	.LVL17
 2099 00cd 0200     		.2byte	0x2
 2100 00cf 30       		.byte	0x30
 2101 00d0 9F       		.byte	0x9f
 2102 00d1 24000000 		.4byte	.LVL17
 2103 00d5 2C000000 		.4byte	.LFE8
 2104 00d9 0100     		.2byte	0x1
 2105 00db 50       		.byte	0x50
 2106 00dc 00000000 		.4byte	0
 2107 00e0 00000000 		.4byte	0
 2108              	.LLST5:
 2109 00e4 00000000 		.4byte	.LVL18
 2110 00e8 08000000 		.4byte	.LVL19
 2111 00ec 0100     		.2byte	0x1
 2112 00ee 50       		.byte	0x50
 2113 00ef 08000000 		.4byte	.LVL19
 2114 00f3 12000000 		.4byte	.LVL21
 2115 00f7 0100     		.2byte	0x1
 2116 00f9 54       		.byte	0x54
 2117 00fa 12000000 		.4byte	.LVL21
 2118 00fe 1E000000 		.4byte	.LVL23
 2119 0102 0400     		.2byte	0x4
 2120 0104 F3       		.byte	0xf3
 2121 0105 01       		.uleb128 0x1
 2122 0106 50       		.byte	0x50
 2123 0107 9F       		.byte	0x9f
 2124 0108 1E000000 		.4byte	.LVL23
 2125 010c 20000000 		.4byte	.LVL24
 2126 0110 0100     		.2byte	0x1
 2127 0112 54       		.byte	0x54
 2128 0113 20000000 		.4byte	.LVL24
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 54


 2129 0117 28000000 		.4byte	.LFE9
 2130 011b 0400     		.2byte	0x4
 2131 011d F3       		.byte	0xf3
 2132 011e 01       		.uleb128 0x1
 2133 011f 50       		.byte	0x50
 2134 0120 9F       		.byte	0x9f
 2135 0121 00000000 		.4byte	0
 2136 0125 00000000 		.4byte	0
 2137              	.LLST6:
 2138 0129 1C000000 		.4byte	.LVL22
 2139 012d 1E000000 		.4byte	.LVL23
 2140 0131 0100     		.2byte	0x1
 2141 0133 50       		.byte	0x50
 2142 0134 20000000 		.4byte	.LVL24
 2143 0138 22000000 		.4byte	.LVL25
 2144 013c 0100     		.2byte	0x1
 2145 013e 50       		.byte	0x50
 2146 013f 00000000 		.4byte	0
 2147 0143 00000000 		.4byte	0
 2148              	.LLST7:
 2149 0147 00000000 		.4byte	.LVL26
 2150 014b 04000000 		.4byte	.LVL27
 2151 014f 0100     		.2byte	0x1
 2152 0151 50       		.byte	0x50
 2153 0152 04000000 		.4byte	.LVL27
 2154 0156 10000000 		.4byte	.LFE10
 2155 015a 0400     		.2byte	0x4
 2156 015c F3       		.byte	0xf3
 2157 015d 01       		.uleb128 0x1
 2158 015e 50       		.byte	0x50
 2159 015f 9F       		.byte	0x9f
 2160 0160 00000000 		.4byte	0
 2161 0164 00000000 		.4byte	0
 2162              	.LLST8:
 2163 0168 00000000 		.4byte	.LVL28
 2164 016c 0E000000 		.4byte	.LVL29
 2165 0170 0100     		.2byte	0x1
 2166 0172 50       		.byte	0x50
 2167 0173 0E000000 		.4byte	.LVL29
 2168 0177 1C000000 		.4byte	.LFE11
 2169 017b 0400     		.2byte	0x4
 2170 017d F3       		.byte	0xf3
 2171 017e 01       		.uleb128 0x1
 2172 017f 50       		.byte	0x50
 2173 0180 9F       		.byte	0x9f
 2174 0181 00000000 		.4byte	0
 2175 0185 00000000 		.4byte	0
 2176              	.LLST9:
 2177 0189 00000000 		.4byte	.LVL30
 2178 018d 0E000000 		.4byte	.LVL31
 2179 0191 0100     		.2byte	0x1
 2180 0193 50       		.byte	0x50
 2181 0194 0E000000 		.4byte	.LVL31
 2182 0198 18000000 		.4byte	.LFE12
 2183 019c 0400     		.2byte	0x4
 2184 019e F3       		.byte	0xf3
 2185 019f 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 55


 2186 01a0 50       		.byte	0x50
 2187 01a1 9F       		.byte	0x9f
 2188 01a2 00000000 		.4byte	0
 2189 01a6 00000000 		.4byte	0
 2190              	.LLST10:
 2191 01aa 00000000 		.4byte	.LVL32
 2192 01ae 04000000 		.4byte	.LVL33
 2193 01b2 0100     		.2byte	0x1
 2194 01b4 50       		.byte	0x50
 2195 01b5 04000000 		.4byte	.LVL33
 2196 01b9 10000000 		.4byte	.LFE13
 2197 01bd 0400     		.2byte	0x4
 2198 01bf F3       		.byte	0xf3
 2199 01c0 01       		.uleb128 0x1
 2200 01c1 50       		.byte	0x50
 2201 01c2 9F       		.byte	0x9f
 2202 01c3 00000000 		.4byte	0
 2203 01c7 00000000 		.4byte	0
 2204              	.LLST11:
 2205 01cb 00000000 		.4byte	.LVL34
 2206 01cf 04000000 		.4byte	.LVL35
 2207 01d3 0100     		.2byte	0x1
 2208 01d5 50       		.byte	0x50
 2209 01d6 04000000 		.4byte	.LVL35
 2210 01da 10000000 		.4byte	.LFE14
 2211 01de 0400     		.2byte	0x4
 2212 01e0 F3       		.byte	0xf3
 2213 01e1 01       		.uleb128 0x1
 2214 01e2 50       		.byte	0x50
 2215 01e3 9F       		.byte	0x9f
 2216 01e4 00000000 		.4byte	0
 2217 01e8 00000000 		.4byte	0
 2218              	.LLST12:
 2219 01ec 00000000 		.4byte	.LVL36
 2220 01f0 0C000000 		.4byte	.LVL37
 2221 01f4 0100     		.2byte	0x1
 2222 01f6 50       		.byte	0x50
 2223 01f7 0C000000 		.4byte	.LVL37
 2224 01fb 12000000 		.4byte	.LVL39
 2225 01ff 0100     		.2byte	0x1
 2226 0201 54       		.byte	0x54
 2227 0202 12000000 		.4byte	.LVL39
 2228 0206 1C000000 		.4byte	.LFE15
 2229 020a 0400     		.2byte	0x4
 2230 020c F3       		.byte	0xf3
 2231 020d 01       		.uleb128 0x1
 2232 020e 50       		.byte	0x50
 2233 020f 9F       		.byte	0x9f
 2234 0210 00000000 		.4byte	0
 2235 0214 00000000 		.4byte	0
 2236              	.LLST13:
 2237 0218 00000000 		.4byte	.LVL36
 2238 021c 0F000000 		.4byte	.LVL38-1
 2239 0220 0100     		.2byte	0x1
 2240 0222 51       		.byte	0x51
 2241 0223 0F000000 		.4byte	.LVL38-1
 2242 0227 1C000000 		.4byte	.LFE15
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 56


 2243 022b 0400     		.2byte	0x4
 2244 022d F3       		.byte	0xf3
 2245 022e 01       		.uleb128 0x1
 2246 022f 51       		.byte	0x51
 2247 0230 9F       		.byte	0x9f
 2248 0231 00000000 		.4byte	0
 2249 0235 00000000 		.4byte	0
 2250              	.LLST14:
 2251 0239 00000000 		.4byte	.LVL40
 2252 023d 0C000000 		.4byte	.LVL41
 2253 0241 0100     		.2byte	0x1
 2254 0243 50       		.byte	0x50
 2255 0244 0C000000 		.4byte	.LVL41
 2256 0248 12000000 		.4byte	.LVL43
 2257 024c 0100     		.2byte	0x1
 2258 024e 54       		.byte	0x54
 2259 024f 12000000 		.4byte	.LVL43
 2260 0253 1C000000 		.4byte	.LFE16
 2261 0257 0400     		.2byte	0x4
 2262 0259 F3       		.byte	0xf3
 2263 025a 01       		.uleb128 0x1
 2264 025b 50       		.byte	0x50
 2265 025c 9F       		.byte	0x9f
 2266 025d 00000000 		.4byte	0
 2267 0261 00000000 		.4byte	0
 2268              	.LLST15:
 2269 0265 00000000 		.4byte	.LVL40
 2270 0269 0F000000 		.4byte	.LVL42-1
 2271 026d 0100     		.2byte	0x1
 2272 026f 51       		.byte	0x51
 2273 0270 0F000000 		.4byte	.LVL42-1
 2274 0274 16000000 		.4byte	.LVL44
 2275 0278 0100     		.2byte	0x1
 2276 027a 55       		.byte	0x55
 2277 027b 16000000 		.4byte	.LVL44
 2278 027f 1C000000 		.4byte	.LFE16
 2279 0283 0800     		.2byte	0x8
 2280 0285 F3       		.byte	0xf3
 2281 0286 01       		.uleb128 0x1
 2282 0287 50       		.byte	0x50
 2283 0288 32       		.byte	0x32
 2284 0289 24       		.byte	0x24
 2285 028a 73       		.byte	0x73
 2286 028b 00       		.sleb128 0
 2287 028c 22       		.byte	0x22
 2288 028d 00000000 		.4byte	0
 2289 0291 00000000 		.4byte	0
 2290              	.LLST16:
 2291 0295 00000000 		.4byte	.LVL45
 2292 0299 0C000000 		.4byte	.LVL46
 2293 029d 0100     		.2byte	0x1
 2294 029f 50       		.byte	0x50
 2295 02a0 0C000000 		.4byte	.LVL46
 2296 02a4 42000000 		.4byte	.LVL52
 2297 02a8 0100     		.2byte	0x1
 2298 02aa 54       		.byte	0x54
 2299 02ab 42000000 		.4byte	.LVL52
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 57


 2300 02af 5C000000 		.4byte	.LFE17
 2301 02b3 0400     		.2byte	0x4
 2302 02b5 F3       		.byte	0xf3
 2303 02b6 01       		.uleb128 0x1
 2304 02b7 50       		.byte	0x50
 2305 02b8 9F       		.byte	0x9f
 2306 02b9 00000000 		.4byte	0
 2307 02bd 00000000 		.4byte	0
 2308              	.LLST17:
 2309 02c1 00000000 		.4byte	.LVL45
 2310 02c5 0F000000 		.4byte	.LVL47-1
 2311 02c9 0100     		.2byte	0x1
 2312 02cb 51       		.byte	0x51
 2313 02cc 0F000000 		.4byte	.LVL47-1
 2314 02d0 1A000000 		.4byte	.LVL48
 2315 02d4 0400     		.2byte	0x4
 2316 02d6 F3       		.byte	0xf3
 2317 02d7 01       		.uleb128 0x1
 2318 02d8 51       		.byte	0x51
 2319 02d9 9F       		.byte	0x9f
 2320 02da 1A000000 		.4byte	.LVL48
 2321 02de 26000000 		.4byte	.LVL49
 2322 02e2 0100     		.2byte	0x1
 2323 02e4 51       		.byte	0x51
 2324 02e5 30000000 		.4byte	.LVL50
 2325 02e9 34000000 		.4byte	.LVL51
 2326 02ed 0100     		.2byte	0x1
 2327 02ef 51       		.byte	0x51
 2328 02f0 00000000 		.4byte	0
 2329 02f4 00000000 		.4byte	0
 2330              	.LLST18:
 2331 02f8 4A000000 		.4byte	.LVL53
 2332 02fc 4C000000 		.4byte	.LVL54
 2333 0300 0100     		.2byte	0x1
 2334 0302 50       		.byte	0x50
 2335 0303 00000000 		.4byte	0
 2336 0307 00000000 		.4byte	0
 2337              	.LLST19:
 2338 030b 00000000 		.4byte	.LVL55
 2339 030f 0C000000 		.4byte	.LVL56
 2340 0313 0100     		.2byte	0x1
 2341 0315 50       		.byte	0x50
 2342 0316 0C000000 		.4byte	.LVL56
 2343 031a 26000000 		.4byte	.LVL60
 2344 031e 0100     		.2byte	0x1
 2345 0320 56       		.byte	0x56
 2346 0321 26000000 		.4byte	.LVL60
 2347 0325 48000000 		.4byte	.LFE18
 2348 0329 0400     		.2byte	0x4
 2349 032b F3       		.byte	0xf3
 2350 032c 01       		.uleb128 0x1
 2351 032d 50       		.byte	0x50
 2352 032e 9F       		.byte	0x9f
 2353 032f 00000000 		.4byte	0
 2354 0333 00000000 		.4byte	0
 2355              	.LLST20:
 2356 0337 00000000 		.4byte	.LVL55
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 58


 2357 033b 0F000000 		.4byte	.LVL57-1
 2358 033f 0100     		.2byte	0x1
 2359 0341 51       		.byte	0x51
 2360 0342 0F000000 		.4byte	.LVL57-1
 2361 0346 1A000000 		.4byte	.LVL58
 2362 034a 0400     		.2byte	0x4
 2363 034c F3       		.byte	0xf3
 2364 034d 01       		.uleb128 0x1
 2365 034e 51       		.byte	0x51
 2366 034f 9F       		.byte	0x9f
 2367 0350 1A000000 		.4byte	.LVL58
 2368 0354 23000000 		.4byte	.LVL59-1
 2369 0358 0100     		.2byte	0x1
 2370 035a 50       		.byte	0x50
 2371 035b 00000000 		.4byte	0
 2372 035f 00000000 		.4byte	0
 2373              	.LLST21:
 2374 0363 00000000 		.4byte	.LVL62
 2375 0367 0C000000 		.4byte	.LVL63
 2376 036b 0100     		.2byte	0x1
 2377 036d 50       		.byte	0x50
 2378 036e 0C000000 		.4byte	.LVL63
 2379 0372 28000000 		.4byte	.LVL69
 2380 0376 0100     		.2byte	0x1
 2381 0378 54       		.byte	0x54
 2382 0379 28000000 		.4byte	.LVL69
 2383 037d 48000000 		.4byte	.LFE19
 2384 0381 0400     		.2byte	0x4
 2385 0383 F3       		.byte	0xf3
 2386 0384 01       		.uleb128 0x1
 2387 0385 50       		.byte	0x50
 2388 0386 9F       		.byte	0x9f
 2389 0387 00000000 		.4byte	0
 2390 038b 00000000 		.4byte	0
 2391              	.LLST22:
 2392 038f 00000000 		.4byte	.LVL62
 2393 0393 0F000000 		.4byte	.LVL64-1
 2394 0397 0100     		.2byte	0x1
 2395 0399 51       		.byte	0x51
 2396 039a 0F000000 		.4byte	.LVL64-1
 2397 039e 1A000000 		.4byte	.LVL65
 2398 03a2 0400     		.2byte	0x4
 2399 03a4 F3       		.byte	0xf3
 2400 03a5 01       		.uleb128 0x1
 2401 03a6 51       		.byte	0x51
 2402 03a7 9F       		.byte	0x9f
 2403 03a8 1A000000 		.4byte	.LVL65
 2404 03ac 26000000 		.4byte	.LVL68
 2405 03b0 0100     		.2byte	0x1
 2406 03b2 55       		.byte	0x55
 2407 03b3 00000000 		.4byte	0
 2408 03b7 00000000 		.4byte	0
 2409              		.section	.debug_aranges,"",%progbits
 2410 0000 A4000000 		.4byte	0xa4
 2411 0004 0200     		.2byte	0x2
 2412 0006 00000000 		.4byte	.Ldebug_info0
 2413 000a 04       		.byte	0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 59


 2414 000b 00       		.byte	0
 2415 000c 0000     		.2byte	0
 2416 000e 0000     		.2byte	0
 2417 0010 00000000 		.4byte	.LFB3
 2418 0014 F8000000 		.4byte	.LFE3-.LFB3
 2419 0018 00000000 		.4byte	.LFB4
 2420 001c 30000000 		.4byte	.LFE4-.LFB4
 2421 0020 00000000 		.4byte	.LFB2
 2422 0024 20000000 		.4byte	.LFE2-.LFB2
 2423 0028 00000000 		.4byte	.LFB5
 2424 002c 10000000 		.4byte	.LFE5-.LFB5
 2425 0030 00000000 		.4byte	.LFB6
 2426 0034 14000000 		.4byte	.LFE6-.LFB6
 2427 0038 00000000 		.4byte	.LFB7
 2428 003c 14000000 		.4byte	.LFE7-.LFB7
 2429 0040 00000000 		.4byte	.LFB8
 2430 0044 2C000000 		.4byte	.LFE8-.LFB8
 2431 0048 00000000 		.4byte	.LFB9
 2432 004c 28000000 		.4byte	.LFE9-.LFB9
 2433 0050 00000000 		.4byte	.LFB10
 2434 0054 10000000 		.4byte	.LFE10-.LFB10
 2435 0058 00000000 		.4byte	.LFB11
 2436 005c 1C000000 		.4byte	.LFE11-.LFB11
 2437 0060 00000000 		.4byte	.LFB12
 2438 0064 18000000 		.4byte	.LFE12-.LFB12
 2439 0068 00000000 		.4byte	.LFB13
 2440 006c 10000000 		.4byte	.LFE13-.LFB13
 2441 0070 00000000 		.4byte	.LFB14
 2442 0074 10000000 		.4byte	.LFE14-.LFB14
 2443 0078 00000000 		.4byte	.LFB15
 2444 007c 1C000000 		.4byte	.LFE15-.LFB15
 2445 0080 00000000 		.4byte	.LFB16
 2446 0084 1C000000 		.4byte	.LFE16-.LFB16
 2447 0088 00000000 		.4byte	.LFB17
 2448 008c 5C000000 		.4byte	.LFE17-.LFB17
 2449 0090 00000000 		.4byte	.LFB18
 2450 0094 48000000 		.4byte	.LFE18-.LFB18
 2451 0098 00000000 		.4byte	.LFB19
 2452 009c 48000000 		.4byte	.LFE19-.LFB19
 2453 00a0 00000000 		.4byte	0
 2454 00a4 00000000 		.4byte	0
 2455              		.section	.debug_ranges,"",%progbits
 2456              	.Ldebug_ranges0:
 2457 0000 00000000 		.4byte	.LFB3
 2458 0004 F8000000 		.4byte	.LFE3
 2459 0008 00000000 		.4byte	.LFB4
 2460 000c 30000000 		.4byte	.LFE4
 2461 0010 00000000 		.4byte	.LFB2
 2462 0014 20000000 		.4byte	.LFE2
 2463 0018 00000000 		.4byte	.LFB5
 2464 001c 10000000 		.4byte	.LFE5
 2465 0020 00000000 		.4byte	.LFB6
 2466 0024 14000000 		.4byte	.LFE6
 2467 0028 00000000 		.4byte	.LFB7
 2468 002c 14000000 		.4byte	.LFE7
 2469 0030 00000000 		.4byte	.LFB8
 2470 0034 2C000000 		.4byte	.LFE8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 60


 2471 0038 00000000 		.4byte	.LFB9
 2472 003c 28000000 		.4byte	.LFE9
 2473 0040 00000000 		.4byte	.LFB10
 2474 0044 10000000 		.4byte	.LFE10
 2475 0048 00000000 		.4byte	.LFB11
 2476 004c 1C000000 		.4byte	.LFE11
 2477 0050 00000000 		.4byte	.LFB12
 2478 0054 18000000 		.4byte	.LFE12
 2479 0058 00000000 		.4byte	.LFB13
 2480 005c 10000000 		.4byte	.LFE13
 2481 0060 00000000 		.4byte	.LFB14
 2482 0064 10000000 		.4byte	.LFE14
 2483 0068 00000000 		.4byte	.LFB15
 2484 006c 1C000000 		.4byte	.LFE15
 2485 0070 00000000 		.4byte	.LFB16
 2486 0074 1C000000 		.4byte	.LFE16
 2487 0078 00000000 		.4byte	.LFB17
 2488 007c 5C000000 		.4byte	.LFE17
 2489 0080 00000000 		.4byte	.LFB18
 2490 0084 48000000 		.4byte	.LFE18
 2491 0088 00000000 		.4byte	.LFB19
 2492 008c 48000000 		.4byte	.LFE19
 2493 0090 00000000 		.4byte	0
 2494 0094 00000000 		.4byte	0
 2495              		.section	.debug_line,"",%progbits
 2496              	.Ldebug_line0:
 2497 0000 92020000 		.section	.debug_str,"MS",%progbits,1
 2497      02005700 
 2497      00000201 
 2497      FB0E0D00 
 2497      01010101 
 2498              	.LASF58:
 2499 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2499      5341525F 
 2499      5365715F 
 2499      315F6F66 
 2499      66736574 
 2500              	.LASF10:
 2501 0015 75696E74 		.ascii	"uint16\000"
 2501      313600
 2502              	.LASF25:
 2503 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2503      5341525F 
 2503      5365715F 
 2503      315F496E 
 2503      697400
 2504              	.LASF48:
 2505 002f 61646347 		.ascii	"adcGain\000"
 2505      61696E00 
 2506              	.LASF24:
 2507 0037 636F756E 		.ascii	"counts\000"
 2507      747300
 2508              	.LASF29:
 2509 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2509      5341525F 
 2509      5365715F 
 2509      315F5374 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 61


 2509      61727443 
 2510              	.LASF44:
 2511 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2511      5341525F 
 2511      5365715F 
 2511      315F5365 
 2511      74536174 
 2512              	.LASF62:
 2513 0072 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2513      4320342E 
 2513      382E3420 
 2513      32303134 
 2513      30353236 
 2514 00a5 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2514      20726576 
 2514      6973696F 
 2514      6E203231 
 2514      31333538 
 2515 00d8 67202D66 		.ascii	"g -ffunction-sections\000"
 2515      66756E63 
 2515      74696F6E 
 2515      2D736563 
 2515      74696F6E 
 2516              	.LASF7:
 2517 00ee 6C6F6E67 		.ascii	"long long unsigned int\000"
 2517      206C6F6E 
 2517      6720756E 
 2517      7369676E 
 2517      65642069 
 2518              	.LASF26:
 2519 0105 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2519      5341525F 
 2519      5365715F 
 2519      315F456E 
 2519      61626C65 
 2520              	.LASF33:
 2521 011a 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2521      5341525F 
 2521      5365715F 
 2521      315F4765 
 2521      74526573 
 2522              	.LASF6:
 2523 0134 6C6F6E67 		.ascii	"long long int\000"
 2523      206C6F6E 
 2523      6720696E 
 2523      7400
 2524              	.LASF0:
 2525 0142 7369676E 		.ascii	"signed char\000"
 2525      65642063 
 2525      68617200 
 2526              	.LASF41:
 2527 014e 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2527      5341525F 
 2527      5365715F 
 2527      315F5365 
 2527      74486967 
 2528              	.LASF13:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 62


 2529 0169 696E7433 		.ascii	"int32\000"
 2529      3200
 2530              	.LASF52:
 2531 016f 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2531      5341525F 
 2531      5365715F 
 2531      315F436F 
 2531      756E7473 
 2532              	.LASF27:
 2533 018d 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2533      5341525F 
 2533      5365715F 
 2533      315F5374 
 2533      61727400 
 2534              	.LASF4:
 2535 01a1 6C6F6E67 		.ascii	"long int\000"
 2535      20696E74 
 2535      00
 2536              	.LASF9:
 2537 01aa 75696E74 		.ascii	"uint8\000"
 2537      3800
 2538              	.LASF61:
 2539 01b0 43794465 		.ascii	"CyDelayUs\000"
 2539      6C617955 
 2539      7300
 2540              	.LASF16:
 2541 01ba 646F7562 		.ascii	"double\000"
 2541      6C6500
 2542              	.LASF11:
 2543 01c1 75696E74 		.ascii	"uint32\000"
 2543      333200
 2544              	.LASF38:
 2545 01c8 6D61736B 		.ascii	"mask\000"
 2545      00
 2546              	.LASF49:
 2547 01cd 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2547      5341525F 
 2547      5365715F 
 2547      315F436F 
 2547      756E7473 
 2548              	.LASF34:
 2549 01eb 7265744D 		.ascii	"retMode\000"
 2549      6F646500 
 2550              	.LASF57:
 2551 01f3 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2551      5341525F 
 2551      5365715F 
 2551      315F696E 
 2551      69745661 
 2552              	.LASF8:
 2553 0209 756E7369 		.ascii	"unsigned int\000"
 2553      676E6564 
 2553      20696E74 
 2553      00
 2554              	.LASF55:
 2555 0216 75566F6C 		.ascii	"uVolts\000"
 2555      747300
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 63


 2556              	.LASF5:
 2557 021d 6C6F6E67 		.ascii	"long unsigned int\000"
 2557      20756E73 
 2557      69676E65 
 2557      6420696E 
 2557      7400
 2558              	.LASF54:
 2559 022f 766F6C74 		.ascii	"volts\000"
 2559      7300
 2560              	.LASF23:
 2561 0235 746D7052 		.ascii	"tmpRegVal\000"
 2561      65675661 
 2561      6C00
 2562              	.LASF3:
 2563 023f 73686F72 		.ascii	"short unsigned int\000"
 2563      7420756E 
 2563      7369676E 
 2563      65642069 
 2563      6E7400
 2564              	.LASF65:
 2565 0252 4379496E 		.ascii	"CyIntSetVector\000"
 2565      74536574 
 2565      56656374 
 2565      6F7200
 2566              	.LASF56:
 2567 0261 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2567      5341525F 
 2567      5365715F 
 2567      315F6368 
 2567      616E6E65 
 2568              	.LASF51:
 2569 027e 6D566F6C 		.ascii	"mVolts\000"
 2569      747300
 2570              	.LASF19:
 2571 0285 72656733 		.ascii	"reg32\000"
 2571      3200
 2572              	.LASF63:
 2573 028b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2573      6E657261 
 2573      7465645F 
 2573      536F7572 
 2573      63655C50 
 2574              	.LASF14:
 2575 02b4 666C6F61 		.ascii	"float32\000"
 2575      74333200 
 2576              	.LASF21:
 2577 02bc 73697A65 		.ascii	"sizetype\000"
 2577      74797065 
 2577      00
 2578              	.LASF40:
 2579 02c5 6C6F774C 		.ascii	"lowLimit\000"
 2579      696D6974 
 2579      00
 2580              	.LASF32:
 2581 02ce 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2581      5341525F 
 2581      5365715F 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 64


 2581      315F4973 
 2581      456E6443 
 2582              	.LASF30:
 2583 02ec 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2583      5341525F 
 2583      5365715F 
 2583      315F5374 
 2583      6F70436F 
 2584              	.LASF64:
 2585 0306 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 2585      73657273 
 2585      5C6D6974 
 2585      6368656C 
 2585      6C5C446F 
 2586 0333 2D546872 		.ascii	"-Throttle\\Potentiometer-Test-BLE.cydsn\000"
 2586      6F74746C 
 2586      655C506F 
 2586      74656E74 
 2586      696F6D65 
 2587              	.LASF17:
 2588 035a 696E7436 		.ascii	"int64\000"
 2588      3400
 2589              	.LASF60:
 2590 0360 4379496E 		.ascii	"CyIntSetPriority\000"
 2590      74536574 
 2590      5072696F 
 2590      72697479 
 2590      00
 2591              	.LASF15:
 2592 0371 666C6F61 		.ascii	"float\000"
 2592      7400
 2593              	.LASF47:
 2594 0377 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2594      5341525F 
 2594      5365715F 
 2594      315F5365 
 2594      74476169 
 2595              	.LASF28:
 2596 038d 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2596      5341525F 
 2596      5365715F 
 2596      315F5374 
 2596      6F7000
 2597              	.LASF42:
 2598 03a0 68696768 		.ascii	"highLimit\000"
 2598      4C696D69 
 2598      7400
 2599              	.LASF66:
 2600 03aa 43794861 		.ascii	"CyHalt\000"
 2600      6C7400
 2601              	.LASF1:
 2602 03b1 756E7369 		.ascii	"unsigned char\000"
 2602      676E6564 
 2602      20636861 
 2602      7200
 2603              	.LASF2:
 2604 03bf 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 65


 2604      7420696E 
 2604      7400
 2605              	.LASF53:
 2606 03c9 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2606      5341525F 
 2606      5365715F 
 2606      315F436F 
 2606      756E7473 
 2607              	.LASF37:
 2608 03e6 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2608      5341525F 
 2608      5365715F 
 2608      315F5365 
 2608      74436861 
 2609              	.LASF22:
 2610 0400 63684E75 		.ascii	"chNum\000"
 2610      6D00
 2611              	.LASF35:
 2612 0406 6368616E 		.ascii	"chan\000"
 2612      00
 2613              	.LASF18:
 2614 040b 63686172 		.ascii	"char\000"
 2614      00
 2615              	.LASF20:
 2616 0410 63796973 		.ascii	"cyisraddress\000"
 2616      72616464 
 2616      72657373 
 2616      00
 2617              	.LASF39:
 2618 041d 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2618      5341525F 
 2618      5365715F 
 2618      315F5365 
 2618      744C6F77 
 2619              	.LASF46:
 2620 0437 6F666673 		.ascii	"offset\000"
 2620      657400
 2621              	.LASF50:
 2622 043e 61646343 		.ascii	"adcCounts\000"
 2622      6F756E74 
 2622      7300
 2623              	.LASF59:
 2624 0448 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2624      5341525F 
 2624      5365715F 
 2624      315F636F 
 2624      756E7473 
 2625              	.LASF31:
 2626 0466 73746174 		.ascii	"status\000"
 2626      757300
 2627              	.LASF45:
 2628 046d 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2628      5341525F 
 2628      5365715F 
 2628      315F5365 
 2628      744F6666 
 2629              	.LASF12:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccbVp2ub.s 			page 66


 2630 0485 696E7431 		.ascii	"int16\000"
 2630      3600
 2631              	.LASF43:
 2632 048b 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2632      5341525F 
 2632      5365715F 
 2632      315F5365 
 2632      744C696D 
 2633              	.LASF36:
 2634 04a6 72657375 		.ascii	"result\000"
 2634      6C7400
 2635              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
