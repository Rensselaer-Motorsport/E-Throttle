ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Clock_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Clock_1_StartEx,"ax",%progbits
  18              		.align	2
  19              		.global	Clock_1_StartEx
  20              		.code	16
  21              		.thumb_func
  22              		.type	Clock_1_StartEx, %function
  23              	Clock_1_StartEx:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\Clock_1.c"
   1:.\Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Clock_1.c **** * File Name: Clock_1.c
   3:.\Generated_Source\PSoC4/Clock_1.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/Clock_1.c **** *
   5:.\Generated_Source\PSoC4/Clock_1.c **** *  Description:
   6:.\Generated_Source\PSoC4/Clock_1.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:.\Generated_Source\PSoC4/Clock_1.c **** *
   8:.\Generated_Source\PSoC4/Clock_1.c **** *  Note:
   9:.\Generated_Source\PSoC4/Clock_1.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/Clock_1.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/Clock_1.c **** *
  12:.\Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/Clock_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/Clock_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/Clock_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/Clock_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/Clock_1.c **** 
  19:.\Generated_Source\PSoC4/Clock_1.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC4/Clock_1.c **** #include "Clock_1.h"
  21:.\Generated_Source\PSoC4/Clock_1.c **** 
  22:.\Generated_Source\PSoC4/Clock_1.c **** #if defined CYREG_PERI_DIV_CMD
  23:.\Generated_Source\PSoC4/Clock_1.c **** 
  24:.\Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_StartEx
  26:.\Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/Clock_1.c **** *
  28:.\Generated_Source\PSoC4/Clock_1.c **** * Summary:
  29:.\Generated_Source\PSoC4/Clock_1.c **** *  Starts the clock, aligned to the specified running clock.
  30:.\Generated_Source\PSoC4/Clock_1.c **** *
  31:.\Generated_Source\PSoC4/Clock_1.c **** * Parameters:
  32:.\Generated_Source\PSoC4/Clock_1.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 2


  33:.\Generated_Source\PSoC4/Clock_1.c **** *    clock is started.
  34:.\Generated_Source\PSoC4/Clock_1.c **** *
  35:.\Generated_Source\PSoC4/Clock_1.c **** * Returns:
  36:.\Generated_Source\PSoC4/Clock_1.c **** *  None
  37:.\Generated_Source\PSoC4/Clock_1.c **** *
  38:.\Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/Clock_1.c **** void Clock_1_StartEx(uint32 alignClkDiv)
  40:.\Generated_Source\PSoC4/Clock_1.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  28              	.LVL0:
  41:.\Generated_Source\PSoC4/Clock_1.c ****     /* Make sure any previous start command has finished. */
  42:.\Generated_Source\PSoC4/Clock_1.c ****     while((Clock_1_CMD_REG & Clock_1_CMD_ENABLE_MASK) != 0u)
  29              		.loc 1 42 0
  30 0000 044A     		ldr	r2, .L4
  31              	.L2:
  32              		.loc 1 42 0 is_stmt 0 discriminator 1
  33 0002 1368     		ldr	r3, [r2]
  34 0004 002B     		cmp	r3, #0
  35 0006 FCDB     		blt	.L2
  43:.\Generated_Source\PSoC4/Clock_1.c ****     {
  44:.\Generated_Source\PSoC4/Clock_1.c ****     }
  45:.\Generated_Source\PSoC4/Clock_1.c ****     
  46:.\Generated_Source\PSoC4/Clock_1.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:.\Generated_Source\PSoC4/Clock_1.c ****     Clock_1_CMD_REG =
  48:.\Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1__DIV_ID << Clock_1_CMD_DIV_SHIFT)|
  49:.\Generated_Source\PSoC4/Clock_1.c ****         (alignClkDiv << Clock_1_CMD_PA_DIV_SHIFT) |
  36              		.loc 1 49 0 is_stmt 1
  37 0008 0002     		lsl	r0, r0, #8
  38              	.LVL1:
  39 000a 034B     		ldr	r3, .L4+4
  40 000c 1843     		orr	r0, r3
  47:.\Generated_Source\PSoC4/Clock_1.c ****     Clock_1_CMD_REG =
  41              		.loc 1 47 0
  42 000e 014B     		ldr	r3, .L4
  43 0010 1860     		str	r0, [r3]
  50:.\Generated_Source\PSoC4/Clock_1.c ****         (uint32)Clock_1_CMD_ENABLE_MASK;
  51:.\Generated_Source\PSoC4/Clock_1.c **** }
  44              		.loc 1 51 0
  45              		@ sp needed
  46 0012 7047     		bx	lr
  47              	.L5:
  48              		.align	2
  49              	.L4:
  50 0014 00000140 		.word	1073807360
  51 0018 40000080 		.word	-2147483584
  52              		.cfi_endproc
  53              	.LFE0:
  54              		.size	Clock_1_StartEx, .-Clock_1_StartEx
  55              		.section	.text.Clock_1_Stop,"ax",%progbits
  56              		.align	2
  57              		.global	Clock_1_Stop
  58              		.code	16
  59              		.thumb_func
  60              		.type	Clock_1_Stop, %function
  61              	Clock_1_Stop:
  62              	.LFB1:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 3


  52:.\Generated_Source\PSoC4/Clock_1.c **** 
  53:.\Generated_Source\PSoC4/Clock_1.c **** #else
  54:.\Generated_Source\PSoC4/Clock_1.c **** 
  55:.\Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
  56:.\Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_Start
  57:.\Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  58:.\Generated_Source\PSoC4/Clock_1.c **** *
  59:.\Generated_Source\PSoC4/Clock_1.c **** * Summary:
  60:.\Generated_Source\PSoC4/Clock_1.c **** *  Starts the clock.
  61:.\Generated_Source\PSoC4/Clock_1.c **** *
  62:.\Generated_Source\PSoC4/Clock_1.c **** * Parameters:
  63:.\Generated_Source\PSoC4/Clock_1.c **** *  None
  64:.\Generated_Source\PSoC4/Clock_1.c **** *
  65:.\Generated_Source\PSoC4/Clock_1.c **** * Returns:
  66:.\Generated_Source\PSoC4/Clock_1.c **** *  None
  67:.\Generated_Source\PSoC4/Clock_1.c **** *
  68:.\Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  69:.\Generated_Source\PSoC4/Clock_1.c **** 
  70:.\Generated_Source\PSoC4/Clock_1.c **** void Clock_1_Start(void)
  71:.\Generated_Source\PSoC4/Clock_1.c **** {
  72:.\Generated_Source\PSoC4/Clock_1.c ****     /* Set the bit to enable the clock. */
  73:.\Generated_Source\PSoC4/Clock_1.c ****     Clock_1_ENABLE_REG |= Clock_1__ENABLE_MASK;
  74:.\Generated_Source\PSoC4/Clock_1.c **** }
  75:.\Generated_Source\PSoC4/Clock_1.c **** 
  76:.\Generated_Source\PSoC4/Clock_1.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:.\Generated_Source\PSoC4/Clock_1.c **** 
  78:.\Generated_Source\PSoC4/Clock_1.c **** 
  79:.\Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
  80:.\Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_Stop
  81:.\Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
  82:.\Generated_Source\PSoC4/Clock_1.c **** *
  83:.\Generated_Source\PSoC4/Clock_1.c **** * Summary:
  84:.\Generated_Source\PSoC4/Clock_1.c **** *  Stops the clock and returns immediately. This API does not require the
  85:.\Generated_Source\PSoC4/Clock_1.c **** *  source clock to be running but may return before the hardware is actually
  86:.\Generated_Source\PSoC4/Clock_1.c **** *  disabled.
  87:.\Generated_Source\PSoC4/Clock_1.c **** *
  88:.\Generated_Source\PSoC4/Clock_1.c **** * Parameters:
  89:.\Generated_Source\PSoC4/Clock_1.c **** *  None
  90:.\Generated_Source\PSoC4/Clock_1.c **** *
  91:.\Generated_Source\PSoC4/Clock_1.c **** * Returns:
  92:.\Generated_Source\PSoC4/Clock_1.c **** *  None
  93:.\Generated_Source\PSoC4/Clock_1.c **** *
  94:.\Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/Clock_1.c **** void Clock_1_Stop(void)
  96:.\Generated_Source\PSoC4/Clock_1.c **** {
  63              		.loc 1 96 0
  64              		.cfi_startproc
  97:.\Generated_Source\PSoC4/Clock_1.c **** #if defined CYREG_PERI_DIV_CMD
  98:.\Generated_Source\PSoC4/Clock_1.c **** 
  99:.\Generated_Source\PSoC4/Clock_1.c ****     /* Make sure any previous start command has finished. */
 100:.\Generated_Source\PSoC4/Clock_1.c ****     while((Clock_1_CMD_REG & Clock_1_CMD_ENABLE_MASK) != 0u)
  65              		.loc 1 100 0
  66 0000 034A     		ldr	r2, .L9
  67              	.L7:
  68              		.loc 1 100 0 is_stmt 0 discriminator 1
  69 0002 1368     		ldr	r3, [r2]
  70 0004 002B     		cmp	r3, #0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 4


  71 0006 FCDB     		blt	.L7
 101:.\Generated_Source\PSoC4/Clock_1.c ****     {
 102:.\Generated_Source\PSoC4/Clock_1.c ****     }
 103:.\Generated_Source\PSoC4/Clock_1.c ****     
 104:.\Generated_Source\PSoC4/Clock_1.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:.\Generated_Source\PSoC4/Clock_1.c ****     Clock_1_CMD_REG =
  72              		.loc 1 105 0 is_stmt 1
  73 0008 024A     		ldr	r2, .L9+4
  74 000a 014B     		ldr	r3, .L9
  75 000c 1A60     		str	r2, [r3]
 106:.\Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1__DIV_ID << Clock_1_CMD_DIV_SHIFT)|
 107:.\Generated_Source\PSoC4/Clock_1.c ****         ((uint32)Clock_1_CMD_DISABLE_MASK);
 108:.\Generated_Source\PSoC4/Clock_1.c **** 
 109:.\Generated_Source\PSoC4/Clock_1.c **** #else
 110:.\Generated_Source\PSoC4/Clock_1.c **** 
 111:.\Generated_Source\PSoC4/Clock_1.c ****     /* Clear the bit to disable the clock. */
 112:.\Generated_Source\PSoC4/Clock_1.c ****     Clock_1_ENABLE_REG &= (uint32)(~Clock_1__ENABLE_MASK);
 113:.\Generated_Source\PSoC4/Clock_1.c ****     
 114:.\Generated_Source\PSoC4/Clock_1.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:.\Generated_Source\PSoC4/Clock_1.c **** }
  76              		.loc 1 115 0
  77              		@ sp needed
  78 000e 7047     		bx	lr
  79              	.L10:
  80              		.align	2
  81              	.L9:
  82 0010 00000140 		.word	1073807360
  83 0014 40000040 		.word	1073741888
  84              		.cfi_endproc
  85              	.LFE1:
  86              		.size	Clock_1_Stop, .-Clock_1_Stop
  87              		.section	.text.Clock_1_SetFractionalDividerRegister,"ax",%progbits
  88              		.align	2
  89              		.global	Clock_1_SetFractionalDividerRegister
  90              		.code	16
  91              		.thumb_func
  92              		.type	Clock_1_SetFractionalDividerRegister, %function
  93              	Clock_1_SetFractionalDividerRegister:
  94              	.LFB2:
 116:.\Generated_Source\PSoC4/Clock_1.c **** 
 117:.\Generated_Source\PSoC4/Clock_1.c **** 
 118:.\Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
 119:.\Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_SetFractionalDividerRegister
 120:.\Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
 121:.\Generated_Source\PSoC4/Clock_1.c **** *
 122:.\Generated_Source\PSoC4/Clock_1.c **** * Summary:
 123:.\Generated_Source\PSoC4/Clock_1.c **** *  Modifies the clock divider and the fractional divider.
 124:.\Generated_Source\PSoC4/Clock_1.c **** *
 125:.\Generated_Source\PSoC4/Clock_1.c **** * Parameters:
 126:.\Generated_Source\PSoC4/Clock_1.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:.\Generated_Source\PSoC4/Clock_1.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:.\Generated_Source\PSoC4/Clock_1.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:.\Generated_Source\PSoC4/Clock_1.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:.\Generated_Source\PSoC4/Clock_1.c **** * Returns:
 131:.\Generated_Source\PSoC4/Clock_1.c **** *  None
 132:.\Generated_Source\PSoC4/Clock_1.c **** *
 133:.\Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 5


 134:.\Generated_Source\PSoC4/Clock_1.c **** void Clock_1_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:.\Generated_Source\PSoC4/Clock_1.c **** {
  95              		.loc 1 135 0
  96              		.cfi_startproc
  97              	.LVL2:
  98 0000 10B5     		push	{r4, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 4, -8
 101              		.cfi_offset 14, -4
 136:.\Generated_Source\PSoC4/Clock_1.c ****     uint32 maskVal;
 137:.\Generated_Source\PSoC4/Clock_1.c ****     uint32 regVal;
 138:.\Generated_Source\PSoC4/Clock_1.c ****     
 139:.\Generated_Source\PSoC4/Clock_1.c **** #if defined (Clock_1__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:.\Generated_Source\PSoC4/Clock_1.c ****     
 141:.\Generated_Source\PSoC4/Clock_1.c **** 	/* get all but divider bits */
 142:.\Generated_Source\PSoC4/Clock_1.c ****     maskVal = Clock_1_DIV_REG & 
 102              		.loc 1 142 0
 103 0002 064B     		ldr	r3, .L12
 104 0004 1A68     		ldr	r2, [r3]
 105 0006 0724     		mov	r4, #7
 106 0008 2240     		and	r2, r4
 107              	.LVL3:
 143:.\Generated_Source\PSoC4/Clock_1.c ****                     (uint32)(~(uint32)(Clock_1_DIV_INT_MASK | Clock_1_DIV_FRAC_MASK)); 
 144:.\Generated_Source\PSoC4/Clock_1.c **** 	/* combine mask and new divider vals into 32-bit value */
 145:.\Generated_Source\PSoC4/Clock_1.c ****     regVal = maskVal |
 146:.\Generated_Source\PSoC4/Clock_1.c ****         ((uint32)((uint32)clkDivider <<  Clock_1_DIV_INT_SHIFT) & Clock_1_DIV_INT_MASK) |
 108              		.loc 1 146 0
 109 000a 0002     		lsl	r0, r0, #8
 110              	.LVL4:
 145:.\Generated_Source\PSoC4/Clock_1.c ****     regVal = maskVal |
 111              		.loc 1 145 0
 112 000c 1043     		orr	r0, r2
 147:.\Generated_Source\PSoC4/Clock_1.c ****         ((uint32)((uint32)clkFractional << Clock_1_DIV_FRAC_SHIFT) & Clock_1_DIV_FRAC_MASK);
 113              		.loc 1 147 0
 114 000e C900     		lsl	r1, r1, #3
 115              	.LVL5:
 116 0010 FF22     		mov	r2, #255
 117              	.LVL6:
 118 0012 1140     		and	r1, r2
 145:.\Generated_Source\PSoC4/Clock_1.c ****     regVal = maskVal |
 119              		.loc 1 145 0
 120 0014 0843     		orr	r0, r1
 121              	.LVL7:
 148:.\Generated_Source\PSoC4/Clock_1.c ****     
 149:.\Generated_Source\PSoC4/Clock_1.c **** #else
 150:.\Generated_Source\PSoC4/Clock_1.c ****     /* get all but integer divider bits */
 151:.\Generated_Source\PSoC4/Clock_1.c ****     maskVal = Clock_1_DIV_REG & (uint32)(~(uint32)Clock_1__DIVIDER_MASK);
 152:.\Generated_Source\PSoC4/Clock_1.c ****     /* combine mask and new divider val into 32-bit value */
 153:.\Generated_Source\PSoC4/Clock_1.c ****     regVal = clkDivider | maskVal;
 154:.\Generated_Source\PSoC4/Clock_1.c ****     
 155:.\Generated_Source\PSoC4/Clock_1.c **** #endif /* Clock_1__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:.\Generated_Source\PSoC4/Clock_1.c **** 
 157:.\Generated_Source\PSoC4/Clock_1.c ****     Clock_1_DIV_REG = regVal;
 122              		.loc 1 157 0
 123 0016 1860     		str	r0, [r3]
 158:.\Generated_Source\PSoC4/Clock_1.c **** }
 124              		.loc 1 158 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 6


 125              		@ sp needed
 126 0018 10BD     		pop	{r4, pc}
 127              	.L13:
 128 001a C046     		.align	2
 129              	.L12:
 130 001c 00030140 		.word	1073808128
 131              		.cfi_endproc
 132              	.LFE2:
 133              		.size	Clock_1_SetFractionalDividerRegister, .-Clock_1_SetFractionalDividerRegister
 134              		.section	.text.Clock_1_GetDividerRegister,"ax",%progbits
 135              		.align	2
 136              		.global	Clock_1_GetDividerRegister
 137              		.code	16
 138              		.thumb_func
 139              		.type	Clock_1_GetDividerRegister, %function
 140              	Clock_1_GetDividerRegister:
 141              	.LFB3:
 159:.\Generated_Source\PSoC4/Clock_1.c **** 
 160:.\Generated_Source\PSoC4/Clock_1.c **** 
 161:.\Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_GetDividerRegister
 163:.\Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
 164:.\Generated_Source\PSoC4/Clock_1.c **** *
 165:.\Generated_Source\PSoC4/Clock_1.c **** * Summary:
 166:.\Generated_Source\PSoC4/Clock_1.c **** *  Gets the clock divider register value.
 167:.\Generated_Source\PSoC4/Clock_1.c **** *
 168:.\Generated_Source\PSoC4/Clock_1.c **** * Parameters:
 169:.\Generated_Source\PSoC4/Clock_1.c **** *  None
 170:.\Generated_Source\PSoC4/Clock_1.c **** *
 171:.\Generated_Source\PSoC4/Clock_1.c **** * Returns:
 172:.\Generated_Source\PSoC4/Clock_1.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:.\Generated_Source\PSoC4/Clock_1.c **** *  divide by 2, the return value will be 1.
 174:.\Generated_Source\PSoC4/Clock_1.c **** *
 175:.\Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
 176:.\Generated_Source\PSoC4/Clock_1.c **** uint16 Clock_1_GetDividerRegister(void)
 177:.\Generated_Source\PSoC4/Clock_1.c **** {
 142              		.loc 1 177 0
 143              		.cfi_startproc
 178:.\Generated_Source\PSoC4/Clock_1.c ****     return (uint16)((Clock_1_DIV_REG & Clock_1_DIV_INT_MASK)
 144              		.loc 1 178 0
 145 0000 024B     		ldr	r3, .L15
 146 0002 1868     		ldr	r0, [r3]
 179:.\Generated_Source\PSoC4/Clock_1.c ****         >> Clock_1_DIV_INT_SHIFT);
 147              		.loc 1 179 0
 148 0004 000A     		lsr	r0, r0, #8
 178:.\Generated_Source\PSoC4/Clock_1.c ****     return (uint16)((Clock_1_DIV_REG & Clock_1_DIV_INT_MASK)
 149              		.loc 1 178 0
 150 0006 80B2     		uxth	r0, r0
 180:.\Generated_Source\PSoC4/Clock_1.c **** }
 151              		.loc 1 180 0
 152              		@ sp needed
 153 0008 7047     		bx	lr
 154              	.L16:
 155 000a C046     		.align	2
 156              	.L15:
 157 000c 00030140 		.word	1073808128
 158              		.cfi_endproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 7


 159              	.LFE3:
 160              		.size	Clock_1_GetDividerRegister, .-Clock_1_GetDividerRegister
 161              		.section	.text.Clock_1_GetFractionalDividerRegister,"ax",%progbits
 162              		.align	2
 163              		.global	Clock_1_GetFractionalDividerRegister
 164              		.code	16
 165              		.thumb_func
 166              		.type	Clock_1_GetFractionalDividerRegister, %function
 167              	Clock_1_GetFractionalDividerRegister:
 168              	.LFB4:
 181:.\Generated_Source\PSoC4/Clock_1.c **** 
 182:.\Generated_Source\PSoC4/Clock_1.c **** 
 183:.\Generated_Source\PSoC4/Clock_1.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC4/Clock_1.c **** * Function Name: Clock_1_GetFractionalDividerRegister
 185:.\Generated_Source\PSoC4/Clock_1.c **** ********************************************************************************
 186:.\Generated_Source\PSoC4/Clock_1.c **** *
 187:.\Generated_Source\PSoC4/Clock_1.c **** * Summary:
 188:.\Generated_Source\PSoC4/Clock_1.c **** *  Gets the clock fractional divider register value.
 189:.\Generated_Source\PSoC4/Clock_1.c **** *
 190:.\Generated_Source\PSoC4/Clock_1.c **** * Parameters:
 191:.\Generated_Source\PSoC4/Clock_1.c **** *  None
 192:.\Generated_Source\PSoC4/Clock_1.c **** *
 193:.\Generated_Source\PSoC4/Clock_1.c **** * Returns:
 194:.\Generated_Source\PSoC4/Clock_1.c **** *  Fractional Divide value of the clock
 195:.\Generated_Source\PSoC4/Clock_1.c **** *  0 if the fractional divider is not in use.
 196:.\Generated_Source\PSoC4/Clock_1.c **** *
 197:.\Generated_Source\PSoC4/Clock_1.c **** *******************************************************************************/
 198:.\Generated_Source\PSoC4/Clock_1.c **** uint8 Clock_1_GetFractionalDividerRegister(void)
 199:.\Generated_Source\PSoC4/Clock_1.c **** {
 169              		.loc 1 199 0
 170              		.cfi_startproc
 200:.\Generated_Source\PSoC4/Clock_1.c **** #if defined (Clock_1__FRAC_MASK)
 201:.\Generated_Source\PSoC4/Clock_1.c ****     /* return fractional divider bits */
 202:.\Generated_Source\PSoC4/Clock_1.c ****     return (uint8)((Clock_1_DIV_REG & Clock_1_DIV_FRAC_MASK)
 203:.\Generated_Source\PSoC4/Clock_1.c ****         >> Clock_1_DIV_FRAC_SHIFT);
 204:.\Generated_Source\PSoC4/Clock_1.c **** #else
 205:.\Generated_Source\PSoC4/Clock_1.c ****     return 0u;
 206:.\Generated_Source\PSoC4/Clock_1.c **** #endif /* Clock_1__FRAC_MASK */
 207:.\Generated_Source\PSoC4/Clock_1.c **** }
 171              		.loc 1 207 0
 172 0000 0020     		mov	r0, #0
 173              		@ sp needed
 174 0002 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE4:
 177              		.size	Clock_1_GetFractionalDividerRegister, .-Clock_1_GetFractionalDividerRegister
 178              		.text
 179              	.Letext0:
 180              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 181              		.section	.debug_info,"",%progbits
 182              	.Ldebug_info0:
 183 0000 5F010000 		.4byte	0x15f
 184 0004 0400     		.2byte	0x4
 185 0006 00000000 		.4byte	.Ldebug_abbrev0
 186 000a 04       		.byte	0x4
 187 000b 01       		.uleb128 0x1
 188 000c 40010000 		.4byte	.LASF25
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 8


 189 0010 01       		.byte	0x1
 190 0011 B8000000 		.4byte	.LASF26
 191 0015 24000000 		.4byte	.LASF27
 192 0019 00000000 		.4byte	.Ldebug_ranges0+0
 193 001d 00000000 		.4byte	0
 194 0021 00000000 		.4byte	.Ldebug_line0
 195 0025 02       		.uleb128 0x2
 196 0026 01       		.byte	0x1
 197 0027 06       		.byte	0x6
 198 0028 32020000 		.4byte	.LASF0
 199 002c 02       		.uleb128 0x2
 200 002d 01       		.byte	0x1
 201 002e 08       		.byte	0x8
 202 002f 85000000 		.4byte	.LASF1
 203 0033 02       		.uleb128 0x2
 204 0034 02       		.byte	0x2
 205 0035 05       		.byte	0x5
 206 0036 F4010000 		.4byte	.LASF2
 207 003a 02       		.uleb128 0x2
 208 003b 02       		.byte	0x2
 209 003c 07       		.byte	0x7
 210 003d A5000000 		.4byte	.LASF3
 211 0041 02       		.uleb128 0x2
 212 0042 04       		.byte	0x4
 213 0043 05       		.byte	0x5
 214 0044 29020000 		.4byte	.LASF4
 215 0048 02       		.uleb128 0x2
 216 0049 04       		.byte	0x4
 217 004a 07       		.byte	0x7
 218 004b 93000000 		.4byte	.LASF5
 219 004f 02       		.uleb128 0x2
 220 0050 08       		.byte	0x8
 221 0051 05       		.byte	0x5
 222 0052 E1010000 		.4byte	.LASF6
 223 0056 02       		.uleb128 0x2
 224 0057 08       		.byte	0x8
 225 0058 07       		.byte	0x7
 226 0059 29010000 		.4byte	.LASF7
 227 005d 03       		.uleb128 0x3
 228 005e 04       		.byte	0x4
 229 005f 05       		.byte	0x5
 230 0060 696E7400 		.ascii	"int\000"
 231 0064 02       		.uleb128 0x2
 232 0065 04       		.byte	0x4
 233 0066 07       		.byte	0x7
 234 0067 1C010000 		.4byte	.LASF8
 235 006b 04       		.uleb128 0x4
 236 006c FE010000 		.4byte	.LASF9
 237 0070 02       		.byte	0x2
 238 0071 C1       		.byte	0xc1
 239 0072 2C000000 		.4byte	0x2c
 240 0076 04       		.uleb128 0x4
 241 0077 0E010000 		.4byte	.LASF10
 242 007b 02       		.byte	0x2
 243 007c C2       		.byte	0xc2
 244 007d 3A000000 		.4byte	0x3a
 245 0081 04       		.uleb128 0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 9


 246 0082 15010000 		.4byte	.LASF11
 247 0086 02       		.byte	0x2
 248 0087 C3       		.byte	0xc3
 249 0088 48000000 		.4byte	0x48
 250 008c 02       		.uleb128 0x2
 251 008d 04       		.byte	0x4
 252 008e 04       		.byte	0x4
 253 008f 0E000000 		.4byte	.LASF12
 254 0093 02       		.uleb128 0x2
 255 0094 08       		.byte	0x8
 256 0095 04       		.byte	0x4
 257 0096 E6000000 		.4byte	.LASF13
 258 009a 02       		.uleb128 0x2
 259 009b 01       		.byte	0x1
 260 009c 08       		.byte	0x8
 261 009d EF010000 		.4byte	.LASF14
 262 00a1 05       		.uleb128 0x5
 263 00a2 00000000 		.4byte	.LASF15
 264 00a6 02       		.byte	0x2
 265 00a7 6D01     		.2byte	0x16d
 266 00a9 AD000000 		.4byte	0xad
 267 00ad 06       		.uleb128 0x6
 268 00ae 81000000 		.4byte	0x81
 269 00b2 07       		.uleb128 0x7
 270 00b3 14000000 		.4byte	.LASF16
 271 00b7 01       		.byte	0x1
 272 00b8 27       		.byte	0x27
 273 00b9 00000000 		.4byte	.LFB0
 274 00bd 1C000000 		.4byte	.LFE0-.LFB0
 275 00c1 01       		.uleb128 0x1
 276 00c2 9C       		.byte	0x9c
 277 00c3 D7000000 		.4byte	0xd7
 278 00c7 08       		.uleb128 0x8
 279 00c8 F4000000 		.4byte	.LASF18
 280 00cc 01       		.byte	0x1
 281 00cd 27       		.byte	0x27
 282 00ce 81000000 		.4byte	0x81
 283 00d2 00000000 		.4byte	.LLST0
 284 00d6 00       		.byte	0
 285 00d7 09       		.uleb128 0x9
 286 00d8 78000000 		.4byte	.LASF28
 287 00dc 01       		.byte	0x1
 288 00dd 5F       		.byte	0x5f
 289 00de 00000000 		.4byte	.LFB1
 290 00e2 18000000 		.4byte	.LFE1-.LFB1
 291 00e6 01       		.uleb128 0x1
 292 00e7 9C       		.byte	0x9c
 293 00e8 07       		.uleb128 0x7
 294 00e9 04020000 		.4byte	.LASF17
 295 00ed 01       		.byte	0x1
 296 00ee 86       		.byte	0x86
 297 00ef 00000000 		.4byte	.LFB2
 298 00f3 20000000 		.4byte	.LFE2-.LFB2
 299 00f7 01       		.uleb128 0x1
 300 00f8 9C       		.byte	0x9c
 301 00f9 38010000 		.4byte	0x138
 302 00fd 08       		.uleb128 0x8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 10


 303 00fe DB000000 		.4byte	.LASF19
 304 0102 01       		.byte	0x1
 305 0103 86       		.byte	0x86
 306 0104 76000000 		.4byte	0x76
 307 0108 21000000 		.4byte	.LLST1
 308 010c 08       		.uleb128 0x8
 309 010d 00010000 		.4byte	.LASF20
 310 0111 01       		.byte	0x1
 311 0112 86       		.byte	0x86
 312 0113 6B000000 		.4byte	0x6b
 313 0117 42000000 		.4byte	.LLST2
 314 011b 0A       		.uleb128 0xa
 315 011c 06000000 		.4byte	.LASF21
 316 0120 01       		.byte	0x1
 317 0121 88       		.byte	0x88
 318 0122 81000000 		.4byte	0x81
 319 0126 63000000 		.4byte	.LLST3
 320 012a 0B       		.uleb128 0xb
 321 012b ED000000 		.4byte	.LASF22
 322 012f 01       		.byte	0x1
 323 0130 89       		.byte	0x89
 324 0131 81000000 		.4byte	0x81
 325 0135 01       		.uleb128 0x1
 326 0136 50       		.byte	0x50
 327 0137 00       		.byte	0
 328 0138 0C       		.uleb128 0xc
 329 0139 3E020000 		.4byte	.LASF23
 330 013d 01       		.byte	0x1
 331 013e B0       		.byte	0xb0
 332 013f 76000000 		.4byte	0x76
 333 0143 00000000 		.4byte	.LFB3
 334 0147 10000000 		.4byte	.LFE3-.LFB3
 335 014b 01       		.uleb128 0x1
 336 014c 9C       		.byte	0x9c
 337 014d 0C       		.uleb128 0xc
 338 014e BC010000 		.4byte	.LASF24
 339 0152 01       		.byte	0x1
 340 0153 C6       		.byte	0xc6
 341 0154 6B000000 		.4byte	0x6b
 342 0158 00000000 		.4byte	.LFB4
 343 015c 04000000 		.4byte	.LFE4-.LFB4
 344 0160 01       		.uleb128 0x1
 345 0161 9C       		.byte	0x9c
 346 0162 00       		.byte	0
 347              		.section	.debug_abbrev,"",%progbits
 348              	.Ldebug_abbrev0:
 349 0000 01       		.uleb128 0x1
 350 0001 11       		.uleb128 0x11
 351 0002 01       		.byte	0x1
 352 0003 25       		.uleb128 0x25
 353 0004 0E       		.uleb128 0xe
 354 0005 13       		.uleb128 0x13
 355 0006 0B       		.uleb128 0xb
 356 0007 03       		.uleb128 0x3
 357 0008 0E       		.uleb128 0xe
 358 0009 1B       		.uleb128 0x1b
 359 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 11


 360 000b 55       		.uleb128 0x55
 361 000c 17       		.uleb128 0x17
 362 000d 11       		.uleb128 0x11
 363 000e 01       		.uleb128 0x1
 364 000f 10       		.uleb128 0x10
 365 0010 17       		.uleb128 0x17
 366 0011 00       		.byte	0
 367 0012 00       		.byte	0
 368 0013 02       		.uleb128 0x2
 369 0014 24       		.uleb128 0x24
 370 0015 00       		.byte	0
 371 0016 0B       		.uleb128 0xb
 372 0017 0B       		.uleb128 0xb
 373 0018 3E       		.uleb128 0x3e
 374 0019 0B       		.uleb128 0xb
 375 001a 03       		.uleb128 0x3
 376 001b 0E       		.uleb128 0xe
 377 001c 00       		.byte	0
 378 001d 00       		.byte	0
 379 001e 03       		.uleb128 0x3
 380 001f 24       		.uleb128 0x24
 381 0020 00       		.byte	0
 382 0021 0B       		.uleb128 0xb
 383 0022 0B       		.uleb128 0xb
 384 0023 3E       		.uleb128 0x3e
 385 0024 0B       		.uleb128 0xb
 386 0025 03       		.uleb128 0x3
 387 0026 08       		.uleb128 0x8
 388 0027 00       		.byte	0
 389 0028 00       		.byte	0
 390 0029 04       		.uleb128 0x4
 391 002a 16       		.uleb128 0x16
 392 002b 00       		.byte	0
 393 002c 03       		.uleb128 0x3
 394 002d 0E       		.uleb128 0xe
 395 002e 3A       		.uleb128 0x3a
 396 002f 0B       		.uleb128 0xb
 397 0030 3B       		.uleb128 0x3b
 398 0031 0B       		.uleb128 0xb
 399 0032 49       		.uleb128 0x49
 400 0033 13       		.uleb128 0x13
 401 0034 00       		.byte	0
 402 0035 00       		.byte	0
 403 0036 05       		.uleb128 0x5
 404 0037 16       		.uleb128 0x16
 405 0038 00       		.byte	0
 406 0039 03       		.uleb128 0x3
 407 003a 0E       		.uleb128 0xe
 408 003b 3A       		.uleb128 0x3a
 409 003c 0B       		.uleb128 0xb
 410 003d 3B       		.uleb128 0x3b
 411 003e 05       		.uleb128 0x5
 412 003f 49       		.uleb128 0x49
 413 0040 13       		.uleb128 0x13
 414 0041 00       		.byte	0
 415 0042 00       		.byte	0
 416 0043 06       		.uleb128 0x6
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 12


 417 0044 35       		.uleb128 0x35
 418 0045 00       		.byte	0
 419 0046 49       		.uleb128 0x49
 420 0047 13       		.uleb128 0x13
 421 0048 00       		.byte	0
 422 0049 00       		.byte	0
 423 004a 07       		.uleb128 0x7
 424 004b 2E       		.uleb128 0x2e
 425 004c 01       		.byte	0x1
 426 004d 3F       		.uleb128 0x3f
 427 004e 19       		.uleb128 0x19
 428 004f 03       		.uleb128 0x3
 429 0050 0E       		.uleb128 0xe
 430 0051 3A       		.uleb128 0x3a
 431 0052 0B       		.uleb128 0xb
 432 0053 3B       		.uleb128 0x3b
 433 0054 0B       		.uleb128 0xb
 434 0055 27       		.uleb128 0x27
 435 0056 19       		.uleb128 0x19
 436 0057 11       		.uleb128 0x11
 437 0058 01       		.uleb128 0x1
 438 0059 12       		.uleb128 0x12
 439 005a 06       		.uleb128 0x6
 440 005b 40       		.uleb128 0x40
 441 005c 18       		.uleb128 0x18
 442 005d 9742     		.uleb128 0x2117
 443 005f 19       		.uleb128 0x19
 444 0060 01       		.uleb128 0x1
 445 0061 13       		.uleb128 0x13
 446 0062 00       		.byte	0
 447 0063 00       		.byte	0
 448 0064 08       		.uleb128 0x8
 449 0065 05       		.uleb128 0x5
 450 0066 00       		.byte	0
 451 0067 03       		.uleb128 0x3
 452 0068 0E       		.uleb128 0xe
 453 0069 3A       		.uleb128 0x3a
 454 006a 0B       		.uleb128 0xb
 455 006b 3B       		.uleb128 0x3b
 456 006c 0B       		.uleb128 0xb
 457 006d 49       		.uleb128 0x49
 458 006e 13       		.uleb128 0x13
 459 006f 02       		.uleb128 0x2
 460 0070 17       		.uleb128 0x17
 461 0071 00       		.byte	0
 462 0072 00       		.byte	0
 463 0073 09       		.uleb128 0x9
 464 0074 2E       		.uleb128 0x2e
 465 0075 00       		.byte	0
 466 0076 3F       		.uleb128 0x3f
 467 0077 19       		.uleb128 0x19
 468 0078 03       		.uleb128 0x3
 469 0079 0E       		.uleb128 0xe
 470 007a 3A       		.uleb128 0x3a
 471 007b 0B       		.uleb128 0xb
 472 007c 3B       		.uleb128 0x3b
 473 007d 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 13


 474 007e 27       		.uleb128 0x27
 475 007f 19       		.uleb128 0x19
 476 0080 11       		.uleb128 0x11
 477 0081 01       		.uleb128 0x1
 478 0082 12       		.uleb128 0x12
 479 0083 06       		.uleb128 0x6
 480 0084 40       		.uleb128 0x40
 481 0085 18       		.uleb128 0x18
 482 0086 9742     		.uleb128 0x2117
 483 0088 19       		.uleb128 0x19
 484 0089 00       		.byte	0
 485 008a 00       		.byte	0
 486 008b 0A       		.uleb128 0xa
 487 008c 34       		.uleb128 0x34
 488 008d 00       		.byte	0
 489 008e 03       		.uleb128 0x3
 490 008f 0E       		.uleb128 0xe
 491 0090 3A       		.uleb128 0x3a
 492 0091 0B       		.uleb128 0xb
 493 0092 3B       		.uleb128 0x3b
 494 0093 0B       		.uleb128 0xb
 495 0094 49       		.uleb128 0x49
 496 0095 13       		.uleb128 0x13
 497 0096 02       		.uleb128 0x2
 498 0097 17       		.uleb128 0x17
 499 0098 00       		.byte	0
 500 0099 00       		.byte	0
 501 009a 0B       		.uleb128 0xb
 502 009b 34       		.uleb128 0x34
 503 009c 00       		.byte	0
 504 009d 03       		.uleb128 0x3
 505 009e 0E       		.uleb128 0xe
 506 009f 3A       		.uleb128 0x3a
 507 00a0 0B       		.uleb128 0xb
 508 00a1 3B       		.uleb128 0x3b
 509 00a2 0B       		.uleb128 0xb
 510 00a3 49       		.uleb128 0x49
 511 00a4 13       		.uleb128 0x13
 512 00a5 02       		.uleb128 0x2
 513 00a6 18       		.uleb128 0x18
 514 00a7 00       		.byte	0
 515 00a8 00       		.byte	0
 516 00a9 0C       		.uleb128 0xc
 517 00aa 2E       		.uleb128 0x2e
 518 00ab 00       		.byte	0
 519 00ac 3F       		.uleb128 0x3f
 520 00ad 19       		.uleb128 0x19
 521 00ae 03       		.uleb128 0x3
 522 00af 0E       		.uleb128 0xe
 523 00b0 3A       		.uleb128 0x3a
 524 00b1 0B       		.uleb128 0xb
 525 00b2 3B       		.uleb128 0x3b
 526 00b3 0B       		.uleb128 0xb
 527 00b4 27       		.uleb128 0x27
 528 00b5 19       		.uleb128 0x19
 529 00b6 49       		.uleb128 0x49
 530 00b7 13       		.uleb128 0x13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 14


 531 00b8 11       		.uleb128 0x11
 532 00b9 01       		.uleb128 0x1
 533 00ba 12       		.uleb128 0x12
 534 00bb 06       		.uleb128 0x6
 535 00bc 40       		.uleb128 0x40
 536 00bd 18       		.uleb128 0x18
 537 00be 9742     		.uleb128 0x2117
 538 00c0 19       		.uleb128 0x19
 539 00c1 00       		.byte	0
 540 00c2 00       		.byte	0
 541 00c3 00       		.byte	0
 542              		.section	.debug_loc,"",%progbits
 543              	.Ldebug_loc0:
 544              	.LLST0:
 545 0000 00000000 		.4byte	.LVL0
 546 0004 0A000000 		.4byte	.LVL1
 547 0008 0100     		.2byte	0x1
 548 000a 50       		.byte	0x50
 549 000b 0A000000 		.4byte	.LVL1
 550 000f 1C000000 		.4byte	.LFE0
 551 0013 0400     		.2byte	0x4
 552 0015 F3       		.byte	0xf3
 553 0016 01       		.uleb128 0x1
 554 0017 50       		.byte	0x50
 555 0018 9F       		.byte	0x9f
 556 0019 00000000 		.4byte	0
 557 001d 00000000 		.4byte	0
 558              	.LLST1:
 559 0021 00000000 		.4byte	.LVL2
 560 0025 0C000000 		.4byte	.LVL4
 561 0029 0100     		.2byte	0x1
 562 002b 50       		.byte	0x50
 563 002c 0C000000 		.4byte	.LVL4
 564 0030 20000000 		.4byte	.LFE2
 565 0034 0400     		.2byte	0x4
 566 0036 F3       		.byte	0xf3
 567 0037 01       		.uleb128 0x1
 568 0038 50       		.byte	0x50
 569 0039 9F       		.byte	0x9f
 570 003a 00000000 		.4byte	0
 571 003e 00000000 		.4byte	0
 572              	.LLST2:
 573 0042 00000000 		.4byte	.LVL2
 574 0046 10000000 		.4byte	.LVL5
 575 004a 0100     		.2byte	0x1
 576 004c 51       		.byte	0x51
 577 004d 10000000 		.4byte	.LVL5
 578 0051 20000000 		.4byte	.LFE2
 579 0055 0400     		.2byte	0x4
 580 0057 F3       		.byte	0xf3
 581 0058 01       		.uleb128 0x1
 582 0059 51       		.byte	0x51
 583 005a 9F       		.byte	0x9f
 584 005b 00000000 		.4byte	0
 585 005f 00000000 		.4byte	0
 586              	.LLST3:
 587 0063 0A000000 		.4byte	.LVL3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 15


 588 0067 12000000 		.4byte	.LVL6
 589 006b 0100     		.2byte	0x1
 590 006d 52       		.byte	0x52
 591 006e 00000000 		.4byte	0
 592 0072 00000000 		.4byte	0
 593              		.section	.debug_aranges,"",%progbits
 594 0000 3C000000 		.4byte	0x3c
 595 0004 0200     		.2byte	0x2
 596 0006 00000000 		.4byte	.Ldebug_info0
 597 000a 04       		.byte	0x4
 598 000b 00       		.byte	0
 599 000c 0000     		.2byte	0
 600 000e 0000     		.2byte	0
 601 0010 00000000 		.4byte	.LFB0
 602 0014 1C000000 		.4byte	.LFE0-.LFB0
 603 0018 00000000 		.4byte	.LFB1
 604 001c 18000000 		.4byte	.LFE1-.LFB1
 605 0020 00000000 		.4byte	.LFB2
 606 0024 20000000 		.4byte	.LFE2-.LFB2
 607 0028 00000000 		.4byte	.LFB3
 608 002c 10000000 		.4byte	.LFE3-.LFB3
 609 0030 00000000 		.4byte	.LFB4
 610 0034 04000000 		.4byte	.LFE4-.LFB4
 611 0038 00000000 		.4byte	0
 612 003c 00000000 		.4byte	0
 613              		.section	.debug_ranges,"",%progbits
 614              	.Ldebug_ranges0:
 615 0000 00000000 		.4byte	.LFB0
 616 0004 1C000000 		.4byte	.LFE0
 617 0008 00000000 		.4byte	.LFB1
 618 000c 18000000 		.4byte	.LFE1
 619 0010 00000000 		.4byte	.LFB2
 620 0014 20000000 		.4byte	.LFE2
 621 0018 00000000 		.4byte	.LFB3
 622 001c 10000000 		.4byte	.LFE3
 623 0020 00000000 		.4byte	.LFB4
 624 0024 04000000 		.4byte	.LFE4
 625 0028 00000000 		.4byte	0
 626 002c 00000000 		.4byte	0
 627              		.section	.debug_line,"",%progbits
 628              	.Ldebug_line0:
 629 0000 D7000000 		.section	.debug_str,"MS",%progbits,1
 629      02005D00 
 629      00000201 
 629      FB0E0D00 
 629      01010101 
 630              	.LASF15:
 631 0000 72656733 		.ascii	"reg32\000"
 631      3200
 632              	.LASF21:
 633 0006 6D61736B 		.ascii	"maskVal\000"
 633      56616C00 
 634              	.LASF12:
 635 000e 666C6F61 		.ascii	"float\000"
 635      7400
 636              	.LASF16:
 637 0014 436C6F63 		.ascii	"Clock_1_StartEx\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 16


 637      6B5F315F 
 637      53746172 
 637      74457800 
 638              	.LASF27:
 639 0024 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 639      73657273 
 639      5C6D6974 
 639      6368656C 
 639      6C5C446F 
 640 0051 2D546872 		.ascii	"-Throttle\\Potentiometer-Test-BLE.cydsn\000"
 640      6F74746C 
 640      655C506F 
 640      74656E74 
 640      696F6D65 
 641              	.LASF28:
 642 0078 436C6F63 		.ascii	"Clock_1_Stop\000"
 642      6B5F315F 
 642      53746F70 
 642      00
 643              	.LASF1:
 644 0085 756E7369 		.ascii	"unsigned char\000"
 644      676E6564 
 644      20636861 
 644      7200
 645              	.LASF5:
 646 0093 6C6F6E67 		.ascii	"long unsigned int\000"
 646      20756E73 
 646      69676E65 
 646      6420696E 
 646      7400
 647              	.LASF3:
 648 00a5 73686F72 		.ascii	"short unsigned int\000"
 648      7420756E 
 648      7369676E 
 648      65642069 
 648      6E7400
 649              	.LASF26:
 650 00b8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Clock_1.c\000"
 650      6E657261 
 650      7465645F 
 650      536F7572 
 650      63655C50 
 651              	.LASF19:
 652 00db 636C6B44 		.ascii	"clkDivider\000"
 652      69766964 
 652      657200
 653              	.LASF13:
 654 00e6 646F7562 		.ascii	"double\000"
 654      6C6500
 655              	.LASF22:
 656 00ed 72656756 		.ascii	"regVal\000"
 656      616C00
 657              	.LASF18:
 658 00f4 616C6967 		.ascii	"alignClkDiv\000"
 658      6E436C6B 
 658      44697600 
 659              	.LASF20:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 17


 660 0100 636C6B46 		.ascii	"clkFractional\000"
 660      72616374 
 660      696F6E61 
 660      6C00
 661              	.LASF10:
 662 010e 75696E74 		.ascii	"uint16\000"
 662      313600
 663              	.LASF11:
 664 0115 75696E74 		.ascii	"uint32\000"
 664      333200
 665              	.LASF8:
 666 011c 756E7369 		.ascii	"unsigned int\000"
 666      676E6564 
 666      20696E74 
 666      00
 667              	.LASF7:
 668 0129 6C6F6E67 		.ascii	"long long unsigned int\000"
 668      206C6F6E 
 668      6720756E 
 668      7369676E 
 668      65642069 
 669              	.LASF25:
 670 0140 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 670      4320342E 
 670      382E3420 
 670      32303134 
 670      30353236 
 671 0173 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 671      20726576 
 671      6973696F 
 671      6E203231 
 671      31333538 
 672 01a6 67202D66 		.ascii	"g -ffunction-sections\000"
 672      66756E63 
 672      74696F6E 
 672      2D736563 
 672      74696F6E 
 673              	.LASF24:
 674 01bc 436C6F63 		.ascii	"Clock_1_GetFractionalDividerRegister\000"
 674      6B5F315F 
 674      47657446 
 674      72616374 
 674      696F6E61 
 675              	.LASF6:
 676 01e1 6C6F6E67 		.ascii	"long long int\000"
 676      206C6F6E 
 676      6720696E 
 676      7400
 677              	.LASF14:
 678 01ef 63686172 		.ascii	"char\000"
 678      00
 679              	.LASF2:
 680 01f4 73686F72 		.ascii	"short int\000"
 680      7420696E 
 680      7400
 681              	.LASF9:
 682 01fe 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4SwEW9.s 			page 18


 682      3800
 683              	.LASF17:
 684 0204 436C6F63 		.ascii	"Clock_1_SetFractionalDividerRegister\000"
 684      6B5F315F 
 684      53657446 
 684      72616374 
 684      696F6E61 
 685              	.LASF4:
 686 0229 6C6F6E67 		.ascii	"long int\000"
 686      20696E74 
 686      00
 687              	.LASF0:
 688 0232 7369676E 		.ascii	"signed char\000"
 688      65642063 
 688      68617200 
 689              	.LASF23:
 690 023e 436C6F63 		.ascii	"Clock_1_GetDividerRegister\000"
 690      6B5F315F 
 690      47657444 
 690      69766964 
 690      65725265 
 691              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
