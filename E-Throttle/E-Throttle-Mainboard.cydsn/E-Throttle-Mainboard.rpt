Loading plugins phase: Elapsed time ==> 1s.116ms
Initializing data phase: Elapsed time ==> 0s.000ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -p C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\E-Throttle-Mainboard.cyprj -d CY8C5868AXI-LP035 -s C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 7s.394ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.277ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  E-Throttle-Mainboard.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\E-Throttle-Mainboard.cyprj -dcpsoc3 E-Throttle-Mainboard.v -verilog
======================================================================

======================================================================
Compiling:  E-Throttle-Mainboard.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\E-Throttle-Mainboard.cyprj -dcpsoc3 E-Throttle-Mainboard.v -verilog
======================================================================

======================================================================
Compiling:  E-Throttle-Mainboard.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\E-Throttle-Mainboard.cyprj -dcpsoc3 -verilog E-Throttle-Mainboard.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Sat Nov 14 22:02:24 2015


======================================================================
Compiling:  E-Throttle-Mainboard.v
Program  :   vpp
Options  :    -yv2 -q10 E-Throttle-Mainboard.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Sat Nov 14 22:02:24 2015

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'E-Throttle-Mainboard.ctl'.
E-Throttle-Mainboard.v (line 661, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
E-Throttle-Mainboard.v (line 1323, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.

vlogfe:  No errors.


======================================================================
Compiling:  E-Throttle-Mainboard.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\E-Throttle-Mainboard.cyprj -dcpsoc3 -verilog E-Throttle-Mainboard.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Sat Nov 14 22:02:24 2015

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\codegentemp\E-Throttle-Mainboard.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\codegentemp\E-Throttle-Mainboard.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.

tovif:  No errors.


======================================================================
Compiling:  E-Throttle-Mainboard.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\E-Throttle-Mainboard.cyprj -dcpsoc3 -verilog E-Throttle-Mainboard.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Sat Nov 14 22:02:25 2015

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\codegentemp\E-Throttle-Mainboard.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\codegentemp\E-Throttle-Mainboard.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\TPS_ADC:SAR:Net_221\
	\TPS_ADC:SAR:Net_381\
	\TPS_ADC:bSAR_SEQ:sw_soc\
	\TPS_ADC:soc_out\
	\TPS_ADC:Net_3905\
	\TPS_ADC:Net_3867\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:albi_2\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:agbi_2\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:albi_1\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:agbi_1\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:albi_0\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:agbi_0\
	\TPS_ADC:MODULE_1:g1:a0:xneq\
	\TPS_ADC:MODULE_1:g1:a0:xlt\
	\TPS_ADC:MODULE_1:g1:a0:xlte\
	\TPS_ADC:MODULE_1:g1:a0:xgt\
	\TPS_ADC:MODULE_1:g1:a0:xgte\
	\TPS_ADC:MODULE_1:lt\
	\TPS_ADC:MODULE_1:gt\
	\TPS_ADC:MODULE_1:gte\
	\TPS_ADC:MODULE_1:lte\
	\TPS_ADC:MODULE_1:neq\
	\APPS_ADC:SAR:Net_221\
	\APPS_ADC:SAR:Net_381\
	\APPS_ADC:bSAR_SEQ:sw_soc\
	\APPS_ADC:soc_out\
	\APPS_ADC:Net_3905\
	\APPS_ADC:Net_3867\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:albi_2\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:agbi_2\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:albi_1\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:agbi_1\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:albi_0\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:agbi_0\
	\APPS_ADC:MODULE_2:g1:a0:xneq\
	\APPS_ADC:MODULE_2:g1:a0:xlt\
	\APPS_ADC:MODULE_2:g1:a0:xlte\
	\APPS_ADC:MODULE_2:g1:a0:xgt\
	\APPS_ADC:MODULE_2:g1:a0:xgte\
	\APPS_ADC:MODULE_2:lt\
	\APPS_ADC:MODULE_2:gt\
	\APPS_ADC:MODULE_2:gte\
	\APPS_ADC:MODULE_2:lte\
	\APPS_ADC:MODULE_2:neq\


Deleted 44 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \TPS_ADC:SAR:vp_ctl_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vn_ctl_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vn_ctl_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vp_ctl_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vp_ctl_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vn_ctl_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vn_ctl_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:soc\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing zero to \TPS_ADC:SAR:vp_ctl_0\
Aliasing one to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \TPS_ADC:bSAR_SEQ:status_7\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_6\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_5\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_4\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing Net_906 to \TPS_ADC:bSAR_SEQ:status_0\
Aliasing \TPS_ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__TPS_0_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__TPS_1_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__TPS_2_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_enable\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \APPS_ADC:SAR:vp_ctl_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vp_ctl_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vn_ctl_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vn_ctl_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vp_ctl_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vp_ctl_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vn_ctl_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vn_ctl_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:soc\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_7\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_6\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_5\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_4\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing Net_1304 to \APPS_ADC:bSAR_SEQ:status_0\
Aliasing \APPS_ADC:MODULE_2:g1:a0:gx:u0:aeqb_0\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__APPS_1_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__APPS_2_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__APPS_3_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_5\\D\ to \TPS_ADC:MODIN1_5\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_4\\D\ to \TPS_ADC:MODIN1_4\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_3\\D\ to \TPS_ADC:MODIN1_3\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_2\\D\ to \TPS_ADC:MODIN1_2\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_1\\D\ to \TPS_ADC:MODIN1_1\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_0\\D\ to \TPS_ADC:MODIN1_0\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_5\\D\ to \APPS_ADC:MODIN3_5\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_4\\D\ to \APPS_ADC:MODIN3_4\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_3\\D\ to \APPS_ADC:MODIN3_3\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_2\\D\ to \APPS_ADC:MODIN3_2\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_1\\D\ to \APPS_ADC:MODIN3_1\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_0\\D\ to \APPS_ADC:MODIN3_0\
Removing Lhs of wire \TPS_ADC:cmp_vv_vv_MODGEN_1\[2] = \TPS_ADC:MODULE_1:g1:a0:xeq\[339]
Removing Rhs of wire \TPS_ADC:clock\[3] = \TPS_ADC:Net_3874\[239]
Removing Rhs of wire \TPS_ADC:ch_addr_5\[5] = \TPS_ADC:bSAR_SEQ:count_5\[206]
Removing Rhs of wire \TPS_ADC:ch_addr_4\[7] = \TPS_ADC:bSAR_SEQ:count_4\[207]
Removing Rhs of wire \TPS_ADC:ch_addr_3\[9] = \TPS_ADC:bSAR_SEQ:count_3\[208]
Removing Rhs of wire \TPS_ADC:ch_addr_2\[11] = \TPS_ADC:bSAR_SEQ:count_2\[209]
Removing Rhs of wire \TPS_ADC:ch_addr_1\[13] = \TPS_ADC:bSAR_SEQ:count_1\[210]
Removing Rhs of wire \TPS_ADC:ch_addr_0\[15] = \TPS_ADC:bSAR_SEQ:count_0\[211]
Removing Lhs of wire \TPS_ADC:SAR:vp_ctl_2\[150] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vn_ctl_1\[151] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vn_ctl_3\[152] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vp_ctl_1\[153] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vp_ctl_3\[154] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vn_ctl_0\[155] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vn_ctl_2\[156] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:Net_188\[157] = \TPS_ADC:clock\[3]
Removing Lhs of wire \TPS_ADC:SAR:soc\[163] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Rhs of wire zero[164] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Rhs of wire \TPS_ADC:bSAR_SEQ:enable\[195] = \TPS_ADC:bSAR_SEQ:control_0\[196]
Removing Rhs of wire \TPS_ADC:bSAR_SEQ:load_period\[197] = \TPS_ADC:bSAR_SEQ:control_1\[198]
Removing Rhs of wire one[204] = \TPS_ADC:AMuxHw_2_Decoder_enable\[0]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_7\[212] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_6\[213] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_5\[214] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_4\[215] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_3\[216] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_2\[217] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_1\[218] = zero[164]
Removing Rhs of wire \TPS_ADC:bSAR_SEQ:status_0\[219] = \TPS_ADC:bSAR_SEQ:nrq_edge_detect_reg\[220]
Removing Rhs of wire Net_906[227] = \TPS_ADC:bSAR_SEQ:status_0\[219]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_5\[250] = \TPS_ADC:MODIN1_5\[251]
Removing Lhs of wire \TPS_ADC:MODIN1_5\[251] = \TPS_ADC:ch_addr_5\[5]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_4\[252] = \TPS_ADC:MODIN1_4\[253]
Removing Lhs of wire \TPS_ADC:MODIN1_4\[253] = \TPS_ADC:ch_addr_4\[7]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_3\[254] = \TPS_ADC:MODIN1_3\[255]
Removing Lhs of wire \TPS_ADC:MODIN1_3\[255] = \TPS_ADC:ch_addr_3\[9]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_2\[256] = \TPS_ADC:MODIN1_2\[257]
Removing Lhs of wire \TPS_ADC:MODIN1_2\[257] = \TPS_ADC:ch_addr_2\[11]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_1\[258] = \TPS_ADC:MODIN1_1\[259]
Removing Lhs of wire \TPS_ADC:MODIN1_1\[259] = \TPS_ADC:ch_addr_1\[13]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_0\[260] = \TPS_ADC:MODIN1_0\[261]
Removing Lhs of wire \TPS_ADC:MODIN1_0\[261] = \TPS_ADC:ch_addr_0\[15]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_5\[262] = \TPS_ADC:MODIN2_5\[263]
Removing Lhs of wire \TPS_ADC:MODIN2_5\[263] = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_4\[264] = \TPS_ADC:MODIN2_4\[265]
Removing Lhs of wire \TPS_ADC:MODIN2_4\[265] = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_3\[266] = \TPS_ADC:MODIN2_3\[267]
Removing Lhs of wire \TPS_ADC:MODIN2_3\[267] = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_2\[268] = \TPS_ADC:MODIN2_2\[269]
Removing Lhs of wire \TPS_ADC:MODIN2_2\[269] = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_1\[270] = \TPS_ADC:MODIN2_1\[271]
Removing Lhs of wire \TPS_ADC:MODIN2_1\[271] = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_0\[272] = \TPS_ADC:MODIN2_0\[273]
Removing Lhs of wire \TPS_ADC:MODIN2_0\[273] = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_5\[274] = \TPS_ADC:ch_addr_5\[5]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_4\[275] = \TPS_ADC:ch_addr_4\[7]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_3\[276] = \TPS_ADC:ch_addr_3\[9]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_2\[277] = \TPS_ADC:ch_addr_2\[11]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_1\[278] = \TPS_ADC:ch_addr_1\[13]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_0\[279] = \TPS_ADC:ch_addr_0\[15]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_5\[280] = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_4\[281] = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_3\[282] = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_2\[283] = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_1\[284] = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_0\[285] = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_5\[286] = \TPS_ADC:ch_addr_5\[5]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_4\[287] = \TPS_ADC:ch_addr_4\[7]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_3\[288] = \TPS_ADC:ch_addr_3\[9]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_2\[289] = \TPS_ADC:ch_addr_2\[11]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_1\[290] = \TPS_ADC:ch_addr_1\[13]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_0\[291] = \TPS_ADC:ch_addr_0\[15]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_5\[292] = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_4\[293] = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_3\[294] = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_2\[295] = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_1\[296] = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_0\[297] = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\[304] = one[204]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_0\[305] = \TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\[303]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:eqi_0\[311] = \TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_5\[310]
Removing Rhs of wire \TPS_ADC:MODULE_1:g1:a0:xeq\[339] = \TPS_ADC:MODULE_1:g1:a0:gx:u0:aeqb_1\[312]
Removing Lhs of wire tmpOE__TPS_0_net_0[351] = one[204]
Removing Lhs of wire tmpOE__TPS_1_net_0[357] = one[204]
Removing Lhs of wire tmpOE__TPS_2_net_0[363] = one[204]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_enable\[368] = one[204]
Removing Lhs of wire \APPS_ADC:cmp_vv_vv_MODGEN_2\[370] = \APPS_ADC:MODULE_2:g1:a0:xeq\[705]
Removing Rhs of wire \APPS_ADC:clock\[371] = \APPS_ADC:Net_3874\[605]
Removing Rhs of wire \APPS_ADC:ch_addr_5\[373] = \APPS_ADC:bSAR_SEQ:count_5\[572]
Removing Rhs of wire \APPS_ADC:ch_addr_4\[375] = \APPS_ADC:bSAR_SEQ:count_4\[573]
Removing Rhs of wire \APPS_ADC:ch_addr_3\[377] = \APPS_ADC:bSAR_SEQ:count_3\[574]
Removing Rhs of wire \APPS_ADC:ch_addr_2\[379] = \APPS_ADC:bSAR_SEQ:count_2\[575]
Removing Rhs of wire \APPS_ADC:ch_addr_1\[381] = \APPS_ADC:bSAR_SEQ:count_1\[576]
Removing Rhs of wire \APPS_ADC:ch_addr_0\[383] = \APPS_ADC:bSAR_SEQ:count_0\[577]
Removing Lhs of wire \APPS_ADC:SAR:vp_ctl_0\[517] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vp_ctl_2\[518] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vn_ctl_1\[519] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vn_ctl_3\[520] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vp_ctl_1\[521] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vp_ctl_3\[522] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vn_ctl_0\[523] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vn_ctl_2\[524] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:Net_188\[525] = \APPS_ADC:clock\[371]
Removing Lhs of wire \APPS_ADC:SAR:soc\[531] = zero[164]
Removing Rhs of wire \APPS_ADC:bSAR_SEQ:enable\[562] = \APPS_ADC:bSAR_SEQ:control_0\[563]
Removing Rhs of wire \APPS_ADC:bSAR_SEQ:load_period\[564] = \APPS_ADC:bSAR_SEQ:control_1\[565]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_7\[578] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_6\[579] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_5\[580] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_4\[581] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_3\[582] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_2\[583] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_1\[584] = zero[164]
Removing Rhs of wire \APPS_ADC:bSAR_SEQ:status_0\[585] = \APPS_ADC:bSAR_SEQ:nrq_edge_detect_reg\[586]
Removing Rhs of wire Net_1304[593] = \APPS_ADC:bSAR_SEQ:status_0\[585]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_5\[616] = \APPS_ADC:MODIN3_5\[617]
Removing Lhs of wire \APPS_ADC:MODIN3_5\[617] = \APPS_ADC:ch_addr_5\[373]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_4\[618] = \APPS_ADC:MODIN3_4\[619]
Removing Lhs of wire \APPS_ADC:MODIN3_4\[619] = \APPS_ADC:ch_addr_4\[375]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_3\[620] = \APPS_ADC:MODIN3_3\[621]
Removing Lhs of wire \APPS_ADC:MODIN3_3\[621] = \APPS_ADC:ch_addr_3\[377]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_2\[622] = \APPS_ADC:MODIN3_2\[623]
Removing Lhs of wire \APPS_ADC:MODIN3_2\[623] = \APPS_ADC:ch_addr_2\[379]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_1\[624] = \APPS_ADC:MODIN3_1\[625]
Removing Lhs of wire \APPS_ADC:MODIN3_1\[625] = \APPS_ADC:ch_addr_1\[381]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_0\[626] = \APPS_ADC:MODIN3_0\[627]
Removing Lhs of wire \APPS_ADC:MODIN3_0\[627] = \APPS_ADC:ch_addr_0\[383]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_5\[628] = \APPS_ADC:MODIN4_5\[629]
Removing Lhs of wire \APPS_ADC:MODIN4_5\[629] = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\[372]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_4\[630] = \APPS_ADC:MODIN4_4\[631]
Removing Lhs of wire \APPS_ADC:MODIN4_4\[631] = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\[374]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_3\[632] = \APPS_ADC:MODIN4_3\[633]
Removing Lhs of wire \APPS_ADC:MODIN4_3\[633] = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\[376]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_2\[634] = \APPS_ADC:MODIN4_2\[635]
Removing Lhs of wire \APPS_ADC:MODIN4_2\[635] = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\[378]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_1\[636] = \APPS_ADC:MODIN4_1\[637]
Removing Lhs of wire \APPS_ADC:MODIN4_1\[637] = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\[380]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_0\[638] = \APPS_ADC:MODIN4_0\[639]
Removing Lhs of wire \APPS_ADC:MODIN4_0\[639] = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\[382]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_5\[640] = \APPS_ADC:ch_addr_5\[373]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_4\[641] = \APPS_ADC:ch_addr_4\[375]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_3\[642] = \APPS_ADC:ch_addr_3\[377]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_2\[643] = \APPS_ADC:ch_addr_2\[379]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_1\[644] = \APPS_ADC:ch_addr_1\[381]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_0\[645] = \APPS_ADC:ch_addr_0\[383]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_5\[646] = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\[372]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_4\[647] = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\[374]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_3\[648] = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\[376]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_2\[649] = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\[378]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_1\[650] = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\[380]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_0\[651] = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\[382]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_5\[652] = \APPS_ADC:ch_addr_5\[373]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_4\[653] = \APPS_ADC:ch_addr_4\[375]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_3\[654] = \APPS_ADC:ch_addr_3\[377]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_2\[655] = \APPS_ADC:ch_addr_2\[379]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_1\[656] = \APPS_ADC:ch_addr_1\[381]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_0\[657] = \APPS_ADC:ch_addr_0\[383]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_5\[658] = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\[372]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_4\[659] = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\[374]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_3\[660] = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\[376]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_2\[661] = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\[378]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_1\[662] = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\[380]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_0\[663] = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\[382]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:aeqb_0\[670] = one[204]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_0\[671] = \APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_0\[669]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:eqi_0\[677] = \APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_5\[676]
Removing Rhs of wire \APPS_ADC:MODULE_2:g1:a0:xeq\[705] = \APPS_ADC:MODULE_2:g1:a0:gx:u0:aeqb_1\[678]
Removing Lhs of wire tmpOE__APPS_1_net_0[717] = one[204]
Removing Lhs of wire tmpOE__APPS_2_net_0[723] = one[204]
Removing Lhs of wire tmpOE__APPS_3_net_0[729] = one[204]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_5\\D\[734] = \TPS_ADC:ch_addr_5\[5]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_4\\D\[735] = \TPS_ADC:ch_addr_4\[7]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_3\\D\[736] = \TPS_ADC:ch_addr_3\[9]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_2\\D\[737] = \TPS_ADC:ch_addr_2\[11]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_1\\D\[738] = \TPS_ADC:ch_addr_1\[13]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_0\\D\[739] = \TPS_ADC:ch_addr_0\[15]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\[804] = \TPS_ADC:bSAR_SEQ:nrq_edge_detect\[226]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:nrq_reg\\D\[806] = \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\[223]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_5\\D\[807] = \APPS_ADC:ch_addr_5\[373]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_4\\D\[808] = \APPS_ADC:ch_addr_4\[375]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_3\\D\[809] = \APPS_ADC:ch_addr_3\[377]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_2\\D\[810] = \APPS_ADC:ch_addr_2\[379]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_1\\D\[811] = \APPS_ADC:ch_addr_1\[381]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_0\\D\[812] = \APPS_ADC:ch_addr_0\[383]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\[877] = \APPS_ADC:bSAR_SEQ:nrq_edge_detect\[592]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:nrq_reg\\D\[879] = \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\[589]

------------------------------------------------------
Aliased 0 equations, 186 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_5\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_4\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_3\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_2\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_1\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_0\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_1\' (cost = 8):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_1\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_2\' (cost = 16):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_2\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_3\' (cost = 32):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_3\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_4\' (cost = 64):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_4\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_5\' (cost = 64):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_5\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_3\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_3\ <= ((not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_3\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_3\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_4\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_4\ <= ((not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_4\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_4\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_0\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_0\ <= ((not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_0\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_0\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_1\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_1\ <= ((not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_1\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_1\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:xeq\' (cost = 64):
\TPS_ADC:MODULE_1:g1:a0:xeq\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:xeq\' (cost = 64):
\APPS_ADC:MODULE_2:g1:a0:xeq\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \TPS_ADC:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\TPS_ADC:AMuxHw_2_Decoder_is_active\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Virtual signal \APPS_ADC:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\APPS_ADC:AMuxHw_2_Decoder_is_active\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 41 signals.
	Turned 2 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------

------------------------------------------------------
Aliased 0 equations, 0 wires.
------------------------------------------------------

Last attempt to remove unused logic - pass 1:


Last attempt to remove unused logic - pass 2:


topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\bin/warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\E-Throttle-Mainboard.cyprj -dcpsoc3 E-Throttle-Mainboard.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 2s.306ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V3.2.0.6175, Family: PSoC3, Started at: Saturday, 14 November 2015 22:02:26
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\E-Throttle\E-Throttle-Mainboard.cydsn\E-Throttle-Mainboard.cyprj -d CY8C5868AXI-LP035 E-Throttle-Mainboard.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.138ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \APPS_ADC:MODULE_2:g1:a0:gx:u0:lti_0\ kept \APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_2\
    Removed wire end \APPS_ADC:MODULE_2:g1:a0:gx:u0:gti_0\ kept \APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_2\
    Removed wire end \APPS_ADC:MODULE_2:g1:a0:gx:u0:lti_1\ kept \APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_5\
    Removed wire end \APPS_ADC:MODULE_2:g1:a0:gx:u0:gti_1\ kept \APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_5\
    Removed wire end \TPS_ADC:MODULE_1:g1:a0:gx:u0:lti_0\ kept \TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \TPS_ADC:MODULE_1:g1:a0:gx:u0:gti_0\ kept \TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \TPS_ADC:MODULE_1:g1:a0:gx:u0:lti_1\ kept \TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \TPS_ADC:MODULE_1:g1:a0:gx:u0:gti_1\ kept \TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_5\
Assigning clock APPS_ADC_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock TPS_ADC_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'APPS_ADC_IntClock'. Fanout=73, Signal=\APPS_ADC:clock\
    Digital Clock 1: Automatic-assigning  clock 'TPS_ADC_IntClock'. Fanout=73, Signal=\TPS_ADC:clock\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \APPS_ADC:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: APPS_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: APPS_ADC_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \APPS_ADC:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: APPS_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \APPS_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: APPS_ADC_IntClock, EnableOut: \APPS_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \TPS_ADC:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: TPS_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: TPS_ADC_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \TPS_ADC:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: TPS_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \TPS_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: TPS_ADC_IntClock, EnableOut: \TPS_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0
</CYPRESSTAG>
ADD: pft.M0040: information: The following 6 pin(s) will be assigned a location by the fitter: APPS_1(0), APPS_2(0), APPS_3(0), TPS_0(0), TPS_1(0), TPS_2(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = APPS_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => APPS_1(0)__PA ,
            analog_term => Net_1108 ,
            pad => APPS_1(0)_PAD ,
            input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_0\ );

    Pin : Name = APPS_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => APPS_2(0)__PA ,
            analog_term => Net_1109 ,
            pad => APPS_2(0)_PAD ,
            input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_1\ );

    Pin : Name = APPS_3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => APPS_3(0)__PA ,
            analog_term => Net_1111 ,
            pad => APPS_3(0)_PAD ,
            input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_2\ );

    Pin : Name = TPS_0(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => TPS_0(0)__PA ,
            analog_term => Net_907 ,
            pad => TPS_0(0)_PAD ,
            input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_0\ );

    Pin : Name = TPS_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => TPS_1(0)__PA ,
            analog_term => Net_908 ,
            pad => TPS_1(0)_PAD ,
            input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_1\ );

    Pin : Name = TPS_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => TPS_2(0)__PA ,
            analog_term => Net_910 ,
            pad => TPS_2(0)_PAD ,
            input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_2\ );
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=Net_1304, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\APPS_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_1304 (fanout=3)

    MacroCell: Name=Net_906, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\TPS_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_906 (fanout=3)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * \APPS_ADC:ch_addr_5\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * \APPS_ADC:ch_addr_4\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * \APPS_ADC:ch_addr_3\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * \APPS_ADC:ch_addr_2\
            + \APPS_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * !\APPS_ADC:ch_addr_5\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * !\APPS_ADC:ch_addr_4\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * !\APPS_ADC:ch_addr_3\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * !\APPS_ADC:ch_addr_2\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * \APPS_ADC:ch_addr_1\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * !\APPS_ADC:ch_addr_1\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\ * \APPS_ADC:ch_addr_0\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ * !\APPS_ADC:ch_addr_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_1\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_2\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_3\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_4\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_5\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_1304
            + \APPS_ADC:Net_3935\
        );
        Output = \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\APPS_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_1303 * !\APPS_ADC:bSAR_SEQ:load_period\
        );
        Output = \APPS_ADC:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\APPS_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \APPS_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * \TPS_ADC:ch_addr_5\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * \TPS_ADC:ch_addr_4\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * \TPS_ADC:ch_addr_3\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * \TPS_ADC:ch_addr_2\
            + \TPS_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * !\TPS_ADC:ch_addr_5\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * !\TPS_ADC:ch_addr_4\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * !\TPS_ADC:ch_addr_3\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * !\TPS_ADC:ch_addr_2\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * \TPS_ADC:ch_addr_1\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * !\TPS_ADC:ch_addr_1\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\ * \TPS_ADC:ch_addr_0\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ * !\TPS_ADC:ch_addr_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_1\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_2\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_3\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_4\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_5\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_906
            + \TPS_ADC:Net_3935\
        );
        Output = \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\TPS_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_905 * !\TPS_ADC:bSAR_SEQ:load_period\
        );
        Output = \TPS_ADC:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\TPS_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \TPS_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\APPS_ADC:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \APPS_ADC:clock\ ,
            status_0 => Net_1304 ,
            clk_en => \APPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)

    statuscell: Name =\TPS_ADC:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \TPS_ADC:clock\ ,
            status_0 => Net_906 ,
            clk_en => \TPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\APPS_ADC:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \APPS_ADC:nrq\ ,
            out => \APPS_ADC:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =\TPS_ADC:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \TPS_ADC:nrq\ ,
            out => \TPS_ADC:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\APPS_ADC:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \APPS_ADC:clock\ ,
            control_7 => \APPS_ADC:bSAR_SEQ:control_7\ ,
            control_6 => \APPS_ADC:bSAR_SEQ:control_6\ ,
            control_5 => \APPS_ADC:bSAR_SEQ:control_5\ ,
            control_4 => \APPS_ADC:bSAR_SEQ:control_4\ ,
            control_3 => \APPS_ADC:bSAR_SEQ:control_3\ ,
            control_2 => \APPS_ADC:bSAR_SEQ:control_2\ ,
            control_1 => \APPS_ADC:bSAR_SEQ:load_period\ ,
            control_0 => \APPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\TPS_ADC:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \TPS_ADC:clock\ ,
            control_7 => \TPS_ADC:bSAR_SEQ:control_7\ ,
            control_6 => \TPS_ADC:bSAR_SEQ:control_6\ ,
            control_5 => \TPS_ADC:bSAR_SEQ:control_5\ ,
            control_4 => \TPS_ADC:bSAR_SEQ:control_4\ ,
            control_3 => \TPS_ADC:bSAR_SEQ:control_3\ ,
            control_2 => \TPS_ADC:bSAR_SEQ:control_2\ ,
            control_1 => \TPS_ADC:bSAR_SEQ:load_period\ ,
            control_0 => \TPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\APPS_ADC:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \APPS_ADC:clock\ ,
            load => \APPS_ADC:bSAR_SEQ:load_period\ ,
            enable => \APPS_ADC:bSAR_SEQ:cnt_enable\ ,
            count_6 => \APPS_ADC:bSAR_SEQ:count_6\ ,
            count_5 => \APPS_ADC:ch_addr_5\ ,
            count_4 => \APPS_ADC:ch_addr_4\ ,
            count_3 => \APPS_ADC:ch_addr_3\ ,
            count_2 => \APPS_ADC:ch_addr_2\ ,
            count_1 => \APPS_ADC:ch_addr_1\ ,
            count_0 => \APPS_ADC:ch_addr_0\ ,
            tc => \APPS_ADC:bSAR_SEQ:cnt_tc\ ,
            clk_en => \APPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)

    count7cell: Name =\TPS_ADC:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \TPS_ADC:clock\ ,
            load => \TPS_ADC:bSAR_SEQ:load_period\ ,
            enable => \TPS_ADC:bSAR_SEQ:cnt_enable\ ,
            count_6 => \TPS_ADC:bSAR_SEQ:count_6\ ,
            count_5 => \TPS_ADC:ch_addr_5\ ,
            count_4 => \TPS_ADC:ch_addr_4\ ,
            count_3 => \TPS_ADC:ch_addr_3\ ,
            count_2 => \TPS_ADC:ch_addr_2\ ,
            count_1 => \TPS_ADC:ch_addr_1\ ,
            count_0 => \TPS_ADC:ch_addr_0\ ,
            tc => \TPS_ADC:bSAR_SEQ:cnt_tc\ ,
            clk_en => \TPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\APPS_ADC:FinalBuf\
        PORT MAP (
            dmareq => \APPS_ADC:Net_3698\ ,
            termin => zero ,
            termout => \APPS_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\APPS_ADC:TempBuf\
        PORT MAP (
            dmareq => \APPS_ADC:Net_3830\ ,
            termin => zero ,
            termout => \APPS_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\TPS_ADC:FinalBuf\
        PORT MAP (
            dmareq => \TPS_ADC:Net_3698\ ,
            termin => zero ,
            termout => \TPS_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\TPS_ADC:TempBuf\
        PORT MAP (
            dmareq => \TPS_ADC:Net_3830\ ,
            termin => zero ,
            termout => \TPS_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\APPS_ADC:IRQ\
        PORT MAP (
            interrupt => Net_1304 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\TPS_ADC:IRQ\
        PORT MAP (
            interrupt => Net_906 );
        Properties:
        {
            int_type = "10"
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital clock dividers        :    2 :    6 :    8 :  25.00%
Analog clock dividers         :    0 :    4 :    4 :   0.00%
Pins                          :    9 :   63 :   72 :  12.50%
UDB Macrocells                :  152 :   40 :  192 :  79.17%
UDB Unique Pterms             :  176 :  208 :  384 :  45.83%
UDB Total Pterms              :  176 :      :      : 
UDB Datapath Cells            :    0 :   24 :   24 :   0.00%
UDB Status Cells              :    5 :   19 :   24 :  20.83%
             Status Registers :    2 
                   Sync Cells :    2 (in 1 status cell)
    Routed Count7 Load/Enable :    2 
UDB Control Cells             :    4 :   20 :   24 :  16.67%
            Control Registers :    2 
                 Count7 Cells :    2 
DMA Channels                  :    4 :   20 :   24 :  16.67%
Interrupts                    :    2 :   30 :   32 :   6.25%
DSM Fixed Blocks              :    0 :    1 :    1 :   0.00%
VIDAC Fixed Blocks            :    0 :    4 :    4 :   0.00%
SC Fixed Blocks               :    0 :    4 :    4 :   0.00%
Comparator Fixed Blocks       :    0 :    4 :    4 :   0.00%
Opamp Fixed Blocks            :    0 :    4 :    4 :   0.00%
CapSense Buffers              :    0 :    2 :    2 :   0.00%
CAN Fixed Blocks              :    0 :    1 :    1 :   0.00%
Decimator Fixed Blocks        :    0 :    1 :    1 :   0.00%
I2C Fixed Blocks              :    0 :    1 :    1 :   0.00%
Timer Fixed Blocks            :    0 :    4 :    4 :   0.00%
DFB Fixed Blocks              :    0 :    1 :    1 :   0.00%
USB Fixed Blocks              :    0 :    1 :    1 :   0.00%
LCD Fixed Blocks              :    0 :    1 :    1 :   0.00%
EMIF Fixed Blocks             :    0 :    1 :    1 :   0.00%
LPF Fixed Blocks              :    0 :    2 :    2 :   0.00%
SAR Fixed Blocks              :    2 :    0 :    2 : 100.00%
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 3s.211ms
Tech mapping phase: Elapsed time ==> 3s.590ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_1306" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1308" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1310" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1311" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1313" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1315" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1316" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1318" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1320" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1321" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1323" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1325" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1326" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1328" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1330" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1331" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1333" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1335" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1336" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1338" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1340" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1341" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1343" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1345" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1346" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1348" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1350" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1351" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1353" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1355" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1356" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1358" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1360" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1361" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1363" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1365" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1366" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1368" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1370" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1371" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1373" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1375" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1376" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1378" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1380" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1381" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1382" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1383" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1384" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1385" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1386" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1387" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1388" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1389" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1390" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1391" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1392" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1393" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1394" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1395" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1396" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_911" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_913" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_915" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_916" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_918" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_920" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_921" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_923" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_925" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_926" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_928" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_930" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_931" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_933" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_935" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_936" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_938" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_940" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_941" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_943" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_945" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_946" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_948" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_950" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_951" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_953" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_955" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_956" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_958" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_960" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_961" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_963" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_965" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_966" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_968" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_970" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_971" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_973" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_975" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_976" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_978" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_980" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_981" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_983" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_985" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_986" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_987" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_988" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_989" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_990" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_991" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_992" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_993" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_994" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_995" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_996" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_997" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_998" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_999" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1000" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1001" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_5@[IOP=(3)][IoId=(5)] : APPS_1(0)
IO_2@[IOP=(0)][IoId=(2)] : APPS_2(0)
IO_4@[IOP=(6)][IoId=(4)] : APPS_3(0)
IO_0@[IOP=(4)][IoId=(0)] : TPS_0(0)
IO_3@[IOP=(2)][IoId=(3)] : TPS_1(0)
IO_0@[IOP=(5)][IoId=(0)] : TPS_2(0)
SAR[1]@[FFB(SAR,1)] : \APPS_ADC:SAR:ADC_SAR\
Vref[3]@[FFB(Vref,3)] : \APPS_ADC:SAR:vRef_1024\
SAR[0]@[FFB(SAR,0)] : \TPS_ADC:SAR:ADC_SAR\
Log: apr.M0058: The analog placement iterative improvement is 40% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 71% done. (App=cydsfit)
Analog Placement Results:
IO_2@[IOP=(4)][IoId=(2)] : APPS_1(0)
IO_6@[IOP=(3)][IoId=(6)] : APPS_2(0)
IO_2@[IOP=(0)][IoId=(2)] : APPS_3(0)
IO_1@[IOP=(4)][IoId=(1)] : TPS_0(0)
IO_5@[IOP=(3)][IoId=(5)] : TPS_1(0)
IO_1@[IOP=(3)][IoId=(1)] : TPS_2(0)
SAR[1]@[FFB(SAR,1)] : \APPS_ADC:SAR:ADC_SAR\
Vref[3]@[FFB(Vref,3)] : \APPS_ADC:SAR:vRef_1024\
SAR[0]@[FFB(SAR,0)] : \TPS_ADC:SAR:ADC_SAR\

Analog Placement phase: Elapsed time ==> 50s.297ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.114ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \APPS_ADC:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_1108 {
    p3_5
  }
  Net: Net_1109 {
    p3_1
  }
  Net: Net_1111 {
    p15_1
  }
  Net: Net_1306 {
  }
  Net: Net_1308 {
  }
  Net: Net_1310 {
  }
  Net: Net_1311 {
  }
  Net: Net_1313 {
  }
  Net: Net_1315 {
  }
  Net: Net_1316 {
  }
  Net: Net_1318 {
  }
  Net: Net_1320 {
  }
  Net: Net_1321 {
  }
  Net: Net_1323 {
  }
  Net: Net_1325 {
  }
  Net: Net_1326 {
  }
  Net: Net_1328 {
  }
  Net: Net_1330 {
  }
  Net: Net_1331 {
  }
  Net: Net_1333 {
  }
  Net: Net_1335 {
  }
  Net: Net_1336 {
  }
  Net: Net_1338 {
  }
  Net: Net_1340 {
  }
  Net: Net_1341 {
  }
  Net: Net_1343 {
  }
  Net: Net_1345 {
  }
  Net: Net_1346 {
  }
  Net: Net_1348 {
  }
  Net: Net_1350 {
  }
  Net: Net_1351 {
  }
  Net: Net_1353 {
  }
  Net: Net_1355 {
  }
  Net: Net_1356 {
  }
  Net: Net_1358 {
  }
  Net: Net_1360 {
  }
  Net: Net_1361 {
  }
  Net: Net_1363 {
  }
  Net: Net_1365 {
  }
  Net: Net_1366 {
  }
  Net: Net_1368 {
  }
  Net: Net_1370 {
  }
  Net: Net_1371 {
  }
  Net: Net_1373 {
  }
  Net: Net_1375 {
  }
  Net: Net_1376 {
  }
  Net: Net_1378 {
  }
  Net: Net_1380 {
  }
  Net: Net_1381 {
  }
  Net: Net_1382 {
  }
  Net: Net_1383 {
  }
  Net: Net_1384 {
  }
  Net: Net_1385 {
  }
  Net: Net_1386 {
  }
  Net: Net_1387 {
  }
  Net: Net_1388 {
  }
  Net: Net_1389 {
  }
  Net: Net_1390 {
  }
  Net: Net_1391 {
  }
  Net: Net_1392 {
  }
  Net: Net_1393 {
  }
  Net: Net_1394 {
  }
  Net: Net_1395 {
  }
  Net: Net_1396 {
  }
  Net: \TPS_ADC:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_907 {
    p0_4
  }
  Net: Net_908 {
    p4_4
  }
  Net: Net_910 {
    p4_0
  }
  Net: Net_911 {
  }
  Net: Net_913 {
  }
  Net: Net_915 {
  }
  Net: Net_916 {
  }
  Net: Net_918 {
  }
  Net: Net_920 {
  }
  Net: Net_921 {
  }
  Net: Net_923 {
  }
  Net: Net_925 {
  }
  Net: Net_926 {
  }
  Net: Net_928 {
  }
  Net: Net_930 {
  }
  Net: Net_931 {
  }
  Net: Net_933 {
  }
  Net: Net_935 {
  }
  Net: Net_936 {
  }
  Net: Net_938 {
  }
  Net: Net_940 {
  }
  Net: Net_941 {
  }
  Net: Net_943 {
  }
  Net: Net_945 {
  }
  Net: Net_946 {
  }
  Net: Net_948 {
  }
  Net: Net_950 {
  }
  Net: Net_951 {
  }
  Net: Net_953 {
  }
  Net: Net_955 {
  }
  Net: Net_956 {
  }
  Net: Net_958 {
  }
  Net: Net_960 {
  }
  Net: Net_961 {
  }
  Net: Net_963 {
  }
  Net: Net_965 {
  }
  Net: Net_966 {
  }
  Net: Net_968 {
  }
  Net: Net_970 {
  }
  Net: Net_971 {
  }
  Net: Net_973 {
  }
  Net: Net_975 {
  }
  Net: Net_976 {
  }
  Net: Net_978 {
  }
  Net: Net_980 {
  }
  Net: Net_981 {
  }
  Net: Net_983 {
  }
  Net: Net_985 {
  }
  Net: Net_986 {
  }
  Net: Net_987 {
  }
  Net: Net_988 {
  }
  Net: Net_989 {
  }
  Net: Net_990 {
  }
  Net: Net_991 {
  }
  Net: Net_992 {
  }
  Net: Net_993 {
  }
  Net: Net_994 {
  }
  Net: Net_995 {
  }
  Net: Net_996 {
  }
  Net: Net_997 {
  }
  Net: Net_998 {
  }
  Net: Net_999 {
  }
  Net: Net_1000 {
  }
  Net: Net_1001 {
  }
  Net: \APPS_ADC:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \APPS_ADC:SAR:Net_215\ {
  }
  Net: \APPS_ADC:SAR:Net_248\ {
    sar_0_vref
    sar_0_vref_x_sar_0_vref_1024
    sar_0_vref_1024
    common_vref_1024
    sar_1_vref_1024
    sar_1_vref_x_sar_1_vref_1024
    sar_1_vref
  }
  Net: \TPS_ADC:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \TPS_ADC:SAR:Net_215\ {
  }
  Net: AmuxNet::\APPS_ADC:AMuxHw_2\ {
    sar_1_vplus
    agr5_x_sar_1_vplus
    agr5
    agr5_x_p15_1
    agr5_x_p3_1
    agr5_x_p3_5
    p15_1
    p3_1
    p3_5
  }
  Net: AmuxNet::\TPS_ADC:AMuxHw_2\ {
    sar_0_vplus
    agl4_x_sar_0_vplus
    agl4
    agl4_x_p4_0
    agl4_x_p4_4
    agl4_x_p0_4
    p4_0
    p4_4
    p0_4
  }
}
Map of item to net {
  sar_1_vrefhi                                     -> \APPS_ADC:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \APPS_ADC:SAR:Net_126\
  sar_1_vminus                                     -> \APPS_ADC:SAR:Net_126\
  sar_0_vref                                       -> \APPS_ADC:SAR:Net_248\
  sar_0_vref_x_sar_0_vref_1024                     -> \APPS_ADC:SAR:Net_248\
  sar_0_vref_1024                                  -> \APPS_ADC:SAR:Net_248\
  common_vref_1024                                 -> \APPS_ADC:SAR:Net_248\
  sar_1_vref_1024                                  -> \APPS_ADC:SAR:Net_248\
  sar_1_vref_x_sar_1_vref_1024                     -> \APPS_ADC:SAR:Net_248\
  sar_1_vref                                       -> \APPS_ADC:SAR:Net_248\
  sar_0_vrefhi                                     -> \TPS_ADC:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \TPS_ADC:SAR:Net_126\
  sar_0_vminus                                     -> \TPS_ADC:SAR:Net_126\
  sar_1_vplus                                      -> \APPS_ADC:Net_2803\
  p3_5                                             -> Net_1108
  p3_1                                             -> Net_1109
  p15_1                                            -> Net_1111
  sar_0_vplus                                      -> \TPS_ADC:Net_2803\
  p0_4                                             -> Net_907
  p4_4                                             -> Net_908
  p4_0                                             -> Net_910
  agr5_x_sar_1_vplus                               -> AmuxNet::\APPS_ADC:AMuxHw_2\
  agr5                                             -> AmuxNet::\APPS_ADC:AMuxHw_2\
  agr5_x_p15_1                                     -> AmuxNet::\APPS_ADC:AMuxHw_2\
  agr5_x_p3_1                                      -> AmuxNet::\APPS_ADC:AMuxHw_2\
  agr5_x_p3_5                                      -> AmuxNet::\APPS_ADC:AMuxHw_2\
  agl4_x_sar_0_vplus                               -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl4                                             -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl4_x_p4_0                                      -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl4_x_p4_4                                      -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl4_x_p0_4                                      -> AmuxNet::\TPS_ADC:AMuxHw_2\
}
Mux Info {
  Mux: \APPS_ADC:AMuxHw_2\ {
     Mouth: \APPS_ADC:Net_2803\
     Guts:  AmuxNet::\APPS_ADC:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_1108
      Outer: agr5_x_p3_5
      Inner: __open__
      Path {
        p3_5
        agr5_x_p3_5
        agr5
        agr5_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_1109
      Outer: agr5_x_p3_1
      Inner: __open__
      Path {
        p3_1
        agr5_x_p3_1
        agr5
        agr5_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_1111
      Outer: agr5_x_p15_1
      Inner: __open__
      Path {
        p15_1
        agr5_x_p15_1
        agr5
        agr5_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 3 {
      Net:   Net_1306
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_1308
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_1310
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_1311
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_1313
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_1315
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_1316
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_1318
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_1320
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_1321
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_1323
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_1325
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_1326
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_1328
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_1330
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_1331
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_1333
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_1335
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_1336
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_1338
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_1340
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_1341
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_1343
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_1345
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_1346
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_1348
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_1350
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_1351
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_1353
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_1355
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_1356
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_1358
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_1360
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_1361
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_1363
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_1365
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_1366
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_1368
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_1370
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_1371
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_1373
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_1375
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_1376
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_1378
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_1380
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_1381
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_1382
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_1383
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_1384
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_1385
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_1386
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_1387
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_1388
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_1389
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_1390
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_1391
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_1392
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_1393
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_1394
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_1395
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_1396
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
  Mux: \TPS_ADC:AMuxHw_2\ {
     Mouth: \TPS_ADC:Net_2803\
     Guts:  AmuxNet::\TPS_ADC:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_907
      Outer: agl4_x_p0_4
      Inner: __open__
      Path {
        p0_4
        agl4_x_p0_4
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_908
      Outer: agl4_x_p4_4
      Inner: __open__
      Path {
        p4_4
        agl4_x_p4_4
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_910
      Outer: agl4_x_p4_0
      Inner: __open__
      Path {
        p4_0
        agl4_x_p4_0
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_911
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_913
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_915
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_916
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_918
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_920
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_921
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_923
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_925
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_926
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_928
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_930
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_931
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_933
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_935
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_936
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_938
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_940
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_941
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_943
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_945
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_946
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_948
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_950
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_951
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_953
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_955
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_956
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_958
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_960
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_961
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_963
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_965
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_966
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_968
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_970
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_971
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_973
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_975
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_976
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_978
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_980
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_981
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_983
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_985
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_986
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_987
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_988
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_989
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_990
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_991
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_992
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_993
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_994
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_995
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_996
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_997
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_998
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_999
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_1000
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_1001
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 1s.711ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 28.4 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   44 :    4 :   48 :  91.67%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.57
                   Pterms :            4.00
               Macrocells :            3.45
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.025ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.489ms
</CYPRESSTAG>
<CYPRESSTAG name="Simulated Annealing">
Annealing: Elapsed time ==> 0s.014ms
<CYPRESSTAG name="Simulated Annealing Results">
The seed used for moves was 114161200.
Inital cost was 812, final cost is 812 (0.00% improvement).</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         22 :       9.68 :       6.91
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_906, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\TPS_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_906 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \TPS_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\TPS_ADC:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \TPS_ADC:clock\ ,
        control_7 => \TPS_ADC:bSAR_SEQ:control_7\ ,
        control_6 => \TPS_ADC:bSAR_SEQ:control_6\ ,
        control_5 => \TPS_ADC:bSAR_SEQ:control_5\ ,
        control_4 => \TPS_ADC:bSAR_SEQ:control_4\ ,
        control_3 => \TPS_ADC:bSAR_SEQ:control_3\ ,
        control_2 => \TPS_ADC:bSAR_SEQ:control_2\ ,
        control_1 => \TPS_ADC:bSAR_SEQ:load_period\ ,
        control_0 => \TPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statuscell: Name =\TPS_ADC:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \TPS_ADC:clock\ ,
        status_0 => Net_906 ,
        clk_en => \TPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statuscell: Name =\APPS_ADC:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \APPS_ADC:clock\ ,
        status_0 => Net_1304 ,
        clk_en => \APPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=3, #inputs=8, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_1304
            + \APPS_ADC:Net_3935\
        );
        Output = \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_906
            + \TPS_ADC:Net_3935\
        );
        Output = \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_905 * !\TPS_ADC:bSAR_SEQ:load_period\
        );
        Output = \TPS_ADC:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_1304, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\APPS_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_1304 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \APPS_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

synccell: Name =\APPS_ADC:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \APPS_ADC:nrq\ ,
        out => \APPS_ADC:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

synccell: Name =\TPS_ADC:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \TPS_ADC:nrq\ ,
        out => \TPS_ADC:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_4\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_5\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_1\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_3\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_2\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\TPS_ADC:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \TPS_ADC:clock\ ,
        load => \TPS_ADC:bSAR_SEQ:load_period\ ,
        enable => \TPS_ADC:bSAR_SEQ:cnt_enable\ ,
        count_6 => \TPS_ADC:bSAR_SEQ:count_6\ ,
        count_5 => \TPS_ADC:ch_addr_5\ ,
        count_4 => \TPS_ADC:ch_addr_4\ ,
        count_3 => \TPS_ADC:ch_addr_3\ ,
        count_2 => \TPS_ADC:ch_addr_2\ ,
        count_1 => \TPS_ADC:ch_addr_1\ ,
        count_0 => \TPS_ADC:ch_addr_0\ ,
        tc => \TPS_ADC:bSAR_SEQ:cnt_tc\ ,
        clk_en => \TPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * !\TPS_ADC:ch_addr_5\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * !\TPS_ADC:ch_addr_4\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * !\TPS_ADC:ch_addr_3\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * !\TPS_ADC:ch_addr_2\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * \TPS_ADC:ch_addr_1\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * !\TPS_ADC:ch_addr_1\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\ * \TPS_ADC:ch_addr_0\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ * !\TPS_ADC:ch_addr_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * \TPS_ADC:ch_addr_5\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * \TPS_ADC:ch_addr_4\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * \TPS_ADC:ch_addr_3\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * \TPS_ADC:ch_addr_2\
            + \TPS_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_1303 * !\APPS_ADC:bSAR_SEQ:load_period\
        );
        Output = \APPS_ADC:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_3\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\APPS_ADC:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \APPS_ADC:clock\ ,
        control_7 => \APPS_ADC:bSAR_SEQ:control_7\ ,
        control_6 => \APPS_ADC:bSAR_SEQ:control_6\ ,
        control_5 => \APPS_ADC:bSAR_SEQ:control_5\ ,
        control_4 => \APPS_ADC:bSAR_SEQ:control_4\ ,
        control_3 => \APPS_ADC:bSAR_SEQ:control_3\ ,
        control_2 => \APPS_ADC:bSAR_SEQ:control_2\ ,
        control_1 => \APPS_ADC:bSAR_SEQ:load_period\ ,
        control_0 => \APPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_1\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * !\APPS_ADC:ch_addr_5\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * !\APPS_ADC:ch_addr_4\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * !\APPS_ADC:ch_addr_3\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * !\APPS_ADC:ch_addr_2\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * \APPS_ADC:ch_addr_1\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * !\APPS_ADC:ch_addr_1\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\ * \APPS_ADC:ch_addr_0\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ * !\APPS_ADC:ch_addr_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

count7cell: Name =\APPS_ADC:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \APPS_ADC:clock\ ,
        load => \APPS_ADC:bSAR_SEQ:load_period\ ,
        enable => \APPS_ADC:bSAR_SEQ:cnt_enable\ ,
        count_6 => \APPS_ADC:bSAR_SEQ:count_6\ ,
        count_5 => \APPS_ADC:ch_addr_5\ ,
        count_4 => \APPS_ADC:ch_addr_4\ ,
        count_3 => \APPS_ADC:ch_addr_3\ ,
        count_2 => \APPS_ADC:ch_addr_2\ ,
        count_1 => \APPS_ADC:ch_addr_1\ ,
        count_0 => \APPS_ADC:ch_addr_0\ ,
        tc => \APPS_ADC:bSAR_SEQ:cnt_tc\ ,
        clk_en => \APPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * \APPS_ADC:ch_addr_5\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * \APPS_ADC:ch_addr_4\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * \APPS_ADC:ch_addr_3\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * \APPS_ADC:ch_addr_2\
            + \APPS_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_5\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_4\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_2\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }
}

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,4)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }
}

Intr hod @ [IntrHod=(0)]: 
  Intr@ [IntrHod=(0)][IntrId=(0)] 
    interrupt: Name =\APPS_ADC:IRQ\
        PORT MAP (
            interrupt => Net_1304 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrHod=(0)][IntrId=(1)] 
    interrupt: Name =\TPS_ADC:IRQ\
        PORT MAP (
            interrupt => Net_906 );
        Properties:
        {
            int_type = "10"
        }
Drq hod @ [DrqHod=(0)]: 
  Dma@ [DrqHod=(0)][DrqId=(0)] 
    drqcell: Name =\APPS_ADC:FinalBuf\
        PORT MAP (
            dmareq => \APPS_ADC:Net_3698\ ,
            termin => zero ,
            termout => \APPS_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqHod=(0)][DrqId=(1)] 
    drqcell: Name =\APPS_ADC:TempBuf\
        PORT MAP (
            dmareq => \APPS_ADC:Net_3830\ ,
            termin => zero ,
            termout => \APPS_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqHod=(0)][DrqId=(2)] 
    drqcell: Name =\TPS_ADC:FinalBuf\
        PORT MAP (
            dmareq => \TPS_ADC:Net_3698\ ,
            termin => zero ,
            termout => \TPS_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqHod=(0)][DrqId=(3)] 
    drqcell: Name =\TPS_ADC:TempBuf\
        PORT MAP (
            dmareq => \TPS_ADC:Net_3830\ ,
            termin => zero ,
            termout => \TPS_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=4]: 
Pin : Name = TPS_0(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => TPS_0(0)__PA ,
        analog_term => Net_907 ,
        pad => TPS_0(0)_PAD ,
        input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

Port 1 is empty
Port 2 is empty
Port 3 contains the following IO cells:
[IoId=1]: 
Pin : Name = APPS_2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => APPS_2(0)__PA ,
        analog_term => Net_1109 ,
        pad => APPS_2(0)_PAD ,
        input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = APPS_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => APPS_1(0)__PA ,
        analog_term => Net_1108 ,
        pad => APPS_1(0)_PAD ,
        input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

Port 4 contains the following IO cells:
[IoId=0]: 
Pin : Name = TPS_2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => TPS_2(0)__PA ,
        analog_term => Net_910 ,
        pad => TPS_2(0)_PAD ,
        input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = TPS_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => TPS_1(0)__PA ,
        analog_term => Net_908 ,
        pad => TPS_1(0)_PAD ,
        input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

Port 5 is empty
Port 6 is empty
Port 12 is empty
Port 15 contains the following IO cells:
[IoId=1]: 
Pin : Name = APPS_3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => APPS_3(0)__PA ,
        analog_term => Net_1111 ,
        pad => APPS_3(0)_PAD ,
        input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

CAN Fixed Block group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ [FFB(Clock,0)]: 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \APPS_ADC:clock\ ,
            dclk_0 => \APPS_ADC:clock_local\ ,
            dclk_glb_1 => \TPS_ADC:clock\ ,
            dclk_1 => \TPS_ADC:clock_local\ );
        Properties:
        {
        }
Comparator Fixed Block group 0: empty
DFB Fixed Block group 0: empty
DSM Fixed Block group 0: empty
Decimator Fixed Block group 0: empty
EMIF Fixed Block group 0: empty
I2C Fixed Block group 0: empty
LCD Fixed Block group 0: empty
LVD group 0: empty
PM group 0: empty
SC Fixed Block group 0: empty
SPC group 0: empty
Timer Fixed Block group 0: empty
USB Fixed Block group 0: empty
VIDAC Fixed Block group 0: empty
Opamp Fixed Block group 0: empty
CapSense Buffer group 0: empty
Vref group 0: 
    Vref Block @ [FFB(Vref,3)]: 
    vrefcell: Name =\APPS_ADC:SAR:vRef_1024\
        PORT MAP (
            vout => \APPS_ADC:SAR:Net_248\ );
        Properties:
        {
            autoenable = 1
            guid = "89B398AD-36A8-4627-9212-707F2986319E"
            ignoresleep = 0
            name = "1.024V"
        }
LPF Fixed Block group 0: empty
SAR Fixed Block group 0: 
    SAR Block @ [FFB(SAR,0)]: 
    sarcell: Name =\TPS_ADC:SAR:ADC_SAR\
        PORT MAP (
            vplus => \TPS_ADC:Net_2803\ ,
            vminus => \TPS_ADC:SAR:Net_126\ ,
            ext_pin => \TPS_ADC:SAR:Net_215\ ,
            vrefhi_out => \TPS_ADC:SAR:Net_126\ ,
            vref => \APPS_ADC:SAR:Net_248\ ,
            clk_udb => \TPS_ADC:clock_local\ ,
            irq => \TPS_ADC:SAR:Net_252\ ,
            next => Net_905 ,
            data_out_udb_11 => \TPS_ADC:SAR:Net_207_11\ ,
            data_out_udb_10 => \TPS_ADC:SAR:Net_207_10\ ,
            data_out_udb_9 => \TPS_ADC:SAR:Net_207_9\ ,
            data_out_udb_8 => \TPS_ADC:SAR:Net_207_8\ ,
            data_out_udb_7 => \TPS_ADC:SAR:Net_207_7\ ,
            data_out_udb_6 => \TPS_ADC:SAR:Net_207_6\ ,
            data_out_udb_5 => \TPS_ADC:SAR:Net_207_5\ ,
            data_out_udb_4 => \TPS_ADC:SAR:Net_207_4\ ,
            data_out_udb_3 => \TPS_ADC:SAR:Net_207_3\ ,
            data_out_udb_2 => \TPS_ADC:SAR:Net_207_2\ ,
            data_out_udb_1 => \TPS_ADC:SAR:Net_207_1\ ,
            data_out_udb_0 => \TPS_ADC:SAR:Net_207_0\ ,
            eof_udb => \TPS_ADC:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
    SAR Block @ [FFB(SAR,1)]: 
    sarcell: Name =\APPS_ADC:SAR:ADC_SAR\
        PORT MAP (
            vplus => \APPS_ADC:Net_2803\ ,
            vminus => \APPS_ADC:SAR:Net_126\ ,
            ext_pin => \APPS_ADC:SAR:Net_215\ ,
            vrefhi_out => \APPS_ADC:SAR:Net_126\ ,
            vref => \APPS_ADC:SAR:Net_248\ ,
            clk_udb => \APPS_ADC:clock_local\ ,
            irq => \APPS_ADC:SAR:Net_252\ ,
            next => Net_1303 ,
            data_out_udb_11 => \APPS_ADC:SAR:Net_207_11\ ,
            data_out_udb_10 => \APPS_ADC:SAR:Net_207_10\ ,
            data_out_udb_9 => \APPS_ADC:SAR:Net_207_9\ ,
            data_out_udb_8 => \APPS_ADC:SAR:Net_207_8\ ,
            data_out_udb_7 => \APPS_ADC:SAR:Net_207_7\ ,
            data_out_udb_6 => \APPS_ADC:SAR:Net_207_6\ ,
            data_out_udb_5 => \APPS_ADC:SAR:Net_207_5\ ,
            data_out_udb_4 => \APPS_ADC:SAR:Net_207_4\ ,
            data_out_udb_3 => \APPS_ADC:SAR:Net_207_3\ ,
            data_out_udb_2 => \APPS_ADC:SAR:Net_207_2\ ,
            data_out_udb_1 => \APPS_ADC:SAR:Net_207_1\ ,
            data_out_udb_0 => \APPS_ADC:SAR:Net_207_0\ ,
            eof_udb => \APPS_ADC:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\APPS_ADC:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_1396 ,
            muxin_62 => Net_1395 ,
            muxin_61 => Net_1394 ,
            muxin_60 => Net_1393 ,
            muxin_59 => Net_1392 ,
            muxin_58 => Net_1391 ,
            muxin_57 => Net_1390 ,
            muxin_56 => Net_1389 ,
            muxin_55 => Net_1388 ,
            muxin_54 => Net_1387 ,
            muxin_53 => Net_1386 ,
            muxin_52 => Net_1385 ,
            muxin_51 => Net_1384 ,
            muxin_50 => Net_1383 ,
            muxin_49 => Net_1382 ,
            muxin_48 => Net_1381 ,
            muxin_47 => Net_1380 ,
            muxin_46 => Net_1378 ,
            muxin_45 => Net_1376 ,
            muxin_44 => Net_1375 ,
            muxin_43 => Net_1373 ,
            muxin_42 => Net_1371 ,
            muxin_41 => Net_1370 ,
            muxin_40 => Net_1368 ,
            muxin_39 => Net_1366 ,
            muxin_38 => Net_1365 ,
            muxin_37 => Net_1363 ,
            muxin_36 => Net_1361 ,
            muxin_35 => Net_1360 ,
            muxin_34 => Net_1358 ,
            muxin_33 => Net_1356 ,
            muxin_32 => Net_1355 ,
            muxin_31 => Net_1353 ,
            muxin_30 => Net_1351 ,
            muxin_29 => Net_1350 ,
            muxin_28 => Net_1348 ,
            muxin_27 => Net_1346 ,
            muxin_26 => Net_1345 ,
            muxin_25 => Net_1343 ,
            muxin_24 => Net_1341 ,
            muxin_23 => Net_1340 ,
            muxin_22 => Net_1338 ,
            muxin_21 => Net_1336 ,
            muxin_20 => Net_1335 ,
            muxin_19 => Net_1333 ,
            muxin_18 => Net_1331 ,
            muxin_17 => Net_1330 ,
            muxin_16 => Net_1328 ,
            muxin_15 => Net_1326 ,
            muxin_14 => Net_1325 ,
            muxin_13 => Net_1323 ,
            muxin_12 => Net_1321 ,
            muxin_11 => Net_1320 ,
            muxin_10 => Net_1318 ,
            muxin_9 => Net_1316 ,
            muxin_8 => Net_1315 ,
            muxin_7 => Net_1313 ,
            muxin_6 => Net_1311 ,
            muxin_5 => Net_1310 ,
            muxin_4 => Net_1308 ,
            muxin_3 => Net_1306 ,
            muxin_2 => Net_1111 ,
            muxin_1 => Net_1109 ,
            muxin_0 => Net_1108 ,
            hw_ctrl_en_63 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_3\ ,
            vout => \APPS_ADC:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =\TPS_ADC:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_1001 ,
            muxin_62 => Net_1000 ,
            muxin_61 => Net_999 ,
            muxin_60 => Net_998 ,
            muxin_59 => Net_997 ,
            muxin_58 => Net_996 ,
            muxin_57 => Net_995 ,
            muxin_56 => Net_994 ,
            muxin_55 => Net_993 ,
            muxin_54 => Net_992 ,
            muxin_53 => Net_991 ,
            muxin_52 => Net_990 ,
            muxin_51 => Net_989 ,
            muxin_50 => Net_988 ,
            muxin_49 => Net_987 ,
            muxin_48 => Net_986 ,
            muxin_47 => Net_985 ,
            muxin_46 => Net_983 ,
            muxin_45 => Net_981 ,
            muxin_44 => Net_980 ,
            muxin_43 => Net_978 ,
            muxin_42 => Net_976 ,
            muxin_41 => Net_975 ,
            muxin_40 => Net_973 ,
            muxin_39 => Net_971 ,
            muxin_38 => Net_970 ,
            muxin_37 => Net_968 ,
            muxin_36 => Net_966 ,
            muxin_35 => Net_965 ,
            muxin_34 => Net_963 ,
            muxin_33 => Net_961 ,
            muxin_32 => Net_960 ,
            muxin_31 => Net_958 ,
            muxin_30 => Net_956 ,
            muxin_29 => Net_955 ,
            muxin_28 => Net_953 ,
            muxin_27 => Net_951 ,
            muxin_26 => Net_950 ,
            muxin_25 => Net_948 ,
            muxin_24 => Net_946 ,
            muxin_23 => Net_945 ,
            muxin_22 => Net_943 ,
            muxin_21 => Net_941 ,
            muxin_20 => Net_940 ,
            muxin_19 => Net_938 ,
            muxin_18 => Net_936 ,
            muxin_17 => Net_935 ,
            muxin_16 => Net_933 ,
            muxin_15 => Net_931 ,
            muxin_14 => Net_930 ,
            muxin_13 => Net_928 ,
            muxin_12 => Net_926 ,
            muxin_11 => Net_925 ,
            muxin_10 => Net_923 ,
            muxin_9 => Net_921 ,
            muxin_8 => Net_920 ,
            muxin_7 => Net_918 ,
            muxin_6 => Net_916 ,
            muxin_5 => Net_915 ,
            muxin_4 => Net_913 ,
            muxin_3 => Net_911 ,
            muxin_2 => Net_910 ,
            muxin_1 => Net_908 ,
            muxin_0 => Net_907 ,
            hw_ctrl_en_63 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_3\ ,
            vout => \TPS_ADC:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |           | 
Port | Pin | Fixed |      Type |       Drive Mode |      Name | Connections
-----+-----+-------+-----------+------------------+-----------+------------------------------------------------------------
   0 |   4 |       |      NONE |      HI_Z_ANALOG |  TPS_0(0) | In(\TPS_ADC:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_907)
-----+-----+-------+-----------+------------------+-----------+------------------------------------------------------------
   3 |   1 |       |      NONE |      HI_Z_ANALOG | APPS_2(0) | In(\APPS_ADC:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_1109)
     |   5 |       |      NONE |      HI_Z_ANALOG | APPS_1(0) | In(\APPS_ADC:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_1108)
-----+-----+-------+-----------+------------------+-----------+------------------------------------------------------------
   4 |   0 |       |      NONE |      HI_Z_ANALOG |  TPS_2(0) | In(\TPS_ADC:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_910)
     |   4 |       |      NONE |      HI_Z_ANALOG |  TPS_1(0) | In(\TPS_ADC:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_908)
-----+-----+-------+-----------+------------------+-----------+------------------------------------------------------------
  15 |   1 |       |      NONE |      HI_Z_ANALOG | APPS_3(0) | In(\APPS_ADC:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_1111)
---------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.040ms
Digital Placement phase: Elapsed time ==> 30s.214ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 21s.847ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream and API generation">
Bitstream and API generation phase: Elapsed time ==> 1s.021ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream verification">
Bitstream verification phase: Elapsed time ==> 0s.190ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in E-Throttle-Mainboard_timing.html.
Static timing analysis phase: Elapsed time ==> 1s.688ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.766ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 111s.649ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 111s.906ms
API generation phase: Elapsed time ==> 2s.857ms
Dependency generation phase: Elapsed time ==> 0s.087ms
Cleanup phase: Elapsed time ==> 0s.006ms
