ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"APPS_ADC_IntClock.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.APPS_ADC_IntClock_Start,"ax",%progbits
  19              		.align	2
  20              		.global	APPS_ADC_IntClock_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	APPS_ADC_IntClock_Start, %function
  24              	APPS_ADC_IntClock_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\APPS_ADC_IntClock.c"
   1:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * File Name: APPS_ADC_IntClock.c
   3:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
   5:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Description:
   6:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
   8:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Note:
   9:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  10:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  17:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #include "APPS_ADC_IntClock.h"
  19:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  20:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  27:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  29:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  30:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_Start
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 2


  32:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  34:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
  35:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  38:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
  39:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
  40:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  41:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
  42:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
  43:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  44:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** void APPS_ADC_IntClock_Start(void) 
  46:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     APPS_ADC_IntClock_CLKEN |= APPS_ADC_IntClock_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F00102 		orr	r2, r2, #1
  36 0008 1A70     		strb	r2, [r3]
  49:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 	APPS_ADC_IntClock_CLKSTBY |= APPS_ADC_IntClock_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 1033     		adds	r3, r3, #16
  39 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  40 000e 42F00102 		orr	r2, r2, #1
  41 0012 1A70     		strb	r2, [r3]
  42 0014 7047     		bx	lr
  43              	.L3:
  44 0016 00BF     		.align	2
  45              	.L2:
  46 0018 A2430040 		.word	1073759138
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	APPS_ADC_IntClock_Start, .-APPS_ADC_IntClock_Start
  50              		.section	.text.APPS_ADC_IntClock_Stop,"ax",%progbits
  51              		.align	2
  52              		.global	APPS_ADC_IntClock_Stop
  53              		.thumb
  54              		.thumb_func
  55              		.type	APPS_ADC_IntClock_Stop, %function
  56              	APPS_ADC_IntClock_Stop:
  57              	.LFB1:
  50:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
  51:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  52:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  53:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_Stop
  55:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  57:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 3


  58:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  64:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
  65:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
  66:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  67:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
  68:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
  69:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  70:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** void APPS_ADC_IntClock_Stop(void) 
  72:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
  58              		.loc 1 72 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     APPS_ADC_IntClock_CLKEN &= (uint8)(~APPS_ADC_IntClock_CLKEN_MASK);
  63              		.loc 1 74 0
  64 0000 054B     		ldr	r3, .L5
  65 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  66 0004 02F0FE02 		and	r2, r2, #254
  67 0008 1A70     		strb	r2, [r3]
  75:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 	APPS_ADC_IntClock_CLKSTBY &= (uint8)(~APPS_ADC_IntClock_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 000a 1033     		adds	r3, r3, #16
  70 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  71 000e 02F0FE02 		and	r2, r2, #254
  72 0012 1A70     		strb	r2, [r3]
  73 0014 7047     		bx	lr
  74              	.L6:
  75 0016 00BF     		.align	2
  76              	.L5:
  77 0018 A2430040 		.word	1073759138
  78              		.cfi_endproc
  79              	.LFE1:
  80              		.size	APPS_ADC_IntClock_Stop, .-APPS_ADC_IntClock_Stop
  81              		.section	.text.APPS_ADC_IntClock_StopBlock,"ax",%progbits
  82              		.align	2
  83              		.global	APPS_ADC_IntClock_StopBlock
  84              		.thumb
  85              		.thumb_func
  86              		.type	APPS_ADC_IntClock_StopBlock, %function
  87              	APPS_ADC_IntClock_StopBlock:
  88              	.LFB2:
  76:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
  77:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  78:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  79:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  81:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
  82:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_StopBlock
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 4


  84:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  86:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
  87:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  93:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
  94:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
  95:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  96:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
  97:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
  98:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
  99:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** void APPS_ADC_IntClock_StopBlock(void) 
 101:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
  89              		.loc 1 101 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 102:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     if ((APPS_ADC_IntClock_CLKEN & APPS_ADC_IntClock_CLKEN_MASK) != 0u)
  94              		.loc 1 102 0
  95 0000 174B     		ldr	r3, .L11
  96 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  97 0004 13F0010F 		tst	r3, #1
  98 0008 28D0     		beq	.L7
  99              	.LBB2:
 103:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     {
 104:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 107:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CLK_DIST_LD = 0u;
 100              		.loc 1 107 0
 101 000a 164B     		ldr	r3, .L11+4
 102 000c 0022     		movs	r2, #0
 103 000e 1A70     		strb	r2, [r3]
 108:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 109:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #if defined(APPS_ADC_IntClock__CFG3)
 111:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CLK_DIST_AMASK = APPS_ADC_IntClock_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #else
 114:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CLK_DIST_DMASK = APPS_ADC_IntClock_CLKEN_MASK;
 104              		.loc 1 114 0
 105 0010 0120     		movs	r0, #1
 106 0012 1549     		ldr	r1, .L11+8
 107 0014 0870     		strb	r0, [r1]
 115:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CLK_DIST_AMASK = 0x00u;
 108              		.loc 1 115 0
 109 0016 0431     		adds	r1, r1, #4
 110 0018 0A70     		strb	r2, [r1]
 116:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #endif /* APPS_ADC_IntClock__CFG3 */
 117:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 118:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         /* Clear mask of bus clock. */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 5


 119:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 111              		.loc 1 119 0
 112 001a 144A     		ldr	r2, .L11+12
 113 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 114 001e 01F07F01 		and	r1, r1, #127
 115 0022 1170     		strb	r1, [r2]
 120:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 121:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         oldDivider = CY_GET_REG16(APPS_ADC_IntClock_DIV_PTR);
 116              		.loc 1 121 0
 117 0024 7832     		adds	r2, r2, #120
 118 0026 1188     		ldrh	r1, [r2]
 119 0028 89B2     		uxth	r1, r1
 120              	.LVL0:
 122:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 121              		.loc 1 122 0
 122 002a 7E3A     		subs	r2, r2, #126
 123 002c 1180     		strh	r1, [r2]	@ movhi
 123:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124              		.loc 1 123 0
 125 002e 0722     		movs	r2, #7
 126 0030 1A70     		strb	r2, [r3]
 124:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 125:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 127              		.loc 1 126 0
 128 0032 1A46     		mov	r2, r3
 129              	.L9:
 130              		.loc 1 126 0 is_stmt 0 discriminator 1
 131 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 132 0036 13F0010F 		tst	r3, #1
 133 003a FBD1     		bne	.L9
 127:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 129:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_CLKEN &= (uint8)(~APPS_ADC_IntClock_CLKEN_MASK);
 134              		.loc 1 130 0 is_stmt 1
 135 003c 084B     		ldr	r3, .L11
 136 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 137 0040 02F0FE02 		and	r2, r2, #254
 138 0044 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_CLKSTBY &= (uint8)(~APPS_ADC_IntClock_CLKSTBY_MASK);
 139              		.loc 1 131 0
 140 0046 1033     		adds	r3, r3, #16
 141 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 142 004a 02F0FE02 		and	r2, r2, #254
 143 004e 1A70     		strb	r2, [r3]
 132:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 133:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CLK_DIST_LD = 0x00u;
 144              		.loc 1 135 0
 145 0050 0022     		movs	r2, #0
 146 0052 A3F2B133 		subw	r3, r3, #945
 147 0056 1A70     		strb	r2, [r3]
 136:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         CY_SET_REG16(APPS_ADC_IntClock_DIV_PTR, oldDivider);
 148              		.loc 1 136 0
 149 0058 7F33     		adds	r3, r3, #127
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 6


 150 005a 1980     		strh	r1, [r3]	@ movhi
 151              	.LVL1:
 152              	.L7:
 153 005c 7047     		bx	lr
 154              	.L12:
 155 005e 00BF     		.align	2
 156              	.L11:
 157 0060 A2430040 		.word	1073759138
 158 0064 01400040 		.word	1073758209
 159 0068 10400040 		.word	1073758224
 160 006c 08400040 		.word	1073758216
 161              	.LBE2:
 162              		.cfi_endproc
 163              	.LFE2:
 164              		.size	APPS_ADC_IntClock_StopBlock, .-APPS_ADC_IntClock_StopBlock
 165              		.section	.text.APPS_ADC_IntClock_StandbyPower,"ax",%progbits
 166              		.align	2
 167              		.global	APPS_ADC_IntClock_StandbyPower
 168              		.thumb
 169              		.thumb_func
 170              		.type	APPS_ADC_IntClock_StandbyPower, %function
 171              	APPS_ADC_IntClock_StandbyPower:
 172              	.LFB3:
 137:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     }
 139:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
 140:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 142:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 143:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_StandbyPower
 145:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 147:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
 148:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 150:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
 151:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 153:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
 154:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
 155:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 156:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** void APPS_ADC_IntClock_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 173              		.loc 1 158 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 159:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     if(state == 0u)
 179              		.loc 1 159 0
 180 0000 28B9     		cbnz	r0, .L14
 160:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     {
 161:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_CLKSTBY &= (uint8)(~APPS_ADC_IntClock_CLKSTBY_MASK);
 181              		.loc 1 161 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 7


 182 0002 064B     		ldr	r3, .L16
 183 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 184 0006 02F0FE02 		and	r2, r2, #254
 185 000a 1A70     		strb	r2, [r3]
 186 000c 7047     		bx	lr
 187              	.L14:
 162:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     }
 163:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     else
 164:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     {
 165:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_CLKSTBY |= APPS_ADC_IntClock_CLKSTBY_MASK;
 188              		.loc 1 165 0
 189 000e 034B     		ldr	r3, .L16
 190 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 191 0012 42F00102 		orr	r2, r2, #1
 192 0016 1A70     		strb	r2, [r3]
 193 0018 7047     		bx	lr
 194              	.L17:
 195 001a 00BF     		.align	2
 196              	.L16:
 197 001c B2430040 		.word	1073759154
 198              		.cfi_endproc
 199              	.LFE3:
 200              		.size	APPS_ADC_IntClock_StandbyPower, .-APPS_ADC_IntClock_StandbyPower
 201              		.section	.text.APPS_ADC_IntClock_GetDividerRegister,"ax",%progbits
 202              		.align	2
 203              		.global	APPS_ADC_IntClock_GetDividerRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	APPS_ADC_IntClock_GetDividerRegister, %function
 207              	APPS_ADC_IntClock_GetDividerRegister:
 208              	.LFB5:
 166:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     }
 167:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
 168:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 169:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 170:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_SetDividerRegister
 172:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 174:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
 175:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 180:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
 181:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   cycle.
 188:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 189:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
 190:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
 191:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 8


 192:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** void APPS_ADC_IntClock_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                                 
 195:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 196:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 198:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     uint8 currSrc = APPS_ADC_IntClock_GetSourceRegister();
 199:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     uint16 oldDivider = APPS_ADC_IntClock_GetDividerRegister();
 200:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 201:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     {
 203:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         enabled = APPS_ADC_IntClock_CLKEN & APPS_ADC_IntClock_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 205:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         {
 207:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             {
 210:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CY_SET_REG16(APPS_ADC_IntClock_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 APPS_ADC_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             }
 216:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             else
 217:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             {
 218:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 APPS_ADC_IntClock_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CY_SET_REG16(APPS_ADC_IntClock_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             }
 223:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         }
 224:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         else
 225:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         {
 226:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 			
 227:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             {
 229:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 231:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #if defined(APPS_ADC_IntClock__CFG3)
 233:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_AMASK = APPS_ADC_IntClock_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #else
 236:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_DMASK = APPS_ADC_IntClock_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #endif /* APPS_ADC_IntClock__CFG3 */
 239:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 242:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 if (((APPS_ADC_IntClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 {
 245:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 9


 249:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 253:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     APPS_ADC_IntClock_CLKEN &= (uint8)(~APPS_ADC_IntClock_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 255:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 }
 260:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             }
 261:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 262:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             if ((APPS_ADC_IntClock_CLKEN & APPS_ADC_IntClock_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             {
 265:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 268:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             }
 271:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             else
 272:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             {
 273:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CY_SET_REG16(APPS_ADC_IntClock_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 				APPS_ADC_IntClock_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             }
 277:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         }
 278:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     }
 279:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
 280:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 281:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 282:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_GetDividerRegister
 284:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 286:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
 287:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 289:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
 290:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
 291:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 292:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
 293:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 296:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** uint16 APPS_ADC_IntClock_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 209              		.loc 1 298 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     return CY_GET_REG16(APPS_ADC_IntClock_DIV_PTR);
 214              		.loc 1 299 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 10


 215 0000 014B     		ldr	r3, .L19
 216 0002 1888     		ldrh	r0, [r3]
 300:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
 217              		.loc 1 300 0
 218 0004 80B2     		uxth	r0, r0
 219 0006 7047     		bx	lr
 220              	.L20:
 221              		.align	2
 222              	.L19:
 223 0008 80400040 		.word	1073758336
 224              		.cfi_endproc
 225              	.LFE5:
 226              		.size	APPS_ADC_IntClock_GetDividerRegister, .-APPS_ADC_IntClock_GetDividerRegister
 227              		.section	.text.APPS_ADC_IntClock_SetModeRegister,"ax",%progbits
 228              		.align	2
 229              		.global	APPS_ADC_IntClock_SetModeRegister
 230              		.thumb
 231              		.thumb_func
 232              		.type	APPS_ADC_IntClock_SetModeRegister, %function
 233              	APPS_ADC_IntClock_SetModeRegister:
 234              	.LFB6:
 301:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 302:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 303:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_SetModeRegister
 305:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 307:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
 308:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 313:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
 314:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 value.
 319:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 328:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
 329:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
 330:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 331:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** void APPS_ADC_IntClock_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 235              		.loc 1 333 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 11


 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL3:
 334:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     APPS_ADC_IntClock_MOD_SRC |= modeBitMask & (uint8)APPS_ADC_IntClock_MODE_MASK;
 241              		.loc 1 334 0
 242 0000 034B     		ldr	r3, .L22
 243 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 244 0004 00F0F800 		and	r0, r0, #248
 245              	.LVL4:
 246 0008 0243     		orrs	r2, r2, r0
 247 000a 1A70     		strb	r2, [r3]
 248 000c 7047     		bx	lr
 249              	.L23:
 250 000e 00BF     		.align	2
 251              	.L22:
 252 0010 82400040 		.word	1073758338
 253              		.cfi_endproc
 254              	.LFE6:
 255              		.size	APPS_ADC_IntClock_SetModeRegister, .-APPS_ADC_IntClock_SetModeRegister
 256              		.section	.text.APPS_ADC_IntClock_ClearModeRegister,"ax",%progbits
 257              		.align	2
 258              		.global	APPS_ADC_IntClock_ClearModeRegister
 259              		.thumb
 260              		.thumb_func
 261              		.type	APPS_ADC_IntClock_ClearModeRegister, %function
 262              	APPS_ADC_IntClock_ClearModeRegister:
 263              	.LFB7:
 335:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
 336:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 337:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 338:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_ClearModeRegister
 340:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 342:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
 343:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 348:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
 349:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 value.
 354:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 363:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
 364:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 12


 365:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 366:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** void APPS_ADC_IntClock_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 264              		.loc 1 368 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL5:
 369:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     APPS_ADC_IntClock_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(APPS_ADC_IntClock_MODE_MA
 270              		.loc 1 369 0
 271 0000 044B     		ldr	r3, .L25
 272 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 273 0004 C043     		mvns	r0, r0
 274              	.LVL6:
 275 0006 C1B2     		uxtb	r1, r0
 276 0008 41F00701 		orr	r1, r1, #7
 277 000c 0A40     		ands	r2, r2, r1
 278 000e 1A70     		strb	r2, [r3]
 279 0010 7047     		bx	lr
 280              	.L26:
 281 0012 00BF     		.align	2
 282              	.L25:
 283 0014 82400040 		.word	1073758338
 284              		.cfi_endproc
 285              	.LFE7:
 286              		.size	APPS_ADC_IntClock_ClearModeRegister, .-APPS_ADC_IntClock_ClearModeRegister
 287              		.section	.text.APPS_ADC_IntClock_GetModeRegister,"ax",%progbits
 288              		.align	2
 289              		.global	APPS_ADC_IntClock_GetModeRegister
 290              		.thumb
 291              		.thumb_func
 292              		.type	APPS_ADC_IntClock_GetModeRegister, %function
 293              	APPS_ADC_IntClock_GetModeRegister:
 294              	.LFB8:
 370:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
 371:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 372:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 373:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_GetModeRegister
 375:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 377:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
 378:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 380:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
 381:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
 382:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 383:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
 384:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 387:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** uint8 APPS_ADC_IntClock_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 295              		.loc 1 389 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 13


 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     return APPS_ADC_IntClock_MOD_SRC & (uint8)(APPS_ADC_IntClock_MODE_MASK);
 300              		.loc 1 390 0
 301 0000 024B     		ldr	r3, .L28
 302 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
 303              		.loc 1 391 0
 304 0004 00F0F800 		and	r0, r0, #248
 305 0008 7047     		bx	lr
 306              	.L29:
 307 000a 00BF     		.align	2
 308              	.L28:
 309 000c 82400040 		.word	1073758338
 310              		.cfi_endproc
 311              	.LFE8:
 312              		.size	APPS_ADC_IntClock_GetModeRegister, .-APPS_ADC_IntClock_GetModeRegister
 313              		.section	.text.APPS_ADC_IntClock_GetSourceRegister,"ax",%progbits
 314              		.align	2
 315              		.global	APPS_ADC_IntClock_GetSourceRegister
 316              		.thumb
 317              		.thumb_func
 318              		.type	APPS_ADC_IntClock_GetSourceRegister, %function
 319              	APPS_ADC_IntClock_GetSourceRegister:
 320              	.LFB10:
 392:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 393:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 394:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_SetSourceRegister
 396:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 398:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
 399:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 402:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
 403:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 415:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
 416:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
 417:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 418:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** void APPS_ADC_IntClock_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 421:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     uint16 currDiv = APPS_ADC_IntClock_GetDividerRegister();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 14


 422:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     uint8 oldSrc = APPS_ADC_IntClock_GetSourceRegister();
 423:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 424:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     {
 427:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC =
 431:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             (APPS_ADC_IntClock_MOD_SRC & (uint8)(~APPS_ADC_IntClock_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     }
 433:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     {
 436:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC =
 439:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             (APPS_ADC_IntClock_MOD_SRC & (uint8)(~APPS_ADC_IntClock_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     }
 442:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     else
 443:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     {
 444:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC =
 445:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             (APPS_ADC_IntClock_MOD_SRC & (uint8)(~APPS_ADC_IntClock_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     }
 447:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
 448:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 449:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 
 450:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Function Name: APPS_ADC_IntClock_GetSourceRegister
 452:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 454:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Summary:
 455:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 457:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Parameters:
 458:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  None
 459:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 460:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** * Returns:
 461:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *
 463:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** uint8 APPS_ADC_IntClock_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 321              		.loc 1 465 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 466:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     return APPS_ADC_IntClock_MOD_SRC & APPS_ADC_IntClock_SRC_SEL_MSK;
 326              		.loc 1 466 0
 327 0000 024B     		ldr	r3, .L31
 328 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** }
 329              		.loc 1 467 0
 330 0004 00F00700 		and	r0, r0, #7
 331 0008 7047     		bx	lr
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 15


 332              	.L32:
 333 000a 00BF     		.align	2
 334              	.L31:
 335 000c 82400040 		.word	1073758338
 336              		.cfi_endproc
 337              	.LFE10:
 338              		.size	APPS_ADC_IntClock_GetSourceRegister, .-APPS_ADC_IntClock_GetSourceRegister
 339              		.section	.text.APPS_ADC_IntClock_SetDividerRegister,"ax",%progbits
 340              		.align	2
 341              		.global	APPS_ADC_IntClock_SetDividerRegister
 342              		.thumb
 343              		.thumb_func
 344              		.type	APPS_ADC_IntClock_SetDividerRegister, %function
 345              	APPS_ADC_IntClock_SetDividerRegister:
 346              	.LFB4:
 195:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 347              		.loc 1 195 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL7:
 352 0000 70B5     		push	{r4, r5, r6, lr}
 353              		.cfi_def_cfa_offset 16
 354              		.cfi_offset 4, -16
 355              		.cfi_offset 5, -12
 356              		.cfi_offset 6, -8
 357              		.cfi_offset 14, -4
 358 0002 0446     		mov	r4, r0
 359 0004 0E46     		mov	r6, r1
 198:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     uint8 currSrc = APPS_ADC_IntClock_GetSourceRegister();
 360              		.loc 1 198 0
 361 0006 FFF7FEFF 		bl	APPS_ADC_IntClock_GetSourceRegister
 362              	.LVL8:
 363 000a 0546     		mov	r5, r0
 364              	.LVL9:
 199:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     uint16 oldDivider = APPS_ADC_IntClock_GetDividerRegister();
 365              		.loc 1 199 0
 366 000c FFF7FEFF 		bl	APPS_ADC_IntClock_GetDividerRegister
 367              	.LVL10:
 368 0010 0346     		mov	r3, r0
 369              	.LVL11:
 201:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     if (clkDivider != oldDivider)
 370              		.loc 1 201 0
 371 0012 8442     		cmp	r4, r0
 372 0014 58D0     		beq	.L33
 203:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         enabled = APPS_ADC_IntClock_CLKEN & APPS_ADC_IntClock_CLKEN_MASK;
 373              		.loc 1 203 0
 374 0016 2D4A     		ldr	r2, .L47
 375 0018 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 376 001a 02F00101 		and	r1, r2, #1
 377              	.LVL12:
 205:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 378              		.loc 1 205 0
 379 001e 95B9     		cbnz	r5, .L35
 205:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 380              		.loc 1 205 0 is_stmt 0 discriminator 1
 381 0020 00B1     		cbz	r0, .L36
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 16


 382 0022 84B9     		cbnz	r4, .L35
 383              	.L36:
 208:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             if (oldDivider == 0u)
 384              		.loc 1 208 0 is_stmt 1
 385 0024 3BB9     		cbnz	r3, .L37
 213:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CY_SET_REG16(APPS_ADC_IntClock_DIV_PTR, clkDivider);
 386              		.loc 1 213 0
 387 0026 2A4B     		ldr	r3, .L47+4
 388 0028 1C80     		strh	r4, [r3]	@ movhi
 214:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 APPS_ADC_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 389              		.loc 1 214 0
 390 002a 0233     		adds	r3, r3, #2
 391 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 392 002e 02F0BF02 		and	r2, r2, #191
 393 0032 1A70     		strb	r2, [r3]
 394 0034 70BD     		pop	{r4, r5, r6, pc}
 395              	.LVL13:
 396              	.L37:
 220:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 APPS_ADC_IntClock_MOD_SRC |= CYCLK_SSS;
 397              		.loc 1 220 0
 398 0036 274B     		ldr	r3, .L47+8
 399 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 400 003a 42F04002 		orr	r2, r2, #64
 401 003e 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CY_SET_REG16(APPS_ADC_IntClock_DIV_PTR, clkDivider);
 402              		.loc 1 221 0
 403 0040 023B     		subs	r3, r3, #2
 404 0042 1C80     		strh	r4, [r3]	@ movhi
 405 0044 70BD     		pop	{r4, r5, r6, pc}
 406              	.LVL14:
 407              	.L35:
 227:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             if (enabled != 0u)
 408              		.loc 1 227 0
 409 0046 29B3     		cbz	r1, .L38
 229:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_LD = 0x00u;
 410              		.loc 1 229 0
 411 0048 0022     		movs	r2, #0
 412 004a 2348     		ldr	r0, .L47+12
 413              	.LVL15:
 414 004c 0270     		strb	r2, [r0]
 236:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_DMASK = APPS_ADC_IntClock_CLKEN_MASK;
 415              		.loc 1 236 0
 416 004e 0125     		movs	r5, #1
 417              	.LVL16:
 418 0050 0F30     		adds	r0, r0, #15
 419 0052 0570     		strb	r5, [r0]
 237:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_AMASK = 0x00u;
 420              		.loc 1 237 0
 421 0054 0430     		adds	r0, r0, #4
 422 0056 0270     		strb	r2, [r0]
 240:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 423              		.loc 1 240 0
 424 0058 204A     		ldr	r2, .L47+16
 425 005a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 426 005c 00F07F00 		and	r0, r0, #127
 427 0060 1070     		strb	r0, [r2]
 243:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 if (((APPS_ADC_IntClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 17


 428              		.loc 1 243 0
 429 0062 7A32     		adds	r2, r2, #122
 430 0064 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 431 0066 12F0080F 		tst	r2, #8
 432 006a 00D0     		beq	.L39
 243:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 if (((APPS_ADC_IntClock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 433              		.loc 1 243 0 is_stmt 0 discriminator 1
 434 006c 94B9     		cbnz	r4, .L38
 435              	.L39:
 246:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 436              		.loc 1 246 0 is_stmt 1
 437 006e 1C4A     		ldr	r2, .L47+20
 438 0070 1380     		strh	r3, [r2]	@ movhi
 247:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 439              		.loc 1 247 0
 440 0072 0722     		movs	r2, #7
 441 0074 184B     		ldr	r3, .L47+12
 442              	.LVL17:
 443 0076 1A70     		strb	r2, [r3]
 250:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 444              		.loc 1 250 0
 445 0078 1A46     		mov	r2, r3
 446              	.L40:
 250:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 447              		.loc 1 250 0 is_stmt 0 discriminator 1
 448 007a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 449 007c 13F0010F 		tst	r3, #1
 450 0080 FBD1     		bne	.L40
 253:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     APPS_ADC_IntClock_CLKEN &= (uint8)(~APPS_ADC_IntClock_CLKEN_MASK);
 451              		.loc 1 253 0 is_stmt 1
 452 0082 124B     		ldr	r3, .L47
 453 0084 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 454 0086 02F0FE02 		and	r2, r2, #254
 455 008a 1A70     		strb	r2, [r3]
 257:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                     CLK_DIST_LD = 0x00u;
 456              		.loc 1 257 0
 457 008c 0022     		movs	r2, #0
 458 008e A3F2A133 		subw	r3, r3, #929
 459 0092 1A70     		strb	r2, [r3]
 460              	.L38:
 263:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             if ((APPS_ADC_IntClock_CLKEN & APPS_ADC_IntClock_CLKEN_MASK) != 0u)
 461              		.loc 1 263 0
 462 0094 0D4B     		ldr	r3, .L47
 463 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 464 0098 13F0010F 		tst	r3, #1
 465 009c 0DD0     		beq	.L41
 266:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 466              		.loc 1 266 0
 467 009e 104B     		ldr	r3, .L47+20
 468 00a0 1C80     		strh	r4, [r3]	@ movhi
 268:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 469              		.loc 1 268 0
 470 00a2 0EB1     		cbz	r6, .L44
 471 00a4 0322     		movs	r2, #3
 472 00a6 00E0     		b	.L42
 473              	.L44:
 474 00a8 0122     		movs	r2, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 18


 475              	.L42:
 268:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 476              		.loc 1 268 0 is_stmt 0 discriminator 3
 477 00aa 0B4B     		ldr	r3, .L47+12
 478 00ac 1A70     		strb	r2, [r3]
 269:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 479              		.loc 1 269 0 is_stmt 1 discriminator 3
 480 00ae 1A46     		mov	r2, r3
 481              	.L43:
 269:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 482              		.loc 1 269 0 is_stmt 0 discriminator 1
 483 00b0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 484 00b2 13F0010F 		tst	r3, #1
 485 00b6 FBD1     		bne	.L43
 486 00b8 70BD     		pop	{r4, r5, r6, pc}
 487              	.L41:
 274:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****                 CY_SET_REG16(APPS_ADC_IntClock_DIV_PTR, clkDivider);
 488              		.loc 1 274 0 is_stmt 1
 489 00ba 054B     		ldr	r3, .L47+4
 490 00bc 1C80     		strh	r4, [r3]	@ movhi
 275:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** 				APPS_ADC_IntClock_CLKEN |= enabled;
 491              		.loc 1 275 0
 492 00be 03F22233 		addw	r3, r3, #802
 493 00c2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 494 00c4 1143     		orrs	r1, r1, r2
 495              	.LVL18:
 496 00c6 1970     		strb	r1, [r3]
 497              	.L33:
 498 00c8 70BD     		pop	{r4, r5, r6, pc}
 499              	.L48:
 500 00ca 00BF     		.align	2
 501              	.L47:
 502 00cc A2430040 		.word	1073759138
 503 00d0 80400040 		.word	1073758336
 504 00d4 82400040 		.word	1073758338
 505 00d8 01400040 		.word	1073758209
 506 00dc 08400040 		.word	1073758216
 507 00e0 02400040 		.word	1073758210
 508              		.cfi_endproc
 509              	.LFE4:
 510              		.size	APPS_ADC_IntClock_SetDividerRegister, .-APPS_ADC_IntClock_SetDividerRegister
 511              		.section	.text.APPS_ADC_IntClock_SetSourceRegister,"ax",%progbits
 512              		.align	2
 513              		.global	APPS_ADC_IntClock_SetSourceRegister
 514              		.thumb
 515              		.thumb_func
 516              		.type	APPS_ADC_IntClock_SetSourceRegister, %function
 517              	APPS_ADC_IntClock_SetSourceRegister:
 518              	.LFB9:
 420:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c **** {
 519              		.loc 1 420 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              	.LVL19:
 524 0000 38B5     		push	{r3, r4, r5, lr}
 525              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 19


 526              		.cfi_offset 3, -16
 527              		.cfi_offset 4, -12
 528              		.cfi_offset 5, -8
 529              		.cfi_offset 14, -4
 530 0002 0446     		mov	r4, r0
 421:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     uint16 currDiv = APPS_ADC_IntClock_GetDividerRegister();
 531              		.loc 1 421 0
 532 0004 FFF7FEFF 		bl	APPS_ADC_IntClock_GetDividerRegister
 533              	.LVL20:
 534 0008 0546     		mov	r5, r0
 535              	.LVL21:
 422:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     uint8 oldSrc = APPS_ADC_IntClock_GetSourceRegister();
 536              		.loc 1 422 0
 537 000a FFF7FEFF 		bl	APPS_ADC_IntClock_GetSourceRegister
 538              	.LVL22:
 424:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 539              		.loc 1 424 0
 540 000e 0346     		mov	r3, r0
 541 0010 60B1     		cbz	r0, .L50
 424:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 542              		.loc 1 424 0 is_stmt 0 discriminator 1
 543 0012 5CB9     		cbnz	r4, .L50
 425:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 544              		.loc 1 425 0 is_stmt 1
 545 0014 55B9     		cbnz	r5, .L50
 429:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC |= CYCLK_SSS;
 546              		.loc 1 429 0
 547 0016 104B     		ldr	r3, .L53
 548 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 549 001a 42F04002 		orr	r2, r2, #64
 550 001e 1A70     		strb	r2, [r3]
 431:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             (APPS_ADC_IntClock_MOD_SRC & (uint8)(~APPS_ADC_IntClock_SRC_SEL_MSK)) | clkSource;
 551              		.loc 1 431 0
 552 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC =
 553              		.loc 1 430 0
 554 0022 02F0F802 		and	r2, r2, #248
 555 0026 1443     		orrs	r4, r4, r2
 556 0028 1C70     		strb	r4, [r3]
 557 002a 38BD     		pop	{r3, r4, r5, pc}
 558              	.LVL23:
 559              	.L50:
 433:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 560              		.loc 1 433 0
 561 002c 63B9     		cbnz	r3, .L52
 433:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 562              		.loc 1 433 0 is_stmt 0 discriminator 1
 563 002e 5CB1     		cbz	r4, .L52
 434:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 564              		.loc 1 434 0 is_stmt 1
 565 0030 55B9     		cbnz	r5, .L52
 439:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             (APPS_ADC_IntClock_MOD_SRC & (uint8)(~APPS_ADC_IntClock_SRC_SEL_MSK)) | clkSource;
 566              		.loc 1 439 0
 567 0032 094B     		ldr	r3, .L53
 568 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC =
 569              		.loc 1 438 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 20


 570 0036 02F0F802 		and	r2, r2, #248
 571 003a 1443     		orrs	r4, r4, r2
 572 003c 1C70     		strb	r4, [r3]
 440:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 573              		.loc 1 440 0
 574 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 575 0040 02F0BF02 		and	r2, r2, #191
 576 0044 1A70     		strb	r2, [r3]
 577 0046 38BD     		pop	{r3, r4, r5, pc}
 578              	.LVL24:
 579              	.L52:
 445:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****             (APPS_ADC_IntClock_MOD_SRC & (uint8)(~APPS_ADC_IntClock_SRC_SEL_MSK)) | clkSource;
 580              		.loc 1 445 0
 581 0048 034B     		ldr	r3, .L53
 582 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/APPS_ADC_IntClock.c ****         APPS_ADC_IntClock_MOD_SRC =
 583              		.loc 1 444 0
 584 004c 02F0F802 		and	r2, r2, #248
 585 0050 1443     		orrs	r4, r4, r2
 586 0052 1C70     		strb	r4, [r3]
 587 0054 38BD     		pop	{r3, r4, r5, pc}
 588              	.LVL25:
 589              	.L54:
 590 0056 00BF     		.align	2
 591              	.L53:
 592 0058 82400040 		.word	1073758338
 593              		.cfi_endproc
 594              	.LFE9:
 595              		.size	APPS_ADC_IntClock_SetSourceRegister, .-APPS_ADC_IntClock_SetSourceRegister
 596              		.text
 597              	.Letext0:
 598              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 599              		.section	.debug_info,"",%progbits
 600              	.Ldebug_info0:
 601 0000 7F020000 		.4byte	0x27f
 602 0004 0400     		.2byte	0x4
 603 0006 00000000 		.4byte	.Ldebug_abbrev0
 604 000a 04       		.byte	0x4
 605 000b 01       		.uleb128 0x1
 606 000c E6000000 		.4byte	.LASF36
 607 0010 01       		.byte	0x1
 608 0011 17030000 		.4byte	.LASF37
 609 0015 00000000 		.4byte	.LASF38
 610 0019 00000000 		.4byte	.Ldebug_ranges0+0
 611 001d 00000000 		.4byte	0
 612 0021 00000000 		.4byte	.Ldebug_line0
 613 0025 02       		.uleb128 0x2
 614 0026 01       		.byte	0x1
 615 0027 06       		.byte	0x6
 616 0028 22020000 		.4byte	.LASF0
 617 002c 02       		.uleb128 0x2
 618 002d 01       		.byte	0x1
 619 002e 08       		.byte	0x8
 620 002f 08020000 		.4byte	.LASF1
 621 0033 02       		.uleb128 0x2
 622 0034 02       		.byte	0x2
 623 0035 05       		.byte	0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 21


 624 0036 60000000 		.4byte	.LASF2
 625 003a 02       		.uleb128 0x2
 626 003b 02       		.byte	0x2
 627 003c 07       		.byte	0x7
 628 003d 76020000 		.4byte	.LASF3
 629 0041 02       		.uleb128 0x2
 630 0042 04       		.byte	0x4
 631 0043 05       		.byte	0x5
 632 0044 62010000 		.4byte	.LASF4
 633 0048 02       		.uleb128 0x2
 634 0049 04       		.byte	0x4
 635 004a 07       		.byte	0x7
 636 004b D7020000 		.4byte	.LASF5
 637 004f 02       		.uleb128 0x2
 638 0050 08       		.byte	0x8
 639 0051 05       		.byte	0x5
 640 0052 D8000000 		.4byte	.LASF6
 641 0056 02       		.uleb128 0x2
 642 0057 08       		.byte	0x8
 643 0058 07       		.byte	0x7
 644 0059 2E020000 		.4byte	.LASF7
 645 005d 03       		.uleb128 0x3
 646 005e 04       		.byte	0x4
 647 005f 05       		.byte	0x5
 648 0060 696E7400 		.ascii	"int\000"
 649 0064 02       		.uleb128 0x2
 650 0065 04       		.byte	0x4
 651 0066 07       		.byte	0x7
 652 0067 45020000 		.4byte	.LASF8
 653 006b 04       		.uleb128 0x4
 654 006c 9C000000 		.4byte	.LASF9
 655 0070 02       		.byte	0x2
 656 0071 B4       		.byte	0xb4
 657 0072 2C000000 		.4byte	0x2c
 658 0076 04       		.uleb128 0x4
 659 0077 86000000 		.4byte	.LASF10
 660 007b 02       		.byte	0x2
 661 007c B5       		.byte	0xb5
 662 007d 3A000000 		.4byte	0x3a
 663 0081 02       		.uleb128 0x2
 664 0082 04       		.byte	0x4
 665 0083 04       		.byte	0x4
 666 0084 D2000000 		.4byte	.LASF11
 667 0088 02       		.uleb128 0x2
 668 0089 08       		.byte	0x8
 669 008a 04       		.byte	0x4
 670 008b E9020000 		.4byte	.LASF12
 671 008f 02       		.uleb128 0x2
 672 0090 01       		.byte	0x1
 673 0091 08       		.byte	0x8
 674 0092 89020000 		.4byte	.LASF13
 675 0096 05       		.uleb128 0x5
 676 0097 D2020000 		.4byte	.LASF14
 677 009b 02       		.byte	0x2
 678 009c 5E01     		.2byte	0x15e
 679 009e A2000000 		.4byte	0xa2
 680 00a2 06       		.uleb128 0x6
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 22


 681 00a3 6B000000 		.4byte	0x6b
 682 00a7 05       		.uleb128 0x5
 683 00a8 5A000000 		.4byte	.LASF15
 684 00ac 02       		.byte	0x2
 685 00ad 5F01     		.2byte	0x15f
 686 00af B3000000 		.4byte	0xb3
 687 00b3 06       		.uleb128 0x6
 688 00b4 76000000 		.4byte	0x76
 689 00b8 07       		.uleb128 0x7
 690 00b9 98020000 		.4byte	.LASF16
 691 00bd 01       		.byte	0x1
 692 00be 2D       		.byte	0x2d
 693 00bf 00000000 		.4byte	.LFB0
 694 00c3 1C000000 		.4byte	.LFE0-.LFB0
 695 00c7 01       		.uleb128 0x1
 696 00c8 9C       		.byte	0x9c
 697 00c9 07       		.uleb128 0x7
 698 00ca BB020000 		.4byte	.LASF17
 699 00ce 01       		.byte	0x1
 700 00cf 47       		.byte	0x47
 701 00d0 00000000 		.4byte	.LFB1
 702 00d4 1C000000 		.4byte	.LFE1-.LFB1
 703 00d8 01       		.uleb128 0x1
 704 00d9 9C       		.byte	0x9c
 705 00da 08       		.uleb128 0x8
 706 00db 6A000000 		.4byte	.LASF18
 707 00df 01       		.byte	0x1
 708 00e0 64       		.byte	0x64
 709 00e1 00000000 		.4byte	.LFB2
 710 00e5 70000000 		.4byte	.LFE2-.LFB2
 711 00e9 01       		.uleb128 0x1
 712 00ea 9C       		.byte	0x9c
 713 00eb 09010000 		.4byte	0x109
 714 00ef 09       		.uleb128 0x9
 715 00f0 0A000000 		.4byte	.LBB2
 716 00f4 66000000 		.4byte	.LBE2-.LBB2
 717 00f8 0A       		.uleb128 0xa
 718 00f9 B0020000 		.4byte	.LASF30
 719 00fd 01       		.byte	0x1
 720 00fe 69       		.byte	0x69
 721 00ff 76000000 		.4byte	0x76
 722 0103 00000000 		.4byte	.LLST0
 723 0107 00       		.byte	0
 724 0108 00       		.byte	0
 725 0109 08       		.uleb128 0x8
 726 010a F0020000 		.4byte	.LASF19
 727 010e 01       		.byte	0x1
 728 010f 9D       		.byte	0x9d
 729 0110 00000000 		.4byte	.LFB3
 730 0114 20000000 		.4byte	.LFE3-.LFB3
 731 0118 01       		.uleb128 0x1
 732 0119 9C       		.byte	0x9c
 733 011a 2C010000 		.4byte	0x12c
 734 011e 0B       		.uleb128 0xb
 735 011f FA010000 		.4byte	.LASF21
 736 0123 01       		.byte	0x1
 737 0124 9D       		.byte	0x9d
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 23


 738 0125 6B000000 		.4byte	0x6b
 739 0129 01       		.uleb128 0x1
 740 012a 50       		.byte	0x50
 741 012b 00       		.byte	0
 742 012c 0C       		.uleb128 0xc
 743 012d AD000000 		.4byte	.LASF24
 744 0131 01       		.byte	0x1
 745 0132 2901     		.2byte	0x129
 746 0134 76000000 		.4byte	0x76
 747 0138 00000000 		.4byte	.LFB5
 748 013c 0C000000 		.4byte	.LFE5-.LFB5
 749 0140 01       		.uleb128 0x1
 750 0141 9C       		.byte	0x9c
 751 0142 0D       		.uleb128 0xd
 752 0143 44030000 		.4byte	.LASF20
 753 0147 01       		.byte	0x1
 754 0148 4C01     		.2byte	0x14c
 755 014a 00000000 		.4byte	.LFB6
 756 014e 14000000 		.4byte	.LFE6-.LFB6
 757 0152 01       		.uleb128 0x1
 758 0153 9C       		.byte	0x9c
 759 0154 69010000 		.4byte	0x169
 760 0158 0E       		.uleb128 0xe
 761 0159 16020000 		.4byte	.LASF22
 762 015d 01       		.byte	0x1
 763 015e 4C01     		.2byte	0x14c
 764 0160 6B000000 		.4byte	0x6b
 765 0164 13000000 		.4byte	.LLST1
 766 0168 00       		.byte	0
 767 0169 0D       		.uleb128 0xd
 768 016a 52020000 		.4byte	.LASF23
 769 016e 01       		.byte	0x1
 770 016f 6F01     		.2byte	0x16f
 771 0171 00000000 		.4byte	.LFB7
 772 0175 18000000 		.4byte	.LFE7-.LFB7
 773 0179 01       		.uleb128 0x1
 774 017a 9C       		.byte	0x9c
 775 017b 90010000 		.4byte	0x190
 776 017f 0E       		.uleb128 0xe
 777 0180 16020000 		.4byte	.LASF22
 778 0184 01       		.byte	0x1
 779 0185 6F01     		.2byte	0x16f
 780 0187 6B000000 		.4byte	0x6b
 781 018b 34000000 		.4byte	.LLST2
 782 018f 00       		.byte	0
 783 0190 0C       		.uleb128 0xc
 784 0191 6B010000 		.4byte	.LASF25
 785 0195 01       		.byte	0x1
 786 0196 8401     		.2byte	0x184
 787 0198 6B000000 		.4byte	0x6b
 788 019c 00000000 		.4byte	.LFB8
 789 01a0 10000000 		.4byte	.LFE8-.LFB8
 790 01a4 01       		.uleb128 0x1
 791 01a5 9C       		.byte	0x9c
 792 01a6 0C       		.uleb128 0xc
 793 01a7 8D010000 		.4byte	.LASF26
 794 01ab 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 24


 795 01ac D001     		.2byte	0x1d0
 796 01ae 6B000000 		.4byte	0x6b
 797 01b2 00000000 		.4byte	.LFB10
 798 01b6 10000000 		.4byte	.LFE10-.LFB10
 799 01ba 01       		.uleb128 0x1
 800 01bb 9C       		.byte	0x9c
 801 01bc 08       		.uleb128 0x8
 802 01bd B1010000 		.4byte	.LASF27
 803 01c1 01       		.byte	0x1
 804 01c2 C1       		.byte	0xc1
 805 01c3 00000000 		.4byte	.LFB4
 806 01c7 E4000000 		.4byte	.LFE4-.LFB4
 807 01cb 01       		.uleb128 0x1
 808 01cc 9C       		.byte	0x9c
 809 01cd 2F020000 		.4byte	0x22f
 810 01d1 0F       		.uleb128 0xf
 811 01d2 A2000000 		.4byte	.LASF28
 812 01d6 01       		.byte	0x1
 813 01d7 C1       		.byte	0xc1
 814 01d8 76000000 		.4byte	0x76
 815 01dc 55000000 		.4byte	.LLST3
 816 01e0 0F       		.uleb128 0xf
 817 01e1 8D000000 		.4byte	.LASF29
 818 01e5 01       		.byte	0x1
 819 01e6 C1       		.byte	0xc1
 820 01e7 6B000000 		.4byte	0x6b
 821 01eb 76000000 		.4byte	.LLST4
 822 01ef 0A       		.uleb128 0xa
 823 01f0 0F030000 		.4byte	.LASF31
 824 01f4 01       		.byte	0x1
 825 01f5 C4       		.byte	0xc4
 826 01f6 6B000000 		.4byte	0x6b
 827 01fa 97000000 		.4byte	.LLST5
 828 01fe 0A       		.uleb128 0xa
 829 01ff 00020000 		.4byte	.LASF32
 830 0203 01       		.byte	0x1
 831 0204 C6       		.byte	0xc6
 832 0205 6B000000 		.4byte	0x6b
 833 0209 AA000000 		.4byte	.LLST6
 834 020d 0A       		.uleb128 0xa
 835 020e B0020000 		.4byte	.LASF30
 836 0212 01       		.byte	0x1
 837 0213 C7       		.byte	0xc7
 838 0214 76000000 		.4byte	0x76
 839 0218 C8000000 		.4byte	.LLST7
 840 021c 10       		.uleb128 0x10
 841 021d 0A000000 		.4byte	.LVL8
 842 0221 A6010000 		.4byte	0x1a6
 843 0225 10       		.uleb128 0x10
 844 0226 10000000 		.4byte	.LVL10
 845 022a 2C010000 		.4byte	0x12c
 846 022e 00       		.byte	0
 847 022f 11       		.uleb128 0x11
 848 0230 D6010000 		.4byte	.LASF39
 849 0234 01       		.byte	0x1
 850 0235 A301     		.2byte	0x1a3
 851 0237 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 25


 852 023b 5C000000 		.4byte	.LFE9-.LFB9
 853 023f 01       		.uleb128 0x1
 854 0240 9C       		.byte	0x9c
 855 0241 0E       		.uleb128 0xe
 856 0242 8E020000 		.4byte	.LASF33
 857 0246 01       		.byte	0x1
 858 0247 A301     		.2byte	0x1a3
 859 0249 6B000000 		.4byte	0x6b
 860 024d E6000000 		.4byte	.LLST8
 861 0251 12       		.uleb128 0x12
 862 0252 52000000 		.4byte	.LASF34
 863 0256 01       		.byte	0x1
 864 0257 A501     		.2byte	0x1a5
 865 0259 76000000 		.4byte	0x76
 866 025d 07010000 		.4byte	.LLST9
 867 0261 13       		.uleb128 0x13
 868 0262 95000000 		.4byte	.LASF35
 869 0266 01       		.byte	0x1
 870 0267 A601     		.2byte	0x1a6
 871 0269 6B000000 		.4byte	0x6b
 872 026d 01       		.uleb128 0x1
 873 026e 50       		.byte	0x50
 874 026f 10       		.uleb128 0x10
 875 0270 08000000 		.4byte	.LVL20
 876 0274 2C010000 		.4byte	0x12c
 877 0278 10       		.uleb128 0x10
 878 0279 0E000000 		.4byte	.LVL22
 879 027d A6010000 		.4byte	0x1a6
 880 0281 00       		.byte	0
 881 0282 00       		.byte	0
 882              		.section	.debug_abbrev,"",%progbits
 883              	.Ldebug_abbrev0:
 884 0000 01       		.uleb128 0x1
 885 0001 11       		.uleb128 0x11
 886 0002 01       		.byte	0x1
 887 0003 25       		.uleb128 0x25
 888 0004 0E       		.uleb128 0xe
 889 0005 13       		.uleb128 0x13
 890 0006 0B       		.uleb128 0xb
 891 0007 03       		.uleb128 0x3
 892 0008 0E       		.uleb128 0xe
 893 0009 1B       		.uleb128 0x1b
 894 000a 0E       		.uleb128 0xe
 895 000b 55       		.uleb128 0x55
 896 000c 17       		.uleb128 0x17
 897 000d 11       		.uleb128 0x11
 898 000e 01       		.uleb128 0x1
 899 000f 10       		.uleb128 0x10
 900 0010 17       		.uleb128 0x17
 901 0011 00       		.byte	0
 902 0012 00       		.byte	0
 903 0013 02       		.uleb128 0x2
 904 0014 24       		.uleb128 0x24
 905 0015 00       		.byte	0
 906 0016 0B       		.uleb128 0xb
 907 0017 0B       		.uleb128 0xb
 908 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 26


 909 0019 0B       		.uleb128 0xb
 910 001a 03       		.uleb128 0x3
 911 001b 0E       		.uleb128 0xe
 912 001c 00       		.byte	0
 913 001d 00       		.byte	0
 914 001e 03       		.uleb128 0x3
 915 001f 24       		.uleb128 0x24
 916 0020 00       		.byte	0
 917 0021 0B       		.uleb128 0xb
 918 0022 0B       		.uleb128 0xb
 919 0023 3E       		.uleb128 0x3e
 920 0024 0B       		.uleb128 0xb
 921 0025 03       		.uleb128 0x3
 922 0026 08       		.uleb128 0x8
 923 0027 00       		.byte	0
 924 0028 00       		.byte	0
 925 0029 04       		.uleb128 0x4
 926 002a 16       		.uleb128 0x16
 927 002b 00       		.byte	0
 928 002c 03       		.uleb128 0x3
 929 002d 0E       		.uleb128 0xe
 930 002e 3A       		.uleb128 0x3a
 931 002f 0B       		.uleb128 0xb
 932 0030 3B       		.uleb128 0x3b
 933 0031 0B       		.uleb128 0xb
 934 0032 49       		.uleb128 0x49
 935 0033 13       		.uleb128 0x13
 936 0034 00       		.byte	0
 937 0035 00       		.byte	0
 938 0036 05       		.uleb128 0x5
 939 0037 16       		.uleb128 0x16
 940 0038 00       		.byte	0
 941 0039 03       		.uleb128 0x3
 942 003a 0E       		.uleb128 0xe
 943 003b 3A       		.uleb128 0x3a
 944 003c 0B       		.uleb128 0xb
 945 003d 3B       		.uleb128 0x3b
 946 003e 05       		.uleb128 0x5
 947 003f 49       		.uleb128 0x49
 948 0040 13       		.uleb128 0x13
 949 0041 00       		.byte	0
 950 0042 00       		.byte	0
 951 0043 06       		.uleb128 0x6
 952 0044 35       		.uleb128 0x35
 953 0045 00       		.byte	0
 954 0046 49       		.uleb128 0x49
 955 0047 13       		.uleb128 0x13
 956 0048 00       		.byte	0
 957 0049 00       		.byte	0
 958 004a 07       		.uleb128 0x7
 959 004b 2E       		.uleb128 0x2e
 960 004c 00       		.byte	0
 961 004d 3F       		.uleb128 0x3f
 962 004e 19       		.uleb128 0x19
 963 004f 03       		.uleb128 0x3
 964 0050 0E       		.uleb128 0xe
 965 0051 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 27


 966 0052 0B       		.uleb128 0xb
 967 0053 3B       		.uleb128 0x3b
 968 0054 0B       		.uleb128 0xb
 969 0055 27       		.uleb128 0x27
 970 0056 19       		.uleb128 0x19
 971 0057 11       		.uleb128 0x11
 972 0058 01       		.uleb128 0x1
 973 0059 12       		.uleb128 0x12
 974 005a 06       		.uleb128 0x6
 975 005b 40       		.uleb128 0x40
 976 005c 18       		.uleb128 0x18
 977 005d 9742     		.uleb128 0x2117
 978 005f 19       		.uleb128 0x19
 979 0060 00       		.byte	0
 980 0061 00       		.byte	0
 981 0062 08       		.uleb128 0x8
 982 0063 2E       		.uleb128 0x2e
 983 0064 01       		.byte	0x1
 984 0065 3F       		.uleb128 0x3f
 985 0066 19       		.uleb128 0x19
 986 0067 03       		.uleb128 0x3
 987 0068 0E       		.uleb128 0xe
 988 0069 3A       		.uleb128 0x3a
 989 006a 0B       		.uleb128 0xb
 990 006b 3B       		.uleb128 0x3b
 991 006c 0B       		.uleb128 0xb
 992 006d 27       		.uleb128 0x27
 993 006e 19       		.uleb128 0x19
 994 006f 11       		.uleb128 0x11
 995 0070 01       		.uleb128 0x1
 996 0071 12       		.uleb128 0x12
 997 0072 06       		.uleb128 0x6
 998 0073 40       		.uleb128 0x40
 999 0074 18       		.uleb128 0x18
 1000 0075 9742     		.uleb128 0x2117
 1001 0077 19       		.uleb128 0x19
 1002 0078 01       		.uleb128 0x1
 1003 0079 13       		.uleb128 0x13
 1004 007a 00       		.byte	0
 1005 007b 00       		.byte	0
 1006 007c 09       		.uleb128 0x9
 1007 007d 0B       		.uleb128 0xb
 1008 007e 01       		.byte	0x1
 1009 007f 11       		.uleb128 0x11
 1010 0080 01       		.uleb128 0x1
 1011 0081 12       		.uleb128 0x12
 1012 0082 06       		.uleb128 0x6
 1013 0083 00       		.byte	0
 1014 0084 00       		.byte	0
 1015 0085 0A       		.uleb128 0xa
 1016 0086 34       		.uleb128 0x34
 1017 0087 00       		.byte	0
 1018 0088 03       		.uleb128 0x3
 1019 0089 0E       		.uleb128 0xe
 1020 008a 3A       		.uleb128 0x3a
 1021 008b 0B       		.uleb128 0xb
 1022 008c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 28


 1023 008d 0B       		.uleb128 0xb
 1024 008e 49       		.uleb128 0x49
 1025 008f 13       		.uleb128 0x13
 1026 0090 02       		.uleb128 0x2
 1027 0091 17       		.uleb128 0x17
 1028 0092 00       		.byte	0
 1029 0093 00       		.byte	0
 1030 0094 0B       		.uleb128 0xb
 1031 0095 05       		.uleb128 0x5
 1032 0096 00       		.byte	0
 1033 0097 03       		.uleb128 0x3
 1034 0098 0E       		.uleb128 0xe
 1035 0099 3A       		.uleb128 0x3a
 1036 009a 0B       		.uleb128 0xb
 1037 009b 3B       		.uleb128 0x3b
 1038 009c 0B       		.uleb128 0xb
 1039 009d 49       		.uleb128 0x49
 1040 009e 13       		.uleb128 0x13
 1041 009f 02       		.uleb128 0x2
 1042 00a0 18       		.uleb128 0x18
 1043 00a1 00       		.byte	0
 1044 00a2 00       		.byte	0
 1045 00a3 0C       		.uleb128 0xc
 1046 00a4 2E       		.uleb128 0x2e
 1047 00a5 00       		.byte	0
 1048 00a6 3F       		.uleb128 0x3f
 1049 00a7 19       		.uleb128 0x19
 1050 00a8 03       		.uleb128 0x3
 1051 00a9 0E       		.uleb128 0xe
 1052 00aa 3A       		.uleb128 0x3a
 1053 00ab 0B       		.uleb128 0xb
 1054 00ac 3B       		.uleb128 0x3b
 1055 00ad 05       		.uleb128 0x5
 1056 00ae 27       		.uleb128 0x27
 1057 00af 19       		.uleb128 0x19
 1058 00b0 49       		.uleb128 0x49
 1059 00b1 13       		.uleb128 0x13
 1060 00b2 11       		.uleb128 0x11
 1061 00b3 01       		.uleb128 0x1
 1062 00b4 12       		.uleb128 0x12
 1063 00b5 06       		.uleb128 0x6
 1064 00b6 40       		.uleb128 0x40
 1065 00b7 18       		.uleb128 0x18
 1066 00b8 9742     		.uleb128 0x2117
 1067 00ba 19       		.uleb128 0x19
 1068 00bb 00       		.byte	0
 1069 00bc 00       		.byte	0
 1070 00bd 0D       		.uleb128 0xd
 1071 00be 2E       		.uleb128 0x2e
 1072 00bf 01       		.byte	0x1
 1073 00c0 3F       		.uleb128 0x3f
 1074 00c1 19       		.uleb128 0x19
 1075 00c2 03       		.uleb128 0x3
 1076 00c3 0E       		.uleb128 0xe
 1077 00c4 3A       		.uleb128 0x3a
 1078 00c5 0B       		.uleb128 0xb
 1079 00c6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 29


 1080 00c7 05       		.uleb128 0x5
 1081 00c8 27       		.uleb128 0x27
 1082 00c9 19       		.uleb128 0x19
 1083 00ca 11       		.uleb128 0x11
 1084 00cb 01       		.uleb128 0x1
 1085 00cc 12       		.uleb128 0x12
 1086 00cd 06       		.uleb128 0x6
 1087 00ce 40       		.uleb128 0x40
 1088 00cf 18       		.uleb128 0x18
 1089 00d0 9742     		.uleb128 0x2117
 1090 00d2 19       		.uleb128 0x19
 1091 00d3 01       		.uleb128 0x1
 1092 00d4 13       		.uleb128 0x13
 1093 00d5 00       		.byte	0
 1094 00d6 00       		.byte	0
 1095 00d7 0E       		.uleb128 0xe
 1096 00d8 05       		.uleb128 0x5
 1097 00d9 00       		.byte	0
 1098 00da 03       		.uleb128 0x3
 1099 00db 0E       		.uleb128 0xe
 1100 00dc 3A       		.uleb128 0x3a
 1101 00dd 0B       		.uleb128 0xb
 1102 00de 3B       		.uleb128 0x3b
 1103 00df 05       		.uleb128 0x5
 1104 00e0 49       		.uleb128 0x49
 1105 00e1 13       		.uleb128 0x13
 1106 00e2 02       		.uleb128 0x2
 1107 00e3 17       		.uleb128 0x17
 1108 00e4 00       		.byte	0
 1109 00e5 00       		.byte	0
 1110 00e6 0F       		.uleb128 0xf
 1111 00e7 05       		.uleb128 0x5
 1112 00e8 00       		.byte	0
 1113 00e9 03       		.uleb128 0x3
 1114 00ea 0E       		.uleb128 0xe
 1115 00eb 3A       		.uleb128 0x3a
 1116 00ec 0B       		.uleb128 0xb
 1117 00ed 3B       		.uleb128 0x3b
 1118 00ee 0B       		.uleb128 0xb
 1119 00ef 49       		.uleb128 0x49
 1120 00f0 13       		.uleb128 0x13
 1121 00f1 02       		.uleb128 0x2
 1122 00f2 17       		.uleb128 0x17
 1123 00f3 00       		.byte	0
 1124 00f4 00       		.byte	0
 1125 00f5 10       		.uleb128 0x10
 1126 00f6 898201   		.uleb128 0x4109
 1127 00f9 00       		.byte	0
 1128 00fa 11       		.uleb128 0x11
 1129 00fb 01       		.uleb128 0x1
 1130 00fc 31       		.uleb128 0x31
 1131 00fd 13       		.uleb128 0x13
 1132 00fe 00       		.byte	0
 1133 00ff 00       		.byte	0
 1134 0100 11       		.uleb128 0x11
 1135 0101 2E       		.uleb128 0x2e
 1136 0102 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 30


 1137 0103 3F       		.uleb128 0x3f
 1138 0104 19       		.uleb128 0x19
 1139 0105 03       		.uleb128 0x3
 1140 0106 0E       		.uleb128 0xe
 1141 0107 3A       		.uleb128 0x3a
 1142 0108 0B       		.uleb128 0xb
 1143 0109 3B       		.uleb128 0x3b
 1144 010a 05       		.uleb128 0x5
 1145 010b 27       		.uleb128 0x27
 1146 010c 19       		.uleb128 0x19
 1147 010d 11       		.uleb128 0x11
 1148 010e 01       		.uleb128 0x1
 1149 010f 12       		.uleb128 0x12
 1150 0110 06       		.uleb128 0x6
 1151 0111 40       		.uleb128 0x40
 1152 0112 18       		.uleb128 0x18
 1153 0113 9742     		.uleb128 0x2117
 1154 0115 19       		.uleb128 0x19
 1155 0116 00       		.byte	0
 1156 0117 00       		.byte	0
 1157 0118 12       		.uleb128 0x12
 1158 0119 34       		.uleb128 0x34
 1159 011a 00       		.byte	0
 1160 011b 03       		.uleb128 0x3
 1161 011c 0E       		.uleb128 0xe
 1162 011d 3A       		.uleb128 0x3a
 1163 011e 0B       		.uleb128 0xb
 1164 011f 3B       		.uleb128 0x3b
 1165 0120 05       		.uleb128 0x5
 1166 0121 49       		.uleb128 0x49
 1167 0122 13       		.uleb128 0x13
 1168 0123 02       		.uleb128 0x2
 1169 0124 17       		.uleb128 0x17
 1170 0125 00       		.byte	0
 1171 0126 00       		.byte	0
 1172 0127 13       		.uleb128 0x13
 1173 0128 34       		.uleb128 0x34
 1174 0129 00       		.byte	0
 1175 012a 03       		.uleb128 0x3
 1176 012b 0E       		.uleb128 0xe
 1177 012c 3A       		.uleb128 0x3a
 1178 012d 0B       		.uleb128 0xb
 1179 012e 3B       		.uleb128 0x3b
 1180 012f 05       		.uleb128 0x5
 1181 0130 49       		.uleb128 0x49
 1182 0131 13       		.uleb128 0x13
 1183 0132 02       		.uleb128 0x2
 1184 0133 18       		.uleb128 0x18
 1185 0134 00       		.byte	0
 1186 0135 00       		.byte	0
 1187 0136 00       		.byte	0
 1188              		.section	.debug_loc,"",%progbits
 1189              	.Ldebug_loc0:
 1190              	.LLST0:
 1191 0000 2A000000 		.4byte	.LVL0
 1192 0004 5C000000 		.4byte	.LVL1
 1193 0008 0100     		.2byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 31


 1194 000a 51       		.byte	0x51
 1195 000b 00000000 		.4byte	0
 1196 000f 00000000 		.4byte	0
 1197              	.LLST1:
 1198 0013 00000000 		.4byte	.LVL3
 1199 0017 08000000 		.4byte	.LVL4
 1200 001b 0100     		.2byte	0x1
 1201 001d 50       		.byte	0x50
 1202 001e 08000000 		.4byte	.LVL4
 1203 0022 14000000 		.4byte	.LFE6
 1204 0026 0400     		.2byte	0x4
 1205 0028 F3       		.byte	0xf3
 1206 0029 01       		.uleb128 0x1
 1207 002a 50       		.byte	0x50
 1208 002b 9F       		.byte	0x9f
 1209 002c 00000000 		.4byte	0
 1210 0030 00000000 		.4byte	0
 1211              	.LLST2:
 1212 0034 00000000 		.4byte	.LVL5
 1213 0038 06000000 		.4byte	.LVL6
 1214 003c 0100     		.2byte	0x1
 1215 003e 50       		.byte	0x50
 1216 003f 06000000 		.4byte	.LVL6
 1217 0043 18000000 		.4byte	.LFE7
 1218 0047 0400     		.2byte	0x4
 1219 0049 F3       		.byte	0xf3
 1220 004a 01       		.uleb128 0x1
 1221 004b 50       		.byte	0x50
 1222 004c 9F       		.byte	0x9f
 1223 004d 00000000 		.4byte	0
 1224 0051 00000000 		.4byte	0
 1225              	.LLST3:
 1226 0055 00000000 		.4byte	.LVL7
 1227 0059 09000000 		.4byte	.LVL8-1
 1228 005d 0100     		.2byte	0x1
 1229 005f 50       		.byte	0x50
 1230 0060 09000000 		.4byte	.LVL8-1
 1231 0064 E4000000 		.4byte	.LFE4
 1232 0068 0400     		.2byte	0x4
 1233 006a F3       		.byte	0xf3
 1234 006b 01       		.uleb128 0x1
 1235 006c 50       		.byte	0x50
 1236 006d 9F       		.byte	0x9f
 1237 006e 00000000 		.4byte	0
 1238 0072 00000000 		.4byte	0
 1239              	.LLST4:
 1240 0076 00000000 		.4byte	.LVL7
 1241 007a 09000000 		.4byte	.LVL8-1
 1242 007e 0100     		.2byte	0x1
 1243 0080 51       		.byte	0x51
 1244 0081 09000000 		.4byte	.LVL8-1
 1245 0085 E4000000 		.4byte	.LFE4
 1246 0089 0400     		.2byte	0x4
 1247 008b F3       		.byte	0xf3
 1248 008c 01       		.uleb128 0x1
 1249 008d 51       		.byte	0x51
 1250 008e 9F       		.byte	0x9f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 32


 1251 008f 00000000 		.4byte	0
 1252 0093 00000000 		.4byte	0
 1253              	.LLST5:
 1254 0097 1E000000 		.4byte	.LVL12
 1255 009b C6000000 		.4byte	.LVL18
 1256 009f 0100     		.2byte	0x1
 1257 00a1 51       		.byte	0x51
 1258 00a2 00000000 		.4byte	0
 1259 00a6 00000000 		.4byte	0
 1260              	.LLST6:
 1261 00aa 0C000000 		.4byte	.LVL9
 1262 00ae 0F000000 		.4byte	.LVL10-1
 1263 00b2 0100     		.2byte	0x1
 1264 00b4 50       		.byte	0x50
 1265 00b5 0F000000 		.4byte	.LVL10-1
 1266 00b9 50000000 		.4byte	.LVL16
 1267 00bd 0100     		.2byte	0x1
 1268 00bf 55       		.byte	0x55
 1269 00c0 00000000 		.4byte	0
 1270 00c4 00000000 		.4byte	0
 1271              	.LLST7:
 1272 00c8 12000000 		.4byte	.LVL11
 1273 00cc 4C000000 		.4byte	.LVL15
 1274 00d0 0100     		.2byte	0x1
 1275 00d2 50       		.byte	0x50
 1276 00d3 4C000000 		.4byte	.LVL15
 1277 00d7 76000000 		.4byte	.LVL17
 1278 00db 0100     		.2byte	0x1
 1279 00dd 53       		.byte	0x53
 1280 00de 00000000 		.4byte	0
 1281 00e2 00000000 		.4byte	0
 1282              	.LLST8:
 1283 00e6 00000000 		.4byte	.LVL19
 1284 00ea 07000000 		.4byte	.LVL20-1
 1285 00ee 0100     		.2byte	0x1
 1286 00f0 50       		.byte	0x50
 1287 00f1 07000000 		.4byte	.LVL20-1
 1288 00f5 5C000000 		.4byte	.LFE9
 1289 00f9 0400     		.2byte	0x4
 1290 00fb F3       		.byte	0xf3
 1291 00fc 01       		.uleb128 0x1
 1292 00fd 50       		.byte	0x50
 1293 00fe 9F       		.byte	0x9f
 1294 00ff 00000000 		.4byte	0
 1295 0103 00000000 		.4byte	0
 1296              	.LLST9:
 1297 0107 0A000000 		.4byte	.LVL21
 1298 010b 0D000000 		.4byte	.LVL22-1
 1299 010f 0100     		.2byte	0x1
 1300 0111 50       		.byte	0x50
 1301 0112 0D000000 		.4byte	.LVL22-1
 1302 0116 56000000 		.4byte	.LVL25
 1303 011a 0100     		.2byte	0x1
 1304 011c 55       		.byte	0x55
 1305 011d 00000000 		.4byte	0
 1306 0121 00000000 		.4byte	0
 1307              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 33


 1308 0000 6C000000 		.4byte	0x6c
 1309 0004 0200     		.2byte	0x2
 1310 0006 00000000 		.4byte	.Ldebug_info0
 1311 000a 04       		.byte	0x4
 1312 000b 00       		.byte	0
 1313 000c 0000     		.2byte	0
 1314 000e 0000     		.2byte	0
 1315 0010 00000000 		.4byte	.LFB0
 1316 0014 1C000000 		.4byte	.LFE0-.LFB0
 1317 0018 00000000 		.4byte	.LFB1
 1318 001c 1C000000 		.4byte	.LFE1-.LFB1
 1319 0020 00000000 		.4byte	.LFB2
 1320 0024 70000000 		.4byte	.LFE2-.LFB2
 1321 0028 00000000 		.4byte	.LFB3
 1322 002c 20000000 		.4byte	.LFE3-.LFB3
 1323 0030 00000000 		.4byte	.LFB5
 1324 0034 0C000000 		.4byte	.LFE5-.LFB5
 1325 0038 00000000 		.4byte	.LFB6
 1326 003c 14000000 		.4byte	.LFE6-.LFB6
 1327 0040 00000000 		.4byte	.LFB7
 1328 0044 18000000 		.4byte	.LFE7-.LFB7
 1329 0048 00000000 		.4byte	.LFB8
 1330 004c 10000000 		.4byte	.LFE8-.LFB8
 1331 0050 00000000 		.4byte	.LFB10
 1332 0054 10000000 		.4byte	.LFE10-.LFB10
 1333 0058 00000000 		.4byte	.LFB4
 1334 005c E4000000 		.4byte	.LFE4-.LFB4
 1335 0060 00000000 		.4byte	.LFB9
 1336 0064 5C000000 		.4byte	.LFE9-.LFB9
 1337 0068 00000000 		.4byte	0
 1338 006c 00000000 		.4byte	0
 1339              		.section	.debug_ranges,"",%progbits
 1340              	.Ldebug_ranges0:
 1341 0000 00000000 		.4byte	.LFB0
 1342 0004 1C000000 		.4byte	.LFE0
 1343 0008 00000000 		.4byte	.LFB1
 1344 000c 1C000000 		.4byte	.LFE1
 1345 0010 00000000 		.4byte	.LFB2
 1346 0014 70000000 		.4byte	.LFE2
 1347 0018 00000000 		.4byte	.LFB3
 1348 001c 20000000 		.4byte	.LFE3
 1349 0020 00000000 		.4byte	.LFB5
 1350 0024 0C000000 		.4byte	.LFE5
 1351 0028 00000000 		.4byte	.LFB6
 1352 002c 14000000 		.4byte	.LFE6
 1353 0030 00000000 		.4byte	.LFB7
 1354 0034 18000000 		.4byte	.LFE7
 1355 0038 00000000 		.4byte	.LFB8
 1356 003c 10000000 		.4byte	.LFE8
 1357 0040 00000000 		.4byte	.LFB10
 1358 0044 10000000 		.4byte	.LFE10
 1359 0048 00000000 		.4byte	.LFB4
 1360 004c E4000000 		.4byte	.LFE4
 1361 0050 00000000 		.4byte	.LFB9
 1362 0054 5C000000 		.4byte	.LFE9
 1363 0058 00000000 		.4byte	0
 1364 005c 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 34


 1365              		.section	.debug_line,"",%progbits
 1366              	.Ldebug_line0:
 1367 0000 9D010000 		.section	.debug_str,"MS",%progbits,1
 1367      02006700 
 1367      00000201 
 1367      FB0E0D00 
 1367      01010101 
 1368              	.LASF38:
 1369 0000 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 1369      73657273 
 1369      5C6D6974 
 1369      6368656C 
 1369      6C5C446F 
 1370 002d 2D546872 		.ascii	"-Throttle\\E-Throttle-Mainboard.cydsn\000"
 1370      6F74746C 
 1370      655C452D 
 1370      5468726F 
 1370      74746C65 
 1371              	.LASF34:
 1372 0052 63757272 		.ascii	"currDiv\000"
 1372      44697600 
 1373              	.LASF15:
 1374 005a 72656731 		.ascii	"reg16\000"
 1374      3600
 1375              	.LASF2:
 1376 0060 73686F72 		.ascii	"short int\000"
 1376      7420696E 
 1376      7400
 1377              	.LASF18:
 1378 006a 41505053 		.ascii	"APPS_ADC_IntClock_StopBlock\000"
 1378      5F414443 
 1378      5F496E74 
 1378      436C6F63 
 1378      6B5F5374 
 1379              	.LASF10:
 1380 0086 75696E74 		.ascii	"uint16\000"
 1380      313600
 1381              	.LASF29:
 1382 008d 72657374 		.ascii	"restart\000"
 1382      61727400 
 1383              	.LASF35:
 1384 0095 6F6C6453 		.ascii	"oldSrc\000"
 1384      726300
 1385              	.LASF9:
 1386 009c 75696E74 		.ascii	"uint8\000"
 1386      3800
 1387              	.LASF28:
 1388 00a2 636C6B44 		.ascii	"clkDivider\000"
 1388      69766964 
 1388      657200
 1389              	.LASF24:
 1390 00ad 41505053 		.ascii	"APPS_ADC_IntClock_GetDividerRegister\000"
 1390      5F414443 
 1390      5F496E74 
 1390      436C6F63 
 1390      6B5F4765 
 1391              	.LASF11:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 35


 1392 00d2 666C6F61 		.ascii	"float\000"
 1392      7400
 1393              	.LASF6:
 1394 00d8 6C6F6E67 		.ascii	"long long int\000"
 1394      206C6F6E 
 1394      6720696E 
 1394      7400
 1395              	.LASF36:
 1396 00e6 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1396      4320342E 
 1396      382E3420 
 1396      32303134 
 1396      30353236 
 1397 0119 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1397      20726576 
 1397      6973696F 
 1397      6E203231 
 1397      31333538 
 1398 014c 67202D66 		.ascii	"g -ffunction-sections\000"
 1398      66756E63 
 1398      74696F6E 
 1398      2D736563 
 1398      74696F6E 
 1399              	.LASF4:
 1400 0162 6C6F6E67 		.ascii	"long int\000"
 1400      20696E74 
 1400      00
 1401              	.LASF25:
 1402 016b 41505053 		.ascii	"APPS_ADC_IntClock_GetModeRegister\000"
 1402      5F414443 
 1402      5F496E74 
 1402      436C6F63 
 1402      6B5F4765 
 1403              	.LASF26:
 1404 018d 41505053 		.ascii	"APPS_ADC_IntClock_GetSourceRegister\000"
 1404      5F414443 
 1404      5F496E74 
 1404      436C6F63 
 1404      6B5F4765 
 1405              	.LASF27:
 1406 01b1 41505053 		.ascii	"APPS_ADC_IntClock_SetDividerRegister\000"
 1406      5F414443 
 1406      5F496E74 
 1406      436C6F63 
 1406      6B5F5365 
 1407              	.LASF39:
 1408 01d6 41505053 		.ascii	"APPS_ADC_IntClock_SetSourceRegister\000"
 1408      5F414443 
 1408      5F496E74 
 1408      436C6F63 
 1408      6B5F5365 
 1409              	.LASF21:
 1410 01fa 73746174 		.ascii	"state\000"
 1410      6500
 1411              	.LASF32:
 1412 0200 63757272 		.ascii	"currSrc\000"
 1412      53726300 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 36


 1413              	.LASF1:
 1414 0208 756E7369 		.ascii	"unsigned char\000"
 1414      676E6564 
 1414      20636861 
 1414      7200
 1415              	.LASF22:
 1416 0216 6D6F6465 		.ascii	"modeBitMask\000"
 1416      4269744D 
 1416      61736B00 
 1417              	.LASF0:
 1418 0222 7369676E 		.ascii	"signed char\000"
 1418      65642063 
 1418      68617200 
 1419              	.LASF7:
 1420 022e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1420      206C6F6E 
 1420      6720756E 
 1420      7369676E 
 1420      65642069 
 1421              	.LASF8:
 1422 0245 756E7369 		.ascii	"unsigned int\000"
 1422      676E6564 
 1422      20696E74 
 1422      00
 1423              	.LASF23:
 1424 0252 41505053 		.ascii	"APPS_ADC_IntClock_ClearModeRegister\000"
 1424      5F414443 
 1424      5F496E74 
 1424      436C6F63 
 1424      6B5F436C 
 1425              	.LASF3:
 1426 0276 73686F72 		.ascii	"short unsigned int\000"
 1426      7420756E 
 1426      7369676E 
 1426      65642069 
 1426      6E7400
 1427              	.LASF13:
 1428 0289 63686172 		.ascii	"char\000"
 1428      00
 1429              	.LASF33:
 1430 028e 636C6B53 		.ascii	"clkSource\000"
 1430      6F757263 
 1430      6500
 1431              	.LASF16:
 1432 0298 41505053 		.ascii	"APPS_ADC_IntClock_Start\000"
 1432      5F414443 
 1432      5F496E74 
 1432      436C6F63 
 1432      6B5F5374 
 1433              	.LASF30:
 1434 02b0 6F6C6444 		.ascii	"oldDivider\000"
 1434      69766964 
 1434      657200
 1435              	.LASF17:
 1436 02bb 41505053 		.ascii	"APPS_ADC_IntClock_Stop\000"
 1436      5F414443 
 1436      5F496E74 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccpcPoc8.s 			page 37


 1436      436C6F63 
 1436      6B5F5374 
 1437              	.LASF14:
 1438 02d2 72656738 		.ascii	"reg8\000"
 1438      00
 1439              	.LASF5:
 1440 02d7 6C6F6E67 		.ascii	"long unsigned int\000"
 1440      20756E73 
 1440      69676E65 
 1440      6420696E 
 1440      7400
 1441              	.LASF12:
 1442 02e9 646F7562 		.ascii	"double\000"
 1442      6C6500
 1443              	.LASF19:
 1444 02f0 41505053 		.ascii	"APPS_ADC_IntClock_StandbyPower\000"
 1444      5F414443 
 1444      5F496E74 
 1444      436C6F63 
 1444      6B5F5374 
 1445              	.LASF31:
 1446 030f 656E6162 		.ascii	"enabled\000"
 1446      6C656400 
 1447              	.LASF37:
 1448 0317 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\APPS_ADC_IntClock.c\000"
 1448      6E657261 
 1448      7465645F 
 1448      536F7572 
 1448      63655C50 
 1449              	.LASF20:
 1450 0344 41505053 		.ascii	"APPS_ADC_IntClock_SetModeRegister\000"
 1450      5F414443 
 1450      5F496E74 
 1450      436C6F63 
 1450      6B5F5365 
 1451              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
