ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Timer_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	Timer_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	Timer_Enable, %function
  24              	Timer_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Timer.c"
   1:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Timer.c **** * File Name: Timer.c
   3:.\Generated_Source\PSoC5/Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/Timer.c **** *
   5:.\Generated_Source\PSoC5/Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/Timer.c **** *
  15:.\Generated_Source\PSoC5/Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/Timer.c **** *
  17:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Timer.c **** 
  24:.\Generated_Source\PSoC5/Timer.c **** #include "Timer.h"
  25:.\Generated_Source\PSoC5/Timer.c **** 
  26:.\Generated_Source\PSoC5/Timer.c **** uint8 Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/Timer.c **** 
  28:.\Generated_Source\PSoC5/Timer.c **** 
  29:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Init
  31:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 2


  32:.\Generated_Source\PSoC5/Timer.c **** *
  33:.\Generated_Source\PSoC5/Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/Timer.c **** *
  36:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/Timer.c **** *  void
  38:.\Generated_Source\PSoC5/Timer.c **** *
  39:.\Generated_Source\PSoC5/Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/Timer.c **** *  void
  41:.\Generated_Source\PSoC5/Timer.c **** *
  42:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/Timer.c **** void Timer_Init(void) 
  44:.\Generated_Source\PSoC5/Timer.c **** {
  45:.\Generated_Source\PSoC5/Timer.c ****     #if(!Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/Timer.c ****             uint8 Timer_interruptState;
  48:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/Timer.c **** 
  50:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/Timer.c **** 
  54:.\Generated_Source\PSoC5/Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL2 &= ((uint8)(~Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/Timer.c **** 
  59:.\Generated_Source\PSoC5/Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/Timer.c **** 
  63:.\Generated_Source\PSoC5/Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/Timer.c **** 
  69:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/Timer.c **** 
  76:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/Timer.c **** 
  82:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/Timer.c **** 
  84:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL2 |= Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 3


  89:.\Generated_Source\PSoC5/Timer.c **** 
  90:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/Timer.c **** 
  95:.\Generated_Source\PSoC5/Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/Timer.c **** 
  99:.\Generated_Source\PSoC5/Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/Timer.c **** 
 103:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/Timer.c **** 
 105:.\Generated_Source\PSoC5/Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 &= ((uint8)(~Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 |= Timer_SYNC;
 108:.\Generated_Source\PSoC5/Timer.c **** 
 109:.\Generated_Source\PSoC5/Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 &= ((uint8)(~Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 |= Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/Timer.c **** 
 113:.\Generated_Source\PSoC5/Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL2 |= Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/Timer.c **** 
 117:.\Generated_Source\PSoC5/Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/Timer.c ****     Timer_WritePeriod(Timer_INIT_PERIOD);
 119:.\Generated_Source\PSoC5/Timer.c ****     Timer_WriteCounter(Timer_INIT_PERIOD);
 120:.\Generated_Source\PSoC5/Timer.c **** 
 121:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/Timer.c ****         Timer_CAPTURE_COUNT_CTRL |= Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/Timer.c ****         Timer_SetCaptureCount(Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/Timer.c **** 
 126:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/Timer.c ****             Timer_SetCaptureMode(Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/Timer.c **** 
 131:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/Timer.c ****             #if (!Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/Timer.c ****                 if (0u == (Timer_CONTROL & Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/Timer.c ****                 {
 135:.\Generated_Source\PSoC5/Timer.c ****                     Timer_SetTriggerMode(Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/Timer.c ****                 }
 137:.\Generated_Source\PSoC5/Timer.c ****             #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/Timer.c **** 
 140:.\Generated_Source\PSoC5/Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/Timer.c ****         Timer_interruptState = CyEnterCriticalSection();
 143:.\Generated_Source\PSoC5/Timer.c **** 
 144:.\Generated_Source\PSoC5/Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/Timer.c ****         Timer_STATUS_AUX_CTRL |= Timer_STATUS_ACTL_INT_EN_MASK;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 4


 146:.\Generated_Source\PSoC5/Timer.c **** 
 147:.\Generated_Source\PSoC5/Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/Timer.c ****         CyExitCriticalSection(Timer_interruptState);
 149:.\Generated_Source\PSoC5/Timer.c **** 
 150:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/Timer.c ****             Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/Timer.c **** 		
 154:.\Generated_Source\PSoC5/Timer.c **** 		
 155:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_InterruptOnCaptureCount && !Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/Timer.c ****             Timer_SetInterruptCount(Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/Timer.c **** 
 159:.\Generated_Source\PSoC5/Timer.c ****         Timer_ClearFIFO();
 160:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC5/Timer.c **** 
 162:.\Generated_Source\PSoC5/Timer.c ****     Timer_SetInterruptMode(Timer_INIT_INTERRUPT_MODE);
 163:.\Generated_Source\PSoC5/Timer.c **** }
 164:.\Generated_Source\PSoC5/Timer.c **** 
 165:.\Generated_Source\PSoC5/Timer.c **** 
 166:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Enable
 168:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/Timer.c **** *
 170:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/Timer.c **** *
 173:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/Timer.c **** *  void
 175:.\Generated_Source\PSoC5/Timer.c **** *
 176:.\Generated_Source\PSoC5/Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/Timer.c **** *  void
 178:.\Generated_Source\PSoC5/Timer.c **** *
 179:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/Timer.c **** void Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/Timer.c **** {
  27              		.loc 1 181 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 182:.\Generated_Source\PSoC5/Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_ENABLE |= Timer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_STBY_ENABLE |= Timer_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/Timer.c **** 
 188:.\Generated_Source\PSoC5/Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED || Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= Timer_CTRL_ENABLE;
  32              		.loc 1 190 0
  33 0000 024B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F08002 		orr	r2, r2, #128
  36 0008 1A70     		strb	r2, [r3]
  37 000a 7047     		bx	lr
  38              	.L3:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 5


  39              		.align	2
  40              	.L2:
  41 000c 72640040 		.word	1073767538
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	Timer_Enable, .-Timer_Enable
  45              		.section	.text.Timer_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	Timer_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	Timer_Stop, %function
  51              	Timer_Stop:
  52              	.LFB3:
 191:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/Timer.c **** }
 193:.\Generated_Source\PSoC5/Timer.c **** 
 194:.\Generated_Source\PSoC5/Timer.c **** 
 195:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Start
 197:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/Timer.c **** *
 199:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/Timer.c **** *
 204:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/Timer.c **** *  void
 206:.\Generated_Source\PSoC5/Timer.c **** *
 207:.\Generated_Source\PSoC5/Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/Timer.c **** *  void
 209:.\Generated_Source\PSoC5/Timer.c **** *
 210:.\Generated_Source\PSoC5/Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/Timer.c **** *  Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/Timer.c **** *
 214:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/Timer.c **** void Timer_Start(void) 
 216:.\Generated_Source\PSoC5/Timer.c **** {
 217:.\Generated_Source\PSoC5/Timer.c ****     if(Timer_initVar == 0u)
 218:.\Generated_Source\PSoC5/Timer.c ****     {
 219:.\Generated_Source\PSoC5/Timer.c ****         Timer_Init();
 220:.\Generated_Source\PSoC5/Timer.c **** 
 221:.\Generated_Source\PSoC5/Timer.c ****         Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:.\Generated_Source\PSoC5/Timer.c ****     }
 223:.\Generated_Source\PSoC5/Timer.c **** 
 224:.\Generated_Source\PSoC5/Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/Timer.c ****     Timer_Enable();
 226:.\Generated_Source\PSoC5/Timer.c **** }
 227:.\Generated_Source\PSoC5/Timer.c **** 
 228:.\Generated_Source\PSoC5/Timer.c **** 
 229:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Stop
 231:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/Timer.c **** *
 233:.\Generated_Source\PSoC5/Timer.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 6


 234:.\Generated_Source\PSoC5/Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/Timer.c **** *
 237:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/Timer.c **** *  void
 239:.\Generated_Source\PSoC5/Timer.c **** *
 240:.\Generated_Source\PSoC5/Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/Timer.c **** *  void
 242:.\Generated_Source\PSoC5/Timer.c **** *
 243:.\Generated_Source\PSoC5/Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/Timer.c **** *
 246:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/Timer.c **** void Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/Timer.c **** {
  53              		.loc 1 248 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 249:.\Generated_Source\PSoC5/Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/Timer.c ****     #if(!Timer_UDB_CONTROL_REG_REMOVED || Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_ENABLE));
  58              		.loc 1 251 0
  59 0000 024B     		ldr	r3, .L5
  60 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  61 0004 02F07F02 		and	r2, r2, #127
  62 0008 1A70     		strb	r2, [r3]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 72640040 		.word	1073767538
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	Timer_Stop, .-Timer_Stop
  71              		.section	.text.Timer_SetInterruptMode,"ax",%progbits
  72              		.align	2
  73              		.global	Timer_SetInterruptMode
  74              		.thumb
  75              		.thumb_func
  76              		.type	Timer_SetInterruptMode, %function
  77              	Timer_SetInterruptMode:
  78              	.LFB4:
 252:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/Timer.c **** 
 254:.\Generated_Source\PSoC5/Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_ENABLE &= ((uint8)(~Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/Timer.c **** }
 260:.\Generated_Source\PSoC5/Timer.c **** 
 261:.\Generated_Source\PSoC5/Timer.c **** 
 262:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 7


 265:.\Generated_Source\PSoC5/Timer.c **** *
 266:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/Timer.c **** *
 271:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/Timer.c **** *
 275:.\Generated_Source\PSoC5/Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/Timer.c **** *  void
 277:.\Generated_Source\PSoC5/Timer.c **** *
 278:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/Timer.c **** {
  79              		.loc 1 280 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 281:.\Generated_Source\PSoC5/Timer.c ****     Timer_STATUS_MASK = interruptMode;
  85              		.loc 1 281 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 85640040 		.word	1073767557
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
  96              		.section	.text.Timer_SoftwareCapture,"ax",%progbits
  97              		.align	2
  98              		.global	Timer_SoftwareCapture
  99              		.thumb
 100              		.thumb_func
 101              		.type	Timer_SoftwareCapture, %function
 102              	Timer_SoftwareCapture:
 103              	.LFB5:
 282:.\Generated_Source\PSoC5/Timer.c **** }
 283:.\Generated_Source\PSoC5/Timer.c **** 
 284:.\Generated_Source\PSoC5/Timer.c **** 
 285:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/Timer.c **** *
 289:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/Timer.c **** *
 292:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/Timer.c **** *  void
 294:.\Generated_Source\PSoC5/Timer.c **** *
 295:.\Generated_Source\PSoC5/Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/Timer.c **** *  void
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 8


 297:.\Generated_Source\PSoC5/Timer.c **** *
 298:.\Generated_Source\PSoC5/Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/Timer.c **** *
 301:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/Timer.c **** void Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/Timer.c **** {
 104              		.loc 1 303 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 304:.\Generated_Source\PSoC5/Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG16(Timer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/Timer.c ****     #else
 308:.\Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG8(Timer_COUNTER_LSB_PTR_8BIT);
 109              		.loc 1 308 0
 110 0000 014B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 0004 7047     		bx	lr
 113              	.L12:
 114 0006 00BF     		.align	2
 115              	.L11:
 116 0008 02640040 		.word	1073767426
 117              		.cfi_endproc
 118              	.LFE5:
 119              		.size	Timer_SoftwareCapture, .-Timer_SoftwareCapture
 120              		.section	.text.Timer_ReadStatusRegister,"ax",%progbits
 121              		.align	2
 122              		.global	Timer_ReadStatusRegister
 123              		.thumb
 124              		.thumb_func
 125              		.type	Timer_ReadStatusRegister, %function
 126              	Timer_ReadStatusRegister:
 127              	.LFB6:
 309:.\Generated_Source\PSoC5/Timer.c ****     #endif/* (Timer_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/Timer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/Timer.c **** }
 312:.\Generated_Source\PSoC5/Timer.c **** 
 313:.\Generated_Source\PSoC5/Timer.c **** 
 314:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/Timer.c **** *
 318:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/Timer.c **** *
 323:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/Timer.c **** *  void
 325:.\Generated_Source\PSoC5/Timer.c **** *
 326:.\Generated_Source\PSoC5/Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/Timer.c **** *
 329:.\Generated_Source\PSoC5/Timer.c **** * Side Effects:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 9


 330:.\Generated_Source\PSoC5/Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/Timer.c **** *
 332:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/Timer.c **** uint8   Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/Timer.c **** {
 128              		.loc 1 334 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 335:.\Generated_Source\PSoC5/Timer.c ****     return (Timer_STATUS);
 133              		.loc 1 335 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:.\Generated_Source\PSoC5/Timer.c **** }
 136              		.loc 1 336 0
 137 0004 7047     		bx	lr
 138              	.L15:
 139 0006 00BF     		.align	2
 140              	.L14:
 141 0008 65640040 		.word	1073767525
 142              		.cfi_endproc
 143              	.LFE6:
 144              		.size	Timer_ReadStatusRegister, .-Timer_ReadStatusRegister
 145              		.section	.text.Timer_ReadControlRegister,"ax",%progbits
 146              		.align	2
 147              		.global	Timer_ReadControlRegister
 148              		.thumb
 149              		.thumb_func
 150              		.type	Timer_ReadControlRegister, %function
 151              	Timer_ReadControlRegister:
 152              	.LFB7:
 337:.\Generated_Source\PSoC5/Timer.c **** 
 338:.\Generated_Source\PSoC5/Timer.c **** 
 339:.\Generated_Source\PSoC5/Timer.c **** #if (!Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/Timer.c **** 
 341:.\Generated_Source\PSoC5/Timer.c **** 
 342:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/Timer.c **** *
 346:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/Timer.c **** *
 349:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/Timer.c **** *  void
 351:.\Generated_Source\PSoC5/Timer.c **** *
 352:.\Generated_Source\PSoC5/Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/Timer.c **** *
 355:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/Timer.c **** uint8 Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/Timer.c **** {
 153              		.loc 1 357 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 10


 157              		@ link register save eliminated.
 358:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/Timer.c ****         return ((uint8)Timer_CONTROL);
 158              		.loc 1 359 0
 159 0000 014B     		ldr	r3, .L17
 160 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:.\Generated_Source\PSoC5/Timer.c ****     #else
 361:.\Generated_Source\PSoC5/Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/Timer.c **** }
 161              		.loc 1 363 0
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 00BF     		.align	2
 165              	.L17:
 166 0008 72640040 		.word	1073767538
 167              		.cfi_endproc
 168              	.LFE7:
 169              		.size	Timer_ReadControlRegister, .-Timer_ReadControlRegister
 170              		.section	.text.Timer_WriteControlRegister,"ax",%progbits
 171              		.align	2
 172              		.global	Timer_WriteControlRegister
 173              		.thumb
 174              		.thumb_func
 175              		.type	Timer_WriteControlRegister, %function
 176              	Timer_WriteControlRegister:
 177              	.LFB8:
 364:.\Generated_Source\PSoC5/Timer.c **** 
 365:.\Generated_Source\PSoC5/Timer.c **** 
 366:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/Timer.c **** *
 370:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/Timer.c **** *
 373:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 374:.\Generated_Source\PSoC5/Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/Timer.c **** *
 376:.\Generated_Source\PSoC5/Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/Timer.c **** *
 378:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/Timer.c **** void Timer_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/Timer.c **** {
 178              		.loc 1 380 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL1:
 381:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL = control;
 184              		.loc 1 382 0
 185 0000 014B     		ldr	r3, .L20
 186 0002 1870     		strb	r0, [r3]
 187 0004 7047     		bx	lr
 188              	.L21:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 11


 189 0006 00BF     		.align	2
 190              	.L20:
 191 0008 72640040 		.word	1073767538
 192              		.cfi_endproc
 193              	.LFE8:
 194              		.size	Timer_WriteControlRegister, .-Timer_WriteControlRegister
 195              		.section	.text.Timer_ReadPeriod,"ax",%progbits
 196              		.align	2
 197              		.global	Timer_ReadPeriod
 198              		.thumb
 199              		.thumb_func
 200              		.type	Timer_ReadPeriod, %function
 201              	Timer_ReadPeriod:
 202              	.LFB9:
 383:.\Generated_Source\PSoC5/Timer.c ****     #else
 384:.\Generated_Source\PSoC5/Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/Timer.c **** }
 387:.\Generated_Source\PSoC5/Timer.c **** 
 388:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/Timer.c **** 
 390:.\Generated_Source\PSoC5/Timer.c **** 
 391:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/Timer.c **** *
 395:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/Timer.c **** *
 398:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/Timer.c **** *  void
 400:.\Generated_Source\PSoC5/Timer.c **** *
 401:.\Generated_Source\PSoC5/Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/Timer.c **** *
 404:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/Timer.c **** uint32 Timer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/Timer.c **** {
 203              		.loc 1 406 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 407:.\Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/Timer.c ****        return ((uint32)CY_GET_REG16(Timer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/Timer.c ****    #else
 410:.\Generated_Source\PSoC5/Timer.c ****        return (CY_GET_REG32(Timer_PERIOD_LSB_PTR));
 208              		.loc 1 410 0
 209 0000 014B     		ldr	r3, .L23
 210 0002 1868     		ldr	r0, [r3]
 411:.\Generated_Source\PSoC5/Timer.c ****    #endif /* (Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/Timer.c **** }
 211              		.loc 1 412 0
 212 0004 7047     		bx	lr
 213              	.L24:
 214 0006 00BF     		.align	2
 215              	.L23:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 12


 216 0008 22640040 		.word	1073767458
 217              		.cfi_endproc
 218              	.LFE9:
 219              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 220              		.section	.text.Timer_WritePeriod,"ax",%progbits
 221              		.align	2
 222              		.global	Timer_WritePeriod
 223              		.thumb
 224              		.thumb_func
 225              		.type	Timer_WritePeriod, %function
 226              	Timer_WritePeriod:
 227              	.LFB10:
 413:.\Generated_Source\PSoC5/Timer.c **** 
 414:.\Generated_Source\PSoC5/Timer.c **** 
 415:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WritePeriod
 417:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/Timer.c **** *
 419:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/Timer.c **** *
 423:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/Timer.c **** *
 427:.\Generated_Source\PSoC5/Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/Timer.c **** *  void
 429:.\Generated_Source\PSoC5/Timer.c **** *
 430:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/Timer.c **** void Timer_WritePeriod(uint32 period) 
 432:.\Generated_Source\PSoC5/Timer.c **** {
 228              		.loc 1 432 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233              	.LVL2:
 433:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/Timer.c ****     #else
 437:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG32(Timer_PERIOD_LSB_PTR, period);
 234              		.loc 1 437 0
 235 0000 014B     		ldr	r3, .L26
 236 0002 1860     		str	r0, [r3]
 237 0004 7047     		bx	lr
 238              	.L27:
 239 0006 00BF     		.align	2
 240              	.L26:
 241 0008 22640040 		.word	1073767458
 242              		.cfi_endproc
 243              	.LFE10:
 244              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 245              		.section	.text.Timer_ReadCapture,"ax",%progbits
 246              		.align	2
 247              		.global	Timer_ReadCapture
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 13


 248              		.thumb
 249              		.thumb_func
 250              		.type	Timer_ReadCapture, %function
 251              	Timer_ReadCapture:
 252              	.LFB11:
 438:.\Generated_Source\PSoC5/Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/Timer.c **** }
 440:.\Generated_Source\PSoC5/Timer.c **** 
 441:.\Generated_Source\PSoC5/Timer.c **** 
 442:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCapture
 444:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/Timer.c **** *
 446:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/Timer.c **** *
 449:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 450:.\Generated_Source\PSoC5/Timer.c **** *  void
 451:.\Generated_Source\PSoC5/Timer.c **** *
 452:.\Generated_Source\PSoC5/Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/Timer.c **** *
 455:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/Timer.c **** uint32 Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/Timer.c **** {
 253              		.loc 1 457 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 458:.\Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/Timer.c ****        return ((uint32)CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/Timer.c ****    #else
 461:.\Generated_Source\PSoC5/Timer.c ****        return (CY_GET_REG32(Timer_CAPTURE_LSB_PTR));
 258              		.loc 1 461 0
 259 0000 014B     		ldr	r3, .L29
 260 0002 1868     		ldr	r0, [r3]
 462:.\Generated_Source\PSoC5/Timer.c ****    #endif /* (Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/Timer.c **** }
 261              		.loc 1 463 0
 262 0004 7047     		bx	lr
 263              	.L30:
 264 0006 00BF     		.align	2
 265              	.L29:
 266 0008 42640040 		.word	1073767490
 267              		.cfi_endproc
 268              	.LFE11:
 269              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 270              		.section	.text.Timer_WriteCounter,"ax",%progbits
 271              		.align	2
 272              		.global	Timer_WriteCounter
 273              		.thumb
 274              		.thumb_func
 275              		.type	Timer_WriteCounter, %function
 276              	Timer_WriteCounter:
 277              	.LFB12:
 464:.\Generated_Source\PSoC5/Timer.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 14


 465:.\Generated_Source\PSoC5/Timer.c **** 
 466:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WriteCounter
 468:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Timer.c **** *
 470:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/Timer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/Timer.c **** *
 473:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 474:.\Generated_Source\PSoC5/Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/Timer.c **** *
 476:.\Generated_Source\PSoC5/Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/Timer.c **** *  void
 478:.\Generated_Source\PSoC5/Timer.c **** *
 479:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/Timer.c **** void Timer_WriteCounter(uint32 counter) 
 481:.\Generated_Source\PSoC5/Timer.c **** {
 278              		.loc 1 481 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283              	.LVL3:
 482:.\Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/Timer.c ****          */
 486:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/Timer.c ****         
 488:.\Generated_Source\PSoC5/Timer.c ****     #else
 489:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG32(Timer_COUNTER_LSB_PTR, counter);
 284              		.loc 1 489 0
 285 0000 014B     		ldr	r3, .L32
 286 0002 1860     		str	r0, [r3]
 287 0004 7047     		bx	lr
 288              	.L33:
 289 0006 00BF     		.align	2
 290              	.L32:
 291 0008 02640040 		.word	1073767426
 292              		.cfi_endproc
 293              	.LFE12:
 294              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 295              		.section	.text.Timer_ReadCounter,"ax",%progbits
 296              		.align	2
 297              		.global	Timer_ReadCounter
 298              		.thumb
 299              		.thumb_func
 300              		.type	Timer_ReadCounter, %function
 301              	Timer_ReadCounter:
 302              	.LFB13:
 490:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/Timer.c **** }
 492:.\Generated_Source\PSoC5/Timer.c **** 
 493:.\Generated_Source\PSoC5/Timer.c **** 
 494:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCounter
 496:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 15


 497:.\Generated_Source\PSoC5/Timer.c **** *
 498:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/Timer.c **** *
 501:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/Timer.c **** *  void
 503:.\Generated_Source\PSoC5/Timer.c **** *
 504:.\Generated_Source\PSoC5/Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/Timer.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/Timer.c **** *
 507:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/Timer.c **** uint32 Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/Timer.c **** {
 303              		.loc 1 509 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 510:.\Generated_Source\PSoC5/Timer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG16(Timer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/Timer.c ****     #else
 516:.\Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG8(Timer_COUNTER_LSB_PTR_8BIT);
 308              		.loc 1 516 0
 309 0000 024B     		ldr	r3, .L35
 310 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:.\Generated_Source\PSoC5/Timer.c ****     #endif/* (Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/Timer.c **** 
 519:.\Generated_Source\PSoC5/Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/Timer.c ****         return ((uint32)CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/Timer.c ****     #else
 523:.\Generated_Source\PSoC5/Timer.c ****         return (CY_GET_REG32(Timer_CAPTURE_LSB_PTR));
 311              		.loc 1 523 0
 312 0004 024B     		ldr	r3, .L35+4
 313 0006 1868     		ldr	r0, [r3]
 524:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/Timer.c **** }
 314              		.loc 1 525 0
 315 0008 7047     		bx	lr
 316              	.L36:
 317 000a 00BF     		.align	2
 318              	.L35:
 319 000c 02640040 		.word	1073767426
 320 0010 42640040 		.word	1073767490
 321              		.cfi_endproc
 322              	.LFE13:
 323              		.size	Timer_ReadCounter, .-Timer_ReadCounter
 324              		.section	.text.Timer_ClearFIFO,"ax",%progbits
 325              		.align	2
 326              		.global	Timer_ClearFIFO
 327              		.thumb
 328              		.thumb_func
 329              		.type	Timer_ClearFIFO, %function
 330              	Timer_ClearFIFO:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 16


 331              	.LFB14:
 526:.\Generated_Source\PSoC5/Timer.c **** 
 527:.\Generated_Source\PSoC5/Timer.c **** 
 528:.\Generated_Source\PSoC5/Timer.c **** #if(!Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/Timer.c **** 
 530:.\Generated_Source\PSoC5/Timer.c ****     
 531:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/Timer.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC5/Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/Timer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/Timer.c **** 
 536:.\Generated_Source\PSoC5/Timer.c **** 
 537:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/Timer.c **** 
 539:.\Generated_Source\PSoC5/Timer.c **** 
 540:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetCaptureMode
 542:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/Timer.c **** *
 544:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 545:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/Timer.c **** *
 547:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 548:.\Generated_Source\PSoC5/Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/Timer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/Timer.c **** *  #define Timer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/Timer.c ****  identifiers
 556:.\Generated_Source\PSoC5/Timer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/Timer.c **** *
 562:.\Generated_Source\PSoC5/Timer.c **** * Return:
 563:.\Generated_Source\PSoC5/Timer.c **** *  void
 564:.\Generated_Source\PSoC5/Timer.c **** *
 565:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/Timer.c **** {
 568:.\Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/Timer.c ****     captureMode &= (Timer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/Timer.c **** 
 572:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/Timer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/Timer.c **** 
 576:.\Generated_Source\PSoC5/Timer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC5/Timer.c **** }
 580:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/Timer.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 17


 582:.\Generated_Source\PSoC5/Timer.c **** 
 583:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/Timer.c **** 
 585:.\Generated_Source\PSoC5/Timer.c **** 
 586:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetTriggerMode
 588:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/Timer.c **** *
 590:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 591:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/Timer.c **** *
 593:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 594:.\Generated_Source\PSoC5/Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/Timer.c **** *
 601:.\Generated_Source\PSoC5/Timer.c **** * Return:
 602:.\Generated_Source\PSoC5/Timer.c **** *  void
 603:.\Generated_Source\PSoC5/Timer.c **** *
 604:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/Timer.c **** {
 607:.\Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/Timer.c ****     triggerMode &= Timer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/Timer.c **** 
 610:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 611:.\Generated_Source\PSoC5/Timer.c ****     
 612:.\Generated_Source\PSoC5/Timer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/Timer.c **** 
 615:.\Generated_Source\PSoC5/Timer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= (triggerMode | Timer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/Timer.c **** }
 619:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/Timer.c **** 
 621:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/Timer.c **** 
 623:.\Generated_Source\PSoC5/Timer.c **** 
 624:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_EnableTrigger
 626:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/Timer.c **** *
 628:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 629:.\Generated_Source\PSoC5/Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/Timer.c **** *
 631:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 632:.\Generated_Source\PSoC5/Timer.c **** *  void
 633:.\Generated_Source\PSoC5/Timer.c **** *
 634:.\Generated_Source\PSoC5/Timer.c **** * Return:
 635:.\Generated_Source\PSoC5/Timer.c **** *  void
 636:.\Generated_Source\PSoC5/Timer.c **** *
 637:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/Timer.c **** void Timer_EnableTrigger(void) 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 18


 639:.\Generated_Source\PSoC5/Timer.c **** {
 640:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 641:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= Timer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/Timer.c **** }
 644:.\Generated_Source\PSoC5/Timer.c **** 
 645:.\Generated_Source\PSoC5/Timer.c **** 
 646:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_DisableTrigger
 648:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/Timer.c **** *
 650:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 651:.\Generated_Source\PSoC5/Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/Timer.c **** *
 653:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 654:.\Generated_Source\PSoC5/Timer.c **** *  void
 655:.\Generated_Source\PSoC5/Timer.c **** *
 656:.\Generated_Source\PSoC5/Timer.c **** * Return:
 657:.\Generated_Source\PSoC5/Timer.c **** *  void
 658:.\Generated_Source\PSoC5/Timer.c **** *
 659:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/Timer.c **** void Timer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/Timer.c **** {
 662:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed */
 663:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/Timer.c **** }
 666:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/Timer.c **** 
 668:.\Generated_Source\PSoC5/Timer.c **** #if(Timer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/Timer.c **** 
 670:.\Generated_Source\PSoC5/Timer.c **** 
 671:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetInterruptCount
 673:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/Timer.c **** *
 675:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 676:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/Timer.c **** *
 678:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 679:.\Generated_Source\PSoC5/Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/Timer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/Timer.c **** *
 684:.\Generated_Source\PSoC5/Timer.c **** * Return:
 685:.\Generated_Source\PSoC5/Timer.c **** *  void
 686:.\Generated_Source\PSoC5/Timer.c **** *
 687:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/Timer.c **** {
 690:.\Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/Timer.c ****     interruptCount &= Timer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/Timer.c **** 
 693:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/Timer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_INTCNT_MASK));
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 19


 696:.\Generated_Source\PSoC5/Timer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/Timer.c **** }
 700:.\Generated_Source\PSoC5/Timer.c **** #endif /* Timer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/Timer.c **** 
 702:.\Generated_Source\PSoC5/Timer.c **** 
 703:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/Timer.c **** 
 705:.\Generated_Source\PSoC5/Timer.c **** 
 706:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetCaptureCount
 708:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/Timer.c **** *
 710:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 711:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/Timer.c **** *
 713:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 714:.\Generated_Source\PSoC5/Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/Timer.c **** *                captures.
 717:.\Generated_Source\PSoC5/Timer.c **** *
 718:.\Generated_Source\PSoC5/Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/Timer.c **** *  void
 720:.\Generated_Source\PSoC5/Timer.c **** *
 721:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/Timer.c **** {
 724:.\Generated_Source\PSoC5/Timer.c ****     Timer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/Timer.c **** }
 726:.\Generated_Source\PSoC5/Timer.c **** 
 727:.\Generated_Source\PSoC5/Timer.c **** 
 728:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCaptureCount
 730:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/Timer.c **** *
 732:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 733:.\Generated_Source\PSoC5/Timer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/Timer.c **** *
 735:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 736:.\Generated_Source\PSoC5/Timer.c **** *  void
 737:.\Generated_Source\PSoC5/Timer.c **** *
 738:.\Generated_Source\PSoC5/Timer.c **** * Return:
 739:.\Generated_Source\PSoC5/Timer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/Timer.c **** *
 741:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/Timer.c **** uint8 Timer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/Timer.c **** {
 744:.\Generated_Source\PSoC5/Timer.c ****     return ((uint8)Timer_CAP_COUNT);
 745:.\Generated_Source\PSoC5/Timer.c **** }
 746:.\Generated_Source\PSoC5/Timer.c **** #endif /* Timer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/Timer.c **** 
 748:.\Generated_Source\PSoC5/Timer.c **** 
 749:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ClearFIFO
 751:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/Timer.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 20


 753:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 754:.\Generated_Source\PSoC5/Timer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/Timer.c **** *
 756:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 757:.\Generated_Source\PSoC5/Timer.c **** *  void
 758:.\Generated_Source\PSoC5/Timer.c **** *
 759:.\Generated_Source\PSoC5/Timer.c **** * Return:
 760:.\Generated_Source\PSoC5/Timer.c **** *  void
 761:.\Generated_Source\PSoC5/Timer.c **** *
 762:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/Timer.c **** void Timer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/Timer.c **** {
 332              		.loc 1 764 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 08B5     		push	{r3, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 765:.\Generated_Source\PSoC5/Timer.c ****     while(0u != (Timer_ReadStatusRegister() & Timer_STATUS_FIFONEMP))
 340              		.loc 1 765 0
 341 0002 01E0     		b	.L38
 342              	.L39:
 766:.\Generated_Source\PSoC5/Timer.c ****     {
 767:.\Generated_Source\PSoC5/Timer.c ****         (void)Timer_ReadCapture();
 343              		.loc 1 767 0
 344 0004 FFF7FEFF 		bl	Timer_ReadCapture
 345              	.LVL4:
 346              	.L38:
 765:.\Generated_Source\PSoC5/Timer.c ****     while(0u != (Timer_ReadStatusRegister() & Timer_STATUS_FIFONEMP))
 347              		.loc 1 765 0 discriminator 1
 348 0008 FFF7FEFF 		bl	Timer_ReadStatusRegister
 349              	.LVL5:
 350 000c 10F0080F 		tst	r0, #8
 351 0010 F8D1     		bne	.L39
 768:.\Generated_Source\PSoC5/Timer.c ****     }
 769:.\Generated_Source\PSoC5/Timer.c **** }
 352              		.loc 1 769 0
 353 0012 08BD     		pop	{r3, pc}
 354              		.cfi_endproc
 355              	.LFE14:
 356              		.size	Timer_ClearFIFO, .-Timer_ClearFIFO
 357              		.section	.text.Timer_Init,"ax",%progbits
 358              		.align	2
 359              		.global	Timer_Init
 360              		.thumb
 361              		.thumb_func
 362              		.type	Timer_Init, %function
 363              	Timer_Init:
 364              	.LFB0:
  44:.\Generated_Source\PSoC5/Timer.c **** {
 365              		.loc 1 44 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 21


 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 118:.\Generated_Source\PSoC5/Timer.c ****     Timer_WritePeriod(Timer_INIT_PERIOD);
 373              		.loc 1 118 0
 374 0002 4FF0FF30 		mov	r0, #-1
 375 0006 FFF7FEFF 		bl	Timer_WritePeriod
 376              	.LVL6:
 119:.\Generated_Source\PSoC5/Timer.c ****     Timer_WriteCounter(Timer_INIT_PERIOD);
 377              		.loc 1 119 0
 378 000a 4FF0FF30 		mov	r0, #-1
 379 000e FFF7FEFF 		bl	Timer_WriteCounter
 380              	.LVL7:
 142:.\Generated_Source\PSoC5/Timer.c ****         Timer_interruptState = CyEnterCriticalSection();
 381              		.loc 1 142 0
 382 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 383              	.LVL8:
 145:.\Generated_Source\PSoC5/Timer.c ****         Timer_STATUS_AUX_CTRL |= Timer_STATUS_ACTL_INT_EN_MASK;
 384              		.loc 1 145 0
 385 0016 064B     		ldr	r3, .L41
 386 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 387 001a 42F01002 		orr	r2, r2, #16
 388 001e 1A70     		strb	r2, [r3]
 148:.\Generated_Source\PSoC5/Timer.c ****         CyExitCriticalSection(Timer_interruptState);
 389              		.loc 1 148 0
 390 0020 FFF7FEFF 		bl	CyExitCriticalSection
 391              	.LVL9:
 159:.\Generated_Source\PSoC5/Timer.c ****         Timer_ClearFIFO();
 392              		.loc 1 159 0
 393 0024 FFF7FEFF 		bl	Timer_ClearFIFO
 394              	.LVL10:
 162:.\Generated_Source\PSoC5/Timer.c ****     Timer_SetInterruptMode(Timer_INIT_INTERRUPT_MODE);
 395              		.loc 1 162 0
 396 0028 0020     		movs	r0, #0
 397 002a FFF7FEFF 		bl	Timer_SetInterruptMode
 398              	.LVL11:
 399 002e 08BD     		pop	{r3, pc}
 400              	.L42:
 401              		.align	2
 402              	.L41:
 403 0030 95640040 		.word	1073767573
 404              		.cfi_endproc
 405              	.LFE0:
 406              		.size	Timer_Init, .-Timer_Init
 407              		.section	.text.Timer_Start,"ax",%progbits
 408              		.align	2
 409              		.global	Timer_Start
 410              		.thumb
 411              		.thumb_func
 412              		.type	Timer_Start, %function
 413              	Timer_Start:
 414              	.LFB2:
 216:.\Generated_Source\PSoC5/Timer.c **** {
 415              		.loc 1 216 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 22


 419 0000 08B5     		push	{r3, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 3, -8
 422              		.cfi_offset 14, -4
 217:.\Generated_Source\PSoC5/Timer.c ****     if(Timer_initVar == 0u)
 423              		.loc 1 217 0
 424 0002 054B     		ldr	r3, .L45
 425 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 426 0006 23B9     		cbnz	r3, .L44
 219:.\Generated_Source\PSoC5/Timer.c ****         Timer_Init();
 427              		.loc 1 219 0
 428 0008 FFF7FEFF 		bl	Timer_Init
 429              	.LVL12:
 221:.\Generated_Source\PSoC5/Timer.c ****         Timer_initVar = 1u;   /* Clear this bit for Initialization */
 430              		.loc 1 221 0
 431 000c 0122     		movs	r2, #1
 432 000e 024B     		ldr	r3, .L45
 433 0010 1A70     		strb	r2, [r3]
 434              	.L44:
 225:.\Generated_Source\PSoC5/Timer.c ****     Timer_Enable();
 435              		.loc 1 225 0
 436 0012 FFF7FEFF 		bl	Timer_Enable
 437              	.LVL13:
 438 0016 08BD     		pop	{r3, pc}
 439              	.L46:
 440              		.align	2
 441              	.L45:
 442 0018 00000000 		.word	.LANCHOR0
 443              		.cfi_endproc
 444              	.LFE2:
 445              		.size	Timer_Start, .-Timer_Start
 446              		.global	Timer_initVar
 447              		.bss
 448              		.set	.LANCHOR0,. + 0
 449              		.type	Timer_initVar, %object
 450              		.size	Timer_initVar, 1
 451              	Timer_initVar:
 452 0000 00       		.space	1
 453              		.text
 454              	.Letext0:
 455              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 456              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 457              		.section	.debug_info,"",%progbits
 458              	.Ldebug_info0:
 459 0000 E3020000 		.4byte	0x2e3
 460 0004 0400     		.2byte	0x4
 461 0006 00000000 		.4byte	.Ldebug_abbrev0
 462 000a 04       		.byte	0x4
 463 000b 01       		.uleb128 0x1
 464 000c 9B010000 		.4byte	.LASF36
 465 0010 01       		.byte	0x1
 466 0011 3C020000 		.4byte	.LASF37
 467 0015 5D020000 		.4byte	.LASF38
 468 0019 00000000 		.4byte	.Ldebug_ranges0+0
 469 001d 00000000 		.4byte	0
 470 0021 00000000 		.4byte	.Ldebug_line0
 471 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 23


 472 0026 01       		.byte	0x1
 473 0027 06       		.byte	0x6
 474 0028 FE020000 		.4byte	.LASF0
 475 002c 02       		.uleb128 0x2
 476 002d 01       		.byte	0x1
 477 002e 08       		.byte	0x8
 478 002f 8B000000 		.4byte	.LASF1
 479 0033 02       		.uleb128 0x2
 480 0034 02       		.byte	0x2
 481 0035 05       		.byte	0x5
 482 0036 18010000 		.4byte	.LASF2
 483 003a 02       		.uleb128 0x2
 484 003b 02       		.byte	0x2
 485 003c 07       		.byte	0x7
 486 003d 38000000 		.4byte	.LASF3
 487 0041 02       		.uleb128 0x2
 488 0042 04       		.byte	0x4
 489 0043 05       		.byte	0x5
 490 0044 E5020000 		.4byte	.LASF4
 491 0048 02       		.uleb128 0x2
 492 0049 04       		.byte	0x4
 493 004a 07       		.byte	0x7
 494 004b 4F010000 		.4byte	.LASF5
 495 004f 02       		.uleb128 0x2
 496 0050 08       		.byte	0x8
 497 0051 05       		.byte	0x5
 498 0052 20020000 		.4byte	.LASF6
 499 0056 02       		.uleb128 0x2
 500 0057 08       		.byte	0x8
 501 0058 07       		.byte	0x7
 502 0059 74000000 		.4byte	.LASF7
 503 005d 03       		.uleb128 0x3
 504 005e 04       		.byte	0x4
 505 005f 05       		.byte	0x5
 506 0060 696E7400 		.ascii	"int\000"
 507 0064 02       		.uleb128 0x2
 508 0065 04       		.byte	0x4
 509 0066 07       		.byte	0x7
 510 0067 61010000 		.4byte	.LASF8
 511 006b 04       		.uleb128 0x4
 512 006c DC000000 		.4byte	.LASF9
 513 0070 02       		.byte	0x2
 514 0071 B4       		.byte	0xb4
 515 0072 2C000000 		.4byte	0x2c
 516 0076 04       		.uleb128 0x4
 517 0077 22010000 		.4byte	.LASF10
 518 007b 02       		.byte	0x2
 519 007c B6       		.byte	0xb6
 520 007d 48000000 		.4byte	0x48
 521 0081 02       		.uleb128 0x2
 522 0082 04       		.byte	0x4
 523 0083 04       		.byte	0x4
 524 0084 66000000 		.4byte	.LASF11
 525 0088 02       		.uleb128 0x2
 526 0089 08       		.byte	0x8
 527 008a 04       		.byte	0x4
 528 008b 00010000 		.4byte	.LASF12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 24


 529 008f 02       		.uleb128 0x2
 530 0090 01       		.byte	0x1
 531 0091 08       		.byte	0x8
 532 0092 EE020000 		.4byte	.LASF13
 533 0096 05       		.uleb128 0x5
 534 0097 C0000000 		.4byte	.LASF14
 535 009b 02       		.byte	0x2
 536 009c 5E01     		.2byte	0x15e
 537 009e A2000000 		.4byte	0xa2
 538 00a2 06       		.uleb128 0x6
 539 00a3 6B000000 		.4byte	0x6b
 540 00a7 05       		.uleb128 0x5
 541 00a8 00000000 		.4byte	.LASF15
 542 00ac 02       		.byte	0x2
 543 00ad 6001     		.2byte	0x160
 544 00af B3000000 		.4byte	0xb3
 545 00b3 06       		.uleb128 0x6
 546 00b4 76000000 		.4byte	0x76
 547 00b8 02       		.uleb128 0x2
 548 00b9 04       		.byte	0x4
 549 00ba 07       		.byte	0x7
 550 00bb 17020000 		.4byte	.LASF16
 551 00bf 07       		.uleb128 0x7
 552 00c0 18030000 		.4byte	.LASF17
 553 00c4 01       		.byte	0x1
 554 00c5 B4       		.byte	0xb4
 555 00c6 00000000 		.4byte	.LFB1
 556 00ca 10000000 		.4byte	.LFE1-.LFB1
 557 00ce 01       		.uleb128 0x1
 558 00cf 9C       		.byte	0x9c
 559 00d0 07       		.uleb128 0x7
 560 00d1 5B000000 		.4byte	.LASF18
 561 00d5 01       		.byte	0x1
 562 00d6 F7       		.byte	0xf7
 563 00d7 00000000 		.4byte	.LFB3
 564 00db 10000000 		.4byte	.LFE3-.LFB3
 565 00df 01       		.uleb128 0x1
 566 00e0 9C       		.byte	0x9c
 567 00e1 08       		.uleb128 0x8
 568 00e2 C5000000 		.4byte	.LASF22
 569 00e6 01       		.byte	0x1
 570 00e7 1701     		.2byte	0x117
 571 00e9 00000000 		.4byte	.LFB4
 572 00ed 0C000000 		.4byte	.LFE4-.LFB4
 573 00f1 01       		.uleb128 0x1
 574 00f2 9C       		.byte	0x9c
 575 00f3 06010000 		.4byte	0x106
 576 00f7 09       		.uleb128 0x9
 577 00f8 2E020000 		.4byte	.LASF24
 578 00fc 01       		.byte	0x1
 579 00fd 1701     		.2byte	0x117
 580 00ff 6B000000 		.4byte	0x6b
 581 0103 01       		.uleb128 0x1
 582 0104 50       		.byte	0x50
 583 0105 00       		.byte	0
 584 0106 0A       		.uleb128 0xa
 585 0107 EA000000 		.4byte	.LASF19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 25


 586 010b 01       		.byte	0x1
 587 010c 2E01     		.2byte	0x12e
 588 010e 00000000 		.4byte	.LFB5
 589 0112 0C000000 		.4byte	.LFE5-.LFB5
 590 0116 01       		.uleb128 0x1
 591 0117 9C       		.byte	0x9c
 592 0118 0B       		.uleb128 0xb
 593 0119 06000000 		.4byte	.LASF20
 594 011d 01       		.byte	0x1
 595 011e 4D01     		.2byte	0x14d
 596 0120 6B000000 		.4byte	0x6b
 597 0124 00000000 		.4byte	.LFB6
 598 0128 0C000000 		.4byte	.LFE6-.LFB6
 599 012c 01       		.uleb128 0x1
 600 012d 9C       		.byte	0x9c
 601 012e 0B       		.uleb128 0xb
 602 012f 29010000 		.4byte	.LASF21
 603 0133 01       		.byte	0x1
 604 0134 6401     		.2byte	0x164
 605 0136 6B000000 		.4byte	0x6b
 606 013a 00000000 		.4byte	.LFB7
 607 013e 0C000000 		.4byte	.LFE7-.LFB7
 608 0142 01       		.uleb128 0x1
 609 0143 9C       		.byte	0x9c
 610 0144 08       		.uleb128 0x8
 611 0145 A5020000 		.4byte	.LASF23
 612 0149 01       		.byte	0x1
 613 014a 7B01     		.2byte	0x17b
 614 014c 00000000 		.4byte	.LFB8
 615 0150 0C000000 		.4byte	.LFE8-.LFB8
 616 0154 01       		.uleb128 0x1
 617 0155 9C       		.byte	0x9c
 618 0156 69010000 		.4byte	0x169
 619 015a 09       		.uleb128 0x9
 620 015b E2000000 		.4byte	.LASF25
 621 015f 01       		.byte	0x1
 622 0160 7B01     		.2byte	0x17b
 623 0162 6B000000 		.4byte	0x6b
 624 0166 01       		.uleb128 0x1
 625 0167 50       		.byte	0x50
 626 0168 00       		.byte	0
 627 0169 0B       		.uleb128 0xb
 628 016a 07010000 		.4byte	.LASF26
 629 016e 01       		.byte	0x1
 630 016f 9501     		.2byte	0x195
 631 0171 76000000 		.4byte	0x76
 632 0175 00000000 		.4byte	.LFB9
 633 0179 0C000000 		.4byte	.LFE9-.LFB9
 634 017d 01       		.uleb128 0x1
 635 017e 9C       		.byte	0x9c
 636 017f 08       		.uleb128 0x8
 637 0180 AE000000 		.4byte	.LASF27
 638 0184 01       		.byte	0x1
 639 0185 AF01     		.2byte	0x1af
 640 0187 00000000 		.4byte	.LFB10
 641 018b 0C000000 		.4byte	.LFE10-.LFB10
 642 018f 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 26


 643 0190 9C       		.byte	0x9c
 644 0191 A4010000 		.4byte	0x1a4
 645 0195 09       		.uleb128 0x9
 646 0196 1F000000 		.4byte	.LASF28
 647 019a 01       		.byte	0x1
 648 019b AF01     		.2byte	0x1af
 649 019d 76000000 		.4byte	0x76
 650 01a1 01       		.uleb128 0x1
 651 01a2 50       		.byte	0x50
 652 01a3 00       		.byte	0
 653 01a4 0B       		.uleb128 0xb
 654 01a5 C0020000 		.4byte	.LASF29
 655 01a9 01       		.byte	0x1
 656 01aa C801     		.2byte	0x1c8
 657 01ac 76000000 		.4byte	0x76
 658 01b0 00000000 		.4byte	.LFB11
 659 01b4 0C000000 		.4byte	.LFE11-.LFB11
 660 01b8 01       		.uleb128 0x1
 661 01b9 9C       		.byte	0x9c
 662 01ba 08       		.uleb128 0x8
 663 01bb D2020000 		.4byte	.LASF30
 664 01bf 01       		.byte	0x1
 665 01c0 E001     		.2byte	0x1e0
 666 01c2 00000000 		.4byte	.LFB12
 667 01c6 0C000000 		.4byte	.LFE12-.LFB12
 668 01ca 01       		.uleb128 0x1
 669 01cb 9C       		.byte	0x9c
 670 01cc DF010000 		.4byte	0x1df
 671 01d0 09       		.uleb128 0x9
 672 01d1 6C000000 		.4byte	.LASF31
 673 01d5 01       		.byte	0x1
 674 01d6 E001     		.2byte	0x1e0
 675 01d8 76000000 		.4byte	0x76
 676 01dc 01       		.uleb128 0x1
 677 01dd 50       		.byte	0x50
 678 01de 00       		.byte	0
 679 01df 0B       		.uleb128 0xb
 680 01e0 26000000 		.4byte	.LASF32
 681 01e4 01       		.byte	0x1
 682 01e5 FC01     		.2byte	0x1fc
 683 01e7 76000000 		.4byte	0x76
 684 01eb 00000000 		.4byte	.LFB13
 685 01ef 14000000 		.4byte	.LFE13-.LFB13
 686 01f3 01       		.uleb128 0x1
 687 01f4 9C       		.byte	0x9c
 688 01f5 08       		.uleb128 0x8
 689 01f6 4B000000 		.4byte	.LASF33
 690 01fa 01       		.byte	0x1
 691 01fb FB02     		.2byte	0x2fb
 692 01fd 00000000 		.4byte	.LFB14
 693 0201 14000000 		.4byte	.LFE14-.LFB14
 694 0205 01       		.uleb128 0x1
 695 0206 9C       		.byte	0x9c
 696 0207 1E020000 		.4byte	0x21e
 697 020b 0C       		.uleb128 0xc
 698 020c 08000000 		.4byte	.LVL4
 699 0210 A4010000 		.4byte	0x1a4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 27


 700 0214 0C       		.uleb128 0xc
 701 0215 0C000000 		.4byte	.LVL5
 702 0219 18010000 		.4byte	0x118
 703 021d 00       		.byte	0
 704 021e 0D       		.uleb128 0xd
 705 021f F3020000 		.4byte	.LASF34
 706 0223 01       		.byte	0x1
 707 0224 2B       		.byte	0x2b
 708 0225 00000000 		.4byte	.LFB0
 709 0229 34000000 		.4byte	.LFE0-.LFB0
 710 022d 01       		.uleb128 0x1
 711 022e 9C       		.byte	0x9c
 712 022f 95020000 		.4byte	0x295
 713 0233 0E       		.uleb128 0xe
 714 0234 99000000 		.4byte	.LASF39
 715 0238 01       		.byte	0x1
 716 0239 2F       		.byte	0x2f
 717 023a 6B000000 		.4byte	0x6b
 718 023e 00000000 		.4byte	.LLST0
 719 0242 0F       		.uleb128 0xf
 720 0243 0A000000 		.4byte	.LVL6
 721 0247 7F010000 		.4byte	0x17f
 722 024b 56020000 		.4byte	0x256
 723 024f 10       		.uleb128 0x10
 724 0250 01       		.uleb128 0x1
 725 0251 50       		.byte	0x50
 726 0252 02       		.uleb128 0x2
 727 0253 09       		.byte	0x9
 728 0254 FF       		.byte	0xff
 729 0255 00       		.byte	0
 730 0256 0F       		.uleb128 0xf
 731 0257 12000000 		.4byte	.LVL7
 732 025b BA010000 		.4byte	0x1ba
 733 025f 6A020000 		.4byte	0x26a
 734 0263 10       		.uleb128 0x10
 735 0264 01       		.uleb128 0x1
 736 0265 50       		.byte	0x50
 737 0266 02       		.uleb128 0x2
 738 0267 09       		.byte	0x9
 739 0268 FF       		.byte	0xff
 740 0269 00       		.byte	0
 741 026a 0C       		.uleb128 0xc
 742 026b 16000000 		.4byte	.LVL8
 743 026f CE020000 		.4byte	0x2ce
 744 0273 0C       		.uleb128 0xc
 745 0274 24000000 		.4byte	.LVL9
 746 0278 D9020000 		.4byte	0x2d9
 747 027c 0C       		.uleb128 0xc
 748 027d 28000000 		.4byte	.LVL10
 749 0281 F5010000 		.4byte	0x1f5
 750 0285 11       		.uleb128 0x11
 751 0286 2E000000 		.4byte	.LVL11
 752 028a E1000000 		.4byte	0xe1
 753 028e 10       		.uleb128 0x10
 754 028f 01       		.uleb128 0x1
 755 0290 50       		.byte	0x50
 756 0291 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 28


 757 0292 30       		.byte	0x30
 758 0293 00       		.byte	0
 759 0294 00       		.byte	0
 760 0295 0D       		.uleb128 0xd
 761 0296 43010000 		.4byte	.LASF35
 762 029a 01       		.byte	0x1
 763 029b D7       		.byte	0xd7
 764 029c 00000000 		.4byte	.LFB2
 765 02a0 1C000000 		.4byte	.LFE2-.LFB2
 766 02a4 01       		.uleb128 0x1
 767 02a5 9C       		.byte	0x9c
 768 02a6 BD020000 		.4byte	0x2bd
 769 02aa 0C       		.uleb128 0xc
 770 02ab 0C000000 		.4byte	.LVL12
 771 02af 1E020000 		.4byte	0x21e
 772 02b3 0C       		.uleb128 0xc
 773 02b4 16000000 		.4byte	.LVL13
 774 02b8 BF000000 		.4byte	0xbf
 775 02bc 00       		.byte	0
 776 02bd 12       		.uleb128 0x12
 777 02be 0A030000 		.4byte	.LASF40
 778 02c2 01       		.byte	0x1
 779 02c3 1A       		.byte	0x1a
 780 02c4 6B000000 		.4byte	0x6b
 781 02c8 05       		.uleb128 0x5
 782 02c9 03       		.byte	0x3
 783 02ca 00000000 		.4byte	Timer_initVar
 784 02ce 13       		.uleb128 0x13
 785 02cf 84010000 		.4byte	.LASF41
 786 02d3 03       		.byte	0x3
 787 02d4 7E       		.byte	0x7e
 788 02d5 6B000000 		.4byte	0x6b
 789 02d9 14       		.uleb128 0x14
 790 02da 6E010000 		.4byte	.LASF42
 791 02de 03       		.byte	0x3
 792 02df 7F       		.byte	0x7f
 793 02e0 15       		.uleb128 0x15
 794 02e1 6B000000 		.4byte	0x6b
 795 02e5 00       		.byte	0
 796 02e6 00       		.byte	0
 797              		.section	.debug_abbrev,"",%progbits
 798              	.Ldebug_abbrev0:
 799 0000 01       		.uleb128 0x1
 800 0001 11       		.uleb128 0x11
 801 0002 01       		.byte	0x1
 802 0003 25       		.uleb128 0x25
 803 0004 0E       		.uleb128 0xe
 804 0005 13       		.uleb128 0x13
 805 0006 0B       		.uleb128 0xb
 806 0007 03       		.uleb128 0x3
 807 0008 0E       		.uleb128 0xe
 808 0009 1B       		.uleb128 0x1b
 809 000a 0E       		.uleb128 0xe
 810 000b 55       		.uleb128 0x55
 811 000c 17       		.uleb128 0x17
 812 000d 11       		.uleb128 0x11
 813 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 29


 814 000f 10       		.uleb128 0x10
 815 0010 17       		.uleb128 0x17
 816 0011 00       		.byte	0
 817 0012 00       		.byte	0
 818 0013 02       		.uleb128 0x2
 819 0014 24       		.uleb128 0x24
 820 0015 00       		.byte	0
 821 0016 0B       		.uleb128 0xb
 822 0017 0B       		.uleb128 0xb
 823 0018 3E       		.uleb128 0x3e
 824 0019 0B       		.uleb128 0xb
 825 001a 03       		.uleb128 0x3
 826 001b 0E       		.uleb128 0xe
 827 001c 00       		.byte	0
 828 001d 00       		.byte	0
 829 001e 03       		.uleb128 0x3
 830 001f 24       		.uleb128 0x24
 831 0020 00       		.byte	0
 832 0021 0B       		.uleb128 0xb
 833 0022 0B       		.uleb128 0xb
 834 0023 3E       		.uleb128 0x3e
 835 0024 0B       		.uleb128 0xb
 836 0025 03       		.uleb128 0x3
 837 0026 08       		.uleb128 0x8
 838 0027 00       		.byte	0
 839 0028 00       		.byte	0
 840 0029 04       		.uleb128 0x4
 841 002a 16       		.uleb128 0x16
 842 002b 00       		.byte	0
 843 002c 03       		.uleb128 0x3
 844 002d 0E       		.uleb128 0xe
 845 002e 3A       		.uleb128 0x3a
 846 002f 0B       		.uleb128 0xb
 847 0030 3B       		.uleb128 0x3b
 848 0031 0B       		.uleb128 0xb
 849 0032 49       		.uleb128 0x49
 850 0033 13       		.uleb128 0x13
 851 0034 00       		.byte	0
 852 0035 00       		.byte	0
 853 0036 05       		.uleb128 0x5
 854 0037 16       		.uleb128 0x16
 855 0038 00       		.byte	0
 856 0039 03       		.uleb128 0x3
 857 003a 0E       		.uleb128 0xe
 858 003b 3A       		.uleb128 0x3a
 859 003c 0B       		.uleb128 0xb
 860 003d 3B       		.uleb128 0x3b
 861 003e 05       		.uleb128 0x5
 862 003f 49       		.uleb128 0x49
 863 0040 13       		.uleb128 0x13
 864 0041 00       		.byte	0
 865 0042 00       		.byte	0
 866 0043 06       		.uleb128 0x6
 867 0044 35       		.uleb128 0x35
 868 0045 00       		.byte	0
 869 0046 49       		.uleb128 0x49
 870 0047 13       		.uleb128 0x13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 30


 871 0048 00       		.byte	0
 872 0049 00       		.byte	0
 873 004a 07       		.uleb128 0x7
 874 004b 2E       		.uleb128 0x2e
 875 004c 00       		.byte	0
 876 004d 3F       		.uleb128 0x3f
 877 004e 19       		.uleb128 0x19
 878 004f 03       		.uleb128 0x3
 879 0050 0E       		.uleb128 0xe
 880 0051 3A       		.uleb128 0x3a
 881 0052 0B       		.uleb128 0xb
 882 0053 3B       		.uleb128 0x3b
 883 0054 0B       		.uleb128 0xb
 884 0055 27       		.uleb128 0x27
 885 0056 19       		.uleb128 0x19
 886 0057 11       		.uleb128 0x11
 887 0058 01       		.uleb128 0x1
 888 0059 12       		.uleb128 0x12
 889 005a 06       		.uleb128 0x6
 890 005b 40       		.uleb128 0x40
 891 005c 18       		.uleb128 0x18
 892 005d 9742     		.uleb128 0x2117
 893 005f 19       		.uleb128 0x19
 894 0060 00       		.byte	0
 895 0061 00       		.byte	0
 896 0062 08       		.uleb128 0x8
 897 0063 2E       		.uleb128 0x2e
 898 0064 01       		.byte	0x1
 899 0065 3F       		.uleb128 0x3f
 900 0066 19       		.uleb128 0x19
 901 0067 03       		.uleb128 0x3
 902 0068 0E       		.uleb128 0xe
 903 0069 3A       		.uleb128 0x3a
 904 006a 0B       		.uleb128 0xb
 905 006b 3B       		.uleb128 0x3b
 906 006c 05       		.uleb128 0x5
 907 006d 27       		.uleb128 0x27
 908 006e 19       		.uleb128 0x19
 909 006f 11       		.uleb128 0x11
 910 0070 01       		.uleb128 0x1
 911 0071 12       		.uleb128 0x12
 912 0072 06       		.uleb128 0x6
 913 0073 40       		.uleb128 0x40
 914 0074 18       		.uleb128 0x18
 915 0075 9742     		.uleb128 0x2117
 916 0077 19       		.uleb128 0x19
 917 0078 01       		.uleb128 0x1
 918 0079 13       		.uleb128 0x13
 919 007a 00       		.byte	0
 920 007b 00       		.byte	0
 921 007c 09       		.uleb128 0x9
 922 007d 05       		.uleb128 0x5
 923 007e 00       		.byte	0
 924 007f 03       		.uleb128 0x3
 925 0080 0E       		.uleb128 0xe
 926 0081 3A       		.uleb128 0x3a
 927 0082 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 31


 928 0083 3B       		.uleb128 0x3b
 929 0084 05       		.uleb128 0x5
 930 0085 49       		.uleb128 0x49
 931 0086 13       		.uleb128 0x13
 932 0087 02       		.uleb128 0x2
 933 0088 18       		.uleb128 0x18
 934 0089 00       		.byte	0
 935 008a 00       		.byte	0
 936 008b 0A       		.uleb128 0xa
 937 008c 2E       		.uleb128 0x2e
 938 008d 00       		.byte	0
 939 008e 3F       		.uleb128 0x3f
 940 008f 19       		.uleb128 0x19
 941 0090 03       		.uleb128 0x3
 942 0091 0E       		.uleb128 0xe
 943 0092 3A       		.uleb128 0x3a
 944 0093 0B       		.uleb128 0xb
 945 0094 3B       		.uleb128 0x3b
 946 0095 05       		.uleb128 0x5
 947 0096 27       		.uleb128 0x27
 948 0097 19       		.uleb128 0x19
 949 0098 11       		.uleb128 0x11
 950 0099 01       		.uleb128 0x1
 951 009a 12       		.uleb128 0x12
 952 009b 06       		.uleb128 0x6
 953 009c 40       		.uleb128 0x40
 954 009d 18       		.uleb128 0x18
 955 009e 9742     		.uleb128 0x2117
 956 00a0 19       		.uleb128 0x19
 957 00a1 00       		.byte	0
 958 00a2 00       		.byte	0
 959 00a3 0B       		.uleb128 0xb
 960 00a4 2E       		.uleb128 0x2e
 961 00a5 00       		.byte	0
 962 00a6 3F       		.uleb128 0x3f
 963 00a7 19       		.uleb128 0x19
 964 00a8 03       		.uleb128 0x3
 965 00a9 0E       		.uleb128 0xe
 966 00aa 3A       		.uleb128 0x3a
 967 00ab 0B       		.uleb128 0xb
 968 00ac 3B       		.uleb128 0x3b
 969 00ad 05       		.uleb128 0x5
 970 00ae 27       		.uleb128 0x27
 971 00af 19       		.uleb128 0x19
 972 00b0 49       		.uleb128 0x49
 973 00b1 13       		.uleb128 0x13
 974 00b2 11       		.uleb128 0x11
 975 00b3 01       		.uleb128 0x1
 976 00b4 12       		.uleb128 0x12
 977 00b5 06       		.uleb128 0x6
 978 00b6 40       		.uleb128 0x40
 979 00b7 18       		.uleb128 0x18
 980 00b8 9742     		.uleb128 0x2117
 981 00ba 19       		.uleb128 0x19
 982 00bb 00       		.byte	0
 983 00bc 00       		.byte	0
 984 00bd 0C       		.uleb128 0xc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 32


 985 00be 898201   		.uleb128 0x4109
 986 00c1 00       		.byte	0
 987 00c2 11       		.uleb128 0x11
 988 00c3 01       		.uleb128 0x1
 989 00c4 31       		.uleb128 0x31
 990 00c5 13       		.uleb128 0x13
 991 00c6 00       		.byte	0
 992 00c7 00       		.byte	0
 993 00c8 0D       		.uleb128 0xd
 994 00c9 2E       		.uleb128 0x2e
 995 00ca 01       		.byte	0x1
 996 00cb 3F       		.uleb128 0x3f
 997 00cc 19       		.uleb128 0x19
 998 00cd 03       		.uleb128 0x3
 999 00ce 0E       		.uleb128 0xe
 1000 00cf 3A       		.uleb128 0x3a
 1001 00d0 0B       		.uleb128 0xb
 1002 00d1 3B       		.uleb128 0x3b
 1003 00d2 0B       		.uleb128 0xb
 1004 00d3 27       		.uleb128 0x27
 1005 00d4 19       		.uleb128 0x19
 1006 00d5 11       		.uleb128 0x11
 1007 00d6 01       		.uleb128 0x1
 1008 00d7 12       		.uleb128 0x12
 1009 00d8 06       		.uleb128 0x6
 1010 00d9 40       		.uleb128 0x40
 1011 00da 18       		.uleb128 0x18
 1012 00db 9742     		.uleb128 0x2117
 1013 00dd 19       		.uleb128 0x19
 1014 00de 01       		.uleb128 0x1
 1015 00df 13       		.uleb128 0x13
 1016 00e0 00       		.byte	0
 1017 00e1 00       		.byte	0
 1018 00e2 0E       		.uleb128 0xe
 1019 00e3 34       		.uleb128 0x34
 1020 00e4 00       		.byte	0
 1021 00e5 03       		.uleb128 0x3
 1022 00e6 0E       		.uleb128 0xe
 1023 00e7 3A       		.uleb128 0x3a
 1024 00e8 0B       		.uleb128 0xb
 1025 00e9 3B       		.uleb128 0x3b
 1026 00ea 0B       		.uleb128 0xb
 1027 00eb 49       		.uleb128 0x49
 1028 00ec 13       		.uleb128 0x13
 1029 00ed 02       		.uleb128 0x2
 1030 00ee 17       		.uleb128 0x17
 1031 00ef 00       		.byte	0
 1032 00f0 00       		.byte	0
 1033 00f1 0F       		.uleb128 0xf
 1034 00f2 898201   		.uleb128 0x4109
 1035 00f5 01       		.byte	0x1
 1036 00f6 11       		.uleb128 0x11
 1037 00f7 01       		.uleb128 0x1
 1038 00f8 31       		.uleb128 0x31
 1039 00f9 13       		.uleb128 0x13
 1040 00fa 01       		.uleb128 0x1
 1041 00fb 13       		.uleb128 0x13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 33


 1042 00fc 00       		.byte	0
 1043 00fd 00       		.byte	0
 1044 00fe 10       		.uleb128 0x10
 1045 00ff 8A8201   		.uleb128 0x410a
 1046 0102 00       		.byte	0
 1047 0103 02       		.uleb128 0x2
 1048 0104 18       		.uleb128 0x18
 1049 0105 9142     		.uleb128 0x2111
 1050 0107 18       		.uleb128 0x18
 1051 0108 00       		.byte	0
 1052 0109 00       		.byte	0
 1053 010a 11       		.uleb128 0x11
 1054 010b 898201   		.uleb128 0x4109
 1055 010e 01       		.byte	0x1
 1056 010f 11       		.uleb128 0x11
 1057 0110 01       		.uleb128 0x1
 1058 0111 31       		.uleb128 0x31
 1059 0112 13       		.uleb128 0x13
 1060 0113 00       		.byte	0
 1061 0114 00       		.byte	0
 1062 0115 12       		.uleb128 0x12
 1063 0116 34       		.uleb128 0x34
 1064 0117 00       		.byte	0
 1065 0118 03       		.uleb128 0x3
 1066 0119 0E       		.uleb128 0xe
 1067 011a 3A       		.uleb128 0x3a
 1068 011b 0B       		.uleb128 0xb
 1069 011c 3B       		.uleb128 0x3b
 1070 011d 0B       		.uleb128 0xb
 1071 011e 49       		.uleb128 0x49
 1072 011f 13       		.uleb128 0x13
 1073 0120 3F       		.uleb128 0x3f
 1074 0121 19       		.uleb128 0x19
 1075 0122 02       		.uleb128 0x2
 1076 0123 18       		.uleb128 0x18
 1077 0124 00       		.byte	0
 1078 0125 00       		.byte	0
 1079 0126 13       		.uleb128 0x13
 1080 0127 2E       		.uleb128 0x2e
 1081 0128 00       		.byte	0
 1082 0129 3F       		.uleb128 0x3f
 1083 012a 19       		.uleb128 0x19
 1084 012b 03       		.uleb128 0x3
 1085 012c 0E       		.uleb128 0xe
 1086 012d 3A       		.uleb128 0x3a
 1087 012e 0B       		.uleb128 0xb
 1088 012f 3B       		.uleb128 0x3b
 1089 0130 0B       		.uleb128 0xb
 1090 0131 27       		.uleb128 0x27
 1091 0132 19       		.uleb128 0x19
 1092 0133 49       		.uleb128 0x49
 1093 0134 13       		.uleb128 0x13
 1094 0135 3C       		.uleb128 0x3c
 1095 0136 19       		.uleb128 0x19
 1096 0137 00       		.byte	0
 1097 0138 00       		.byte	0
 1098 0139 14       		.uleb128 0x14
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 34


 1099 013a 2E       		.uleb128 0x2e
 1100 013b 01       		.byte	0x1
 1101 013c 3F       		.uleb128 0x3f
 1102 013d 19       		.uleb128 0x19
 1103 013e 03       		.uleb128 0x3
 1104 013f 0E       		.uleb128 0xe
 1105 0140 3A       		.uleb128 0x3a
 1106 0141 0B       		.uleb128 0xb
 1107 0142 3B       		.uleb128 0x3b
 1108 0143 0B       		.uleb128 0xb
 1109 0144 27       		.uleb128 0x27
 1110 0145 19       		.uleb128 0x19
 1111 0146 3C       		.uleb128 0x3c
 1112 0147 19       		.uleb128 0x19
 1113 0148 00       		.byte	0
 1114 0149 00       		.byte	0
 1115 014a 15       		.uleb128 0x15
 1116 014b 05       		.uleb128 0x5
 1117 014c 00       		.byte	0
 1118 014d 49       		.uleb128 0x49
 1119 014e 13       		.uleb128 0x13
 1120 014f 00       		.byte	0
 1121 0150 00       		.byte	0
 1122 0151 00       		.byte	0
 1123              		.section	.debug_loc,"",%progbits
 1124              	.Ldebug_loc0:
 1125              	.LLST0:
 1126 0000 16000000 		.4byte	.LVL8
 1127 0004 23000000 		.4byte	.LVL9-1
 1128 0008 0100     		.2byte	0x1
 1129 000a 50       		.byte	0x50
 1130 000b 00000000 		.4byte	0
 1131 000f 00000000 		.4byte	0
 1132              		.section	.debug_aranges,"",%progbits
 1133 0000 8C000000 		.4byte	0x8c
 1134 0004 0200     		.2byte	0x2
 1135 0006 00000000 		.4byte	.Ldebug_info0
 1136 000a 04       		.byte	0x4
 1137 000b 00       		.byte	0
 1138 000c 0000     		.2byte	0
 1139 000e 0000     		.2byte	0
 1140 0010 00000000 		.4byte	.LFB1
 1141 0014 10000000 		.4byte	.LFE1-.LFB1
 1142 0018 00000000 		.4byte	.LFB3
 1143 001c 10000000 		.4byte	.LFE3-.LFB3
 1144 0020 00000000 		.4byte	.LFB4
 1145 0024 0C000000 		.4byte	.LFE4-.LFB4
 1146 0028 00000000 		.4byte	.LFB5
 1147 002c 0C000000 		.4byte	.LFE5-.LFB5
 1148 0030 00000000 		.4byte	.LFB6
 1149 0034 0C000000 		.4byte	.LFE6-.LFB6
 1150 0038 00000000 		.4byte	.LFB7
 1151 003c 0C000000 		.4byte	.LFE7-.LFB7
 1152 0040 00000000 		.4byte	.LFB8
 1153 0044 0C000000 		.4byte	.LFE8-.LFB8
 1154 0048 00000000 		.4byte	.LFB9
 1155 004c 0C000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 35


 1156 0050 00000000 		.4byte	.LFB10
 1157 0054 0C000000 		.4byte	.LFE10-.LFB10
 1158 0058 00000000 		.4byte	.LFB11
 1159 005c 0C000000 		.4byte	.LFE11-.LFB11
 1160 0060 00000000 		.4byte	.LFB12
 1161 0064 0C000000 		.4byte	.LFE12-.LFB12
 1162 0068 00000000 		.4byte	.LFB13
 1163 006c 14000000 		.4byte	.LFE13-.LFB13
 1164 0070 00000000 		.4byte	.LFB14
 1165 0074 14000000 		.4byte	.LFE14-.LFB14
 1166 0078 00000000 		.4byte	.LFB0
 1167 007c 34000000 		.4byte	.LFE0-.LFB0
 1168 0080 00000000 		.4byte	.LFB2
 1169 0084 1C000000 		.4byte	.LFE2-.LFB2
 1170 0088 00000000 		.4byte	0
 1171 008c 00000000 		.4byte	0
 1172              		.section	.debug_ranges,"",%progbits
 1173              	.Ldebug_ranges0:
 1174 0000 00000000 		.4byte	.LFB1
 1175 0004 10000000 		.4byte	.LFE1
 1176 0008 00000000 		.4byte	.LFB3
 1177 000c 10000000 		.4byte	.LFE3
 1178 0010 00000000 		.4byte	.LFB4
 1179 0014 0C000000 		.4byte	.LFE4
 1180 0018 00000000 		.4byte	.LFB5
 1181 001c 0C000000 		.4byte	.LFE5
 1182 0020 00000000 		.4byte	.LFB6
 1183 0024 0C000000 		.4byte	.LFE6
 1184 0028 00000000 		.4byte	.LFB7
 1185 002c 0C000000 		.4byte	.LFE7
 1186 0030 00000000 		.4byte	.LFB8
 1187 0034 0C000000 		.4byte	.LFE8
 1188 0038 00000000 		.4byte	.LFB9
 1189 003c 0C000000 		.4byte	.LFE9
 1190 0040 00000000 		.4byte	.LFB10
 1191 0044 0C000000 		.4byte	.LFE10
 1192 0048 00000000 		.4byte	.LFB11
 1193 004c 0C000000 		.4byte	.LFE11
 1194 0050 00000000 		.4byte	.LFB12
 1195 0054 0C000000 		.4byte	.LFE12
 1196 0058 00000000 		.4byte	.LFB13
 1197 005c 14000000 		.4byte	.LFE13
 1198 0060 00000000 		.4byte	.LFB14
 1199 0064 14000000 		.4byte	.LFE14
 1200 0068 00000000 		.4byte	.LFB0
 1201 006c 34000000 		.4byte	.LFE0
 1202 0070 00000000 		.4byte	.LFB2
 1203 0074 1C000000 		.4byte	.LFE2
 1204 0078 00000000 		.4byte	0
 1205 007c 00000000 		.4byte	0
 1206              		.section	.debug_line,"",%progbits
 1207              	.Ldebug_line0:
 1208 0000 72010000 		.section	.debug_str,"MS",%progbits,1
 1208      02004F00 
 1208      00000201 
 1208      FB0E0D00 
 1208      01010101 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 36


 1209              	.LASF15:
 1210 0000 72656733 		.ascii	"reg32\000"
 1210      3200
 1211              	.LASF20:
 1212 0006 54696D65 		.ascii	"Timer_ReadStatusRegister\000"
 1212      725F5265 
 1212      61645374 
 1212      61747573 
 1212      52656769 
 1213              	.LASF28:
 1214 001f 70657269 		.ascii	"period\000"
 1214      6F6400
 1215              	.LASF32:
 1216 0026 54696D65 		.ascii	"Timer_ReadCounter\000"
 1216      725F5265 
 1216      6164436F 
 1216      756E7465 
 1216      7200
 1217              	.LASF3:
 1218 0038 73686F72 		.ascii	"short unsigned int\000"
 1218      7420756E 
 1218      7369676E 
 1218      65642069 
 1218      6E7400
 1219              	.LASF33:
 1220 004b 54696D65 		.ascii	"Timer_ClearFIFO\000"
 1220      725F436C 
 1220      65617246 
 1220      49464F00 
 1221              	.LASF18:
 1222 005b 54696D65 		.ascii	"Timer_Stop\000"
 1222      725F5374 
 1222      6F7000
 1223              	.LASF11:
 1224 0066 666C6F61 		.ascii	"float\000"
 1224      7400
 1225              	.LASF31:
 1226 006c 636F756E 		.ascii	"counter\000"
 1226      74657200 
 1227              	.LASF7:
 1228 0074 6C6F6E67 		.ascii	"long long unsigned int\000"
 1228      206C6F6E 
 1228      6720756E 
 1228      7369676E 
 1228      65642069 
 1229              	.LASF1:
 1230 008b 756E7369 		.ascii	"unsigned char\000"
 1230      676E6564 
 1230      20636861 
 1230      7200
 1231              	.LASF39:
 1232 0099 54696D65 		.ascii	"Timer_interruptState\000"
 1232      725F696E 
 1232      74657272 
 1232      75707453 
 1232      74617465 
 1233              	.LASF27:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 37


 1234 00ae 54696D65 		.ascii	"Timer_WritePeriod\000"
 1234      725F5772 
 1234      69746550 
 1234      6572696F 
 1234      6400
 1235              	.LASF14:
 1236 00c0 72656738 		.ascii	"reg8\000"
 1236      00
 1237              	.LASF22:
 1238 00c5 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 1238      725F5365 
 1238      74496E74 
 1238      65727275 
 1238      70744D6F 
 1239              	.LASF9:
 1240 00dc 75696E74 		.ascii	"uint8\000"
 1240      3800
 1241              	.LASF25:
 1242 00e2 636F6E74 		.ascii	"control\000"
 1242      726F6C00 
 1243              	.LASF19:
 1244 00ea 54696D65 		.ascii	"Timer_SoftwareCapture\000"
 1244      725F536F 
 1244      66747761 
 1244      72654361 
 1244      70747572 
 1245              	.LASF12:
 1246 0100 646F7562 		.ascii	"double\000"
 1246      6C6500
 1247              	.LASF26:
 1248 0107 54696D65 		.ascii	"Timer_ReadPeriod\000"
 1248      725F5265 
 1248      61645065 
 1248      72696F64 
 1248      00
 1249              	.LASF2:
 1250 0118 73686F72 		.ascii	"short int\000"
 1250      7420696E 
 1250      7400
 1251              	.LASF10:
 1252 0122 75696E74 		.ascii	"uint32\000"
 1252      333200
 1253              	.LASF21:
 1254 0129 54696D65 		.ascii	"Timer_ReadControlRegister\000"
 1254      725F5265 
 1254      6164436F 
 1254      6E74726F 
 1254      6C526567 
 1255              	.LASF35:
 1256 0143 54696D65 		.ascii	"Timer_Start\000"
 1256      725F5374 
 1256      61727400 
 1257              	.LASF5:
 1258 014f 6C6F6E67 		.ascii	"long unsigned int\000"
 1258      20756E73 
 1258      69676E65 
 1258      6420696E 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 38


 1258      7400
 1259              	.LASF8:
 1260 0161 756E7369 		.ascii	"unsigned int\000"
 1260      676E6564 
 1260      20696E74 
 1260      00
 1261              	.LASF42:
 1262 016e 43794578 		.ascii	"CyExitCriticalSection\000"
 1262      69744372 
 1262      69746963 
 1262      616C5365 
 1262      6374696F 
 1263              	.LASF41:
 1264 0184 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1264      74657243 
 1264      72697469 
 1264      63616C53 
 1264      65637469 
 1265              	.LASF36:
 1266 019b 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1266      4320342E 
 1266      382E3420 
 1266      32303134 
 1266      30353236 
 1267 01ce 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1267      20726576 
 1267      6973696F 
 1267      6E203231 
 1267      31333538 
 1268 0201 67202D66 		.ascii	"g -ffunction-sections\000"
 1268      66756E63 
 1268      74696F6E 
 1268      2D736563 
 1268      74696F6E 
 1269              	.LASF16:
 1270 0217 73697A65 		.ascii	"sizetype\000"
 1270      74797065 
 1270      00
 1271              	.LASF6:
 1272 0220 6C6F6E67 		.ascii	"long long int\000"
 1272      206C6F6E 
 1272      6720696E 
 1272      7400
 1273              	.LASF24:
 1274 022e 696E7465 		.ascii	"interruptMode\000"
 1274      72727570 
 1274      744D6F64 
 1274      6500
 1275              	.LASF37:
 1276 023c 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Timer.c\000"
 1276      6E657261 
 1276      7465645F 
 1276      536F7572 
 1276      63655C50 
 1277              	.LASF38:
 1278 025d 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 1278      73657273 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc2u00A6.s 			page 39


 1278      5C6D6974 
 1278      6368656C 
 1278      6C5C446F 
 1279 028a 2D546872 		.ascii	"-Throttle\\E-Throttle.cydsn\000"
 1279      6F74746C 
 1279      655C452D 
 1279      5468726F 
 1279      74746C65 
 1280              	.LASF23:
 1281 02a5 54696D65 		.ascii	"Timer_WriteControlRegister\000"
 1281      725F5772 
 1281      69746543 
 1281      6F6E7472 
 1281      6F6C5265 
 1282              	.LASF29:
 1283 02c0 54696D65 		.ascii	"Timer_ReadCapture\000"
 1283      725F5265 
 1283      61644361 
 1283      70747572 
 1283      6500
 1284              	.LASF30:
 1285 02d2 54696D65 		.ascii	"Timer_WriteCounter\000"
 1285      725F5772 
 1285      69746543 
 1285      6F756E74 
 1285      657200
 1286              	.LASF4:
 1287 02e5 6C6F6E67 		.ascii	"long int\000"
 1287      20696E74 
 1287      00
 1288              	.LASF13:
 1289 02ee 63686172 		.ascii	"char\000"
 1289      00
 1290              	.LASF34:
 1291 02f3 54696D65 		.ascii	"Timer_Init\000"
 1291      725F496E 
 1291      697400
 1292              	.LASF0:
 1293 02fe 7369676E 		.ascii	"signed char\000"
 1293      65642063 
 1293      68617200 
 1294              	.LASF40:
 1295 030a 54696D65 		.ascii	"Timer_initVar\000"
 1295      725F696E 
 1295      69745661 
 1295      7200
 1296              	.LASF17:
 1297 0318 54696D65 		.ascii	"Timer_Enable\000"
 1297      725F456E 
 1297      61626C65 
 1297      00
 1298              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
