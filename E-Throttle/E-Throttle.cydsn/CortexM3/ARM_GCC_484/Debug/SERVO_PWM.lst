ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SERVO_PWM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SERVO_PWM_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	SERVO_PWM_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	SERVO_PWM_Enable, %function
  24              	SERVO_PWM_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\SERVO_PWM.c"
   1:.\Generated_Source\PSoC5/SERVO_PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SERVO_PWM.c **** * File Name: SERVO_PWM.c
   3:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
   5:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Description:
   6:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  15:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Note:
  16:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  17:.\Generated_Source\PSoC5/SERVO_PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/SERVO_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/SERVO_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/SERVO_PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/SERVO_PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
  24:.\Generated_Source\PSoC5/SERVO_PWM.c **** #include "SERVO_PWM.h"
  25:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
  26:.\Generated_Source\PSoC5/SERVO_PWM.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/SERVO_PWM.c **** #ifdef SERVO_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/SERVO_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/SERVO_PWM.c **** #endif /* SERVO_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 2


  32:.\Generated_Source\PSoC5/SERVO_PWM.c **** uint8 SERVO_PWM_initVar = 0u;
  33:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
  34:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
  35:.\Generated_Source\PSoC5/SERVO_PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Function Name: SERVO_PWM_Start
  37:.\Generated_Source\PSoC5/SERVO_PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  39:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Summary:
  40:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  44:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
  46:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  47:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Return:
  48:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
  49:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  50:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  SERVO_PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/SERVO_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  54:.\Generated_Source\PSoC5/SERVO_PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/SERVO_PWM.c **** void SERVO_PWM_Start(void) 
  56:.\Generated_Source\PSoC5/SERVO_PWM.c **** {
  57:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/SERVO_PWM.c ****     if(SERVO_PWM_initVar == 0u)
  59:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
  60:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_Init();
  61:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_initVar = 1u;
  62:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
  63:.\Generated_Source\PSoC5/SERVO_PWM.c ****     SERVO_PWM_Enable();
  64:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
  65:.\Generated_Source\PSoC5/SERVO_PWM.c **** }
  66:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
  67:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
  68:.\Generated_Source\PSoC5/SERVO_PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Function Name: SERVO_PWM_Init
  70:.\Generated_Source\PSoC5/SERVO_PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  72:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Summary:
  73:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  SERVO_PWM_Start().
  76:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  77:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
  79:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  80:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Return:
  81:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
  82:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
  83:.\Generated_Source\PSoC5/SERVO_PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/SERVO_PWM.c **** void SERVO_PWM_Init(void) 
  85:.\Generated_Source\PSoC5/SERVO_PWM.c **** {
  86:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_UsingFixedFunction || SERVO_PWM_UseControl)
  87:.\Generated_Source\PSoC5/SERVO_PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UsingFixedFunction || SERVO_PWM_UseControl) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 3


  89:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
  90:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if(!SERVO_PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if(SERVO_PWM_UseStatus)
  92:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/SERVO_PWM.c ****             uint8 SERVO_PWM_interruptState;
  94:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_UseStatus) */
  95:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (!SERVO_PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
  97:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_CONTROL |= SERVO_PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if (SERVO_PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_CONTROL |= SERVO_PWM_CFG0_DB;
 102:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 104:.\Generated_Source\PSoC5/SERVO_PWM.c ****         ctrl = SERVO_PWM_CONTROL3 & ((uint8 )(~SERVO_PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_CONTROL3 = ctrl | SERVO_PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 107:.\Generated_Source\PSoC5/SERVO_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_RT1 &= ((uint8)(~SERVO_PWM_RT1_MASK));
 109:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_RT1 |= SERVO_PWM_SYNC;
 110:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 111:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_RT1 &= ((uint8)(~SERVO_PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_RT1 |= SERVO_PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 115:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #elif (SERVO_PWM_UseControl)
 116:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/SERVO_PWM.c ****         ctrl = SERVO_PWM_CONTROL & ((uint8)(~SERVO_PWM_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 ((uint8)(~SERVO_PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_CONTROL = ctrl | SERVO_PWM_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                    SERVO_PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 123:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (!SERVO_PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if (SERVO_PWM_Resolution == 8)
 125:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_AUX_CONTROLDP0 |= (SERVO_PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #else /* (SERVO_PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_AUX_CONTROLDP0 |= (SERVO_PWM_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_AUX_CONTROLDP1 |= (SERVO_PWM_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 133:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_WriteCounter(SERVO_PWM_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (!SERVO_PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 136:.\Generated_Source\PSoC5/SERVO_PWM.c ****     SERVO_PWM_WritePeriod(SERVO_PWM_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 138:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if (SERVO_PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_WriteCompare(SERVO_PWM_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #else
 141:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_WriteCompare1(SERVO_PWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_WriteCompare2(SERVO_PWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 145:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if (SERVO_PWM_KillModeMinTime)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 4


 146:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_WriteKillTime(SERVO_PWM_MinimumKillTime);
 147:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 149:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if (SERVO_PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_WriteDeadTime(SERVO_PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 153:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_UseStatus || SERVO_PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_SetInterruptMode(SERVO_PWM_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UseStatus || SERVO_PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 157:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_GLOBAL_ENABLE |= SERVO_PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_CONTROL2 |= SERVO_PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #else
 163:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if(SERVO_PWM_UseStatus)
 164:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 165:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_STATUS_AUX_CTRL |= SERVO_PWM_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 171:.\Generated_Source\PSoC5/SERVO_PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/SERVO_PWM.c ****             CyExitCriticalSection(SERVO_PWM_interruptState);
 173:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 174:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Clear the FIFO to enable the SERVO_PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/SERVO_PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_ClearFIFO();
 177:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_UseStatus) */
 178:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/SERVO_PWM.c **** }
 180:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 181:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 182:.\Generated_Source\PSoC5/SERVO_PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Function Name: SERVO_PWM_Enable
 184:.\Generated_Source\PSoC5/SERVO_PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 186:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Summary:
 187:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 189:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
 191:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 192:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Return:
 193:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
 194:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 195:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 198:.\Generated_Source\PSoC5/SERVO_PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/SERVO_PWM.c **** void SERVO_PWM_Enable(void) 
 200:.\Generated_Source\PSoC5/SERVO_PWM.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_GLOBAL_ENABLE |= SERVO_PWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_GLOBAL_STBY_ENABLE |= SERVO_PWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 207:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_UseControl || SERVO_PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_CONTROL |= SERVO_PWM_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F08002 		orr	r2, r2, #128
  36 0008 1A70     		strb	r2, [r3]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 70640040 		.word	1073767536
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	SERVO_PWM_Enable, .-SERVO_PWM_Enable
  45              		.section	.text.SERVO_PWM_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	SERVO_PWM_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	SERVO_PWM_Stop, %function
  51              	SERVO_PWM_Stop:
  52              	.LFB3:
 210:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UseControl || SERVO_PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/SERVO_PWM.c **** }
 212:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 213:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 214:.\Generated_Source\PSoC5/SERVO_PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Function Name: SERVO_PWM_Stop
 216:.\Generated_Source\PSoC5/SERVO_PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 218:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Summary:
 219:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 222:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
 224:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 225:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Return:
 226:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
 227:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 228:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 232:.\Generated_Source\PSoC5/SERVO_PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/SERVO_PWM.c **** void SERVO_PWM_Stop(void) 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 6


 234:.\Generated_Source\PSoC5/SERVO_PWM.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_UseControl || SERVO_PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_CONTROL &= ((uint8)(~SERVO_PWM_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024B     		ldr	r3, .L5
  60 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  61 0004 02F07F02 		and	r2, r2, #127
  62 0008 1A70     		strb	r2, [r3]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 70640040 		.word	1073767536
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	SERVO_PWM_Stop, .-SERVO_PWM_Stop
  71              		.section	.text.SERVO_PWM_WriteCounter,"ax",%progbits
  72              		.align	2
  73              		.global	SERVO_PWM_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	SERVO_PWM_WriteCounter, %function
  77              	SERVO_PWM_WriteCounter:
  78              	.LFB4:
 237:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UseControl || SERVO_PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 239:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_GLOBAL_ENABLE &= ((uint8)(~SERVO_PWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~SERVO_PWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/SERVO_PWM.c **** }
 245:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 246:.\Generated_Source\PSoC5/SERVO_PWM.c **** #if (SERVO_PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 249:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 250:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Function Name: SERVO_PWM_SetCompareMode
 252:.\Generated_Source\PSoC5/SERVO_PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 254:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 258:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 262:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Return:
 263:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  None
 264:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 7


 265:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/SERVO_PWM.c ****         void SERVO_PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/SERVO_PWM.c ****         {
 268:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #if(SERVO_PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 270:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 #if(0 != SERVO_PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/SERVO_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << SERVO_PWM_CTRL_CMPMODE
 272:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 #else
 273:.\Generated_Source\PSoC5/SERVO_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 #endif /* (0 != SERVO_PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 276:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 SERVO_PWM_CONTROL3 &= ((uint8)(~SERVO_PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Da
 277:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 SERVO_PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 279:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #elif (SERVO_PWM_UseControl)
 280:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 281:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 #if(0 != SERVO_PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/SERVO_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << SERVO_PWM_CTRL_CMPMOD
 283:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                                 SERVO_PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 #else
 285:.\Generated_Source\PSoC5/SERVO_PWM.c ****                     uint8 comparemode1masked = comparemode & SERVO_PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 #endif /* (0 != SERVO_PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 288:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 #if(0 != SERVO_PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/SERVO_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << SERVO_PWM_CTRL_CMPMOD
 290:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                                SERVO_PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 #else
 292:.\Generated_Source\PSoC5/SERVO_PWM.c ****                     uint8 comparemode2masked = comparemode & SERVO_PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 #endif /* (0 != SERVO_PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 295:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 SERVO_PWM_CONTROL &= ((uint8)(~(SERVO_PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                             SERVO_PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 SERVO_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 300:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #else
 301:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #endif /* (SERVO_PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/SERVO_PWM.c ****         }
 304:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* SERVO_PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 306:.\Generated_Source\PSoC5/SERVO_PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 308:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 310:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 311:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Function Name: SERVO_PWM_SetCompareMode1
 313:.\Generated_Source\PSoC5/SERVO_PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 315:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 318:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 8


 322:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Return:
 323:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  None
 324:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 325:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/SERVO_PWM.c ****         void SERVO_PWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/SERVO_PWM.c ****         {
 328:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #if(0 != SERVO_PWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << SERVO_PWM_CTRL_CMPMODE1_SH
 330:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                            SERVO_PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #else
 332:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 uint8 comparemodemasked = comparemode & SERVO_PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #endif /* (0 != SERVO_PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 335:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #if (SERVO_PWM_UseControl)
 336:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 SERVO_PWM_CONTROL &= ((uint8)(~SERVO_PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mod
 337:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 SERVO_PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #endif /* (SERVO_PWM_UseControl) */
 339:.\Generated_Source\PSoC5/SERVO_PWM.c ****         }
 340:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* SERVO_PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 342:.\Generated_Source\PSoC5/SERVO_PWM.c **** #if (SERVO_PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 344:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 345:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_SetCompareMode2
 347:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 349:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 352:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 356:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 357:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 358:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 359:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/SERVO_PWM.c ****     void SERVO_PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 362:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 363:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if(0 != SERVO_PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/SERVO_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << SERVO_PWM_CTRL_CMPMODE2_SHIFT)
 365:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                                  SERVO_PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #else
 367:.\Generated_Source\PSoC5/SERVO_PWM.c ****             uint8 comparemodemasked = comparemode & SERVO_PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (0 != SERVO_PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 370:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if (SERVO_PWM_UseControl)
 371:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_CONTROL &= ((uint8)(~SERVO_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_UseControl) */
 374:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 375:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /*SERVO_PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 377:.\Generated_Source\PSoC5/SERVO_PWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 9


 379:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 380:.\Generated_Source\PSoC5/SERVO_PWM.c **** #if (!SERVO_PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 382:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 383:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_WriteCounter
 385:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 387:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 393:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 396:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 397:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 398:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 399:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 402:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/SERVO_PWM.c ****     void SERVO_PWM_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                        
 405:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:.\Generated_Source\PSoC5/SERVO_PWM.c ****         CY_SET_REG8(SERVO_PWM_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 00640040 		.word	1073767424
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	SERVO_PWM_WriteCounter, .-SERVO_PWM_WriteCounter
  96              		.section	.text.SERVO_PWM_ReadCounter,"ax",%progbits
  97              		.align	2
  98              		.global	SERVO_PWM_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	SERVO_PWM_ReadCounter, %function
 102              	SERVO_PWM_ReadCounter:
 103              	.LFB5:
 407:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 408:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 409:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 410:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 10


 411:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_ReadCounter
 412:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 414:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 418:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 420:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 421:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 422:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 424:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/SERVO_PWM.c ****     uint8 SERVO_PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/SERVO_PWM.c ****           (void)CY_GET_REG8(SERVO_PWM_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 432:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/SERVO_PWM.c ****         return (CY_GET_REG8(SERVO_PWM_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 115              		.loc 1 434 0
 116 0008 7047     		bx	lr
 117              	.L12:
 118 000a 00BF     		.align	2
 119              	.L11:
 120 000c 10640040 		.word	1073767440
 121 0010 50640040 		.word	1073767504
 122              		.cfi_endproc
 123              	.LFE5:
 124              		.size	SERVO_PWM_ReadCounter, .-SERVO_PWM_ReadCounter
 125              		.section	.text.SERVO_PWM_WritePeriod,"ax",%progbits
 126              		.align	2
 127              		.global	SERVO_PWM_WritePeriod
 128              		.thumb
 129              		.thumb_func
 130              		.type	SERVO_PWM_WritePeriod, %function
 131              	SERVO_PWM_WritePeriod:
 132              	.LFB7:
 435:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 436:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if (SERVO_PWM_UseStatus)
 437:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 438:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 11


 439:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Function Name: SERVO_PWM_ClearFIFO
 441:.\Generated_Source\PSoC5/SERVO_PWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 443:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 446:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  None
 448:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 449:.\Generated_Source\PSoC5/SERVO_PWM.c ****         * Return:
 450:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *  None
 451:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *
 452:.\Generated_Source\PSoC5/SERVO_PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/SERVO_PWM.c ****         void SERVO_PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/SERVO_PWM.c ****         {
 455:.\Generated_Source\PSoC5/SERVO_PWM.c ****             while(0u != (SERVO_PWM_ReadStatusRegister() & SERVO_PWM_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/SERVO_PWM.c ****             {
 457:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 (void)SERVO_PWM_ReadCapture();
 458:.\Generated_Source\PSoC5/SERVO_PWM.c ****             }
 459:.\Generated_Source\PSoC5/SERVO_PWM.c ****         }
 460:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 461:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* SERVO_PWM_UseStatus */
 462:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 463:.\Generated_Source\PSoC5/SERVO_PWM.c **** #endif /* !SERVO_PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 465:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 466:.\Generated_Source\PSoC5/SERVO_PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Function Name: SERVO_PWM_WritePeriod
 468:.\Generated_Source\PSoC5/SERVO_PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 470:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Summary:
 471:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 474:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/SERVO_PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 478:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Return:
 479:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
 480:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 481:.\Generated_Source\PSoC5/SERVO_PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/SERVO_PWM.c **** void SERVO_PWM_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC5/SERVO_PWM.c **** {
 133              		.loc 1 483 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.LVL1:
 484:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if(SERVO_PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/SERVO_PWM.c ****         CY_SET_REG16(SERVO_PWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #else
 487:.\Generated_Source\PSoC5/SERVO_PWM.c ****         CY_SET_REG8(SERVO_PWM_PERIOD_LSB_PTR, period);
 139              		.loc 1 487 0
 140 0000 014B     		ldr	r3, .L14
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 12


 141 0002 1870     		strb	r0, [r3]
 142 0004 7047     		bx	lr
 143              	.L15:
 144 0006 00BF     		.align	2
 145              	.L14:
 146 0008 30640040 		.word	1073767472
 147              		.cfi_endproc
 148              	.LFE7:
 149              		.size	SERVO_PWM_WritePeriod, .-SERVO_PWM_WritePeriod
 150              		.section	.text.SERVO_PWM_WriteCompare,"ax",%progbits
 151              		.align	2
 152              		.global	SERVO_PWM_WriteCompare
 153              		.thumb
 154              		.thumb_func
 155              		.type	SERVO_PWM_WriteCompare, %function
 156              	SERVO_PWM_WriteCompare:
 157              	.LFB8:
 488:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/SERVO_PWM.c **** }
 490:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 491:.\Generated_Source\PSoC5/SERVO_PWM.c **** #if (SERVO_PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 493:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 494:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_WriteCompare
 496:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 498:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 505:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 508:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 509:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 510:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 511:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 515:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/SERVO_PWM.c ****     void SERVO_PWM_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                        
 518:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 158              		.loc 1 518 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 163              	.LVL2:
 519:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if(SERVO_PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/SERVO_PWM.c ****             CY_SET_REG16(SERVO_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #else
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 13


 522:.\Generated_Source\PSoC5/SERVO_PWM.c ****             CY_SET_REG8(SERVO_PWM_COMPARE1_LSB_PTR, compare);
 164              		.loc 1 522 0
 165 0000 014B     		ldr	r3, .L17
 166 0002 1870     		strb	r0, [r3]
 167 0004 7047     		bx	lr
 168              	.L18:
 169 0006 00BF     		.align	2
 170              	.L17:
 171 0008 20640040 		.word	1073767456
 172              		.cfi_endproc
 173              	.LFE8:
 174              		.size	SERVO_PWM_WriteCompare, .-SERVO_PWM_WriteCompare
 175              		.section	.text.SERVO_PWM_SetInterruptMode,"ax",%progbits
 176              		.align	2
 177              		.global	SERVO_PWM_SetInterruptMode
 178              		.thumb
 179              		.thumb_func
 180              		.type	SERVO_PWM_SetInterruptMode, %function
 181              	SERVO_PWM_SetInterruptMode:
 182              	.LFB9:
 523:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 525:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if (SERVO_PWM_PWMMode == SERVO_PWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #if(SERVO_PWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 CY_SET_REG16(SERVO_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #else
 529:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 CY_SET_REG8(SERVO_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #endif /* (SERVO_PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_PWMMode == SERVO_PWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 533:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 534:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 535:.\Generated_Source\PSoC5/SERVO_PWM.c **** #else
 536:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 537:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 538:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_WriteCompare1
 540:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 542:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 548:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 551:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 552:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 553:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 554:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/SERVO_PWM.c ****     void SERVO_PWM_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                         
 557:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 558:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if(SERVO_PWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/SERVO_PWM.c ****             CY_SET_REG16(SERVO_PWM_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 14


 560:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #else
 561:.\Generated_Source\PSoC5/SERVO_PWM.c ****             CY_SET_REG8(SERVO_PWM_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 564:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 565:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 566:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_WriteCompare2
 568:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 570:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 577:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 580:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 581:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 582:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 583:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/SERVO_PWM.c ****     void SERVO_PWM_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                         
 586:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 587:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if(SERVO_PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/SERVO_PWM.c ****             CY_SET_REG16(SERVO_PWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #else
 590:.\Generated_Source\PSoC5/SERVO_PWM.c ****             CY_SET_REG8(SERVO_PWM_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 593:.\Generated_Source\PSoC5/SERVO_PWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 595:.\Generated_Source\PSoC5/SERVO_PWM.c **** #if (SERVO_PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 597:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 598:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_WriteDeadTime
 600:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 602:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 605:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 608:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 609:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 610:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 611:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/SERVO_PWM.c ****     void SERVO_PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 614:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if(!SERVO_PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC5/SERVO_PWM.c ****             CY_SET_REG8(SERVO_PWM_DEADBAND_COUNT_PTR, deadtime);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 15


 617:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #else
 618:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_DEADBAND_COUNT &= ((uint8)(~SERVO_PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 622:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #if(SERVO_PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 SERVO_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << SERVO_PWM_DEADBAND_COUNT_SH
 625:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                                     SERVO_PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #else
 627:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 SERVO_PWM_DEADBAND_COUNT |= deadtime & SERVO_PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #endif /* (SERVO_PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 630:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (!SERVO_PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 632:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 633:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 634:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_ReadDeadTime
 636:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 638:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 641:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 643:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 644:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 645:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 647:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/SERVO_PWM.c ****     uint8 SERVO_PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 650:.\Generated_Source\PSoC5/SERVO_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if(!SERVO_PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC5/SERVO_PWM.c ****             return (CY_GET_REG8(SERVO_PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #else
 654:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 655:.\Generated_Source\PSoC5/SERVO_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #if(SERVO_PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 return ((uint8)(((uint8)(SERVO_PWM_DEADBAND_COUNT & SERVO_PWM_DEADBAND_COUNT_MASK))
 658:.\Generated_Source\PSoC5/SERVO_PWM.c ****                                                                            SERVO_PWM_DEADBAND_COUNT
 659:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #else
 660:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 return (SERVO_PWM_DEADBAND_COUNT & SERVO_PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/SERVO_PWM.c ****             #endif /* (SERVO_PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (!SERVO_PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 664:.\Generated_Source\PSoC5/SERVO_PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 666:.\Generated_Source\PSoC5/SERVO_PWM.c **** #if (SERVO_PWM_UseStatus || SERVO_PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 668:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 669:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_SetInterruptMode
 671:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 673:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 16


 674:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 677:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 680:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 681:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 682:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 683:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/SERVO_PWM.c ****     void SERVO_PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 183              		.loc 1 685 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188              	.LVL3:
 686:.\Generated_Source\PSoC5/SERVO_PWM.c ****         CY_SET_REG8(SERVO_PWM_STATUS_MASK_PTR, interruptMode);
 189              		.loc 1 686 0
 190 0000 014B     		ldr	r3, .L20
 191 0002 1870     		strb	r0, [r3]
 192 0004 7047     		bx	lr
 193              	.L21:
 194 0006 00BF     		.align	2
 195              	.L20:
 196 0008 80640040 		.word	1073767552
 197              		.cfi_endproc
 198              	.LFE9:
 199              		.size	SERVO_PWM_SetInterruptMode, .-SERVO_PWM_SetInterruptMode
 200              		.section	.text.SERVO_PWM_ReadStatusRegister,"ax",%progbits
 201              		.align	2
 202              		.global	SERVO_PWM_ReadStatusRegister
 203              		.thumb
 204              		.thumb_func
 205              		.type	SERVO_PWM_ReadStatusRegister, %function
 206              	SERVO_PWM_ReadStatusRegister:
 207              	.LFB10:
 687:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 688:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 689:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 690:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 694:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 697:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 699:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 700:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 701:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [3]   : FIFO full
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 17


 706:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 710:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/SERVO_PWM.c ****     uint8 SERVO_PWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 208              		.loc 1 712 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/SERVO_PWM.c ****         return (CY_GET_REG8(SERVO_PWM_STATUS_PTR));
 213              		.loc 1 713 0
 214 0000 014B     		ldr	r3, .L23
 215 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 216              		.loc 1 714 0
 217 0004 7047     		bx	lr
 218              	.L24:
 219 0006 00BF     		.align	2
 220              	.L23:
 221 0008 60640040 		.word	1073767520
 222              		.cfi_endproc
 223              	.LFE10:
 224              		.size	SERVO_PWM_ReadStatusRegister, .-SERVO_PWM_ReadStatusRegister
 225              		.section	.text.SERVO_PWM_ReadControlRegister,"ax",%progbits
 226              		.align	2
 227              		.global	SERVO_PWM_ReadControlRegister
 228              		.thumb
 229              		.thumb_func
 230              		.type	SERVO_PWM_ReadControlRegister, %function
 231              	SERVO_PWM_ReadControlRegister:
 232              	.LFB11:
 715:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 716:.\Generated_Source\PSoC5/SERVO_PWM.c **** #endif /* (SERVO_PWM_UseStatus || SERVO_PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 718:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 719:.\Generated_Source\PSoC5/SERVO_PWM.c **** #if (SERVO_PWM_UseControl)
 720:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 721:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 722:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_ReadControlRegister
 724:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 726:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 730:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 732:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 733:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 734:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 736:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/SERVO_PWM.c ****     uint8 SERVO_PWM_ReadControlRegister(void) 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 18


 738:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 233              		.loc 1 738 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 739:.\Generated_Source\PSoC5/SERVO_PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 741:.\Generated_Source\PSoC5/SERVO_PWM.c ****         result = CY_GET_REG8(SERVO_PWM_CONTROL_PTR);
 238              		.loc 1 741 0
 239 0000 014B     		ldr	r3, .L26
 240 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 241              	.LVL4:
 742:.\Generated_Source\PSoC5/SERVO_PWM.c ****         return (result);
 743:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 242              		.loc 1 743 0
 243 0004 7047     		bx	lr
 244              	.L27:
 245 0006 00BF     		.align	2
 246              	.L26:
 247 0008 70640040 		.word	1073767536
 248              		.cfi_endproc
 249              	.LFE11:
 250              		.size	SERVO_PWM_ReadControlRegister, .-SERVO_PWM_ReadControlRegister
 251              		.section	.text.SERVO_PWM_WriteControlRegister,"ax",%progbits
 252              		.align	2
 253              		.global	SERVO_PWM_WriteControlRegister
 254              		.thumb
 255              		.thumb_func
 256              		.type	SERVO_PWM_WriteControlRegister, %function
 257              	SERVO_PWM_WriteControlRegister:
 258              	.LFB12:
 744:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 745:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 746:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_WriteControlRegister
 748:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 750:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 754:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 761:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 762:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 763:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 764:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/SERVO_PWM.c ****     void SERVO_PWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 259              		.loc 1 766 0
 260              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 19


 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL5:
 767:.\Generated_Source\PSoC5/SERVO_PWM.c ****         CY_SET_REG8(SERVO_PWM_CONTROL_PTR, control);
 265              		.loc 1 767 0
 266 0000 014B     		ldr	r3, .L29
 267 0002 1870     		strb	r0, [r3]
 268 0004 7047     		bx	lr
 269              	.L30:
 270 0006 00BF     		.align	2
 271              	.L29:
 272 0008 70640040 		.word	1073767536
 273              		.cfi_endproc
 274              	.LFE12:
 275              		.size	SERVO_PWM_WriteControlRegister, .-SERVO_PWM_WriteControlRegister
 276              		.section	.text.SERVO_PWM_ReadCapture,"ax",%progbits
 277              		.align	2
 278              		.global	SERVO_PWM_ReadCapture
 279              		.thumb
 280              		.thumb_func
 281              		.type	SERVO_PWM_ReadCapture, %function
 282              	SERVO_PWM_ReadCapture:
 283              	.LFB13:
 768:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 769:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 770:.\Generated_Source\PSoC5/SERVO_PWM.c **** #endif /* (SERVO_PWM_UseControl) */
 771:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 772:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 773:.\Generated_Source\PSoC5/SERVO_PWM.c **** #if (!SERVO_PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 775:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 776:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_ReadCapture
 778:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 780:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 783:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 785:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 786:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 787:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 789:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/SERVO_PWM.c ****     uint8 SERVO_PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 284              		.loc 1 791 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 792:.\Generated_Source\PSoC5/SERVO_PWM.c ****         return (CY_GET_REG8(SERVO_PWM_CAPTURE_LSB_PTR));
 289              		.loc 1 792 0
 290 0000 014B     		ldr	r3, .L32
 291 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 20


 793:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 292              		.loc 1 793 0
 293 0004 7047     		bx	lr
 294              	.L33:
 295 0006 00BF     		.align	2
 296              	.L32:
 297 0008 50640040 		.word	1073767504
 298              		.cfi_endproc
 299              	.LFE13:
 300              		.size	SERVO_PWM_ReadCapture, .-SERVO_PWM_ReadCapture
 301              		.section	.text.SERVO_PWM_ClearFIFO,"ax",%progbits
 302              		.align	2
 303              		.global	SERVO_PWM_ClearFIFO
 304              		.thumb
 305              		.thumb_func
 306              		.type	SERVO_PWM_ClearFIFO, %function
 307              	SERVO_PWM_ClearFIFO:
 308              	.LFB6:
 454:.\Generated_Source\PSoC5/SERVO_PWM.c ****         {
 309              		.loc 1 454 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 08B5     		push	{r3, lr}
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 3, -8
 316              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC5/SERVO_PWM.c ****             while(0u != (SERVO_PWM_ReadStatusRegister() & SERVO_PWM_STATUS_FIFONEMPTY))
 317              		.loc 1 455 0
 318 0002 01E0     		b	.L35
 319              	.L36:
 457:.\Generated_Source\PSoC5/SERVO_PWM.c ****                 (void)SERVO_PWM_ReadCapture();
 320              		.loc 1 457 0
 321 0004 FFF7FEFF 		bl	SERVO_PWM_ReadCapture
 322              	.LVL6:
 323              	.L35:
 455:.\Generated_Source\PSoC5/SERVO_PWM.c ****             while(0u != (SERVO_PWM_ReadStatusRegister() & SERVO_PWM_STATUS_FIFONEMPTY))
 324              		.loc 1 455 0 discriminator 1
 325 0008 FFF7FEFF 		bl	SERVO_PWM_ReadStatusRegister
 326              	.LVL7:
 327 000c 10F0100F 		tst	r0, #16
 328 0010 F8D1     		bne	.L36
 459:.\Generated_Source\PSoC5/SERVO_PWM.c ****         }
 329              		.loc 1 459 0
 330 0012 08BD     		pop	{r3, pc}
 331              		.cfi_endproc
 332              	.LFE6:
 333              		.size	SERVO_PWM_ClearFIFO, .-SERVO_PWM_ClearFIFO
 334              		.section	.text.SERVO_PWM_Init,"ax",%progbits
 335              		.align	2
 336              		.global	SERVO_PWM_Init
 337              		.thumb
 338              		.thumb_func
 339              		.type	SERVO_PWM_Init, %function
 340              	SERVO_PWM_Init:
 341              	.LFB1:
  85:.\Generated_Source\PSoC5/SERVO_PWM.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 21


 342              		.loc 1 85 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346 0000 10B5     		push	{r4, lr}
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 4, -8
 349              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC5/SERVO_PWM.c ****         ctrl = SERVO_PWM_CONTROL & ((uint8)(~SERVO_PWM_CTRL_CMPMODE2_MASK)) &
 350              		.loc 1 117 0
 351 0002 114B     		ldr	r3, .L38
 352 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 353 0006 02F0C002 		and	r2, r2, #192
 354              	.LVL8:
 119:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_CONTROL = ctrl | SERVO_PWM_DEFAULT_COMPARE2_MODE |
 355              		.loc 1 119 0
 356 000a 42F00902 		orr	r2, r2, #9
 357              	.LVL9:
 358 000e 1A70     		strb	r2, [r3]
 126:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_AUX_CONTROLDP0 |= (SERVO_PWM_AUX_CTRL_FIFO0_CLR);
 359              		.loc 1 126 0
 360 0010 0E4C     		ldr	r4, .L38+4
 361 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 362 0014 43F00103 		orr	r3, r3, #1
 363 0018 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_WriteCounter(SERVO_PWM_INIT_PERIOD_VALUE);
 364              		.loc 1 133 0
 365 001a FE20     		movs	r0, #254
 366 001c FFF7FEFF 		bl	SERVO_PWM_WriteCounter
 367              	.LVL10:
 136:.\Generated_Source\PSoC5/SERVO_PWM.c ****     SERVO_PWM_WritePeriod(SERVO_PWM_INIT_PERIOD_VALUE);
 368              		.loc 1 136 0
 369 0020 FE20     		movs	r0, #254
 370 0022 FFF7FEFF 		bl	SERVO_PWM_WritePeriod
 371              	.LVL11:
 139:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_WriteCompare(SERVO_PWM_INIT_COMPARE_VALUE1);
 372              		.loc 1 139 0
 373 0026 7F20     		movs	r0, #127
 374 0028 FFF7FEFF 		bl	SERVO_PWM_WriteCompare
 375              	.LVL12:
 154:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_SetInterruptMode(SERVO_PWM_INIT_INTERRUPTS_MODE);
 376              		.loc 1 154 0
 377 002c 0020     		movs	r0, #0
 378 002e FFF7FEFF 		bl	SERVO_PWM_SetInterruptMode
 379              	.LVL13:
 167:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_interruptState = CyEnterCriticalSection();
 380              		.loc 1 167 0
 381 0032 FFF7FEFF 		bl	CyEnterCriticalSection
 382              	.LVL14:
 169:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_STATUS_AUX_CTRL |= SERVO_PWM_STATUS_ACTL_INT_EN_MASK;
 383              		.loc 1 169 0
 384 0036 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 385 0038 43F01003 		orr	r3, r3, #16
 386 003c 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC5/SERVO_PWM.c ****             CyExitCriticalSection(SERVO_PWM_interruptState);
 387              		.loc 1 172 0
 388 003e FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 22


 389              	.LVL15:
 176:.\Generated_Source\PSoC5/SERVO_PWM.c ****             SERVO_PWM_ClearFIFO();
 390              		.loc 1 176 0
 391 0042 FFF7FEFF 		bl	SERVO_PWM_ClearFIFO
 392              	.LVL16:
 393 0046 10BD     		pop	{r4, pc}
 394              	.L39:
 395              		.align	2
 396              	.L38:
 397 0048 70640040 		.word	1073767536
 398 004c 90640040 		.word	1073767568
 399              		.cfi_endproc
 400              	.LFE1:
 401              		.size	SERVO_PWM_Init, .-SERVO_PWM_Init
 402              		.section	.text.SERVO_PWM_Start,"ax",%progbits
 403              		.align	2
 404              		.global	SERVO_PWM_Start
 405              		.thumb
 406              		.thumb_func
 407              		.type	SERVO_PWM_Start, %function
 408              	SERVO_PWM_Start:
 409              	.LFB0:
  56:.\Generated_Source\PSoC5/SERVO_PWM.c **** {
 410              		.loc 1 56 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414 0000 08B5     		push	{r3, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 3, -8
 417              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/SERVO_PWM.c ****     if(SERVO_PWM_initVar == 0u)
 418              		.loc 1 58 0
 419 0002 054B     		ldr	r3, .L42
 420 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 421 0006 23B9     		cbnz	r3, .L41
  60:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_Init();
 422              		.loc 1 60 0
 423 0008 FFF7FEFF 		bl	SERVO_PWM_Init
 424              	.LVL17:
  61:.\Generated_Source\PSoC5/SERVO_PWM.c ****         SERVO_PWM_initVar = 1u;
 425              		.loc 1 61 0
 426 000c 0122     		movs	r2, #1
 427 000e 024B     		ldr	r3, .L42
 428 0010 1A70     		strb	r2, [r3]
 429              	.L41:
  63:.\Generated_Source\PSoC5/SERVO_PWM.c ****     SERVO_PWM_Enable();
 430              		.loc 1 63 0
 431 0012 FFF7FEFF 		bl	SERVO_PWM_Enable
 432              	.LVL18:
 433 0016 08BD     		pop	{r3, pc}
 434              	.L43:
 435              		.align	2
 436              	.L42:
 437 0018 00000000 		.word	.LANCHOR0
 438              		.cfi_endproc
 439              	.LFE0:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 23


 440              		.size	SERVO_PWM_Start, .-SERVO_PWM_Start
 441              		.section	.text.SERVO_PWM_ReadCompare,"ax",%progbits
 442              		.align	2
 443              		.global	SERVO_PWM_ReadCompare
 444              		.thumb
 445              		.thumb_func
 446              		.type	SERVO_PWM_ReadCompare, %function
 447              	SERVO_PWM_ReadCompare:
 448              	.LFB14:
 794:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 795:.\Generated_Source\PSoC5/SERVO_PWM.c **** #endif /* (!SERVO_PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 797:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 798:.\Generated_Source\PSoC5/SERVO_PWM.c **** #if (SERVO_PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 800:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 801:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_ReadCompare
 803:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 805:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 809:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 811:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 812:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 813:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 815:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/SERVO_PWM.c ****     uint8 SERVO_PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 449              		.loc 1 817 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 818:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #if(SERVO_PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/SERVO_PWM.c ****             return ((uint8)CY_GET_REG16(SERVO_PWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #else
 821:.\Generated_Source\PSoC5/SERVO_PWM.c ****             return (CY_GET_REG8(SERVO_PWM_COMPARE1_LSB_PTR));
 454              		.loc 1 821 0
 455 0000 014B     		ldr	r3, .L45
 456 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 822:.\Generated_Source\PSoC5/SERVO_PWM.c ****         #endif /* (SERVO_PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 457              		.loc 1 823 0
 458 0004 7047     		bx	lr
 459              	.L46:
 460 0006 00BF     		.align	2
 461              	.L45:
 462 0008 20640040 		.word	1073767456
 463              		.cfi_endproc
 464              	.LFE14:
 465              		.size	SERVO_PWM_ReadCompare, .-SERVO_PWM_ReadCompare
 466              		.section	.text.SERVO_PWM_ReadPeriod,"ax",%progbits
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 24


 467              		.align	2
 468              		.global	SERVO_PWM_ReadPeriod
 469              		.thumb
 470              		.thumb_func
 471              		.type	SERVO_PWM_ReadPeriod, %function
 472              	SERVO_PWM_ReadPeriod:
 473              	.LFB15:
 824:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 825:.\Generated_Source\PSoC5/SERVO_PWM.c **** #else
 826:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 827:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 828:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_ReadCompare1
 830:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 832:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 835:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 837:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 838:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 839:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 841:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/SERVO_PWM.c ****     uint8 SERVO_PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 844:.\Generated_Source\PSoC5/SERVO_PWM.c ****         return (CY_GET_REG8(SERVO_PWM_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 846:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 847:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 848:.\Generated_Source\PSoC5/SERVO_PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Function Name: SERVO_PWM_ReadCompare2
 850:.\Generated_Source\PSoC5/SERVO_PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 852:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 855:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  None
 857:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 858:.\Generated_Source\PSoC5/SERVO_PWM.c ****     * Return:
 859:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *
 861:.\Generated_Source\PSoC5/SERVO_PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/SERVO_PWM.c ****     uint8 SERVO_PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/SERVO_PWM.c ****     {
 864:.\Generated_Source\PSoC5/SERVO_PWM.c ****         return (CY_GET_REG8(SERVO_PWM_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC5/SERVO_PWM.c ****     }
 866:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 867:.\Generated_Source\PSoC5/SERVO_PWM.c **** #endif /* (SERVO_PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 869:.\Generated_Source\PSoC5/SERVO_PWM.c **** 
 870:.\Generated_Source\PSoC5/SERVO_PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Function Name: SERVO_PWM_ReadPeriod
 872:.\Generated_Source\PSoC5/SERVO_PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 25


 874:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Summary:
 875:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 877:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  None
 879:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 880:.\Generated_Source\PSoC5/SERVO_PWM.c **** * Return:
 881:.\Generated_Source\PSoC5/SERVO_PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/SERVO_PWM.c **** *
 883:.\Generated_Source\PSoC5/SERVO_PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/SERVO_PWM.c **** uint8 SERVO_PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/SERVO_PWM.c **** {
 474              		.loc 1 885 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #if(SERVO_PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/SERVO_PWM.c ****         return ((uint8)CY_GET_REG16(SERVO_PWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #else
 889:.\Generated_Source\PSoC5/SERVO_PWM.c ****         return (CY_GET_REG8(SERVO_PWM_PERIOD_LSB_PTR));
 479              		.loc 1 889 0
 480 0000 014B     		ldr	r3, .L48
 481 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:.\Generated_Source\PSoC5/SERVO_PWM.c ****     #endif /* (SERVO_PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/SERVO_PWM.c **** }
 482              		.loc 1 891 0
 483 0004 7047     		bx	lr
 484              	.L49:
 485 0006 00BF     		.align	2
 486              	.L48:
 487 0008 30640040 		.word	1073767472
 488              		.cfi_endproc
 489              	.LFE15:
 490              		.size	SERVO_PWM_ReadPeriod, .-SERVO_PWM_ReadPeriod
 491              		.global	SERVO_PWM_initVar
 492              		.bss
 493              		.set	.LANCHOR0,. + 0
 494              		.type	SERVO_PWM_initVar, %object
 495              		.size	SERVO_PWM_initVar, 1
 496              	SERVO_PWM_initVar:
 497 0000 00       		.space	1
 498              		.text
 499              	.Letext0:
 500              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 501              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 502              		.section	.debug_info,"",%progbits
 503              	.Ldebug_info0:
 504 0000 2A030000 		.4byte	0x32a
 505 0004 0400     		.2byte	0x4
 506 0006 00000000 		.4byte	.Ldebug_abbrev0
 507 000a 04       		.byte	0x4
 508 000b 01       		.uleb128 0x1
 509 000c 2C020000 		.4byte	.LASF38
 510 0010 01       		.byte	0x1
 511 0011 52000000 		.4byte	.LASF39
 512 0015 E4020000 		.4byte	.LASF40
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 26


 513 0019 00000000 		.4byte	.Ldebug_ranges0+0
 514 001d 00000000 		.4byte	0
 515 0021 00000000 		.4byte	.Ldebug_line0
 516 0025 02       		.uleb128 0x2
 517 0026 01       		.byte	0x1
 518 0027 06       		.byte	0x6
 519 0028 73030000 		.4byte	.LASF0
 520 002c 02       		.uleb128 0x2
 521 002d 01       		.byte	0x1
 522 002e 08       		.byte	0x8
 523 002f 19010000 		.4byte	.LASF1
 524 0033 02       		.uleb128 0x2
 525 0034 02       		.byte	0x2
 526 0035 05       		.byte	0x5
 527 0036 B9010000 		.4byte	.LASF2
 528 003a 02       		.uleb128 0x2
 529 003b 02       		.byte	0x2
 530 003c 07       		.byte	0x7
 531 003d 7E000000 		.4byte	.LASF3
 532 0041 02       		.uleb128 0x2
 533 0042 04       		.byte	0x4
 534 0043 05       		.byte	0x5
 535 0044 50030000 		.4byte	.LASF4
 536 0048 02       		.uleb128 0x2
 537 0049 04       		.byte	0x4
 538 004a 07       		.byte	0x7
 539 004b 43010000 		.4byte	.LASF5
 540 004f 02       		.uleb128 0x2
 541 0050 08       		.byte	0x8
 542 0051 05       		.byte	0x5
 543 0052 C8020000 		.4byte	.LASF6
 544 0056 02       		.uleb128 0x2
 545 0057 08       		.byte	0x8
 546 0058 07       		.byte	0x7
 547 0059 F3000000 		.4byte	.LASF7
 548 005d 03       		.uleb128 0x3
 549 005e 04       		.byte	0x4
 550 005f 05       		.byte	0x5
 551 0060 696E7400 		.ascii	"int\000"
 552 0064 02       		.uleb128 0x2
 553 0065 04       		.byte	0x4
 554 0066 07       		.byte	0x7
 555 0067 DA010000 		.4byte	.LASF8
 556 006b 04       		.uleb128 0x4
 557 006c 6B010000 		.4byte	.LASF12
 558 0070 02       		.byte	0x2
 559 0071 B4       		.byte	0xb4
 560 0072 2C000000 		.4byte	0x2c
 561 0076 02       		.uleb128 0x2
 562 0077 04       		.byte	0x4
 563 0078 04       		.byte	0x4
 564 0079 E5000000 		.4byte	.LASF9
 565 007d 02       		.uleb128 0x2
 566 007e 08       		.byte	0x8
 567 007f 04       		.byte	0x4
 568 0080 B2010000 		.4byte	.LASF10
 569 0084 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 27


 570 0085 01       		.byte	0x1
 571 0086 08       		.byte	0x8
 572 0087 59030000 		.4byte	.LASF11
 573 008b 05       		.uleb128 0x5
 574 008c 27010000 		.4byte	.LASF13
 575 0090 02       		.byte	0x2
 576 0091 5E01     		.2byte	0x15e
 577 0093 97000000 		.4byte	0x97
 578 0097 06       		.uleb128 0x6
 579 0098 6B000000 		.4byte	0x6b
 580 009c 02       		.uleb128 0x2
 581 009d 04       		.byte	0x4
 582 009e 07       		.byte	0x7
 583 009f BF020000 		.4byte	.LASF14
 584 00a3 07       		.uleb128 0x7
 585 00a4 D4000000 		.4byte	.LASF15
 586 00a8 01       		.byte	0x1
 587 00a9 C7       		.byte	0xc7
 588 00aa 00000000 		.4byte	.LFB2
 589 00ae 10000000 		.4byte	.LFE2-.LFB2
 590 00b2 01       		.uleb128 0x1
 591 00b3 9C       		.byte	0x9c
 592 00b4 07       		.uleb128 0x7
 593 00b5 0A010000 		.4byte	.LASF16
 594 00b9 01       		.byte	0x1
 595 00ba E9       		.byte	0xe9
 596 00bb 00000000 		.4byte	.LFB3
 597 00bf 10000000 		.4byte	.LFE3-.LFB3
 598 00c3 01       		.uleb128 0x1
 599 00c4 9C       		.byte	0x9c
 600 00c5 08       		.uleb128 0x8
 601 00c6 A8020000 		.4byte	.LASF17
 602 00ca 01       		.byte	0x1
 603 00cb 9301     		.2byte	0x193
 604 00cd 00000000 		.4byte	.LFB4
 605 00d1 0C000000 		.4byte	.LFE4-.LFB4
 606 00d5 01       		.uleb128 0x1
 607 00d6 9C       		.byte	0x9c
 608 00d7 EA000000 		.4byte	0xea
 609 00db 09       		.uleb128 0x9
 610 00dc EB000000 		.4byte	.LASF19
 611 00e0 01       		.byte	0x1
 612 00e1 9301     		.2byte	0x193
 613 00e3 6B000000 		.4byte	0x6b
 614 00e7 01       		.uleb128 0x1
 615 00e8 50       		.byte	0x50
 616 00e9 00       		.byte	0
 617 00ea 0A       		.uleb128 0xa
 618 00eb 55010000 		.4byte	.LASF25
 619 00ef 01       		.byte	0x1
 620 00f0 A901     		.2byte	0x1a9
 621 00f2 6B000000 		.4byte	0x6b
 622 00f6 00000000 		.4byte	.LFB5
 623 00fa 14000000 		.4byte	.LFE5-.LFB5
 624 00fe 01       		.uleb128 0x1
 625 00ff 9C       		.byte	0x9c
 626 0100 08       		.uleb128 0x8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 28


 627 0101 16020000 		.4byte	.LASF18
 628 0105 01       		.byte	0x1
 629 0106 E201     		.2byte	0x1e2
 630 0108 00000000 		.4byte	.LFB7
 631 010c 0C000000 		.4byte	.LFE7-.LFB7
 632 0110 01       		.uleb128 0x1
 633 0111 9C       		.byte	0x9c
 634 0112 25010000 		.4byte	0x125
 635 0116 09       		.uleb128 0x9
 636 0117 77000000 		.4byte	.LASF20
 637 011b 01       		.byte	0x1
 638 011c E201     		.2byte	0x1e2
 639 011e 6B000000 		.4byte	0x6b
 640 0122 01       		.uleb128 0x1
 641 0123 50       		.byte	0x50
 642 0124 00       		.byte	0
 643 0125 08       		.uleb128 0x8
 644 0126 2C010000 		.4byte	.LASF21
 645 012a 01       		.byte	0x1
 646 012b 0402     		.2byte	0x204
 647 012d 00000000 		.4byte	.LFB8
 648 0131 0C000000 		.4byte	.LFE8-.LFB8
 649 0135 01       		.uleb128 0x1
 650 0136 9C       		.byte	0x9c
 651 0137 4A010000 		.4byte	0x14a
 652 013b 09       		.uleb128 0x9
 653 013c 7F030000 		.4byte	.LASF22
 654 0140 01       		.byte	0x1
 655 0141 0402     		.2byte	0x204
 656 0143 6B000000 		.4byte	0x6b
 657 0147 01       		.uleb128 0x1
 658 0148 50       		.byte	0x50
 659 0149 00       		.byte	0
 660 014a 08       		.uleb128 0x8
 661 014b 79010000 		.4byte	.LASF23
 662 014f 01       		.byte	0x1
 663 0150 AC02     		.2byte	0x2ac
 664 0152 00000000 		.4byte	.LFB9
 665 0156 0C000000 		.4byte	.LFE9-.LFB9
 666 015a 01       		.uleb128 0x1
 667 015b 9C       		.byte	0x9c
 668 015c 6F010000 		.4byte	0x16f
 669 0160 09       		.uleb128 0x9
 670 0161 D6020000 		.4byte	.LASF24
 671 0165 01       		.byte	0x1
 672 0166 AC02     		.2byte	0x2ac
 673 0168 6B000000 		.4byte	0x6b
 674 016c 01       		.uleb128 0x1
 675 016d 50       		.byte	0x50
 676 016e 00       		.byte	0
 677 016f 0A       		.uleb128 0xa
 678 0170 35000000 		.4byte	.LASF26
 679 0174 01       		.byte	0x1
 680 0175 C702     		.2byte	0x2c7
 681 0177 6B000000 		.4byte	0x6b
 682 017b 00000000 		.4byte	.LFB10
 683 017f 0C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 29


 684 0183 01       		.uleb128 0x1
 685 0184 9C       		.byte	0x9c
 686 0185 0B       		.uleb128 0xb
 687 0186 94010000 		.4byte	.LASF41
 688 018a 01       		.byte	0x1
 689 018b E102     		.2byte	0x2e1
 690 018d 6B000000 		.4byte	0x6b
 691 0191 00000000 		.4byte	.LFB11
 692 0195 0C000000 		.4byte	.LFE11-.LFB11
 693 0199 01       		.uleb128 0x1
 694 019a 9C       		.byte	0x9c
 695 019b AE010000 		.4byte	0x1ae
 696 019f 0C       		.uleb128 0xc
 697 01a0 FD010000 		.4byte	.LASF32
 698 01a4 01       		.byte	0x1
 699 01a5 E302     		.2byte	0x2e3
 700 01a7 6B000000 		.4byte	0x6b
 701 01ab 01       		.uleb128 0x1
 702 01ac 50       		.byte	0x50
 703 01ad 00       		.byte	0
 704 01ae 08       		.uleb128 0x8
 705 01af 16000000 		.4byte	.LASF27
 706 01b3 01       		.byte	0x1
 707 01b4 FD02     		.2byte	0x2fd
 708 01b6 00000000 		.4byte	.LFB12
 709 01ba 0C000000 		.4byte	.LFE12-.LFB12
 710 01be 01       		.uleb128 0x1
 711 01bf 9C       		.byte	0x9c
 712 01c0 D3010000 		.4byte	0x1d3
 713 01c4 09       		.uleb128 0x9
 714 01c5 71010000 		.4byte	.LASF28
 715 01c9 01       		.byte	0x1
 716 01ca FD02     		.2byte	0x2fd
 717 01cc 6B000000 		.4byte	0x6b
 718 01d0 01       		.uleb128 0x1
 719 01d1 50       		.byte	0x50
 720 01d2 00       		.byte	0
 721 01d3 0A       		.uleb128 0xa
 722 01d4 91000000 		.4byte	.LASF29
 723 01d8 01       		.byte	0x1
 724 01d9 1603     		.2byte	0x316
 725 01db 6B000000 		.4byte	0x6b
 726 01df 00000000 		.4byte	.LFB13
 727 01e3 0C000000 		.4byte	.LFE13-.LFB13
 728 01e7 01       		.uleb128 0x1
 729 01e8 9C       		.byte	0x9c
 730 01e9 08       		.uleb128 0x8
 731 01ea C0000000 		.4byte	.LASF30
 732 01ee 01       		.byte	0x1
 733 01ef C501     		.2byte	0x1c5
 734 01f1 00000000 		.4byte	.LFB6
 735 01f5 14000000 		.4byte	.LFE6-.LFB6
 736 01f9 01       		.uleb128 0x1
 737 01fa 9C       		.byte	0x9c
 738 01fb 12020000 		.4byte	0x212
 739 01ff 0D       		.uleb128 0xd
 740 0200 08000000 		.4byte	.LVL6
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 30


 741 0204 D3010000 		.4byte	0x1d3
 742 0208 0D       		.uleb128 0xd
 743 0209 0C000000 		.4byte	.LVL7
 744 020d 6F010000 		.4byte	0x16f
 745 0211 00       		.byte	0
 746 0212 0E       		.uleb128 0xe
 747 0213 31030000 		.4byte	.LASF31
 748 0217 01       		.byte	0x1
 749 0218 54       		.byte	0x54
 750 0219 00000000 		.4byte	.LFB1
 751 021d 50000000 		.4byte	.LFE1-.LFB1
 752 0221 01       		.uleb128 0x1
 753 0222 9C       		.byte	0x9c
 754 0223 B0020000 		.4byte	0x2b0
 755 0227 0F       		.uleb128 0xf
 756 0228 2C030000 		.4byte	.LASF33
 757 022c 01       		.byte	0x1
 758 022d 57       		.byte	0x57
 759 022e 6B000000 		.4byte	0x6b
 760 0232 00000000 		.4byte	.LLST0
 761 0236 0F       		.uleb128 0xf
 762 0237 A7000000 		.4byte	.LASF34
 763 023b 01       		.byte	0x1
 764 023c 5D       		.byte	0x5d
 765 023d 6B000000 		.4byte	0x6b
 766 0241 13000000 		.4byte	.LLST1
 767 0245 10       		.uleb128 0x10
 768 0246 20000000 		.4byte	.LVL10
 769 024a C5000000 		.4byte	0xc5
 770 024e 59020000 		.4byte	0x259
 771 0252 11       		.uleb128 0x11
 772 0253 01       		.uleb128 0x1
 773 0254 50       		.byte	0x50
 774 0255 02       		.uleb128 0x2
 775 0256 09       		.byte	0x9
 776 0257 FE       		.byte	0xfe
 777 0258 00       		.byte	0
 778 0259 10       		.uleb128 0x10
 779 025a 26000000 		.4byte	.LVL11
 780 025e 00010000 		.4byte	0x100
 781 0262 6D020000 		.4byte	0x26d
 782 0266 11       		.uleb128 0x11
 783 0267 01       		.uleb128 0x1
 784 0268 50       		.byte	0x50
 785 0269 02       		.uleb128 0x2
 786 026a 09       		.byte	0x9
 787 026b FE       		.byte	0xfe
 788 026c 00       		.byte	0
 789 026d 10       		.uleb128 0x10
 790 026e 2C000000 		.4byte	.LVL12
 791 0272 25010000 		.4byte	0x125
 792 0276 81020000 		.4byte	0x281
 793 027a 11       		.uleb128 0x11
 794 027b 01       		.uleb128 0x1
 795 027c 50       		.byte	0x50
 796 027d 02       		.uleb128 0x2
 797 027e 08       		.byte	0x8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 31


 798 027f 7F       		.byte	0x7f
 799 0280 00       		.byte	0
 800 0281 10       		.uleb128 0x10
 801 0282 32000000 		.4byte	.LVL13
 802 0286 4A010000 		.4byte	0x14a
 803 028a 94020000 		.4byte	0x294
 804 028e 11       		.uleb128 0x11
 805 028f 01       		.uleb128 0x1
 806 0290 50       		.byte	0x50
 807 0291 01       		.uleb128 0x1
 808 0292 30       		.byte	0x30
 809 0293 00       		.byte	0
 810 0294 0D       		.uleb128 0xd
 811 0295 36000000 		.4byte	.LVL14
 812 0299 15030000 		.4byte	0x315
 813 029d 0D       		.uleb128 0xd
 814 029e 42000000 		.4byte	.LVL15
 815 02a2 20030000 		.4byte	0x320
 816 02a6 0D       		.uleb128 0xd
 817 02a7 46000000 		.4byte	.LVL16
 818 02ab E9010000 		.4byte	0x1e9
 819 02af 00       		.byte	0
 820 02b0 0E       		.uleb128 0xe
 821 02b1 40030000 		.4byte	.LASF35
 822 02b5 01       		.byte	0x1
 823 02b6 37       		.byte	0x37
 824 02b7 00000000 		.4byte	.LFB0
 825 02bb 1C000000 		.4byte	.LFE0-.LFB0
 826 02bf 01       		.uleb128 0x1
 827 02c0 9C       		.byte	0x9c
 828 02c1 D8020000 		.4byte	0x2d8
 829 02c5 0D       		.uleb128 0xd
 830 02c6 0C000000 		.4byte	.LVL17
 831 02ca 12020000 		.4byte	0x212
 832 02ce 0D       		.uleb128 0xd
 833 02cf 16000000 		.4byte	.LVL18
 834 02d3 A3000000 		.4byte	0xa3
 835 02d7 00       		.byte	0
 836 02d8 0A       		.uleb128 0xa
 837 02d9 00000000 		.4byte	.LASF36
 838 02dd 01       		.byte	0x1
 839 02de 3003     		.2byte	0x330
 840 02e0 6B000000 		.4byte	0x6b
 841 02e4 00000000 		.4byte	.LFB14
 842 02e8 0C000000 		.4byte	.LFE14-.LFB14
 843 02ec 01       		.uleb128 0x1
 844 02ed 9C       		.byte	0x9c
 845 02ee 0A       		.uleb128 0xa
 846 02ef 5E030000 		.4byte	.LASF37
 847 02f3 01       		.byte	0x1
 848 02f4 7403     		.2byte	0x374
 849 02f6 6B000000 		.4byte	0x6b
 850 02fa 00000000 		.4byte	.LFB15
 851 02fe 0C000000 		.4byte	.LFE15-.LFB15
 852 0302 01       		.uleb128 0x1
 853 0303 9C       		.byte	0x9c
 854 0304 12       		.uleb128 0x12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 32


 855 0305 04020000 		.4byte	.LASF42
 856 0309 01       		.byte	0x1
 857 030a 20       		.byte	0x20
 858 030b 6B000000 		.4byte	0x6b
 859 030f 05       		.uleb128 0x5
 860 0310 03       		.byte	0x3
 861 0311 00000000 		.4byte	SERVO_PWM_initVar
 862 0315 13       		.uleb128 0x13
 863 0316 C3010000 		.4byte	.LASF43
 864 031a 03       		.byte	0x3
 865 031b 7E       		.byte	0x7e
 866 031c 6B000000 		.4byte	0x6b
 867 0320 14       		.uleb128 0x14
 868 0321 E7010000 		.4byte	.LASF44
 869 0325 03       		.byte	0x3
 870 0326 7F       		.byte	0x7f
 871 0327 15       		.uleb128 0x15
 872 0328 6B000000 		.4byte	0x6b
 873 032c 00       		.byte	0
 874 032d 00       		.byte	0
 875              		.section	.debug_abbrev,"",%progbits
 876              	.Ldebug_abbrev0:
 877 0000 01       		.uleb128 0x1
 878 0001 11       		.uleb128 0x11
 879 0002 01       		.byte	0x1
 880 0003 25       		.uleb128 0x25
 881 0004 0E       		.uleb128 0xe
 882 0005 13       		.uleb128 0x13
 883 0006 0B       		.uleb128 0xb
 884 0007 03       		.uleb128 0x3
 885 0008 0E       		.uleb128 0xe
 886 0009 1B       		.uleb128 0x1b
 887 000a 0E       		.uleb128 0xe
 888 000b 55       		.uleb128 0x55
 889 000c 17       		.uleb128 0x17
 890 000d 11       		.uleb128 0x11
 891 000e 01       		.uleb128 0x1
 892 000f 10       		.uleb128 0x10
 893 0010 17       		.uleb128 0x17
 894 0011 00       		.byte	0
 895 0012 00       		.byte	0
 896 0013 02       		.uleb128 0x2
 897 0014 24       		.uleb128 0x24
 898 0015 00       		.byte	0
 899 0016 0B       		.uleb128 0xb
 900 0017 0B       		.uleb128 0xb
 901 0018 3E       		.uleb128 0x3e
 902 0019 0B       		.uleb128 0xb
 903 001a 03       		.uleb128 0x3
 904 001b 0E       		.uleb128 0xe
 905 001c 00       		.byte	0
 906 001d 00       		.byte	0
 907 001e 03       		.uleb128 0x3
 908 001f 24       		.uleb128 0x24
 909 0020 00       		.byte	0
 910 0021 0B       		.uleb128 0xb
 911 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 33


 912 0023 3E       		.uleb128 0x3e
 913 0024 0B       		.uleb128 0xb
 914 0025 03       		.uleb128 0x3
 915 0026 08       		.uleb128 0x8
 916 0027 00       		.byte	0
 917 0028 00       		.byte	0
 918 0029 04       		.uleb128 0x4
 919 002a 16       		.uleb128 0x16
 920 002b 00       		.byte	0
 921 002c 03       		.uleb128 0x3
 922 002d 0E       		.uleb128 0xe
 923 002e 3A       		.uleb128 0x3a
 924 002f 0B       		.uleb128 0xb
 925 0030 3B       		.uleb128 0x3b
 926 0031 0B       		.uleb128 0xb
 927 0032 49       		.uleb128 0x49
 928 0033 13       		.uleb128 0x13
 929 0034 00       		.byte	0
 930 0035 00       		.byte	0
 931 0036 05       		.uleb128 0x5
 932 0037 16       		.uleb128 0x16
 933 0038 00       		.byte	0
 934 0039 03       		.uleb128 0x3
 935 003a 0E       		.uleb128 0xe
 936 003b 3A       		.uleb128 0x3a
 937 003c 0B       		.uleb128 0xb
 938 003d 3B       		.uleb128 0x3b
 939 003e 05       		.uleb128 0x5
 940 003f 49       		.uleb128 0x49
 941 0040 13       		.uleb128 0x13
 942 0041 00       		.byte	0
 943 0042 00       		.byte	0
 944 0043 06       		.uleb128 0x6
 945 0044 35       		.uleb128 0x35
 946 0045 00       		.byte	0
 947 0046 49       		.uleb128 0x49
 948 0047 13       		.uleb128 0x13
 949 0048 00       		.byte	0
 950 0049 00       		.byte	0
 951 004a 07       		.uleb128 0x7
 952 004b 2E       		.uleb128 0x2e
 953 004c 00       		.byte	0
 954 004d 3F       		.uleb128 0x3f
 955 004e 19       		.uleb128 0x19
 956 004f 03       		.uleb128 0x3
 957 0050 0E       		.uleb128 0xe
 958 0051 3A       		.uleb128 0x3a
 959 0052 0B       		.uleb128 0xb
 960 0053 3B       		.uleb128 0x3b
 961 0054 0B       		.uleb128 0xb
 962 0055 27       		.uleb128 0x27
 963 0056 19       		.uleb128 0x19
 964 0057 11       		.uleb128 0x11
 965 0058 01       		.uleb128 0x1
 966 0059 12       		.uleb128 0x12
 967 005a 06       		.uleb128 0x6
 968 005b 40       		.uleb128 0x40
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 34


 969 005c 18       		.uleb128 0x18
 970 005d 9742     		.uleb128 0x2117
 971 005f 19       		.uleb128 0x19
 972 0060 00       		.byte	0
 973 0061 00       		.byte	0
 974 0062 08       		.uleb128 0x8
 975 0063 2E       		.uleb128 0x2e
 976 0064 01       		.byte	0x1
 977 0065 3F       		.uleb128 0x3f
 978 0066 19       		.uleb128 0x19
 979 0067 03       		.uleb128 0x3
 980 0068 0E       		.uleb128 0xe
 981 0069 3A       		.uleb128 0x3a
 982 006a 0B       		.uleb128 0xb
 983 006b 3B       		.uleb128 0x3b
 984 006c 05       		.uleb128 0x5
 985 006d 27       		.uleb128 0x27
 986 006e 19       		.uleb128 0x19
 987 006f 11       		.uleb128 0x11
 988 0070 01       		.uleb128 0x1
 989 0071 12       		.uleb128 0x12
 990 0072 06       		.uleb128 0x6
 991 0073 40       		.uleb128 0x40
 992 0074 18       		.uleb128 0x18
 993 0075 9742     		.uleb128 0x2117
 994 0077 19       		.uleb128 0x19
 995 0078 01       		.uleb128 0x1
 996 0079 13       		.uleb128 0x13
 997 007a 00       		.byte	0
 998 007b 00       		.byte	0
 999 007c 09       		.uleb128 0x9
 1000 007d 05       		.uleb128 0x5
 1001 007e 00       		.byte	0
 1002 007f 03       		.uleb128 0x3
 1003 0080 0E       		.uleb128 0xe
 1004 0081 3A       		.uleb128 0x3a
 1005 0082 0B       		.uleb128 0xb
 1006 0083 3B       		.uleb128 0x3b
 1007 0084 05       		.uleb128 0x5
 1008 0085 49       		.uleb128 0x49
 1009 0086 13       		.uleb128 0x13
 1010 0087 02       		.uleb128 0x2
 1011 0088 18       		.uleb128 0x18
 1012 0089 00       		.byte	0
 1013 008a 00       		.byte	0
 1014 008b 0A       		.uleb128 0xa
 1015 008c 2E       		.uleb128 0x2e
 1016 008d 00       		.byte	0
 1017 008e 3F       		.uleb128 0x3f
 1018 008f 19       		.uleb128 0x19
 1019 0090 03       		.uleb128 0x3
 1020 0091 0E       		.uleb128 0xe
 1021 0092 3A       		.uleb128 0x3a
 1022 0093 0B       		.uleb128 0xb
 1023 0094 3B       		.uleb128 0x3b
 1024 0095 05       		.uleb128 0x5
 1025 0096 27       		.uleb128 0x27
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 35


 1026 0097 19       		.uleb128 0x19
 1027 0098 49       		.uleb128 0x49
 1028 0099 13       		.uleb128 0x13
 1029 009a 11       		.uleb128 0x11
 1030 009b 01       		.uleb128 0x1
 1031 009c 12       		.uleb128 0x12
 1032 009d 06       		.uleb128 0x6
 1033 009e 40       		.uleb128 0x40
 1034 009f 18       		.uleb128 0x18
 1035 00a0 9742     		.uleb128 0x2117
 1036 00a2 19       		.uleb128 0x19
 1037 00a3 00       		.byte	0
 1038 00a4 00       		.byte	0
 1039 00a5 0B       		.uleb128 0xb
 1040 00a6 2E       		.uleb128 0x2e
 1041 00a7 01       		.byte	0x1
 1042 00a8 3F       		.uleb128 0x3f
 1043 00a9 19       		.uleb128 0x19
 1044 00aa 03       		.uleb128 0x3
 1045 00ab 0E       		.uleb128 0xe
 1046 00ac 3A       		.uleb128 0x3a
 1047 00ad 0B       		.uleb128 0xb
 1048 00ae 3B       		.uleb128 0x3b
 1049 00af 05       		.uleb128 0x5
 1050 00b0 27       		.uleb128 0x27
 1051 00b1 19       		.uleb128 0x19
 1052 00b2 49       		.uleb128 0x49
 1053 00b3 13       		.uleb128 0x13
 1054 00b4 11       		.uleb128 0x11
 1055 00b5 01       		.uleb128 0x1
 1056 00b6 12       		.uleb128 0x12
 1057 00b7 06       		.uleb128 0x6
 1058 00b8 40       		.uleb128 0x40
 1059 00b9 18       		.uleb128 0x18
 1060 00ba 9742     		.uleb128 0x2117
 1061 00bc 19       		.uleb128 0x19
 1062 00bd 01       		.uleb128 0x1
 1063 00be 13       		.uleb128 0x13
 1064 00bf 00       		.byte	0
 1065 00c0 00       		.byte	0
 1066 00c1 0C       		.uleb128 0xc
 1067 00c2 34       		.uleb128 0x34
 1068 00c3 00       		.byte	0
 1069 00c4 03       		.uleb128 0x3
 1070 00c5 0E       		.uleb128 0xe
 1071 00c6 3A       		.uleb128 0x3a
 1072 00c7 0B       		.uleb128 0xb
 1073 00c8 3B       		.uleb128 0x3b
 1074 00c9 05       		.uleb128 0x5
 1075 00ca 49       		.uleb128 0x49
 1076 00cb 13       		.uleb128 0x13
 1077 00cc 02       		.uleb128 0x2
 1078 00cd 18       		.uleb128 0x18
 1079 00ce 00       		.byte	0
 1080 00cf 00       		.byte	0
 1081 00d0 0D       		.uleb128 0xd
 1082 00d1 898201   		.uleb128 0x4109
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 36


 1083 00d4 00       		.byte	0
 1084 00d5 11       		.uleb128 0x11
 1085 00d6 01       		.uleb128 0x1
 1086 00d7 31       		.uleb128 0x31
 1087 00d8 13       		.uleb128 0x13
 1088 00d9 00       		.byte	0
 1089 00da 00       		.byte	0
 1090 00db 0E       		.uleb128 0xe
 1091 00dc 2E       		.uleb128 0x2e
 1092 00dd 01       		.byte	0x1
 1093 00de 3F       		.uleb128 0x3f
 1094 00df 19       		.uleb128 0x19
 1095 00e0 03       		.uleb128 0x3
 1096 00e1 0E       		.uleb128 0xe
 1097 00e2 3A       		.uleb128 0x3a
 1098 00e3 0B       		.uleb128 0xb
 1099 00e4 3B       		.uleb128 0x3b
 1100 00e5 0B       		.uleb128 0xb
 1101 00e6 27       		.uleb128 0x27
 1102 00e7 19       		.uleb128 0x19
 1103 00e8 11       		.uleb128 0x11
 1104 00e9 01       		.uleb128 0x1
 1105 00ea 12       		.uleb128 0x12
 1106 00eb 06       		.uleb128 0x6
 1107 00ec 40       		.uleb128 0x40
 1108 00ed 18       		.uleb128 0x18
 1109 00ee 9742     		.uleb128 0x2117
 1110 00f0 19       		.uleb128 0x19
 1111 00f1 01       		.uleb128 0x1
 1112 00f2 13       		.uleb128 0x13
 1113 00f3 00       		.byte	0
 1114 00f4 00       		.byte	0
 1115 00f5 0F       		.uleb128 0xf
 1116 00f6 34       		.uleb128 0x34
 1117 00f7 00       		.byte	0
 1118 00f8 03       		.uleb128 0x3
 1119 00f9 0E       		.uleb128 0xe
 1120 00fa 3A       		.uleb128 0x3a
 1121 00fb 0B       		.uleb128 0xb
 1122 00fc 3B       		.uleb128 0x3b
 1123 00fd 0B       		.uleb128 0xb
 1124 00fe 49       		.uleb128 0x49
 1125 00ff 13       		.uleb128 0x13
 1126 0100 02       		.uleb128 0x2
 1127 0101 17       		.uleb128 0x17
 1128 0102 00       		.byte	0
 1129 0103 00       		.byte	0
 1130 0104 10       		.uleb128 0x10
 1131 0105 898201   		.uleb128 0x4109
 1132 0108 01       		.byte	0x1
 1133 0109 11       		.uleb128 0x11
 1134 010a 01       		.uleb128 0x1
 1135 010b 31       		.uleb128 0x31
 1136 010c 13       		.uleb128 0x13
 1137 010d 01       		.uleb128 0x1
 1138 010e 13       		.uleb128 0x13
 1139 010f 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 37


 1140 0110 00       		.byte	0
 1141 0111 11       		.uleb128 0x11
 1142 0112 8A8201   		.uleb128 0x410a
 1143 0115 00       		.byte	0
 1144 0116 02       		.uleb128 0x2
 1145 0117 18       		.uleb128 0x18
 1146 0118 9142     		.uleb128 0x2111
 1147 011a 18       		.uleb128 0x18
 1148 011b 00       		.byte	0
 1149 011c 00       		.byte	0
 1150 011d 12       		.uleb128 0x12
 1151 011e 34       		.uleb128 0x34
 1152 011f 00       		.byte	0
 1153 0120 03       		.uleb128 0x3
 1154 0121 0E       		.uleb128 0xe
 1155 0122 3A       		.uleb128 0x3a
 1156 0123 0B       		.uleb128 0xb
 1157 0124 3B       		.uleb128 0x3b
 1158 0125 0B       		.uleb128 0xb
 1159 0126 49       		.uleb128 0x49
 1160 0127 13       		.uleb128 0x13
 1161 0128 3F       		.uleb128 0x3f
 1162 0129 19       		.uleb128 0x19
 1163 012a 02       		.uleb128 0x2
 1164 012b 18       		.uleb128 0x18
 1165 012c 00       		.byte	0
 1166 012d 00       		.byte	0
 1167 012e 13       		.uleb128 0x13
 1168 012f 2E       		.uleb128 0x2e
 1169 0130 00       		.byte	0
 1170 0131 3F       		.uleb128 0x3f
 1171 0132 19       		.uleb128 0x19
 1172 0133 03       		.uleb128 0x3
 1173 0134 0E       		.uleb128 0xe
 1174 0135 3A       		.uleb128 0x3a
 1175 0136 0B       		.uleb128 0xb
 1176 0137 3B       		.uleb128 0x3b
 1177 0138 0B       		.uleb128 0xb
 1178 0139 27       		.uleb128 0x27
 1179 013a 19       		.uleb128 0x19
 1180 013b 49       		.uleb128 0x49
 1181 013c 13       		.uleb128 0x13
 1182 013d 3C       		.uleb128 0x3c
 1183 013e 19       		.uleb128 0x19
 1184 013f 00       		.byte	0
 1185 0140 00       		.byte	0
 1186 0141 14       		.uleb128 0x14
 1187 0142 2E       		.uleb128 0x2e
 1188 0143 01       		.byte	0x1
 1189 0144 3F       		.uleb128 0x3f
 1190 0145 19       		.uleb128 0x19
 1191 0146 03       		.uleb128 0x3
 1192 0147 0E       		.uleb128 0xe
 1193 0148 3A       		.uleb128 0x3a
 1194 0149 0B       		.uleb128 0xb
 1195 014a 3B       		.uleb128 0x3b
 1196 014b 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 38


 1197 014c 27       		.uleb128 0x27
 1198 014d 19       		.uleb128 0x19
 1199 014e 3C       		.uleb128 0x3c
 1200 014f 19       		.uleb128 0x19
 1201 0150 00       		.byte	0
 1202 0151 00       		.byte	0
 1203 0152 15       		.uleb128 0x15
 1204 0153 05       		.uleb128 0x5
 1205 0154 00       		.byte	0
 1206 0155 49       		.uleb128 0x49
 1207 0156 13       		.uleb128 0x13
 1208 0157 00       		.byte	0
 1209 0158 00       		.byte	0
 1210 0159 00       		.byte	0
 1211              		.section	.debug_loc,"",%progbits
 1212              	.Ldebug_loc0:
 1213              	.LLST0:
 1214 0000 0A000000 		.4byte	.LVL8
 1215 0004 0E000000 		.4byte	.LVL9
 1216 0008 0100     		.2byte	0x1
 1217 000a 52       		.byte	0x52
 1218 000b 00000000 		.4byte	0
 1219 000f 00000000 		.4byte	0
 1220              	.LLST1:
 1221 0013 36000000 		.4byte	.LVL14
 1222 0017 41000000 		.4byte	.LVL15-1
 1223 001b 0100     		.2byte	0x1
 1224 001d 50       		.byte	0x50
 1225 001e 00000000 		.4byte	0
 1226 0022 00000000 		.4byte	0
 1227              		.section	.debug_aranges,"",%progbits
 1228 0000 94000000 		.4byte	0x94
 1229 0004 0200     		.2byte	0x2
 1230 0006 00000000 		.4byte	.Ldebug_info0
 1231 000a 04       		.byte	0x4
 1232 000b 00       		.byte	0
 1233 000c 0000     		.2byte	0
 1234 000e 0000     		.2byte	0
 1235 0010 00000000 		.4byte	.LFB2
 1236 0014 10000000 		.4byte	.LFE2-.LFB2
 1237 0018 00000000 		.4byte	.LFB3
 1238 001c 10000000 		.4byte	.LFE3-.LFB3
 1239 0020 00000000 		.4byte	.LFB4
 1240 0024 0C000000 		.4byte	.LFE4-.LFB4
 1241 0028 00000000 		.4byte	.LFB5
 1242 002c 14000000 		.4byte	.LFE5-.LFB5
 1243 0030 00000000 		.4byte	.LFB7
 1244 0034 0C000000 		.4byte	.LFE7-.LFB7
 1245 0038 00000000 		.4byte	.LFB8
 1246 003c 0C000000 		.4byte	.LFE8-.LFB8
 1247 0040 00000000 		.4byte	.LFB9
 1248 0044 0C000000 		.4byte	.LFE9-.LFB9
 1249 0048 00000000 		.4byte	.LFB10
 1250 004c 0C000000 		.4byte	.LFE10-.LFB10
 1251 0050 00000000 		.4byte	.LFB11
 1252 0054 0C000000 		.4byte	.LFE11-.LFB11
 1253 0058 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 39


 1254 005c 0C000000 		.4byte	.LFE12-.LFB12
 1255 0060 00000000 		.4byte	.LFB13
 1256 0064 0C000000 		.4byte	.LFE13-.LFB13
 1257 0068 00000000 		.4byte	.LFB6
 1258 006c 14000000 		.4byte	.LFE6-.LFB6
 1259 0070 00000000 		.4byte	.LFB1
 1260 0074 50000000 		.4byte	.LFE1-.LFB1
 1261 0078 00000000 		.4byte	.LFB0
 1262 007c 1C000000 		.4byte	.LFE0-.LFB0
 1263 0080 00000000 		.4byte	.LFB14
 1264 0084 0C000000 		.4byte	.LFE14-.LFB14
 1265 0088 00000000 		.4byte	.LFB15
 1266 008c 0C000000 		.4byte	.LFE15-.LFB15
 1267 0090 00000000 		.4byte	0
 1268 0094 00000000 		.4byte	0
 1269              		.section	.debug_ranges,"",%progbits
 1270              	.Ldebug_ranges0:
 1271 0000 00000000 		.4byte	.LFB2
 1272 0004 10000000 		.4byte	.LFE2
 1273 0008 00000000 		.4byte	.LFB3
 1274 000c 10000000 		.4byte	.LFE3
 1275 0010 00000000 		.4byte	.LFB4
 1276 0014 0C000000 		.4byte	.LFE4
 1277 0018 00000000 		.4byte	.LFB5
 1278 001c 14000000 		.4byte	.LFE5
 1279 0020 00000000 		.4byte	.LFB7
 1280 0024 0C000000 		.4byte	.LFE7
 1281 0028 00000000 		.4byte	.LFB8
 1282 002c 0C000000 		.4byte	.LFE8
 1283 0030 00000000 		.4byte	.LFB9
 1284 0034 0C000000 		.4byte	.LFE9
 1285 0038 00000000 		.4byte	.LFB10
 1286 003c 0C000000 		.4byte	.LFE10
 1287 0040 00000000 		.4byte	.LFB11
 1288 0044 0C000000 		.4byte	.LFE11
 1289 0048 00000000 		.4byte	.LFB12
 1290 004c 0C000000 		.4byte	.LFE12
 1291 0050 00000000 		.4byte	.LFB13
 1292 0054 0C000000 		.4byte	.LFE13
 1293 0058 00000000 		.4byte	.LFB6
 1294 005c 14000000 		.4byte	.LFE6
 1295 0060 00000000 		.4byte	.LFB1
 1296 0064 50000000 		.4byte	.LFE1
 1297 0068 00000000 		.4byte	.LFB0
 1298 006c 1C000000 		.4byte	.LFE0
 1299 0070 00000000 		.4byte	.LFB14
 1300 0074 0C000000 		.4byte	.LFE14
 1301 0078 00000000 		.4byte	.LFB15
 1302 007c 0C000000 		.4byte	.LFE15
 1303 0080 00000000 		.4byte	0
 1304 0084 00000000 		.4byte	0
 1305              		.section	.debug_line,"",%progbits
 1306              	.Ldebug_line0:
 1307 0000 8B010000 		.section	.debug_str,"MS",%progbits,1
 1307      02005300 
 1307      00000201 
 1307      FB0E0D00 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 40


 1307      01010101 
 1308              	.LASF36:
 1309 0000 53455256 		.ascii	"SERVO_PWM_ReadCompare\000"
 1309      4F5F5057 
 1309      4D5F5265 
 1309      6164436F 
 1309      6D706172 
 1310              	.LASF27:
 1311 0016 53455256 		.ascii	"SERVO_PWM_WriteControlRegister\000"
 1311      4F5F5057 
 1311      4D5F5772 
 1311      69746543 
 1311      6F6E7472 
 1312              	.LASF26:
 1313 0035 53455256 		.ascii	"SERVO_PWM_ReadStatusRegister\000"
 1313      4F5F5057 
 1313      4D5F5265 
 1313      61645374 
 1313      61747573 
 1314              	.LASF39:
 1315 0052 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SERVO_PWM.c\000"
 1315      6E657261 
 1315      7465645F 
 1315      536F7572 
 1315      63655C50 
 1316              	.LASF20:
 1317 0077 70657269 		.ascii	"period\000"
 1317      6F6400
 1318              	.LASF3:
 1319 007e 73686F72 		.ascii	"short unsigned int\000"
 1319      7420756E 
 1319      7369676E 
 1319      65642069 
 1319      6E7400
 1320              	.LASF29:
 1321 0091 53455256 		.ascii	"SERVO_PWM_ReadCapture\000"
 1321      4F5F5057 
 1321      4D5F5265 
 1321      61644361 
 1321      70747572 
 1322              	.LASF34:
 1323 00a7 53455256 		.ascii	"SERVO_PWM_interruptState\000"
 1323      4F5F5057 
 1323      4D5F696E 
 1323      74657272 
 1323      75707453 
 1324              	.LASF30:
 1325 00c0 53455256 		.ascii	"SERVO_PWM_ClearFIFO\000"
 1325      4F5F5057 
 1325      4D5F436C 
 1325      65617246 
 1325      49464F00 
 1326              	.LASF15:
 1327 00d4 53455256 		.ascii	"SERVO_PWM_Enable\000"
 1327      4F5F5057 
 1327      4D5F456E 
 1327      61626C65 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 41


 1327      00
 1328              	.LASF9:
 1329 00e5 666C6F61 		.ascii	"float\000"
 1329      7400
 1330              	.LASF19:
 1331 00eb 636F756E 		.ascii	"counter\000"
 1331      74657200 
 1332              	.LASF7:
 1333 00f3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1333      206C6F6E 
 1333      6720756E 
 1333      7369676E 
 1333      65642069 
 1334              	.LASF16:
 1335 010a 53455256 		.ascii	"SERVO_PWM_Stop\000"
 1335      4F5F5057 
 1335      4D5F5374 
 1335      6F7000
 1336              	.LASF1:
 1337 0119 756E7369 		.ascii	"unsigned char\000"
 1337      676E6564 
 1337      20636861 
 1337      7200
 1338              	.LASF13:
 1339 0127 72656738 		.ascii	"reg8\000"
 1339      00
 1340              	.LASF21:
 1341 012c 53455256 		.ascii	"SERVO_PWM_WriteCompare\000"
 1341      4F5F5057 
 1341      4D5F5772 
 1341      69746543 
 1341      6F6D7061 
 1342              	.LASF5:
 1343 0143 6C6F6E67 		.ascii	"long unsigned int\000"
 1343      20756E73 
 1343      69676E65 
 1343      6420696E 
 1343      7400
 1344              	.LASF25:
 1345 0155 53455256 		.ascii	"SERVO_PWM_ReadCounter\000"
 1345      4F5F5057 
 1345      4D5F5265 
 1345      6164436F 
 1345      756E7465 
 1346              	.LASF12:
 1347 016b 75696E74 		.ascii	"uint8\000"
 1347      3800
 1348              	.LASF28:
 1349 0171 636F6E74 		.ascii	"control\000"
 1349      726F6C00 
 1350              	.LASF23:
 1351 0179 53455256 		.ascii	"SERVO_PWM_SetInterruptMode\000"
 1351      4F5F5057 
 1351      4D5F5365 
 1351      74496E74 
 1351      65727275 
 1352              	.LASF41:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 42


 1353 0194 53455256 		.ascii	"SERVO_PWM_ReadControlRegister\000"
 1353      4F5F5057 
 1353      4D5F5265 
 1353      6164436F 
 1353      6E74726F 
 1354              	.LASF10:
 1355 01b2 646F7562 		.ascii	"double\000"
 1355      6C6500
 1356              	.LASF2:
 1357 01b9 73686F72 		.ascii	"short int\000"
 1357      7420696E 
 1357      7400
 1358              	.LASF43:
 1359 01c3 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1359      74657243 
 1359      72697469 
 1359      63616C53 
 1359      65637469 
 1360              	.LASF8:
 1361 01da 756E7369 		.ascii	"unsigned int\000"
 1361      676E6564 
 1361      20696E74 
 1361      00
 1362              	.LASF44:
 1363 01e7 43794578 		.ascii	"CyExitCriticalSection\000"
 1363      69744372 
 1363      69746963 
 1363      616C5365 
 1363      6374696F 
 1364              	.LASF32:
 1365 01fd 72657375 		.ascii	"result\000"
 1365      6C7400
 1366              	.LASF42:
 1367 0204 53455256 		.ascii	"SERVO_PWM_initVar\000"
 1367      4F5F5057 
 1367      4D5F696E 
 1367      69745661 
 1367      7200
 1368              	.LASF18:
 1369 0216 53455256 		.ascii	"SERVO_PWM_WritePeriod\000"
 1369      4F5F5057 
 1369      4D5F5772 
 1369      69746550 
 1369      6572696F 
 1370              	.LASF38:
 1371 022c 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1371      4320342E 
 1371      382E3420 
 1371      32303134 
 1371      30353236 
 1372 025f 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1372      20726576 
 1372      6973696F 
 1372      6E203231 
 1372      31333538 
 1373 0292 67202D66 		.ascii	"g -ffunction-sections\000"
 1373      66756E63 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 43


 1373      74696F6E 
 1373      2D736563 
 1373      74696F6E 
 1374              	.LASF17:
 1375 02a8 53455256 		.ascii	"SERVO_PWM_WriteCounter\000"
 1375      4F5F5057 
 1375      4D5F5772 
 1375      69746543 
 1375      6F756E74 
 1376              	.LASF14:
 1377 02bf 73697A65 		.ascii	"sizetype\000"
 1377      74797065 
 1377      00
 1378              	.LASF6:
 1379 02c8 6C6F6E67 		.ascii	"long long int\000"
 1379      206C6F6E 
 1379      6720696E 
 1379      7400
 1380              	.LASF24:
 1381 02d6 696E7465 		.ascii	"interruptMode\000"
 1381      72727570 
 1381      744D6F64 
 1381      6500
 1382              	.LASF40:
 1383 02e4 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 1383      73657273 
 1383      5C6D6974 
 1383      6368656C 
 1383      6C5C446F 
 1384 0311 2D546872 		.ascii	"-Throttle\\E-Throttle.cydsn\000"
 1384      6F74746C 
 1384      655C452D 
 1384      5468726F 
 1384      74746C65 
 1385              	.LASF33:
 1386 032c 6374726C 		.ascii	"ctrl\000"
 1386      00
 1387              	.LASF31:
 1388 0331 53455256 		.ascii	"SERVO_PWM_Init\000"
 1388      4F5F5057 
 1388      4D5F496E 
 1388      697400
 1389              	.LASF35:
 1390 0340 53455256 		.ascii	"SERVO_PWM_Start\000"
 1390      4F5F5057 
 1390      4D5F5374 
 1390      61727400 
 1391              	.LASF4:
 1392 0350 6C6F6E67 		.ascii	"long int\000"
 1392      20696E74 
 1392      00
 1393              	.LASF11:
 1394 0359 63686172 		.ascii	"char\000"
 1394      00
 1395              	.LASF37:
 1396 035e 53455256 		.ascii	"SERVO_PWM_ReadPeriod\000"
 1396      4F5F5057 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7lDLtl.s 			page 44


 1396      4D5F5265 
 1396      61645065 
 1396      72696F64 
 1397              	.LASF0:
 1398 0373 7369676E 		.ascii	"signed char\000"
 1398      65642063 
 1398      68617200 
 1399              	.LASF22:
 1400 037f 636F6D70 		.ascii	"compare\000"
 1400      61726500 
 1401              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
