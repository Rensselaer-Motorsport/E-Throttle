ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.code	16
  12              		.file	"PWM_R.c"
  13              		.section	.debug_abbrev,"",%progbits
  14              	.Ldebug_abbrev0:
  15              		.section	.debug_info,"",%progbits
  16              	.Ldebug_info0:
  17              		.section	.debug_line,"",%progbits
  18              	.Ldebug_line0:
  19 0000 88030000 		.text
  19      02005E00 
  19      00000201 
  19      FB0E0D00 
  19      01010101 
  20              	.Ltext0:
  21              		.cfi_sections	.debug_frame
  22              		.global	PWM_R_initVar
  23              		.bss
  24              		.type	PWM_R_initVar, %object
  25              		.size	PWM_R_initVar, 1
  26              	PWM_R_initVar:
  27 0000 00       		.space	1
  28              		.section	.text.PWM_R_Init,"ax",%progbits
  29              		.align	2
  30              		.global	PWM_R_Init
  31              		.code	16
  32              		.thumb_func
  33              		.type	PWM_R_Init, %function
  34              	PWM_R_Init:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_R.c"
   1:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_R.c **** * File Name: PWM_R.c
   3:.\Generated_Source\PSoC4/PWM_R.c **** * Version 1.0
   4:.\Generated_Source\PSoC4/PWM_R.c **** *
   5:.\Generated_Source\PSoC4/PWM_R.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_R.c **** *  This file provides the source code to the API for the PWM_R
   7:.\Generated_Source\PSoC4/PWM_R.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_R.c **** *
   9:.\Generated_Source\PSoC4/PWM_R.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_R.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_R.c **** *
  12:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_R.c **** * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_R.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_R.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_R.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 2


  18:.\Generated_Source\PSoC4/PWM_R.c **** 
  19:.\Generated_Source\PSoC4/PWM_R.c **** #include "PWM_R.h"
  20:.\Generated_Source\PSoC4/PWM_R.c **** #include "cyLib.h"
  21:.\Generated_Source\PSoC4/PWM_R.c **** 
  22:.\Generated_Source\PSoC4/PWM_R.c **** uint8 PWM_R_initVar = 0u;
  23:.\Generated_Source\PSoC4/PWM_R.c **** 
  24:.\Generated_Source\PSoC4/PWM_R.c **** 
  25:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_Init
  27:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PWM_R.c **** *
  29:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
  30:.\Generated_Source\PSoC4/PWM_R.c **** *  Initialize/Restore default PWM_R configuration.
  31:.\Generated_Source\PSoC4/PWM_R.c **** *
  32:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
  33:.\Generated_Source\PSoC4/PWM_R.c **** *  None
  34:.\Generated_Source\PSoC4/PWM_R.c **** *
  35:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
  36:.\Generated_Source\PSoC4/PWM_R.c **** *  None
  37:.\Generated_Source\PSoC4/PWM_R.c **** *
  38:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_Init(void)
  40:.\Generated_Source\PSoC4/PWM_R.c **** {
  37              		.loc 1 40 0
  38              		.cfi_startproc
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              	.LCFI1:
  46              		.cfi_def_cfa_register 7
  41:.\Generated_Source\PSoC4/PWM_R.c **** 
  42:.\Generated_Source\PSoC4/PWM_R.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__QUAD == PWM_R_CONFIG)
  44:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PWM_R.c ****         (((uint32)(PWM_R_QUAD_ENCODING_MODES     << PWM_R_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_CONFIG                  << PWM_R_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__QUAD == PWM_R_CONFIG) */
  48:.\Generated_Source\PSoC4/PWM_R.c **** 
  49:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__PWM_SEL == PWM_R_CONFIG)
  50:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_CONTROL_REG =
  47              		.loc 1 50 0
  48 0004 0F4A     		ldr	r2, .L3
  49 0006 8223     		mov	r3, #130
  50 0008 DB04     		lsl	r3, r3, #19
  51 000a 1360     		str	r3, [r2]
  51:.\Generated_Source\PSoC4/PWM_R.c ****         (((uint32)(PWM_R_PWM_STOP_EVENT          << PWM_R_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_PWM_OUT_INVERT          << PWM_R_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_PWM_OUT_N_INVERT        << PWM_R_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_PWM_MODE                << PWM_R_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PWM_R.c **** 
  56:.\Generated_Source\PSoC4/PWM_R.c ****         #if (PWM_R__PWM_PR == PWM_R_PWM_MODE)
  57:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PWM_R.c ****             ((uint32)(PWM_R_PWM_RUN_MODE         << PWM_R_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PWM_R.c **** 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 3


  60:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_WriteCounter(PWM_R_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PWM_R.c ****         #else
  62:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_CONTROL_REG |=
  52              		.loc 1 62 0
  53 000c 0D4B     		ldr	r3, .L3
  54 000e 0D4A     		ldr	r2, .L3
  55 0010 1268     		ldr	r2, [r2]
  56 0012 1A60     		str	r2, [r3]
  63:.\Generated_Source\PSoC4/PWM_R.c ****             (((uint32)(PWM_R_PWM_ALIGN           << PWM_R_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/PWM_R.c ****              ((uint32)(PWM_R_PWM_KILL_EVENT      << PWM_R_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PWM_R.c ****         #endif  /* (PWM_R__PWM_PR == PWM_R_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PWM_R.c **** 
  67:.\Generated_Source\PSoC4/PWM_R.c ****         #if (PWM_R__PWM_DT == PWM_R_PWM_MODE)
  68:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PWM_R.c ****             ((uint32)(PWM_R_PWM_DEAD_TIME_CYCLE  << PWM_R_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PWM_R.c ****         #endif  /* (PWM_R__PWM_DT == PWM_R_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PWM_R.c **** 
  72:.\Generated_Source\PSoC4/PWM_R.c ****         #if (PWM_R__PWM == PWM_R_PWM_MODE)
  73:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_CONTROL_REG |=
  57              		.loc 1 73 0
  58 0014 0B4B     		ldr	r3, .L3
  59 0016 0B4A     		ldr	r2, .L3
  60 0018 1268     		ldr	r2, [r2]
  61 001a 1A60     		str	r2, [r3]
  74:.\Generated_Source\PSoC4/PWM_R.c ****             ((uint32)PWM_R_PWM_PRESCALER         << PWM_R_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/PWM_R.c ****         #endif  /* (PWM_R__PWM == PWM_R_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__PWM_SEL == PWM_R_CONFIG) */
  77:.\Generated_Source\PSoC4/PWM_R.c **** 
  78:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__TIMER == PWM_R_CONFIG)
  79:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_CONTROL_REG =
  80:.\Generated_Source\PSoC4/PWM_R.c ****         (((uint32)(PWM_R_TC_PRESCALER            << PWM_R_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_TC_COUNTER_MODE         << PWM_R_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_TC_RUN_MODE             << PWM_R_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_TC_COMP_CAP_MODE        << PWM_R_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__TIMER == PWM_R_CONFIG) */
  85:.\Generated_Source\PSoC4/PWM_R.c **** 
  86:.\Generated_Source\PSoC4/PWM_R.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__QUAD == PWM_R_CONFIG)
  88:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PWM_R.c ****         (((uint32)(PWM_R_QUAD_PHIA_SIGNAL_MODE   << PWM_R_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_QUAD_INDEX_SIGNAL_MODE  << PWM_R_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_QUAD_STOP_SIGNAL_MODE   << PWM_R_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_QUAD_PHIB_SIGNAL_MODE   << PWM_R_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__QUAD == PWM_R_CONFIG) */
  94:.\Generated_Source\PSoC4/PWM_R.c **** 
  95:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__PWM_SEL == PWM_R_CONFIG)
  96:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_TRIG_CONTROL1_REG  =
  62              		.loc 1 96 0
  63 001c 0A4B     		ldr	r3, .L3+4
  64 001e 0C22     		mov	r2, #12
  65 0020 1A60     		str	r2, [r3]
  97:.\Generated_Source\PSoC4/PWM_R.c ****         (((uint32)(PWM_R_PWM_SWITCH_SIGNAL_MODE  << PWM_R_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_PWM_COUNT_SIGNAL_MODE   << PWM_R_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_PWM_RELOAD_SIGNAL_MODE  << PWM_R_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_PWM_STOP_SIGNAL_MODE    << PWM_R_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_PWM_START_SIGNAL_MODE   << PWM_R_START_SHIFT)));
 102:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__PWM_SEL == PWM_R_CONFIG) */
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 4


 103:.\Generated_Source\PSoC4/PWM_R.c **** 
 104:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__TIMER == PWM_R_CONFIG)
 105:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/PWM_R.c ****         (((uint32)(PWM_R_TC_CAPTURE_SIGNAL_MODE  << PWM_R_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_TC_COUNT_SIGNAL_MODE    << PWM_R_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_TC_RELOAD_SIGNAL_MODE   << PWM_R_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_TC_STOP_SIGNAL_MODE     << PWM_R_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PWM_R.c ****          ((uint32)(PWM_R_TC_START_SIGNAL_MODE    << PWM_R_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__TIMER == PWM_R_CONFIG) */
 112:.\Generated_Source\PSoC4/PWM_R.c **** 
 113:.\Generated_Source\PSoC4/PWM_R.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__QUAD == PWM_R_CONFIG)
 115:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_SetInterruptMode(PWM_R_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__QUAD == PWM_R_CONFIG) */
 117:.\Generated_Source\PSoC4/PWM_R.c **** 
 118:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__PWM_SEL == PWM_R_CONFIG)
 119:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_SetInterruptMode(PWM_R_PWM_INTERRUPT_MASK);
  66              		.loc 1 119 0
  67 0022 0120     		mov	r0, #1
  68 0024 FFF7FEFF 		bl	PWM_R_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__PWM_SEL == PWM_R_CONFIG) */
 121:.\Generated_Source\PSoC4/PWM_R.c **** 
 122:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__TIMER == PWM_R_CONFIG)
 123:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_SetInterruptMode(PWM_R_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__TIMER == PWM_R_CONFIG) */
 125:.\Generated_Source\PSoC4/PWM_R.c **** 
 126:.\Generated_Source\PSoC4/PWM_R.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__TIMER == PWM_R_CONFIG)
 128:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_WritePeriod(PWM_R_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PWM_R.c ****         #if (PWM_R__COMPARE == PWM_R_TC_COMP_CAP_MODE)
 130:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_WriteCompare(PWM_R_TC_COMPARE_VALUE);
 131:.\Generated_Source\PSoC4/PWM_R.c **** 
 132:.\Generated_Source\PSoC4/PWM_R.c ****             #if (1u == PWM_R_TC_COMPARE_SWAP)
 133:.\Generated_Source\PSoC4/PWM_R.c ****                 PWM_R_SetCompareSwap(1u);
 134:.\Generated_Source\PSoC4/PWM_R.c ****                 PWM_R_WriteCompareBuf(PWM_R_TC_COMPARE_BUF_VALUE);
 135:.\Generated_Source\PSoC4/PWM_R.c ****             #endif  /* (1u == PWM_R_TC_COMPARE_SWAP) */
 136:.\Generated_Source\PSoC4/PWM_R.c ****         #endif  /* (PWM_R__COMPARE == PWM_R_TC_COMP_CAP_MODE) */
 137:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__TIMER == PWM_R_CONFIG) */
 138:.\Generated_Source\PSoC4/PWM_R.c **** 
 139:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__PWM_SEL == PWM_R_CONFIG)
 140:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_WritePeriod(PWM_R_PWM_PERIOD_VALUE );
  69              		.loc 1 140 0
  70 0028 084B     		ldr	r3, .L3+8
  71 002a 181C     		mov	r0, r3
  72 002c FFF7FEFF 		bl	PWM_R_WritePeriod
 141:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_WriteCompare(PWM_R_PWM_COMPARE_VALUE);
  73              		.loc 1 141 0
  74 0030 064B     		ldr	r3, .L3+8
  75 0032 181C     		mov	r0, r3
  76 0034 FFF7FEFF 		bl	PWM_R_WriteCompare
 142:.\Generated_Source\PSoC4/PWM_R.c **** 
 143:.\Generated_Source\PSoC4/PWM_R.c ****         #if (1u == PWM_R_PWM_COMPARE_SWAP)
 144:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_SetCompareSwap(1u);
 145:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_WriteCompareBuf(PWM_R_PWM_COMPARE_BUF_VALUE);
 146:.\Generated_Source\PSoC4/PWM_R.c ****         #endif  /* (1u == PWM_R_PWM_COMPARE_SWAP) */
 147:.\Generated_Source\PSoC4/PWM_R.c **** 
 148:.\Generated_Source\PSoC4/PWM_R.c ****         #if (1u == PWM_R_PWM_PERIOD_SWAP)
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 5


 149:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_SetPeriodSwap(1u);
 150:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_WritePeriodBuf(PWM_R_PWM_PERIOD_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PWM_R.c ****         #endif  /* (1u == PWM_R_PWM_PERIOD_SWAP) */
 152:.\Generated_Source\PSoC4/PWM_R.c **** 
 153:.\Generated_Source\PSoC4/PWM_R.c ****         /* Set values from customizer to CTRL2 */
 154:.\Generated_Source\PSoC4/PWM_R.c ****         #if (PWM_R__PWM_PR == PWM_R_PWM_MODE)
 155:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_TRIG_CONTROL2_REG =
 156:.\Generated_Source\PSoC4/PWM_R.c ****                     (PWM_R_CC_MATCH_NO_CHANGE    |
 157:.\Generated_Source\PSoC4/PWM_R.c ****                     PWM_R_OVERLOW_NO_CHANGE      |
 158:.\Generated_Source\PSoC4/PWM_R.c ****                     PWM_R_UNDERFLOW_NO_CHANGE);
 159:.\Generated_Source\PSoC4/PWM_R.c ****         #else
 160:.\Generated_Source\PSoC4/PWM_R.c ****             #if (PWM_R__LEFT == PWM_R_PWM_ALIGN)
 161:.\Generated_Source\PSoC4/PWM_R.c ****                 PWM_R_TRIG_CONTROL2_REG = PWM_R_PWM_MODE_LEFT;
  77              		.loc 1 161 0
  78 0038 054B     		ldr	r3, .L3+12
  79 003a 3122     		mov	r2, #49
  80 003c 1A60     		str	r2, [r3]
 162:.\Generated_Source\PSoC4/PWM_R.c ****             #endif  /* ( PWM_R_PWM_LEFT == PWM_R_PWM_ALIGN) */
 163:.\Generated_Source\PSoC4/PWM_R.c **** 
 164:.\Generated_Source\PSoC4/PWM_R.c ****             #if (PWM_R__RIGHT == PWM_R_PWM_ALIGN)
 165:.\Generated_Source\PSoC4/PWM_R.c ****                 PWM_R_TRIG_CONTROL2_REG = PWM_R_PWM_MODE_RIGHT;
 166:.\Generated_Source\PSoC4/PWM_R.c ****             #endif  /* ( PWM_R_PWM_RIGHT == PWM_R_PWM_ALIGN) */
 167:.\Generated_Source\PSoC4/PWM_R.c **** 
 168:.\Generated_Source\PSoC4/PWM_R.c ****             #if (PWM_R__CENTER == PWM_R_PWM_ALIGN)
 169:.\Generated_Source\PSoC4/PWM_R.c ****                 PWM_R_TRIG_CONTROL2_REG = PWM_R_PWM_MODE_CENTER;
 170:.\Generated_Source\PSoC4/PWM_R.c ****             #endif  /* ( PWM_R_PWM_CENTER == PWM_R_PWM_ALIGN) */
 171:.\Generated_Source\PSoC4/PWM_R.c **** 
 172:.\Generated_Source\PSoC4/PWM_R.c ****             #if (PWM_R__ASYMMETRIC == PWM_R_PWM_ALIGN)
 173:.\Generated_Source\PSoC4/PWM_R.c ****                 PWM_R_TRIG_CONTROL2_REG = PWM_R_PWM_MODE_ASYM;
 174:.\Generated_Source\PSoC4/PWM_R.c ****             #endif  /* (PWM_R__ASYMMETRIC == PWM_R_PWM_ALIGN) */
 175:.\Generated_Source\PSoC4/PWM_R.c ****         #endif  /* (PWM_R__PWM_PR == PWM_R_PWM_MODE) */
 176:.\Generated_Source\PSoC4/PWM_R.c ****     #endif  /* (PWM_R__PWM_SEL == PWM_R_CONFIG) */
 177:.\Generated_Source\PSoC4/PWM_R.c **** }
  81              		.loc 1 177 0
  82 003e BD46     		mov	sp, r7
  83              		@ sp needed for prologue
  84 0040 80BD     		pop	{r7, pc}
  85              	.L4:
  86 0042 C046     		.align	2
  87              	.L3:
  88 0044 80010540 		.word	1074069888
  89 0048 A4010540 		.word	1074069924
  90 004c FFFF0000 		.word	65535
  91 0050 A8010540 		.word	1074069928
  92              		.cfi_endproc
  93              	.LFE0:
  94              		.size	PWM_R_Init, .-PWM_R_Init
  95              		.section	.text.PWM_R_Enable,"ax",%progbits
  96              		.align	2
  97              		.global	PWM_R_Enable
  98              		.code	16
  99              		.thumb_func
 100              		.type	PWM_R_Enable, %function
 101              	PWM_R_Enable:
 102              	.LFB1:
 178:.\Generated_Source\PSoC4/PWM_R.c **** 
 179:.\Generated_Source\PSoC4/PWM_R.c **** 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 6


 180:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 181:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_Enable
 182:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 183:.\Generated_Source\PSoC4/PWM_R.c **** *
 184:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 185:.\Generated_Source\PSoC4/PWM_R.c **** *  Enables the PWM_R.
 186:.\Generated_Source\PSoC4/PWM_R.c **** *
 187:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 188:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 189:.\Generated_Source\PSoC4/PWM_R.c **** *
 190:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 191:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 192:.\Generated_Source\PSoC4/PWM_R.c **** *
 193:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_Enable(void)
 195:.\Generated_Source\PSoC4/PWM_R.c **** {
 103              		.loc 1 195 0
 104              		.cfi_startproc
 105 0000 80B5     		push	{r7, lr}
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 82B0     		sub	sp, sp, #8
 111              	.LCFI3:
 112              		.cfi_def_cfa_offset 16
 113 0004 00AF     		add	r7, sp, #0
 114              	.LCFI4:
 115              		.cfi_def_cfa_register 7
 196:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 197:.\Generated_Source\PSoC4/PWM_R.c **** 
 198:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 116              		.loc 1 198 0
 117 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 118 000a 031C     		mov	r3, r0
 119 000c 1A1C     		mov	r2, r3
 120 000e FB1D     		add	r3, r7, #7
 121 0010 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_BLOCK_CONTROL_REG |= PWM_R_MASK;
 122              		.loc 1 199 0
 123 0012 094B     		ldr	r3, .L7
 124 0014 084A     		ldr	r2, .L7
 125 0016 1168     		ldr	r1, [r2]
 126 0018 0422     		mov	r2, #4
 127 001a 0A43     		orr	r2, r2, r1
 128 001c 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 129              		.loc 1 200 0
 130 001e FB1D     		add	r3, r7, #7
 131 0020 1B78     		ldrb	r3, [r3]
 132 0022 181C     		mov	r0, r3
 133 0024 FFF7FEFF 		bl	CyExitCriticalSection
 201:.\Generated_Source\PSoC4/PWM_R.c **** 
 202:.\Generated_Source\PSoC4/PWM_R.c ****     /* Statr Timer or PWM if start input is absent */
 203:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__PWM_SEL == PWM_R_CONFIG)
 204:.\Generated_Source\PSoC4/PWM_R.c ****         #if (0u == PWM_R_PWM_START_SIGNAL_PRESENT)
 205:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_TriggerCommand(PWM_R_MASK, PWM_R_CMD_START);
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 7


 134              		.loc 1 205 0
 135 0028 0420     		mov	r0, #4
 136 002a 1821     		mov	r1, #24
 137 002c FFF7FEFF 		bl	PWM_R_TriggerCommand
 206:.\Generated_Source\PSoC4/PWM_R.c ****         #endif /* (0u == PWM_R_PWM_START_SIGNAL_PRESENT) */
 207:.\Generated_Source\PSoC4/PWM_R.c ****     #endif /* (PWM_R__PWM_SEL == PWM_R_CONFIG) */
 208:.\Generated_Source\PSoC4/PWM_R.c **** 
 209:.\Generated_Source\PSoC4/PWM_R.c ****     #if (PWM_R__TIMER == PWM_R_CONFIG)
 210:.\Generated_Source\PSoC4/PWM_R.c ****         #if (0u == PWM_R_TC_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PWM_R.c ****             PWM_R_TriggerCommand(PWM_R_MASK, PWM_R_CMD_START);
 212:.\Generated_Source\PSoC4/PWM_R.c ****         #endif /* (0u == PWM_R_TC_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PWM_R.c ****     #endif /* (PWM_R__TIMER == PWM_R_CONFIG) */
 214:.\Generated_Source\PSoC4/PWM_R.c **** }
 138              		.loc 1 214 0
 139 0030 BD46     		mov	sp, r7
 140 0032 02B0     		add	sp, sp, #8
 141              		@ sp needed for prologue
 142 0034 80BD     		pop	{r7, pc}
 143              	.L8:
 144 0036 C046     		.align	2
 145              	.L7:
 146 0038 00000540 		.word	1074069504
 147              		.cfi_endproc
 148              	.LFE1:
 149              		.size	PWM_R_Enable, .-PWM_R_Enable
 150              		.section	.text.PWM_R_Start,"ax",%progbits
 151              		.align	2
 152              		.global	PWM_R_Start
 153              		.code	16
 154              		.thumb_func
 155              		.type	PWM_R_Start, %function
 156              	PWM_R_Start:
 157              	.LFB2:
 215:.\Generated_Source\PSoC4/PWM_R.c **** 
 216:.\Generated_Source\PSoC4/PWM_R.c **** 
 217:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 218:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_Start
 219:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 220:.\Generated_Source\PSoC4/PWM_R.c **** *
 221:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 222:.\Generated_Source\PSoC4/PWM_R.c **** *  Initialize the PWM_R with default customizer
 223:.\Generated_Source\PSoC4/PWM_R.c **** *  values when called the first time and enables the PWM_R.
 224:.\Generated_Source\PSoC4/PWM_R.c **** *  For subsequent calls the configuration is left unchanged and the component is
 225:.\Generated_Source\PSoC4/PWM_R.c **** *  just enabled.
 226:.\Generated_Source\PSoC4/PWM_R.c **** *
 227:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 228:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 229:.\Generated_Source\PSoC4/PWM_R.c **** *
 230:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 231:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 232:.\Generated_Source\PSoC4/PWM_R.c **** *
 233:.\Generated_Source\PSoC4/PWM_R.c **** * Global variables:
 234:.\Generated_Source\PSoC4/PWM_R.c **** *  PWM_R_initVar: global variable is used to indicate initial
 235:.\Generated_Source\PSoC4/PWM_R.c **** *  configuration of this component.  The variable is initialized to zero and set
 236:.\Generated_Source\PSoC4/PWM_R.c **** *  to 1 the first time PWM_R_Start() is called. This allows
 237:.\Generated_Source\PSoC4/PWM_R.c **** *  enable/disable component without re-initialization in all subsequent calls
 238:.\Generated_Source\PSoC4/PWM_R.c **** *  to the PWM_R_Start() routine.
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 8


 239:.\Generated_Source\PSoC4/PWM_R.c **** *
 240:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 241:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_Start(void)
 242:.\Generated_Source\PSoC4/PWM_R.c **** {
 158              		.loc 1 242 0
 159              		.cfi_startproc
 160 0000 80B5     		push	{r7, lr}
 161              	.LCFI5:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 00AF     		add	r7, sp, #0
 166              	.LCFI6:
 167              		.cfi_def_cfa_register 7
 243:.\Generated_Source\PSoC4/PWM_R.c ****     if (0u == PWM_R_initVar)
 168              		.loc 1 243 0
 169 0004 064B     		ldr	r3, .L12
 170 0006 1B78     		ldrb	r3, [r3]
 171 0008 002B     		cmp	r3, #0
 172 000a 04D1     		bne	.L10
 244:.\Generated_Source\PSoC4/PWM_R.c ****     {
 245:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_Init();
 173              		.loc 1 245 0
 174 000c FFF7FEFF 		bl	PWM_R_Init
 246:.\Generated_Source\PSoC4/PWM_R.c ****         PWM_R_initVar = 1u;
 175              		.loc 1 246 0
 176 0010 034B     		ldr	r3, .L12
 177 0012 0122     		mov	r2, #1
 178 0014 1A70     		strb	r2, [r3]
 179              	.L10:
 247:.\Generated_Source\PSoC4/PWM_R.c ****     }
 248:.\Generated_Source\PSoC4/PWM_R.c **** 
 249:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_Enable();
 180              		.loc 1 249 0
 181 0016 FFF7FEFF 		bl	PWM_R_Enable
 250:.\Generated_Source\PSoC4/PWM_R.c **** }
 182              		.loc 1 250 0
 183 001a BD46     		mov	sp, r7
 184              		@ sp needed for prologue
 185 001c 80BD     		pop	{r7, pc}
 186              	.L13:
 187 001e C046     		.align	2
 188              	.L12:
 189 0020 00000000 		.word	PWM_R_initVar
 190              		.cfi_endproc
 191              	.LFE2:
 192              		.size	PWM_R_Start, .-PWM_R_Start
 193              		.section	.text.PWM_R_Stop,"ax",%progbits
 194              		.align	2
 195              		.global	PWM_R_Stop
 196              		.code	16
 197              		.thumb_func
 198              		.type	PWM_R_Stop, %function
 199              	PWM_R_Stop:
 200              	.LFB3:
 251:.\Generated_Source\PSoC4/PWM_R.c **** 
 252:.\Generated_Source\PSoC4/PWM_R.c **** 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 9


 253:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 254:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_Stop
 255:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 256:.\Generated_Source\PSoC4/PWM_R.c **** *
 257:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 258:.\Generated_Source\PSoC4/PWM_R.c **** *  Disables the PWM_R.
 259:.\Generated_Source\PSoC4/PWM_R.c **** *
 260:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 261:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 262:.\Generated_Source\PSoC4/PWM_R.c **** *
 263:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 264:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 265:.\Generated_Source\PSoC4/PWM_R.c **** *
 266:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 267:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_Stop(void)
 268:.\Generated_Source\PSoC4/PWM_R.c **** {
 201              		.loc 1 268 0
 202              		.cfi_startproc
 203 0000 80B5     		push	{r7, lr}
 204              	.LCFI7:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 82B0     		sub	sp, sp, #8
 209              	.LCFI8:
 210              		.cfi_def_cfa_offset 16
 211 0004 00AF     		add	r7, sp, #0
 212              	.LCFI9:
 213              		.cfi_def_cfa_register 7
 269:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 270:.\Generated_Source\PSoC4/PWM_R.c **** 
 271:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 214              		.loc 1 271 0
 215 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 216 000a 031C     		mov	r3, r0
 217 000c 1A1C     		mov	r2, r3
 218 000e FB1D     		add	r3, r7, #7
 219 0010 1A70     		strb	r2, [r3]
 272:.\Generated_Source\PSoC4/PWM_R.c **** 
 273:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_BLOCK_CONTROL_REG &= (uint32)~PWM_R_MASK;
 220              		.loc 1 273 0
 221 0012 074B     		ldr	r3, .L16
 222 0014 064A     		ldr	r2, .L16
 223 0016 1268     		ldr	r2, [r2]
 224 0018 0421     		mov	r1, #4
 225 001a 8A43     		bic	r2, r2, r1
 226 001c 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC4/PWM_R.c **** 
 275:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 227              		.loc 1 275 0
 228 001e FB1D     		add	r3, r7, #7
 229 0020 1B78     		ldrb	r3, [r3]
 230 0022 181C     		mov	r0, r3
 231 0024 FFF7FEFF 		bl	CyExitCriticalSection
 276:.\Generated_Source\PSoC4/PWM_R.c **** }
 232              		.loc 1 276 0
 233 0028 BD46     		mov	sp, r7
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 10


 234 002a 02B0     		add	sp, sp, #8
 235              		@ sp needed for prologue
 236 002c 80BD     		pop	{r7, pc}
 237              	.L17:
 238 002e C046     		.align	2
 239              	.L16:
 240 0030 00000540 		.word	1074069504
 241              		.cfi_endproc
 242              	.LFE3:
 243              		.size	PWM_R_Stop, .-PWM_R_Stop
 244              		.section	.text.PWM_R_SetMode,"ax",%progbits
 245              		.align	2
 246              		.global	PWM_R_SetMode
 247              		.code	16
 248              		.thumb_func
 249              		.type	PWM_R_SetMode, %function
 250              	PWM_R_SetMode:
 251              	.LFB4:
 277:.\Generated_Source\PSoC4/PWM_R.c **** 
 278:.\Generated_Source\PSoC4/PWM_R.c **** 
 279:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetMode
 281:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/PWM_R.c **** *
 283:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 284:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the operation mode of the PWM_R. This function is used when
 285:.\Generated_Source\PSoC4/PWM_R.c **** *  configured as a generic PWM_R and the actual mode of operation is
 286:.\Generated_Source\PSoC4/PWM_R.c **** *  set at runtime. The mode must be set while the component is disabled.
 287:.\Generated_Source\PSoC4/PWM_R.c **** *
 288:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 289:.\Generated_Source\PSoC4/PWM_R.c **** *  mode: Mode for the PWM_R to operate in
 290:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 291:.\Generated_Source\PSoC4/PWM_R.c **** *   - PWM_R_MODE_TIMER_COMPARE - Timer / Counter with
 292:.\Generated_Source\PSoC4/PWM_R.c **** *                                                 compare capability
 293:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_MODE_TIMER_CAPTURE - Timer / Counter with
 294:.\Generated_Source\PSoC4/PWM_R.c **** *                                                 capture capability
 295:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_MODE_QUAD - Quadrature decoder
 296:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_MODE_PWM - PWM
 297:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_MODE_PWM_DT - PWM with dead time
 298:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_MODE_PWM_PR - PWM with pseudo random capability
 299:.\Generated_Source\PSoC4/PWM_R.c **** *
 300:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 301:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 302:.\Generated_Source\PSoC4/PWM_R.c **** *
 303:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetMode(uint32 mode)
 305:.\Generated_Source\PSoC4/PWM_R.c **** {
 252              		.loc 1 305 0
 253              		.cfi_startproc
 254 0000 80B5     		push	{r7, lr}
 255              	.LCFI10:
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 84B0     		sub	sp, sp, #16
 260              	.LCFI11:
 261              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 11


 262 0004 00AF     		add	r7, sp, #0
 263              	.LCFI12:
 264              		.cfi_def_cfa_register 7
 265 0006 7860     		str	r0, [r7, #4]
 306:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 307:.\Generated_Source\PSoC4/PWM_R.c **** 
 308:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 266              		.loc 1 308 0
 267 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 268 000c 031C     		mov	r3, r0
 269 000e 1A1C     		mov	r2, r3
 270 0010 3B1C     		mov	r3, r7
 271 0012 0F33     		add	r3, r3, #15
 272 0014 1A70     		strb	r2, [r3]
 309:.\Generated_Source\PSoC4/PWM_R.c **** 
 310:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_MODE_MASK;
 273              		.loc 1 310 0
 274 0016 0A4B     		ldr	r3, .L20
 275 0018 094A     		ldr	r2, .L20
 276 001a 1168     		ldr	r1, [r2]
 277 001c 094A     		ldr	r2, .L20+4
 278 001e 0A40     		and	r2, r2, r1
 279 0020 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= mode;
 280              		.loc 1 311 0
 281 0022 074B     		ldr	r3, .L20
 282 0024 064A     		ldr	r2, .L20
 283 0026 1168     		ldr	r1, [r2]
 284 0028 7A68     		ldr	r2, [r7, #4]
 285 002a 0A43     		orr	r2, r2, r1
 286 002c 1A60     		str	r2, [r3]
 312:.\Generated_Source\PSoC4/PWM_R.c **** 
 313:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 287              		.loc 1 313 0
 288 002e 3B1C     		mov	r3, r7
 289 0030 0F33     		add	r3, r3, #15
 290 0032 1B78     		ldrb	r3, [r3]
 291 0034 181C     		mov	r0, r3
 292 0036 FFF7FEFF 		bl	CyExitCriticalSection
 314:.\Generated_Source\PSoC4/PWM_R.c **** }
 293              		.loc 1 314 0
 294 003a BD46     		mov	sp, r7
 295 003c 04B0     		add	sp, sp, #16
 296              		@ sp needed for prologue
 297 003e 80BD     		pop	{r7, pc}
 298              	.L21:
 299              		.align	2
 300              	.L20:
 301 0040 80010540 		.word	1074069888
 302 0044 FFFFFFF8 		.word	-117440513
 303              		.cfi_endproc
 304              	.LFE4:
 305              		.size	PWM_R_SetMode, .-PWM_R_SetMode
 306              		.section	.text.PWM_R_SetQDMode,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_R_SetQDMode
 309              		.code	16
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 12


 310              		.thumb_func
 311              		.type	PWM_R_SetQDMode, %function
 312              	PWM_R_SetQDMode:
 313              	.LFB5:
 315:.\Generated_Source\PSoC4/PWM_R.c **** 
 316:.\Generated_Source\PSoC4/PWM_R.c **** 
 317:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 318:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetQDMode
 319:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 320:.\Generated_Source\PSoC4/PWM_R.c **** *
 321:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 322:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the the Quadrature Decoder to one of 3 supported modes.
 323:.\Generated_Source\PSoC4/PWM_R.c **** *  Is functionality is only applicable to Quadrature Decoder operation.
 324:.\Generated_Source\PSoC4/PWM_R.c **** *
 325:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 326:.\Generated_Source\PSoC4/PWM_R.c **** *  qdMode: Quadrature Decoder mode
 327:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 328:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_MODE_X1 - Counts on phi 1 rising
 329:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_MODE_X2 - Counts on both edges of phi1 (2x faster)
 330:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_MODE_X4 - Counts on both edges of phi1 and phi2
 331:.\Generated_Source\PSoC4/PWM_R.c **** *                                        (4x faster)
 332:.\Generated_Source\PSoC4/PWM_R.c **** *
 333:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 334:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 335:.\Generated_Source\PSoC4/PWM_R.c **** *
 336:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 337:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetQDMode(uint32 qdMode)
 338:.\Generated_Source\PSoC4/PWM_R.c **** {
 314              		.loc 1 338 0
 315              		.cfi_startproc
 316 0000 80B5     		push	{r7, lr}
 317              	.LCFI13:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 84B0     		sub	sp, sp, #16
 322              	.LCFI14:
 323              		.cfi_def_cfa_offset 24
 324 0004 00AF     		add	r7, sp, #0
 325              	.LCFI15:
 326              		.cfi_def_cfa_register 7
 327 0006 7860     		str	r0, [r7, #4]
 339:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 340:.\Generated_Source\PSoC4/PWM_R.c **** 
 341:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 328              		.loc 1 341 0
 329 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 330 000c 031C     		mov	r3, r0
 331 000e 1A1C     		mov	r2, r3
 332 0010 3B1C     		mov	r3, r7
 333 0012 0F33     		add	r3, r3, #15
 334 0014 1A70     		strb	r2, [r3]
 342:.\Generated_Source\PSoC4/PWM_R.c **** 
 343:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_QUAD_MODE_MASK;
 335              		.loc 1 343 0
 336 0016 0A4B     		ldr	r3, .L24
 337 0018 094A     		ldr	r2, .L24
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 13


 338 001a 1168     		ldr	r1, [r2]
 339 001c 094A     		ldr	r2, .L24+4
 340 001e 0A40     		and	r2, r2, r1
 341 0020 1A60     		str	r2, [r3]
 344:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= qdMode;
 342              		.loc 1 344 0
 343 0022 074B     		ldr	r3, .L24
 344 0024 064A     		ldr	r2, .L24
 345 0026 1168     		ldr	r1, [r2]
 346 0028 7A68     		ldr	r2, [r7, #4]
 347 002a 0A43     		orr	r2, r2, r1
 348 002c 1A60     		str	r2, [r3]
 345:.\Generated_Source\PSoC4/PWM_R.c **** 
 346:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 349              		.loc 1 346 0
 350 002e 3B1C     		mov	r3, r7
 351 0030 0F33     		add	r3, r3, #15
 352 0032 1B78     		ldrb	r3, [r3]
 353 0034 181C     		mov	r0, r3
 354 0036 FFF7FEFF 		bl	CyExitCriticalSection
 347:.\Generated_Source\PSoC4/PWM_R.c **** }
 355              		.loc 1 347 0
 356 003a BD46     		mov	sp, r7
 357 003c 04B0     		add	sp, sp, #16
 358              		@ sp needed for prologue
 359 003e 80BD     		pop	{r7, pc}
 360              	.L25:
 361              		.align	2
 362              	.L24:
 363 0040 80010540 		.word	1074069888
 364 0044 FFFF8FFF 		.word	-7340033
 365              		.cfi_endproc
 366              	.LFE5:
 367              		.size	PWM_R_SetQDMode, .-PWM_R_SetQDMode
 368              		.section	.text.PWM_R_SetPrescaler,"ax",%progbits
 369              		.align	2
 370              		.global	PWM_R_SetPrescaler
 371              		.code	16
 372              		.thumb_func
 373              		.type	PWM_R_SetPrescaler, %function
 374              	PWM_R_SetPrescaler:
 375              	.LFB6:
 348:.\Generated_Source\PSoC4/PWM_R.c **** 
 349:.\Generated_Source\PSoC4/PWM_R.c **** 
 350:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetPrescaler
 352:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/PWM_R.c **** *
 354:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 355:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 356:.\Generated_Source\PSoC4/PWM_R.c **** *  to PWM with dead time mode or Quadrature Decoder mode.
 357:.\Generated_Source\PSoC4/PWM_R.c **** *
 358:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 359:.\Generated_Source\PSoC4/PWM_R.c **** *  prescaler: Prescaler divider value
 360:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 361:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 362:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_PRESCALE_DIVBY2    - Divide by 2
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 14


 363:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_PRESCALE_DIVBY4    - Divide by 4
 364:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_PRESCALE_DIVBY8    - Divide by 8
 365:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_PRESCALE_DIVBY16   - Divide by 16
 366:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_PRESCALE_DIVBY32   - Divide by 32
 367:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_PRESCALE_DIVBY64   - Divide by 64
 368:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_PRESCALE_DIVBY128  - Divide by 128
 369:.\Generated_Source\PSoC4/PWM_R.c **** *
 370:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 371:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 372:.\Generated_Source\PSoC4/PWM_R.c **** *
 373:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 374:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetPrescaler(uint32 prescaler)
 375:.\Generated_Source\PSoC4/PWM_R.c **** {
 376              		.loc 1 375 0
 377              		.cfi_startproc
 378 0000 80B5     		push	{r7, lr}
 379              	.LCFI16:
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 84B0     		sub	sp, sp, #16
 384              	.LCFI17:
 385              		.cfi_def_cfa_offset 24
 386 0004 00AF     		add	r7, sp, #0
 387              	.LCFI18:
 388              		.cfi_def_cfa_register 7
 389 0006 7860     		str	r0, [r7, #4]
 376:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 377:.\Generated_Source\PSoC4/PWM_R.c **** 
 378:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 390              		.loc 1 378 0
 391 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 392 000c 031C     		mov	r3, r0
 393 000e 1A1C     		mov	r2, r3
 394 0010 3B1C     		mov	r3, r7
 395 0012 0F33     		add	r3, r3, #15
 396 0014 1A70     		strb	r2, [r3]
 379:.\Generated_Source\PSoC4/PWM_R.c **** 
 380:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_PRESCALER_MASK;
 397              		.loc 1 380 0
 398 0016 0A4B     		ldr	r3, .L28
 399 0018 094A     		ldr	r2, .L28
 400 001a 1168     		ldr	r1, [r2]
 401 001c 094A     		ldr	r2, .L28+4
 402 001e 0A40     		and	r2, r2, r1
 403 0020 1A60     		str	r2, [r3]
 381:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= prescaler;
 404              		.loc 1 381 0
 405 0022 074B     		ldr	r3, .L28
 406 0024 064A     		ldr	r2, .L28
 407 0026 1168     		ldr	r1, [r2]
 408 0028 7A68     		ldr	r2, [r7, #4]
 409 002a 0A43     		orr	r2, r2, r1
 410 002c 1A60     		str	r2, [r3]
 382:.\Generated_Source\PSoC4/PWM_R.c **** 
 383:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 411              		.loc 1 383 0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 15


 412 002e 3B1C     		mov	r3, r7
 413 0030 0F33     		add	r3, r3, #15
 414 0032 1B78     		ldrb	r3, [r3]
 415 0034 181C     		mov	r0, r3
 416 0036 FFF7FEFF 		bl	CyExitCriticalSection
 384:.\Generated_Source\PSoC4/PWM_R.c **** }
 417              		.loc 1 384 0
 418 003a BD46     		mov	sp, r7
 419 003c 04B0     		add	sp, sp, #16
 420              		@ sp needed for prologue
 421 003e 80BD     		pop	{r7, pc}
 422              	.L29:
 423              		.align	2
 424              	.L28:
 425 0040 80010540 		.word	1074069888
 426 0044 FF00FFFF 		.word	-65281
 427              		.cfi_endproc
 428              	.LFE6:
 429              		.size	PWM_R_SetPrescaler, .-PWM_R_SetPrescaler
 430              		.section	.text.PWM_R_SetOneShot,"ax",%progbits
 431              		.align	2
 432              		.global	PWM_R_SetOneShot
 433              		.code	16
 434              		.thumb_func
 435              		.type	PWM_R_SetOneShot, %function
 436              	PWM_R_SetOneShot:
 437              	.LFB7:
 385:.\Generated_Source\PSoC4/PWM_R.c **** 
 386:.\Generated_Source\PSoC4/PWM_R.c **** 
 387:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 388:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetOneShot
 389:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 390:.\Generated_Source\PSoC4/PWM_R.c **** *
 391:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 392:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the register that controls whether the PWM_R runs
 393:.\Generated_Source\PSoC4/PWM_R.c **** *  continuously or stops when terminal count is reached.  By default the
 394:.\Generated_Source\PSoC4/PWM_R.c **** *  PWM_R operates in continuous mode.
 395:.\Generated_Source\PSoC4/PWM_R.c **** *
 396:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 397:.\Generated_Source\PSoC4/PWM_R.c **** *  oneShotEnable
 398:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 399:.\Generated_Source\PSoC4/PWM_R.c **** *     - 0 - Continuous
 400:.\Generated_Source\PSoC4/PWM_R.c **** *     - 1 - Enable One Shot
 401:.\Generated_Source\PSoC4/PWM_R.c **** *
 402:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 403:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 404:.\Generated_Source\PSoC4/PWM_R.c **** *
 405:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 406:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetOneShot(uint32 oneShotEnable)
 407:.\Generated_Source\PSoC4/PWM_R.c **** {
 438              		.loc 1 407 0
 439              		.cfi_startproc
 440 0000 80B5     		push	{r7, lr}
 441              	.LCFI19:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 16


 445 0002 84B0     		sub	sp, sp, #16
 446              	.LCFI20:
 447              		.cfi_def_cfa_offset 24
 448 0004 00AF     		add	r7, sp, #0
 449              	.LCFI21:
 450              		.cfi_def_cfa_register 7
 451 0006 7860     		str	r0, [r7, #4]
 408:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 409:.\Generated_Source\PSoC4/PWM_R.c **** 
 410:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 452              		.loc 1 410 0
 453 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 454 000c 031C     		mov	r3, r0
 455 000e 1A1C     		mov	r2, r3
 456 0010 3B1C     		mov	r3, r7
 457 0012 0F33     		add	r3, r3, #15
 458 0014 1A70     		strb	r2, [r3]
 411:.\Generated_Source\PSoC4/PWM_R.c **** 
 412:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_ONESHOT_MASK;
 459              		.loc 1 412 0
 460 0016 0C4B     		ldr	r3, .L32
 461 0018 0B4A     		ldr	r2, .L32
 462 001a 1168     		ldr	r1, [r2]
 463 001c 0B4A     		ldr	r2, .L32+4
 464 001e 0A40     		and	r2, r2, r1
 465 0020 1A60     		str	r2, [r3]
 413:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_R_1BIT_MASK) <<
 466              		.loc 1 413 0
 467 0022 094B     		ldr	r3, .L32
 468 0024 084A     		ldr	r2, .L32
 469 0026 1168     		ldr	r1, [r2]
 470 0028 7868     		ldr	r0, [r7, #4]
 471 002a 0122     		mov	r2, #1
 472 002c 0240     		and	r2, r2, r0
 473 002e 9204     		lsl	r2, r2, #18
 474 0030 0A43     		orr	r2, r2, r1
 475 0032 1A60     		str	r2, [r3]
 414:.\Generated_Source\PSoC4/PWM_R.c ****                                                                PWM_R_ONESHOT_SHIFT));
 415:.\Generated_Source\PSoC4/PWM_R.c **** 
 416:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 476              		.loc 1 416 0
 477 0034 3B1C     		mov	r3, r7
 478 0036 0F33     		add	r3, r3, #15
 479 0038 1B78     		ldrb	r3, [r3]
 480 003a 181C     		mov	r0, r3
 481 003c FFF7FEFF 		bl	CyExitCriticalSection
 417:.\Generated_Source\PSoC4/PWM_R.c **** }
 482              		.loc 1 417 0
 483 0040 BD46     		mov	sp, r7
 484 0042 04B0     		add	sp, sp, #16
 485              		@ sp needed for prologue
 486 0044 80BD     		pop	{r7, pc}
 487              	.L33:
 488 0046 C046     		.align	2
 489              	.L32:
 490 0048 80010540 		.word	1074069888
 491 004c FFFFFBFF 		.word	-262145
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 17


 492              		.cfi_endproc
 493              	.LFE7:
 494              		.size	PWM_R_SetOneShot, .-PWM_R_SetOneShot
 495              		.section	.text.PWM_R_SetPWMMode,"ax",%progbits
 496              		.align	2
 497              		.global	PWM_R_SetPWMMode
 498              		.code	16
 499              		.thumb_func
 500              		.type	PWM_R_SetPWMMode, %function
 501              	PWM_R_SetPWMMode:
 502              	.LFB8:
 418:.\Generated_Source\PSoC4/PWM_R.c **** 
 419:.\Generated_Source\PSoC4/PWM_R.c **** 
 420:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 421:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetPWMMode
 422:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 423:.\Generated_Source\PSoC4/PWM_R.c **** *
 424:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 425:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the control register that determines what mode of operation the PWM
 426:.\Generated_Source\PSoC4/PWM_R.c **** *  output lines are driven in.  There is a setting for what to do on a
 427:.\Generated_Source\PSoC4/PWM_R.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 428:.\Generated_Source\PSoC4/PWM_R.c **** *  (UNDERFLOW).  The value for each of the 3 must be ORed together to form the
 429:.\Generated_Source\PSoC4/PWM_R.c **** *  mode.
 430:.\Generated_Source\PSoC4/PWM_R.c **** *
 431:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 432:.\Generated_Source\PSoC4/PWM_R.c **** *  modeMask: Combination of the 3 mode settings.  Mask must include a value for
 433:.\Generated_Source\PSoC4/PWM_R.c **** *  each of the 3 or use one of the preconfigured PWM settings.
 434:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 435:.\Generated_Source\PSoC4/PWM_R.c **** *     - CC_MATCH_SET        - Set on comparison match
 436:.\Generated_Source\PSoC4/PWM_R.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 437:.\Generated_Source\PSoC4/PWM_R.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 438:.\Generated_Source\PSoC4/PWM_R.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 439:.\Generated_Source\PSoC4/PWM_R.c **** *     - OVERLOW_SET         - Set on overflow
 440:.\Generated_Source\PSoC4/PWM_R.c **** *     - OVERLOW_CLEAR       - Clear on overflow
 441:.\Generated_Source\PSoC4/PWM_R.c **** *     - OVERLOW_INVERT      - Invert on overflow
 442:.\Generated_Source\PSoC4/PWM_R.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 443:.\Generated_Source\PSoC4/PWM_R.c **** *     - UNDERFLOW_SET       - Set on underflow
 444:.\Generated_Source\PSoC4/PWM_R.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 445:.\Generated_Source\PSoC4/PWM_R.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 446:.\Generated_Source\PSoC4/PWM_R.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 447:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 448:.\Generated_Source\PSoC4/PWM_R.c **** *                             with up counting mode
 449:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 450:.\Generated_Source\PSoC4/PWM_R.c **** *                             with down counting mode
 451:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be 
 452:.\Generated_Source\PSoC4/PWM_R.c **** *                             combined with up/down 0 mode
 453:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PWM_R.c **** *                             with up/down 1 mode
 455:.\Generated_Source\PSoC4/PWM_R.c **** *
 456:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 457:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 458:.\Generated_Source\PSoC4/PWM_R.c **** *
 459:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 460:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetPWMMode(uint32 modeMask)
 461:.\Generated_Source\PSoC4/PWM_R.c **** {
 503              		.loc 1 461 0
 504              		.cfi_startproc
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 18


 505 0000 80B5     		push	{r7, lr}
 506              	.LCFI22:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 7, -8
 509              		.cfi_offset 14, -4
 510 0002 82B0     		sub	sp, sp, #8
 511              	.LCFI23:
 512              		.cfi_def_cfa_offset 16
 513 0004 00AF     		add	r7, sp, #0
 514              	.LCFI24:
 515              		.cfi_def_cfa_register 7
 516 0006 7860     		str	r0, [r7, #4]
 462:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL2_REG = (modeMask & PWM_R_6BIT_MASK);
 517              		.loc 1 462 0
 518 0008 034B     		ldr	r3, .L36
 519 000a 7968     		ldr	r1, [r7, #4]
 520 000c 3F22     		mov	r2, #63
 521 000e 0A40     		and	r2, r2, r1
 522 0010 1A60     		str	r2, [r3]
 463:.\Generated_Source\PSoC4/PWM_R.c **** }
 523              		.loc 1 463 0
 524 0012 BD46     		mov	sp, r7
 525 0014 02B0     		add	sp, sp, #8
 526              		@ sp needed for prologue
 527 0016 80BD     		pop	{r7, pc}
 528              	.L37:
 529              		.align	2
 530              	.L36:
 531 0018 A8010540 		.word	1074069928
 532              		.cfi_endproc
 533              	.LFE8:
 534              		.size	PWM_R_SetPWMMode, .-PWM_R_SetPWMMode
 535              		.section	.text.PWM_R_SetPWMSyncKill,"ax",%progbits
 536              		.align	2
 537              		.global	PWM_R_SetPWMSyncKill
 538              		.code	16
 539              		.thumb_func
 540              		.type	PWM_R_SetPWMSyncKill, %function
 541              	PWM_R_SetPWMSyncKill:
 542              	.LFB9:
 464:.\Generated_Source\PSoC4/PWM_R.c **** 
 465:.\Generated_Source\PSoC4/PWM_R.c **** 
 466:.\Generated_Source\PSoC4/PWM_R.c **** 
 467:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 468:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetPWMSyncKill
 469:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 470:.\Generated_Source\PSoC4/PWM_R.c **** *
 471:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 472:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 473:.\Generated_Source\PSoC4/PWM_R.c **** *  causes an asynchronous or synchronous kill operation.  By default the kill
 474:.\Generated_Source\PSoC4/PWM_R.c **** *  operation is asynchronous.  This functionality is only applicable to PWM and
 475:.\Generated_Source\PSoC4/PWM_R.c **** *  PWM with dead time modes.
 476:.\Generated_Source\PSoC4/PWM_R.c **** *
 477:.\Generated_Source\PSoC4/PWM_R.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 478:.\Generated_Source\PSoC4/PWM_R.c **** *  signals until the next terminal count.
 479:.\Generated_Source\PSoC4/PWM_R.c **** *
 480:.\Generated_Source\PSoC4/PWM_R.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 19


 481:.\Generated_Source\PSoC4/PWM_R.c **** *  signals when the kill signal is present.  This mode should only be used
 482:.\Generated_Source\PSoC4/PWM_R.c **** *  when the kill signal (stop input) is configured in pass through mode
 483:.\Generated_Source\PSoC4/PWM_R.c **** *  (Level sensitive signal).
 484:.\Generated_Source\PSoC4/PWM_R.c **** 
 485:.\Generated_Source\PSoC4/PWM_R.c **** *
 486:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 487:.\Generated_Source\PSoC4/PWM_R.c **** *  syncKillEnable
 488:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 489:.\Generated_Source\PSoC4/PWM_R.c **** *     - 0 - Asynchronous
 490:.\Generated_Source\PSoC4/PWM_R.c **** *     - 1 - Synchronous
 491:.\Generated_Source\PSoC4/PWM_R.c **** *
 492:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 493:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 494:.\Generated_Source\PSoC4/PWM_R.c **** *
 495:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 496:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetPWMSyncKill(uint32 syncKillEnable)
 497:.\Generated_Source\PSoC4/PWM_R.c **** {
 543              		.loc 1 497 0
 544              		.cfi_startproc
 545 0000 80B5     		push	{r7, lr}
 546              	.LCFI25:
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 7, -8
 549              		.cfi_offset 14, -4
 550 0002 84B0     		sub	sp, sp, #16
 551              	.LCFI26:
 552              		.cfi_def_cfa_offset 24
 553 0004 00AF     		add	r7, sp, #0
 554              	.LCFI27:
 555              		.cfi_def_cfa_register 7
 556 0006 7860     		str	r0, [r7, #4]
 498:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 499:.\Generated_Source\PSoC4/PWM_R.c **** 
 500:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 557              		.loc 1 500 0
 558 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 559 000c 031C     		mov	r3, r0
 560 000e 1A1C     		mov	r2, r3
 561 0010 3B1C     		mov	r3, r7
 562 0012 0F33     		add	r3, r3, #15
 563 0014 1A70     		strb	r2, [r3]
 501:.\Generated_Source\PSoC4/PWM_R.c **** 
 502:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_PWM_SYNC_KILL_MASK;
 564              		.loc 1 502 0
 565 0016 0C4B     		ldr	r3, .L40
 566 0018 0B4A     		ldr	r2, .L40
 567 001a 1268     		ldr	r2, [r2]
 568 001c 0421     		mov	r1, #4
 569 001e 8A43     		bic	r2, r2, r1
 570 0020 1A60     		str	r2, [r3]
 503:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_R_1BIT_MASK)  <<
 571              		.loc 1 503 0
 572 0022 094B     		ldr	r3, .L40
 573 0024 084A     		ldr	r2, .L40
 574 0026 1168     		ldr	r1, [r2]
 575 0028 7868     		ldr	r0, [r7, #4]
 576 002a 0122     		mov	r2, #1
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 20


 577 002c 0240     		and	r2, r2, r0
 578 002e 9200     		lsl	r2, r2, #2
 579 0030 0A43     		orr	r2, r2, r1
 580 0032 1A60     		str	r2, [r3]
 504:.\Generated_Source\PSoC4/PWM_R.c ****                                                PWM_R_PWM_SYNC_KILL_SHIFT));
 505:.\Generated_Source\PSoC4/PWM_R.c **** 
 506:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 581              		.loc 1 506 0
 582 0034 3B1C     		mov	r3, r7
 583 0036 0F33     		add	r3, r3, #15
 584 0038 1B78     		ldrb	r3, [r3]
 585 003a 181C     		mov	r0, r3
 586 003c FFF7FEFF 		bl	CyExitCriticalSection
 507:.\Generated_Source\PSoC4/PWM_R.c **** }
 587              		.loc 1 507 0
 588 0040 BD46     		mov	sp, r7
 589 0042 04B0     		add	sp, sp, #16
 590              		@ sp needed for prologue
 591 0044 80BD     		pop	{r7, pc}
 592              	.L41:
 593 0046 C046     		.align	2
 594              	.L40:
 595 0048 80010540 		.word	1074069888
 596              		.cfi_endproc
 597              	.LFE9:
 598              		.size	PWM_R_SetPWMSyncKill, .-PWM_R_SetPWMSyncKill
 599              		.section	.text.PWM_R_SetPWMStopOnKill,"ax",%progbits
 600              		.align	2
 601              		.global	PWM_R_SetPWMStopOnKill
 602              		.code	16
 603              		.thumb_func
 604              		.type	PWM_R_SetPWMStopOnKill, %function
 605              	PWM_R_SetPWMStopOnKill:
 606              	.LFB10:
 508:.\Generated_Source\PSoC4/PWM_R.c **** 
 509:.\Generated_Source\PSoC4/PWM_R.c **** 
 510:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 511:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetPWMStopOnKill
 512:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 513:.\Generated_Source\PSoC4/PWM_R.c **** *
 514:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 515:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 516:.\Generated_Source\PSoC4/PWM_R.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 517:.\Generated_Source\PSoC4/PWM_R.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 518:.\Generated_Source\PSoC4/PWM_R.c **** *
 519:.\Generated_Source\PSoC4/PWM_R.c **** *
 520:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 521:.\Generated_Source\PSoC4/PWM_R.c **** *  stopOnKillEnable
 522:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 523:.\Generated_Source\PSoC4/PWM_R.c **** *     - 0 - Don't stop
 524:.\Generated_Source\PSoC4/PWM_R.c **** *     - 1 - Stop
 525:.\Generated_Source\PSoC4/PWM_R.c **** *
 526:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 527:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 528:.\Generated_Source\PSoC4/PWM_R.c **** *
 529:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 530:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetPWMStopOnKill(uint32 stopOnKillEnable)
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 21


 531:.\Generated_Source\PSoC4/PWM_R.c **** {
 607              		.loc 1 531 0
 608              		.cfi_startproc
 609 0000 80B5     		push	{r7, lr}
 610              	.LCFI28:
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 0002 84B0     		sub	sp, sp, #16
 615              	.LCFI29:
 616              		.cfi_def_cfa_offset 24
 617 0004 00AF     		add	r7, sp, #0
 618              	.LCFI30:
 619              		.cfi_def_cfa_register 7
 620 0006 7860     		str	r0, [r7, #4]
 532:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 533:.\Generated_Source\PSoC4/PWM_R.c **** 
 534:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 621              		.loc 1 534 0
 622 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 623 000c 031C     		mov	r3, r0
 624 000e 1A1C     		mov	r2, r3
 625 0010 3B1C     		mov	r3, r7
 626 0012 0F33     		add	r3, r3, #15
 627 0014 1A70     		strb	r2, [r3]
 535:.\Generated_Source\PSoC4/PWM_R.c **** 
 536:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_PWM_STOP_KILL_MASK;
 628              		.loc 1 536 0
 629 0016 0C4B     		ldr	r3, .L44
 630 0018 0B4A     		ldr	r2, .L44
 631 001a 1268     		ldr	r2, [r2]
 632 001c 0821     		mov	r1, #8
 633 001e 8A43     		bic	r2, r2, r1
 634 0020 1A60     		str	r2, [r3]
 537:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_R_1BIT_MASK)  <<
 635              		.loc 1 537 0
 636 0022 094B     		ldr	r3, .L44
 637 0024 084A     		ldr	r2, .L44
 638 0026 1168     		ldr	r1, [r2]
 639 0028 7868     		ldr	r0, [r7, #4]
 640 002a 0122     		mov	r2, #1
 641 002c 0240     		and	r2, r2, r0
 642 002e D200     		lsl	r2, r2, #3
 643 0030 0A43     		orr	r2, r2, r1
 644 0032 1A60     		str	r2, [r3]
 538:.\Generated_Source\PSoC4/PWM_R.c ****                                                          PWM_R_PWM_STOP_KILL_SHIFT));
 539:.\Generated_Source\PSoC4/PWM_R.c **** 
 540:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 645              		.loc 1 540 0
 646 0034 3B1C     		mov	r3, r7
 647 0036 0F33     		add	r3, r3, #15
 648 0038 1B78     		ldrb	r3, [r3]
 649 003a 181C     		mov	r0, r3
 650 003c FFF7FEFF 		bl	CyExitCriticalSection
 541:.\Generated_Source\PSoC4/PWM_R.c **** }
 651              		.loc 1 541 0
 652 0040 BD46     		mov	sp, r7
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 22


 653 0042 04B0     		add	sp, sp, #16
 654              		@ sp needed for prologue
 655 0044 80BD     		pop	{r7, pc}
 656              	.L45:
 657 0046 C046     		.align	2
 658              	.L44:
 659 0048 80010540 		.word	1074069888
 660              		.cfi_endproc
 661              	.LFE10:
 662              		.size	PWM_R_SetPWMStopOnKill, .-PWM_R_SetPWMStopOnKill
 663              		.section	.text.PWM_R_SetPWMDeadTime,"ax",%progbits
 664              		.align	2
 665              		.global	PWM_R_SetPWMDeadTime
 666              		.code	16
 667              		.thumb_func
 668              		.type	PWM_R_SetPWMDeadTime, %function
 669              	PWM_R_SetPWMDeadTime:
 670              	.LFB11:
 542:.\Generated_Source\PSoC4/PWM_R.c **** 
 543:.\Generated_Source\PSoC4/PWM_R.c **** 
 544:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 545:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetPWMDeadTime
 546:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 547:.\Generated_Source\PSoC4/PWM_R.c **** *
 548:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 549:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the dead time control value.  This value delays the rising edge of
 550:.\Generated_Source\PSoC4/PWM_R.c **** *  both the line and line_n signals the designated number of cycles resulting
 551:.\Generated_Source\PSoC4/PWM_R.c **** *  in both signals being inactive for that many cycles.  This functionality is
 552:.\Generated_Source\PSoC4/PWM_R.c **** *  only applicable to the PWM in dead time mode.
 553:.\Generated_Source\PSoC4/PWM_R.c **** 
 554:.\Generated_Source\PSoC4/PWM_R.c **** *
 555:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 556:.\Generated_Source\PSoC4/PWM_R.c **** *  Dead time to insert
 557:.\Generated_Source\PSoC4/PWM_R.c **** *   Values: 0 to 255
 558:.\Generated_Source\PSoC4/PWM_R.c **** *
 559:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 560:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 561:.\Generated_Source\PSoC4/PWM_R.c **** *
 562:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 563:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetPWMDeadTime(uint32 deadTime)
 564:.\Generated_Source\PSoC4/PWM_R.c **** {
 671              		.loc 1 564 0
 672              		.cfi_startproc
 673 0000 80B5     		push	{r7, lr}
 674              	.LCFI31:
 675              		.cfi_def_cfa_offset 8
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 678 0002 84B0     		sub	sp, sp, #16
 679              	.LCFI32:
 680              		.cfi_def_cfa_offset 24
 681 0004 00AF     		add	r7, sp, #0
 682              	.LCFI33:
 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 565:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 566:.\Generated_Source\PSoC4/PWM_R.c **** 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 23


 567:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 685              		.loc 1 567 0
 686 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 687 000c 031C     		mov	r3, r0
 688 000e 1A1C     		mov	r2, r3
 689 0010 3B1C     		mov	r3, r7
 690 0012 0F33     		add	r3, r3, #15
 691 0014 1A70     		strb	r2, [r3]
 568:.\Generated_Source\PSoC4/PWM_R.c **** 
 569:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_PRESCALER_MASK;
 692              		.loc 1 569 0
 693 0016 0C4B     		ldr	r3, .L48
 694 0018 0B4A     		ldr	r2, .L48
 695 001a 1168     		ldr	r1, [r2]
 696 001c 0B4A     		ldr	r2, .L48+4
 697 001e 0A40     		and	r2, r2, r1
 698 0020 1A60     		str	r2, [r3]
 570:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= ((uint32)((deadTime & PWM_R_8BIT_MASK) <<
 699              		.loc 1 570 0
 700 0022 094B     		ldr	r3, .L48
 701 0024 084A     		ldr	r2, .L48
 702 0026 1168     		ldr	r1, [r2]
 703 0028 7A68     		ldr	r2, [r7, #4]
 704 002a 1202     		lsl	r2, r2, #8
 705 002c 1204     		lsl	r2, r2, #16
 706 002e 120C     		lsr	r2, r2, #16
 707 0030 0A43     		orr	r2, r2, r1
 708 0032 1A60     		str	r2, [r3]
 571:.\Generated_Source\PSoC4/PWM_R.c ****                                                           PWM_R_PRESCALER_SHIFT));
 572:.\Generated_Source\PSoC4/PWM_R.c **** 
 573:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 709              		.loc 1 573 0
 710 0034 3B1C     		mov	r3, r7
 711 0036 0F33     		add	r3, r3, #15
 712 0038 1B78     		ldrb	r3, [r3]
 713 003a 181C     		mov	r0, r3
 714 003c FFF7FEFF 		bl	CyExitCriticalSection
 574:.\Generated_Source\PSoC4/PWM_R.c **** }
 715              		.loc 1 574 0
 716 0040 BD46     		mov	sp, r7
 717 0042 04B0     		add	sp, sp, #16
 718              		@ sp needed for prologue
 719 0044 80BD     		pop	{r7, pc}
 720              	.L49:
 721 0046 C046     		.align	2
 722              	.L48:
 723 0048 80010540 		.word	1074069888
 724 004c FF00FFFF 		.word	-65281
 725              		.cfi_endproc
 726              	.LFE11:
 727              		.size	PWM_R_SetPWMDeadTime, .-PWM_R_SetPWMDeadTime
 728              		.section	.text.PWM_R_SetPWMInvert,"ax",%progbits
 729              		.align	2
 730              		.global	PWM_R_SetPWMInvert
 731              		.code	16
 732              		.thumb_func
 733              		.type	PWM_R_SetPWMInvert, %function
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 24


 734              	PWM_R_SetPWMInvert:
 735              	.LFB12:
 575:.\Generated_Source\PSoC4/PWM_R.c **** 
 576:.\Generated_Source\PSoC4/PWM_R.c **** 
 577:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 578:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetPWMInvert
 579:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 580:.\Generated_Source\PSoC4/PWM_R.c **** *
 581:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 582:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the bits that control whether the line and line_n outputs are
 583:.\Generated_Source\PSoC4/PWM_R.c **** *  inverted from their normal output values.  This functionality is only
 584:.\Generated_Source\PSoC4/PWM_R.c **** *  applicable to the three PWM modes.
 585:.\Generated_Source\PSoC4/PWM_R.c **** *
 586:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 587:.\Generated_Source\PSoC4/PWM_R.c **** *  mask: Mask of outputs to invert.
 588:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 589:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_INVERT_LINE   - Inverts the line output
 590:.\Generated_Source\PSoC4/PWM_R.c **** *         - PWM_R_INVERT_LINE_N - Inverts the line_n output
 591:.\Generated_Source\PSoC4/PWM_R.c **** *
 592:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 593:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 594:.\Generated_Source\PSoC4/PWM_R.c **** *
 595:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetPWMInvert(uint32 mask)
 597:.\Generated_Source\PSoC4/PWM_R.c **** {
 736              		.loc 1 597 0
 737              		.cfi_startproc
 738 0000 80B5     		push	{r7, lr}
 739              	.LCFI34:
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 84B0     		sub	sp, sp, #16
 744              	.LCFI35:
 745              		.cfi_def_cfa_offset 24
 746 0004 00AF     		add	r7, sp, #0
 747              	.LCFI36:
 748              		.cfi_def_cfa_register 7
 749 0006 7860     		str	r0, [r7, #4]
 598:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 599:.\Generated_Source\PSoC4/PWM_R.c **** 
 600:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 750              		.loc 1 600 0
 751 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 752 000c 031C     		mov	r3, r0
 753 000e 1A1C     		mov	r2, r3
 754 0010 3B1C     		mov	r3, r7
 755 0012 0F33     		add	r3, r3, #15
 756 0014 1A70     		strb	r2, [r3]
 601:.\Generated_Source\PSoC4/PWM_R.c **** 
 602:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_INV_OUT_MASK;
 757              		.loc 1 602 0
 758 0016 0A4B     		ldr	r3, .L52
 759 0018 094A     		ldr	r2, .L52
 760 001a 1168     		ldr	r1, [r2]
 761 001c 094A     		ldr	r2, .L52+4
 762 001e 0A40     		and	r2, r2, r1
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 25


 763 0020 1A60     		str	r2, [r3]
 603:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= mask;
 764              		.loc 1 603 0
 765 0022 074B     		ldr	r3, .L52
 766 0024 064A     		ldr	r2, .L52
 767 0026 1168     		ldr	r1, [r2]
 768 0028 7A68     		ldr	r2, [r7, #4]
 769 002a 0A43     		orr	r2, r2, r1
 770 002c 1A60     		str	r2, [r3]
 604:.\Generated_Source\PSoC4/PWM_R.c **** 
 605:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 771              		.loc 1 605 0
 772 002e 3B1C     		mov	r3, r7
 773 0030 0F33     		add	r3, r3, #15
 774 0032 1B78     		ldrb	r3, [r3]
 775 0034 181C     		mov	r0, r3
 776 0036 FFF7FEFF 		bl	CyExitCriticalSection
 606:.\Generated_Source\PSoC4/PWM_R.c **** }
 777              		.loc 1 606 0
 778 003a BD46     		mov	sp, r7
 779 003c 04B0     		add	sp, sp, #16
 780              		@ sp needed for prologue
 781 003e 80BD     		pop	{r7, pc}
 782              	.L53:
 783              		.align	2
 784              	.L52:
 785 0040 80010540 		.word	1074069888
 786 0044 FFFFCFFF 		.word	-3145729
 787              		.cfi_endproc
 788              	.LFE12:
 789              		.size	PWM_R_SetPWMInvert, .-PWM_R_SetPWMInvert
 790              		.section	.text.PWM_R_WriteCounter,"ax",%progbits
 791              		.align	2
 792              		.global	PWM_R_WriteCounter
 793              		.code	16
 794              		.thumb_func
 795              		.type	PWM_R_WriteCounter, %function
 796              	PWM_R_WriteCounter:
 797              	.LFB13:
 607:.\Generated_Source\PSoC4/PWM_R.c **** 
 608:.\Generated_Source\PSoC4/PWM_R.c **** 
 609:.\Generated_Source\PSoC4/PWM_R.c **** 
 610:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 611:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_WriteCounter
 612:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 613:.\Generated_Source\PSoC4/PWM_R.c **** *
 614:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 615:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 616:.\Generated_Source\PSoC4/PWM_R.c **** *  setting the counter (not the period) to the value written. It is not
 617:.\Generated_Source\PSoC4/PWM_R.c **** *  advised to write to this field when the counter is running.
 618:.\Generated_Source\PSoC4/PWM_R.c **** *
 619:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 620:.\Generated_Source\PSoC4/PWM_R.c **** *  count: value to write
 621:.\Generated_Source\PSoC4/PWM_R.c **** *
 622:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 623:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 624:.\Generated_Source\PSoC4/PWM_R.c **** *
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 26


 625:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 626:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_WriteCounter(uint32 count)
 627:.\Generated_Source\PSoC4/PWM_R.c **** {
 798              		.loc 1 627 0
 799              		.cfi_startproc
 800 0000 80B5     		push	{r7, lr}
 801              	.LCFI37:
 802              		.cfi_def_cfa_offset 8
 803              		.cfi_offset 7, -8
 804              		.cfi_offset 14, -4
 805 0002 82B0     		sub	sp, sp, #8
 806              	.LCFI38:
 807              		.cfi_def_cfa_offset 16
 808 0004 00AF     		add	r7, sp, #0
 809              	.LCFI39:
 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
 628:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_COUNTER_REG = (count & PWM_R_16BIT_MASK);
 812              		.loc 1 628 0
 813 0008 034B     		ldr	r3, .L56
 814 000a 7A68     		ldr	r2, [r7, #4]
 815 000c 1204     		lsl	r2, r2, #16
 816 000e 120C     		lsr	r2, r2, #16
 817 0010 1A60     		str	r2, [r3]
 629:.\Generated_Source\PSoC4/PWM_R.c **** }
 818              		.loc 1 629 0
 819 0012 BD46     		mov	sp, r7
 820 0014 02B0     		add	sp, sp, #8
 821              		@ sp needed for prologue
 822 0016 80BD     		pop	{r7, pc}
 823              	.L57:
 824              		.align	2
 825              	.L56:
 826 0018 88010540 		.word	1074069896
 827              		.cfi_endproc
 828              	.LFE13:
 829              		.size	PWM_R_WriteCounter, .-PWM_R_WriteCounter
 830              		.section	.text.PWM_R_ReadCounter,"ax",%progbits
 831              		.align	2
 832              		.global	PWM_R_ReadCounter
 833              		.code	16
 834              		.thumb_func
 835              		.type	PWM_R_ReadCounter, %function
 836              	PWM_R_ReadCounter:
 837              	.LFB14:
 630:.\Generated_Source\PSoC4/PWM_R.c **** 
 631:.\Generated_Source\PSoC4/PWM_R.c **** 
 632:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 633:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_ReadCounter
 634:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 635:.\Generated_Source\PSoC4/PWM_R.c **** *
 636:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 637:.\Generated_Source\PSoC4/PWM_R.c **** *  Reads the current counter value.
 638:.\Generated_Source\PSoC4/PWM_R.c **** *
 639:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 640:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 641:.\Generated_Source\PSoC4/PWM_R.c **** *
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 27


 642:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 643:.\Generated_Source\PSoC4/PWM_R.c **** *  Current counter value
 644:.\Generated_Source\PSoC4/PWM_R.c **** *
 645:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 646:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_ReadCounter(void)
 647:.\Generated_Source\PSoC4/PWM_R.c **** {
 838              		.loc 1 647 0
 839              		.cfi_startproc
 840 0000 80B5     		push	{r7, lr}
 841              	.LCFI40:
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 00AF     		add	r7, sp, #0
 846              	.LCFI41:
 847              		.cfi_def_cfa_register 7
 648:.\Generated_Source\PSoC4/PWM_R.c ****     return (PWM_R_COUNTER_REG & PWM_R_16BIT_MASK);
 848              		.loc 1 648 0
 849 0004 034B     		ldr	r3, .L60
 850 0006 1B68     		ldr	r3, [r3]
 851 0008 1B04     		lsl	r3, r3, #16
 852 000a 1B0C     		lsr	r3, r3, #16
 649:.\Generated_Source\PSoC4/PWM_R.c **** }
 853              		.loc 1 649 0
 854 000c 181C     		mov	r0, r3
 855 000e BD46     		mov	sp, r7
 856              		@ sp needed for prologue
 857 0010 80BD     		pop	{r7, pc}
 858              	.L61:
 859 0012 C046     		.align	2
 860              	.L60:
 861 0014 88010540 		.word	1074069896
 862              		.cfi_endproc
 863              	.LFE14:
 864              		.size	PWM_R_ReadCounter, .-PWM_R_ReadCounter
 865              		.section	.text.PWM_R_SetCounterMode,"ax",%progbits
 866              		.align	2
 867              		.global	PWM_R_SetCounterMode
 868              		.code	16
 869              		.thumb_func
 870              		.type	PWM_R_SetCounterMode, %function
 871              	PWM_R_SetCounterMode:
 872              	.LFB15:
 650:.\Generated_Source\PSoC4/PWM_R.c **** 
 651:.\Generated_Source\PSoC4/PWM_R.c **** 
 652:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 653:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetCounterMode
 654:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 655:.\Generated_Source\PSoC4/PWM_R.c **** *
 656:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 657:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 658:.\Generated_Source\PSoC4/PWM_R.c **** *  and PWM with pseudo random output.
 659:.\Generated_Source\PSoC4/PWM_R.c **** *
 660:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 661:.\Generated_Source\PSoC4/PWM_R.c **** *  counterMode: Enumerated couner type values
 662:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 663:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_COUNT_UP       - Counts up
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 28


 664:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_COUNT_DOWN     - Counts down
 665:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_COUNT_UPDOWN0  - Counts up and down. Terminal count
 666:.\Generated_Source\PSoC4/PWM_R.c **** *                                         generated when counter reaches 0
 667:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_COUNT_UPDOWN1  - Counts up and down. Terminal count
 668:.\Generated_Source\PSoC4/PWM_R.c **** *                                         generated both when counter reaches 0
 669:.\Generated_Source\PSoC4/PWM_R.c **** *                                         and period
 670:.\Generated_Source\PSoC4/PWM_R.c **** *
 671:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 672:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 673:.\Generated_Source\PSoC4/PWM_R.c **** *
 674:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 675:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetCounterMode(uint32 counterMode)
 676:.\Generated_Source\PSoC4/PWM_R.c **** {
 873              		.loc 1 676 0
 874              		.cfi_startproc
 875 0000 80B5     		push	{r7, lr}
 876              	.LCFI42:
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 7, -8
 879              		.cfi_offset 14, -4
 880 0002 84B0     		sub	sp, sp, #16
 881              	.LCFI43:
 882              		.cfi_def_cfa_offset 24
 883 0004 00AF     		add	r7, sp, #0
 884              	.LCFI44:
 885              		.cfi_def_cfa_register 7
 886 0006 7860     		str	r0, [r7, #4]
 677:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 678:.\Generated_Source\PSoC4/PWM_R.c **** 
 679:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 887              		.loc 1 679 0
 888 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 889 000c 031C     		mov	r3, r0
 890 000e 1A1C     		mov	r2, r3
 891 0010 3B1C     		mov	r3, r7
 892 0012 0F33     		add	r3, r3, #15
 893 0014 1A70     		strb	r2, [r3]
 680:.\Generated_Source\PSoC4/PWM_R.c **** 
 681:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_UPDOWN_MASK;
 894              		.loc 1 681 0
 895 0016 0A4B     		ldr	r3, .L64
 896 0018 094A     		ldr	r2, .L64
 897 001a 1168     		ldr	r1, [r2]
 898 001c 094A     		ldr	r2, .L64+4
 899 001e 0A40     		and	r2, r2, r1
 900 0020 1A60     		str	r2, [r3]
 682:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= counterMode;
 901              		.loc 1 682 0
 902 0022 074B     		ldr	r3, .L64
 903 0024 064A     		ldr	r2, .L64
 904 0026 1168     		ldr	r1, [r2]
 905 0028 7A68     		ldr	r2, [r7, #4]
 906 002a 0A43     		orr	r2, r2, r1
 907 002c 1A60     		str	r2, [r3]
 683:.\Generated_Source\PSoC4/PWM_R.c **** 
 684:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 908              		.loc 1 684 0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 29


 909 002e 3B1C     		mov	r3, r7
 910 0030 0F33     		add	r3, r3, #15
 911 0032 1B78     		ldrb	r3, [r3]
 912 0034 181C     		mov	r0, r3
 913 0036 FFF7FEFF 		bl	CyExitCriticalSection
 685:.\Generated_Source\PSoC4/PWM_R.c **** }
 914              		.loc 1 685 0
 915 003a BD46     		mov	sp, r7
 916 003c 04B0     		add	sp, sp, #16
 917              		@ sp needed for prologue
 918 003e 80BD     		pop	{r7, pc}
 919              	.L65:
 920              		.align	2
 921              	.L64:
 922 0040 80010540 		.word	1074069888
 923 0044 FFFFFCFF 		.word	-196609
 924              		.cfi_endproc
 925              	.LFE15:
 926              		.size	PWM_R_SetCounterMode, .-PWM_R_SetCounterMode
 927              		.section	.text.PWM_R_WritePeriod,"ax",%progbits
 928              		.align	2
 929              		.global	PWM_R_WritePeriod
 930              		.code	16
 931              		.thumb_func
 932              		.type	PWM_R_WritePeriod, %function
 933              	PWM_R_WritePeriod:
 934              	.LFB16:
 686:.\Generated_Source\PSoC4/PWM_R.c **** 
 687:.\Generated_Source\PSoC4/PWM_R.c **** 
 688:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 689:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_WritePeriod
 690:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 691:.\Generated_Source\PSoC4/PWM_R.c **** *
 692:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 693:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the 16 bit period register with the new period value.
 694:.\Generated_Source\PSoC4/PWM_R.c **** *  To cause the counter to count for N cycles this register should be written
 695:.\Generated_Source\PSoC4/PWM_R.c **** *  with N-1 (counts from 0 to period inclusive).
 696:.\Generated_Source\PSoC4/PWM_R.c **** *
 697:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 698:.\Generated_Source\PSoC4/PWM_R.c **** *  period: Period value
 699:.\Generated_Source\PSoC4/PWM_R.c **** *
 700:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 701:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 702:.\Generated_Source\PSoC4/PWM_R.c **** *
 703:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 704:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_WritePeriod(uint32 period)
 705:.\Generated_Source\PSoC4/PWM_R.c **** {
 935              		.loc 1 705 0
 936              		.cfi_startproc
 937 0000 80B5     		push	{r7, lr}
 938              	.LCFI45:
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
 942 0002 82B0     		sub	sp, sp, #8
 943              	.LCFI46:
 944              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 30


 945 0004 00AF     		add	r7, sp, #0
 946              	.LCFI47:
 947              		.cfi_def_cfa_register 7
 948 0006 7860     		str	r0, [r7, #4]
 706:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_PERIOD_REG = (period & PWM_R_16BIT_MASK);
 949              		.loc 1 706 0
 950 0008 034B     		ldr	r3, .L68
 951 000a 7A68     		ldr	r2, [r7, #4]
 952 000c 1204     		lsl	r2, r2, #16
 953 000e 120C     		lsr	r2, r2, #16
 954 0010 1A60     		str	r2, [r3]
 707:.\Generated_Source\PSoC4/PWM_R.c **** }
 955              		.loc 1 707 0
 956 0012 BD46     		mov	sp, r7
 957 0014 02B0     		add	sp, sp, #8
 958              		@ sp needed for prologue
 959 0016 80BD     		pop	{r7, pc}
 960              	.L69:
 961              		.align	2
 962              	.L68:
 963 0018 94010540 		.word	1074069908
 964              		.cfi_endproc
 965              	.LFE16:
 966              		.size	PWM_R_WritePeriod, .-PWM_R_WritePeriod
 967              		.section	.text.PWM_R_ReadPeriod,"ax",%progbits
 968              		.align	2
 969              		.global	PWM_R_ReadPeriod
 970              		.code	16
 971              		.thumb_func
 972              		.type	PWM_R_ReadPeriod, %function
 973              	PWM_R_ReadPeriod:
 974              	.LFB17:
 708:.\Generated_Source\PSoC4/PWM_R.c **** 
 709:.\Generated_Source\PSoC4/PWM_R.c **** 
 710:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 711:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_ReadPeriod
 712:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 713:.\Generated_Source\PSoC4/PWM_R.c **** *
 714:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 715:.\Generated_Source\PSoC4/PWM_R.c **** *  Reads the 16 bit period register.
 716:.\Generated_Source\PSoC4/PWM_R.c **** *
 717:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 718:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 719:.\Generated_Source\PSoC4/PWM_R.c **** *
 720:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 721:.\Generated_Source\PSoC4/PWM_R.c **** *  Period value
 722:.\Generated_Source\PSoC4/PWM_R.c **** *
 723:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 724:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_ReadPeriod(void)
 725:.\Generated_Source\PSoC4/PWM_R.c **** {
 975              		.loc 1 725 0
 976              		.cfi_startproc
 977 0000 80B5     		push	{r7, lr}
 978              	.LCFI48:
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 7, -8
 981              		.cfi_offset 14, -4
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 31


 982 0002 00AF     		add	r7, sp, #0
 983              	.LCFI49:
 984              		.cfi_def_cfa_register 7
 726:.\Generated_Source\PSoC4/PWM_R.c ****     return (PWM_R_PERIOD_REG & PWM_R_16BIT_MASK);
 985              		.loc 1 726 0
 986 0004 034B     		ldr	r3, .L72
 987 0006 1B68     		ldr	r3, [r3]
 988 0008 1B04     		lsl	r3, r3, #16
 989 000a 1B0C     		lsr	r3, r3, #16
 727:.\Generated_Source\PSoC4/PWM_R.c **** }
 990              		.loc 1 727 0
 991 000c 181C     		mov	r0, r3
 992 000e BD46     		mov	sp, r7
 993              		@ sp needed for prologue
 994 0010 80BD     		pop	{r7, pc}
 995              	.L73:
 996 0012 C046     		.align	2
 997              	.L72:
 998 0014 94010540 		.word	1074069908
 999              		.cfi_endproc
 1000              	.LFE17:
 1001              		.size	PWM_R_ReadPeriod, .-PWM_R_ReadPeriod
 1002              		.section	.text.PWM_R_SetCompareSwap,"ax",%progbits
 1003              		.align	2
 1004              		.global	PWM_R_SetCompareSwap
 1005              		.code	16
 1006              		.thumb_func
 1007              		.type	PWM_R_SetCompareSwap, %function
 1008              	PWM_R_SetCompareSwap:
 1009              	.LFB18:
 728:.\Generated_Source\PSoC4/PWM_R.c **** 
 729:.\Generated_Source\PSoC4/PWM_R.c **** 
 730:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 731:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetCompareSwap
 732:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 733:.\Generated_Source\PSoC4/PWM_R.c **** *
 734:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 735:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the register that controls whether the compare registers are
 736:.\Generated_Source\PSoC4/PWM_R.c **** *  swapped. When enabled in Timer/Counter mode(without capture) the swap occurs
 737:.\Generated_Source\PSoC4/PWM_R.c **** *  at a TC event. In PWM mode the swap occurs at the next TC event following
 738:.\Generated_Source\PSoC4/PWM_R.c **** *  a hardware switch event.
 739:.\Generated_Source\PSoC4/PWM_R.c **** *
 740:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 741:.\Generated_Source\PSoC4/PWM_R.c **** *  swapEnable
 742:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 743:.\Generated_Source\PSoC4/PWM_R.c **** *     - 0 - Disable swap
 744:.\Generated_Source\PSoC4/PWM_R.c **** *     - 1 - Enable swap
 745:.\Generated_Source\PSoC4/PWM_R.c **** *
 746:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 747:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 748:.\Generated_Source\PSoC4/PWM_R.c **** *
 749:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 750:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetCompareSwap(uint32 swapEnable)
 751:.\Generated_Source\PSoC4/PWM_R.c **** {
 1010              		.loc 1 751 0
 1011              		.cfi_startproc
 1012 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 32


 1013              	.LCFI50:
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 7, -8
 1016              		.cfi_offset 14, -4
 1017 0002 84B0     		sub	sp, sp, #16
 1018              	.LCFI51:
 1019              		.cfi_def_cfa_offset 24
 1020 0004 00AF     		add	r7, sp, #0
 1021              	.LCFI52:
 1022              		.cfi_def_cfa_register 7
 1023 0006 7860     		str	r0, [r7, #4]
 752:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 753:.\Generated_Source\PSoC4/PWM_R.c **** 
 754:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 1024              		.loc 1 754 0
 1025 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1026 000c 031C     		mov	r3, r0
 1027 000e 1A1C     		mov	r2, r3
 1028 0010 3B1C     		mov	r3, r7
 1029 0012 0F33     		add	r3, r3, #15
 1030 0014 1A70     		strb	r2, [r3]
 755:.\Generated_Source\PSoC4/PWM_R.c **** 
 756:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_RELOAD_CC_MASK;
 1031              		.loc 1 756 0
 1032 0016 0B4B     		ldr	r3, .L76
 1033 0018 0A4A     		ldr	r2, .L76
 1034 001a 1268     		ldr	r2, [r2]
 1035 001c 0121     		mov	r1, #1
 1036 001e 8A43     		bic	r2, r2, r1
 1037 0020 1A60     		str	r2, [r3]
 757:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= (swapEnable & PWM_R_1BIT_MASK);
 1038              		.loc 1 757 0
 1039 0022 084B     		ldr	r3, .L76
 1040 0024 074A     		ldr	r2, .L76
 1041 0026 1168     		ldr	r1, [r2]
 1042 0028 7868     		ldr	r0, [r7, #4]
 1043 002a 0122     		mov	r2, #1
 1044 002c 0240     		and	r2, r2, r0
 1045 002e 0A43     		orr	r2, r2, r1
 1046 0030 1A60     		str	r2, [r3]
 758:.\Generated_Source\PSoC4/PWM_R.c **** 
 759:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 1047              		.loc 1 759 0
 1048 0032 3B1C     		mov	r3, r7
 1049 0034 0F33     		add	r3, r3, #15
 1050 0036 1B78     		ldrb	r3, [r3]
 1051 0038 181C     		mov	r0, r3
 1052 003a FFF7FEFF 		bl	CyExitCriticalSection
 760:.\Generated_Source\PSoC4/PWM_R.c **** }
 1053              		.loc 1 760 0
 1054 003e BD46     		mov	sp, r7
 1055 0040 04B0     		add	sp, sp, #16
 1056              		@ sp needed for prologue
 1057 0042 80BD     		pop	{r7, pc}
 1058              	.L77:
 1059              		.align	2
 1060              	.L76:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 33


 1061 0044 80010540 		.word	1074069888
 1062              		.cfi_endproc
 1063              	.LFE18:
 1064              		.size	PWM_R_SetCompareSwap, .-PWM_R_SetCompareSwap
 1065              		.section	.text.PWM_R_WritePeriodBuf,"ax",%progbits
 1066              		.align	2
 1067              		.global	PWM_R_WritePeriodBuf
 1068              		.code	16
 1069              		.thumb_func
 1070              		.type	PWM_R_WritePeriodBuf, %function
 1071              	PWM_R_WritePeriodBuf:
 1072              	.LFB19:
 761:.\Generated_Source\PSoC4/PWM_R.c **** 
 762:.\Generated_Source\PSoC4/PWM_R.c **** 
 763:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 764:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_WritePeriodBuf
 765:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 766:.\Generated_Source\PSoC4/PWM_R.c **** *
 767:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 768:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the 16 bit period buf register with the new period value.
 769:.\Generated_Source\PSoC4/PWM_R.c **** *
 770:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 771:.\Generated_Source\PSoC4/PWM_R.c **** *  periodBuf: Period value
 772:.\Generated_Source\PSoC4/PWM_R.c **** *
 773:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 774:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 775:.\Generated_Source\PSoC4/PWM_R.c **** *
 776:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 777:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_WritePeriodBuf(uint32 periodBuf)
 778:.\Generated_Source\PSoC4/PWM_R.c **** {
 1073              		.loc 1 778 0
 1074              		.cfi_startproc
 1075 0000 80B5     		push	{r7, lr}
 1076              	.LCFI53:
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 7, -8
 1079              		.cfi_offset 14, -4
 1080 0002 82B0     		sub	sp, sp, #8
 1081              	.LCFI54:
 1082              		.cfi_def_cfa_offset 16
 1083 0004 00AF     		add	r7, sp, #0
 1084              	.LCFI55:
 1085              		.cfi_def_cfa_register 7
 1086 0006 7860     		str	r0, [r7, #4]
 779:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_PERIOD_BUF_REG = (periodBuf & PWM_R_16BIT_MASK);
 1087              		.loc 1 779 0
 1088 0008 034B     		ldr	r3, .L80
 1089 000a 7A68     		ldr	r2, [r7, #4]
 1090 000c 1204     		lsl	r2, r2, #16
 1091 000e 120C     		lsr	r2, r2, #16
 1092 0010 1A60     		str	r2, [r3]
 780:.\Generated_Source\PSoC4/PWM_R.c **** }
 1093              		.loc 1 780 0
 1094 0012 BD46     		mov	sp, r7
 1095 0014 02B0     		add	sp, sp, #8
 1096              		@ sp needed for prologue
 1097 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 34


 1098              	.L81:
 1099              		.align	2
 1100              	.L80:
 1101 0018 98010540 		.word	1074069912
 1102              		.cfi_endproc
 1103              	.LFE19:
 1104              		.size	PWM_R_WritePeriodBuf, .-PWM_R_WritePeriodBuf
 1105              		.section	.text.PWM_R_ReadPeriodBuf,"ax",%progbits
 1106              		.align	2
 1107              		.global	PWM_R_ReadPeriodBuf
 1108              		.code	16
 1109              		.thumb_func
 1110              		.type	PWM_R_ReadPeriodBuf, %function
 1111              	PWM_R_ReadPeriodBuf:
 1112              	.LFB20:
 781:.\Generated_Source\PSoC4/PWM_R.c **** 
 782:.\Generated_Source\PSoC4/PWM_R.c **** 
 783:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 784:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_ReadPeriodBuf
 785:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 786:.\Generated_Source\PSoC4/PWM_R.c **** *
 787:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 788:.\Generated_Source\PSoC4/PWM_R.c **** *  Reads the 16 bit period buf register.
 789:.\Generated_Source\PSoC4/PWM_R.c **** *
 790:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 791:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 792:.\Generated_Source\PSoC4/PWM_R.c **** *
 793:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 794:.\Generated_Source\PSoC4/PWM_R.c **** *  Period value
 795:.\Generated_Source\PSoC4/PWM_R.c **** *
 796:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 797:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_ReadPeriodBuf(void)
 798:.\Generated_Source\PSoC4/PWM_R.c **** {
 1113              		.loc 1 798 0
 1114              		.cfi_startproc
 1115 0000 80B5     		push	{r7, lr}
 1116              	.LCFI56:
 1117              		.cfi_def_cfa_offset 8
 1118              		.cfi_offset 7, -8
 1119              		.cfi_offset 14, -4
 1120 0002 00AF     		add	r7, sp, #0
 1121              	.LCFI57:
 1122              		.cfi_def_cfa_register 7
 799:.\Generated_Source\PSoC4/PWM_R.c ****     return (PWM_R_PERIOD_BUF_REG & PWM_R_16BIT_MASK);
 1123              		.loc 1 799 0
 1124 0004 034B     		ldr	r3, .L84
 1125 0006 1B68     		ldr	r3, [r3]
 1126 0008 1B04     		lsl	r3, r3, #16
 1127 000a 1B0C     		lsr	r3, r3, #16
 800:.\Generated_Source\PSoC4/PWM_R.c **** }
 1128              		.loc 1 800 0
 1129 000c 181C     		mov	r0, r3
 1130 000e BD46     		mov	sp, r7
 1131              		@ sp needed for prologue
 1132 0010 80BD     		pop	{r7, pc}
 1133              	.L85:
 1134 0012 C046     		.align	2
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 35


 1135              	.L84:
 1136 0014 98010540 		.word	1074069912
 1137              		.cfi_endproc
 1138              	.LFE20:
 1139              		.size	PWM_R_ReadPeriodBuf, .-PWM_R_ReadPeriodBuf
 1140              		.section	.text.PWM_R_SetPeriodSwap,"ax",%progbits
 1141              		.align	2
 1142              		.global	PWM_R_SetPeriodSwap
 1143              		.code	16
 1144              		.thumb_func
 1145              		.type	PWM_R_SetPeriodSwap, %function
 1146              	PWM_R_SetPeriodSwap:
 1147              	.LFB21:
 801:.\Generated_Source\PSoC4/PWM_R.c **** 
 802:.\Generated_Source\PSoC4/PWM_R.c **** 
 803:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 804:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetPeriodSwap
 805:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 806:.\Generated_Source\PSoC4/PWM_R.c **** *
 807:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 808:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the register that controls whether the period registers are
 809:.\Generated_Source\PSoC4/PWM_R.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 810:.\Generated_Source\PSoC4/PWM_R.c **** *  In PWM mode the swap occurs at the next TC event following a hardware switch
 811:.\Generated_Source\PSoC4/PWM_R.c **** *  event.
 812:.\Generated_Source\PSoC4/PWM_R.c **** *
 813:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 814:.\Generated_Source\PSoC4/PWM_R.c **** *  swapEnable
 815:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 816:.\Generated_Source\PSoC4/PWM_R.c **** *     - 0 - Disable swap
 817:.\Generated_Source\PSoC4/PWM_R.c **** *     - 1 - Enable swap
 818:.\Generated_Source\PSoC4/PWM_R.c **** *
 819:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 820:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 821:.\Generated_Source\PSoC4/PWM_R.c **** *
 822:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 823:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetPeriodSwap(uint32 swapEnable)
 824:.\Generated_Source\PSoC4/PWM_R.c **** {
 1148              		.loc 1 824 0
 1149              		.cfi_startproc
 1150 0000 80B5     		push	{r7, lr}
 1151              	.LCFI58:
 1152              		.cfi_def_cfa_offset 8
 1153              		.cfi_offset 7, -8
 1154              		.cfi_offset 14, -4
 1155 0002 84B0     		sub	sp, sp, #16
 1156              	.LCFI59:
 1157              		.cfi_def_cfa_offset 24
 1158 0004 00AF     		add	r7, sp, #0
 1159              	.LCFI60:
 1160              		.cfi_def_cfa_register 7
 1161 0006 7860     		str	r0, [r7, #4]
 825:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 826:.\Generated_Source\PSoC4/PWM_R.c **** 
 827:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 1162              		.loc 1 827 0
 1163 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1164 000c 031C     		mov	r3, r0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 36


 1165 000e 1A1C     		mov	r2, r3
 1166 0010 3B1C     		mov	r3, r7
 1167 0012 0F33     		add	r3, r3, #15
 1168 0014 1A70     		strb	r2, [r3]
 828:.\Generated_Source\PSoC4/PWM_R.c **** 
 829:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG &= (uint32)~PWM_R_RELOAD_PERIOD_MASK;
 1169              		.loc 1 829 0
 1170 0016 0C4B     		ldr	r3, .L88
 1171 0018 0B4A     		ldr	r2, .L88
 1172 001a 1268     		ldr	r2, [r2]
 1173 001c 0221     		mov	r1, #2
 1174 001e 8A43     		bic	r2, r2, r1
 1175 0020 1A60     		str	r2, [r3]
 830:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_CONTROL_REG |= ((uint32)((swapEnable & PWM_R_1BIT_MASK) <<
 1176              		.loc 1 830 0
 1177 0022 094B     		ldr	r3, .L88
 1178 0024 084A     		ldr	r2, .L88
 1179 0026 1168     		ldr	r1, [r2]
 1180 0028 7868     		ldr	r0, [r7, #4]
 1181 002a 0122     		mov	r2, #1
 1182 002c 0240     		and	r2, r2, r0
 1183 002e 5200     		lsl	r2, r2, #1
 1184 0030 0A43     		orr	r2, r2, r1
 1185 0032 1A60     		str	r2, [r3]
 831:.\Generated_Source\PSoC4/PWM_R.c ****                                                             PWM_R_RELOAD_PERIOD_SHIFT));
 832:.\Generated_Source\PSoC4/PWM_R.c **** 
 833:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 1186              		.loc 1 833 0
 1187 0034 3B1C     		mov	r3, r7
 1188 0036 0F33     		add	r3, r3, #15
 1189 0038 1B78     		ldrb	r3, [r3]
 1190 003a 181C     		mov	r0, r3
 1191 003c FFF7FEFF 		bl	CyExitCriticalSection
 834:.\Generated_Source\PSoC4/PWM_R.c **** }
 1192              		.loc 1 834 0
 1193 0040 BD46     		mov	sp, r7
 1194 0042 04B0     		add	sp, sp, #16
 1195              		@ sp needed for prologue
 1196 0044 80BD     		pop	{r7, pc}
 1197              	.L89:
 1198 0046 C046     		.align	2
 1199              	.L88:
 1200 0048 80010540 		.word	1074069888
 1201              		.cfi_endproc
 1202              	.LFE21:
 1203              		.size	PWM_R_SetPeriodSwap, .-PWM_R_SetPeriodSwap
 1204              		.section	.text.PWM_R_WriteCompare,"ax",%progbits
 1205              		.align	2
 1206              		.global	PWM_R_WriteCompare
 1207              		.code	16
 1208              		.thumb_func
 1209              		.type	PWM_R_WriteCompare, %function
 1210              	PWM_R_WriteCompare:
 1211              	.LFB22:
 835:.\Generated_Source\PSoC4/PWM_R.c **** 
 836:.\Generated_Source\PSoC4/PWM_R.c **** 
 837:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 37


 838:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_WriteCompare
 839:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 840:.\Generated_Source\PSoC4/PWM_R.c **** *
 841:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 842:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the 16 bit compare register with the new compare value. Not
 843:.\Generated_Source\PSoC4/PWM_R.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 844:.\Generated_Source\PSoC4/PWM_R.c **** *
 845:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 846:.\Generated_Source\PSoC4/PWM_R.c **** *  compare: Compare value
 847:.\Generated_Source\PSoC4/PWM_R.c **** *
 848:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 849:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 850:.\Generated_Source\PSoC4/PWM_R.c **** *
 851:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 852:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_WriteCompare(uint32 compare)
 853:.\Generated_Source\PSoC4/PWM_R.c **** {
 1212              		.loc 1 853 0
 1213              		.cfi_startproc
 1214 0000 80B5     		push	{r7, lr}
 1215              	.LCFI61:
 1216              		.cfi_def_cfa_offset 8
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 82B0     		sub	sp, sp, #8
 1220              	.LCFI62:
 1221              		.cfi_def_cfa_offset 16
 1222 0004 00AF     		add	r7, sp, #0
 1223              	.LCFI63:
 1224              		.cfi_def_cfa_register 7
 1225 0006 7860     		str	r0, [r7, #4]
 854:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_COMP_CAP_REG = (compare & PWM_R_16BIT_MASK);
 1226              		.loc 1 854 0
 1227 0008 034B     		ldr	r3, .L92
 1228 000a 7A68     		ldr	r2, [r7, #4]
 1229 000c 1204     		lsl	r2, r2, #16
 1230 000e 120C     		lsr	r2, r2, #16
 1231 0010 1A60     		str	r2, [r3]
 855:.\Generated_Source\PSoC4/PWM_R.c **** }
 1232              		.loc 1 855 0
 1233 0012 BD46     		mov	sp, r7
 1234 0014 02B0     		add	sp, sp, #8
 1235              		@ sp needed for prologue
 1236 0016 80BD     		pop	{r7, pc}
 1237              	.L93:
 1238              		.align	2
 1239              	.L92:
 1240 0018 8C010540 		.word	1074069900
 1241              		.cfi_endproc
 1242              	.LFE22:
 1243              		.size	PWM_R_WriteCompare, .-PWM_R_WriteCompare
 1244              		.section	.text.PWM_R_ReadCompare,"ax",%progbits
 1245              		.align	2
 1246              		.global	PWM_R_ReadCompare
 1247              		.code	16
 1248              		.thumb_func
 1249              		.type	PWM_R_ReadCompare, %function
 1250              	PWM_R_ReadCompare:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 38


 1251              	.LFB23:
 856:.\Generated_Source\PSoC4/PWM_R.c **** 
 857:.\Generated_Source\PSoC4/PWM_R.c **** 
 858:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 859:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_ReadCompare
 860:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 861:.\Generated_Source\PSoC4/PWM_R.c **** *
 862:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 863:.\Generated_Source\PSoC4/PWM_R.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 864:.\Generated_Source\PSoC4/PWM_R.c **** *  or in Quadrature Decoder modes.
 865:.\Generated_Source\PSoC4/PWM_R.c **** *
 866:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 867:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 868:.\Generated_Source\PSoC4/PWM_R.c **** *
 869:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 870:.\Generated_Source\PSoC4/PWM_R.c **** *  Compare value
 871:.\Generated_Source\PSoC4/PWM_R.c **** *
 872:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 873:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_ReadCompare(void)
 874:.\Generated_Source\PSoC4/PWM_R.c **** {
 1252              		.loc 1 874 0
 1253              		.cfi_startproc
 1254 0000 80B5     		push	{r7, lr}
 1255              	.LCFI64:
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 0002 00AF     		add	r7, sp, #0
 1260              	.LCFI65:
 1261              		.cfi_def_cfa_register 7
 875:.\Generated_Source\PSoC4/PWM_R.c ****     return (PWM_R_COMP_CAP_REG & PWM_R_16BIT_MASK);
 1262              		.loc 1 875 0
 1263 0004 034B     		ldr	r3, .L96
 1264 0006 1B68     		ldr	r3, [r3]
 1265 0008 1B04     		lsl	r3, r3, #16
 1266 000a 1B0C     		lsr	r3, r3, #16
 876:.\Generated_Source\PSoC4/PWM_R.c **** }
 1267              		.loc 1 876 0
 1268 000c 181C     		mov	r0, r3
 1269 000e BD46     		mov	sp, r7
 1270              		@ sp needed for prologue
 1271 0010 80BD     		pop	{r7, pc}
 1272              	.L97:
 1273 0012 C046     		.align	2
 1274              	.L96:
 1275 0014 8C010540 		.word	1074069900
 1276              		.cfi_endproc
 1277              	.LFE23:
 1278              		.size	PWM_R_ReadCompare, .-PWM_R_ReadCompare
 1279              		.section	.text.PWM_R_WriteCompareBuf,"ax",%progbits
 1280              		.align	2
 1281              		.global	PWM_R_WriteCompareBuf
 1282              		.code	16
 1283              		.thumb_func
 1284              		.type	PWM_R_WriteCompareBuf, %function
 1285              	PWM_R_WriteCompareBuf:
 1286              	.LFB24:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 39


 877:.\Generated_Source\PSoC4/PWM_R.c **** 
 878:.\Generated_Source\PSoC4/PWM_R.c **** 
 879:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 880:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_WriteCompareBuf
 881:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 882:.\Generated_Source\PSoC4/PWM_R.c **** *
 883:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 884:.\Generated_Source\PSoC4/PWM_R.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 885:.\Generated_Source\PSoC4/PWM_R.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 886:.\Generated_Source\PSoC4/PWM_R.c **** *
 887:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 888:.\Generated_Source\PSoC4/PWM_R.c **** *  compareBuf: Compare value
 889:.\Generated_Source\PSoC4/PWM_R.c **** *
 890:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 891:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 892:.\Generated_Source\PSoC4/PWM_R.c **** *
 893:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 894:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_WriteCompareBuf(uint32 compareBuf)
 895:.\Generated_Source\PSoC4/PWM_R.c **** {
 1287              		.loc 1 895 0
 1288              		.cfi_startproc
 1289 0000 80B5     		push	{r7, lr}
 1290              	.LCFI66:
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 7, -8
 1293              		.cfi_offset 14, -4
 1294 0002 82B0     		sub	sp, sp, #8
 1295              	.LCFI67:
 1296              		.cfi_def_cfa_offset 16
 1297 0004 00AF     		add	r7, sp, #0
 1298              	.LCFI68:
 1299              		.cfi_def_cfa_register 7
 1300 0006 7860     		str	r0, [r7, #4]
 896:.\Generated_Source\PSoC4/PWM_R.c ****    PWM_R_COMP_CAP_BUF_REG = (compareBuf & PWM_R_16BIT_MASK);
 1301              		.loc 1 896 0
 1302 0008 034B     		ldr	r3, .L100
 1303 000a 7A68     		ldr	r2, [r7, #4]
 1304 000c 1204     		lsl	r2, r2, #16
 1305 000e 120C     		lsr	r2, r2, #16
 1306 0010 1A60     		str	r2, [r3]
 897:.\Generated_Source\PSoC4/PWM_R.c **** }
 1307              		.loc 1 897 0
 1308 0012 BD46     		mov	sp, r7
 1309 0014 02B0     		add	sp, sp, #8
 1310              		@ sp needed for prologue
 1311 0016 80BD     		pop	{r7, pc}
 1312              	.L101:
 1313              		.align	2
 1314              	.L100:
 1315 0018 90010540 		.word	1074069904
 1316              		.cfi_endproc
 1317              	.LFE24:
 1318              		.size	PWM_R_WriteCompareBuf, .-PWM_R_WriteCompareBuf
 1319              		.section	.text.PWM_R_ReadCompareBuf,"ax",%progbits
 1320              		.align	2
 1321              		.global	PWM_R_ReadCompareBuf
 1322              		.code	16
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 40


 1323              		.thumb_func
 1324              		.type	PWM_R_ReadCompareBuf, %function
 1325              	PWM_R_ReadCompareBuf:
 1326              	.LFB25:
 898:.\Generated_Source\PSoC4/PWM_R.c **** 
 899:.\Generated_Source\PSoC4/PWM_R.c **** 
 900:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 901:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_ReadCompareBuf
 902:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 903:.\Generated_Source\PSoC4/PWM_R.c **** *
 904:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 905:.\Generated_Source\PSoC4/PWM_R.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 906:.\Generated_Source\PSoC4/PWM_R.c **** *  Capture or in Quadrature Decoder modes.
 907:.\Generated_Source\PSoC4/PWM_R.c **** *
 908:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 909:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 910:.\Generated_Source\PSoC4/PWM_R.c **** *
 911:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 912:.\Generated_Source\PSoC4/PWM_R.c **** *  Compare buffer value
 913:.\Generated_Source\PSoC4/PWM_R.c **** *
 914:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 915:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_ReadCompareBuf(void)
 916:.\Generated_Source\PSoC4/PWM_R.c **** {
 1327              		.loc 1 916 0
 1328              		.cfi_startproc
 1329 0000 80B5     		push	{r7, lr}
 1330              	.LCFI69:
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 7, -8
 1333              		.cfi_offset 14, -4
 1334 0002 00AF     		add	r7, sp, #0
 1335              	.LCFI70:
 1336              		.cfi_def_cfa_register 7
 917:.\Generated_Source\PSoC4/PWM_R.c ****     return (PWM_R_COMP_CAP_BUF_REG & PWM_R_16BIT_MASK);
 1337              		.loc 1 917 0
 1338 0004 034B     		ldr	r3, .L104
 1339 0006 1B68     		ldr	r3, [r3]
 1340 0008 1B04     		lsl	r3, r3, #16
 1341 000a 1B0C     		lsr	r3, r3, #16
 918:.\Generated_Source\PSoC4/PWM_R.c **** }
 1342              		.loc 1 918 0
 1343 000c 181C     		mov	r0, r3
 1344 000e BD46     		mov	sp, r7
 1345              		@ sp needed for prologue
 1346 0010 80BD     		pop	{r7, pc}
 1347              	.L105:
 1348 0012 C046     		.align	2
 1349              	.L104:
 1350 0014 90010540 		.word	1074069904
 1351              		.cfi_endproc
 1352              	.LFE25:
 1353              		.size	PWM_R_ReadCompareBuf, .-PWM_R_ReadCompareBuf
 1354              		.section	.text.PWM_R_ReadCapture,"ax",%progbits
 1355              		.align	2
 1356              		.global	PWM_R_ReadCapture
 1357              		.code	16
 1358              		.thumb_func
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 41


 1359              		.type	PWM_R_ReadCapture, %function
 1360              	PWM_R_ReadCapture:
 1361              	.LFB26:
 919:.\Generated_Source\PSoC4/PWM_R.c **** 
 920:.\Generated_Source\PSoC4/PWM_R.c **** 
 921:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 922:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_ReadCapture
 923:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 924:.\Generated_Source\PSoC4/PWM_R.c **** *
 925:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 926:.\Generated_Source\PSoC4/PWM_R.c **** *  Reads the captured counter value. This API is applicable only for
 927:.\Generated_Source\PSoC4/PWM_R.c **** *  Timer/Counter with capture mode and Quadrature Decoder modes.
 928:.\Generated_Source\PSoC4/PWM_R.c **** *
 929:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 930:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 931:.\Generated_Source\PSoC4/PWM_R.c **** *
 932:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 933:.\Generated_Source\PSoC4/PWM_R.c **** *  Capture value
 934:.\Generated_Source\PSoC4/PWM_R.c **** *
 935:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 936:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_ReadCapture(void)
 937:.\Generated_Source\PSoC4/PWM_R.c **** {
 1362              		.loc 1 937 0
 1363              		.cfi_startproc
 1364 0000 80B5     		push	{r7, lr}
 1365              	.LCFI71:
 1366              		.cfi_def_cfa_offset 8
 1367              		.cfi_offset 7, -8
 1368              		.cfi_offset 14, -4
 1369 0002 00AF     		add	r7, sp, #0
 1370              	.LCFI72:
 1371              		.cfi_def_cfa_register 7
 938:.\Generated_Source\PSoC4/PWM_R.c ****     return (PWM_R_COMP_CAP_REG & PWM_R_16BIT_MASK);
 1372              		.loc 1 938 0
 1373 0004 034B     		ldr	r3, .L108
 1374 0006 1B68     		ldr	r3, [r3]
 1375 0008 1B04     		lsl	r3, r3, #16
 1376 000a 1B0C     		lsr	r3, r3, #16
 939:.\Generated_Source\PSoC4/PWM_R.c **** }
 1377              		.loc 1 939 0
 1378 000c 181C     		mov	r0, r3
 1379 000e BD46     		mov	sp, r7
 1380              		@ sp needed for prologue
 1381 0010 80BD     		pop	{r7, pc}
 1382              	.L109:
 1383 0012 C046     		.align	2
 1384              	.L108:
 1385 0014 8C010540 		.word	1074069900
 1386              		.cfi_endproc
 1387              	.LFE26:
 1388              		.size	PWM_R_ReadCapture, .-PWM_R_ReadCapture
 1389              		.section	.text.PWM_R_ReadCaptureBuf,"ax",%progbits
 1390              		.align	2
 1391              		.global	PWM_R_ReadCaptureBuf
 1392              		.code	16
 1393              		.thumb_func
 1394              		.type	PWM_R_ReadCaptureBuf, %function
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 42


 1395              	PWM_R_ReadCaptureBuf:
 1396              	.LFB27:
 940:.\Generated_Source\PSoC4/PWM_R.c **** 
 941:.\Generated_Source\PSoC4/PWM_R.c **** 
 942:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 943:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_ReadCaptureBuf
 944:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 945:.\Generated_Source\PSoC4/PWM_R.c **** *
 946:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 947:.\Generated_Source\PSoC4/PWM_R.c **** *  Reads the capture buffer register. This API is applicable only for
 948:.\Generated_Source\PSoC4/PWM_R.c **** *  Timer/Counter with capture mode and Quadrature Decoder modes.
 949:.\Generated_Source\PSoC4/PWM_R.c **** *
 950:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 951:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 952:.\Generated_Source\PSoC4/PWM_R.c **** *
 953:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 954:.\Generated_Source\PSoC4/PWM_R.c **** *  Capture buffer value
 955:.\Generated_Source\PSoC4/PWM_R.c **** *
 956:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 957:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_ReadCaptureBuf(void)
 958:.\Generated_Source\PSoC4/PWM_R.c **** {
 1397              		.loc 1 958 0
 1398              		.cfi_startproc
 1399 0000 80B5     		push	{r7, lr}
 1400              	.LCFI73:
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 7, -8
 1403              		.cfi_offset 14, -4
 1404 0002 00AF     		add	r7, sp, #0
 1405              	.LCFI74:
 1406              		.cfi_def_cfa_register 7
 959:.\Generated_Source\PSoC4/PWM_R.c ****     return (PWM_R_COMP_CAP_BUF_REG & PWM_R_16BIT_MASK);
 1407              		.loc 1 959 0
 1408 0004 034B     		ldr	r3, .L112
 1409 0006 1B68     		ldr	r3, [r3]
 1410 0008 1B04     		lsl	r3, r3, #16
 1411 000a 1B0C     		lsr	r3, r3, #16
 960:.\Generated_Source\PSoC4/PWM_R.c **** }
 1412              		.loc 1 960 0
 1413 000c 181C     		mov	r0, r3
 1414 000e BD46     		mov	sp, r7
 1415              		@ sp needed for prologue
 1416 0010 80BD     		pop	{r7, pc}
 1417              	.L113:
 1418 0012 C046     		.align	2
 1419              	.L112:
 1420 0014 90010540 		.word	1074069904
 1421              		.cfi_endproc
 1422              	.LFE27:
 1423              		.size	PWM_R_ReadCaptureBuf, .-PWM_R_ReadCaptureBuf
 1424              		.section	.text.PWM_R_SetCaptureMode,"ax",%progbits
 1425              		.align	2
 1426              		.global	PWM_R_SetCaptureMode
 1427              		.code	16
 1428              		.thumb_func
 1429              		.type	PWM_R_SetCaptureMode, %function
 1430              	PWM_R_SetCaptureMode:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 43


 1431              	.LFB28:
 961:.\Generated_Source\PSoC4/PWM_R.c **** 
 962:.\Generated_Source\PSoC4/PWM_R.c **** 
 963:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 964:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetCaptureMode
 965:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
 966:.\Generated_Source\PSoC4/PWM_R.c **** *
 967:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
 968:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
 969:.\Generated_Source\PSoC4/PWM_R.c **** *  This input is not applicable to the Timer/Counter without Capture and
 970:.\Generated_Source\PSoC4/PWM_R.c **** *  Quadrature Decoder modes.
 971:.\Generated_Source\PSoC4/PWM_R.c **** *
 972:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
 973:.\Generated_Source\PSoC4/PWM_R.c **** *  triggerMode: Enumerated trigger mode value
 974:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
 975:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_LEVEL     - Level
 976:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_RISING    - Rising edge
 977:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_FALLING   - Falling edge
 978:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_BOTH      - Both rising and falling edge
 979:.\Generated_Source\PSoC4/PWM_R.c **** *
 980:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
 981:.\Generated_Source\PSoC4/PWM_R.c **** *  None
 982:.\Generated_Source\PSoC4/PWM_R.c **** *
 983:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
 984:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetCaptureMode(uint32 triggerMode)
 985:.\Generated_Source\PSoC4/PWM_R.c **** {
 1432              		.loc 1 985 0
 1433              		.cfi_startproc
 1434 0000 80B5     		push	{r7, lr}
 1435              	.LCFI75:
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 7, -8
 1438              		.cfi_offset 14, -4
 1439 0002 84B0     		sub	sp, sp, #16
 1440              	.LCFI76:
 1441              		.cfi_def_cfa_offset 24
 1442 0004 00AF     		add	r7, sp, #0
 1443              	.LCFI77:
 1444              		.cfi_def_cfa_register 7
 1445 0006 7860     		str	r0, [r7, #4]
 986:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
 987:.\Generated_Source\PSoC4/PWM_R.c **** 
 988:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 1446              		.loc 1 988 0
 1447 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1448 000c 031C     		mov	r3, r0
 1449 000e 1A1C     		mov	r2, r3
 1450 0010 3B1C     		mov	r3, r7
 1451 0012 0F33     		add	r3, r3, #15
 1452 0014 1A70     		strb	r2, [r3]
 989:.\Generated_Source\PSoC4/PWM_R.c **** 
 990:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG &= (uint32)~PWM_R_CAPTURE_MASK;
 1453              		.loc 1 990 0
 1454 0016 0A4B     		ldr	r3, .L116
 1455 0018 094A     		ldr	r2, .L116
 1456 001a 1268     		ldr	r2, [r2]
 1457 001c 0321     		mov	r1, #3
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 44


 1458 001e 8A43     		bic	r2, r2, r1
 1459 0020 1A60     		str	r2, [r3]
 991:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG |= triggerMode;
 1460              		.loc 1 991 0
 1461 0022 074B     		ldr	r3, .L116
 1462 0024 064A     		ldr	r2, .L116
 1463 0026 1168     		ldr	r1, [r2]
 1464 0028 7A68     		ldr	r2, [r7, #4]
 1465 002a 0A43     		orr	r2, r2, r1
 1466 002c 1A60     		str	r2, [r3]
 992:.\Generated_Source\PSoC4/PWM_R.c **** 
 993:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 1467              		.loc 1 993 0
 1468 002e 3B1C     		mov	r3, r7
 1469 0030 0F33     		add	r3, r3, #15
 1470 0032 1B78     		ldrb	r3, [r3]
 1471 0034 181C     		mov	r0, r3
 1472 0036 FFF7FEFF 		bl	CyExitCriticalSection
 994:.\Generated_Source\PSoC4/PWM_R.c **** }
 1473              		.loc 1 994 0
 1474 003a BD46     		mov	sp, r7
 1475 003c 04B0     		add	sp, sp, #16
 1476              		@ sp needed for prologue
 1477 003e 80BD     		pop	{r7, pc}
 1478              	.L117:
 1479              		.align	2
 1480              	.L116:
 1481 0040 A4010540 		.word	1074069924
 1482              		.cfi_endproc
 1483              	.LFE28:
 1484              		.size	PWM_R_SetCaptureMode, .-PWM_R_SetCaptureMode
 1485              		.section	.text.PWM_R_SetReloadMode,"ax",%progbits
 1486              		.align	2
 1487              		.global	PWM_R_SetReloadMode
 1488              		.code	16
 1489              		.thumb_func
 1490              		.type	PWM_R_SetReloadMode, %function
 1491              	PWM_R_SetReloadMode:
 1492              	.LFB29:
 995:.\Generated_Source\PSoC4/PWM_R.c **** 
 996:.\Generated_Source\PSoC4/PWM_R.c **** 
 997:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
 998:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetReloadMode
 999:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1000:.\Generated_Source\PSoC4/PWM_R.c **** *
1001:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1002:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1003:.\Generated_Source\PSoC4/PWM_R.c **** *  input.
1004:.\Generated_Source\PSoC4/PWM_R.c **** *
1005:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1006:.\Generated_Source\PSoC4/PWM_R.c **** *  triggerMode: Enumerated trigger mode value
1007:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1008:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_LEVEL     - Level
1009:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_RISING    - Rising edge
1010:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_FALLING   - Falling edge
1011:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_BOTH      - Both rising and falling edge
1012:.\Generated_Source\PSoC4/PWM_R.c **** *
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 45


1013:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1014:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1015:.\Generated_Source\PSoC4/PWM_R.c **** *
1016:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1017:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetReloadMode(uint32 triggerMode)
1018:.\Generated_Source\PSoC4/PWM_R.c **** {
 1493              		.loc 1 1018 0
 1494              		.cfi_startproc
 1495 0000 80B5     		push	{r7, lr}
 1496              	.LCFI78:
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 84B0     		sub	sp, sp, #16
 1501              	.LCFI79:
 1502              		.cfi_def_cfa_offset 24
 1503 0004 00AF     		add	r7, sp, #0
 1504              	.LCFI80:
 1505              		.cfi_def_cfa_register 7
 1506 0006 7860     		str	r0, [r7, #4]
1019:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
1020:.\Generated_Source\PSoC4/PWM_R.c **** 
1021:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 1507              		.loc 1 1021 0
 1508 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1509 000c 031C     		mov	r3, r0
 1510 000e 1A1C     		mov	r2, r3
 1511 0010 3B1C     		mov	r3, r7
 1512 0012 0F33     		add	r3, r3, #15
 1513 0014 1A70     		strb	r2, [r3]
1022:.\Generated_Source\PSoC4/PWM_R.c **** 
1023:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG &= (uint32)~PWM_R_RELOAD_MASK;
 1514              		.loc 1 1023 0
 1515 0016 0B4B     		ldr	r3, .L120
 1516 0018 0A4A     		ldr	r2, .L120
 1517 001a 1268     		ldr	r2, [r2]
 1518 001c 3021     		mov	r1, #48
 1519 001e 8A43     		bic	r2, r2, r1
 1520 0020 1A60     		str	r2, [r3]
1024:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_R_RELOAD_SHIFT));
 1521              		.loc 1 1024 0
 1522 0022 084B     		ldr	r3, .L120
 1523 0024 074A     		ldr	r2, .L120
 1524 0026 1168     		ldr	r1, [r2]
 1525 0028 7A68     		ldr	r2, [r7, #4]
 1526 002a 1201     		lsl	r2, r2, #4
 1527 002c 0A43     		orr	r2, r2, r1
 1528 002e 1A60     		str	r2, [r3]
1025:.\Generated_Source\PSoC4/PWM_R.c **** 
1026:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 1529              		.loc 1 1026 0
 1530 0030 3B1C     		mov	r3, r7
 1531 0032 0F33     		add	r3, r3, #15
 1532 0034 1B78     		ldrb	r3, [r3]
 1533 0036 181C     		mov	r0, r3
 1534 0038 FFF7FEFF 		bl	CyExitCriticalSection
1027:.\Generated_Source\PSoC4/PWM_R.c **** }
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 46


 1535              		.loc 1 1027 0
 1536 003c BD46     		mov	sp, r7
 1537 003e 04B0     		add	sp, sp, #16
 1538              		@ sp needed for prologue
 1539 0040 80BD     		pop	{r7, pc}
 1540              	.L121:
 1541 0042 C046     		.align	2
 1542              	.L120:
 1543 0044 A4010540 		.word	1074069924
 1544              		.cfi_endproc
 1545              	.LFE29:
 1546              		.size	PWM_R_SetReloadMode, .-PWM_R_SetReloadMode
 1547              		.section	.text.PWM_R_SetStartMode,"ax",%progbits
 1548              		.align	2
 1549              		.global	PWM_R_SetStartMode
 1550              		.code	16
 1551              		.thumb_func
 1552              		.type	PWM_R_SetStartMode, %function
 1553              	PWM_R_SetStartMode:
 1554              	.LFB30:
1028:.\Generated_Source\PSoC4/PWM_R.c **** 
1029:.\Generated_Source\PSoC4/PWM_R.c **** 
1030:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1031:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetStartMode
1032:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1033:.\Generated_Source\PSoC4/PWM_R.c **** *
1034:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1035:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1036:.\Generated_Source\PSoC4/PWM_R.c **** *  phiB input.
1037:.\Generated_Source\PSoC4/PWM_R.c **** *
1038:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1039:.\Generated_Source\PSoC4/PWM_R.c **** *  triggerMode: Enumerated trigger mode value
1040:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1041:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_LEVEL     - Level
1042:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_RISING    - Rising edge
1043:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_FALLING   - Falling edge
1044:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_BOTH      - Both rising and falling edge
1045:.\Generated_Source\PSoC4/PWM_R.c **** *
1046:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1047:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1048:.\Generated_Source\PSoC4/PWM_R.c **** *
1049:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1050:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetStartMode(uint32 triggerMode)
1051:.\Generated_Source\PSoC4/PWM_R.c **** {
 1555              		.loc 1 1051 0
 1556              		.cfi_startproc
 1557 0000 80B5     		push	{r7, lr}
 1558              	.LCFI81:
 1559              		.cfi_def_cfa_offset 8
 1560              		.cfi_offset 7, -8
 1561              		.cfi_offset 14, -4
 1562 0002 84B0     		sub	sp, sp, #16
 1563              	.LCFI82:
 1564              		.cfi_def_cfa_offset 24
 1565 0004 00AF     		add	r7, sp, #0
 1566              	.LCFI83:
 1567              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 47


 1568 0006 7860     		str	r0, [r7, #4]
1052:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
1053:.\Generated_Source\PSoC4/PWM_R.c **** 
1054:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 1569              		.loc 1 1054 0
 1570 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1571 000c 031C     		mov	r3, r0
 1572 000e 1A1C     		mov	r2, r3
 1573 0010 3B1C     		mov	r3, r7
 1574 0012 0F33     		add	r3, r3, #15
 1575 0014 1A70     		strb	r2, [r3]
1055:.\Generated_Source\PSoC4/PWM_R.c **** 
1056:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG &= (uint32)~PWM_R_START_MASK;
 1576              		.loc 1 1056 0
 1577 0016 0B4B     		ldr	r3, .L124
 1578 0018 0A4A     		ldr	r2, .L124
 1579 001a 1168     		ldr	r1, [r2]
 1580 001c 0A4A     		ldr	r2, .L124+4
 1581 001e 0A40     		and	r2, r2, r1
 1582 0020 1A60     		str	r2, [r3]
1057:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_R_START_SHIFT));
 1583              		.loc 1 1057 0
 1584 0022 084B     		ldr	r3, .L124
 1585 0024 074A     		ldr	r2, .L124
 1586 0026 1168     		ldr	r1, [r2]
 1587 0028 7A68     		ldr	r2, [r7, #4]
 1588 002a 1202     		lsl	r2, r2, #8
 1589 002c 0A43     		orr	r2, r2, r1
 1590 002e 1A60     		str	r2, [r3]
1058:.\Generated_Source\PSoC4/PWM_R.c **** 
1059:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 1591              		.loc 1 1059 0
 1592 0030 3B1C     		mov	r3, r7
 1593 0032 0F33     		add	r3, r3, #15
 1594 0034 1B78     		ldrb	r3, [r3]
 1595 0036 181C     		mov	r0, r3
 1596 0038 FFF7FEFF 		bl	CyExitCriticalSection
1060:.\Generated_Source\PSoC4/PWM_R.c **** }
 1597              		.loc 1 1060 0
 1598 003c BD46     		mov	sp, r7
 1599 003e 04B0     		add	sp, sp, #16
 1600              		@ sp needed for prologue
 1601 0040 80BD     		pop	{r7, pc}
 1602              	.L125:
 1603 0042 C046     		.align	2
 1604              	.L124:
 1605 0044 A4010540 		.word	1074069924
 1606 0048 FFFCFFFF 		.word	-769
 1607              		.cfi_endproc
 1608              	.LFE30:
 1609              		.size	PWM_R_SetStartMode, .-PWM_R_SetStartMode
 1610              		.section	.text.PWM_R_SetStopMode,"ax",%progbits
 1611              		.align	2
 1612              		.global	PWM_R_SetStopMode
 1613              		.code	16
 1614              		.thumb_func
 1615              		.type	PWM_R_SetStopMode, %function
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 48


 1616              	PWM_R_SetStopMode:
 1617              	.LFB31:
1061:.\Generated_Source\PSoC4/PWM_R.c **** 
1062:.\Generated_Source\PSoC4/PWM_R.c **** 
1063:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1064:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetStopMode
1065:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1066:.\Generated_Source\PSoC4/PWM_R.c **** *
1067:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1068:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1069:.\Generated_Source\PSoC4/PWM_R.c **** *
1070:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1071:.\Generated_Source\PSoC4/PWM_R.c **** *  triggerMode: Enumerated trigger mode value
1072:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1073:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_LEVEL     - Level
1074:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_RISING    - Rising edge
1075:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_FALLING   - Falling edge
1076:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_BOTH      - Both rising and falling edge
1077:.\Generated_Source\PSoC4/PWM_R.c **** *
1078:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1079:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1080:.\Generated_Source\PSoC4/PWM_R.c **** *
1081:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1082:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetStopMode(uint32 triggerMode)
1083:.\Generated_Source\PSoC4/PWM_R.c **** {
 1618              		.loc 1 1083 0
 1619              		.cfi_startproc
 1620 0000 80B5     		push	{r7, lr}
 1621              	.LCFI84:
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 84B0     		sub	sp, sp, #16
 1626              	.LCFI85:
 1627              		.cfi_def_cfa_offset 24
 1628 0004 00AF     		add	r7, sp, #0
 1629              	.LCFI86:
 1630              		.cfi_def_cfa_register 7
 1631 0006 7860     		str	r0, [r7, #4]
1084:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
1085:.\Generated_Source\PSoC4/PWM_R.c **** 
1086:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 1632              		.loc 1 1086 0
 1633 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1634 000c 031C     		mov	r3, r0
 1635 000e 1A1C     		mov	r2, r3
 1636 0010 3B1C     		mov	r3, r7
 1637 0012 0F33     		add	r3, r3, #15
 1638 0014 1A70     		strb	r2, [r3]
1087:.\Generated_Source\PSoC4/PWM_R.c **** 
1088:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG &= (uint32)~PWM_R_STOP_MASK;
 1639              		.loc 1 1088 0
 1640 0016 0B4B     		ldr	r3, .L128
 1641 0018 0A4A     		ldr	r2, .L128
 1642 001a 1268     		ldr	r2, [r2]
 1643 001c C021     		mov	r1, #192
 1644 001e 8A43     		bic	r2, r2, r1
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 49


 1645 0020 1A60     		str	r2, [r3]
1089:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_R_STOP_SHIFT));
 1646              		.loc 1 1089 0
 1647 0022 084B     		ldr	r3, .L128
 1648 0024 074A     		ldr	r2, .L128
 1649 0026 1168     		ldr	r1, [r2]
 1650 0028 7A68     		ldr	r2, [r7, #4]
 1651 002a 9201     		lsl	r2, r2, #6
 1652 002c 0A43     		orr	r2, r2, r1
 1653 002e 1A60     		str	r2, [r3]
1090:.\Generated_Source\PSoC4/PWM_R.c **** 
1091:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 1654              		.loc 1 1091 0
 1655 0030 3B1C     		mov	r3, r7
 1656 0032 0F33     		add	r3, r3, #15
 1657 0034 1B78     		ldrb	r3, [r3]
 1658 0036 181C     		mov	r0, r3
 1659 0038 FFF7FEFF 		bl	CyExitCriticalSection
1092:.\Generated_Source\PSoC4/PWM_R.c **** }
 1660              		.loc 1 1092 0
 1661 003c BD46     		mov	sp, r7
 1662 003e 04B0     		add	sp, sp, #16
 1663              		@ sp needed for prologue
 1664 0040 80BD     		pop	{r7, pc}
 1665              	.L129:
 1666 0042 C046     		.align	2
 1667              	.L128:
 1668 0044 A4010540 		.word	1074069924
 1669              		.cfi_endproc
 1670              	.LFE31:
 1671              		.size	PWM_R_SetStopMode, .-PWM_R_SetStopMode
 1672              		.section	.text.PWM_R_SetCountMode,"ax",%progbits
 1673              		.align	2
 1674              		.global	PWM_R_SetCountMode
 1675              		.code	16
 1676              		.thumb_func
 1677              		.type	PWM_R_SetCountMode, %function
 1678              	PWM_R_SetCountMode:
 1679              	.LFB32:
1093:.\Generated_Source\PSoC4/PWM_R.c **** 
1094:.\Generated_Source\PSoC4/PWM_R.c **** 
1095:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1096:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetCountMode
1097:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1098:.\Generated_Source\PSoC4/PWM_R.c **** *
1099:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1100:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1101:.\Generated_Source\PSoC4/PWM_R.c **** *  input.
1102:.\Generated_Source\PSoC4/PWM_R.c **** *
1103:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1104:.\Generated_Source\PSoC4/PWM_R.c **** *  triggerMode: Enumerated trigger mode value
1105:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1106:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_LEVEL     - Level
1107:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_RISING    - Rising edge
1108:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_FALLING   - Falling edge
1109:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_TRIG_BOTH      - Both rising and falling edge
1110:.\Generated_Source\PSoC4/PWM_R.c **** *
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 50


1111:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1112:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1113:.\Generated_Source\PSoC4/PWM_R.c **** *
1114:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1115:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetCountMode(uint32 triggerMode)
1116:.\Generated_Source\PSoC4/PWM_R.c **** {
 1680              		.loc 1 1116 0
 1681              		.cfi_startproc
 1682 0000 80B5     		push	{r7, lr}
 1683              	.LCFI87:
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 7, -8
 1686              		.cfi_offset 14, -4
 1687 0002 84B0     		sub	sp, sp, #16
 1688              	.LCFI88:
 1689              		.cfi_def_cfa_offset 24
 1690 0004 00AF     		add	r7, sp, #0
 1691              	.LCFI89:
 1692              		.cfi_def_cfa_register 7
 1693 0006 7860     		str	r0, [r7, #4]
1117:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
1118:.\Generated_Source\PSoC4/PWM_R.c **** 
1119:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 1694              		.loc 1 1119 0
 1695 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1696 000c 031C     		mov	r3, r0
 1697 000e 1A1C     		mov	r2, r3
 1698 0010 3B1C     		mov	r3, r7
 1699 0012 0F33     		add	r3, r3, #15
 1700 0014 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC4/PWM_R.c **** 
1121:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG &= (uint32)~PWM_R_COUNT_MASK;
 1701              		.loc 1 1121 0
 1702 0016 0B4B     		ldr	r3, .L132
 1703 0018 0A4A     		ldr	r2, .L132
 1704 001a 1268     		ldr	r2, [r2]
 1705 001c 0C21     		mov	r1, #12
 1706 001e 8A43     		bic	r2, r2, r1
 1707 0020 1A60     		str	r2, [r3]
1122:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_R_COUNT_SHIFT));
 1708              		.loc 1 1122 0
 1709 0022 084B     		ldr	r3, .L132
 1710 0024 074A     		ldr	r2, .L132
 1711 0026 1168     		ldr	r1, [r2]
 1712 0028 7A68     		ldr	r2, [r7, #4]
 1713 002a 9200     		lsl	r2, r2, #2
 1714 002c 0A43     		orr	r2, r2, r1
 1715 002e 1A60     		str	r2, [r3]
1123:.\Generated_Source\PSoC4/PWM_R.c **** 
1124:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 1716              		.loc 1 1124 0
 1717 0030 3B1C     		mov	r3, r7
 1718 0032 0F33     		add	r3, r3, #15
 1719 0034 1B78     		ldrb	r3, [r3]
 1720 0036 181C     		mov	r0, r3
 1721 0038 FFF7FEFF 		bl	CyExitCriticalSection
1125:.\Generated_Source\PSoC4/PWM_R.c **** }
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 51


 1722              		.loc 1 1125 0
 1723 003c BD46     		mov	sp, r7
 1724 003e 04B0     		add	sp, sp, #16
 1725              		@ sp needed for prologue
 1726 0040 80BD     		pop	{r7, pc}
 1727              	.L133:
 1728 0042 C046     		.align	2
 1729              	.L132:
 1730 0044 A4010540 		.word	1074069924
 1731              		.cfi_endproc
 1732              	.LFE32:
 1733              		.size	PWM_R_SetCountMode, .-PWM_R_SetCountMode
 1734              		.section	.text.PWM_R_TriggerCommand,"ax",%progbits
 1735              		.align	2
 1736              		.global	PWM_R_TriggerCommand
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	PWM_R_TriggerCommand, %function
 1740              	PWM_R_TriggerCommand:
 1741              	.LFB33:
1126:.\Generated_Source\PSoC4/PWM_R.c **** 
1127:.\Generated_Source\PSoC4/PWM_R.c **** 
1128:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1129:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_TriggerCommand
1130:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1131:.\Generated_Source\PSoC4/PWM_R.c **** *
1132:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1133:.\Generated_Source\PSoC4/PWM_R.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1134:.\Generated_Source\PSoC4/PWM_R.c **** *  The mask can be used to apply this command simultaneously to more than one
1135:.\Generated_Source\PSoC4/PWM_R.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1136:.\Generated_Source\PSoC4/PWM_R.c **** *
1137:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1138:.\Generated_Source\PSoC4/PWM_R.c **** *  mask: Combination of mask bits for each instance of the TCPWM that the
1139:.\Generated_Source\PSoC4/PWM_R.c **** *        command should apply to.  This function from one instance can be used
1140:.\Generated_Source\PSoC4/PWM_R.c **** *        to apply the command to any of the instances in the design.
1141:.\Generated_Source\PSoC4/PWM_R.c **** *        The mask value for a specific instance is available with the MASK
1142:.\Generated_Source\PSoC4/PWM_R.c **** *        define.
1143:.\Generated_Source\PSoC4/PWM_R.c **** *  command: Enumerated command values. Capture command only applicable for
1144:.\Generated_Source\PSoC4/PWM_R.c **** *           Timer/Counter with Capture and PWM modes.
1145:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1146:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_CMD_CAPTURE    - Trigger Capture command
1147:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_CMD_RELOAD     - Trigger Reload command
1148:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_CMD_STOP       - Trigger Stop command
1149:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_CMD_START      - Trigger Start command
1150:.\Generated_Source\PSoC4/PWM_R.c **** *
1151:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1152:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1153:.\Generated_Source\PSoC4/PWM_R.c **** *
1154:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1155:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_TriggerCommand(uint32 mask, uint32 command)
1156:.\Generated_Source\PSoC4/PWM_R.c **** {
 1742              		.loc 1 1156 0
 1743              		.cfi_startproc
 1744 0000 80B5     		push	{r7, lr}
 1745              	.LCFI90:
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 7, -8
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 52


 1748              		.cfi_offset 14, -4
 1749 0002 84B0     		sub	sp, sp, #16
 1750              	.LCFI91:
 1751              		.cfi_def_cfa_offset 24
 1752 0004 00AF     		add	r7, sp, #0
 1753              	.LCFI92:
 1754              		.cfi_def_cfa_register 7
 1755 0006 7860     		str	r0, [r7, #4]
 1756 0008 3960     		str	r1, [r7]
1157:.\Generated_Source\PSoC4/PWM_R.c ****     uint8 enableInterrupts;
1158:.\Generated_Source\PSoC4/PWM_R.c **** 
1159:.\Generated_Source\PSoC4/PWM_R.c ****     enableInterrupts = CyEnterCriticalSection();
 1757              		.loc 1 1159 0
 1758 000a FFF7FEFF 		bl	CyEnterCriticalSection
 1759 000e 031C     		mov	r3, r0
 1760 0010 1A1C     		mov	r2, r3
 1761 0012 3B1C     		mov	r3, r7
 1762 0014 0F33     		add	r3, r3, #15
 1763 0016 1A70     		strb	r2, [r3]
1160:.\Generated_Source\PSoC4/PWM_R.c **** 
1161:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_COMMAND_REG = ((uint32)(mask << command));
 1764              		.loc 1 1161 0
 1765 0018 074B     		ldr	r3, .L136
 1766 001a 3A68     		ldr	r2, [r7]
 1767 001c 7968     		ldr	r1, [r7, #4]
 1768 001e 081C     		mov	r0, r1
 1769 0020 9040     		lsl	r0, r0, r2
 1770 0022 021C     		mov	r2, r0
 1771 0024 1A60     		str	r2, [r3]
1162:.\Generated_Source\PSoC4/PWM_R.c **** 
1163:.\Generated_Source\PSoC4/PWM_R.c ****     CyExitCriticalSection(enableInterrupts);
 1772              		.loc 1 1163 0
 1773 0026 3B1C     		mov	r3, r7
 1774 0028 0F33     		add	r3, r3, #15
 1775 002a 1B78     		ldrb	r3, [r3]
 1776 002c 181C     		mov	r0, r3
 1777 002e FFF7FEFF 		bl	CyExitCriticalSection
1164:.\Generated_Source\PSoC4/PWM_R.c **** }
 1778              		.loc 1 1164 0
 1779 0032 BD46     		mov	sp, r7
 1780 0034 04B0     		add	sp, sp, #16
 1781              		@ sp needed for prologue
 1782 0036 80BD     		pop	{r7, pc}
 1783              	.L137:
 1784              		.align	2
 1785              	.L136:
 1786 0038 08000540 		.word	1074069512
 1787              		.cfi_endproc
 1788              	.LFE33:
 1789              		.size	PWM_R_TriggerCommand, .-PWM_R_TriggerCommand
 1790              		.section	.text.PWM_R_ReadStatus,"ax",%progbits
 1791              		.align	2
 1792              		.global	PWM_R_ReadStatus
 1793              		.code	16
 1794              		.thumb_func
 1795              		.type	PWM_R_ReadStatus, %function
 1796              	PWM_R_ReadStatus:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 53


 1797              	.LFB34:
1165:.\Generated_Source\PSoC4/PWM_R.c **** 
1166:.\Generated_Source\PSoC4/PWM_R.c **** 
1167:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1168:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_ReadStatus
1169:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1170:.\Generated_Source\PSoC4/PWM_R.c **** *
1171:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1172:.\Generated_Source\PSoC4/PWM_R.c **** *  Reads the status of the PWM_R.
1173:.\Generated_Source\PSoC4/PWM_R.c **** *
1174:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1175:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1176:.\Generated_Source\PSoC4/PWM_R.c **** *
1177:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1178:.\Generated_Source\PSoC4/PWM_R.c **** *  Status
1179:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1180:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_STATUS_DOWN    - Set if counting down
1181:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_STATUS_RUNNING - Set if counter is running
1182:.\Generated_Source\PSoC4/PWM_R.c **** *
1183:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1184:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_ReadStatus(void)
1185:.\Generated_Source\PSoC4/PWM_R.c **** {
 1798              		.loc 1 1185 0
 1799              		.cfi_startproc
 1800 0000 80B5     		push	{r7, lr}
 1801              	.LCFI93:
 1802              		.cfi_def_cfa_offset 8
 1803              		.cfi_offset 7, -8
 1804              		.cfi_offset 14, -4
 1805 0002 00AF     		add	r7, sp, #0
 1806              	.LCFI94:
 1807              		.cfi_def_cfa_register 7
1186:.\Generated_Source\PSoC4/PWM_R.c ****     return ((PWM_R_STATUS_REG >> PWM_R_RUNNING_STATUS_SHIFT) |
 1808              		.loc 1 1186 0
 1809 0004 054B     		ldr	r3, .L140
 1810 0006 1B68     		ldr	r3, [r3]
 1811 0008 9A0F     		lsr	r2, r3, #30
1187:.\Generated_Source\PSoC4/PWM_R.c ****             (PWM_R_STATUS_REG & PWM_R_STATUS_DOWN));
 1812              		.loc 1 1187 0
 1813 000a 044B     		ldr	r3, .L140
 1814 000c 1968     		ldr	r1, [r3]
 1815 000e 0123     		mov	r3, #1
 1816 0010 0B40     		and	r3, r3, r1
 1817              		.loc 1 1186 0
 1818 0012 1343     		orr	r3, r3, r2
1188:.\Generated_Source\PSoC4/PWM_R.c **** }
 1819              		.loc 1 1188 0
 1820 0014 181C     		mov	r0, r3
 1821 0016 BD46     		mov	sp, r7
 1822              		@ sp needed for prologue
 1823 0018 80BD     		pop	{r7, pc}
 1824              	.L141:
 1825 001a C046     		.align	2
 1826              	.L140:
 1827 001c 84010540 		.word	1074069892
 1828              		.cfi_endproc
 1829              	.LFE34:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 54


 1830              		.size	PWM_R_ReadStatus, .-PWM_R_ReadStatus
 1831              		.section	.text.PWM_R_SetInterruptMode,"ax",%progbits
 1832              		.align	2
 1833              		.global	PWM_R_SetInterruptMode
 1834              		.code	16
 1835              		.thumb_func
 1836              		.type	PWM_R_SetInterruptMode, %function
 1837              	PWM_R_SetInterruptMode:
 1838              	.LFB35:
1189:.\Generated_Source\PSoC4/PWM_R.c **** 
1190:.\Generated_Source\PSoC4/PWM_R.c **** 
1191:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1192:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetInterruptMode
1193:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1194:.\Generated_Source\PSoC4/PWM_R.c **** *
1195:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1196:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets the interrupt mask to control which interrupt
1197:.\Generated_Source\PSoC4/PWM_R.c **** *  requests generate the interrupt signal.
1198:.\Generated_Source\PSoC4/PWM_R.c **** *
1199:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1200:.\Generated_Source\PSoC4/PWM_R.c **** *   interruptMask: Mask of bits to be enabled
1201:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1202:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_TC       - Terminal count mask
1203:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_CC_MATCH - Compare count / capture mask
1204:.\Generated_Source\PSoC4/PWM_R.c **** *
1205:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1206:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1207:.\Generated_Source\PSoC4/PWM_R.c **** *
1208:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetInterruptMode(uint32 interruptMask)
1210:.\Generated_Source\PSoC4/PWM_R.c **** {
 1839              		.loc 1 1210 0
 1840              		.cfi_startproc
 1841 0000 80B5     		push	{r7, lr}
 1842              	.LCFI95:
 1843              		.cfi_def_cfa_offset 8
 1844              		.cfi_offset 7, -8
 1845              		.cfi_offset 14, -4
 1846 0002 82B0     		sub	sp, sp, #8
 1847              	.LCFI96:
 1848              		.cfi_def_cfa_offset 16
 1849 0004 00AF     		add	r7, sp, #0
 1850              	.LCFI97:
 1851              		.cfi_def_cfa_register 7
 1852 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_INTERRUPT_MASK_REG =  interruptMask;
 1853              		.loc 1 1211 0
 1854 0008 024B     		ldr	r3, .L144
 1855 000a 7A68     		ldr	r2, [r7, #4]
 1856 000c 1A60     		str	r2, [r3]
1212:.\Generated_Source\PSoC4/PWM_R.c **** }
 1857              		.loc 1 1212 0
 1858 000e BD46     		mov	sp, r7
 1859 0010 02B0     		add	sp, sp, #8
 1860              		@ sp needed for prologue
 1861 0012 80BD     		pop	{r7, pc}
 1862              	.L145:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 55


 1863              		.align	2
 1864              	.L144:
 1865 0014 B8010540 		.word	1074069944
 1866              		.cfi_endproc
 1867              	.LFE35:
 1868              		.size	PWM_R_SetInterruptMode, .-PWM_R_SetInterruptMode
 1869              		.section	.text.PWM_R_GetInterruptSourceMasked,"ax",%progbits
 1870              		.align	2
 1871              		.global	PWM_R_GetInterruptSourceMasked
 1872              		.code	16
 1873              		.thumb_func
 1874              		.type	PWM_R_GetInterruptSourceMasked, %function
 1875              	PWM_R_GetInterruptSourceMasked:
 1876              	.LFB36:
1213:.\Generated_Source\PSoC4/PWM_R.c **** 
1214:.\Generated_Source\PSoC4/PWM_R.c **** 
1215:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1216:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_GetInterruptSourceMasked
1217:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1218:.\Generated_Source\PSoC4/PWM_R.c **** *
1219:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1220:.\Generated_Source\PSoC4/PWM_R.c **** *  Gets the interrupt requests masked by the interrupt mask.
1221:.\Generated_Source\PSoC4/PWM_R.c **** *
1222:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1223:.\Generated_Source\PSoC4/PWM_R.c **** *   None
1224:.\Generated_Source\PSoC4/PWM_R.c **** *
1225:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1226:.\Generated_Source\PSoC4/PWM_R.c **** *  Masked interrupt source
1227:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1228:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_TC       - Terminal count mask
1229:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_CC_MATCH - Compare count / capture mask
1230:.\Generated_Source\PSoC4/PWM_R.c **** *
1231:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1232:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_GetInterruptSourceMasked(void)
1233:.\Generated_Source\PSoC4/PWM_R.c **** {
 1877              		.loc 1 1233 0
 1878              		.cfi_startproc
 1879 0000 80B5     		push	{r7, lr}
 1880              	.LCFI98:
 1881              		.cfi_def_cfa_offset 8
 1882              		.cfi_offset 7, -8
 1883              		.cfi_offset 14, -4
 1884 0002 00AF     		add	r7, sp, #0
 1885              	.LCFI99:
 1886              		.cfi_def_cfa_register 7
1234:.\Generated_Source\PSoC4/PWM_R.c ****     return (PWM_R_INTERRUPT_MASKED_REG);
 1887              		.loc 1 1234 0
 1888 0004 024B     		ldr	r3, .L148
 1889 0006 1B68     		ldr	r3, [r3]
1235:.\Generated_Source\PSoC4/PWM_R.c **** }
 1890              		.loc 1 1235 0
 1891 0008 181C     		mov	r0, r3
 1892 000a BD46     		mov	sp, r7
 1893              		@ sp needed for prologue
 1894 000c 80BD     		pop	{r7, pc}
 1895              	.L149:
 1896 000e C046     		.align	2
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 56


 1897              	.L148:
 1898 0010 BC010540 		.word	1074069948
 1899              		.cfi_endproc
 1900              	.LFE36:
 1901              		.size	PWM_R_GetInterruptSourceMasked, .-PWM_R_GetInterruptSourceMasked
 1902              		.section	.text.PWM_R_GetInterruptSource,"ax",%progbits
 1903              		.align	2
 1904              		.global	PWM_R_GetInterruptSource
 1905              		.code	16
 1906              		.thumb_func
 1907              		.type	PWM_R_GetInterruptSource, %function
 1908              	PWM_R_GetInterruptSource:
 1909              	.LFB37:
1236:.\Generated_Source\PSoC4/PWM_R.c **** 
1237:.\Generated_Source\PSoC4/PWM_R.c **** 
1238:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_GetInterruptSource
1240:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/PWM_R.c **** *
1242:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1243:.\Generated_Source\PSoC4/PWM_R.c **** *  Gets the interrupt requests (without masking).
1244:.\Generated_Source\PSoC4/PWM_R.c **** *
1245:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1246:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1247:.\Generated_Source\PSoC4/PWM_R.c **** *
1248:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1249:.\Generated_Source\PSoC4/PWM_R.c **** *  Interrupt request value
1250:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1251:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_TC       - Terminal count mask
1252:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_CC_MATCH - Compare count / capture mask
1253:.\Generated_Source\PSoC4/PWM_R.c **** *
1254:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1255:.\Generated_Source\PSoC4/PWM_R.c **** uint32 PWM_R_GetInterruptSource(void)
1256:.\Generated_Source\PSoC4/PWM_R.c **** {
 1910              		.loc 1 1256 0
 1911              		.cfi_startproc
 1912 0000 80B5     		push	{r7, lr}
 1913              	.LCFI100:
 1914              		.cfi_def_cfa_offset 8
 1915              		.cfi_offset 7, -8
 1916              		.cfi_offset 14, -4
 1917 0002 00AF     		add	r7, sp, #0
 1918              	.LCFI101:
 1919              		.cfi_def_cfa_register 7
1257:.\Generated_Source\PSoC4/PWM_R.c ****     return (PWM_R_INTERRUPT_REQ_REG);
 1920              		.loc 1 1257 0
 1921 0004 024B     		ldr	r3, .L152
 1922 0006 1B68     		ldr	r3, [r3]
1258:.\Generated_Source\PSoC4/PWM_R.c **** }
 1923              		.loc 1 1258 0
 1924 0008 181C     		mov	r0, r3
 1925 000a BD46     		mov	sp, r7
 1926              		@ sp needed for prologue
 1927 000c 80BD     		pop	{r7, pc}
 1928              	.L153:
 1929 000e C046     		.align	2
 1930              	.L152:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 57


 1931 0010 B0010540 		.word	1074069936
 1932              		.cfi_endproc
 1933              	.LFE37:
 1934              		.size	PWM_R_GetInterruptSource, .-PWM_R_GetInterruptSource
 1935              		.section	.text.PWM_R_ClearInterrupt,"ax",%progbits
 1936              		.align	2
 1937              		.global	PWM_R_ClearInterrupt
 1938              		.code	16
 1939              		.thumb_func
 1940              		.type	PWM_R_ClearInterrupt, %function
 1941              	PWM_R_ClearInterrupt:
 1942              	.LFB38:
1259:.\Generated_Source\PSoC4/PWM_R.c **** 
1260:.\Generated_Source\PSoC4/PWM_R.c **** 
1261:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_ClearInterrupt
1263:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PWM_R.c **** *
1265:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1266:.\Generated_Source\PSoC4/PWM_R.c **** *  Clears the interrupt request.
1267:.\Generated_Source\PSoC4/PWM_R.c **** *
1268:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PWM_R.c **** *   interruptMask: Mask of interrupts to clear
1270:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1271:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_TC       - Terminal count mask
1272:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_CC_MATCH - Compare count / capture mask
1273:.\Generated_Source\PSoC4/PWM_R.c **** *
1274:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1275:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1276:.\Generated_Source\PSoC4/PWM_R.c **** *
1277:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_ClearInterrupt(uint32 interruptMask)
1279:.\Generated_Source\PSoC4/PWM_R.c **** {
 1943              		.loc 1 1279 0
 1944              		.cfi_startproc
 1945 0000 80B5     		push	{r7, lr}
 1946              	.LCFI102:
 1947              		.cfi_def_cfa_offset 8
 1948              		.cfi_offset 7, -8
 1949              		.cfi_offset 14, -4
 1950 0002 82B0     		sub	sp, sp, #8
 1951              	.LCFI103:
 1952              		.cfi_def_cfa_offset 16
 1953 0004 00AF     		add	r7, sp, #0
 1954              	.LCFI104:
 1955              		.cfi_def_cfa_register 7
 1956 0006 7860     		str	r0, [r7, #4]
1280:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_INTERRUPT_REQ_REG = interruptMask;
 1957              		.loc 1 1280 0
 1958 0008 024B     		ldr	r3, .L156
 1959 000a 7A68     		ldr	r2, [r7, #4]
 1960 000c 1A60     		str	r2, [r3]
1281:.\Generated_Source\PSoC4/PWM_R.c **** }
 1961              		.loc 1 1281 0
 1962 000e BD46     		mov	sp, r7
 1963 0010 02B0     		add	sp, sp, #8
 1964              		@ sp needed for prologue
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 58


 1965 0012 80BD     		pop	{r7, pc}
 1966              	.L157:
 1967              		.align	2
 1968              	.L156:
 1969 0014 B0010540 		.word	1074069936
 1970              		.cfi_endproc
 1971              	.LFE38:
 1972              		.size	PWM_R_ClearInterrupt, .-PWM_R_ClearInterrupt
 1973              		.section	.text.PWM_R_SetInterrupt,"ax",%progbits
 1974              		.align	2
 1975              		.global	PWM_R_SetInterrupt
 1976              		.code	16
 1977              		.thumb_func
 1978              		.type	PWM_R_SetInterrupt, %function
 1979              	PWM_R_SetInterrupt:
 1980              	.LFB39:
1282:.\Generated_Source\PSoC4/PWM_R.c **** 
1283:.\Generated_Source\PSoC4/PWM_R.c **** 
1284:.\Generated_Source\PSoC4/PWM_R.c **** /*******************************************************************************
1285:.\Generated_Source\PSoC4/PWM_R.c **** * Function Name: PWM_R_SetInterrupt
1286:.\Generated_Source\PSoC4/PWM_R.c **** ********************************************************************************
1287:.\Generated_Source\PSoC4/PWM_R.c **** *
1288:.\Generated_Source\PSoC4/PWM_R.c **** * Summary:
1289:.\Generated_Source\PSoC4/PWM_R.c **** *  Sets a software interrupt request.
1290:.\Generated_Source\PSoC4/PWM_R.c **** *
1291:.\Generated_Source\PSoC4/PWM_R.c **** * Parameters:
1292:.\Generated_Source\PSoC4/PWM_R.c **** *   interruptMask: Mask of interrupts to set
1293:.\Generated_Source\PSoC4/PWM_R.c **** *   Values:
1294:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_TC       - Terminal count mask
1295:.\Generated_Source\PSoC4/PWM_R.c **** *     - PWM_R_INTR_MASK_CC_MATCH - Compare count / capture mask
1296:.\Generated_Source\PSoC4/PWM_R.c **** *
1297:.\Generated_Source\PSoC4/PWM_R.c **** * Return:
1298:.\Generated_Source\PSoC4/PWM_R.c **** *  None
1299:.\Generated_Source\PSoC4/PWM_R.c **** *
1300:.\Generated_Source\PSoC4/PWM_R.c **** *******************************************************************************/
1301:.\Generated_Source\PSoC4/PWM_R.c **** void PWM_R_SetInterrupt(uint32 interruptMask)
1302:.\Generated_Source\PSoC4/PWM_R.c **** {
 1981              		.loc 1 1302 0
 1982              		.cfi_startproc
 1983 0000 80B5     		push	{r7, lr}
 1984              	.LCFI105:
 1985              		.cfi_def_cfa_offset 8
 1986              		.cfi_offset 7, -8
 1987              		.cfi_offset 14, -4
 1988 0002 82B0     		sub	sp, sp, #8
 1989              	.LCFI106:
 1990              		.cfi_def_cfa_offset 16
 1991 0004 00AF     		add	r7, sp, #0
 1992              	.LCFI107:
 1993              		.cfi_def_cfa_register 7
 1994 0006 7860     		str	r0, [r7, #4]
1303:.\Generated_Source\PSoC4/PWM_R.c ****     PWM_R_INTERRUPT_SET_REG = interruptMask;
 1995              		.loc 1 1303 0
 1996 0008 024B     		ldr	r3, .L160
 1997 000a 7A68     		ldr	r2, [r7, #4]
 1998 000c 1A60     		str	r2, [r3]
1304:.\Generated_Source\PSoC4/PWM_R.c **** }
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 59


 1999              		.loc 1 1304 0
 2000 000e BD46     		mov	sp, r7
 2001 0010 02B0     		add	sp, sp, #8
 2002              		@ sp needed for prologue
 2003 0012 80BD     		pop	{r7, pc}
 2004              	.L161:
 2005              		.align	2
 2006              	.L160:
 2007 0014 B4010540 		.word	1074069940
 2008              		.cfi_endproc
 2009              	.LFE39:
 2010              		.size	PWM_R_SetInterrupt, .-PWM_R_SetInterrupt
 2011              		.text
 2012              	.Letext0:
 2013              		.section	.debug_loc,"",%progbits
 2014              	.Ldebug_loc0:
 2015              	.LLST0:
 2016 0000 00000000 		.4byte	.LFB0
 2017 0004 02000000 		.4byte	.LCFI0
 2018 0008 0100     		.2byte	0x1
 2019 000a 5D       		.byte	0x5d
 2020 000b 02000000 		.4byte	.LCFI0
 2021 000f 04000000 		.4byte	.LCFI1
 2022 0013 0200     		.2byte	0x2
 2023 0015 7D       		.byte	0x7d
 2024 0016 08       		.sleb128 8
 2025 0017 04000000 		.4byte	.LCFI1
 2026 001b 54000000 		.4byte	.LFE0
 2027 001f 0200     		.2byte	0x2
 2028 0021 77       		.byte	0x77
 2029 0022 08       		.sleb128 8
 2030 0023 00000000 		.4byte	0x0
 2031 0027 00000000 		.4byte	0x0
 2032              	.LLST1:
 2033 002b 00000000 		.4byte	.LFB1
 2034 002f 02000000 		.4byte	.LCFI2
 2035 0033 0100     		.2byte	0x1
 2036 0035 5D       		.byte	0x5d
 2037 0036 02000000 		.4byte	.LCFI2
 2038 003a 04000000 		.4byte	.LCFI3
 2039 003e 0200     		.2byte	0x2
 2040 0040 7D       		.byte	0x7d
 2041 0041 08       		.sleb128 8
 2042 0042 04000000 		.4byte	.LCFI3
 2043 0046 06000000 		.4byte	.LCFI4
 2044 004a 0200     		.2byte	0x2
 2045 004c 7D       		.byte	0x7d
 2046 004d 10       		.sleb128 16
 2047 004e 06000000 		.4byte	.LCFI4
 2048 0052 3C000000 		.4byte	.LFE1
 2049 0056 0200     		.2byte	0x2
 2050 0058 77       		.byte	0x77
 2051 0059 10       		.sleb128 16
 2052 005a 00000000 		.4byte	0x0
 2053 005e 00000000 		.4byte	0x0
 2054              	.LLST2:
 2055 0062 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 60


 2056 0066 02000000 		.4byte	.LCFI5
 2057 006a 0100     		.2byte	0x1
 2058 006c 5D       		.byte	0x5d
 2059 006d 02000000 		.4byte	.LCFI5
 2060 0071 04000000 		.4byte	.LCFI6
 2061 0075 0200     		.2byte	0x2
 2062 0077 7D       		.byte	0x7d
 2063 0078 08       		.sleb128 8
 2064 0079 04000000 		.4byte	.LCFI6
 2065 007d 24000000 		.4byte	.LFE2
 2066 0081 0200     		.2byte	0x2
 2067 0083 77       		.byte	0x77
 2068 0084 08       		.sleb128 8
 2069 0085 00000000 		.4byte	0x0
 2070 0089 00000000 		.4byte	0x0
 2071              	.LLST3:
 2072 008d 00000000 		.4byte	.LFB3
 2073 0091 02000000 		.4byte	.LCFI7
 2074 0095 0100     		.2byte	0x1
 2075 0097 5D       		.byte	0x5d
 2076 0098 02000000 		.4byte	.LCFI7
 2077 009c 04000000 		.4byte	.LCFI8
 2078 00a0 0200     		.2byte	0x2
 2079 00a2 7D       		.byte	0x7d
 2080 00a3 08       		.sleb128 8
 2081 00a4 04000000 		.4byte	.LCFI8
 2082 00a8 06000000 		.4byte	.LCFI9
 2083 00ac 0200     		.2byte	0x2
 2084 00ae 7D       		.byte	0x7d
 2085 00af 10       		.sleb128 16
 2086 00b0 06000000 		.4byte	.LCFI9
 2087 00b4 34000000 		.4byte	.LFE3
 2088 00b8 0200     		.2byte	0x2
 2089 00ba 77       		.byte	0x77
 2090 00bb 10       		.sleb128 16
 2091 00bc 00000000 		.4byte	0x0
 2092 00c0 00000000 		.4byte	0x0
 2093              	.LLST4:
 2094 00c4 00000000 		.4byte	.LFB4
 2095 00c8 02000000 		.4byte	.LCFI10
 2096 00cc 0100     		.2byte	0x1
 2097 00ce 5D       		.byte	0x5d
 2098 00cf 02000000 		.4byte	.LCFI10
 2099 00d3 04000000 		.4byte	.LCFI11
 2100 00d7 0200     		.2byte	0x2
 2101 00d9 7D       		.byte	0x7d
 2102 00da 08       		.sleb128 8
 2103 00db 04000000 		.4byte	.LCFI11
 2104 00df 06000000 		.4byte	.LCFI12
 2105 00e3 0200     		.2byte	0x2
 2106 00e5 7D       		.byte	0x7d
 2107 00e6 18       		.sleb128 24
 2108 00e7 06000000 		.4byte	.LCFI12
 2109 00eb 48000000 		.4byte	.LFE4
 2110 00ef 0200     		.2byte	0x2
 2111 00f1 77       		.byte	0x77
 2112 00f2 18       		.sleb128 24
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 61


 2113 00f3 00000000 		.4byte	0x0
 2114 00f7 00000000 		.4byte	0x0
 2115              	.LLST5:
 2116 00fb 00000000 		.4byte	.LFB5
 2117 00ff 02000000 		.4byte	.LCFI13
 2118 0103 0100     		.2byte	0x1
 2119 0105 5D       		.byte	0x5d
 2120 0106 02000000 		.4byte	.LCFI13
 2121 010a 04000000 		.4byte	.LCFI14
 2122 010e 0200     		.2byte	0x2
 2123 0110 7D       		.byte	0x7d
 2124 0111 08       		.sleb128 8
 2125 0112 04000000 		.4byte	.LCFI14
 2126 0116 06000000 		.4byte	.LCFI15
 2127 011a 0200     		.2byte	0x2
 2128 011c 7D       		.byte	0x7d
 2129 011d 18       		.sleb128 24
 2130 011e 06000000 		.4byte	.LCFI15
 2131 0122 48000000 		.4byte	.LFE5
 2132 0126 0200     		.2byte	0x2
 2133 0128 77       		.byte	0x77
 2134 0129 18       		.sleb128 24
 2135 012a 00000000 		.4byte	0x0
 2136 012e 00000000 		.4byte	0x0
 2137              	.LLST6:
 2138 0132 00000000 		.4byte	.LFB6
 2139 0136 02000000 		.4byte	.LCFI16
 2140 013a 0100     		.2byte	0x1
 2141 013c 5D       		.byte	0x5d
 2142 013d 02000000 		.4byte	.LCFI16
 2143 0141 04000000 		.4byte	.LCFI17
 2144 0145 0200     		.2byte	0x2
 2145 0147 7D       		.byte	0x7d
 2146 0148 08       		.sleb128 8
 2147 0149 04000000 		.4byte	.LCFI17
 2148 014d 06000000 		.4byte	.LCFI18
 2149 0151 0200     		.2byte	0x2
 2150 0153 7D       		.byte	0x7d
 2151 0154 18       		.sleb128 24
 2152 0155 06000000 		.4byte	.LCFI18
 2153 0159 48000000 		.4byte	.LFE6
 2154 015d 0200     		.2byte	0x2
 2155 015f 77       		.byte	0x77
 2156 0160 18       		.sleb128 24
 2157 0161 00000000 		.4byte	0x0
 2158 0165 00000000 		.4byte	0x0
 2159              	.LLST7:
 2160 0169 00000000 		.4byte	.LFB7
 2161 016d 02000000 		.4byte	.LCFI19
 2162 0171 0100     		.2byte	0x1
 2163 0173 5D       		.byte	0x5d
 2164 0174 02000000 		.4byte	.LCFI19
 2165 0178 04000000 		.4byte	.LCFI20
 2166 017c 0200     		.2byte	0x2
 2167 017e 7D       		.byte	0x7d
 2168 017f 08       		.sleb128 8
 2169 0180 04000000 		.4byte	.LCFI20
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 62


 2170 0184 06000000 		.4byte	.LCFI21
 2171 0188 0200     		.2byte	0x2
 2172 018a 7D       		.byte	0x7d
 2173 018b 18       		.sleb128 24
 2174 018c 06000000 		.4byte	.LCFI21
 2175 0190 50000000 		.4byte	.LFE7
 2176 0194 0200     		.2byte	0x2
 2177 0196 77       		.byte	0x77
 2178 0197 18       		.sleb128 24
 2179 0198 00000000 		.4byte	0x0
 2180 019c 00000000 		.4byte	0x0
 2181              	.LLST8:
 2182 01a0 00000000 		.4byte	.LFB8
 2183 01a4 02000000 		.4byte	.LCFI22
 2184 01a8 0100     		.2byte	0x1
 2185 01aa 5D       		.byte	0x5d
 2186 01ab 02000000 		.4byte	.LCFI22
 2187 01af 04000000 		.4byte	.LCFI23
 2188 01b3 0200     		.2byte	0x2
 2189 01b5 7D       		.byte	0x7d
 2190 01b6 08       		.sleb128 8
 2191 01b7 04000000 		.4byte	.LCFI23
 2192 01bb 06000000 		.4byte	.LCFI24
 2193 01bf 0200     		.2byte	0x2
 2194 01c1 7D       		.byte	0x7d
 2195 01c2 10       		.sleb128 16
 2196 01c3 06000000 		.4byte	.LCFI24
 2197 01c7 1C000000 		.4byte	.LFE8
 2198 01cb 0200     		.2byte	0x2
 2199 01cd 77       		.byte	0x77
 2200 01ce 10       		.sleb128 16
 2201 01cf 00000000 		.4byte	0x0
 2202 01d3 00000000 		.4byte	0x0
 2203              	.LLST9:
 2204 01d7 00000000 		.4byte	.LFB9
 2205 01db 02000000 		.4byte	.LCFI25
 2206 01df 0100     		.2byte	0x1
 2207 01e1 5D       		.byte	0x5d
 2208 01e2 02000000 		.4byte	.LCFI25
 2209 01e6 04000000 		.4byte	.LCFI26
 2210 01ea 0200     		.2byte	0x2
 2211 01ec 7D       		.byte	0x7d
 2212 01ed 08       		.sleb128 8
 2213 01ee 04000000 		.4byte	.LCFI26
 2214 01f2 06000000 		.4byte	.LCFI27
 2215 01f6 0200     		.2byte	0x2
 2216 01f8 7D       		.byte	0x7d
 2217 01f9 18       		.sleb128 24
 2218 01fa 06000000 		.4byte	.LCFI27
 2219 01fe 4C000000 		.4byte	.LFE9
 2220 0202 0200     		.2byte	0x2
 2221 0204 77       		.byte	0x77
 2222 0205 18       		.sleb128 24
 2223 0206 00000000 		.4byte	0x0
 2224 020a 00000000 		.4byte	0x0
 2225              	.LLST10:
 2226 020e 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 63


 2227 0212 02000000 		.4byte	.LCFI28
 2228 0216 0100     		.2byte	0x1
 2229 0218 5D       		.byte	0x5d
 2230 0219 02000000 		.4byte	.LCFI28
 2231 021d 04000000 		.4byte	.LCFI29
 2232 0221 0200     		.2byte	0x2
 2233 0223 7D       		.byte	0x7d
 2234 0224 08       		.sleb128 8
 2235 0225 04000000 		.4byte	.LCFI29
 2236 0229 06000000 		.4byte	.LCFI30
 2237 022d 0200     		.2byte	0x2
 2238 022f 7D       		.byte	0x7d
 2239 0230 18       		.sleb128 24
 2240 0231 06000000 		.4byte	.LCFI30
 2241 0235 4C000000 		.4byte	.LFE10
 2242 0239 0200     		.2byte	0x2
 2243 023b 77       		.byte	0x77
 2244 023c 18       		.sleb128 24
 2245 023d 00000000 		.4byte	0x0
 2246 0241 00000000 		.4byte	0x0
 2247              	.LLST11:
 2248 0245 00000000 		.4byte	.LFB11
 2249 0249 02000000 		.4byte	.LCFI31
 2250 024d 0100     		.2byte	0x1
 2251 024f 5D       		.byte	0x5d
 2252 0250 02000000 		.4byte	.LCFI31
 2253 0254 04000000 		.4byte	.LCFI32
 2254 0258 0200     		.2byte	0x2
 2255 025a 7D       		.byte	0x7d
 2256 025b 08       		.sleb128 8
 2257 025c 04000000 		.4byte	.LCFI32
 2258 0260 06000000 		.4byte	.LCFI33
 2259 0264 0200     		.2byte	0x2
 2260 0266 7D       		.byte	0x7d
 2261 0267 18       		.sleb128 24
 2262 0268 06000000 		.4byte	.LCFI33
 2263 026c 50000000 		.4byte	.LFE11
 2264 0270 0200     		.2byte	0x2
 2265 0272 77       		.byte	0x77
 2266 0273 18       		.sleb128 24
 2267 0274 00000000 		.4byte	0x0
 2268 0278 00000000 		.4byte	0x0
 2269              	.LLST12:
 2270 027c 00000000 		.4byte	.LFB12
 2271 0280 02000000 		.4byte	.LCFI34
 2272 0284 0100     		.2byte	0x1
 2273 0286 5D       		.byte	0x5d
 2274 0287 02000000 		.4byte	.LCFI34
 2275 028b 04000000 		.4byte	.LCFI35
 2276 028f 0200     		.2byte	0x2
 2277 0291 7D       		.byte	0x7d
 2278 0292 08       		.sleb128 8
 2279 0293 04000000 		.4byte	.LCFI35
 2280 0297 06000000 		.4byte	.LCFI36
 2281 029b 0200     		.2byte	0x2
 2282 029d 7D       		.byte	0x7d
 2283 029e 18       		.sleb128 24
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 64


 2284 029f 06000000 		.4byte	.LCFI36
 2285 02a3 48000000 		.4byte	.LFE12
 2286 02a7 0200     		.2byte	0x2
 2287 02a9 77       		.byte	0x77
 2288 02aa 18       		.sleb128 24
 2289 02ab 00000000 		.4byte	0x0
 2290 02af 00000000 		.4byte	0x0
 2291              	.LLST13:
 2292 02b3 00000000 		.4byte	.LFB13
 2293 02b7 02000000 		.4byte	.LCFI37
 2294 02bb 0100     		.2byte	0x1
 2295 02bd 5D       		.byte	0x5d
 2296 02be 02000000 		.4byte	.LCFI37
 2297 02c2 04000000 		.4byte	.LCFI38
 2298 02c6 0200     		.2byte	0x2
 2299 02c8 7D       		.byte	0x7d
 2300 02c9 08       		.sleb128 8
 2301 02ca 04000000 		.4byte	.LCFI38
 2302 02ce 06000000 		.4byte	.LCFI39
 2303 02d2 0200     		.2byte	0x2
 2304 02d4 7D       		.byte	0x7d
 2305 02d5 10       		.sleb128 16
 2306 02d6 06000000 		.4byte	.LCFI39
 2307 02da 1C000000 		.4byte	.LFE13
 2308 02de 0200     		.2byte	0x2
 2309 02e0 77       		.byte	0x77
 2310 02e1 10       		.sleb128 16
 2311 02e2 00000000 		.4byte	0x0
 2312 02e6 00000000 		.4byte	0x0
 2313              	.LLST14:
 2314 02ea 00000000 		.4byte	.LFB14
 2315 02ee 02000000 		.4byte	.LCFI40
 2316 02f2 0100     		.2byte	0x1
 2317 02f4 5D       		.byte	0x5d
 2318 02f5 02000000 		.4byte	.LCFI40
 2319 02f9 04000000 		.4byte	.LCFI41
 2320 02fd 0200     		.2byte	0x2
 2321 02ff 7D       		.byte	0x7d
 2322 0300 08       		.sleb128 8
 2323 0301 04000000 		.4byte	.LCFI41
 2324 0305 18000000 		.4byte	.LFE14
 2325 0309 0200     		.2byte	0x2
 2326 030b 77       		.byte	0x77
 2327 030c 08       		.sleb128 8
 2328 030d 00000000 		.4byte	0x0
 2329 0311 00000000 		.4byte	0x0
 2330              	.LLST15:
 2331 0315 00000000 		.4byte	.LFB15
 2332 0319 02000000 		.4byte	.LCFI42
 2333 031d 0100     		.2byte	0x1
 2334 031f 5D       		.byte	0x5d
 2335 0320 02000000 		.4byte	.LCFI42
 2336 0324 04000000 		.4byte	.LCFI43
 2337 0328 0200     		.2byte	0x2
 2338 032a 7D       		.byte	0x7d
 2339 032b 08       		.sleb128 8
 2340 032c 04000000 		.4byte	.LCFI43
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 65


 2341 0330 06000000 		.4byte	.LCFI44
 2342 0334 0200     		.2byte	0x2
 2343 0336 7D       		.byte	0x7d
 2344 0337 18       		.sleb128 24
 2345 0338 06000000 		.4byte	.LCFI44
 2346 033c 48000000 		.4byte	.LFE15
 2347 0340 0200     		.2byte	0x2
 2348 0342 77       		.byte	0x77
 2349 0343 18       		.sleb128 24
 2350 0344 00000000 		.4byte	0x0
 2351 0348 00000000 		.4byte	0x0
 2352              	.LLST16:
 2353 034c 00000000 		.4byte	.LFB16
 2354 0350 02000000 		.4byte	.LCFI45
 2355 0354 0100     		.2byte	0x1
 2356 0356 5D       		.byte	0x5d
 2357 0357 02000000 		.4byte	.LCFI45
 2358 035b 04000000 		.4byte	.LCFI46
 2359 035f 0200     		.2byte	0x2
 2360 0361 7D       		.byte	0x7d
 2361 0362 08       		.sleb128 8
 2362 0363 04000000 		.4byte	.LCFI46
 2363 0367 06000000 		.4byte	.LCFI47
 2364 036b 0200     		.2byte	0x2
 2365 036d 7D       		.byte	0x7d
 2366 036e 10       		.sleb128 16
 2367 036f 06000000 		.4byte	.LCFI47
 2368 0373 1C000000 		.4byte	.LFE16
 2369 0377 0200     		.2byte	0x2
 2370 0379 77       		.byte	0x77
 2371 037a 10       		.sleb128 16
 2372 037b 00000000 		.4byte	0x0
 2373 037f 00000000 		.4byte	0x0
 2374              	.LLST17:
 2375 0383 00000000 		.4byte	.LFB17
 2376 0387 02000000 		.4byte	.LCFI48
 2377 038b 0100     		.2byte	0x1
 2378 038d 5D       		.byte	0x5d
 2379 038e 02000000 		.4byte	.LCFI48
 2380 0392 04000000 		.4byte	.LCFI49
 2381 0396 0200     		.2byte	0x2
 2382 0398 7D       		.byte	0x7d
 2383 0399 08       		.sleb128 8
 2384 039a 04000000 		.4byte	.LCFI49
 2385 039e 18000000 		.4byte	.LFE17
 2386 03a2 0200     		.2byte	0x2
 2387 03a4 77       		.byte	0x77
 2388 03a5 08       		.sleb128 8
 2389 03a6 00000000 		.4byte	0x0
 2390 03aa 00000000 		.4byte	0x0
 2391              	.LLST18:
 2392 03ae 00000000 		.4byte	.LFB18
 2393 03b2 02000000 		.4byte	.LCFI50
 2394 03b6 0100     		.2byte	0x1
 2395 03b8 5D       		.byte	0x5d
 2396 03b9 02000000 		.4byte	.LCFI50
 2397 03bd 04000000 		.4byte	.LCFI51
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 66


 2398 03c1 0200     		.2byte	0x2
 2399 03c3 7D       		.byte	0x7d
 2400 03c4 08       		.sleb128 8
 2401 03c5 04000000 		.4byte	.LCFI51
 2402 03c9 06000000 		.4byte	.LCFI52
 2403 03cd 0200     		.2byte	0x2
 2404 03cf 7D       		.byte	0x7d
 2405 03d0 18       		.sleb128 24
 2406 03d1 06000000 		.4byte	.LCFI52
 2407 03d5 48000000 		.4byte	.LFE18
 2408 03d9 0200     		.2byte	0x2
 2409 03db 77       		.byte	0x77
 2410 03dc 18       		.sleb128 24
 2411 03dd 00000000 		.4byte	0x0
 2412 03e1 00000000 		.4byte	0x0
 2413              	.LLST19:
 2414 03e5 00000000 		.4byte	.LFB19
 2415 03e9 02000000 		.4byte	.LCFI53
 2416 03ed 0100     		.2byte	0x1
 2417 03ef 5D       		.byte	0x5d
 2418 03f0 02000000 		.4byte	.LCFI53
 2419 03f4 04000000 		.4byte	.LCFI54
 2420 03f8 0200     		.2byte	0x2
 2421 03fa 7D       		.byte	0x7d
 2422 03fb 08       		.sleb128 8
 2423 03fc 04000000 		.4byte	.LCFI54
 2424 0400 06000000 		.4byte	.LCFI55
 2425 0404 0200     		.2byte	0x2
 2426 0406 7D       		.byte	0x7d
 2427 0407 10       		.sleb128 16
 2428 0408 06000000 		.4byte	.LCFI55
 2429 040c 1C000000 		.4byte	.LFE19
 2430 0410 0200     		.2byte	0x2
 2431 0412 77       		.byte	0x77
 2432 0413 10       		.sleb128 16
 2433 0414 00000000 		.4byte	0x0
 2434 0418 00000000 		.4byte	0x0
 2435              	.LLST20:
 2436 041c 00000000 		.4byte	.LFB20
 2437 0420 02000000 		.4byte	.LCFI56
 2438 0424 0100     		.2byte	0x1
 2439 0426 5D       		.byte	0x5d
 2440 0427 02000000 		.4byte	.LCFI56
 2441 042b 04000000 		.4byte	.LCFI57
 2442 042f 0200     		.2byte	0x2
 2443 0431 7D       		.byte	0x7d
 2444 0432 08       		.sleb128 8
 2445 0433 04000000 		.4byte	.LCFI57
 2446 0437 18000000 		.4byte	.LFE20
 2447 043b 0200     		.2byte	0x2
 2448 043d 77       		.byte	0x77
 2449 043e 08       		.sleb128 8
 2450 043f 00000000 		.4byte	0x0
 2451 0443 00000000 		.4byte	0x0
 2452              	.LLST21:
 2453 0447 00000000 		.4byte	.LFB21
 2454 044b 02000000 		.4byte	.LCFI58
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 67


 2455 044f 0100     		.2byte	0x1
 2456 0451 5D       		.byte	0x5d
 2457 0452 02000000 		.4byte	.LCFI58
 2458 0456 04000000 		.4byte	.LCFI59
 2459 045a 0200     		.2byte	0x2
 2460 045c 7D       		.byte	0x7d
 2461 045d 08       		.sleb128 8
 2462 045e 04000000 		.4byte	.LCFI59
 2463 0462 06000000 		.4byte	.LCFI60
 2464 0466 0200     		.2byte	0x2
 2465 0468 7D       		.byte	0x7d
 2466 0469 18       		.sleb128 24
 2467 046a 06000000 		.4byte	.LCFI60
 2468 046e 4C000000 		.4byte	.LFE21
 2469 0472 0200     		.2byte	0x2
 2470 0474 77       		.byte	0x77
 2471 0475 18       		.sleb128 24
 2472 0476 00000000 		.4byte	0x0
 2473 047a 00000000 		.4byte	0x0
 2474              	.LLST22:
 2475 047e 00000000 		.4byte	.LFB22
 2476 0482 02000000 		.4byte	.LCFI61
 2477 0486 0100     		.2byte	0x1
 2478 0488 5D       		.byte	0x5d
 2479 0489 02000000 		.4byte	.LCFI61
 2480 048d 04000000 		.4byte	.LCFI62
 2481 0491 0200     		.2byte	0x2
 2482 0493 7D       		.byte	0x7d
 2483 0494 08       		.sleb128 8
 2484 0495 04000000 		.4byte	.LCFI62
 2485 0499 06000000 		.4byte	.LCFI63
 2486 049d 0200     		.2byte	0x2
 2487 049f 7D       		.byte	0x7d
 2488 04a0 10       		.sleb128 16
 2489 04a1 06000000 		.4byte	.LCFI63
 2490 04a5 1C000000 		.4byte	.LFE22
 2491 04a9 0200     		.2byte	0x2
 2492 04ab 77       		.byte	0x77
 2493 04ac 10       		.sleb128 16
 2494 04ad 00000000 		.4byte	0x0
 2495 04b1 00000000 		.4byte	0x0
 2496              	.LLST23:
 2497 04b5 00000000 		.4byte	.LFB23
 2498 04b9 02000000 		.4byte	.LCFI64
 2499 04bd 0100     		.2byte	0x1
 2500 04bf 5D       		.byte	0x5d
 2501 04c0 02000000 		.4byte	.LCFI64
 2502 04c4 04000000 		.4byte	.LCFI65
 2503 04c8 0200     		.2byte	0x2
 2504 04ca 7D       		.byte	0x7d
 2505 04cb 08       		.sleb128 8
 2506 04cc 04000000 		.4byte	.LCFI65
 2507 04d0 18000000 		.4byte	.LFE23
 2508 04d4 0200     		.2byte	0x2
 2509 04d6 77       		.byte	0x77
 2510 04d7 08       		.sleb128 8
 2511 04d8 00000000 		.4byte	0x0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 68


 2512 04dc 00000000 		.4byte	0x0
 2513              	.LLST24:
 2514 04e0 00000000 		.4byte	.LFB24
 2515 04e4 02000000 		.4byte	.LCFI66
 2516 04e8 0100     		.2byte	0x1
 2517 04ea 5D       		.byte	0x5d
 2518 04eb 02000000 		.4byte	.LCFI66
 2519 04ef 04000000 		.4byte	.LCFI67
 2520 04f3 0200     		.2byte	0x2
 2521 04f5 7D       		.byte	0x7d
 2522 04f6 08       		.sleb128 8
 2523 04f7 04000000 		.4byte	.LCFI67
 2524 04fb 06000000 		.4byte	.LCFI68
 2525 04ff 0200     		.2byte	0x2
 2526 0501 7D       		.byte	0x7d
 2527 0502 10       		.sleb128 16
 2528 0503 06000000 		.4byte	.LCFI68
 2529 0507 1C000000 		.4byte	.LFE24
 2530 050b 0200     		.2byte	0x2
 2531 050d 77       		.byte	0x77
 2532 050e 10       		.sleb128 16
 2533 050f 00000000 		.4byte	0x0
 2534 0513 00000000 		.4byte	0x0
 2535              	.LLST25:
 2536 0517 00000000 		.4byte	.LFB25
 2537 051b 02000000 		.4byte	.LCFI69
 2538 051f 0100     		.2byte	0x1
 2539 0521 5D       		.byte	0x5d
 2540 0522 02000000 		.4byte	.LCFI69
 2541 0526 04000000 		.4byte	.LCFI70
 2542 052a 0200     		.2byte	0x2
 2543 052c 7D       		.byte	0x7d
 2544 052d 08       		.sleb128 8
 2545 052e 04000000 		.4byte	.LCFI70
 2546 0532 18000000 		.4byte	.LFE25
 2547 0536 0200     		.2byte	0x2
 2548 0538 77       		.byte	0x77
 2549 0539 08       		.sleb128 8
 2550 053a 00000000 		.4byte	0x0
 2551 053e 00000000 		.4byte	0x0
 2552              	.LLST26:
 2553 0542 00000000 		.4byte	.LFB26
 2554 0546 02000000 		.4byte	.LCFI71
 2555 054a 0100     		.2byte	0x1
 2556 054c 5D       		.byte	0x5d
 2557 054d 02000000 		.4byte	.LCFI71
 2558 0551 04000000 		.4byte	.LCFI72
 2559 0555 0200     		.2byte	0x2
 2560 0557 7D       		.byte	0x7d
 2561 0558 08       		.sleb128 8
 2562 0559 04000000 		.4byte	.LCFI72
 2563 055d 18000000 		.4byte	.LFE26
 2564 0561 0200     		.2byte	0x2
 2565 0563 77       		.byte	0x77
 2566 0564 08       		.sleb128 8
 2567 0565 00000000 		.4byte	0x0
 2568 0569 00000000 		.4byte	0x0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 69


 2569              	.LLST27:
 2570 056d 00000000 		.4byte	.LFB27
 2571 0571 02000000 		.4byte	.LCFI73
 2572 0575 0100     		.2byte	0x1
 2573 0577 5D       		.byte	0x5d
 2574 0578 02000000 		.4byte	.LCFI73
 2575 057c 04000000 		.4byte	.LCFI74
 2576 0580 0200     		.2byte	0x2
 2577 0582 7D       		.byte	0x7d
 2578 0583 08       		.sleb128 8
 2579 0584 04000000 		.4byte	.LCFI74
 2580 0588 18000000 		.4byte	.LFE27
 2581 058c 0200     		.2byte	0x2
 2582 058e 77       		.byte	0x77
 2583 058f 08       		.sleb128 8
 2584 0590 00000000 		.4byte	0x0
 2585 0594 00000000 		.4byte	0x0
 2586              	.LLST28:
 2587 0598 00000000 		.4byte	.LFB28
 2588 059c 02000000 		.4byte	.LCFI75
 2589 05a0 0100     		.2byte	0x1
 2590 05a2 5D       		.byte	0x5d
 2591 05a3 02000000 		.4byte	.LCFI75
 2592 05a7 04000000 		.4byte	.LCFI76
 2593 05ab 0200     		.2byte	0x2
 2594 05ad 7D       		.byte	0x7d
 2595 05ae 08       		.sleb128 8
 2596 05af 04000000 		.4byte	.LCFI76
 2597 05b3 06000000 		.4byte	.LCFI77
 2598 05b7 0200     		.2byte	0x2
 2599 05b9 7D       		.byte	0x7d
 2600 05ba 18       		.sleb128 24
 2601 05bb 06000000 		.4byte	.LCFI77
 2602 05bf 44000000 		.4byte	.LFE28
 2603 05c3 0200     		.2byte	0x2
 2604 05c5 77       		.byte	0x77
 2605 05c6 18       		.sleb128 24
 2606 05c7 00000000 		.4byte	0x0
 2607 05cb 00000000 		.4byte	0x0
 2608              	.LLST29:
 2609 05cf 00000000 		.4byte	.LFB29
 2610 05d3 02000000 		.4byte	.LCFI78
 2611 05d7 0100     		.2byte	0x1
 2612 05d9 5D       		.byte	0x5d
 2613 05da 02000000 		.4byte	.LCFI78
 2614 05de 04000000 		.4byte	.LCFI79
 2615 05e2 0200     		.2byte	0x2
 2616 05e4 7D       		.byte	0x7d
 2617 05e5 08       		.sleb128 8
 2618 05e6 04000000 		.4byte	.LCFI79
 2619 05ea 06000000 		.4byte	.LCFI80
 2620 05ee 0200     		.2byte	0x2
 2621 05f0 7D       		.byte	0x7d
 2622 05f1 18       		.sleb128 24
 2623 05f2 06000000 		.4byte	.LCFI80
 2624 05f6 48000000 		.4byte	.LFE29
 2625 05fa 0200     		.2byte	0x2
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 70


 2626 05fc 77       		.byte	0x77
 2627 05fd 18       		.sleb128 24
 2628 05fe 00000000 		.4byte	0x0
 2629 0602 00000000 		.4byte	0x0
 2630              	.LLST30:
 2631 0606 00000000 		.4byte	.LFB30
 2632 060a 02000000 		.4byte	.LCFI81
 2633 060e 0100     		.2byte	0x1
 2634 0610 5D       		.byte	0x5d
 2635 0611 02000000 		.4byte	.LCFI81
 2636 0615 04000000 		.4byte	.LCFI82
 2637 0619 0200     		.2byte	0x2
 2638 061b 7D       		.byte	0x7d
 2639 061c 08       		.sleb128 8
 2640 061d 04000000 		.4byte	.LCFI82
 2641 0621 06000000 		.4byte	.LCFI83
 2642 0625 0200     		.2byte	0x2
 2643 0627 7D       		.byte	0x7d
 2644 0628 18       		.sleb128 24
 2645 0629 06000000 		.4byte	.LCFI83
 2646 062d 4C000000 		.4byte	.LFE30
 2647 0631 0200     		.2byte	0x2
 2648 0633 77       		.byte	0x77
 2649 0634 18       		.sleb128 24
 2650 0635 00000000 		.4byte	0x0
 2651 0639 00000000 		.4byte	0x0
 2652              	.LLST31:
 2653 063d 00000000 		.4byte	.LFB31
 2654 0641 02000000 		.4byte	.LCFI84
 2655 0645 0100     		.2byte	0x1
 2656 0647 5D       		.byte	0x5d
 2657 0648 02000000 		.4byte	.LCFI84
 2658 064c 04000000 		.4byte	.LCFI85
 2659 0650 0200     		.2byte	0x2
 2660 0652 7D       		.byte	0x7d
 2661 0653 08       		.sleb128 8
 2662 0654 04000000 		.4byte	.LCFI85
 2663 0658 06000000 		.4byte	.LCFI86
 2664 065c 0200     		.2byte	0x2
 2665 065e 7D       		.byte	0x7d
 2666 065f 18       		.sleb128 24
 2667 0660 06000000 		.4byte	.LCFI86
 2668 0664 48000000 		.4byte	.LFE31
 2669 0668 0200     		.2byte	0x2
 2670 066a 77       		.byte	0x77
 2671 066b 18       		.sleb128 24
 2672 066c 00000000 		.4byte	0x0
 2673 0670 00000000 		.4byte	0x0
 2674              	.LLST32:
 2675 0674 00000000 		.4byte	.LFB32
 2676 0678 02000000 		.4byte	.LCFI87
 2677 067c 0100     		.2byte	0x1
 2678 067e 5D       		.byte	0x5d
 2679 067f 02000000 		.4byte	.LCFI87
 2680 0683 04000000 		.4byte	.LCFI88
 2681 0687 0200     		.2byte	0x2
 2682 0689 7D       		.byte	0x7d
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 71


 2683 068a 08       		.sleb128 8
 2684 068b 04000000 		.4byte	.LCFI88
 2685 068f 06000000 		.4byte	.LCFI89
 2686 0693 0200     		.2byte	0x2
 2687 0695 7D       		.byte	0x7d
 2688 0696 18       		.sleb128 24
 2689 0697 06000000 		.4byte	.LCFI89
 2690 069b 48000000 		.4byte	.LFE32
 2691 069f 0200     		.2byte	0x2
 2692 06a1 77       		.byte	0x77
 2693 06a2 18       		.sleb128 24
 2694 06a3 00000000 		.4byte	0x0
 2695 06a7 00000000 		.4byte	0x0
 2696              	.LLST33:
 2697 06ab 00000000 		.4byte	.LFB33
 2698 06af 02000000 		.4byte	.LCFI90
 2699 06b3 0100     		.2byte	0x1
 2700 06b5 5D       		.byte	0x5d
 2701 06b6 02000000 		.4byte	.LCFI90
 2702 06ba 04000000 		.4byte	.LCFI91
 2703 06be 0200     		.2byte	0x2
 2704 06c0 7D       		.byte	0x7d
 2705 06c1 08       		.sleb128 8
 2706 06c2 04000000 		.4byte	.LCFI91
 2707 06c6 06000000 		.4byte	.LCFI92
 2708 06ca 0200     		.2byte	0x2
 2709 06cc 7D       		.byte	0x7d
 2710 06cd 18       		.sleb128 24
 2711 06ce 06000000 		.4byte	.LCFI92
 2712 06d2 3C000000 		.4byte	.LFE33
 2713 06d6 0200     		.2byte	0x2
 2714 06d8 77       		.byte	0x77
 2715 06d9 18       		.sleb128 24
 2716 06da 00000000 		.4byte	0x0
 2717 06de 00000000 		.4byte	0x0
 2718              	.LLST34:
 2719 06e2 00000000 		.4byte	.LFB34
 2720 06e6 02000000 		.4byte	.LCFI93
 2721 06ea 0100     		.2byte	0x1
 2722 06ec 5D       		.byte	0x5d
 2723 06ed 02000000 		.4byte	.LCFI93
 2724 06f1 04000000 		.4byte	.LCFI94
 2725 06f5 0200     		.2byte	0x2
 2726 06f7 7D       		.byte	0x7d
 2727 06f8 08       		.sleb128 8
 2728 06f9 04000000 		.4byte	.LCFI94
 2729 06fd 20000000 		.4byte	.LFE34
 2730 0701 0200     		.2byte	0x2
 2731 0703 77       		.byte	0x77
 2732 0704 08       		.sleb128 8
 2733 0705 00000000 		.4byte	0x0
 2734 0709 00000000 		.4byte	0x0
 2735              	.LLST35:
 2736 070d 00000000 		.4byte	.LFB35
 2737 0711 02000000 		.4byte	.LCFI95
 2738 0715 0100     		.2byte	0x1
 2739 0717 5D       		.byte	0x5d
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 72


 2740 0718 02000000 		.4byte	.LCFI95
 2741 071c 04000000 		.4byte	.LCFI96
 2742 0720 0200     		.2byte	0x2
 2743 0722 7D       		.byte	0x7d
 2744 0723 08       		.sleb128 8
 2745 0724 04000000 		.4byte	.LCFI96
 2746 0728 06000000 		.4byte	.LCFI97
 2747 072c 0200     		.2byte	0x2
 2748 072e 7D       		.byte	0x7d
 2749 072f 10       		.sleb128 16
 2750 0730 06000000 		.4byte	.LCFI97
 2751 0734 18000000 		.4byte	.LFE35
 2752 0738 0200     		.2byte	0x2
 2753 073a 77       		.byte	0x77
 2754 073b 10       		.sleb128 16
 2755 073c 00000000 		.4byte	0x0
 2756 0740 00000000 		.4byte	0x0
 2757              	.LLST36:
 2758 0744 00000000 		.4byte	.LFB36
 2759 0748 02000000 		.4byte	.LCFI98
 2760 074c 0100     		.2byte	0x1
 2761 074e 5D       		.byte	0x5d
 2762 074f 02000000 		.4byte	.LCFI98
 2763 0753 04000000 		.4byte	.LCFI99
 2764 0757 0200     		.2byte	0x2
 2765 0759 7D       		.byte	0x7d
 2766 075a 08       		.sleb128 8
 2767 075b 04000000 		.4byte	.LCFI99
 2768 075f 14000000 		.4byte	.LFE36
 2769 0763 0200     		.2byte	0x2
 2770 0765 77       		.byte	0x77
 2771 0766 08       		.sleb128 8
 2772 0767 00000000 		.4byte	0x0
 2773 076b 00000000 		.4byte	0x0
 2774              	.LLST37:
 2775 076f 00000000 		.4byte	.LFB37
 2776 0773 02000000 		.4byte	.LCFI100
 2777 0777 0100     		.2byte	0x1
 2778 0779 5D       		.byte	0x5d
 2779 077a 02000000 		.4byte	.LCFI100
 2780 077e 04000000 		.4byte	.LCFI101
 2781 0782 0200     		.2byte	0x2
 2782 0784 7D       		.byte	0x7d
 2783 0785 08       		.sleb128 8
 2784 0786 04000000 		.4byte	.LCFI101
 2785 078a 14000000 		.4byte	.LFE37
 2786 078e 0200     		.2byte	0x2
 2787 0790 77       		.byte	0x77
 2788 0791 08       		.sleb128 8
 2789 0792 00000000 		.4byte	0x0
 2790 0796 00000000 		.4byte	0x0
 2791              	.LLST38:
 2792 079a 00000000 		.4byte	.LFB38
 2793 079e 02000000 		.4byte	.LCFI102
 2794 07a2 0100     		.2byte	0x1
 2795 07a4 5D       		.byte	0x5d
 2796 07a5 02000000 		.4byte	.LCFI102
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 73


 2797 07a9 04000000 		.4byte	.LCFI103
 2798 07ad 0200     		.2byte	0x2
 2799 07af 7D       		.byte	0x7d
 2800 07b0 08       		.sleb128 8
 2801 07b1 04000000 		.4byte	.LCFI103
 2802 07b5 06000000 		.4byte	.LCFI104
 2803 07b9 0200     		.2byte	0x2
 2804 07bb 7D       		.byte	0x7d
 2805 07bc 10       		.sleb128 16
 2806 07bd 06000000 		.4byte	.LCFI104
 2807 07c1 18000000 		.4byte	.LFE38
 2808 07c5 0200     		.2byte	0x2
 2809 07c7 77       		.byte	0x77
 2810 07c8 10       		.sleb128 16
 2811 07c9 00000000 		.4byte	0x0
 2812 07cd 00000000 		.4byte	0x0
 2813              	.LLST39:
 2814 07d1 00000000 		.4byte	.LFB39
 2815 07d5 02000000 		.4byte	.LCFI105
 2816 07d9 0100     		.2byte	0x1
 2817 07db 5D       		.byte	0x5d
 2818 07dc 02000000 		.4byte	.LCFI105
 2819 07e0 04000000 		.4byte	.LCFI106
 2820 07e4 0200     		.2byte	0x2
 2821 07e6 7D       		.byte	0x7d
 2822 07e7 08       		.sleb128 8
 2823 07e8 04000000 		.4byte	.LCFI106
 2824 07ec 06000000 		.4byte	.LCFI107
 2825 07f0 0200     		.2byte	0x2
 2826 07f2 7D       		.byte	0x7d
 2827 07f3 10       		.sleb128 16
 2828 07f4 06000000 		.4byte	.LCFI107
 2829 07f8 18000000 		.4byte	.LFE39
 2830 07fc 0200     		.2byte	0x2
 2831 07fe 77       		.byte	0x77
 2832 07ff 10       		.sleb128 16
 2833 0800 00000000 		.4byte	0x0
 2834 0804 00000000 		.4byte	0x0
 2835              		.file 2 ".\\Generated_Source\\PSoC4\\/cytypes.h"
 2836              		.section	.debug_info
 2837 0000 7E070000 		.4byte	0x77e
 2838 0004 0200     		.2byte	0x2
 2839 0006 00000000 		.4byte	.Ldebug_abbrev0
 2840 000a 04       		.byte	0x4
 2841 000b 01       		.uleb128 0x1
 2842 000c 8B000000 		.4byte	.LASF74
 2843 0010 01       		.byte	0x1
 2844 0011 8F020000 		.4byte	.LASF75
 2845 0015 B0020000 		.4byte	.LASF76
 2846 0019 00000000 		.4byte	0x0
 2847 001d 00000000 		.4byte	0x0
 2848 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 2849 0025 00000000 		.4byte	.Ldebug_line0
 2850 0029 02       		.uleb128 0x2
 2851 002a 01       		.byte	0x1
 2852 002b 06       		.byte	0x6
 2853 002c BD000000 		.4byte	.LASF0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 74


 2854 0030 02       		.uleb128 0x2
 2855 0031 01       		.byte	0x1
 2856 0032 08       		.byte	0x8
 2857 0033 6D030000 		.4byte	.LASF1
 2858 0037 02       		.uleb128 0x2
 2859 0038 02       		.byte	0x2
 2860 0039 05       		.byte	0x5
 2861 003a B6030000 		.4byte	.LASF2
 2862 003e 02       		.uleb128 0x2
 2863 003f 02       		.byte	0x2
 2864 0040 07       		.byte	0x7
 2865 0041 C8010000 		.4byte	.LASF3
 2866 0045 02       		.uleb128 0x2
 2867 0046 04       		.byte	0x4
 2868 0047 05       		.byte	0x5
 2869 0048 F2000000 		.4byte	.LASF4
 2870 004c 02       		.uleb128 0x2
 2871 004d 04       		.byte	0x4
 2872 004e 07       		.byte	0x7
 2873 004f AD010000 		.4byte	.LASF5
 2874 0053 02       		.uleb128 0x2
 2875 0054 08       		.byte	0x8
 2876 0055 05       		.byte	0x5
 2877 0056 AF000000 		.4byte	.LASF6
 2878 005a 02       		.uleb128 0x2
 2879 005b 08       		.byte	0x8
 2880 005c 07       		.byte	0x7
 2881 005d 74000000 		.4byte	.LASF7
 2882 0061 03       		.uleb128 0x3
 2883 0062 04       		.byte	0x4
 2884 0063 05       		.byte	0x5
 2885 0064 696E7400 		.ascii	"int\000"
 2886 0068 02       		.uleb128 0x2
 2887 0069 04       		.byte	0x4
 2888 006a 07       		.byte	0x7
 2889 006b 98010000 		.4byte	.LASF8
 2890 006f 04       		.uleb128 0x4
 2891 0070 FB000000 		.4byte	.LASF9
 2892 0074 02       		.byte	0x2
 2893 0075 4C       		.byte	0x4c
 2894 0076 30000000 		.4byte	0x30
 2895 007a 04       		.uleb128 0x4
 2896 007b 3C010000 		.4byte	.LASF10
 2897 007f 02       		.byte	0x2
 2898 0080 4E       		.byte	0x4e
 2899 0081 4C000000 		.4byte	0x4c
 2900 0085 02       		.uleb128 0x2
 2901 0086 04       		.byte	0x4
 2902 0087 04       		.byte	0x4
 2903 0088 37030000 		.4byte	.LASF11
 2904 008c 02       		.uleb128 0x2
 2905 008d 08       		.byte	0x8
 2906 008e 04       		.byte	0x4
 2907 008f 01010000 		.4byte	.LASF12
 2908 0093 02       		.uleb128 0x2
 2909 0094 01       		.byte	0x1
 2910 0095 08       		.byte	0x8
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 75


 2911 0096 21040000 		.4byte	.LASF13
 2912 009a 05       		.uleb128 0x5
 2913 009b 04       		.byte	0x4
 2914 009c 07       		.byte	0x7
 2915 009d 06       		.uleb128 0x6
 2916 009e 01       		.byte	0x1
 2917 009f 47020000 		.4byte	.LASF14
 2918 00a3 01       		.byte	0x1
 2919 00a4 27       		.byte	0x27
 2920 00a5 01       		.byte	0x1
 2921 00a6 00000000 		.4byte	.LFB0
 2922 00aa 54000000 		.4byte	.LFE0
 2923 00ae 00000000 		.4byte	.LLST0
 2924 00b2 07       		.uleb128 0x7
 2925 00b3 01       		.byte	0x1
 2926 00b4 F8040000 		.4byte	.LASF16
 2927 00b8 01       		.byte	0x1
 2928 00b9 C2       		.byte	0xc2
 2929 00ba 01       		.byte	0x1
 2930 00bb 00000000 		.4byte	.LFB1
 2931 00bf 3C000000 		.4byte	.LFE1
 2932 00c3 2B000000 		.4byte	.LLST1
 2933 00c7 DA000000 		.4byte	0xda
 2934 00cb 08       		.uleb128 0x8
 2935 00cc 78040000 		.4byte	.LASF18
 2936 00d0 01       		.byte	0x1
 2937 00d1 C4       		.byte	0xc4
 2938 00d2 6F000000 		.4byte	0x6f
 2939 00d6 02       		.byte	0x2
 2940 00d7 91       		.byte	0x91
 2941 00d8 77       		.sleb128 -9
 2942 00d9 00       		.byte	0x0
 2943 00da 06       		.uleb128 0x6
 2944 00db 01       		.byte	0x1
 2945 00dc 15020000 		.4byte	.LASF15
 2946 00e0 01       		.byte	0x1
 2947 00e1 F1       		.byte	0xf1
 2948 00e2 01       		.byte	0x1
 2949 00e3 00000000 		.4byte	.LFB2
 2950 00e7 24000000 		.4byte	.LFE2
 2951 00eb 62000000 		.4byte	.LLST2
 2952 00ef 09       		.uleb128 0x9
 2953 00f0 01       		.byte	0x1
 2954 00f1 69000000 		.4byte	.LASF17
 2955 00f5 01       		.byte	0x1
 2956 00f6 0B01     		.2byte	0x10b
 2957 00f8 01       		.byte	0x1
 2958 00f9 00000000 		.4byte	.LFB3
 2959 00fd 34000000 		.4byte	.LFE3
 2960 0101 8D000000 		.4byte	.LLST3
 2961 0105 19010000 		.4byte	0x119
 2962 0109 0A       		.uleb128 0xa
 2963 010a 78040000 		.4byte	.LASF18
 2964 010e 01       		.byte	0x1
 2965 010f 0D01     		.2byte	0x10d
 2966 0111 6F000000 		.4byte	0x6f
 2967 0115 02       		.byte	0x2
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 76


 2968 0116 91       		.byte	0x91
 2969 0117 77       		.sleb128 -9
 2970 0118 00       		.byte	0x0
 2971 0119 09       		.uleb128 0x9
 2972 011a 01       		.byte	0x1
 2973 011b 2E010000 		.4byte	.LASF19
 2974 011f 01       		.byte	0x1
 2975 0120 3001     		.2byte	0x130
 2976 0122 01       		.byte	0x1
 2977 0123 00000000 		.4byte	.LFB4
 2978 0127 48000000 		.4byte	.LFE4
 2979 012b C4000000 		.4byte	.LLST4
 2980 012f 52010000 		.4byte	0x152
 2981 0133 0B       		.uleb128 0xb
 2982 0134 26040000 		.4byte	.LASF21
 2983 0138 01       		.byte	0x1
 2984 0139 3001     		.2byte	0x130
 2985 013b 7A000000 		.4byte	0x7a
 2986 013f 02       		.byte	0x2
 2987 0140 91       		.byte	0x91
 2988 0141 6C       		.sleb128 -20
 2989 0142 0A       		.uleb128 0xa
 2990 0143 78040000 		.4byte	.LASF18
 2991 0147 01       		.byte	0x1
 2992 0148 3201     		.2byte	0x132
 2993 014a 6F000000 		.4byte	0x6f
 2994 014e 02       		.byte	0x2
 2995 014f 91       		.byte	0x91
 2996 0150 77       		.sleb128 -9
 2997 0151 00       		.byte	0x0
 2998 0152 09       		.uleb128 0x9
 2999 0153 01       		.byte	0x1
 3000 0154 1A000000 		.4byte	.LASF20
 3001 0158 01       		.byte	0x1
 3002 0159 5101     		.2byte	0x151
 3003 015b 01       		.byte	0x1
 3004 015c 00000000 		.4byte	.LFB5
 3005 0160 48000000 		.4byte	.LFE5
 3006 0164 FB000000 		.4byte	.LLST5
 3007 0168 8B010000 		.4byte	0x18b
 3008 016c 0B       		.uleb128 0xb
 3009 016d 97000000 		.4byte	.LASF22
 3010 0171 01       		.byte	0x1
 3011 0172 5101     		.2byte	0x151
 3012 0174 7A000000 		.4byte	0x7a
 3013 0178 02       		.byte	0x2
 3014 0179 91       		.byte	0x91
 3015 017a 6C       		.sleb128 -20
 3016 017b 0A       		.uleb128 0xa
 3017 017c 78040000 		.4byte	.LASF18
 3018 0180 01       		.byte	0x1
 3019 0181 5301     		.2byte	0x153
 3020 0183 6F000000 		.4byte	0x6f
 3021 0187 02       		.byte	0x2
 3022 0188 91       		.byte	0x91
 3023 0189 77       		.sleb128 -9
 3024 018a 00       		.byte	0x0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 77


 3025 018b 09       		.uleb128 0x9
 3026 018c 01       		.byte	0x1
 3027 018d 47030000 		.4byte	.LASF23
 3028 0191 01       		.byte	0x1
 3029 0192 7601     		.2byte	0x176
 3030 0194 01       		.byte	0x1
 3031 0195 00000000 		.4byte	.LFB6
 3032 0199 48000000 		.4byte	.LFE6
 3033 019d 32010000 		.4byte	.LLST6
 3034 01a1 C4010000 		.4byte	0x1c4
 3035 01a5 0B       		.uleb128 0xb
 3036 01a6 3D030000 		.4byte	.LASF24
 3037 01aa 01       		.byte	0x1
 3038 01ab 7601     		.2byte	0x176
 3039 01ad 7A000000 		.4byte	0x7a
 3040 01b1 02       		.byte	0x2
 3041 01b2 91       		.byte	0x91
 3042 01b3 6C       		.sleb128 -20
 3043 01b4 0A       		.uleb128 0xa
 3044 01b5 78040000 		.4byte	.LASF18
 3045 01b9 01       		.byte	0x1
 3046 01ba 7801     		.2byte	0x178
 3047 01bc 6F000000 		.4byte	0x6f
 3048 01c0 02       		.byte	0x2
 3049 01c1 91       		.byte	0x91
 3050 01c2 77       		.sleb128 -9
 3051 01c3 00       		.byte	0x0
 3052 01c4 09       		.uleb128 0x9
 3053 01c5 01       		.byte	0x1
 3054 01c6 51000000 		.4byte	.LASF25
 3055 01ca 01       		.byte	0x1
 3056 01cb 9601     		.2byte	0x196
 3057 01cd 01       		.byte	0x1
 3058 01ce 00000000 		.4byte	.LFB7
 3059 01d2 50000000 		.4byte	.LFE7
 3060 01d6 69010000 		.4byte	.LLST7
 3061 01da FD010000 		.4byte	0x1fd
 3062 01de 0B       		.uleb128 0xb
 3063 01df 07020000 		.4byte	.LASF26
 3064 01e3 01       		.byte	0x1
 3065 01e4 9601     		.2byte	0x196
 3066 01e6 7A000000 		.4byte	0x7a
 3067 01ea 02       		.byte	0x2
 3068 01eb 91       		.byte	0x91
 3069 01ec 6C       		.sleb128 -20
 3070 01ed 0A       		.uleb128 0xa
 3071 01ee 78040000 		.4byte	.LASF18
 3072 01f2 01       		.byte	0x1
 3073 01f3 9801     		.2byte	0x198
 3074 01f5 6F000000 		.4byte	0x6f
 3075 01f9 02       		.byte	0x2
 3076 01fa 91       		.byte	0x91
 3077 01fb 77       		.sleb128 -9
 3078 01fc 00       		.byte	0x0
 3079 01fd 09       		.uleb128 0x9
 3080 01fe 01       		.byte	0x1
 3081 01ff 52020000 		.4byte	.LASF27
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 78


 3082 0203 01       		.byte	0x1
 3083 0204 CC01     		.2byte	0x1cc
 3084 0206 01       		.byte	0x1
 3085 0207 00000000 		.4byte	.LFB8
 3086 020b 1C000000 		.4byte	.LFE8
 3087 020f A0010000 		.4byte	.LLST8
 3088 0213 27020000 		.4byte	0x227
 3089 0217 0B       		.uleb128 0xb
 3090 0218 BF010000 		.4byte	.LASF28
 3091 021c 01       		.byte	0x1
 3092 021d CC01     		.2byte	0x1cc
 3093 021f 7A000000 		.4byte	0x7a
 3094 0223 02       		.byte	0x2
 3095 0224 91       		.byte	0x91
 3096 0225 74       		.sleb128 -12
 3097 0226 00       		.byte	0x0
 3098 0227 09       		.uleb128 0x9
 3099 0228 01       		.byte	0x1
 3100 0229 0C040000 		.4byte	.LASF29
 3101 022d 01       		.byte	0x1
 3102 022e F001     		.2byte	0x1f0
 3103 0230 01       		.byte	0x1
 3104 0231 00000000 		.4byte	.LFB9
 3105 0235 4C000000 		.4byte	.LFE9
 3106 0239 D7010000 		.4byte	.LLST9
 3107 023d 60020000 		.4byte	0x260
 3108 0241 0B       		.uleb128 0xb
 3109 0242 63020000 		.4byte	.LASF30
 3110 0246 01       		.byte	0x1
 3111 0247 F001     		.2byte	0x1f0
 3112 0249 7A000000 		.4byte	0x7a
 3113 024d 02       		.byte	0x2
 3114 024e 91       		.byte	0x91
 3115 024f 6C       		.sleb128 -20
 3116 0250 0A       		.uleb128 0xa
 3117 0251 78040000 		.4byte	.LASF18
 3118 0255 01       		.byte	0x1
 3119 0256 F201     		.2byte	0x1f2
 3120 0258 6F000000 		.4byte	0x6f
 3121 025c 02       		.byte	0x2
 3122 025d 91       		.byte	0x91
 3123 025e 77       		.sleb128 -9
 3124 025f 00       		.byte	0x0
 3125 0260 09       		.uleb128 0x9
 3126 0261 01       		.byte	0x1
 3127 0262 9E040000 		.4byte	.LASF31
 3128 0266 01       		.byte	0x1
 3129 0267 1202     		.2byte	0x212
 3130 0269 01       		.byte	0x1
 3131 026a 00000000 		.4byte	.LFB10
 3132 026e 4C000000 		.4byte	.LFE10
 3133 0272 0E020000 		.4byte	.LLST10
 3134 0276 99020000 		.4byte	0x299
 3135 027a 0B       		.uleb128 0xb
 3136 027b 90030000 		.4byte	.LASF32
 3137 027f 01       		.byte	0x1
 3138 0280 1202     		.2byte	0x212
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 79


 3139 0282 7A000000 		.4byte	0x7a
 3140 0286 02       		.byte	0x2
 3141 0287 91       		.byte	0x91
 3142 0288 6C       		.sleb128 -20
 3143 0289 0A       		.uleb128 0xa
 3144 028a 78040000 		.4byte	.LASF18
 3145 028e 01       		.byte	0x1
 3146 028f 1402     		.2byte	0x214
 3147 0291 6F000000 		.4byte	0x6f
 3148 0295 02       		.byte	0x2
 3149 0296 91       		.byte	0x91
 3150 0297 77       		.sleb128 -9
 3151 0298 00       		.byte	0x0
 3152 0299 09       		.uleb128 0x9
 3153 029a 01       		.byte	0x1
 3154 029b 2A000000 		.4byte	.LASF33
 3155 029f 01       		.byte	0x1
 3156 02a0 3302     		.2byte	0x233
 3157 02a2 01       		.byte	0x1
 3158 02a3 00000000 		.4byte	.LFB11
 3159 02a7 50000000 		.4byte	.LFE11
 3160 02ab 45020000 		.4byte	.LLST11
 3161 02af D2020000 		.4byte	0x2d2
 3162 02b3 0B       		.uleb128 0xb
 3163 02b4 69010000 		.4byte	.LASF34
 3164 02b8 01       		.byte	0x1
 3165 02b9 3302     		.2byte	0x233
 3166 02bb 7A000000 		.4byte	0x7a
 3167 02bf 02       		.byte	0x2
 3168 02c0 91       		.byte	0x91
 3169 02c1 6C       		.sleb128 -20
 3170 02c2 0A       		.uleb128 0xa
 3171 02c3 78040000 		.4byte	.LASF18
 3172 02c7 01       		.byte	0x1
 3173 02c8 3502     		.2byte	0x235
 3174 02ca 6F000000 		.4byte	0x6f
 3175 02ce 02       		.byte	0x2
 3176 02cf 91       		.byte	0x91
 3177 02d0 77       		.sleb128 -9
 3178 02d1 00       		.byte	0x0
 3179 02d2 09       		.uleb128 0x9
 3180 02d3 01       		.byte	0x1
 3181 02d4 F9030000 		.4byte	.LASF35
 3182 02d8 01       		.byte	0x1
 3183 02d9 5402     		.2byte	0x254
 3184 02db 01       		.byte	0x1
 3185 02dc 00000000 		.4byte	.LFB12
 3186 02e0 48000000 		.4byte	.LFE12
 3187 02e4 7C020000 		.4byte	.LLST12
 3188 02e8 0B030000 		.4byte	0x30b
 3189 02ec 0B       		.uleb128 0xb
 3190 02ed 64010000 		.4byte	.LASF36
 3191 02f1 01       		.byte	0x1
 3192 02f2 5402     		.2byte	0x254
 3193 02f4 7A000000 		.4byte	0x7a
 3194 02f8 02       		.byte	0x2
 3195 02f9 91       		.byte	0x91
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 80


 3196 02fa 6C       		.sleb128 -20
 3197 02fb 0A       		.uleb128 0xa
 3198 02fc 78040000 		.4byte	.LASF18
 3199 0300 01       		.byte	0x1
 3200 0301 5602     		.2byte	0x256
 3201 0303 6F000000 		.4byte	0x6f
 3202 0307 02       		.byte	0x2
 3203 0308 91       		.byte	0x91
 3204 0309 77       		.sleb128 -9
 3205 030a 00       		.byte	0x0
 3206 030b 09       		.uleb128 0x9
 3207 030c 01       		.byte	0x1
 3208 030d 5A030000 		.4byte	.LASF37
 3209 0311 01       		.byte	0x1
 3210 0312 7202     		.2byte	0x272
 3211 0314 01       		.byte	0x1
 3212 0315 00000000 		.4byte	.LFB13
 3213 0319 1C000000 		.4byte	.LFE13
 3214 031d B3020000 		.4byte	.LLST13
 3215 0321 35030000 		.4byte	0x335
 3216 0325 0B       		.uleb128 0xb
 3217 0326 00000000 		.4byte	.LASF38
 3218 032a 01       		.byte	0x1
 3219 032b 7202     		.2byte	0x272
 3220 032d 7A000000 		.4byte	0x7a
 3221 0331 02       		.byte	0x2
 3222 0332 91       		.byte	0x91
 3223 0333 74       		.sleb128 -12
 3224 0334 00       		.byte	0x0
 3225 0335 0C       		.uleb128 0xc
 3226 0336 01       		.byte	0x1
 3227 0337 3F000000 		.4byte	.LASF43
 3228 033b 01       		.byte	0x1
 3229 033c 8602     		.2byte	0x286
 3230 033e 01       		.byte	0x1
 3231 033f 7A000000 		.4byte	0x7a
 3232 0343 00000000 		.4byte	.LFB14
 3233 0347 18000000 		.4byte	.LFE14
 3234 034b EA020000 		.4byte	.LLST14
 3235 034f 09       		.uleb128 0x9
 3236 0350 01       		.byte	0x1
 3237 0351 DB010000 		.4byte	.LASF39
 3238 0355 01       		.byte	0x1
 3239 0356 A302     		.2byte	0x2a3
 3240 0358 01       		.byte	0x1
 3241 0359 00000000 		.4byte	.LFB15
 3242 035d 48000000 		.4byte	.LFE15
 3243 0361 15030000 		.4byte	.LLST15
 3244 0365 88030000 		.4byte	0x388
 3245 0369 0B       		.uleb128 0xb
 3246 036a 2B040000 		.4byte	.LASF40
 3247 036e 01       		.byte	0x1
 3248 036f A302     		.2byte	0x2a3
 3249 0371 7A000000 		.4byte	0x7a
 3250 0375 02       		.byte	0x2
 3251 0376 91       		.byte	0x91
 3252 0377 6C       		.sleb128 -20
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 81


 3253 0378 0A       		.uleb128 0xa
 3254 0379 78040000 		.4byte	.LASF18
 3255 037d 01       		.byte	0x1
 3256 037e A502     		.2byte	0x2a5
 3257 0380 6F000000 		.4byte	0x6f
 3258 0384 02       		.byte	0x2
 3259 0385 91       		.byte	0x91
 3260 0386 77       		.sleb128 -9
 3261 0387 00       		.byte	0x0
 3262 0388 09       		.uleb128 0x9
 3263 0389 01       		.byte	0x1
 3264 038a CE030000 		.4byte	.LASF41
 3265 038e 01       		.byte	0x1
 3266 038f C002     		.2byte	0x2c0
 3267 0391 01       		.byte	0x1
 3268 0392 00000000 		.4byte	.LFB16
 3269 0396 1C000000 		.4byte	.LFE16
 3270 039a 4C030000 		.4byte	.LLST16
 3271 039e B2030000 		.4byte	0x3b2
 3272 03a2 0B       		.uleb128 0xb
 3273 03a3 62000000 		.4byte	.LASF42
 3274 03a7 01       		.byte	0x1
 3275 03a8 C002     		.2byte	0x2c0
 3276 03aa 7A000000 		.4byte	0x7a
 3277 03ae 02       		.byte	0x2
 3278 03af 91       		.byte	0x91
 3279 03b0 74       		.sleb128 -12
 3280 03b1 00       		.byte	0x0
 3281 03b2 0C       		.uleb128 0xc
 3282 03b3 01       		.byte	0x1
 3283 03b4 72010000 		.4byte	.LASF44
 3284 03b8 01       		.byte	0x1
 3285 03b9 D402     		.2byte	0x2d4
 3286 03bb 01       		.byte	0x1
 3287 03bc 7A000000 		.4byte	0x7a
 3288 03c0 00000000 		.4byte	.LFB17
 3289 03c4 18000000 		.4byte	.LFE17
 3290 03c8 83030000 		.4byte	.LLST17
 3291 03cc 09       		.uleb128 0x9
 3292 03cd 01       		.byte	0x1
 3293 03ce A1030000 		.4byte	.LASF45
 3294 03d2 01       		.byte	0x1
 3295 03d3 EE02     		.2byte	0x2ee
 3296 03d5 01       		.byte	0x1
 3297 03d6 00000000 		.4byte	.LFB18
 3298 03da 48000000 		.4byte	.LFE18
 3299 03de AE030000 		.4byte	.LLST18
 3300 03e2 05040000 		.4byte	0x405
 3301 03e6 0B       		.uleb128 0xb
 3302 03e7 C7040000 		.4byte	.LASF46
 3303 03eb 01       		.byte	0x1
 3304 03ec EE02     		.2byte	0x2ee
 3305 03ee 7A000000 		.4byte	0x7a
 3306 03f2 02       		.byte	0x2
 3307 03f3 91       		.byte	0x91
 3308 03f4 6C       		.sleb128 -20
 3309 03f5 0A       		.uleb128 0xa
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 82


 3310 03f6 78040000 		.4byte	.LASF18
 3311 03fa 01       		.byte	0x1
 3312 03fb F002     		.2byte	0x2f0
 3313 03fd 6F000000 		.4byte	0x6f
 3314 0401 02       		.byte	0x2
 3315 0402 91       		.byte	0x91
 3316 0403 77       		.sleb128 -9
 3317 0404 00       		.byte	0x0
 3318 0405 09       		.uleb128 0x9
 3319 0406 01       		.byte	0x1
 3320 0407 C9000000 		.4byte	.LASF47
 3321 040b 01       		.byte	0x1
 3322 040c 0903     		.2byte	0x309
 3323 040e 01       		.byte	0x1
 3324 040f 00000000 		.4byte	.LFB19
 3325 0413 1C000000 		.4byte	.LFE19
 3326 0417 E5030000 		.4byte	.LLST19
 3327 041b 2F040000 		.4byte	0x42f
 3328 041f 0B       		.uleb128 0xb
 3329 0420 05050000 		.4byte	.LASF48
 3330 0424 01       		.byte	0x1
 3331 0425 0903     		.2byte	0x309
 3332 0427 7A000000 		.4byte	0x7a
 3333 042b 02       		.byte	0x2
 3334 042c 91       		.byte	0x91
 3335 042d 74       		.sleb128 -12
 3336 042e 00       		.byte	0x0
 3337 042f 0C       		.uleb128 0xc
 3338 0430 01       		.byte	0x1
 3339 0431 1A010000 		.4byte	.LASF49
 3340 0435 01       		.byte	0x1
 3341 0436 1D03     		.2byte	0x31d
 3342 0438 01       		.byte	0x1
 3343 0439 7A000000 		.4byte	0x7a
 3344 043d 00000000 		.4byte	.LFB20
 3345 0441 18000000 		.4byte	.LFE20
 3346 0445 1C040000 		.4byte	.LLST20
 3347 0449 09       		.uleb128 0x9
 3348 044a 01       		.byte	0x1
 3349 044b 06000000 		.4byte	.LASF50
 3350 044f 01       		.byte	0x1
 3351 0450 3703     		.2byte	0x337
 3352 0452 01       		.byte	0x1
 3353 0453 00000000 		.4byte	.LFB21
 3354 0457 4C000000 		.4byte	.LFE21
 3355 045b 47040000 		.4byte	.LLST21
 3356 045f 82040000 		.4byte	0x482
 3357 0463 0B       		.uleb128 0xb
 3358 0464 C7040000 		.4byte	.LASF46
 3359 0468 01       		.byte	0x1
 3360 0469 3703     		.2byte	0x337
 3361 046b 7A000000 		.4byte	0x7a
 3362 046f 02       		.byte	0x2
 3363 0470 91       		.byte	0x91
 3364 0471 6C       		.sleb128 -20
 3365 0472 0A       		.uleb128 0xa
 3366 0473 78040000 		.4byte	.LASF18
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 83


 3367 0477 01       		.byte	0x1
 3368 0478 3903     		.2byte	0x339
 3369 047a 6F000000 		.4byte	0x6f
 3370 047e 02       		.byte	0x2
 3371 047f 91       		.byte	0x91
 3372 0480 77       		.sleb128 -9
 3373 0481 00       		.byte	0x0
 3374 0482 09       		.uleb128 0x9
 3375 0483 01       		.byte	0x1
 3376 0484 34020000 		.4byte	.LASF51
 3377 0488 01       		.byte	0x1
 3378 0489 5403     		.2byte	0x354
 3379 048b 01       		.byte	0x1
 3380 048c 00000000 		.4byte	.LFB22
 3381 0490 1C000000 		.4byte	.LFE22
 3382 0494 7E040000 		.4byte	.LLST22
 3383 0498 AC040000 		.4byte	0x4ac
 3384 049c 0B       		.uleb128 0xb
 3385 049d 87020000 		.4byte	.LASF52
 3386 04a1 01       		.byte	0x1
 3387 04a2 5403     		.2byte	0x354
 3388 04a4 7A000000 		.4byte	0x7a
 3389 04a8 02       		.byte	0x2
 3390 04a9 91       		.byte	0x91
 3391 04aa 74       		.sleb128 -12
 3392 04ab 00       		.byte	0x0
 3393 04ac 0C       		.uleb128 0xc
 3394 04ad 01       		.byte	0x1
 3395 04ae B5040000 		.4byte	.LASF53
 3396 04b2 01       		.byte	0x1
 3397 04b3 6903     		.2byte	0x369
 3398 04b5 01       		.byte	0x1
 3399 04b6 7A000000 		.4byte	0x7a
 3400 04ba 00000000 		.4byte	.LFB23
 3401 04be 18000000 		.4byte	.LFE23
 3402 04c2 B5040000 		.4byte	.LLST23
 3403 04c6 09       		.uleb128 0x9
 3404 04c7 01       		.byte	0x1
 3405 04c8 62040000 		.4byte	.LASF54
 3406 04cc 01       		.byte	0x1
 3407 04cd 7E03     		.2byte	0x37e
 3408 04cf 01       		.byte	0x1
 3409 04d0 00000000 		.4byte	.LFB24
 3410 04d4 1C000000 		.4byte	.LFE24
 3411 04d8 E0040000 		.4byte	.LLST24
 3412 04dc F0040000 		.4byte	0x4f0
 3413 04e0 0B       		.uleb128 0xb
 3414 04e1 37040000 		.4byte	.LASF55
 3415 04e5 01       		.byte	0x1
 3416 04e6 7E03     		.2byte	0x37e
 3417 04e8 7A000000 		.4byte	0x7a
 3418 04ec 02       		.byte	0x2
 3419 04ed 91       		.byte	0x91
 3420 04ee 74       		.sleb128 -12
 3421 04ef 00       		.byte	0x0
 3422 04f0 0C       		.uleb128 0xc
 3423 04f1 01       		.byte	0x1
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 84


 3424 04f2 7B030000 		.4byte	.LASF56
 3425 04f6 01       		.byte	0x1
 3426 04f7 9303     		.2byte	0x393
 3427 04f9 01       		.byte	0x1
 3428 04fa 7A000000 		.4byte	0x7a
 3429 04fe 00000000 		.4byte	.LFB25
 3430 0502 18000000 		.4byte	.LFE25
 3431 0506 17050000 		.4byte	.LLST25
 3432 050a 0C       		.uleb128 0xc
 3433 050b 01       		.byte	0x1
 3434 050c 50040000 		.4byte	.LASF57
 3435 0510 01       		.byte	0x1
 3436 0511 A803     		.2byte	0x3a8
 3437 0513 01       		.byte	0x1
 3438 0514 7A000000 		.4byte	0x7a
 3439 0518 00000000 		.4byte	.LFB26
 3440 051c 18000000 		.4byte	.LFE26
 3441 0520 42050000 		.4byte	.LLST26
 3442 0524 0C       		.uleb128 0xc
 3443 0525 01       		.byte	0x1
 3444 0526 43010000 		.4byte	.LASF58
 3445 052a 01       		.byte	0x1
 3446 052b BD03     		.2byte	0x3bd
 3447 052d 01       		.byte	0x1
 3448 052e 7A000000 		.4byte	0x7a
 3449 0532 00000000 		.4byte	.LFB27
 3450 0536 18000000 		.4byte	.LFE27
 3451 053a 6D050000 		.4byte	.LLST27
 3452 053e 09       		.uleb128 0x9
 3453 053f 01       		.byte	0x1
 3454 0540 72020000 		.4byte	.LASF59
 3455 0544 01       		.byte	0x1
 3456 0545 D803     		.2byte	0x3d8
 3457 0547 01       		.byte	0x1
 3458 0548 00000000 		.4byte	.LFB28
 3459 054c 44000000 		.4byte	.LFE28
 3460 0550 98050000 		.4byte	.LLST28
 3461 0554 77050000 		.4byte	0x577
 3462 0558 0B       		.uleb128 0xb
 3463 0559 58010000 		.4byte	.LASF60
 3464 055d 01       		.byte	0x1
 3465 055e D803     		.2byte	0x3d8
 3466 0560 7A000000 		.4byte	0x7a
 3467 0564 02       		.byte	0x2
 3468 0565 91       		.byte	0x91
 3469 0566 6C       		.sleb128 -20
 3470 0567 0A       		.uleb128 0xa
 3471 0568 78040000 		.4byte	.LASF18
 3472 056c 01       		.byte	0x1
 3473 056d DA03     		.2byte	0x3da
 3474 056f 6F000000 		.4byte	0x6f
 3475 0573 02       		.byte	0x2
 3476 0574 91       		.byte	0x91
 3477 0575 77       		.sleb128 -9
 3478 0576 00       		.byte	0x0
 3479 0577 09       		.uleb128 0x9
 3480 0578 01       		.byte	0x1
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 85


 3481 0579 DE000000 		.4byte	.LASF61
 3482 057d 01       		.byte	0x1
 3483 057e F903     		.2byte	0x3f9
 3484 0580 01       		.byte	0x1
 3485 0581 00000000 		.4byte	.LFB29
 3486 0585 48000000 		.4byte	.LFE29
 3487 0589 CF050000 		.4byte	.LLST29
 3488 058d B0050000 		.4byte	0x5b0
 3489 0591 0B       		.uleb128 0xb
 3490 0592 58010000 		.4byte	.LASF60
 3491 0596 01       		.byte	0x1
 3492 0597 F903     		.2byte	0x3f9
 3493 0599 7A000000 		.4byte	0x7a
 3494 059d 02       		.byte	0x2
 3495 059e 91       		.byte	0x91
 3496 059f 6C       		.sleb128 -20
 3497 05a0 0A       		.uleb128 0xa
 3498 05a1 78040000 		.4byte	.LASF18
 3499 05a5 01       		.byte	0x1
 3500 05a6 FB03     		.2byte	0x3fb
 3501 05a8 6F000000 		.4byte	0x6f
 3502 05ac 02       		.byte	0x2
 3503 05ad 91       		.byte	0x91
 3504 05ae 77       		.sleb128 -9
 3505 05af 00       		.byte	0x0
 3506 05b0 09       		.uleb128 0x9
 3507 05b1 01       		.byte	0x1
 3508 05b2 21020000 		.4byte	.LASF62
 3509 05b6 01       		.byte	0x1
 3510 05b7 1A04     		.2byte	0x41a
 3511 05b9 01       		.byte	0x1
 3512 05ba 00000000 		.4byte	.LFB30
 3513 05be 4C000000 		.4byte	.LFE30
 3514 05c2 06060000 		.4byte	.LLST30
 3515 05c6 E9050000 		.4byte	0x5e9
 3516 05ca 0B       		.uleb128 0xb
 3517 05cb 58010000 		.4byte	.LASF60
 3518 05cf 01       		.byte	0x1
 3519 05d0 1A04     		.2byte	0x41a
 3520 05d2 7A000000 		.4byte	0x7a
 3521 05d6 02       		.byte	0x2
 3522 05d7 91       		.byte	0x91
 3523 05d8 6C       		.sleb128 -20
 3524 05d9 0A       		.uleb128 0xa
 3525 05da 78040000 		.4byte	.LASF18
 3526 05de 01       		.byte	0x1
 3527 05df 1C04     		.2byte	0x41c
 3528 05e1 6F000000 		.4byte	0x6f
 3529 05e5 02       		.byte	0x2
 3530 05e6 91       		.byte	0x91
 3531 05e7 77       		.sleb128 -9
 3532 05e8 00       		.byte	0x0
 3533 05e9 09       		.uleb128 0x9
 3534 05ea 01       		.byte	0x1
 3535 05eb 08010000 		.4byte	.LASF63
 3536 05ef 01       		.byte	0x1
 3537 05f0 3A04     		.2byte	0x43a
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 86


 3538 05f2 01       		.byte	0x1
 3539 05f3 00000000 		.4byte	.LFB31
 3540 05f7 48000000 		.4byte	.LFE31
 3541 05fb 3D060000 		.4byte	.LLST31
 3542 05ff 22060000 		.4byte	0x622
 3543 0603 0B       		.uleb128 0xb
 3544 0604 58010000 		.4byte	.LASF60
 3545 0608 01       		.byte	0x1
 3546 0609 3A04     		.2byte	0x43a
 3547 060b 7A000000 		.4byte	0x7a
 3548 060f 02       		.byte	0x2
 3549 0610 91       		.byte	0x91
 3550 0611 6C       		.sleb128 -20
 3551 0612 0A       		.uleb128 0xa
 3552 0613 78040000 		.4byte	.LASF18
 3553 0617 01       		.byte	0x1
 3554 0618 3C04     		.2byte	0x43c
 3555 061a 6F000000 		.4byte	0x6f
 3556 061e 02       		.byte	0x2
 3557 061f 91       		.byte	0x91
 3558 0620 77       		.sleb128 -9
 3559 0621 00       		.byte	0x0
 3560 0622 09       		.uleb128 0x9
 3561 0623 01       		.byte	0x1
 3562 0624 E5040000 		.4byte	.LASF64
 3563 0628 01       		.byte	0x1
 3564 0629 5B04     		.2byte	0x45b
 3565 062b 01       		.byte	0x1
 3566 062c 00000000 		.4byte	.LFB32
 3567 0630 48000000 		.4byte	.LFE32
 3568 0634 74060000 		.4byte	.LLST32
 3569 0638 5B060000 		.4byte	0x65b
 3570 063c 0B       		.uleb128 0xb
 3571 063d 58010000 		.4byte	.LASF60
 3572 0641 01       		.byte	0x1
 3573 0642 5B04     		.2byte	0x45b
 3574 0644 7A000000 		.4byte	0x7a
 3575 0648 02       		.byte	0x2
 3576 0649 91       		.byte	0x91
 3577 064a 6C       		.sleb128 -20
 3578 064b 0A       		.uleb128 0xa
 3579 064c 78040000 		.4byte	.LASF18
 3580 0650 01       		.byte	0x1
 3581 0651 5D04     		.2byte	0x45d
 3582 0653 6F000000 		.4byte	0x6f
 3583 0657 02       		.byte	0x2
 3584 0658 91       		.byte	0x91
 3585 0659 77       		.sleb128 -9
 3586 065a 00       		.byte	0x0
 3587 065b 09       		.uleb128 0x9
 3588 065c 01       		.byte	0x1
 3589 065d 83010000 		.4byte	.LASF65
 3590 0661 01       		.byte	0x1
 3591 0662 8304     		.2byte	0x483
 3592 0664 01       		.byte	0x1
 3593 0665 00000000 		.4byte	.LFB33
 3594 0669 3C000000 		.4byte	.LFE33
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 87


 3595 066d AB060000 		.4byte	.LLST33
 3596 0671 A3060000 		.4byte	0x6a3
 3597 0675 0B       		.uleb128 0xb
 3598 0676 64010000 		.4byte	.LASF36
 3599 067a 01       		.byte	0x1
 3600 067b 8304     		.2byte	0x483
 3601 067d 7A000000 		.4byte	0x7a
 3602 0681 02       		.byte	0x2
 3603 0682 91       		.byte	0x91
 3604 0683 6C       		.sleb128 -20
 3605 0684 0B       		.uleb128 0xb
 3606 0685 A5010000 		.4byte	.LASF66
 3607 0689 01       		.byte	0x1
 3608 068a 8304     		.2byte	0x483
 3609 068c 7A000000 		.4byte	0x7a
 3610 0690 02       		.byte	0x2
 3611 0691 91       		.byte	0x91
 3612 0692 68       		.sleb128 -24
 3613 0693 0A       		.uleb128 0xa
 3614 0694 78040000 		.4byte	.LASF18
 3615 0698 01       		.byte	0x1
 3616 0699 8504     		.2byte	0x485
 3617 069b 6F000000 		.4byte	0x6f
 3618 069f 02       		.byte	0x2
 3619 06a0 91       		.byte	0x91
 3620 06a1 77       		.sleb128 -9
 3621 06a2 00       		.byte	0x0
 3622 06a3 0C       		.uleb128 0xc
 3623 06a4 01       		.byte	0x1
 3624 06a5 9E000000 		.4byte	.LASF67
 3625 06a9 01       		.byte	0x1
 3626 06aa A004     		.2byte	0x4a0
 3627 06ac 01       		.byte	0x1
 3628 06ad 7A000000 		.4byte	0x7a
 3629 06b1 00000000 		.4byte	.LFB34
 3630 06b5 20000000 		.4byte	.LFE34
 3631 06b9 E2060000 		.4byte	.LLST34
 3632 06bd 09       		.uleb128 0x9
 3633 06be 01       		.byte	0x1
 3634 06bf F0010000 		.4byte	.LASF68
 3635 06c3 01       		.byte	0x1
 3636 06c4 B904     		.2byte	0x4b9
 3637 06c6 01       		.byte	0x1
 3638 06c7 00000000 		.4byte	.LFB35
 3639 06cb 18000000 		.4byte	.LFE35
 3640 06cf 0D070000 		.4byte	.LLST35
 3641 06d3 E7060000 		.4byte	0x6e7
 3642 06d7 0B       		.uleb128 0xb
 3643 06d8 C0030000 		.4byte	.LASF69
 3644 06dc 01       		.byte	0x1
 3645 06dd B904     		.2byte	0x4b9
 3646 06df 7A000000 		.4byte	0x7a
 3647 06e3 02       		.byte	0x2
 3648 06e4 91       		.byte	0x91
 3649 06e5 74       		.sleb128 -12
 3650 06e6 00       		.byte	0x0
 3651 06e7 0C       		.uleb128 0xc
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 88


 3652 06e8 01       		.byte	0x1
 3653 06e9 18030000 		.4byte	.LASF70
 3654 06ed 01       		.byte	0x1
 3655 06ee D004     		.2byte	0x4d0
 3656 06f0 01       		.byte	0x1
 3657 06f1 7A000000 		.4byte	0x7a
 3658 06f5 00000000 		.4byte	.LFB36
 3659 06f9 14000000 		.4byte	.LFE36
 3660 06fd 44070000 		.4byte	.LLST36
 3661 0701 0C       		.uleb128 0xc
 3662 0702 01       		.byte	0x1
 3663 0703 E0030000 		.4byte	.LASF71
 3664 0707 01       		.byte	0x1
 3665 0708 E704     		.2byte	0x4e7
 3666 070a 01       		.byte	0x1
 3667 070b 7A000000 		.4byte	0x7a
 3668 070f 00000000 		.4byte	.LFB37
 3669 0713 14000000 		.4byte	.LFE37
 3670 0717 6F070000 		.4byte	.LLST37
 3671 071b 09       		.uleb128 0x9
 3672 071c 01       		.byte	0x1
 3673 071d 89040000 		.4byte	.LASF72
 3674 0721 01       		.byte	0x1
 3675 0722 FE04     		.2byte	0x4fe
 3676 0724 01       		.byte	0x1
 3677 0725 00000000 		.4byte	.LFB38
 3678 0729 18000000 		.4byte	.LFE38
 3679 072d 9A070000 		.4byte	.LLST38
 3680 0731 45070000 		.4byte	0x745
 3681 0735 0B       		.uleb128 0xb
 3682 0736 C0030000 		.4byte	.LASF69
 3683 073a 01       		.byte	0x1
 3684 073b FE04     		.2byte	0x4fe
 3685 073d 7A000000 		.4byte	0x7a
 3686 0741 02       		.byte	0x2
 3687 0742 91       		.byte	0x91
 3688 0743 74       		.sleb128 -12
 3689 0744 00       		.byte	0x0
 3690 0745 09       		.uleb128 0x9
 3691 0746 01       		.byte	0x1
 3692 0747 D2040000 		.4byte	.LASF73
 3693 074b 01       		.byte	0x1
 3694 074c 1505     		.2byte	0x515
 3695 074e 01       		.byte	0x1
 3696 074f 00000000 		.4byte	.LFB39
 3697 0753 18000000 		.4byte	.LFE39
 3698 0757 D1070000 		.4byte	.LLST39
 3699 075b 6F070000 		.4byte	0x76f
 3700 075f 0B       		.uleb128 0xb
 3701 0760 C0030000 		.4byte	.LASF69
 3702 0764 01       		.byte	0x1
 3703 0765 1505     		.2byte	0x515
 3704 0767 7A000000 		.4byte	0x7a
 3705 076b 02       		.byte	0x2
 3706 076c 91       		.byte	0x91
 3707 076d 74       		.sleb128 -12
 3708 076e 00       		.byte	0x0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 89


 3709 076f 0D       		.uleb128 0xd
 3710 0770 42040000 		.4byte	.LASF77
 3711 0774 01       		.byte	0x1
 3712 0775 16       		.byte	0x16
 3713 0776 6F000000 		.4byte	0x6f
 3714 077a 01       		.byte	0x1
 3715 077b 05       		.byte	0x5
 3716 077c 03       		.byte	0x3
 3717 077d 00000000 		.4byte	PWM_R_initVar
 3718 0781 00       		.byte	0x0
 3719              		.section	.debug_abbrev
 3720 0000 01       		.uleb128 0x1
 3721 0001 11       		.uleb128 0x11
 3722 0002 01       		.byte	0x1
 3723 0003 25       		.uleb128 0x25
 3724 0004 0E       		.uleb128 0xe
 3725 0005 13       		.uleb128 0x13
 3726 0006 0B       		.uleb128 0xb
 3727 0007 03       		.uleb128 0x3
 3728 0008 0E       		.uleb128 0xe
 3729 0009 1B       		.uleb128 0x1b
 3730 000a 0E       		.uleb128 0xe
 3731 000b 11       		.uleb128 0x11
 3732 000c 01       		.uleb128 0x1
 3733 000d 52       		.uleb128 0x52
 3734 000e 01       		.uleb128 0x1
 3735 000f 55       		.uleb128 0x55
 3736 0010 06       		.uleb128 0x6
 3737 0011 10       		.uleb128 0x10
 3738 0012 06       		.uleb128 0x6
 3739 0013 00       		.byte	0x0
 3740 0014 00       		.byte	0x0
 3741 0015 02       		.uleb128 0x2
 3742 0016 24       		.uleb128 0x24
 3743 0017 00       		.byte	0x0
 3744 0018 0B       		.uleb128 0xb
 3745 0019 0B       		.uleb128 0xb
 3746 001a 3E       		.uleb128 0x3e
 3747 001b 0B       		.uleb128 0xb
 3748 001c 03       		.uleb128 0x3
 3749 001d 0E       		.uleb128 0xe
 3750 001e 00       		.byte	0x0
 3751 001f 00       		.byte	0x0
 3752 0020 03       		.uleb128 0x3
 3753 0021 24       		.uleb128 0x24
 3754 0022 00       		.byte	0x0
 3755 0023 0B       		.uleb128 0xb
 3756 0024 0B       		.uleb128 0xb
 3757 0025 3E       		.uleb128 0x3e
 3758 0026 0B       		.uleb128 0xb
 3759 0027 03       		.uleb128 0x3
 3760 0028 08       		.uleb128 0x8
 3761 0029 00       		.byte	0x0
 3762 002a 00       		.byte	0x0
 3763 002b 04       		.uleb128 0x4
 3764 002c 16       		.uleb128 0x16
 3765 002d 00       		.byte	0x0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 90


 3766 002e 03       		.uleb128 0x3
 3767 002f 0E       		.uleb128 0xe
 3768 0030 3A       		.uleb128 0x3a
 3769 0031 0B       		.uleb128 0xb
 3770 0032 3B       		.uleb128 0x3b
 3771 0033 0B       		.uleb128 0xb
 3772 0034 49       		.uleb128 0x49
 3773 0035 13       		.uleb128 0x13
 3774 0036 00       		.byte	0x0
 3775 0037 00       		.byte	0x0
 3776 0038 05       		.uleb128 0x5
 3777 0039 24       		.uleb128 0x24
 3778 003a 00       		.byte	0x0
 3779 003b 0B       		.uleb128 0xb
 3780 003c 0B       		.uleb128 0xb
 3781 003d 3E       		.uleb128 0x3e
 3782 003e 0B       		.uleb128 0xb
 3783 003f 00       		.byte	0x0
 3784 0040 00       		.byte	0x0
 3785 0041 06       		.uleb128 0x6
 3786 0042 2E       		.uleb128 0x2e
 3787 0043 00       		.byte	0x0
 3788 0044 3F       		.uleb128 0x3f
 3789 0045 0C       		.uleb128 0xc
 3790 0046 03       		.uleb128 0x3
 3791 0047 0E       		.uleb128 0xe
 3792 0048 3A       		.uleb128 0x3a
 3793 0049 0B       		.uleb128 0xb
 3794 004a 3B       		.uleb128 0x3b
 3795 004b 0B       		.uleb128 0xb
 3796 004c 27       		.uleb128 0x27
 3797 004d 0C       		.uleb128 0xc
 3798 004e 11       		.uleb128 0x11
 3799 004f 01       		.uleb128 0x1
 3800 0050 12       		.uleb128 0x12
 3801 0051 01       		.uleb128 0x1
 3802 0052 40       		.uleb128 0x40
 3803 0053 06       		.uleb128 0x6
 3804 0054 00       		.byte	0x0
 3805 0055 00       		.byte	0x0
 3806 0056 07       		.uleb128 0x7
 3807 0057 2E       		.uleb128 0x2e
 3808 0058 01       		.byte	0x1
 3809 0059 3F       		.uleb128 0x3f
 3810 005a 0C       		.uleb128 0xc
 3811 005b 03       		.uleb128 0x3
 3812 005c 0E       		.uleb128 0xe
 3813 005d 3A       		.uleb128 0x3a
 3814 005e 0B       		.uleb128 0xb
 3815 005f 3B       		.uleb128 0x3b
 3816 0060 0B       		.uleb128 0xb
 3817 0061 27       		.uleb128 0x27
 3818 0062 0C       		.uleb128 0xc
 3819 0063 11       		.uleb128 0x11
 3820 0064 01       		.uleb128 0x1
 3821 0065 12       		.uleb128 0x12
 3822 0066 01       		.uleb128 0x1
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 91


 3823 0067 40       		.uleb128 0x40
 3824 0068 06       		.uleb128 0x6
 3825 0069 01       		.uleb128 0x1
 3826 006a 13       		.uleb128 0x13
 3827 006b 00       		.byte	0x0
 3828 006c 00       		.byte	0x0
 3829 006d 08       		.uleb128 0x8
 3830 006e 34       		.uleb128 0x34
 3831 006f 00       		.byte	0x0
 3832 0070 03       		.uleb128 0x3
 3833 0071 0E       		.uleb128 0xe
 3834 0072 3A       		.uleb128 0x3a
 3835 0073 0B       		.uleb128 0xb
 3836 0074 3B       		.uleb128 0x3b
 3837 0075 0B       		.uleb128 0xb
 3838 0076 49       		.uleb128 0x49
 3839 0077 13       		.uleb128 0x13
 3840 0078 02       		.uleb128 0x2
 3841 0079 0A       		.uleb128 0xa
 3842 007a 00       		.byte	0x0
 3843 007b 00       		.byte	0x0
 3844 007c 09       		.uleb128 0x9
 3845 007d 2E       		.uleb128 0x2e
 3846 007e 01       		.byte	0x1
 3847 007f 3F       		.uleb128 0x3f
 3848 0080 0C       		.uleb128 0xc
 3849 0081 03       		.uleb128 0x3
 3850 0082 0E       		.uleb128 0xe
 3851 0083 3A       		.uleb128 0x3a
 3852 0084 0B       		.uleb128 0xb
 3853 0085 3B       		.uleb128 0x3b
 3854 0086 05       		.uleb128 0x5
 3855 0087 27       		.uleb128 0x27
 3856 0088 0C       		.uleb128 0xc
 3857 0089 11       		.uleb128 0x11
 3858 008a 01       		.uleb128 0x1
 3859 008b 12       		.uleb128 0x12
 3860 008c 01       		.uleb128 0x1
 3861 008d 40       		.uleb128 0x40
 3862 008e 06       		.uleb128 0x6
 3863 008f 01       		.uleb128 0x1
 3864 0090 13       		.uleb128 0x13
 3865 0091 00       		.byte	0x0
 3866 0092 00       		.byte	0x0
 3867 0093 0A       		.uleb128 0xa
 3868 0094 34       		.uleb128 0x34
 3869 0095 00       		.byte	0x0
 3870 0096 03       		.uleb128 0x3
 3871 0097 0E       		.uleb128 0xe
 3872 0098 3A       		.uleb128 0x3a
 3873 0099 0B       		.uleb128 0xb
 3874 009a 3B       		.uleb128 0x3b
 3875 009b 05       		.uleb128 0x5
 3876 009c 49       		.uleb128 0x49
 3877 009d 13       		.uleb128 0x13
 3878 009e 02       		.uleb128 0x2
 3879 009f 0A       		.uleb128 0xa
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 92


 3880 00a0 00       		.byte	0x0
 3881 00a1 00       		.byte	0x0
 3882 00a2 0B       		.uleb128 0xb
 3883 00a3 05       		.uleb128 0x5
 3884 00a4 00       		.byte	0x0
 3885 00a5 03       		.uleb128 0x3
 3886 00a6 0E       		.uleb128 0xe
 3887 00a7 3A       		.uleb128 0x3a
 3888 00a8 0B       		.uleb128 0xb
 3889 00a9 3B       		.uleb128 0x3b
 3890 00aa 05       		.uleb128 0x5
 3891 00ab 49       		.uleb128 0x49
 3892 00ac 13       		.uleb128 0x13
 3893 00ad 02       		.uleb128 0x2
 3894 00ae 0A       		.uleb128 0xa
 3895 00af 00       		.byte	0x0
 3896 00b0 00       		.byte	0x0
 3897 00b1 0C       		.uleb128 0xc
 3898 00b2 2E       		.uleb128 0x2e
 3899 00b3 00       		.byte	0x0
 3900 00b4 3F       		.uleb128 0x3f
 3901 00b5 0C       		.uleb128 0xc
 3902 00b6 03       		.uleb128 0x3
 3903 00b7 0E       		.uleb128 0xe
 3904 00b8 3A       		.uleb128 0x3a
 3905 00b9 0B       		.uleb128 0xb
 3906 00ba 3B       		.uleb128 0x3b
 3907 00bb 05       		.uleb128 0x5
 3908 00bc 27       		.uleb128 0x27
 3909 00bd 0C       		.uleb128 0xc
 3910 00be 49       		.uleb128 0x49
 3911 00bf 13       		.uleb128 0x13
 3912 00c0 11       		.uleb128 0x11
 3913 00c1 01       		.uleb128 0x1
 3914 00c2 12       		.uleb128 0x12
 3915 00c3 01       		.uleb128 0x1
 3916 00c4 40       		.uleb128 0x40
 3917 00c5 06       		.uleb128 0x6
 3918 00c6 00       		.byte	0x0
 3919 00c7 00       		.byte	0x0
 3920 00c8 0D       		.uleb128 0xd
 3921 00c9 34       		.uleb128 0x34
 3922 00ca 00       		.byte	0x0
 3923 00cb 03       		.uleb128 0x3
 3924 00cc 0E       		.uleb128 0xe
 3925 00cd 3A       		.uleb128 0x3a
 3926 00ce 0B       		.uleb128 0xb
 3927 00cf 3B       		.uleb128 0x3b
 3928 00d0 0B       		.uleb128 0xb
 3929 00d1 49       		.uleb128 0x49
 3930 00d2 13       		.uleb128 0x13
 3931 00d3 3F       		.uleb128 0x3f
 3932 00d4 0C       		.uleb128 0xc
 3933 00d5 02       		.uleb128 0x2
 3934 00d6 0A       		.uleb128 0xa
 3935 00d7 00       		.byte	0x0
 3936 00d8 00       		.byte	0x0
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 93


 3937 00d9 00       		.byte	0x0
 3938              		.section	.debug_pubnames,"",%progbits
 3939 0000 BA030000 		.4byte	0x3ba
 3940 0004 0200     		.2byte	0x2
 3941 0006 00000000 		.4byte	.Ldebug_info0
 3942 000a 82070000 		.4byte	0x782
 3943 000e 9D000000 		.4byte	0x9d
 3944 0012 50574D5F 		.ascii	"PWM_R_Init\000"
 3944      525F496E 
 3944      697400
 3945 001d B2000000 		.4byte	0xb2
 3946 0021 50574D5F 		.ascii	"PWM_R_Enable\000"
 3946      525F456E 
 3946      61626C65 
 3946      00
 3947 002e DA000000 		.4byte	0xda
 3948 0032 50574D5F 		.ascii	"PWM_R_Start\000"
 3948      525F5374 
 3948      61727400 
 3949 003e EF000000 		.4byte	0xef
 3950 0042 50574D5F 		.ascii	"PWM_R_Stop\000"
 3950      525F5374 
 3950      6F7000
 3951 004d 19010000 		.4byte	0x119
 3952 0051 50574D5F 		.ascii	"PWM_R_SetMode\000"
 3952      525F5365 
 3952      744D6F64 
 3952      6500
 3953 005f 52010000 		.4byte	0x152
 3954 0063 50574D5F 		.ascii	"PWM_R_SetQDMode\000"
 3954      525F5365 
 3954      7451444D 
 3954      6F646500 
 3955 0073 8B010000 		.4byte	0x18b
 3956 0077 50574D5F 		.ascii	"PWM_R_SetPrescaler\000"
 3956      525F5365 
 3956      74507265 
 3956      7363616C 
 3956      657200
 3957 008a C4010000 		.4byte	0x1c4
 3958 008e 50574D5F 		.ascii	"PWM_R_SetOneShot\000"
 3958      525F5365 
 3958      744F6E65 
 3958      53686F74 
 3958      00
 3959 009f FD010000 		.4byte	0x1fd
 3960 00a3 50574D5F 		.ascii	"PWM_R_SetPWMMode\000"
 3960      525F5365 
 3960      7450574D 
 3960      4D6F6465 
 3960      00
 3961 00b4 27020000 		.4byte	0x227
 3962 00b8 50574D5F 		.ascii	"PWM_R_SetPWMSyncKill\000"
 3962      525F5365 
 3962      7450574D 
 3962      53796E63 
 3962      4B696C6C 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 94


 3963 00cd 60020000 		.4byte	0x260
 3964 00d1 50574D5F 		.ascii	"PWM_R_SetPWMStopOnKill\000"
 3964      525F5365 
 3964      7450574D 
 3964      53746F70 
 3964      4F6E4B69 
 3965 00e8 99020000 		.4byte	0x299
 3966 00ec 50574D5F 		.ascii	"PWM_R_SetPWMDeadTime\000"
 3966      525F5365 
 3966      7450574D 
 3966      44656164 
 3966      54696D65 
 3967 0101 D2020000 		.4byte	0x2d2
 3968 0105 50574D5F 		.ascii	"PWM_R_SetPWMInvert\000"
 3968      525F5365 
 3968      7450574D 
 3968      496E7665 
 3968      727400
 3969 0118 0B030000 		.4byte	0x30b
 3970 011c 50574D5F 		.ascii	"PWM_R_WriteCounter\000"
 3970      525F5772 
 3970      69746543 
 3970      6F756E74 
 3970      657200
 3971 012f 35030000 		.4byte	0x335
 3972 0133 50574D5F 		.ascii	"PWM_R_ReadCounter\000"
 3972      525F5265 
 3972      6164436F 
 3972      756E7465 
 3972      7200
 3973 0145 4F030000 		.4byte	0x34f
 3974 0149 50574D5F 		.ascii	"PWM_R_SetCounterMode\000"
 3974      525F5365 
 3974      74436F75 
 3974      6E746572 
 3974      4D6F6465 
 3975 015e 88030000 		.4byte	0x388
 3976 0162 50574D5F 		.ascii	"PWM_R_WritePeriod\000"
 3976      525F5772 
 3976      69746550 
 3976      6572696F 
 3976      6400
 3977 0174 B2030000 		.4byte	0x3b2
 3978 0178 50574D5F 		.ascii	"PWM_R_ReadPeriod\000"
 3978      525F5265 
 3978      61645065 
 3978      72696F64 
 3978      00
 3979 0189 CC030000 		.4byte	0x3cc
 3980 018d 50574D5F 		.ascii	"PWM_R_SetCompareSwap\000"
 3980      525F5365 
 3980      74436F6D 
 3980      70617265 
 3980      53776170 
 3981 01a2 05040000 		.4byte	0x405
 3982 01a6 50574D5F 		.ascii	"PWM_R_WritePeriodBuf\000"
 3982      525F5772 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 95


 3982      69746550 
 3982      6572696F 
 3982      64427566 
 3983 01bb 2F040000 		.4byte	0x42f
 3984 01bf 50574D5F 		.ascii	"PWM_R_ReadPeriodBuf\000"
 3984      525F5265 
 3984      61645065 
 3984      72696F64 
 3984      42756600 
 3985 01d3 49040000 		.4byte	0x449
 3986 01d7 50574D5F 		.ascii	"PWM_R_SetPeriodSwap\000"
 3986      525F5365 
 3986      74506572 
 3986      696F6453 
 3986      77617000 
 3987 01eb 82040000 		.4byte	0x482
 3988 01ef 50574D5F 		.ascii	"PWM_R_WriteCompare\000"
 3988      525F5772 
 3988      69746543 
 3988      6F6D7061 
 3988      726500
 3989 0202 AC040000 		.4byte	0x4ac
 3990 0206 50574D5F 		.ascii	"PWM_R_ReadCompare\000"
 3990      525F5265 
 3990      6164436F 
 3990      6D706172 
 3990      6500
 3991 0218 C6040000 		.4byte	0x4c6
 3992 021c 50574D5F 		.ascii	"PWM_R_WriteCompareBuf\000"
 3992      525F5772 
 3992      69746543 
 3992      6F6D7061 
 3992      72654275 
 3993 0232 F0040000 		.4byte	0x4f0
 3994 0236 50574D5F 		.ascii	"PWM_R_ReadCompareBuf\000"
 3994      525F5265 
 3994      6164436F 
 3994      6D706172 
 3994      65427566 
 3995 024b 0A050000 		.4byte	0x50a
 3996 024f 50574D5F 		.ascii	"PWM_R_ReadCapture\000"
 3996      525F5265 
 3996      61644361 
 3996      70747572 
 3996      6500
 3997 0261 24050000 		.4byte	0x524
 3998 0265 50574D5F 		.ascii	"PWM_R_ReadCaptureBuf\000"
 3998      525F5265 
 3998      61644361 
 3998      70747572 
 3998      65427566 
 3999 027a 3E050000 		.4byte	0x53e
 4000 027e 50574D5F 		.ascii	"PWM_R_SetCaptureMode\000"
 4000      525F5365 
 4000      74436170 
 4000      74757265 
 4000      4D6F6465 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 96


 4001 0293 77050000 		.4byte	0x577
 4002 0297 50574D5F 		.ascii	"PWM_R_SetReloadMode\000"
 4002      525F5365 
 4002      7452656C 
 4002      6F61644D 
 4002      6F646500 
 4003 02ab B0050000 		.4byte	0x5b0
 4004 02af 50574D5F 		.ascii	"PWM_R_SetStartMode\000"
 4004      525F5365 
 4004      74537461 
 4004      72744D6F 
 4004      646500
 4005 02c2 E9050000 		.4byte	0x5e9
 4006 02c6 50574D5F 		.ascii	"PWM_R_SetStopMode\000"
 4006      525F5365 
 4006      7453746F 
 4006      704D6F64 
 4006      6500
 4007 02d8 22060000 		.4byte	0x622
 4008 02dc 50574D5F 		.ascii	"PWM_R_SetCountMode\000"
 4008      525F5365 
 4008      74436F75 
 4008      6E744D6F 
 4008      646500
 4009 02ef 5B060000 		.4byte	0x65b
 4010 02f3 50574D5F 		.ascii	"PWM_R_TriggerCommand\000"
 4010      525F5472 
 4010      69676765 
 4010      72436F6D 
 4010      6D616E64 
 4011 0308 A3060000 		.4byte	0x6a3
 4012 030c 50574D5F 		.ascii	"PWM_R_ReadStatus\000"
 4012      525F5265 
 4012      61645374 
 4012      61747573 
 4012      00
 4013 031d BD060000 		.4byte	0x6bd
 4014 0321 50574D5F 		.ascii	"PWM_R_SetInterruptMode\000"
 4014      525F5365 
 4014      74496E74 
 4014      65727275 
 4014      70744D6F 
 4015 0338 E7060000 		.4byte	0x6e7
 4016 033c 50574D5F 		.ascii	"PWM_R_GetInterruptSourceMasked\000"
 4016      525F4765 
 4016      74496E74 
 4016      65727275 
 4016      7074536F 
 4017 035b 01070000 		.4byte	0x701
 4018 035f 50574D5F 		.ascii	"PWM_R_GetInterruptSource\000"
 4018      525F4765 
 4018      74496E74 
 4018      65727275 
 4018      7074536F 
 4019 0378 1B070000 		.4byte	0x71b
 4020 037c 50574D5F 		.ascii	"PWM_R_ClearInterrupt\000"
 4020      525F436C 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 97


 4020      65617249 
 4020      6E746572 
 4020      72757074 
 4021 0391 45070000 		.4byte	0x745
 4022 0395 50574D5F 		.ascii	"PWM_R_SetInterrupt\000"
 4022      525F5365 
 4022      74496E74 
 4022      65727275 
 4022      707400
 4023 03a8 6F070000 		.4byte	0x76f
 4024 03ac 50574D5F 		.ascii	"PWM_R_initVar\000"
 4024      525F696E 
 4024      69745661 
 4024      7200
 4025 03ba 00000000 		.4byte	0x0
 4026              		.section	.debug_aranges,"",%progbits
 4027 0000 54010000 		.4byte	0x154
 4028 0004 0200     		.2byte	0x2
 4029 0006 00000000 		.4byte	.Ldebug_info0
 4030 000a 04       		.byte	0x4
 4031 000b 00       		.byte	0x0
 4032 000c 0000     		.2byte	0x0
 4033 000e 0000     		.2byte	0x0
 4034 0010 00000000 		.4byte	.LFB0
 4035 0014 54000000 		.4byte	.LFE0-.LFB0
 4036 0018 00000000 		.4byte	.LFB1
 4037 001c 3C000000 		.4byte	.LFE1-.LFB1
 4038 0020 00000000 		.4byte	.LFB2
 4039 0024 24000000 		.4byte	.LFE2-.LFB2
 4040 0028 00000000 		.4byte	.LFB3
 4041 002c 34000000 		.4byte	.LFE3-.LFB3
 4042 0030 00000000 		.4byte	.LFB4
 4043 0034 48000000 		.4byte	.LFE4-.LFB4
 4044 0038 00000000 		.4byte	.LFB5
 4045 003c 48000000 		.4byte	.LFE5-.LFB5
 4046 0040 00000000 		.4byte	.LFB6
 4047 0044 48000000 		.4byte	.LFE6-.LFB6
 4048 0048 00000000 		.4byte	.LFB7
 4049 004c 50000000 		.4byte	.LFE7-.LFB7
 4050 0050 00000000 		.4byte	.LFB8
 4051 0054 1C000000 		.4byte	.LFE8-.LFB8
 4052 0058 00000000 		.4byte	.LFB9
 4053 005c 4C000000 		.4byte	.LFE9-.LFB9
 4054 0060 00000000 		.4byte	.LFB10
 4055 0064 4C000000 		.4byte	.LFE10-.LFB10
 4056 0068 00000000 		.4byte	.LFB11
 4057 006c 50000000 		.4byte	.LFE11-.LFB11
 4058 0070 00000000 		.4byte	.LFB12
 4059 0074 48000000 		.4byte	.LFE12-.LFB12
 4060 0078 00000000 		.4byte	.LFB13
 4061 007c 1C000000 		.4byte	.LFE13-.LFB13
 4062 0080 00000000 		.4byte	.LFB14
 4063 0084 18000000 		.4byte	.LFE14-.LFB14
 4064 0088 00000000 		.4byte	.LFB15
 4065 008c 48000000 		.4byte	.LFE15-.LFB15
 4066 0090 00000000 		.4byte	.LFB16
 4067 0094 1C000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 98


 4068 0098 00000000 		.4byte	.LFB17
 4069 009c 18000000 		.4byte	.LFE17-.LFB17
 4070 00a0 00000000 		.4byte	.LFB18
 4071 00a4 48000000 		.4byte	.LFE18-.LFB18
 4072 00a8 00000000 		.4byte	.LFB19
 4073 00ac 1C000000 		.4byte	.LFE19-.LFB19
 4074 00b0 00000000 		.4byte	.LFB20
 4075 00b4 18000000 		.4byte	.LFE20-.LFB20
 4076 00b8 00000000 		.4byte	.LFB21
 4077 00bc 4C000000 		.4byte	.LFE21-.LFB21
 4078 00c0 00000000 		.4byte	.LFB22
 4079 00c4 1C000000 		.4byte	.LFE22-.LFB22
 4080 00c8 00000000 		.4byte	.LFB23
 4081 00cc 18000000 		.4byte	.LFE23-.LFB23
 4082 00d0 00000000 		.4byte	.LFB24
 4083 00d4 1C000000 		.4byte	.LFE24-.LFB24
 4084 00d8 00000000 		.4byte	.LFB25
 4085 00dc 18000000 		.4byte	.LFE25-.LFB25
 4086 00e0 00000000 		.4byte	.LFB26
 4087 00e4 18000000 		.4byte	.LFE26-.LFB26
 4088 00e8 00000000 		.4byte	.LFB27
 4089 00ec 18000000 		.4byte	.LFE27-.LFB27
 4090 00f0 00000000 		.4byte	.LFB28
 4091 00f4 44000000 		.4byte	.LFE28-.LFB28
 4092 00f8 00000000 		.4byte	.LFB29
 4093 00fc 48000000 		.4byte	.LFE29-.LFB29
 4094 0100 00000000 		.4byte	.LFB30
 4095 0104 4C000000 		.4byte	.LFE30-.LFB30
 4096 0108 00000000 		.4byte	.LFB31
 4097 010c 48000000 		.4byte	.LFE31-.LFB31
 4098 0110 00000000 		.4byte	.LFB32
 4099 0114 48000000 		.4byte	.LFE32-.LFB32
 4100 0118 00000000 		.4byte	.LFB33
 4101 011c 3C000000 		.4byte	.LFE33-.LFB33
 4102 0120 00000000 		.4byte	.LFB34
 4103 0124 20000000 		.4byte	.LFE34-.LFB34
 4104 0128 00000000 		.4byte	.LFB35
 4105 012c 18000000 		.4byte	.LFE35-.LFB35
 4106 0130 00000000 		.4byte	.LFB36
 4107 0134 14000000 		.4byte	.LFE36-.LFB36
 4108 0138 00000000 		.4byte	.LFB37
 4109 013c 14000000 		.4byte	.LFE37-.LFB37
 4110 0140 00000000 		.4byte	.LFB38
 4111 0144 18000000 		.4byte	.LFE38-.LFB38
 4112 0148 00000000 		.4byte	.LFB39
 4113 014c 18000000 		.4byte	.LFE39-.LFB39
 4114 0150 00000000 		.4byte	0x0
 4115 0154 00000000 		.4byte	0x0
 4116              		.section	.debug_ranges,"",%progbits
 4117              	.Ldebug_ranges0:
 4118 0000 00000000 		.4byte	.Ltext0
 4119 0004 00000000 		.4byte	.Letext0
 4120 0008 00000000 		.4byte	.LFB0
 4121 000c 54000000 		.4byte	.LFE0
 4122 0010 00000000 		.4byte	.LFB1
 4123 0014 3C000000 		.4byte	.LFE1
 4124 0018 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 99


 4125 001c 24000000 		.4byte	.LFE2
 4126 0020 00000000 		.4byte	.LFB3
 4127 0024 34000000 		.4byte	.LFE3
 4128 0028 00000000 		.4byte	.LFB4
 4129 002c 48000000 		.4byte	.LFE4
 4130 0030 00000000 		.4byte	.LFB5
 4131 0034 48000000 		.4byte	.LFE5
 4132 0038 00000000 		.4byte	.LFB6
 4133 003c 48000000 		.4byte	.LFE6
 4134 0040 00000000 		.4byte	.LFB7
 4135 0044 50000000 		.4byte	.LFE7
 4136 0048 00000000 		.4byte	.LFB8
 4137 004c 1C000000 		.4byte	.LFE8
 4138 0050 00000000 		.4byte	.LFB9
 4139 0054 4C000000 		.4byte	.LFE9
 4140 0058 00000000 		.4byte	.LFB10
 4141 005c 4C000000 		.4byte	.LFE10
 4142 0060 00000000 		.4byte	.LFB11
 4143 0064 50000000 		.4byte	.LFE11
 4144 0068 00000000 		.4byte	.LFB12
 4145 006c 48000000 		.4byte	.LFE12
 4146 0070 00000000 		.4byte	.LFB13
 4147 0074 1C000000 		.4byte	.LFE13
 4148 0078 00000000 		.4byte	.LFB14
 4149 007c 18000000 		.4byte	.LFE14
 4150 0080 00000000 		.4byte	.LFB15
 4151 0084 48000000 		.4byte	.LFE15
 4152 0088 00000000 		.4byte	.LFB16
 4153 008c 1C000000 		.4byte	.LFE16
 4154 0090 00000000 		.4byte	.LFB17
 4155 0094 18000000 		.4byte	.LFE17
 4156 0098 00000000 		.4byte	.LFB18
 4157 009c 48000000 		.4byte	.LFE18
 4158 00a0 00000000 		.4byte	.LFB19
 4159 00a4 1C000000 		.4byte	.LFE19
 4160 00a8 00000000 		.4byte	.LFB20
 4161 00ac 18000000 		.4byte	.LFE20
 4162 00b0 00000000 		.4byte	.LFB21
 4163 00b4 4C000000 		.4byte	.LFE21
 4164 00b8 00000000 		.4byte	.LFB22
 4165 00bc 1C000000 		.4byte	.LFE22
 4166 00c0 00000000 		.4byte	.LFB23
 4167 00c4 18000000 		.4byte	.LFE23
 4168 00c8 00000000 		.4byte	.LFB24
 4169 00cc 1C000000 		.4byte	.LFE24
 4170 00d0 00000000 		.4byte	.LFB25
 4171 00d4 18000000 		.4byte	.LFE25
 4172 00d8 00000000 		.4byte	.LFB26
 4173 00dc 18000000 		.4byte	.LFE26
 4174 00e0 00000000 		.4byte	.LFB27
 4175 00e4 18000000 		.4byte	.LFE27
 4176 00e8 00000000 		.4byte	.LFB28
 4177 00ec 44000000 		.4byte	.LFE28
 4178 00f0 00000000 		.4byte	.LFB29
 4179 00f4 48000000 		.4byte	.LFE29
 4180 00f8 00000000 		.4byte	.LFB30
 4181 00fc 4C000000 		.4byte	.LFE30
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 100


 4182 0100 00000000 		.4byte	.LFB31
 4183 0104 48000000 		.4byte	.LFE31
 4184 0108 00000000 		.4byte	.LFB32
 4185 010c 48000000 		.4byte	.LFE32
 4186 0110 00000000 		.4byte	.LFB33
 4187 0114 3C000000 		.4byte	.LFE33
 4188 0118 00000000 		.4byte	.LFB34
 4189 011c 20000000 		.4byte	.LFE34
 4190 0120 00000000 		.4byte	.LFB35
 4191 0124 18000000 		.4byte	.LFE35
 4192 0128 00000000 		.4byte	.LFB36
 4193 012c 14000000 		.4byte	.LFE36
 4194 0130 00000000 		.4byte	.LFB37
 4195 0134 14000000 		.4byte	.LFE37
 4196 0138 00000000 		.4byte	.LFB38
 4197 013c 18000000 		.4byte	.LFE38
 4198 0140 00000000 		.4byte	.LFB39
 4199 0144 18000000 		.4byte	.LFE39
 4200 0148 00000000 		.4byte	0x0
 4201 014c 00000000 		.4byte	0x0
 4202              		.section	.debug_str,"MS",%progbits,1
 4203              	.LASF38:
 4204 0000 636F756E 		.ascii	"count\000"
 4204      7400
 4205              	.LASF50:
 4206 0006 50574D5F 		.ascii	"PWM_R_SetPeriodSwap\000"
 4206      525F5365 
 4206      74506572 
 4206      696F6453 
 4206      77617000 
 4207              	.LASF20:
 4208 001a 50574D5F 		.ascii	"PWM_R_SetQDMode\000"
 4208      525F5365 
 4208      7451444D 
 4208      6F646500 
 4209              	.LASF33:
 4210 002a 50574D5F 		.ascii	"PWM_R_SetPWMDeadTime\000"
 4210      525F5365 
 4210      7450574D 
 4210      44656164 
 4210      54696D65 
 4211              	.LASF43:
 4212 003f 50574D5F 		.ascii	"PWM_R_ReadCounter\000"
 4212      525F5265 
 4212      6164436F 
 4212      756E7465 
 4212      7200
 4213              	.LASF25:
 4214 0051 50574D5F 		.ascii	"PWM_R_SetOneShot\000"
 4214      525F5365 
 4214      744F6E65 
 4214      53686F74 
 4214      00
 4215              	.LASF42:
 4216 0062 70657269 		.ascii	"period\000"
 4216      6F6400
 4217              	.LASF17:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 101


 4218 0069 50574D5F 		.ascii	"PWM_R_Stop\000"
 4218      525F5374 
 4218      6F7000
 4219              	.LASF7:
 4220 0074 6C6F6E67 		.ascii	"long long unsigned int\000"
 4220      206C6F6E 
 4220      6720756E 
 4220      7369676E 
 4220      65642069 
 4221              	.LASF74:
 4222 008b 474E5520 		.ascii	"GNU C 4.4.1\000"
 4222      4320342E 
 4222      342E3100 
 4223              	.LASF22:
 4224 0097 71644D6F 		.ascii	"qdMode\000"
 4224      646500
 4225              	.LASF67:
 4226 009e 50574D5F 		.ascii	"PWM_R_ReadStatus\000"
 4226      525F5265 
 4226      61645374 
 4226      61747573 
 4226      00
 4227              	.LASF6:
 4228 00af 6C6F6E67 		.ascii	"long long int\000"
 4228      206C6F6E 
 4228      6720696E 
 4228      7400
 4229              	.LASF0:
 4230 00bd 7369676E 		.ascii	"signed char\000"
 4230      65642063 
 4230      68617200 
 4231              	.LASF47:
 4232 00c9 50574D5F 		.ascii	"PWM_R_WritePeriodBuf\000"
 4232      525F5772 
 4232      69746550 
 4232      6572696F 
 4232      64427566 
 4233              	.LASF61:
 4234 00de 50574D5F 		.ascii	"PWM_R_SetReloadMode\000"
 4234      525F5365 
 4234      7452656C 
 4234      6F61644D 
 4234      6F646500 
 4235              	.LASF4:
 4236 00f2 6C6F6E67 		.ascii	"long int\000"
 4236      20696E74 
 4236      00
 4237              	.LASF9:
 4238 00fb 75696E74 		.ascii	"uint8\000"
 4238      3800
 4239              	.LASF12:
 4240 0101 646F7562 		.ascii	"double\000"
 4240      6C6500
 4241              	.LASF63:
 4242 0108 50574D5F 		.ascii	"PWM_R_SetStopMode\000"
 4242      525F5365 
 4242      7453746F 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 102


 4242      704D6F64 
 4242      6500
 4243              	.LASF49:
 4244 011a 50574D5F 		.ascii	"PWM_R_ReadPeriodBuf\000"
 4244      525F5265 
 4244      61645065 
 4244      72696F64 
 4244      42756600 
 4245              	.LASF19:
 4246 012e 50574D5F 		.ascii	"PWM_R_SetMode\000"
 4246      525F5365 
 4246      744D6F64 
 4246      6500
 4247              	.LASF10:
 4248 013c 75696E74 		.ascii	"uint32\000"
 4248      333200
 4249              	.LASF58:
 4250 0143 50574D5F 		.ascii	"PWM_R_ReadCaptureBuf\000"
 4250      525F5265 
 4250      61644361 
 4250      70747572 
 4250      65427566 
 4251              	.LASF60:
 4252 0158 74726967 		.ascii	"triggerMode\000"
 4252      6765724D 
 4252      6F646500 
 4253              	.LASF36:
 4254 0164 6D61736B 		.ascii	"mask\000"
 4254      00
 4255              	.LASF34:
 4256 0169 64656164 		.ascii	"deadTime\000"
 4256      54696D65 
 4256      00
 4257              	.LASF44:
 4258 0172 50574D5F 		.ascii	"PWM_R_ReadPeriod\000"
 4258      525F5265 
 4258      61645065 
 4258      72696F64 
 4258      00
 4259              	.LASF65:
 4260 0183 50574D5F 		.ascii	"PWM_R_TriggerCommand\000"
 4260      525F5472 
 4260      69676765 
 4260      72436F6D 
 4260      6D616E64 
 4261              	.LASF8:
 4262 0198 756E7369 		.ascii	"unsigned int\000"
 4262      676E6564 
 4262      20696E74 
 4262      00
 4263              	.LASF66:
 4264 01a5 636F6D6D 		.ascii	"command\000"
 4264      616E6400 
 4265              	.LASF5:
 4266 01ad 6C6F6E67 		.ascii	"long unsigned int\000"
 4266      20756E73 
 4266      69676E65 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 103


 4266      6420696E 
 4266      7400
 4267              	.LASF28:
 4268 01bf 6D6F6465 		.ascii	"modeMask\000"
 4268      4D61736B 
 4268      00
 4269              	.LASF3:
 4270 01c8 73686F72 		.ascii	"short unsigned int\000"
 4270      7420756E 
 4270      7369676E 
 4270      65642069 
 4270      6E7400
 4271              	.LASF39:
 4272 01db 50574D5F 		.ascii	"PWM_R_SetCounterMode\000"
 4272      525F5365 
 4272      74436F75 
 4272      6E746572 
 4272      4D6F6465 
 4273              	.LASF68:
 4274 01f0 50574D5F 		.ascii	"PWM_R_SetInterruptMode\000"
 4274      525F5365 
 4274      74496E74 
 4274      65727275 
 4274      70744D6F 
 4275              	.LASF26:
 4276 0207 6F6E6553 		.ascii	"oneShotEnable\000"
 4276      686F7445 
 4276      6E61626C 
 4276      6500
 4277              	.LASF15:
 4278 0215 50574D5F 		.ascii	"PWM_R_Start\000"
 4278      525F5374 
 4278      61727400 
 4279              	.LASF62:
 4280 0221 50574D5F 		.ascii	"PWM_R_SetStartMode\000"
 4280      525F5365 
 4280      74537461 
 4280      72744D6F 
 4280      646500
 4281              	.LASF51:
 4282 0234 50574D5F 		.ascii	"PWM_R_WriteCompare\000"
 4282      525F5772 
 4282      69746543 
 4282      6F6D7061 
 4282      726500
 4283              	.LASF14:
 4284 0247 50574D5F 		.ascii	"PWM_R_Init\000"
 4284      525F496E 
 4284      697400
 4285              	.LASF27:
 4286 0252 50574D5F 		.ascii	"PWM_R_SetPWMMode\000"
 4286      525F5365 
 4286      7450574D 
 4286      4D6F6465 
 4286      00
 4287              	.LASF30:
 4288 0263 73796E63 		.ascii	"syncKillEnable\000"
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 104


 4288      4B696C6C 
 4288      456E6162 
 4288      6C6500
 4289              	.LASF59:
 4290 0272 50574D5F 		.ascii	"PWM_R_SetCaptureMode\000"
 4290      525F5365 
 4290      74436170 
 4290      74757265 
 4290      4D6F6465 
 4291              	.LASF52:
 4292 0287 636F6D70 		.ascii	"compare\000"
 4292      61726500 
 4293              	.LASF75:
 4294 028f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_R.c\000"
 4294      6E657261 
 4294      7465645F 
 4294      536F7572 
 4294      63655C50 
 4295              	.LASF76:
 4296 02b0 433A5C55 		.ascii	"C:\\Users\\maxk\\Desktop\\PSoC 4A\\FAE Workshop\\La"
 4296      73657273 
 4296      5C6D6178 
 4296      6B5C4465 
 4296      736B746F 
 4297 02dd 62205072 		.ascii	"b Projects\\Lab working directory\\Lab 3 CapSense U"
 4297      6F6A6563 
 4297      74735C4C 
 4297      61622077 
 4297      6F726B69 
 4298 030e 4152542E 		.ascii	"ART.cydsn\000"
 4298      63796473 
 4298      6E00
 4299              	.LASF70:
 4300 0318 50574D5F 		.ascii	"PWM_R_GetInterruptSourceMasked\000"
 4300      525F4765 
 4300      74496E74 
 4300      65727275 
 4300      7074536F 
 4301              	.LASF11:
 4302 0337 666C6F61 		.ascii	"float\000"
 4302      7400
 4303              	.LASF24:
 4304 033d 70726573 		.ascii	"prescaler\000"
 4304      63616C65 
 4304      7200
 4305              	.LASF23:
 4306 0347 50574D5F 		.ascii	"PWM_R_SetPrescaler\000"
 4306      525F5365 
 4306      74507265 
 4306      7363616C 
 4306      657200
 4307              	.LASF37:
 4308 035a 50574D5F 		.ascii	"PWM_R_WriteCounter\000"
 4308      525F5772 
 4308      69746543 
 4308      6F756E74 
 4308      657200
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 105


 4309              	.LASF1:
 4310 036d 756E7369 		.ascii	"unsigned char\000"
 4310      676E6564 
 4310      20636861 
 4310      7200
 4311              	.LASF56:
 4312 037b 50574D5F 		.ascii	"PWM_R_ReadCompareBuf\000"
 4312      525F5265 
 4312      6164436F 
 4312      6D706172 
 4312      65427566 
 4313              	.LASF32:
 4314 0390 73746F70 		.ascii	"stopOnKillEnable\000"
 4314      4F6E4B69 
 4314      6C6C456E 
 4314      61626C65 
 4314      00
 4315              	.LASF45:
 4316 03a1 50574D5F 		.ascii	"PWM_R_SetCompareSwap\000"
 4316      525F5365 
 4316      74436F6D 
 4316      70617265 
 4316      53776170 
 4317              	.LASF2:
 4318 03b6 73686F72 		.ascii	"short int\000"
 4318      7420696E 
 4318      7400
 4319              	.LASF69:
 4320 03c0 696E7465 		.ascii	"interruptMask\000"
 4320      72727570 
 4320      744D6173 
 4320      6B00
 4321              	.LASF41:
 4322 03ce 50574D5F 		.ascii	"PWM_R_WritePeriod\000"
 4322      525F5772 
 4322      69746550 
 4322      6572696F 
 4322      6400
 4323              	.LASF71:
 4324 03e0 50574D5F 		.ascii	"PWM_R_GetInterruptSource\000"
 4324      525F4765 
 4324      74496E74 
 4324      65727275 
 4324      7074536F 
 4325              	.LASF35:
 4326 03f9 50574D5F 		.ascii	"PWM_R_SetPWMInvert\000"
 4326      525F5365 
 4326      7450574D 
 4326      496E7665 
 4326      727400
 4327              	.LASF29:
 4328 040c 50574D5F 		.ascii	"PWM_R_SetPWMSyncKill\000"
 4328      525F5365 
 4328      7450574D 
 4328      53796E63 
 4328      4B696C6C 
 4329              	.LASF13:
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 106


 4330 0421 63686172 		.ascii	"char\000"
 4330      00
 4331              	.LASF21:
 4332 0426 6D6F6465 		.ascii	"mode\000"
 4332      00
 4333              	.LASF40:
 4334 042b 636F756E 		.ascii	"counterMode\000"
 4334      7465724D 
 4334      6F646500 
 4335              	.LASF55:
 4336 0437 636F6D70 		.ascii	"compareBuf\000"
 4336      61726542 
 4336      756600
 4337              	.LASF77:
 4338 0442 50574D5F 		.ascii	"PWM_R_initVar\000"
 4338      525F696E 
 4338      69745661 
 4338      7200
 4339              	.LASF57:
 4340 0450 50574D5F 		.ascii	"PWM_R_ReadCapture\000"
 4340      525F5265 
 4340      61644361 
 4340      70747572 
 4340      6500
 4341              	.LASF54:
 4342 0462 50574D5F 		.ascii	"PWM_R_WriteCompareBuf\000"
 4342      525F5772 
 4342      69746543 
 4342      6F6D7061 
 4342      72654275 
 4343              	.LASF18:
 4344 0478 656E6162 		.ascii	"enableInterrupts\000"
 4344      6C65496E 
 4344      74657272 
 4344      75707473 
 4344      00
 4345              	.LASF72:
 4346 0489 50574D5F 		.ascii	"PWM_R_ClearInterrupt\000"
 4346      525F436C 
 4346      65617249 
 4346      6E746572 
 4346      72757074 
 4347              	.LASF31:
 4348 049e 50574D5F 		.ascii	"PWM_R_SetPWMStopOnKill\000"
 4348      525F5365 
 4348      7450574D 
 4348      53746F70 
 4348      4F6E4B69 
 4349              	.LASF53:
 4350 04b5 50574D5F 		.ascii	"PWM_R_ReadCompare\000"
 4350      525F5265 
 4350      6164436F 
 4350      6D706172 
 4350      6500
 4351              	.LASF46:
 4352 04c7 73776170 		.ascii	"swapEnable\000"
 4352      456E6162 
ARM GAS  C:\Users\maxk\AppData\Local\Temp\ccDN7eC4.s 			page 107


 4352      6C6500
 4353              	.LASF73:
 4354 04d2 50574D5F 		.ascii	"PWM_R_SetInterrupt\000"
 4354      525F5365 
 4354      74496E74 
 4354      65727275 
 4354      707400
 4355              	.LASF64:
 4356 04e5 50574D5F 		.ascii	"PWM_R_SetCountMode\000"
 4356      525F5365 
 4356      74436F75 
 4356      6E744D6F 
 4356      646500
 4357              	.LASF16:
 4358 04f8 50574D5F 		.ascii	"PWM_R_Enable\000"
 4358      525F456E 
 4358      61626C65 
 4358      00
 4359              	.LASF48:
 4360 0505 70657269 		.ascii	"periodBuf\000"
 4360      6F644275 
 4360      6600
 4361              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
