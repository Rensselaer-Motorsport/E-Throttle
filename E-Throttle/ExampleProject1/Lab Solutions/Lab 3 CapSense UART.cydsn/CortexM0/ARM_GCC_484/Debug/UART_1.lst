ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	UART_1_initVar
  18              		.bss
  19              		.type	UART_1_initVar, %object
  20              		.size	UART_1_initVar, 1
  21              	UART_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.UART_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	UART_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	UART_1_Init, %function
  29              	UART_1_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\UART_1.c"
   1:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_1.c **** * File Name: UART_1.c
   3:.\Generated_Source\PSoC4/UART_1.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/UART_1.c **** *
   5:.\Generated_Source\PSoC4/UART_1.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_1.c **** *  This file provides the source code to the API for the SCB Component.
   7:.\Generated_Source\PSoC4/UART_1.c **** *
   8:.\Generated_Source\PSoC4/UART_1.c **** * Note:
   9:.\Generated_Source\PSoC4/UART_1.c **** *
  10:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************
  11:.\Generated_Source\PSoC4/UART_1.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/UART_1.c **** 
  17:.\Generated_Source\PSoC4/UART_1.c **** #include "UART_1_PVT.h"
  18:.\Generated_Source\PSoC4/UART_1.c **** 
  19:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_I2C_INC)
  20:.\Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_I2C_PVT.h"
  21:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_I2C_INC) */
  22:.\Generated_Source\PSoC4/UART_1.c **** 
  23:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_EZI2C_INC)
  24:.\Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_EZI2C_PVT.h"
  25:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_EZI2C_INC) */
  26:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 2


  27:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_SPI_INC || UART_1_SCB_MODE_UART_INC)
  28:.\Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_SPI_UART_PVT.h"
  29:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_SPI_INC || UART_1_SCB_MODE_UART_INC) */
  30:.\Generated_Source\PSoC4/UART_1.c **** 
  31:.\Generated_Source\PSoC4/UART_1.c **** 
  32:.\Generated_Source\PSoC4/UART_1.c **** /***************************************
  33:.\Generated_Source\PSoC4/UART_1.c **** *    Run Time Configuration Vars
  34:.\Generated_Source\PSoC4/UART_1.c **** ***************************************/
  35:.\Generated_Source\PSoC4/UART_1.c **** 
  36:.\Generated_Source\PSoC4/UART_1.c **** /* Stores internal component configuration for Unconfigured mode */
  37:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
  38:.\Generated_Source\PSoC4/UART_1.c ****     /* Common configuration variables */
  39:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_scbMode = UART_1_SCB_MODE_UNCONFIG;
  40:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_scbEnableWake;
  41:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_scbEnableIntr;
  42:.\Generated_Source\PSoC4/UART_1.c **** 
  43:.\Generated_Source\PSoC4/UART_1.c ****     /* I2C configuration variables */
  44:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_mode;
  45:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_acceptAddr;
  46:.\Generated_Source\PSoC4/UART_1.c **** 
  47:.\Generated_Source\PSoC4/UART_1.c ****     /* SPI/UART configuration variables */
  48:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 * UART_1_rxBuffer;
  49:.\Generated_Source\PSoC4/UART_1.c ****     uint8  UART_1_rxDataBits;
  50:.\Generated_Source\PSoC4/UART_1.c ****     uint32 UART_1_rxBufferSize;
  51:.\Generated_Source\PSoC4/UART_1.c **** 
  52:.\Generated_Source\PSoC4/UART_1.c ****     volatile uint8 * UART_1_txBuffer;
  53:.\Generated_Source\PSoC4/UART_1.c ****     uint8  UART_1_txDataBits;
  54:.\Generated_Source\PSoC4/UART_1.c ****     uint32 UART_1_txBufferSize;
  55:.\Generated_Source\PSoC4/UART_1.c **** 
  56:.\Generated_Source\PSoC4/UART_1.c ****     /* EZI2C configuration variables */
  57:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_numberOfAddr;
  58:.\Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_subAddrSize;
  59:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
  60:.\Generated_Source\PSoC4/UART_1.c **** 
  61:.\Generated_Source\PSoC4/UART_1.c **** 
  62:.\Generated_Source\PSoC4/UART_1.c **** /***************************************
  63:.\Generated_Source\PSoC4/UART_1.c **** *     Common SCB Vars
  64:.\Generated_Source\PSoC4/UART_1.c **** ***************************************/
  65:.\Generated_Source\PSoC4/UART_1.c **** 
  66:.\Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  67:.\Generated_Source\PSoC4/UART_1.c **** 
  68:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
  69:.\Generated_Source\PSoC4/UART_1.c **** #if !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER)
  70:.\Generated_Source\PSoC4/UART_1.c ****     void (*UART_1_customIntrHandler)(void) = NULL;
  71:.\Generated_Source\PSoC4/UART_1.c **** #endif /* !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER) */
  72:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
  73:.\Generated_Source\PSoC4/UART_1.c **** 
  74:.\Generated_Source\PSoC4/UART_1.c **** 
  75:.\Generated_Source\PSoC4/UART_1.c **** /***************************************
  76:.\Generated_Source\PSoC4/UART_1.c **** *    Private Function Prototypes
  77:.\Generated_Source\PSoC4/UART_1.c **** ***************************************/
  78:.\Generated_Source\PSoC4/UART_1.c **** 
  79:.\Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbEnableIntr(void);
  80:.\Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModeStop(void);
  81:.\Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModePostEnable(void);
  82:.\Generated_Source\PSoC4/UART_1.c **** 
  83:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 3


  84:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  85:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
  86:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  87:.\Generated_Source\PSoC4/UART_1.c **** *
  88:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
  89:.\Generated_Source\PSoC4/UART_1.c **** *  Initializes the SCB component to operate in one of the selected
  90:.\Generated_Source\PSoC4/UART_1.c **** *  configurations: I2C, SPI, UART or EZI2C.
  91:.\Generated_Source\PSoC4/UART_1.c **** *  When the configuration is set to "Unconfigured SCB", this function does
  92:.\Generated_Source\PSoC4/UART_1.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
  93:.\Generated_Source\PSoC4/UART_1.c **** *  SCB_I2CInit, SCB_SpiInit, SCB_UartInit or SCB_EzI2CInit.
  94:.\Generated_Source\PSoC4/UART_1.c **** *
  95:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
  96:.\Generated_Source\PSoC4/UART_1.c **** *  None
  97:.\Generated_Source\PSoC4/UART_1.c **** *
  98:.\Generated_Source\PSoC4/UART_1.c **** * Return:
  99:.\Generated_Source\PSoC4/UART_1.c **** *  None
 100:.\Generated_Source\PSoC4/UART_1.c **** *
 101:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 102:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void)
 103:.\Generated_Source\PSoC4/UART_1.c **** {
  32              		.loc 1 103 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
 104:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 105:.\Generated_Source\PSoC4/UART_1.c ****     if (UART_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 106:.\Generated_Source\PSoC4/UART_1.c ****     {
 107:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 0u;
 108:.\Generated_Source\PSoC4/UART_1.c ****     }
 109:.\Generated_Source\PSoC4/UART_1.c ****     else
 110:.\Generated_Source\PSoC4/UART_1.c ****     {
 111:.\Generated_Source\PSoC4/UART_1.c ****         /* Initialization was done before this function call */
 112:.\Generated_Source\PSoC4/UART_1.c ****     }
 113:.\Generated_Source\PSoC4/UART_1.c **** 
 114:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_I2C_CONST_CFG)
 115:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_I2CInit();
 116:.\Generated_Source\PSoC4/UART_1.c **** 
 117:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_SPI_CONST_CFG)
 118:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_SpiInit();
 119:.\Generated_Source\PSoC4/UART_1.c **** 
 120:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_UART_CONST_CFG)
 121:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_UartInit();
  40              		.loc 1 121 0
  41 0004 FFF7FEFF 		bl	UART_1_UartInit
 122:.\Generated_Source\PSoC4/UART_1.c **** 
 123:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_EZI2C_CONST_CFG)
 124:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_EzI2CInit();
 125:.\Generated_Source\PSoC4/UART_1.c **** 
 126:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 127:.\Generated_Source\PSoC4/UART_1.c **** }
  42              		.loc 1 127 0
  43 0008 BD46     		mov	sp, r7
  44              		@ sp needed
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 4


  45 000a 80BD     		pop	{r7, pc}
  46              		.cfi_endproc
  47              	.LFE0:
  48              		.size	UART_1_Init, .-UART_1_Init
  49              		.section	.text.UART_1_Enable,"ax",%progbits
  50              		.align	2
  51              		.global	UART_1_Enable
  52              		.code	16
  53              		.thumb_func
  54              		.type	UART_1_Enable, %function
  55              	UART_1_Enable:
  56              	.LFB1:
 128:.\Generated_Source\PSoC4/UART_1.c **** 
 129:.\Generated_Source\PSoC4/UART_1.c **** 
 130:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 131:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
 132:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 133:.\Generated_Source\PSoC4/UART_1.c **** *
 134:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 135:.\Generated_Source\PSoC4/UART_1.c **** *  Enables the SCB component operation.
 136:.\Generated_Source\PSoC4/UART_1.c **** *  The SCB configuration should be not changed when the component is enabled.
 137:.\Generated_Source\PSoC4/UART_1.c **** *  Any configuration changes should be made after disabling the component.
 138:.\Generated_Source\PSoC4/UART_1.c **** *
 139:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 140:.\Generated_Source\PSoC4/UART_1.c **** *  None
 141:.\Generated_Source\PSoC4/UART_1.c **** *
 142:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 143:.\Generated_Source\PSoC4/UART_1.c **** *  None
 144:.\Generated_Source\PSoC4/UART_1.c **** *
 145:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 146:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void)
 147:.\Generated_Source\PSoC4/UART_1.c **** {
  57              		.loc 1 147 0
  58              		.cfi_startproc
  59 0000 80B5     		push	{r7, lr}
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 7, -8
  62              		.cfi_offset 14, -4
  63 0002 00AF     		add	r7, sp, #0
  64              		.cfi_def_cfa_register 7
 148:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 149:.\Generated_Source\PSoC4/UART_1.c ****     /* Enable SCB block, only if it is already configured */
 150:.\Generated_Source\PSoC4/UART_1.c ****     if (!UART_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 151:.\Generated_Source\PSoC4/UART_1.c ****     {
 152:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_CTRL_REG |= UART_1_CTRL_ENABLED;
 153:.\Generated_Source\PSoC4/UART_1.c **** 
 154:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_ScbEnableIntr();
 155:.\Generated_Source\PSoC4/UART_1.c **** 
 156:.\Generated_Source\PSoC4/UART_1.c ****         /* Call PostEnable function specific to current operation mode */
 157:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_ScbModePostEnable();
 158:.\Generated_Source\PSoC4/UART_1.c ****     }
 159:.\Generated_Source\PSoC4/UART_1.c **** #else
 160:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_CTRL_REG |= UART_1_CTRL_ENABLED;
  65              		.loc 1 160 0
  66 0004 064B     		ldr	r3, .L3
  67 0006 064A     		ldr	r2, .L3
  68 0008 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 5


  69 000a 8021     		mov	r1, #128
  70 000c 0906     		lsl	r1, r1, #24
  71 000e 0A43     		orr	r2, r1
  72 0010 1A60     		str	r2, [r3]
 161:.\Generated_Source\PSoC4/UART_1.c **** 
 162:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_ScbEnableIntr();
  73              		.loc 1 162 0
  74 0012 FFF7FEFF 		bl	UART_1_ScbEnableIntr
 163:.\Generated_Source\PSoC4/UART_1.c **** 
 164:.\Generated_Source\PSoC4/UART_1.c ****     /* Call PostEnable function specific to current operation mode */
 165:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_ScbModePostEnable();
  75              		.loc 1 165 0
  76 0016 FFF7FEFF 		bl	UART_1_ScbModePostEnable
 166:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 167:.\Generated_Source\PSoC4/UART_1.c **** }
  77              		.loc 1 167 0
  78 001a BD46     		mov	sp, r7
  79              		@ sp needed
  80 001c 80BD     		pop	{r7, pc}
  81              	.L4:
  82 001e C046     		.align	2
  83              	.L3:
  84 0020 00000640 		.word	1074135040
  85              		.cfi_endproc
  86              	.LFE1:
  87              		.size	UART_1_Enable, .-UART_1_Enable
  88              		.section	.text.UART_1_Start,"ax",%progbits
  89              		.align	2
  90              		.global	UART_1_Start
  91              		.code	16
  92              		.thumb_func
  93              		.type	UART_1_Start, %function
  94              	UART_1_Start:
  95              	.LFB2:
 168:.\Generated_Source\PSoC4/UART_1.c **** 
 169:.\Generated_Source\PSoC4/UART_1.c **** 
 170:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
 172:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 173:.\Generated_Source\PSoC4/UART_1.c **** *
 174:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 175:.\Generated_Source\PSoC4/UART_1.c **** *  Invokes SCB_Init() and SCB_Enable().
 176:.\Generated_Source\PSoC4/UART_1.c **** *  After this function call, the component is enabled and ready for operation.
 177:.\Generated_Source\PSoC4/UART_1.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 178:.\Generated_Source\PSoC4/UART_1.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 179:.\Generated_Source\PSoC4/UART_1.c **** *  or EZ I2C. Otherwise this function does not enable the component.
 180:.\Generated_Source\PSoC4/UART_1.c **** *
 181:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 182:.\Generated_Source\PSoC4/UART_1.c **** *  None
 183:.\Generated_Source\PSoC4/UART_1.c **** *
 184:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 185:.\Generated_Source\PSoC4/UART_1.c **** *  None
 186:.\Generated_Source\PSoC4/UART_1.c **** *
 187:.\Generated_Source\PSoC4/UART_1.c **** * Global variables:
 188:.\Generated_Source\PSoC4/UART_1.c **** *  UART_1_initVar - used to check initial configuration, modified
 189:.\Generated_Source\PSoC4/UART_1.c **** *  on first function call.
 190:.\Generated_Source\PSoC4/UART_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 6


 191:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void)
 193:.\Generated_Source\PSoC4/UART_1.c **** {
  96              		.loc 1 193 0
  97              		.cfi_startproc
  98 0000 80B5     		push	{r7, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 7, -8
 101              		.cfi_offset 14, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 194:.\Generated_Source\PSoC4/UART_1.c ****     if (0u == UART_1_initVar)
 104              		.loc 1 194 0
 105 0004 064B     		ldr	r3, .L7
 106 0006 1B78     		ldrb	r3, [r3]
 107 0008 002B     		cmp	r3, #0
 108 000a 04D1     		bne	.L6
 195:.\Generated_Source\PSoC4/UART_1.c ****     {
 196:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
 109              		.loc 1 196 0
 110 000c FFF7FEFF 		bl	UART_1_Init
 197:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u; /* Component was initialized */
 111              		.loc 1 197 0
 112 0010 034B     		ldr	r3, .L7
 113 0012 0122     		mov	r2, #1
 114 0014 1A70     		strb	r2, [r3]
 115              	.L6:
 198:.\Generated_Source\PSoC4/UART_1.c ****     }
 199:.\Generated_Source\PSoC4/UART_1.c **** 
 200:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
 116              		.loc 1 200 0
 117 0016 FFF7FEFF 		bl	UART_1_Enable
 201:.\Generated_Source\PSoC4/UART_1.c **** }
 118              		.loc 1 201 0
 119 001a BD46     		mov	sp, r7
 120              		@ sp needed
 121 001c 80BD     		pop	{r7, pc}
 122              	.L8:
 123 001e C046     		.align	2
 124              	.L7:
 125 0020 00000000 		.word	UART_1_initVar
 126              		.cfi_endproc
 127              	.LFE2:
 128              		.size	UART_1_Start, .-UART_1_Start
 129              		.section	.text.UART_1_Stop,"ax",%progbits
 130              		.align	2
 131              		.global	UART_1_Stop
 132              		.code	16
 133              		.thumb_func
 134              		.type	UART_1_Stop, %function
 135              	UART_1_Stop:
 136              	.LFB3:
 202:.\Generated_Source\PSoC4/UART_1.c **** 
 203:.\Generated_Source\PSoC4/UART_1.c **** 
 204:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 205:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 206:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 7


 207:.\Generated_Source\PSoC4/UART_1.c **** *
 208:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 209:.\Generated_Source\PSoC4/UART_1.c **** *  Disables the SCB component and its interrupt.
 210:.\Generated_Source\PSoC4/UART_1.c **** *  It also disables all TX interrupt sources so as not to cause an unexpected
 211:.\Generated_Source\PSoC4/UART_1.c **** *  interrupt trigger because after the component is enabled, the TX FIFO 
 212:.\Generated_Source\PSoC4/UART_1.c **** *  is empty.
 213:.\Generated_Source\PSoC4/UART_1.c **** *
 214:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 215:.\Generated_Source\PSoC4/UART_1.c **** *  None
 216:.\Generated_Source\PSoC4/UART_1.c **** *
 217:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 218:.\Generated_Source\PSoC4/UART_1.c **** *  None
 219:.\Generated_Source\PSoC4/UART_1.c **** * 
 220:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 221:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void)
 222:.\Generated_Source\PSoC4/UART_1.c **** {
 137              		.loc 1 222 0
 138              		.cfi_startproc
 139 0000 80B5     		push	{r7, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 00AF     		add	r7, sp, #0
 144              		.cfi_def_cfa_register 7
 223:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 224:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_DisableInt();
 225:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 226:.\Generated_Source\PSoC4/UART_1.c **** 
 227:.\Generated_Source\PSoC4/UART_1.c ****     /* Call Stop function specific to current operation mode */
 228:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_ScbModeStop();
 145              		.loc 1 228 0
 146 0004 FFF7FEFF 		bl	UART_1_ScbModeStop
 229:.\Generated_Source\PSoC4/UART_1.c **** 
 230:.\Generated_Source\PSoC4/UART_1.c ****     /* Disable SCB IP */
 231:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_CTRL_REG &= (uint32) ~UART_1_CTRL_ENABLED;
 147              		.loc 1 231 0
 148 0008 054B     		ldr	r3, .L10
 149 000a 054A     		ldr	r2, .L10
 150 000c 1268     		ldr	r2, [r2]
 151 000e 5200     		lsl	r2, r2, #1
 152 0010 5208     		lsr	r2, r2, #1
 153 0012 1A60     		str	r2, [r3]
 232:.\Generated_Source\PSoC4/UART_1.c **** 
 233:.\Generated_Source\PSoC4/UART_1.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 234:.\Generated_Source\PSoC4/UART_1.c ****     * interrupt trigger because after the component is enabled, the TX FIFO
 235:.\Generated_Source\PSoC4/UART_1.c ****     * is empty.
 236:.\Generated_Source\PSoC4/UART_1.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 237:.\Generated_Source\PSoC4/UART_1.c ****     * sources when they are disabled. This can cause a code lock-up in the
 238:.\Generated_Source\PSoC4/UART_1.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 239:.\Generated_Source\PSoC4/UART_1.c ****     * is disabled.
 240:.\Generated_Source\PSoC4/UART_1.c ****     */
 241:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_SetTxInterruptMode(UART_1_NO_INTR_SOURCES);
 154              		.loc 1 241 0
 155 0014 034B     		ldr	r3, .L10+4
 156 0016 0022     		mov	r2, #0
 157 0018 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 8


 243:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 244:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_ClearPendingInt();
 245:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 246:.\Generated_Source\PSoC4/UART_1.c **** }
 158              		.loc 1 246 0
 159 001a BD46     		mov	sp, r7
 160              		@ sp needed
 161 001c 80BD     		pop	{r7, pc}
 162              	.L11:
 163 001e C046     		.align	2
 164              	.L10:
 165 0020 00000640 		.word	1074135040
 166 0024 880F0640 		.word	1074139016
 167              		.cfi_endproc
 168              	.LFE3:
 169              		.size	UART_1_Stop, .-UART_1_Stop
 170              		.section	.text.UART_1_SetRxFifoLevel,"ax",%progbits
 171              		.align	2
 172              		.global	UART_1_SetRxFifoLevel
 173              		.code	16
 174              		.thumb_func
 175              		.type	UART_1_SetRxFifoLevel, %function
 176              	UART_1_SetRxFifoLevel:
 177              	.LFB4:
 247:.\Generated_Source\PSoC4/UART_1.c **** 
 248:.\Generated_Source\PSoC4/UART_1.c **** 
 249:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 250:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_SetRxFifoLevel
 251:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 252:.\Generated_Source\PSoC4/UART_1.c **** *
 253:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 254:.\Generated_Source\PSoC4/UART_1.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 255:.\Generated_Source\PSoC4/UART_1.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 256:.\Generated_Source\PSoC4/UART_1.c **** *  interrupt request is generated.
 257:.\Generated_Source\PSoC4/UART_1.c **** *
 258:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 259:.\Generated_Source\PSoC4/UART_1.c **** *  level: Level in the RX FIFO to generate RX level interrupt.
 260:.\Generated_Source\PSoC4/UART_1.c **** *         The range of valid level values is between 0 and RX FIFO depth - 1.
 261:.\Generated_Source\PSoC4/UART_1.c **** *
 262:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 263:.\Generated_Source\PSoC4/UART_1.c **** *  None
 264:.\Generated_Source\PSoC4/UART_1.c **** *
 265:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 266:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_SetRxFifoLevel(uint32 level)
 267:.\Generated_Source\PSoC4/UART_1.c **** {
 178              		.loc 1 267 0
 179              		.cfi_startproc
 180 0000 80B5     		push	{r7, lr}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0002 84B0     		sub	sp, sp, #16
 185              		.cfi_def_cfa_offset 24
 186 0004 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
 188 0006 7860     		str	r0, [r7, #4]
 268:.\Generated_Source\PSoC4/UART_1.c ****     uint32 rxFifoCtrl;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 9


 269:.\Generated_Source\PSoC4/UART_1.c **** 
 270:.\Generated_Source\PSoC4/UART_1.c ****     rxFifoCtrl = UART_1_RX_FIFO_CTRL_REG;
 189              		.loc 1 270 0
 190 0008 094B     		ldr	r3, .L13
 191 000a 1B68     		ldr	r3, [r3]
 192 000c FB60     		str	r3, [r7, #12]
 271:.\Generated_Source\PSoC4/UART_1.c **** 
 272:.\Generated_Source\PSoC4/UART_1.c ****     rxFifoCtrl &= ((uint32) ~UART_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 193              		.loc 1 272 0
 194 000e FB68     		ldr	r3, [r7, #12]
 195 0010 0722     		mov	r2, #7
 196 0012 9343     		bic	r3, r2
 197 0014 FB60     		str	r3, [r7, #12]
 273:.\Generated_Source\PSoC4/UART_1.c ****     rxFifoCtrl |= ((uint32) (UART_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 198              		.loc 1 273 0
 199 0016 7A68     		ldr	r2, [r7, #4]
 200 0018 0723     		mov	r3, #7
 201 001a 1340     		and	r3, r2
 202 001c FA68     		ldr	r2, [r7, #12]
 203 001e 1343     		orr	r3, r2
 204 0020 FB60     		str	r3, [r7, #12]
 274:.\Generated_Source\PSoC4/UART_1.c **** 
 275:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_RX_FIFO_CTRL_REG = rxFifoCtrl;
 205              		.loc 1 275 0
 206 0022 034B     		ldr	r3, .L13
 207 0024 FA68     		ldr	r2, [r7, #12]
 208 0026 1A60     		str	r2, [r3]
 276:.\Generated_Source\PSoC4/UART_1.c **** }
 209              		.loc 1 276 0
 210 0028 BD46     		mov	sp, r7
 211 002a 04B0     		add	sp, sp, #16
 212              		@ sp needed
 213 002c 80BD     		pop	{r7, pc}
 214              	.L14:
 215 002e C046     		.align	2
 216              	.L13:
 217 0030 04030640 		.word	1074135812
 218              		.cfi_endproc
 219              	.LFE4:
 220              		.size	UART_1_SetRxFifoLevel, .-UART_1_SetRxFifoLevel
 221              		.section	.text.UART_1_SetTxFifoLevel,"ax",%progbits
 222              		.align	2
 223              		.global	UART_1_SetTxFifoLevel
 224              		.code	16
 225              		.thumb_func
 226              		.type	UART_1_SetTxFifoLevel, %function
 227              	UART_1_SetTxFifoLevel:
 228              	.LFB5:
 277:.\Generated_Source\PSoC4/UART_1.c **** 
 278:.\Generated_Source\PSoC4/UART_1.c **** 
 279:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_SetTxFifoLevel
 281:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/UART_1.c **** *
 283:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 284:.\Generated_Source\PSoC4/UART_1.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 285:.\Generated_Source\PSoC4/UART_1.c **** *  When the TX FIFO has more entries than the TX FIFO level an TX level
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 10


 286:.\Generated_Source\PSoC4/UART_1.c **** *  interrupt request is generated.
 287:.\Generated_Source\PSoC4/UART_1.c **** *
 288:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 289:.\Generated_Source\PSoC4/UART_1.c **** *  level: Level in the TX FIFO to generate TX level interrupt.
 290:.\Generated_Source\PSoC4/UART_1.c **** *         The range of valid level values is between 0 and TX FIFO depth - 1.
 291:.\Generated_Source\PSoC4/UART_1.c **** *
 292:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 293:.\Generated_Source\PSoC4/UART_1.c **** *  None
 294:.\Generated_Source\PSoC4/UART_1.c **** *
 295:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 296:.\Generated_Source\PSoC4/UART_1.c **** void UART_1_SetTxFifoLevel(uint32 level)
 297:.\Generated_Source\PSoC4/UART_1.c **** {
 229              		.loc 1 297 0
 230              		.cfi_startproc
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              		.cfi_def_cfa_offset 24
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 239 0006 7860     		str	r0, [r7, #4]
 298:.\Generated_Source\PSoC4/UART_1.c ****     uint32 txFifoCtrl;
 299:.\Generated_Source\PSoC4/UART_1.c **** 
 300:.\Generated_Source\PSoC4/UART_1.c ****     txFifoCtrl = UART_1_TX_FIFO_CTRL_REG;
 240              		.loc 1 300 0
 241 0008 094B     		ldr	r3, .L16
 242 000a 1B68     		ldr	r3, [r3]
 243 000c FB60     		str	r3, [r7, #12]
 301:.\Generated_Source\PSoC4/UART_1.c **** 
 302:.\Generated_Source\PSoC4/UART_1.c ****     txFifoCtrl &= ((uint32) ~UART_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 244              		.loc 1 302 0
 245 000e FB68     		ldr	r3, [r7, #12]
 246 0010 0722     		mov	r2, #7
 247 0012 9343     		bic	r3, r2
 248 0014 FB60     		str	r3, [r7, #12]
 303:.\Generated_Source\PSoC4/UART_1.c ****     txFifoCtrl |= ((uint32) (UART_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 249              		.loc 1 303 0
 250 0016 7A68     		ldr	r2, [r7, #4]
 251 0018 0723     		mov	r3, #7
 252 001a 1340     		and	r3, r2
 253 001c FA68     		ldr	r2, [r7, #12]
 254 001e 1343     		orr	r3, r2
 255 0020 FB60     		str	r3, [r7, #12]
 304:.\Generated_Source\PSoC4/UART_1.c **** 
 305:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_TX_FIFO_CTRL_REG = txFifoCtrl;
 256              		.loc 1 305 0
 257 0022 034B     		ldr	r3, .L16
 258 0024 FA68     		ldr	r2, [r7, #12]
 259 0026 1A60     		str	r2, [r3]
 306:.\Generated_Source\PSoC4/UART_1.c **** }
 260              		.loc 1 306 0
 261 0028 BD46     		mov	sp, r7
 262 002a 04B0     		add	sp, sp, #16
 263              		@ sp needed
 264 002c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 11


 265              	.L17:
 266 002e C046     		.align	2
 267              	.L16:
 268 0030 04020640 		.word	1074135556
 269              		.cfi_endproc
 270              	.LFE5:
 271              		.size	UART_1_SetTxFifoLevel, .-UART_1_SetTxFifoLevel
 272              		.section	.text.UART_1_ScbEnableIntr,"ax",%progbits
 273              		.align	2
 274              		.code	16
 275              		.thumb_func
 276              		.type	UART_1_ScbEnableIntr, %function
 277              	UART_1_ScbEnableIntr:
 278              	.LFB6:
 307:.\Generated_Source\PSoC4/UART_1.c **** 
 308:.\Generated_Source\PSoC4/UART_1.c **** 
 309:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 310:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 311:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetCustomInterruptHandler
 312:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 313:.\Generated_Source\PSoC4/UART_1.c ****     *
 314:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 315:.\Generated_Source\PSoC4/UART_1.c ****     *  Registers a function to be called by the internal interrupt handler.
 316:.\Generated_Source\PSoC4/UART_1.c ****     *  First the function that is registered is called, then the internal interrupt
 317:.\Generated_Source\PSoC4/UART_1.c ****     *  handler performs any operation such as software buffer management functions
 318:.\Generated_Source\PSoC4/UART_1.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 319:.\Generated_Source\PSoC4/UART_1.c ****     *  the software buffer operations. Only one custom handler is supported, which
 320:.\Generated_Source\PSoC4/UART_1.c ****     *  is the function provided by the most recent call.
 321:.\Generated_Source\PSoC4/UART_1.c ****     *  At the initialization time no custom handler is registered.
 322:.\Generated_Source\PSoC4/UART_1.c ****     *
 323:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 324:.\Generated_Source\PSoC4/UART_1.c ****     *  func: Pointer to the function to register.
 325:.\Generated_Source\PSoC4/UART_1.c ****     *        The value NULL indicates to remove the current custom interrupt
 326:.\Generated_Source\PSoC4/UART_1.c ****     *        handler.
 327:.\Generated_Source\PSoC4/UART_1.c ****     *
 328:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 329:.\Generated_Source\PSoC4/UART_1.c ****     *  None
 330:.\Generated_Source\PSoC4/UART_1.c ****     *
 331:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 332:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetCustomInterruptHandler(void (*func)(void))
 333:.\Generated_Source\PSoC4/UART_1.c ****     {
 334:.\Generated_Source\PSoC4/UART_1.c ****     #if !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER)
 335:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_customIntrHandler = func; /* Register interrupt handler */
 336:.\Generated_Source\PSoC4/UART_1.c ****     #else
 337:.\Generated_Source\PSoC4/UART_1.c ****         if (NULL != func)
 338:.\Generated_Source\PSoC4/UART_1.c ****         {
 339:.\Generated_Source\PSoC4/UART_1.c ****             /* Suppress compiler warning */
 340:.\Generated_Source\PSoC4/UART_1.c ****         }
 341:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* !defined (CY_REMOVE_UART_1_CUSTOM_INTR_HANDLER) */
 342:.\Generated_Source\PSoC4/UART_1.c ****     }
 343:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 344:.\Generated_Source\PSoC4/UART_1.c **** 
 345:.\Generated_Source\PSoC4/UART_1.c **** 
 346:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 347:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ScbModeEnableIntr
 348:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 349:.\Generated_Source\PSoC4/UART_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 12


 350:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 351:.\Generated_Source\PSoC4/UART_1.c **** *  Enables an interrupt for a specific mode.
 352:.\Generated_Source\PSoC4/UART_1.c **** *
 353:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 354:.\Generated_Source\PSoC4/UART_1.c **** *  None
 355:.\Generated_Source\PSoC4/UART_1.c **** *
 356:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 357:.\Generated_Source\PSoC4/UART_1.c **** *  None
 358:.\Generated_Source\PSoC4/UART_1.c **** *
 359:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 360:.\Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbEnableIntr(void)
 361:.\Generated_Source\PSoC4/UART_1.c **** {
 279              		.loc 1 361 0
 280              		.cfi_startproc
 281 0000 80B5     		push	{r7, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 362:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_IRQ_INTERNAL)
 363:.\Generated_Source\PSoC4/UART_1.c ****     /* Enable interrupt in NVIC */
 364:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 365:.\Generated_Source\PSoC4/UART_1.c ****         if (0u != UART_1_scbEnableIntr)
 366:.\Generated_Source\PSoC4/UART_1.c ****         {
 367:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableInt();
 368:.\Generated_Source\PSoC4/UART_1.c ****         }
 369:.\Generated_Source\PSoC4/UART_1.c **** 
 370:.\Generated_Source\PSoC4/UART_1.c ****     #else
 371:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableInt();
 372:.\Generated_Source\PSoC4/UART_1.c **** 
 373:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 374:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 375:.\Generated_Source\PSoC4/UART_1.c **** }
 287              		.loc 1 375 0
 288 0004 BD46     		mov	sp, r7
 289              		@ sp needed
 290 0006 80BD     		pop	{r7, pc}
 291              		.cfi_endproc
 292              	.LFE6:
 293              		.size	UART_1_ScbEnableIntr, .-UART_1_ScbEnableIntr
 294              		.section	.text.UART_1_ScbModePostEnable,"ax",%progbits
 295              		.align	2
 296              		.code	16
 297              		.thumb_func
 298              		.type	UART_1_ScbModePostEnable, %function
 299              	UART_1_ScbModePostEnable:
 300              	.LFB7:
 376:.\Generated_Source\PSoC4/UART_1.c **** 
 377:.\Generated_Source\PSoC4/UART_1.c **** 
 378:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 379:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ScbModePostEnable
 380:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 381:.\Generated_Source\PSoC4/UART_1.c **** *
 382:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 383:.\Generated_Source\PSoC4/UART_1.c **** *  Calls the PostEnable function for a specific operation mode.
 384:.\Generated_Source\PSoC4/UART_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 13


 385:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 386:.\Generated_Source\PSoC4/UART_1.c **** *  None
 387:.\Generated_Source\PSoC4/UART_1.c **** *
 388:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 389:.\Generated_Source\PSoC4/UART_1.c **** *  None
 390:.\Generated_Source\PSoC4/UART_1.c **** *
 391:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 392:.\Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModePostEnable(void)
 393:.\Generated_Source\PSoC4/UART_1.c **** {
 301              		.loc 1 393 0
 302              		.cfi_startproc
 303 0000 80B5     		push	{r7, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 00AF     		add	r7, sp, #0
 308              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 395:.\Generated_Source\PSoC4/UART_1.c **** #if (!UART_1_CY_SCBIP_V1)
 396:.\Generated_Source\PSoC4/UART_1.c ****     if (UART_1_SCB_MODE_SPI_RUNTM_CFG)
 397:.\Generated_Source\PSoC4/UART_1.c ****     {
 398:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SpiPostEnable();
 399:.\Generated_Source\PSoC4/UART_1.c ****     }
 400:.\Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_UART_RUNTM_CFG)
 401:.\Generated_Source\PSoC4/UART_1.c ****     {
 402:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_UartPostEnable();
 403:.\Generated_Source\PSoC4/UART_1.c ****     }
 404:.\Generated_Source\PSoC4/UART_1.c ****     else
 405:.\Generated_Source\PSoC4/UART_1.c ****     {
 406:.\Generated_Source\PSoC4/UART_1.c ****         /* Unknown mode: do nothing */
 407:.\Generated_Source\PSoC4/UART_1.c ****     }
 408:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (!UART_1_CY_SCBIP_V1) */
 409:.\Generated_Source\PSoC4/UART_1.c **** 
 410:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_SPI_CONST_CFG)
 411:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_SpiPostEnable();
 412:.\Generated_Source\PSoC4/UART_1.c **** 
 413:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_UART_CONST_CFG)
 414:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_UartPostEnable();
 309              		.loc 1 414 0
 310 0004 FFF7FEFF 		bl	UART_1_UartPostEnable
 415:.\Generated_Source\PSoC4/UART_1.c **** 
 416:.\Generated_Source\PSoC4/UART_1.c **** #else
 417:.\Generated_Source\PSoC4/UART_1.c ****     /* Unknown mode: do nothing */
 418:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 419:.\Generated_Source\PSoC4/UART_1.c **** }
 311              		.loc 1 419 0
 312 0008 BD46     		mov	sp, r7
 313              		@ sp needed
 314 000a 80BD     		pop	{r7, pc}
 315              		.cfi_endproc
 316              	.LFE7:
 317              		.size	UART_1_ScbModePostEnable, .-UART_1_ScbModePostEnable
 318              		.section	.text.UART_1_ScbModeStop,"ax",%progbits
 319              		.align	2
 320              		.code	16
 321              		.thumb_func
 322              		.type	UART_1_ScbModeStop, %function
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 14


 323              	UART_1_ScbModeStop:
 324              	.LFB8:
 420:.\Generated_Source\PSoC4/UART_1.c **** 
 421:.\Generated_Source\PSoC4/UART_1.c **** 
 422:.\Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ScbModeStop
 424:.\Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/UART_1.c **** *
 426:.\Generated_Source\PSoC4/UART_1.c **** * Summary:
 427:.\Generated_Source\PSoC4/UART_1.c **** *  Calls the Stop function for a specific operation mode.
 428:.\Generated_Source\PSoC4/UART_1.c **** *
 429:.\Generated_Source\PSoC4/UART_1.c **** * Parameters:
 430:.\Generated_Source\PSoC4/UART_1.c **** *  None
 431:.\Generated_Source\PSoC4/UART_1.c **** *
 432:.\Generated_Source\PSoC4/UART_1.c **** * Return:
 433:.\Generated_Source\PSoC4/UART_1.c **** *  None
 434:.\Generated_Source\PSoC4/UART_1.c **** *
 435:.\Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/UART_1.c **** static void UART_1_ScbModeStop(void)
 437:.\Generated_Source\PSoC4/UART_1.c **** {
 325              		.loc 1 437 0
 326              		.cfi_startproc
 327 0000 80B5     		push	{r7, lr}
 328              		.cfi_def_cfa_offset 8
 329              		.cfi_offset 7, -8
 330              		.cfi_offset 14, -4
 331 0002 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 438:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 439:.\Generated_Source\PSoC4/UART_1.c ****     if (UART_1_SCB_MODE_I2C_RUNTM_CFG)
 440:.\Generated_Source\PSoC4/UART_1.c ****     {
 441:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_I2CStop();
 442:.\Generated_Source\PSoC4/UART_1.c ****     }
 443:.\Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_EZI2C_RUNTM_CFG)
 444:.\Generated_Source\PSoC4/UART_1.c ****     {
 445:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_EzI2CStop();
 446:.\Generated_Source\PSoC4/UART_1.c ****     }
 447:.\Generated_Source\PSoC4/UART_1.c **** #if (!UART_1_CY_SCBIP_V1)
 448:.\Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_SPI_RUNTM_CFG)
 449:.\Generated_Source\PSoC4/UART_1.c ****     {
 450:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SpiStop();
 451:.\Generated_Source\PSoC4/UART_1.c ****     }
 452:.\Generated_Source\PSoC4/UART_1.c ****     else if (UART_1_SCB_MODE_UART_RUNTM_CFG)
 453:.\Generated_Source\PSoC4/UART_1.c ****     {
 454:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_UartStop();
 455:.\Generated_Source\PSoC4/UART_1.c ****     }
 456:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (!UART_1_CY_SCBIP_V1) */
 457:.\Generated_Source\PSoC4/UART_1.c ****     else
 458:.\Generated_Source\PSoC4/UART_1.c ****     {
 459:.\Generated_Source\PSoC4/UART_1.c ****         /* Unknown mode: do nothing */
 460:.\Generated_Source\PSoC4/UART_1.c ****     }
 461:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_I2C_CONST_CFG)
 462:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_I2CStop();
 463:.\Generated_Source\PSoC4/UART_1.c **** 
 464:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_EZI2C_CONST_CFG)
 465:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_EzI2CStop();
 466:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 15


 467:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_SPI_CONST_CFG)
 468:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_SpiStop();
 469:.\Generated_Source\PSoC4/UART_1.c **** 
 470:.\Generated_Source\PSoC4/UART_1.c **** #elif (UART_1_SCB_MODE_UART_CONST_CFG)
 471:.\Generated_Source\PSoC4/UART_1.c ****     UART_1_UartStop();
 333              		.loc 1 471 0
 334 0004 FFF7FEFF 		bl	UART_1_UartStop
 472:.\Generated_Source\PSoC4/UART_1.c **** 
 473:.\Generated_Source\PSoC4/UART_1.c **** #else
 474:.\Generated_Source\PSoC4/UART_1.c ****     /* Unknown mode: do nothing */
 475:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 476:.\Generated_Source\PSoC4/UART_1.c **** }
 335              		.loc 1 476 0
 336 0008 BD46     		mov	sp, r7
 337              		@ sp needed
 338 000a 80BD     		pop	{r7, pc}
 339              		.cfi_endproc
 340              	.LFE8:
 341              		.size	UART_1_ScbModeStop, .-UART_1_ScbModeStop
 342              		.section	.text.UART_1_I2CSlaveNackGeneration,"ax",%progbits
 343              		.align	2
 344              		.global	UART_1_I2CSlaveNackGeneration
 345              		.code	16
 346              		.thumb_func
 347              		.type	UART_1_I2CSlaveNackGeneration, %function
 348              	UART_1_I2CSlaveNackGeneration:
 349              	.LFB9:
 477:.\Generated_Source\PSoC4/UART_1.c **** 
 478:.\Generated_Source\PSoC4/UART_1.c **** 
 479:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 480:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 481:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetPins
 482:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 483:.\Generated_Source\PSoC4/UART_1.c ****     *
 484:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 485:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 486:.\Generated_Source\PSoC4/UART_1.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 487:.\Generated_Source\PSoC4/UART_1.c ****     *  initialization function calls it.
 488:.\Generated_Source\PSoC4/UART_1.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 489:.\Generated_Source\PSoC4/UART_1.c ****     *  is selected in design time.
 490:.\Generated_Source\PSoC4/UART_1.c ****     *
 491:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 492:.\Generated_Source\PSoC4/UART_1.c ****     *  mode:      Mode of SCB operation.
 493:.\Generated_Source\PSoC4/UART_1.c ****     *  subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 494:.\Generated_Source\PSoC4/UART_1.c ****     *             modes.
 495:.\Generated_Source\PSoC4/UART_1.c ****     *  uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 496:.\Generated_Source\PSoC4/UART_1.c ****     *
 497:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 498:.\Generated_Source\PSoC4/UART_1.c ****     *  None
 499:.\Generated_Source\PSoC4/UART_1.c ****     *
 500:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 501:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 502:.\Generated_Source\PSoC4/UART_1.c ****     {
 503:.\Generated_Source\PSoC4/UART_1.c ****         uint32 hsiomSel [UART_1_SCB_PINS_NUMBER];
 504:.\Generated_Source\PSoC4/UART_1.c ****         uint32 pinsDm   [UART_1_SCB_PINS_NUMBER];
 505:.\Generated_Source\PSoC4/UART_1.c **** 
 506:.\Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 16


 507:.\Generated_Source\PSoC4/UART_1.c ****         uint32 pinsInBuf = 0u;
 508:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 509:.\Generated_Source\PSoC4/UART_1.c **** 
 510:.\Generated_Source\PSoC4/UART_1.c ****         uint32 i;
 511:.\Generated_Source\PSoC4/UART_1.c **** 
 512:.\Generated_Source\PSoC4/UART_1.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 513:.\Generated_Source\PSoC4/UART_1.c ****         for (i = 0u; i < UART_1_SCB_PINS_NUMBER; i++)
 514:.\Generated_Source\PSoC4/UART_1.c ****         {
 515:.\Generated_Source\PSoC4/UART_1.c ****             hsiomSel[i]  = UART_1_HSIOM_DEF_SEL;
 516:.\Generated_Source\PSoC4/UART_1.c ****             pinsDm[i]    = UART_1_PIN_DM_ALG_HIZ;
 517:.\Generated_Source\PSoC4/UART_1.c ****         }
 518:.\Generated_Source\PSoC4/UART_1.c **** 
 519:.\Generated_Source\PSoC4/UART_1.c ****         if ((UART_1_SCB_MODE_I2C   == mode) ||
 520:.\Generated_Source\PSoC4/UART_1.c ****            (UART_1_SCB_MODE_EZI2C == mode))
 521:.\Generated_Source\PSoC4/UART_1.c ****         {
 522:.\Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_HSIOM_I2C_SEL;
 523:.\Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_HSIOM_I2C_SEL;
 524:.\Generated_Source\PSoC4/UART_1.c **** 
 525:.\Generated_Source\PSoC4/UART_1.c ****             pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 526:.\Generated_Source\PSoC4/UART_1.c ****             pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 527:.\Generated_Source\PSoC4/UART_1.c ****         }
 528:.\Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
 529:.\Generated_Source\PSoC4/UART_1.c ****         else if (UART_1_SCB_MODE_SPI == mode)
 530:.\Generated_Source\PSoC4/UART_1.c ****         {
 531:.\Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_HSIOM_SPI_SEL;
 532:.\Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_HSIOM_SPI_SEL;
 533:.\Generated_Source\PSoC4/UART_1.c ****             hsiomSel[UART_1_SCLK_PIN_INDEX] = UART_1_HSIOM_SPI_SEL;
 534:.\Generated_Source\PSoC4/UART_1.c **** 
 535:.\Generated_Source\PSoC4/UART_1.c ****             if (UART_1_SPI_SLAVE == subMode)
 536:.\Generated_Source\PSoC4/UART_1.c ****             {
 537:.\Generated_Source\PSoC4/UART_1.c ****                 /* Slave */
 538:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 539:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 540:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_SCLK_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 541:.\Generated_Source\PSoC4/UART_1.c **** 
 542:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS0_PIN)
 543:.\Generated_Source\PSoC4/UART_1.c ****                 /* Only SS0 is valid choice for Slave */
 544:.\Generated_Source\PSoC4/UART_1.c ****                 hsiomSel[UART_1_SS0_PIN_INDEX] = UART_1_HSIOM_SPI_SEL;
 545:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm  [UART_1_SS0_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 546:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS0_PIN) */
 547:.\Generated_Source\PSoC4/UART_1.c **** 
 548:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_TX_SDA_MISO_PIN)
 549:.\Generated_Source\PSoC4/UART_1.c ****                 /* Disable input buffer */
 550:.\Generated_Source\PSoC4/UART_1.c ****                  pinsInBuf |= UART_1_TX_SDA_MISO_PIN_MASK;
 551:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_TX_SDA_MISO_PIN) */
 552:.\Generated_Source\PSoC4/UART_1.c ****             }
 553:.\Generated_Source\PSoC4/UART_1.c ****             else /* (Master) */
 554:.\Generated_Source\PSoC4/UART_1.c ****             {
 555:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 556:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 557:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm[UART_1_SCLK_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 558:.\Generated_Source\PSoC4/UART_1.c **** 
 559:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS0_PIN)
 560:.\Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS0_PIN_INDEX] = UART_1_HSIOM_SPI_SEL;
 561:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS0_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 562:.\Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS0_PIN_MASK;
 563:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS0_PIN) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 17


 564:.\Generated_Source\PSoC4/UART_1.c **** 
 565:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS1_PIN)
 566:.\Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS1_PIN_INDEX] = UART_1_HSIOM_SPI_SEL;
 567:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS1_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 568:.\Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS1_PIN_MASK;
 569:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS1_PIN) */
 570:.\Generated_Source\PSoC4/UART_1.c **** 
 571:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS2_PIN)
 572:.\Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS2_PIN_INDEX] = UART_1_HSIOM_SPI_SEL;
 573:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS2_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 574:.\Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS2_PIN_MASK;
 575:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS2_PIN) */
 576:.\Generated_Source\PSoC4/UART_1.c **** 
 577:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SS3_PIN)
 578:.\Generated_Source\PSoC4/UART_1.c ****                 hsiomSel [UART_1_SS3_PIN_INDEX] = UART_1_HSIOM_SPI_SEL;
 579:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm   [UART_1_SS3_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 580:.\Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SS3_PIN_MASK;
 581:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SS3_PIN) */
 582:.\Generated_Source\PSoC4/UART_1.c **** 
 583:.\Generated_Source\PSoC4/UART_1.c ****                 /* Disable input buffers */
 584:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RX_SCL_MOSI_PIN)
 585:.\Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_RX_SCL_MOSI_PIN_MASK;
 586:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 587:.\Generated_Source\PSoC4/UART_1.c **** 
 588:.\Generated_Source\PSoC4/UART_1.c ****              #if (UART_1_RX_WAKE_SCL_MOSI_PIN)
 589:.\Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_RX_WAKE_SCL_MOSI_PIN_MASK;
 590:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_RX_WAKE_SCL_MOSI_PIN) */
 591:.\Generated_Source\PSoC4/UART_1.c **** 
 592:.\Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_SCLK_PIN)
 593:.\Generated_Source\PSoC4/UART_1.c ****                 pinsInBuf |= UART_1_SCLK_PIN_MASK;
 594:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_SCLK_PIN) */
 595:.\Generated_Source\PSoC4/UART_1.c ****             }
 596:.\Generated_Source\PSoC4/UART_1.c ****         }
 597:.\Generated_Source\PSoC4/UART_1.c ****         else /* UART */
 598:.\Generated_Source\PSoC4/UART_1.c ****         {
 599:.\Generated_Source\PSoC4/UART_1.c ****             if (UART_1_UART_MODE_SMARTCARD == subMode)
 600:.\Generated_Source\PSoC4/UART_1.c ****             {
 601:.\Generated_Source\PSoC4/UART_1.c ****                 /* SmartCard */
 602:.\Generated_Source\PSoC4/UART_1.c ****                 hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_HSIOM_UART_SEL;
 603:.\Generated_Source\PSoC4/UART_1.c ****                 pinsDm  [UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_OD_LO;
 604:.\Generated_Source\PSoC4/UART_1.c ****             }
 605:.\Generated_Source\PSoC4/UART_1.c ****             else /* Standard or IrDA */
 606:.\Generated_Source\PSoC4/UART_1.c ****             {
 607:.\Generated_Source\PSoC4/UART_1.c ****                 if (0u != (UART_1_UART_RX_PIN_ENABLE & uartEnableMask))
 608:.\Generated_Source\PSoC4/UART_1.c ****                 {
 609:.\Generated_Source\PSoC4/UART_1.c ****                     hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_HSIOM_UART_SEL;
 610:.\Generated_Source\PSoC4/UART_1.c ****                     pinsDm  [UART_1_RX_SCL_MOSI_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 611:.\Generated_Source\PSoC4/UART_1.c ****                 }
 612:.\Generated_Source\PSoC4/UART_1.c **** 
 613:.\Generated_Source\PSoC4/UART_1.c ****                 if (0u != (UART_1_UART_TX_PIN_ENABLE & uartEnableMask))
 614:.\Generated_Source\PSoC4/UART_1.c ****                 {
 615:.\Generated_Source\PSoC4/UART_1.c ****                     hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_HSIOM_UART_SEL;
 616:.\Generated_Source\PSoC4/UART_1.c ****                     pinsDm  [UART_1_TX_SDA_MISO_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 617:.\Generated_Source\PSoC4/UART_1.c **** 
 618:.\Generated_Source\PSoC4/UART_1.c ****                 #if (UART_1_TX_SDA_MISO_PIN)
 619:.\Generated_Source\PSoC4/UART_1.c ****                      pinsInBuf |= UART_1_TX_SDA_MISO_PIN_MASK;
 620:.\Generated_Source\PSoC4/UART_1.c ****                 #endif /* (UART_1_TX_SDA_MISO_PIN) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 18


 621:.\Generated_Source\PSoC4/UART_1.c ****                 }
 622:.\Generated_Source\PSoC4/UART_1.c **** 
 623:.\Generated_Source\PSoC4/UART_1.c ****             #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 624:.\Generated_Source\PSoC4/UART_1.c ****                 if (UART_1_UART_MODE_STD == subMode)
 625:.\Generated_Source\PSoC4/UART_1.c ****                 {
 626:.\Generated_Source\PSoC4/UART_1.c ****                     if (0u != (UART_1_UART_CTS_PIN_ENABLE & uartEnableMask))
 627:.\Generated_Source\PSoC4/UART_1.c ****                     {
 628:.\Generated_Source\PSoC4/UART_1.c ****                         /* CTS input is multiplexed with SCLK */
 629:.\Generated_Source\PSoC4/UART_1.c ****                         hsiomSel[UART_1_SCLK_PIN_INDEX] = UART_1_HSIOM_UART_SEL;
 630:.\Generated_Source\PSoC4/UART_1.c ****                         pinsDm  [UART_1_SCLK_PIN_INDEX] = UART_1_PIN_DM_DIG_HIZ;
 631:.\Generated_Source\PSoC4/UART_1.c ****                     }
 632:.\Generated_Source\PSoC4/UART_1.c **** 
 633:.\Generated_Source\PSoC4/UART_1.c ****                     if (0u != (UART_1_UART_RTS_PIN_ENABLE & uartEnableMask))
 634:.\Generated_Source\PSoC4/UART_1.c ****                     {
 635:.\Generated_Source\PSoC4/UART_1.c ****                         /* RTS output is multiplexed with SS0 */
 636:.\Generated_Source\PSoC4/UART_1.c ****                         hsiomSel[UART_1_SS0_PIN_INDEX] = UART_1_HSIOM_UART_SEL;
 637:.\Generated_Source\PSoC4/UART_1.c ****                         pinsDm  [UART_1_SS0_PIN_INDEX] = UART_1_PIN_DM_STRONG;
 638:.\Generated_Source\PSoC4/UART_1.c **** 
 639:.\Generated_Source\PSoC4/UART_1.c ****                     #if (UART_1_SS0_PIN)
 640:.\Generated_Source\PSoC4/UART_1.c ****                         /* Disable input buffer */
 641:.\Generated_Source\PSoC4/UART_1.c ****                         pinsInBuf |= UART_1_SS0_PIN_MASK;
 642:.\Generated_Source\PSoC4/UART_1.c ****                     #endif /* (UART_1_SS0_PIN) */
 643:.\Generated_Source\PSoC4/UART_1.c ****                     }
 644:.\Generated_Source\PSoC4/UART_1.c ****                 }
 645:.\Generated_Source\PSoC4/UART_1.c ****             #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 646:.\Generated_Source\PSoC4/UART_1.c ****             }
 647:.\Generated_Source\PSoC4/UART_1.c ****         }
 648:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 649:.\Generated_Source\PSoC4/UART_1.c **** 
 650:.\Generated_Source\PSoC4/UART_1.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 651:.\Generated_Source\PSoC4/UART_1.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 652:.\Generated_Source\PSoC4/UART_1.c **** 
 653:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_WAKE_SCL_MOSI_PIN)
 654:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_RX_WAKE_SCL_MOSI_HSIOM_REG,
 655:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 656:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_WAKE_SCL_MOSI_HSIOM_POS,
 657:.\Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 658:.\Generated_Source\PSoC4/UART_1.c **** 
 659:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 660:.\Generated_Source\PSoC4/UART_1.c ****                                                                pinsDm[UART_1_RX_WAKE_SCL_MOSI_PIN_I
 661:.\Generated_Source\PSoC4/UART_1.c **** 
 662:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 663:.\Generated_Source\PSoC4/UART_1.c ****                                      UART_1_uart_rx_wake_i2c_scl_spi_mosi_MASK,
 664:.\Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_RX_WAKE_SCL_MOSI_PIN_MASK)));
 665:.\Generated_Source\PSoC4/UART_1.c **** 
 666:.\Generated_Source\PSoC4/UART_1.c ****          /* Set interrupt on falling edge */
 667:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INCFG_TYPE(UART_1_RX_WAKE_SCL_MOSI_INTCFG_REG,
 668:.\Generated_Source\PSoC4/UART_1.c ****                                         UART_1_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 669:.\Generated_Source\PSoC4/UART_1.c ****                                         UART_1_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 670:.\Generated_Source\PSoC4/UART_1.c ****                                         UART_1_INTCFG_TYPE_FALLING_EDGE);
 671:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_WAKE_SCL_MOSI_PIN) */
 672:.\Generated_Source\PSoC4/UART_1.c **** 
 673:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_SCL_MOSI_PIN)
 674:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_RX_SCL_MOSI_HSIOM_REG,
 675:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_SCL_MOSI_HSIOM_MASK,
 676:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_RX_SCL_MOSI_HSIOM_POS,
 677:.\Generated_Source\PSoC4/UART_1.c ****                                         hsiomSel[UART_1_RX_SCL_MOSI_PIN_INDEX]);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 19


 678:.\Generated_Source\PSoC4/UART_1.c **** 
 679:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[UART_1_RX_SCL_MOSI_PIN_INDEX]);
 680:.\Generated_Source\PSoC4/UART_1.c **** 
 681:.\Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
 682:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 683:.\Generated_Source\PSoC4/UART_1.c ****                                      UART_1_uart_rx_i2c_scl_spi_mosi_MASK,
 684:.\Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_RX_SCL_MOSI_PIN_MASK)));
 685:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 686:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 687:.\Generated_Source\PSoC4/UART_1.c **** 
 688:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_SDA_MISO_PIN)
 689:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_TX_SDA_MISO_HSIOM_REG,
 690:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_TX_SDA_MISO_HSIOM_MASK,
 691:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_TX_SDA_MISO_HSIOM_POS,
 692:.\Generated_Source\PSoC4/UART_1.c ****                                         hsiomSel[UART_1_TX_SDA_MISO_PIN_INDEX]);
 693:.\Generated_Source\PSoC4/UART_1.c **** 
 694:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[UART_1_TX_SDA_MISO_PIN_INDEX]);
 695:.\Generated_Source\PSoC4/UART_1.c **** 
 696:.\Generated_Source\PSoC4/UART_1.c ****     #if (!UART_1_CY_SCBIP_V1)
 697:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_uart_tx_i2c_sda_spi_miso_INP_DIS,
 698:.\Generated_Source\PSoC4/UART_1.c ****                                      UART_1_uart_tx_i2c_sda_spi_miso_MASK,
 699:.\Generated_Source\PSoC4/UART_1.c ****                                     (0u != (pinsInBuf & UART_1_TX_SDA_MISO_PIN_MASK)));
 700:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (!UART_1_CY_SCBIP_V1) */
 701:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_SCL_MOSI_PIN) */
 702:.\Generated_Source\PSoC4/UART_1.c **** 
 703:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SCLK_PIN)
 704:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SCLK_HSIOM_REG,
 705:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SCLK_HSIOM_MASK,
 706:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SCLK_HSIOM_POS,
 707:.\Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SCLK_PIN_INDEX]);
 708:.\Generated_Source\PSoC4/UART_1.c **** 
 709:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_sclk_SetDriveMode((uint8) pinsDm[UART_1_SCLK_PIN_INDEX]);
 710:.\Generated_Source\PSoC4/UART_1.c **** 
 711:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_sclk_INP_DIS,
 712:.\Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_sclk_MASK,
 713:.\Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SCLK_PIN_MASK)));
 714:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SCLK_PIN) */
 715:.\Generated_Source\PSoC4/UART_1.c **** 
 716:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS0_PIN)
 717:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS0_HSIOM_REG,
 718:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS0_HSIOM_MASK,
 719:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS0_HSIOM_POS,
 720:.\Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS0_PIN_INDEX]);
 721:.\Generated_Source\PSoC4/UART_1.c **** 
 722:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss0_SetDriveMode((uint8) pinsDm[UART_1_SS0_PIN_INDEX]);
 723:.\Generated_Source\PSoC4/UART_1.c **** 
 724:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss0_INP_DIS,
 725:.\Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss0_MASK,
 726:.\Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS0_PIN_MASK)));
 727:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS0_PIN) */
 728:.\Generated_Source\PSoC4/UART_1.c **** 
 729:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS1_PIN)
 730:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS1_HSIOM_REG,
 731:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS1_HSIOM_MASK,
 732:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS1_HSIOM_POS,
 733:.\Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS1_PIN_INDEX]);
 734:.\Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 20


 735:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss1_SetDriveMode((uint8) pinsDm[UART_1_SS1_PIN_INDEX]);
 736:.\Generated_Source\PSoC4/UART_1.c **** 
 737:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss1_INP_DIS,
 738:.\Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss1_MASK,
 739:.\Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS1_PIN_MASK)));
 740:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS1_PIN) */
 741:.\Generated_Source\PSoC4/UART_1.c **** 
 742:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS2_PIN)
 743:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS2_HSIOM_REG,
 744:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS2_HSIOM_MASK,
 745:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS2_HSIOM_POS,
 746:.\Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS2_PIN_INDEX]);
 747:.\Generated_Source\PSoC4/UART_1.c **** 
 748:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss2_SetDriveMode((uint8) pinsDm[UART_1_SS2_PIN_INDEX]);
 749:.\Generated_Source\PSoC4/UART_1.c **** 
 750:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss2_INP_DIS,
 751:.\Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss2_MASK,
 752:.\Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS2_PIN_MASK)));
 753:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS2_PIN) */
 754:.\Generated_Source\PSoC4/UART_1.c **** 
 755:.\Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_SS3_PIN)
 756:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS3_HSIOM_REG,
 757:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS3_HSIOM_MASK,
 758:.\Generated_Source\PSoC4/UART_1.c ****                                        UART_1_SS3_HSIOM_POS,
 759:.\Generated_Source\PSoC4/UART_1.c ****                                        hsiomSel[UART_1_SS3_PIN_INDEX]);
 760:.\Generated_Source\PSoC4/UART_1.c **** 
 761:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_spi_ss3_SetDriveMode((uint8) pinsDm[UART_1_SS3_PIN_INDEX]);
 762:.\Generated_Source\PSoC4/UART_1.c **** 
 763:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_SET_INP_DIS(UART_1_spi_ss3_INP_DIS,
 764:.\Generated_Source\PSoC4/UART_1.c ****                                      UART_1_spi_ss3_MASK,
 765:.\Generated_Source\PSoC4/UART_1.c ****                                      (0u != (pinsInBuf & UART_1_SS3_PIN_MASK)));
 766:.\Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_SS3_PIN) */
 767:.\Generated_Source\PSoC4/UART_1.c ****     }
 768:.\Generated_Source\PSoC4/UART_1.c **** 
 769:.\Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 770:.\Generated_Source\PSoC4/UART_1.c **** 
 771:.\Generated_Source\PSoC4/UART_1.c **** 
 772:.\Generated_Source\PSoC4/UART_1.c **** #if (UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 773:.\Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 774:.\Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_I2CSlaveNackGeneration
 775:.\Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 776:.\Generated_Source\PSoC4/UART_1.c ****     *
 777:.\Generated_Source\PSoC4/UART_1.c ****     * Summary:
 778:.\Generated_Source\PSoC4/UART_1.c ****     *  Sets command to generate NACK to the address or data.
 779:.\Generated_Source\PSoC4/UART_1.c ****     *
 780:.\Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 781:.\Generated_Source\PSoC4/UART_1.c ****     *  None
 782:.\Generated_Source\PSoC4/UART_1.c ****     *
 783:.\Generated_Source\PSoC4/UART_1.c ****     * Return:
 784:.\Generated_Source\PSoC4/UART_1.c ****     *  None
 785:.\Generated_Source\PSoC4/UART_1.c ****     *
 786:.\Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 787:.\Generated_Source\PSoC4/UART_1.c ****     void UART_1_I2CSlaveNackGeneration(void)
 788:.\Generated_Source\PSoC4/UART_1.c ****     {
 350              		.loc 1 788 0
 351              		.cfi_startproc
 352 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 21


 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 00AF     		add	r7, sp, #0
 357              		.cfi_def_cfa_register 7
 789:.\Generated_Source\PSoC4/UART_1.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 790:.\Generated_Source\PSoC4/UART_1.c ****         if ((0u != (UART_1_CTRL_REG & UART_1_CTRL_EC_AM_MODE)) &&
 358              		.loc 1 790 0
 359 0004 0E4B     		ldr	r3, .L23
 360 0006 1A68     		ldr	r2, [r3]
 361 0008 8023     		mov	r3, #128
 362 000a 5B00     		lsl	r3, r3, #1
 363 000c 1340     		and	r3, r2
 364 000e 12D0     		beq	.L22
 791:.\Generated_Source\PSoC4/UART_1.c ****             (0u == (UART_1_I2C_CTRL_REG & UART_1_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 365              		.loc 1 791 0 discriminator 1
 366 0010 0C4B     		ldr	r3, .L23+4
 367 0012 1A68     		ldr	r2, [r3]
 368 0014 8023     		mov	r3, #128
 369 0016 DB01     		lsl	r3, r3, #7
 370 0018 1340     		and	r3, r2
 790:.\Generated_Source\PSoC4/UART_1.c ****         if ((0u != (UART_1_CTRL_REG & UART_1_CTRL_EC_AM_MODE)) &&
 371              		.loc 1 790 0 discriminator 1
 372 001a 0CD1     		bne	.L22
 792:.\Generated_Source\PSoC4/UART_1.c ****         {
 793:.\Generated_Source\PSoC4/UART_1.c ****             /* Toggle EC_AM before NACK generation */
 794:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_CTRL_REG &= ~UART_1_CTRL_EC_AM_MODE;
 373              		.loc 1 794 0
 374 001c 084B     		ldr	r3, .L23
 375 001e 084A     		ldr	r2, .L23
 376 0020 1168     		ldr	r1, [r2]
 377 0022 094A     		ldr	r2, .L23+8
 378 0024 0A40     		and	r2, r1
 379 0026 1A60     		str	r2, [r3]
 795:.\Generated_Source\PSoC4/UART_1.c ****             UART_1_CTRL_REG |=  UART_1_CTRL_EC_AM_MODE;
 380              		.loc 1 795 0
 381 0028 054B     		ldr	r3, .L23
 382 002a 054A     		ldr	r2, .L23
 383 002c 1268     		ldr	r2, [r2]
 384 002e 8021     		mov	r1, #128
 385 0030 4900     		lsl	r1, r1, #1
 386 0032 0A43     		orr	r2, r1
 387 0034 1A60     		str	r2, [r3]
 388              	.L22:
 796:.\Generated_Source\PSoC4/UART_1.c ****         }
 797:.\Generated_Source\PSoC4/UART_1.c **** 
 798:.\Generated_Source\PSoC4/UART_1.c ****         UART_1_I2C_SLAVE_CMD_REG = UART_1_I2C_SLAVE_CMD_S_NACK;
 389              		.loc 1 798 0
 390 0036 054B     		ldr	r3, .L23+12
 391 0038 0222     		mov	r2, #2
 392 003a 1A60     		str	r2, [r3]
 799:.\Generated_Source\PSoC4/UART_1.c ****     }
 393              		.loc 1 799 0
 394 003c BD46     		mov	sp, r7
 395              		@ sp needed
 396 003e 80BD     		pop	{r7, pc}
 397              	.L24:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 22


 398              		.align	2
 399              	.L23:
 400 0040 00000640 		.word	1074135040
 401 0044 60000640 		.word	1074135136
 402 0048 FFFEFFFF 		.word	-257
 403 004c 6C000640 		.word	1074135148
 404              		.cfi_endproc
 405              	.LFE9:
 406              		.size	UART_1_I2CSlaveNackGeneration, .-UART_1_I2CSlaveNackGeneration
 407              		.text
 408              	.Letext0:
 409              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 410              		.section	.debug_info,"",%progbits
 411              	.Ldebug_info0:
 412 0000 B2010000 		.4byte	0x1b2
 413 0004 0400     		.2byte	0x4
 414 0006 00000000 		.4byte	.Ldebug_abbrev0
 415 000a 04       		.byte	0x4
 416 000b 01       		.uleb128 0x1
 417 000c 16020000 		.4byte	.LASF29
 418 0010 01       		.byte	0x1
 419 0011 E8010000 		.4byte	.LASF30
 420 0015 EA000000 		.4byte	.LASF31
 421 0019 00000000 		.4byte	.Ldebug_ranges0+0
 422 001d 00000000 		.4byte	0
 423 0021 00000000 		.4byte	.Ldebug_line0
 424 0025 02       		.uleb128 0x2
 425 0026 01       		.byte	0x1
 426 0027 06       		.byte	0x6
 427 0028 0A020000 		.4byte	.LASF0
 428 002c 02       		.uleb128 0x2
 429 002d 01       		.byte	0x1
 430 002e 08       		.byte	0x8
 431 002f 9C000000 		.4byte	.LASF1
 432 0033 02       		.uleb128 0x2
 433 0034 02       		.byte	0x2
 434 0035 05       		.byte	0x5
 435 0036 A0010000 		.4byte	.LASF2
 436 003a 02       		.uleb128 0x2
 437 003b 02       		.byte	0x2
 438 003c 07       		.byte	0x7
 439 003d 52000000 		.4byte	.LASF3
 440 0041 02       		.uleb128 0x2
 441 0042 04       		.byte	0x4
 442 0043 05       		.byte	0x5
 443 0044 CB010000 		.4byte	.LASF4
 444 0048 02       		.uleb128 0x2
 445 0049 04       		.byte	0x4
 446 004a 07       		.byte	0x7
 447 004b B6000000 		.4byte	.LASF5
 448 004f 02       		.uleb128 0x2
 449 0050 08       		.byte	0x8
 450 0051 05       		.byte	0x5
 451 0052 8D010000 		.4byte	.LASF6
 452 0056 02       		.uleb128 0x2
 453 0057 08       		.byte	0x8
 454 0058 07       		.byte	0x7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 23


 455 0059 6D010000 		.4byte	.LASF7
 456 005d 03       		.uleb128 0x3
 457 005e 04       		.byte	0x4
 458 005f 05       		.byte	0x5
 459 0060 696E7400 		.ascii	"int\000"
 460 0064 02       		.uleb128 0x2
 461 0065 04       		.byte	0x4
 462 0066 07       		.byte	0x7
 463 0067 60010000 		.4byte	.LASF8
 464 006b 04       		.uleb128 0x4
 465 006c C8000000 		.4byte	.LASF9
 466 0070 02       		.byte	0x2
 467 0071 C1       		.byte	0xc1
 468 0072 2C000000 		.4byte	0x2c
 469 0076 04       		.uleb128 0x4
 470 0077 59010000 		.4byte	.LASF10
 471 007b 02       		.byte	0x2
 472 007c C3       		.byte	0xc3
 473 007d 48000000 		.4byte	0x48
 474 0081 02       		.uleb128 0x2
 475 0082 04       		.byte	0x4
 476 0083 04       		.byte	0x4
 477 0084 83000000 		.4byte	.LASF11
 478 0088 02       		.uleb128 0x2
 479 0089 08       		.byte	0x8
 480 008a 04       		.byte	0x4
 481 008b E3000000 		.4byte	.LASF12
 482 008f 02       		.uleb128 0x2
 483 0090 01       		.byte	0x1
 484 0091 08       		.byte	0x8
 485 0092 9B010000 		.4byte	.LASF13
 486 0096 05       		.uleb128 0x5
 487 0097 D4010000 		.4byte	.LASF14
 488 009b 02       		.byte	0x2
 489 009c 6D01     		.2byte	0x16d
 490 009e A2000000 		.4byte	0xa2
 491 00a2 06       		.uleb128 0x6
 492 00a3 76000000 		.4byte	0x76
 493 00a7 02       		.uleb128 0x2
 494 00a8 04       		.byte	0x4
 495 00a9 07       		.byte	0x7
 496 00aa 84010000 		.4byte	.LASF15
 497 00ae 07       		.uleb128 0x7
 498 00af 00000000 		.4byte	.LASF16
 499 00b3 01       		.byte	0x1
 500 00b4 66       		.byte	0x66
 501 00b5 00000000 		.4byte	.LFB0
 502 00b9 0C000000 		.4byte	.LFE0-.LFB0
 503 00bd 01       		.uleb128 0x1
 504 00be 9C       		.byte	0x9c
 505 00bf 07       		.uleb128 0x7
 506 00c0 DA010000 		.4byte	.LASF17
 507 00c4 01       		.byte	0x1
 508 00c5 92       		.byte	0x92
 509 00c6 00000000 		.4byte	.LFB1
 510 00ca 24000000 		.4byte	.LFE1-.LFB1
 511 00ce 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 24


 512 00cf 9C       		.byte	0x9c
 513 00d0 07       		.uleb128 0x7
 514 00d1 0C000000 		.4byte	.LASF18
 515 00d5 01       		.byte	0x1
 516 00d6 C0       		.byte	0xc0
 517 00d7 00000000 		.4byte	.LFB2
 518 00db 24000000 		.4byte	.LFE2-.LFB2
 519 00df 01       		.uleb128 0x1
 520 00e0 9C       		.byte	0x9c
 521 00e1 07       		.uleb128 0x7
 522 00e2 AA000000 		.4byte	.LASF19
 523 00e6 01       		.byte	0x1
 524 00e7 DD       		.byte	0xdd
 525 00e8 00000000 		.4byte	.LFB3
 526 00ec 28000000 		.4byte	.LFE3-.LFB3
 527 00f0 01       		.uleb128 0x1
 528 00f1 9C       		.byte	0x9c
 529 00f2 08       		.uleb128 0x8
 530 00f3 92020000 		.4byte	.LASF20
 531 00f7 01       		.byte	0x1
 532 00f8 0A01     		.2byte	0x10a
 533 00fa 00000000 		.4byte	.LFB4
 534 00fe 34000000 		.4byte	.LFE4-.LFB4
 535 0102 01       		.uleb128 0x1
 536 0103 9C       		.byte	0x9c
 537 0104 27010000 		.4byte	0x127
 538 0108 09       		.uleb128 0x9
 539 0109 33000000 		.4byte	.LASF22
 540 010d 01       		.byte	0x1
 541 010e 0A01     		.2byte	0x10a
 542 0110 76000000 		.4byte	0x76
 543 0114 02       		.uleb128 0x2
 544 0115 91       		.byte	0x91
 545 0116 6C       		.sleb128 -20
 546 0117 0A       		.uleb128 0xa
 547 0118 C0010000 		.4byte	.LASF23
 548 011c 01       		.byte	0x1
 549 011d 0C01     		.2byte	0x10c
 550 011f 76000000 		.4byte	0x76
 551 0123 02       		.uleb128 0x2
 552 0124 91       		.byte	0x91
 553 0125 74       		.sleb128 -12
 554 0126 00       		.byte	0
 555 0127 08       		.uleb128 0x8
 556 0128 AA010000 		.4byte	.LASF21
 557 012c 01       		.byte	0x1
 558 012d 2801     		.2byte	0x128
 559 012f 00000000 		.4byte	.LFB5
 560 0133 34000000 		.4byte	.LFE5-.LFB5
 561 0137 01       		.uleb128 0x1
 562 0138 9C       		.byte	0x9c
 563 0139 5C010000 		.4byte	0x15c
 564 013d 09       		.uleb128 0x9
 565 013e 33000000 		.4byte	.LASF22
 566 0142 01       		.byte	0x1
 567 0143 2801     		.2byte	0x128
 568 0145 76000000 		.4byte	0x76
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 25


 569 0149 02       		.uleb128 0x2
 570 014a 91       		.byte	0x91
 571 014b 6C       		.sleb128 -20
 572 014c 0A       		.uleb128 0xa
 573 014d 19000000 		.4byte	.LASF24
 574 0151 01       		.byte	0x1
 575 0152 2A01     		.2byte	0x12a
 576 0154 76000000 		.4byte	0x76
 577 0158 02       		.uleb128 0x2
 578 0159 91       		.byte	0x91
 579 015a 74       		.sleb128 -12
 580 015b 00       		.byte	0
 581 015c 0B       		.uleb128 0xb
 582 015d CE000000 		.4byte	.LASF25
 583 0161 01       		.byte	0x1
 584 0162 6801     		.2byte	0x168
 585 0164 00000000 		.4byte	.LFB6
 586 0168 08000000 		.4byte	.LFE6-.LFB6
 587 016c 01       		.uleb128 0x1
 588 016d 9C       		.byte	0x9c
 589 016e 0C       		.uleb128 0xc
 590 016f 39000000 		.4byte	.LASF26
 591 0173 01       		.byte	0x1
 592 0174 8801     		.2byte	0x188
 593 0176 00000000 		.4byte	.LFB7
 594 017a 0C000000 		.4byte	.LFE7-.LFB7
 595 017e 01       		.uleb128 0x1
 596 017f 9C       		.byte	0x9c
 597 0180 0C       		.uleb128 0xc
 598 0181 89000000 		.4byte	.LASF27
 599 0185 01       		.byte	0x1
 600 0186 B401     		.2byte	0x1b4
 601 0188 00000000 		.4byte	.LFB8
 602 018c 0C000000 		.4byte	.LFE8-.LFB8
 603 0190 01       		.uleb128 0x1
 604 0191 9C       		.byte	0x9c
 605 0192 0D       		.uleb128 0xd
 606 0193 65000000 		.4byte	.LASF28
 607 0197 01       		.byte	0x1
 608 0198 1303     		.2byte	0x313
 609 019a 00000000 		.4byte	.LFB9
 610 019e 50000000 		.4byte	.LFE9-.LFB9
 611 01a2 01       		.uleb128 0x1
 612 01a3 9C       		.byte	0x9c
 613 01a4 0E       		.uleb128 0xe
 614 01a5 24000000 		.4byte	.LASF32
 615 01a9 01       		.byte	0x1
 616 01aa 42       		.byte	0x42
 617 01ab 6B000000 		.4byte	0x6b
 618 01af 05       		.uleb128 0x5
 619 01b0 03       		.byte	0x3
 620 01b1 00000000 		.4byte	UART_1_initVar
 621 01b5 00       		.byte	0
 622              		.section	.debug_abbrev,"",%progbits
 623              	.Ldebug_abbrev0:
 624 0000 01       		.uleb128 0x1
 625 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 26


 626 0002 01       		.byte	0x1
 627 0003 25       		.uleb128 0x25
 628 0004 0E       		.uleb128 0xe
 629 0005 13       		.uleb128 0x13
 630 0006 0B       		.uleb128 0xb
 631 0007 03       		.uleb128 0x3
 632 0008 0E       		.uleb128 0xe
 633 0009 1B       		.uleb128 0x1b
 634 000a 0E       		.uleb128 0xe
 635 000b 55       		.uleb128 0x55
 636 000c 17       		.uleb128 0x17
 637 000d 11       		.uleb128 0x11
 638 000e 01       		.uleb128 0x1
 639 000f 10       		.uleb128 0x10
 640 0010 17       		.uleb128 0x17
 641 0011 00       		.byte	0
 642 0012 00       		.byte	0
 643 0013 02       		.uleb128 0x2
 644 0014 24       		.uleb128 0x24
 645 0015 00       		.byte	0
 646 0016 0B       		.uleb128 0xb
 647 0017 0B       		.uleb128 0xb
 648 0018 3E       		.uleb128 0x3e
 649 0019 0B       		.uleb128 0xb
 650 001a 03       		.uleb128 0x3
 651 001b 0E       		.uleb128 0xe
 652 001c 00       		.byte	0
 653 001d 00       		.byte	0
 654 001e 03       		.uleb128 0x3
 655 001f 24       		.uleb128 0x24
 656 0020 00       		.byte	0
 657 0021 0B       		.uleb128 0xb
 658 0022 0B       		.uleb128 0xb
 659 0023 3E       		.uleb128 0x3e
 660 0024 0B       		.uleb128 0xb
 661 0025 03       		.uleb128 0x3
 662 0026 08       		.uleb128 0x8
 663 0027 00       		.byte	0
 664 0028 00       		.byte	0
 665 0029 04       		.uleb128 0x4
 666 002a 16       		.uleb128 0x16
 667 002b 00       		.byte	0
 668 002c 03       		.uleb128 0x3
 669 002d 0E       		.uleb128 0xe
 670 002e 3A       		.uleb128 0x3a
 671 002f 0B       		.uleb128 0xb
 672 0030 3B       		.uleb128 0x3b
 673 0031 0B       		.uleb128 0xb
 674 0032 49       		.uleb128 0x49
 675 0033 13       		.uleb128 0x13
 676 0034 00       		.byte	0
 677 0035 00       		.byte	0
 678 0036 05       		.uleb128 0x5
 679 0037 16       		.uleb128 0x16
 680 0038 00       		.byte	0
 681 0039 03       		.uleb128 0x3
 682 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 27


 683 003b 3A       		.uleb128 0x3a
 684 003c 0B       		.uleb128 0xb
 685 003d 3B       		.uleb128 0x3b
 686 003e 05       		.uleb128 0x5
 687 003f 49       		.uleb128 0x49
 688 0040 13       		.uleb128 0x13
 689 0041 00       		.byte	0
 690 0042 00       		.byte	0
 691 0043 06       		.uleb128 0x6
 692 0044 35       		.uleb128 0x35
 693 0045 00       		.byte	0
 694 0046 49       		.uleb128 0x49
 695 0047 13       		.uleb128 0x13
 696 0048 00       		.byte	0
 697 0049 00       		.byte	0
 698 004a 07       		.uleb128 0x7
 699 004b 2E       		.uleb128 0x2e
 700 004c 00       		.byte	0
 701 004d 3F       		.uleb128 0x3f
 702 004e 19       		.uleb128 0x19
 703 004f 03       		.uleb128 0x3
 704 0050 0E       		.uleb128 0xe
 705 0051 3A       		.uleb128 0x3a
 706 0052 0B       		.uleb128 0xb
 707 0053 3B       		.uleb128 0x3b
 708 0054 0B       		.uleb128 0xb
 709 0055 27       		.uleb128 0x27
 710 0056 19       		.uleb128 0x19
 711 0057 11       		.uleb128 0x11
 712 0058 01       		.uleb128 0x1
 713 0059 12       		.uleb128 0x12
 714 005a 06       		.uleb128 0x6
 715 005b 40       		.uleb128 0x40
 716 005c 18       		.uleb128 0x18
 717 005d 9642     		.uleb128 0x2116
 718 005f 19       		.uleb128 0x19
 719 0060 00       		.byte	0
 720 0061 00       		.byte	0
 721 0062 08       		.uleb128 0x8
 722 0063 2E       		.uleb128 0x2e
 723 0064 01       		.byte	0x1
 724 0065 3F       		.uleb128 0x3f
 725 0066 19       		.uleb128 0x19
 726 0067 03       		.uleb128 0x3
 727 0068 0E       		.uleb128 0xe
 728 0069 3A       		.uleb128 0x3a
 729 006a 0B       		.uleb128 0xb
 730 006b 3B       		.uleb128 0x3b
 731 006c 05       		.uleb128 0x5
 732 006d 27       		.uleb128 0x27
 733 006e 19       		.uleb128 0x19
 734 006f 11       		.uleb128 0x11
 735 0070 01       		.uleb128 0x1
 736 0071 12       		.uleb128 0x12
 737 0072 06       		.uleb128 0x6
 738 0073 40       		.uleb128 0x40
 739 0074 18       		.uleb128 0x18
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 28


 740 0075 9742     		.uleb128 0x2117
 741 0077 19       		.uleb128 0x19
 742 0078 01       		.uleb128 0x1
 743 0079 13       		.uleb128 0x13
 744 007a 00       		.byte	0
 745 007b 00       		.byte	0
 746 007c 09       		.uleb128 0x9
 747 007d 05       		.uleb128 0x5
 748 007e 00       		.byte	0
 749 007f 03       		.uleb128 0x3
 750 0080 0E       		.uleb128 0xe
 751 0081 3A       		.uleb128 0x3a
 752 0082 0B       		.uleb128 0xb
 753 0083 3B       		.uleb128 0x3b
 754 0084 05       		.uleb128 0x5
 755 0085 49       		.uleb128 0x49
 756 0086 13       		.uleb128 0x13
 757 0087 02       		.uleb128 0x2
 758 0088 18       		.uleb128 0x18
 759 0089 00       		.byte	0
 760 008a 00       		.byte	0
 761 008b 0A       		.uleb128 0xa
 762 008c 34       		.uleb128 0x34
 763 008d 00       		.byte	0
 764 008e 03       		.uleb128 0x3
 765 008f 0E       		.uleb128 0xe
 766 0090 3A       		.uleb128 0x3a
 767 0091 0B       		.uleb128 0xb
 768 0092 3B       		.uleb128 0x3b
 769 0093 05       		.uleb128 0x5
 770 0094 49       		.uleb128 0x49
 771 0095 13       		.uleb128 0x13
 772 0096 02       		.uleb128 0x2
 773 0097 18       		.uleb128 0x18
 774 0098 00       		.byte	0
 775 0099 00       		.byte	0
 776 009a 0B       		.uleb128 0xb
 777 009b 2E       		.uleb128 0x2e
 778 009c 00       		.byte	0
 779 009d 03       		.uleb128 0x3
 780 009e 0E       		.uleb128 0xe
 781 009f 3A       		.uleb128 0x3a
 782 00a0 0B       		.uleb128 0xb
 783 00a1 3B       		.uleb128 0x3b
 784 00a2 05       		.uleb128 0x5
 785 00a3 27       		.uleb128 0x27
 786 00a4 19       		.uleb128 0x19
 787 00a5 11       		.uleb128 0x11
 788 00a6 01       		.uleb128 0x1
 789 00a7 12       		.uleb128 0x12
 790 00a8 06       		.uleb128 0x6
 791 00a9 40       		.uleb128 0x40
 792 00aa 18       		.uleb128 0x18
 793 00ab 9742     		.uleb128 0x2117
 794 00ad 19       		.uleb128 0x19
 795 00ae 00       		.byte	0
 796 00af 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 29


 797 00b0 0C       		.uleb128 0xc
 798 00b1 2E       		.uleb128 0x2e
 799 00b2 00       		.byte	0
 800 00b3 03       		.uleb128 0x3
 801 00b4 0E       		.uleb128 0xe
 802 00b5 3A       		.uleb128 0x3a
 803 00b6 0B       		.uleb128 0xb
 804 00b7 3B       		.uleb128 0x3b
 805 00b8 05       		.uleb128 0x5
 806 00b9 27       		.uleb128 0x27
 807 00ba 19       		.uleb128 0x19
 808 00bb 11       		.uleb128 0x11
 809 00bc 01       		.uleb128 0x1
 810 00bd 12       		.uleb128 0x12
 811 00be 06       		.uleb128 0x6
 812 00bf 40       		.uleb128 0x40
 813 00c0 18       		.uleb128 0x18
 814 00c1 9642     		.uleb128 0x2116
 815 00c3 19       		.uleb128 0x19
 816 00c4 00       		.byte	0
 817 00c5 00       		.byte	0
 818 00c6 0D       		.uleb128 0xd
 819 00c7 2E       		.uleb128 0x2e
 820 00c8 00       		.byte	0
 821 00c9 3F       		.uleb128 0x3f
 822 00ca 19       		.uleb128 0x19
 823 00cb 03       		.uleb128 0x3
 824 00cc 0E       		.uleb128 0xe
 825 00cd 3A       		.uleb128 0x3a
 826 00ce 0B       		.uleb128 0xb
 827 00cf 3B       		.uleb128 0x3b
 828 00d0 05       		.uleb128 0x5
 829 00d1 27       		.uleb128 0x27
 830 00d2 19       		.uleb128 0x19
 831 00d3 11       		.uleb128 0x11
 832 00d4 01       		.uleb128 0x1
 833 00d5 12       		.uleb128 0x12
 834 00d6 06       		.uleb128 0x6
 835 00d7 40       		.uleb128 0x40
 836 00d8 18       		.uleb128 0x18
 837 00d9 9742     		.uleb128 0x2117
 838 00db 19       		.uleb128 0x19
 839 00dc 00       		.byte	0
 840 00dd 00       		.byte	0
 841 00de 0E       		.uleb128 0xe
 842 00df 34       		.uleb128 0x34
 843 00e0 00       		.byte	0
 844 00e1 03       		.uleb128 0x3
 845 00e2 0E       		.uleb128 0xe
 846 00e3 3A       		.uleb128 0x3a
 847 00e4 0B       		.uleb128 0xb
 848 00e5 3B       		.uleb128 0x3b
 849 00e6 0B       		.uleb128 0xb
 850 00e7 49       		.uleb128 0x49
 851 00e8 13       		.uleb128 0x13
 852 00e9 3F       		.uleb128 0x3f
 853 00ea 19       		.uleb128 0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 30


 854 00eb 02       		.uleb128 0x2
 855 00ec 18       		.uleb128 0x18
 856 00ed 00       		.byte	0
 857 00ee 00       		.byte	0
 858 00ef 00       		.byte	0
 859              		.section	.debug_aranges,"",%progbits
 860 0000 64000000 		.4byte	0x64
 861 0004 0200     		.2byte	0x2
 862 0006 00000000 		.4byte	.Ldebug_info0
 863 000a 04       		.byte	0x4
 864 000b 00       		.byte	0
 865 000c 0000     		.2byte	0
 866 000e 0000     		.2byte	0
 867 0010 00000000 		.4byte	.LFB0
 868 0014 0C000000 		.4byte	.LFE0-.LFB0
 869 0018 00000000 		.4byte	.LFB1
 870 001c 24000000 		.4byte	.LFE1-.LFB1
 871 0020 00000000 		.4byte	.LFB2
 872 0024 24000000 		.4byte	.LFE2-.LFB2
 873 0028 00000000 		.4byte	.LFB3
 874 002c 28000000 		.4byte	.LFE3-.LFB3
 875 0030 00000000 		.4byte	.LFB4
 876 0034 34000000 		.4byte	.LFE4-.LFB4
 877 0038 00000000 		.4byte	.LFB5
 878 003c 34000000 		.4byte	.LFE5-.LFB5
 879 0040 00000000 		.4byte	.LFB6
 880 0044 08000000 		.4byte	.LFE6-.LFB6
 881 0048 00000000 		.4byte	.LFB7
 882 004c 0C000000 		.4byte	.LFE7-.LFB7
 883 0050 00000000 		.4byte	.LFB8
 884 0054 0C000000 		.4byte	.LFE8-.LFB8
 885 0058 00000000 		.4byte	.LFB9
 886 005c 50000000 		.4byte	.LFE9-.LFB9
 887 0060 00000000 		.4byte	0
 888 0064 00000000 		.4byte	0
 889              		.section	.debug_ranges,"",%progbits
 890              	.Ldebug_ranges0:
 891 0000 00000000 		.4byte	.LFB0
 892 0004 0C000000 		.4byte	.LFE0
 893 0008 00000000 		.4byte	.LFB1
 894 000c 24000000 		.4byte	.LFE1
 895 0010 00000000 		.4byte	.LFB2
 896 0014 24000000 		.4byte	.LFE2
 897 0018 00000000 		.4byte	.LFB3
 898 001c 28000000 		.4byte	.LFE3
 899 0020 00000000 		.4byte	.LFB4
 900 0024 34000000 		.4byte	.LFE4
 901 0028 00000000 		.4byte	.LFB5
 902 002c 34000000 		.4byte	.LFE5
 903 0030 00000000 		.4byte	.LFB6
 904 0034 08000000 		.4byte	.LFE6
 905 0038 00000000 		.4byte	.LFB7
 906 003c 0C000000 		.4byte	.LFE7
 907 0040 00000000 		.4byte	.LFB8
 908 0044 0C000000 		.4byte	.LFE8
 909 0048 00000000 		.4byte	.LFB9
 910 004c 50000000 		.4byte	.LFE9
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 31


 911 0050 00000000 		.4byte	0
 912 0054 00000000 		.4byte	0
 913              		.section	.debug_line,"",%progbits
 914              	.Ldebug_line0:
 915 0000 3B010000 		.section	.debug_str,"MS",%progbits,1
 915      02005C00 
 915      00000201 
 915      FB0E0D00 
 915      01010101 
 916              	.LASF16:
 917 0000 55415254 		.ascii	"UART_1_Init\000"
 917      5F315F49 
 917      6E697400 
 918              	.LASF18:
 919 000c 55415254 		.ascii	"UART_1_Start\000"
 919      5F315F53 
 919      74617274 
 919      00
 920              	.LASF24:
 921 0019 74784669 		.ascii	"txFifoCtrl\000"
 921      666F4374 
 921      726C00
 922              	.LASF32:
 923 0024 55415254 		.ascii	"UART_1_initVar\000"
 923      5F315F69 
 923      6E697456 
 923      617200
 924              	.LASF22:
 925 0033 6C657665 		.ascii	"level\000"
 925      6C00
 926              	.LASF26:
 927 0039 55415254 		.ascii	"UART_1_ScbModePostEnable\000"
 927      5F315F53 
 927      63624D6F 
 927      6465506F 
 927      7374456E 
 928              	.LASF3:
 929 0052 73686F72 		.ascii	"short unsigned int\000"
 929      7420756E 
 929      7369676E 
 929      65642069 
 929      6E7400
 930              	.LASF28:
 931 0065 55415254 		.ascii	"UART_1_I2CSlaveNackGeneration\000"
 931      5F315F49 
 931      3243536C 
 931      6176654E 
 931      61636B47 
 932              	.LASF11:
 933 0083 666C6F61 		.ascii	"float\000"
 933      7400
 934              	.LASF27:
 935 0089 55415254 		.ascii	"UART_1_ScbModeStop\000"
 935      5F315F53 
 935      63624D6F 
 935      64655374 
 935      6F7000
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 32


 936              	.LASF1:
 937 009c 756E7369 		.ascii	"unsigned char\000"
 937      676E6564 
 937      20636861 
 937      7200
 938              	.LASF19:
 939 00aa 55415254 		.ascii	"UART_1_Stop\000"
 939      5F315F53 
 939      746F7000 
 940              	.LASF5:
 941 00b6 6C6F6E67 		.ascii	"long unsigned int\000"
 941      20756E73 
 941      69676E65 
 941      6420696E 
 941      7400
 942              	.LASF9:
 943 00c8 75696E74 		.ascii	"uint8\000"
 943      3800
 944              	.LASF25:
 945 00ce 55415254 		.ascii	"UART_1_ScbEnableIntr\000"
 945      5F315F53 
 945      6362456E 
 945      61626C65 
 945      496E7472 
 946              	.LASF12:
 947 00e3 646F7562 		.ascii	"double\000"
 947      6C6500
 948              	.LASF31:
 949 00ea 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 949      73657273 
 949      5C6D6974 
 949      6368656C 
 949      6C5C446F 
 950 0117 2D546872 		.ascii	"-Throttle\\ExampleProject1\\Lab Solutions\\Lab 3 Ca"
 950      6F74746C 
 950      655C4578 
 950      616D706C 
 950      6550726F 
 951 0147 7053656E 		.ascii	"pSense UART.cydsn\000"
 951      73652055 
 951      4152542E 
 951      63796473 
 951      6E00
 952              	.LASF10:
 953 0159 75696E74 		.ascii	"uint32\000"
 953      333200
 954              	.LASF8:
 955 0160 756E7369 		.ascii	"unsigned int\000"
 955      676E6564 
 955      20696E74 
 955      00
 956              	.LASF7:
 957 016d 6C6F6E67 		.ascii	"long long unsigned int\000"
 957      206C6F6E 
 957      6720756E 
 957      7369676E 
 957      65642069 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 33


 958              	.LASF15:
 959 0184 73697A65 		.ascii	"sizetype\000"
 959      74797065 
 959      00
 960              	.LASF6:
 961 018d 6C6F6E67 		.ascii	"long long int\000"
 961      206C6F6E 
 961      6720696E 
 961      7400
 962              	.LASF13:
 963 019b 63686172 		.ascii	"char\000"
 963      00
 964              	.LASF2:
 965 01a0 73686F72 		.ascii	"short int\000"
 965      7420696E 
 965      7400
 966              	.LASF21:
 967 01aa 55415254 		.ascii	"UART_1_SetTxFifoLevel\000"
 967      5F315F53 
 967      65745478 
 967      4669666F 
 967      4C657665 
 968              	.LASF23:
 969 01c0 72784669 		.ascii	"rxFifoCtrl\000"
 969      666F4374 
 969      726C00
 970              	.LASF4:
 971 01cb 6C6F6E67 		.ascii	"long int\000"
 971      20696E74 
 971      00
 972              	.LASF14:
 973 01d4 72656733 		.ascii	"reg32\000"
 973      3200
 974              	.LASF17:
 975 01da 55415254 		.ascii	"UART_1_Enable\000"
 975      5F315F45 
 975      6E61626C 
 975      6500
 976              	.LASF30:
 977 01e8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_1.c\000"
 977      6E657261 
 977      7465645F 
 977      536F7572 
 977      63655C50 
 978              	.LASF0:
 979 020a 7369676E 		.ascii	"signed char\000"
 979      65642063 
 979      68617200 
 980              	.LASF29:
 981 0216 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 981      4320342E 
 981      382E3420 
 981      32303134 
 981      30353236 
 982 0249 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 982      20726576 
 982      6973696F 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccCOyMBS.s 			page 34


 982      6E203231 
 982      31333538 
 983 027c 30202D66 		.ascii	"0 -ffunction-sections\000"
 983      66756E63 
 983      74696F6E 
 983      2D736563 
 983      74696F6E 
 984              	.LASF20:
 985 0292 55415254 		.ascii	"UART_1_SetRxFifoLevel\000"
 985      5F315F53 
 985      65745278 
 985      4669666F 
 985      4C657665 
 986              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
