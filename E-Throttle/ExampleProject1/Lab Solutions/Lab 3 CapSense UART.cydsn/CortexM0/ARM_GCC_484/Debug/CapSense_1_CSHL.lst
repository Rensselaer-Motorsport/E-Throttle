ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_1_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	CapSense_1_sensorBaseline
  18              		.bss
  19              		.align	2
  20              		.type	CapSense_1_sensorBaseline, %object
  21              		.size	CapSense_1_sensorBaseline, 10
  22              	CapSense_1_sensorBaseline:
  23 0000 00000000 		.space	10
  23      00000000 
  23      0000
  24              		.global	CapSense_1_sensorBaselineLow
  25 000a 0000     		.align	2
  26              		.type	CapSense_1_sensorBaselineLow, %object
  27              		.size	CapSense_1_sensorBaselineLow, 5
  28              	CapSense_1_sensorBaselineLow:
  29 000c 00000000 		.space	5
  29      00
  30              		.global	CapSense_1_sensorSignal
  31 0011 000000   		.align	2
  32              		.type	CapSense_1_sensorSignal, %object
  33              		.size	CapSense_1_sensorSignal, 5
  34              	CapSense_1_sensorSignal:
  35 0014 00000000 		.space	5
  35      00
  36              		.global	CapSense_1_sensorOnMask
  37 0019 000000   		.align	2
  38              		.type	CapSense_1_sensorOnMask, %object
  39              		.size	CapSense_1_sensorOnMask, 1
  40              	CapSense_1_sensorOnMask:
  41 001c 00       		.space	1
  42              		.comm	CapSense_1_lowBaselineResetCnt,5,4
  43              		.global	CapSense_1_lowBaselineReset
  44              		.data
  45              		.align	2
  46              		.type	CapSense_1_lowBaselineReset, %object
  47              		.size	CapSense_1_lowBaselineReset, 5
  48              	CapSense_1_lowBaselineReset:
  49 0000 05       		.byte	5
  50 0001 05       		.byte	5
  51 0002 05       		.byte	5
  52 0003 05       		.byte	5
  53 0004 05       		.byte	5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 2


  54              		.global	CapSense_1_fingerThreshold
  55              		.section	.rodata
  56              		.align	2
  57              		.type	CapSense_1_fingerThreshold, %object
  58              		.size	CapSense_1_fingerThreshold, 1
  59              	CapSense_1_fingerThreshold:
  60 0000 64       		.byte	100
  61              		.global	CapSense_1_noiseThreshold
  62 0001 000000   		.align	2
  63              		.type	CapSense_1_noiseThreshold, %object
  64              		.size	CapSense_1_noiseThreshold, 1
  65              	CapSense_1_noiseThreshold:
  66 0004 14       		.byte	20
  67              		.global	CapSense_1_hysteresis
  68 0005 000000   		.align	2
  69              		.type	CapSense_1_hysteresis, %object
  70              		.size	CapSense_1_hysteresis, 1
  71              	CapSense_1_hysteresis:
  72 0008 00       		.space	1
  73              		.global	CapSense_1_debounce
  74 0009 000000   		.align	2
  75              		.type	CapSense_1_debounce, %object
  76              		.size	CapSense_1_debounce, 1
  77              	CapSense_1_debounce:
  78 000c 01       		.byte	1
  79              		.global	CapSense_1_rawDataIndex
  80 000d 000000   		.align	2
  81              		.type	CapSense_1_rawDataIndex, %object
  82              		.size	CapSense_1_rawDataIndex, 1
  83              	CapSense_1_rawDataIndex:
  84 0010 00       		.space	1
  85              		.global	CapSense_1_numberOfSensors
  86 0011 000000   		.align	2
  87              		.type	CapSense_1_numberOfSensors, %object
  88              		.size	CapSense_1_numberOfSensors, 1
  89              	CapSense_1_numberOfSensors:
  90 0014 05       		.byte	5
  91 0015 000000   		.align	2
  92              		.type	CapSense_1_centroidMult, %object
  93              		.size	CapSense_1_centroidMult, 2
  94              	CapSense_1_centroidMult:
  95 0018 C03F     		.short	16320
  96 001a 0000     		.align	2
  97              		.type	CapSense_1_posFiltersMask, %object
  98              		.size	CapSense_1_posFiltersMask, 1
  99              	CapSense_1_posFiltersMask:
 100 001c 08       		.byte	8
 101 001d 000000   		.data
 102 0005 000000   		.align	2
 103              		.type	CapSense_1_posFiltersData, %object
 104              		.size	CapSense_1_posFiltersData, 3
 105              	CapSense_1_posFiltersData:
 106 0008 01       		.byte	1
 107 0009 00       		.byte	0
 108 000a 00       		.byte	0
 109 000b 00       		.section	.text.CapSense_1_BaseInit,"ax",%progbits
 110              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 3


 111              		.global	CapSense_1_BaseInit
 112              		.code	16
 113              		.thumb_func
 114              		.type	CapSense_1_BaseInit, %function
 115              	CapSense_1_BaseInit:
 116              	.LFB33:
 117              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_1_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * File Name: CapSense_1_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Copyright 2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #include "CapSense_1_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #include "CapSense_1_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     extern void CapSense_1_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData2[CapSense_1_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #elif ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
  39:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif  /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         *    (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** extern uint16 CapSense_1_sensorRaw[CapSense_1_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** extern uint8 CapSense_1_sensorEnableMask[CapSense_1_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** extern const uint8 CapSense_1_widgetNumber[CapSense_1_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	extern uint32 CapSense_1_widgetResolution[CapSense_1_RESOLUTIONS_TBL_SIZE];	
  50:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 4


  51:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorBaseline[CapSense_1_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorBaselineLow[CapSense_1_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorSignal[CapSense_1_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorOnMask[CapSense_1_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineResetCnt[CapSense_1_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineReset[CapSense_1_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     5u, 5u, 5u, 5u, 5u, 
  60:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	extern CapSense_1_CONFIG_TYPE_P4_v2_20 CapSense_1_config;
  66:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif  /* (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_enableRawFilters = CapSense_1_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif  /* (CapSense_1_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** const uint8 CapSense_1_fingerThreshold[] = {
  74:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     100u, 
  75:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  76:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** const uint8 CapSense_1_noiseThreshold[] = {
  78:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     20u, 
  79:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  80:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** const uint8 CapSense_1_hysteresis[] = {
  82:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     0u, 
  83:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** const uint8 CapSense_1_debounce[] = {
  86:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     1u, 
  87:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** const uint8 CapSense_1_rawDataIndex[] = {
  90:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     0u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** const uint8 CapSense_1_numberOfSensors[] = {
  94:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     5u, /* LinearSlider0__LS */
  95:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** static const uint16 CapSense_1_centroidMult[] = {
  98:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     16320u, 
  99:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** static const uint8 CapSense_1_posFiltersMask[] = {
 102:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     0x8u, 
 103:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 105:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** static uint8 CapSense_1_posFiltersData[] = {
 106:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     1u, 0u, 0u, 
 107:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 5


 108:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 109:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 110:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 111:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 112:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 113:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_BaseInit
 114:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 115:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 116:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 117:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 118:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  initial value which is equal to the raw count value. 
 119:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Resets to zero CapSense_1_sensorBaselineLow[sensor] and 
 120:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[sensor] array element.
 121:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Loads the CapSense_1_rawFilterData2[sensor] and 
 122:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[sensor] array element with an 
 123:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 124:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 125:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 126:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 127:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 128:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 129:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 130:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 131:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 132:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store the baseline value.
 133:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store the fraction byte of 
 134:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the baseline value.
 135:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store a difference between 
 136:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 137:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store a previous sample of 
 138:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 139:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before a previous sample
 140:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 141:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 142:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 143:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 144:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 145:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 146:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_BaseInit(uint32 sensor)
 147:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 118              		.loc 1 147 0
 119              		.cfi_startproc
 120 0000 80B5     		push	{r7, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 82B0     		sub	sp, sp, #8
 125              		.cfi_def_cfa_offset 16
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 128 0006 7860     		str	r0, [r7, #4]
 148:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if ((CapSense_1_TOTAL_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || \
 149:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****          (CapSense_1_TOTAL_GENERICS_COUNT))
 150:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 widget = CapSense_1_widgetNumber[sensor];
 151:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif /* ((CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) 
 152:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 153:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 6


 154:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 debounceIndex;
 155:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) */
 156:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 157:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 158:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 159:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 160:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 161:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 162:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 163:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Initialize Baseline */
 164:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = CapSense_1_sensorRaw[sensor];
 129              		.loc 1 164 0
 130 0008 0A4B     		ldr	r3, .L2
 131 000a 7A68     		ldr	r2, [r7, #4]
 132 000c 5200     		lsl	r2, r2, #1
 133 000e D15A     		ldrh	r1, [r2, r3]
 134 0010 094B     		ldr	r3, .L2+4
 135 0012 7A68     		ldr	r2, [r7, #4]
 136 0014 5200     		lsl	r2, r2, #1
 137 0016 D152     		strh	r1, [r2, r3]
 165:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_sensorBaselineLow[sensor] = 0u;
 138              		.loc 1 165 0
 139 0018 084A     		ldr	r2, .L2+8
 140 001a 7B68     		ldr	r3, [r7, #4]
 141 001c D318     		add	r3, r2, r3
 142 001e 0022     		mov	r2, #0
 143 0020 1A70     		strb	r2, [r3]
 166:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = 0u;
 144              		.loc 1 166 0
 145 0022 074A     		ldr	r2, .L2+12
 146 0024 7B68     		ldr	r3, [r7, #4]
 147 0026 D318     		add	r3, r2, r3
 148 0028 0022     		mov	r2, #0
 149 002a 1A70     		strb	r2, [r3]
 167:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
 168:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 170:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if ((0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)) ||\
 171:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****          (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)))
 172:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 173:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 174:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_sensorRaw[sensor];
 175:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 176:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #elif ((CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) ||\
 177:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) ||\
 178:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) ||\
 179:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER) ||\
 180:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
 181:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             
 182:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 183:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 184:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #else
 185:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* No Raw filters */
 186:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
 187:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             *   (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 188:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             */
 189:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 7


 190:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 191:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 192:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 193:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 194:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 150              		.loc 1 194 0
 151 002c BD46     		mov	sp, r7
 152 002e 02B0     		add	sp, sp, #8
 153              		@ sp needed
 154 0030 80BD     		pop	{r7, pc}
 155              	.L3:
 156 0032 C046     		.align	2
 157              	.L2:
 158 0034 00000000 		.word	CapSense_1_sensorRaw
 159 0038 00000000 		.word	CapSense_1_sensorBaseline
 160 003c 00000000 		.word	CapSense_1_sensorBaselineLow
 161 0040 00000000 		.word	CapSense_1_sensorSignal
 162              		.cfi_endproc
 163              	.LFE33:
 164              		.size	CapSense_1_BaseInit, .-CapSense_1_BaseInit
 165              		.section	.text.CapSense_1_InitializeSensorBaseline,"ax",%progbits
 166              		.align	2
 167              		.global	CapSense_1_InitializeSensorBaseline
 168              		.code	16
 169              		.thumb_func
 170              		.type	CapSense_1_InitializeSensorBaseline, %function
 171              	CapSense_1_InitializeSensorBaseline:
 172              	.LFB34:
 195:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 196:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 197:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 198:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeSensorBaseline
 199:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 200:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 201:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 202:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 203:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair 
 204:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 205:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 206:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  enabled.
 207:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 208:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 209:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 210:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 211:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 212:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 213:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 214:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 215:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 216:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 217:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 218:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 219:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 220:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 221:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_InitializeSensorBaseline(uint32 sensor)
 222:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 173              		.loc 1 222 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 8


 174              		.cfi_startproc
 175 0000 80B5     		push	{r7, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 82B0     		sub	sp, sp, #8
 180              		.cfi_def_cfa_offset 16
 181 0004 00AF     		add	r7, sp, #0
 182              		.cfi_def_cfa_register 7
 183 0006 7860     		str	r0, [r7, #4]
 223:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Scan sensor */
 224:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_ScanSensor(sensor);
 184              		.loc 1 224 0
 185 0008 7B68     		ldr	r3, [r7, #4]
 186 000a 181C     		mov	r0, r3
 187 000c FFF7FEFF 		bl	CapSense_1_ScanSensor
 225:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 188              		.loc 1 225 0
 189 0010 C046     		mov	r8, r8
 190              	.L5:
 191              		.loc 1 225 0 is_stmt 0 discriminator 1
 192 0012 FFF7FEFF 		bl	CapSense_1_IsBusy
 193 0016 031C     		mov	r3, r0
 194 0018 002B     		cmp	r3, #0
 195 001a FAD1     		bne	.L5
 226:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 227:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Wait while sensor is busy */
 228:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 229:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 230:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */       
 231:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_BaseInit(sensor);
 196              		.loc 1 231 0 is_stmt 1
 197 001c 7B68     		ldr	r3, [r7, #4]
 198 001e 181C     		mov	r0, r3
 199 0020 FFF7FEFF 		bl	CapSense_1_BaseInit
 232:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 200              		.loc 1 232 0
 201 0024 BD46     		mov	sp, r7
 202 0026 02B0     		add	sp, sp, #8
 203              		@ sp needed
 204 0028 80BD     		pop	{r7, pc}
 205              		.cfi_endproc
 206              	.LFE34:
 207              		.size	CapSense_1_InitializeSensorBaseline, .-CapSense_1_InitializeSensorBaseline
 208 002a C046     		.section	.text.CapSense_1_InitializeAllBaselines,"ax",%progbits
 209              		.align	2
 210              		.global	CapSense_1_InitializeAllBaselines
 211              		.code	16
 212              		.thumb_func
 213              		.type	CapSense_1_InitializeAllBaselines, %function
 214              	CapSense_1_InitializeAllBaselines:
 215              	.LFB35:
 233:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 234:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 235:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 236:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeAllBaselines
 237:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 9


 238:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 239:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 240:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Uses the CapSense_1_InitializeSensorBaseline function to load the 
 241:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] array with an initial values by scanning 
 242:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for 
 243:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 244:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 245:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 246:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 247:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 248:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 249:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 250:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 251:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 252:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 253:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 254:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 255:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 256:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 257:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 258:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_InitializeAllBaselines(void)
 259:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 216              		.loc 1 259 0
 217              		.cfi_startproc
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
 260:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 i;
 261:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 262:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 226              		.loc 1 262 0
 227 0006 0023     		mov	r3, #0
 228 0008 7B60     		str	r3, [r7, #4]
 229 000a 06E0     		b	.L7
 230              	.L8:
 263:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	{
 264:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     	CapSense_1_InitializeSensorBaseline(i);
 231              		.loc 1 264 0 discriminator 2
 232 000c 7B68     		ldr	r3, [r7, #4]
 233 000e 181C     		mov	r0, r3
 234 0010 FFF7FEFF 		bl	CapSense_1_InitializeSensorBaseline
 262:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 235              		.loc 1 262 0 discriminator 2
 236 0014 7B68     		ldr	r3, [r7, #4]
 237 0016 0133     		add	r3, r3, #1
 238 0018 7B60     		str	r3, [r7, #4]
 239              	.L7:
 262:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 240              		.loc 1 262 0 is_stmt 0 discriminator 1
 241 001a 7B68     		ldr	r3, [r7, #4]
 242 001c 042B     		cmp	r3, #4
 243 001e F5D9     		bls	.L8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 10


 265:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	}
 266:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 244              		.loc 1 266 0 is_stmt 1
 245 0020 BD46     		mov	sp, r7
 246 0022 02B0     		add	sp, sp, #8
 247              		@ sp needed
 248 0024 80BD     		pop	{r7, pc}
 249              		.cfi_endproc
 250              	.LFE35:
 251              		.size	CapSense_1_InitializeAllBaselines, .-CapSense_1_InitializeAllBaselines
 252 0026 C046     		.section	.text.CapSense_1_InitializeEnabledBaselines,"ax",%progbits
 253              		.align	2
 254              		.global	CapSense_1_InitializeEnabledBaselines
 255              		.code	16
 256              		.thumb_func
 257              		.type	CapSense_1_InitializeEnabledBaselines, %function
 258              	CapSense_1_InitializeEnabledBaselines:
 259              	.LFB36:
 267:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 268:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 269:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 270:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeEnabledBaselines
 271:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 272:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 273:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 274:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the 
 275:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines 
 276:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process. 
 277:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  The raw data filters are initialized if enabled.
 278:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 279:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 280:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 281:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 282:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 283:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 284:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 286:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorRaw[] - used to store the sensors raw data.
 287:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 288:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 289:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 290:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 291:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 292:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_InitializeEnabledBaselines(void)
 294:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 260              		.loc 1 294 0
 261              		.cfi_startproc
 262 0000 80B5     		push	{r7, lr}
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 82B0     		sub	sp, sp, #8
 267              		.cfi_def_cfa_offset 16
 268 0004 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
 295:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 i;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 11


 296:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 isSensorEnabled;
 297:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 298:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_ScanEnabledWidgets();
 270              		.loc 1 298 0
 271 0006 FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
 299:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 272              		.loc 1 299 0
 273 000a C046     		mov	r8, r8
 274              	.L10:
 275              		.loc 1 299 0 is_stmt 0 discriminator 1
 276 000c FFF7FEFF 		bl	CapSense_1_IsBusy
 277 0010 031C     		mov	r3, r0
 278 0012 002B     		cmp	r3, #0
 279 0014 FAD1     		bne	.L10
 300:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 301:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Wait while sensor is busy */
 302:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 303:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 304:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 280              		.loc 1 304 0 is_stmt 1
 281 0016 0023     		mov	r3, #0
 282 0018 7B60     		str	r3, [r7, #4]
 283 001a 11E0     		b	.L11
 284              	.L13:
 305:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 306:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         isSensorEnabled = CapSense_1_GetBitValue(CapSense_1_sensorEnableMask, i);
 285              		.loc 1 306 0
 286 001c 0B4A     		ldr	r2, .L14
 287 001e 7B68     		ldr	r3, [r7, #4]
 288 0020 101C     		mov	r0, r2
 289 0022 191C     		mov	r1, r3
 290 0024 FFF7FEFF 		bl	CapSense_1_GetBitValue
 291 0028 031C     		mov	r3, r0
 292 002a 3B60     		str	r3, [r7]
 307:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
 308:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 309:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(isSensorEnabled != 0u)
 293              		.loc 1 309 0
 294 002c 3B68     		ldr	r3, [r7]
 295 002e 002B     		cmp	r3, #0
 296 0030 03D0     		beq	.L12
 310:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 311:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Initialize baselines */
 312:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(i);
 297              		.loc 1 312 0
 298 0032 7B68     		ldr	r3, [r7, #4]
 299 0034 181C     		mov	r0, r3
 300 0036 FFF7FEFF 		bl	CapSense_1_BaseInit
 301              	.L12:
 304:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 302              		.loc 1 304 0
 303 003a 7B68     		ldr	r3, [r7, #4]
 304 003c 0133     		add	r3, r3, #1
 305 003e 7B60     		str	r3, [r7, #4]
 306              	.L11:
 304:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 307              		.loc 1 304 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 12


 308 0040 7B68     		ldr	r3, [r7, #4]
 309 0042 042B     		cmp	r3, #4
 310 0044 EAD9     		bls	.L13
 313:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 314:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 315:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }  
 311              		.loc 1 315 0 is_stmt 1
 312 0046 BD46     		mov	sp, r7
 313 0048 02B0     		add	sp, sp, #8
 314              		@ sp needed
 315 004a 80BD     		pop	{r7, pc}
 316              	.L15:
 317              		.align	2
 318              	.L14:
 319 004c 00000000 		.word	CapSense_1_sensorEnableMask
 320              		.cfi_endproc
 321              	.LFE36:
 322              		.size	CapSense_1_InitializeEnabledBaselines, .-CapSense_1_InitializeEnabledBaselines
 323              		.section	.text.CapSense_1_UpdateBaselineNoThreshold,"ax",%progbits
 324              		.align	2
 325              		.global	CapSense_1_UpdateBaselineNoThreshold
 326              		.code	16
 327              		.thumb_func
 328              		.type	CapSense_1_UpdateBaselineNoThreshold, %function
 329              	CapSense_1_UpdateBaselineNoThreshold:
 330              	.LFB37:
 316:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 317:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 318:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 319:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateBaselineNoThreshold
 320:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 321:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 322:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 323:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the 
 324:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 325:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 326:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  it in CapSense_1_sensorSignal[sensor]. 
 327:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 328:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded 
 329:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less 
 330:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  than noise threshold.
 331:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 332:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  calculation.
 333:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 334:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 335:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 336:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 337:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 338:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 339:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 340:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 341:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 342:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 343:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_widgetNumber[]  - stores widget numbers.
 344:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 345:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 346:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  baseline value.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 13


 347:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store difference between 
 348:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 349:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 350:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 351:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 352:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 353:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 354:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 355:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 356:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 357:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 358:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_UpdateBaselineNoThreshold(uint32 sensor)
 359:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 331              		.loc 1 359 0
 332              		.cfi_startproc
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 86B0     		sub	sp, sp, #24
 338              		.cfi_def_cfa_offset 32
 339 0004 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
 341 0006 7860     		str	r0, [r7, #4]
 360:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 calc;
 361:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	uint32 sign;
 362:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 tempRaw;
 363:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 filteredRawData;
 364:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 342              		.loc 1 364 0
 343 0008 3B1C     		mov	r3, r7
 344 000a 1133     		add	r3, r3, #17
 345 000c 6249     		ldr	r1, .L28
 346 000e 7A68     		ldr	r2, [r7, #4]
 347 0010 8A18     		add	r2, r1, r2
 348 0012 1278     		ldrb	r2, [r2]
 349 0014 1A70     		strb	r2, [r3]
 365:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 noiseThreshold = CapSense_1_noiseThreshold[widget];
 350              		.loc 1 365 0
 351 0016 3B1C     		mov	r3, r7
 352 0018 1033     		add	r3, r3, #16
 353 001a 1422     		mov	r2, #20
 354 001c 1A70     		strb	r2, [r3]
 366:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 367:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 368:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 369:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 370:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 371:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 372:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 373:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     filteredRawData = CapSense_1_sensorRaw[sensor];
 355              		.loc 1 373 0
 356 001e 3B1C     		mov	r3, r7
 357 0020 0E33     		add	r3, r3, #14
 358 0022 5E4A     		ldr	r2, .L28+4
 359 0024 7968     		ldr	r1, [r7, #4]
 360 0026 4900     		lsl	r1, r1, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 14


 361 0028 8A5A     		ldrh	r2, [r1, r2]
 362 002a 1A80     		strh	r2, [r3]
 374:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 375:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#if (CapSense_1_RAW_FILTER_MASK != 0u)
 376:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	if(CapSense_1_enableRawFilters != 0u)
 377:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	{
 378:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#if (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)
 379:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			tempRaw = filteredRawData;
 380:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			filteredRawData = CapSense_1_MedianFilter(filteredRawData, CapSense_1_rawFilterData1[sensor], 
 381:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 															CapSense_1_rawFilterData2[sensor]);
 382:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 383:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_rawFilterData1[sensor] = tempRaw;
 384:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			
 385:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)
 386:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			tempRaw = filteredRawData;
 387:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			filteredRawData = CapSense_1_AveragingFilter(filteredRawData, CapSense_1_rawFilterData1[sensor],
 388:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 															   CapSense_1_rawFilterData2[sensor]);
 389:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 390:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_rawFilterData1[sensor] = tempRaw;
 391:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			
 392:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			filteredRawData = CapSense_1_IIR2Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]);
 394:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_rawFilterData1[sensor] = filteredRawData;
 395:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			
 396:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)
 397:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]);
 398:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 				
 400:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)
 401:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			filteredRawData = CapSense_1_JitterFilter(filteredRawData, CapSense_1_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			
 404:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)
 405:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			filteredRawData = CapSense_1_IIR8Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]);
 406:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			
 408:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)
 409:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			filteredRawData = CapSense_1_IIR16Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]);
 410:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_rawFilterData1[sensor] = filteredRawData;
 411:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			
 412:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#else
 413:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			/* No Raw filters */
 414:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#endif  /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) */
 415:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	}
 416:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#endif  /* (CapSense_1_RAW_FILTER_MASK != 0u) */
 417:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	
 418:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#if (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)
 419:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	    MeasureNoiseEnvelope_P4_v2_20(&CapSense_1_config, (uint8)sensor, CapSense_1_sensorRaw);
 420:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#endif /* (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO) */
 421:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 422:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Baseline calculation */
 423:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 424:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 363              		.loc 1 424 0
 364 002c 5C4B     		ldr	r3, .L28+8
 365 002e 7A68     		ldr	r2, [r7, #4]
 366 0030 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 15


 367 0032 D35A     		ldrh	r3, [r2, r3]
 368 0034 3A1C     		mov	r2, r7
 369 0036 0E32     		add	r2, r2, #14
 370 0038 1288     		ldrh	r2, [r2]
 371 003a 9A42     		cmp	r2, r3
 372 003c 12D3     		bcc	.L17
 425:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 426:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		CapSense_1_lowBaselineResetCnt[sensor] = 0u;	
 373              		.loc 1 426 0
 374 003e 594A     		ldr	r2, .L28+12
 375 0040 7B68     		ldr	r3, [r7, #4]
 376 0042 D318     		add	r3, r2, r3
 377 0044 0022     		mov	r2, #0
 378 0046 1A70     		strb	r2, [r3]
 427:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 379              		.loc 1 427 0
 380 0048 554B     		ldr	r3, .L28+8
 381 004a 7A68     		ldr	r2, [r7, #4]
 382 004c 5200     		lsl	r2, r2, #1
 383 004e D25A     		ldrh	r2, [r2, r3]
 384 0050 3B1C     		mov	r3, r7
 385 0052 1233     		add	r3, r3, #18
 386 0054 391C     		mov	r1, r7
 387 0056 0E31     		add	r1, r1, #14
 388 0058 0988     		ldrh	r1, [r1]
 389 005a 8A1A     		sub	r2, r1, r2
 390 005c 1A80     		strh	r2, [r3]
 428:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 391              		.loc 1 428 0
 392 005e 0123     		mov	r3, #1
 393 0060 7B61     		str	r3, [r7, #20]
 394 0062 0CE0     		b	.L18
 395              	.L17:
 429:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 430:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     else
 431:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 432:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 396              		.loc 1 432 0
 397 0064 4E4B     		ldr	r3, .L28+8
 398 0066 7A68     		ldr	r2, [r7, #4]
 399 0068 5200     		lsl	r2, r2, #1
 400 006a D15A     		ldrh	r1, [r2, r3]
 401 006c 3B1C     		mov	r3, r7
 402 006e 1233     		add	r3, r3, #18
 403 0070 3A1C     		mov	r2, r7
 404 0072 0E32     		add	r2, r2, #14
 405 0074 1288     		ldrh	r2, [r2]
 406 0076 8A1A     		sub	r2, r1, r2
 407 0078 1A80     		strh	r2, [r3]
 433:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 408              		.loc 1 433 0
 409 007a 0023     		mov	r3, #0
 410 007c 7B61     		str	r3, [r7, #20]
 411              	.L18:
 434:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 435:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 436:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#if (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 16


 437:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_1_negativeNoiseThreshold[widget]))
 438:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#else
 439:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	if((sign == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 412              		.loc 1 439 0
 413 007e 7B69     		ldr	r3, [r7, #20]
 414 0080 002B     		cmp	r3, #0
 415 0082 23D1     		bne	.L19
 416              		.loc 1 439 0 is_stmt 0 discriminator 1
 417 0084 3B1C     		mov	r3, r7
 418 0086 1233     		add	r3, r3, #18
 419 0088 1B88     		ldrh	r3, [r3]
 420 008a 142B     		cmp	r3, #20
 421 008c 1ED9     		bls	.L19
 440:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */ 
 441:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 442:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_lowBaselineReset[sensor])
 422              		.loc 1 442 0 is_stmt 1
 423 008e 454A     		ldr	r2, .L28+12
 424 0090 7B68     		ldr	r3, [r7, #4]
 425 0092 D318     		add	r3, r2, r3
 426 0094 1A78     		ldrb	r2, [r3]
 427 0096 4449     		ldr	r1, .L28+16
 428 0098 7B68     		ldr	r3, [r7, #4]
 429 009a CB18     		add	r3, r1, r3
 430 009c 1B78     		ldrb	r3, [r3]
 431 009e 9A42     		cmp	r2, r3
 432 00a0 09D3     		bcc	.L20
 443:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 444:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 433              		.loc 1 444 0
 434 00a2 7B68     		ldr	r3, [r7, #4]
 435 00a4 181C     		mov	r0, r3
 436 00a6 FFF7FEFF 		bl	CapSense_1_BaseInit
 445:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 437              		.loc 1 445 0
 438 00aa 3E4A     		ldr	r2, .L28+12
 439 00ac 7B68     		ldr	r3, [r7, #4]
 440 00ae D318     		add	r3, r2, r3
 441 00b0 0022     		mov	r2, #0
 442 00b2 1A70     		strb	r2, [r3]
 442:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_lowBaselineReset[sensor])
 443              		.loc 1 442 0
 444 00b4 47E0     		b	.L22
 445              	.L20:
 446:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 447:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
 448:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 449:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 446              		.loc 1 449 0
 447 00b6 3B4A     		ldr	r2, .L28+12
 448 00b8 7B68     		ldr	r3, [r7, #4]
 449 00ba D318     		add	r3, r2, r3
 450 00bc 1B78     		ldrb	r3, [r3]
 451 00be 0133     		add	r3, r3, #1
 452 00c0 DAB2     		uxtb	r2, r3
 453 00c2 3849     		ldr	r1, .L28+12
 454 00c4 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 17


 455 00c6 CB18     		add	r3, r1, r3
 456 00c8 1A70     		strb	r2, [r3]
 442:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_lowBaselineReset[sensor])
 457              		.loc 1 442 0
 458 00ca 3CE0     		b	.L22
 459              	.L19:
 450:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 451:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 452:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     else
 453:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 454:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 455:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#if (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)			
 456:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 457:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 458:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			 ((tempRaw < (uint16) CapSense_1_negativeNoiseThreshold[widget])
 459:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			   && (sign == 0u)))
 460:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			{
 461:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#else
 462:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			/* Update Baseline if lower than noiseThreshold */
 463:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			if ( (tempRaw <= noiseThreshold) || 
 460              		.loc 1 463 0
 461 00cc 3B1C     		mov	r3, r7
 462 00ce 1033     		add	r3, r3, #16
 463 00d0 1B78     		ldrb	r3, [r3]
 464 00d2 9BB2     		uxth	r3, r3
 465 00d4 3A1C     		mov	r2, r7
 466 00d6 1232     		add	r2, r2, #18
 467 00d8 1288     		ldrh	r2, [r2]
 468 00da 9A42     		cmp	r2, r3
 469 00dc 07D9     		bls	.L23
 470              		.loc 1 463 0 is_stmt 0 discriminator 1
 471 00de 3B1C     		mov	r3, r7
 472 00e0 1233     		add	r3, r3, #18
 473 00e2 1B88     		ldrh	r3, [r3]
 474 00e4 132B     		cmp	r3, #19
 475 00e6 2ED8     		bhi	.L22
 464:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 				 ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 465:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 				   && (sign == 0u)))
 476              		.loc 1 465 0 is_stmt 1
 477 00e8 7B69     		ldr	r3, [r7, #20]
 478 00ea 002B     		cmp	r3, #0
 479 00ec 2BD1     		bne	.L22
 480              	.L23:
 466:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			{
 467:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */ 
 468:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 469:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Make full Baseline 23 bits */
 470:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 calc = (uint32) CapSense_1_sensorBaseline[sensor] << 8u;
 481              		.loc 1 470 0
 482 00ee 2C4B     		ldr	r3, .L28+8
 483 00f0 7A68     		ldr	r2, [r7, #4]
 484 00f2 5200     		lsl	r2, r2, #1
 485 00f4 D35A     		ldrh	r3, [r2, r3]
 486 00f6 1B02     		lsl	r3, r3, #8
 487 00f8 BB60     		str	r3, [r7, #8]
 471:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 488              		.loc 1 471 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 18


 489 00fa 2C4A     		ldr	r2, .L28+20
 490 00fc 7B68     		ldr	r3, [r7, #4]
 491 00fe D318     		add	r3, r2, r3
 492 0100 1B78     		ldrb	r3, [r3]
 493 0102 BA68     		ldr	r2, [r7, #8]
 494 0104 1343     		orr	r3, r2
 495 0106 BB60     		str	r3, [r7, #8]
 472:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 473:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Add Raw Data to Baseline */
 474:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 496              		.loc 1 474 0
 497 0108 3B1C     		mov	r3, r7
 498 010a 0E33     		add	r3, r3, #14
 499 010c 1B88     		ldrh	r3, [r3]
 500 010e BA68     		ldr	r2, [r7, #8]
 501 0110 D318     		add	r3, r2, r3
 502 0112 BB60     		str	r3, [r7, #8]
 475:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 476:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Sub the high Baseline */
 477:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 503              		.loc 1 477 0
 504 0114 224B     		ldr	r3, .L28+8
 505 0116 7A68     		ldr	r2, [r7, #4]
 506 0118 5200     		lsl	r2, r2, #1
 507 011a D35A     		ldrh	r3, [r2, r3]
 508 011c BA68     		ldr	r2, [r7, #8]
 509 011e D31A     		sub	r3, r2, r3
 510 0120 BB60     		str	r3, [r7, #8]
 478:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 479:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Put Baseline and BaselineLow */
 480:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 511              		.loc 1 480 0
 512 0122 BB68     		ldr	r3, [r7, #8]
 513 0124 1B0A     		lsr	r3, r3, #8
 514 0126 99B2     		uxth	r1, r3
 515 0128 1D4B     		ldr	r3, .L28+8
 516 012a 7A68     		ldr	r2, [r7, #4]
 517 012c 5200     		lsl	r2, r2, #1
 518 012e D152     		strh	r1, [r2, r3]
 481:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 519              		.loc 1 481 0
 520 0130 BB68     		ldr	r3, [r7, #8]
 521 0132 DAB2     		uxtb	r2, r3
 522 0134 1D49     		ldr	r1, .L28+20
 523 0136 7B68     		ldr	r3, [r7, #4]
 524 0138 CB18     		add	r3, r1, r3
 525 013a 1A70     		strb	r2, [r3]
 482:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 483:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 526              		.loc 1 483 0
 527 013c 194A     		ldr	r2, .L28+12
 528 013e 7B68     		ldr	r3, [r7, #4]
 529 0140 D318     		add	r3, r2, r3
 530 0142 0022     		mov	r2, #0
 531 0144 1A70     		strb	r2, [r3]
 532              	.L22:
 484:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 19


 485:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
 486:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 487:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 488:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 489:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 490:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 533              		.loc 1 490 0
 534 0146 3B1C     		mov	r3, r7
 535 0148 1033     		add	r3, r3, #16
 536 014a 1B78     		ldrb	r3, [r3]
 537 014c 9BB2     		uxth	r3, r3
 538 014e 3A1C     		mov	r2, r7
 539 0150 1232     		add	r2, r2, #18
 540 0152 1288     		ldrh	r2, [r2]
 541 0154 9A42     		cmp	r2, r3
 542 0156 16D9     		bls	.L24
 543              		.loc 1 490 0 is_stmt 0 discriminator 1
 544 0158 7B69     		ldr	r3, [r7, #20]
 545 015a 002B     		cmp	r3, #0
 546 015c 13D0     		beq	.L24
 491:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 492:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8)
 493:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Over flow defence for uint8 */
 494:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 547              		.loc 1 494 0 is_stmt 1
 548 015e 3B1C     		mov	r3, r7
 549 0160 1233     		add	r3, r3, #18
 550 0162 1B88     		ldrh	r3, [r3]
 551 0164 FF2B     		cmp	r3, #255
 552 0166 05D9     		bls	.L25
 495:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
 496:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 553              		.loc 1 496 0
 554 0168 114A     		ldr	r2, .L28+24
 555 016a 7B68     		ldr	r3, [r7, #4]
 556 016c D318     		add	r3, r2, r3
 557 016e FF22     		mov	r2, #255
 558 0170 1A70     		strb	r2, [r3]
 494:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 559              		.loc 1 494 0
 560 0172 0DE0     		b	.L16
 561              	.L25:
 497:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }    
 498:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             else 
 499:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
 500:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 562              		.loc 1 500 0
 563 0174 3B1C     		mov	r3, r7
 564 0176 1233     		add	r3, r3, #18
 565 0178 1B88     		ldrh	r3, [r3]
 566 017a DAB2     		uxtb	r2, r3
 567 017c 0C49     		ldr	r1, .L28+24
 568 017e 7B68     		ldr	r3, [r7, #4]
 569 0180 CB18     		add	r3, r1, r3
 570 0182 1A70     		strb	r2, [r3]
 494:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 571              		.loc 1 494 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 20


 572 0184 04E0     		b	.L16
 573              	.L24:
 501:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
 502:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
 503:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_sensorSignal[sensor] = ((uint16) tempRaw);
 504:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 505:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 506:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     else
 507:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 508:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Signal is zero */
 509:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 574              		.loc 1 509 0
 575 0186 0A4A     		ldr	r2, .L28+24
 576 0188 7B68     		ldr	r3, [r7, #4]
 577 018a D318     		add	r3, r2, r3
 578 018c 0022     		mov	r2, #0
 579 018e 1A70     		strb	r2, [r3]
 580              	.L16:
 510:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 511:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 512:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 513:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 514:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 515:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 516:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 581              		.loc 1 516 0
 582 0190 BD46     		mov	sp, r7
 583 0192 06B0     		add	sp, sp, #24
 584              		@ sp needed
 585 0194 80BD     		pop	{r7, pc}
 586              	.L29:
 587 0196 C046     		.align	2
 588              	.L28:
 589 0198 00000000 		.word	CapSense_1_widgetNumber
 590 019c 00000000 		.word	CapSense_1_sensorRaw
 591 01a0 00000000 		.word	CapSense_1_sensorBaseline
 592 01a4 00000000 		.word	CapSense_1_lowBaselineResetCnt
 593 01a8 00000000 		.word	CapSense_1_lowBaselineReset
 594 01ac 00000000 		.word	CapSense_1_sensorBaselineLow
 595 01b0 00000000 		.word	CapSense_1_sensorSignal
 596              		.cfi_endproc
 597              	.LFE37:
 598              		.size	CapSense_1_UpdateBaselineNoThreshold, .-CapSense_1_UpdateBaselineNoThreshold
 599              		.section	.text.CapSense_1_UpdateSensorBaseline,"ax",%progbits
 600              		.align	2
 601              		.global	CapSense_1_UpdateSensorBaseline
 602              		.code	16
 603              		.thumb_func
 604              		.type	CapSense_1_UpdateSensorBaseline, %function
 605              	CapSense_1_UpdateSensorBaseline:
 606              	.LFB38:
 517:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 518:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 519:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 520:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateSensorBaseline
 521:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 522:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 21


 523:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 524:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the 
 525:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 526:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 527:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  it in CapSense_1_sensorSignal[sensor]. 
 528:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold. 
 529:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating. 
 530:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and  
 531:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  if signal is less than noise threshold.
 532:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 533:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  calculation.
 534:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 535:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 536:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 537:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 538:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 539:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 540:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 541:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 542:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 543:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_widgetNumber[]  - stores widget numbers.
 544:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 545:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 546:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 547:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 548:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****  void CapSense_1_UpdateSensorBaseline(uint32 sensor)
 550:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 607              		.loc 1 550 0
 608              		.cfi_startproc
 609 0000 80B5     		push	{r7, lr}
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 7, -8
 612              		.cfi_offset 14, -4
 613 0002 82B0     		sub	sp, sp, #8
 614              		.cfi_def_cfa_offset 16
 615 0004 00AF     		add	r7, sp, #0
 616              		.cfi_def_cfa_register 7
 617 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 552:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		uint32 widget;
 553:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		
 554:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		widget = CapSense_1_widgetNumber[sensor];
 555:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	
 556:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 557:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 558:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 559:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 560:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 561:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)
 562:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     	CapSense_1_UpdateThresholds(sensor);
 563:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO) */
 564:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 565:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_UpdateBaselineNoThreshold(sensor);
 618              		.loc 1 565 0
 619 0008 7B68     		ldr	r3, [r7, #4]
 620 000a 181C     		mov	r0, r3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 22


 621 000c FFF7FEFF 		bl	CapSense_1_UpdateBaselineNoThreshold
 566:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 567:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 568:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 569:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 570:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 571:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 622              		.loc 1 571 0
 623 0010 BD46     		mov	sp, r7
 624 0012 02B0     		add	sp, sp, #8
 625              		@ sp needed
 626 0014 80BD     		pop	{r7, pc}
 627              		.cfi_endproc
 628              	.LFE38:
 629              		.size	CapSense_1_UpdateSensorBaseline, .-CapSense_1_UpdateSensorBaseline
 630 0016 C046     		.section	.text.CapSense_1_UpdateEnabledBaselines,"ax",%progbits
 631              		.align	2
 632              		.global	CapSense_1_UpdateEnabledBaselines
 633              		.code	16
 634              		.thumb_func
 635              		.type	CapSense_1_UpdateEnabledBaselines, %function
 636              	CapSense_1_UpdateEnabledBaselines:
 637              	.LFB39:
 572:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 573:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 574:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 575:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateEnabledBaselines
 576:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 577:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 578:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 579:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the 
 580:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines 
 581:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  for the enabled sensors.
 582:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 583:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 584:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 585:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 586:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 587:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 588:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 589:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 590:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 591:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  state.
 592:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 593:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 594:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 595:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 596:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 597:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 598:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 599:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 600:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 601:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 602:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 603:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****  void CapSense_1_UpdateEnabledBaselines(void)
 604:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 638              		.loc 1 604 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 23


 639              		.cfi_startproc
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 82B0     		sub	sp, sp, #8
 645              		.cfi_def_cfa_offset 16
 646 0004 00AF     		add	r7, sp, #0
 647              		.cfi_def_cfa_register 7
 605:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 i;
 606:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 isSensorEnabled;
 607:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 608:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 648              		.loc 1 608 0
 649 0006 0023     		mov	r3, #0
 650 0008 7B60     		str	r3, [r7, #4]
 651 000a 11E0     		b	.L32
 652              	.L34:
 609:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 610:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         isSensorEnabled = CapSense_1_GetBitValue(CapSense_1_sensorEnableMask, i);
 653              		.loc 1 610 0
 654 000c 0B4A     		ldr	r2, .L35
 655 000e 7B68     		ldr	r3, [r7, #4]
 656 0010 101C     		mov	r0, r2
 657 0012 191C     		mov	r1, r3
 658 0014 FFF7FEFF 		bl	CapSense_1_GetBitValue
 659 0018 031C     		mov	r3, r0
 660 001a 3B60     		str	r3, [r7]
 611:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
 612:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(0u != isSensorEnabled)
 661              		.loc 1 612 0
 662 001c 3B68     		ldr	r3, [r7]
 663 001e 002B     		cmp	r3, #0
 664 0020 03D0     		beq	.L33
 613:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 614:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 665              		.loc 1 614 0
 666 0022 7B68     		ldr	r3, [r7, #4]
 667 0024 181C     		mov	r0, r3
 668 0026 FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 669              	.L33:
 608:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 670              		.loc 1 608 0
 671 002a 7B68     		ldr	r3, [r7, #4]
 672 002c 0133     		add	r3, r3, #1
 673 002e 7B60     		str	r3, [r7, #4]
 674              	.L32:
 608:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 675              		.loc 1 608 0 is_stmt 0 discriminator 1
 676 0030 7B68     		ldr	r3, [r7, #4]
 677 0032 042B     		cmp	r3, #4
 678 0034 EAD9     		bls	.L34
 615:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 616:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 617:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 679              		.loc 1 617 0 is_stmt 1
 680 0036 BD46     		mov	sp, r7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 24


 681 0038 02B0     		add	sp, sp, #8
 682              		@ sp needed
 683 003a 80BD     		pop	{r7, pc}
 684              	.L36:
 685              		.align	2
 686              	.L35:
 687 003c 00000000 		.word	CapSense_1_sensorEnableMask
 688              		.cfi_endproc
 689              	.LFE39:
 690              		.size	CapSense_1_UpdateEnabledBaselines, .-CapSense_1_UpdateEnabledBaselines
 691              		.section	.text.CapSense_1_UpdateWidgetBaseline,"ax",%progbits
 692              		.align	2
 693              		.global	CapSense_1_UpdateWidgetBaseline
 694              		.code	16
 695              		.thumb_func
 696              		.type	CapSense_1_UpdateWidgetBaseline, %function
 697              	CapSense_1_UpdateWidgetBaseline:
 698              	.LFB40:
 618:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 619:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 620:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateWidgetBaseline
 621:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 622:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 623:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 624:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the 
 625:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines 
 626:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  for the enabled sensors that belong to widget.
 627:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 628:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 629:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  Widget number.
 630:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 631:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 632:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 633:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 634:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 635:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 636:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  state.
 637:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 638:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 639:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 640:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 641:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 642:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 643:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 644:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 645:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 646:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 647:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 648:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_UpdateWidgetBaseline(uint32 widget)
 649:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 699              		.loc 1 649 0
 700              		.cfi_startproc
 701 0000 80B5     		push	{r7, lr}
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 7, -8
 704              		.cfi_offset 14, -4
 705 0002 88B0     		sub	sp, sp, #32
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 25


 706              		.cfi_def_cfa_offset 40
 707 0004 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 709 0006 7860     		str	r0, [r7, #4]
 650:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 sensorsPerWidget;
 651:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 firstSensor;
 652:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 lastSensor;
 653:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 i;
 654:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 isSensorEnabled;
 655:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
 656:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	/* Get number of sensors in widget */
 657:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	sensorsPerWidget = CapSense_1_numberOfSensors[widget];
 710              		.loc 1 657 0
 711 0008 0523     		mov	r3, #5
 712 000a BB61     		str	r3, [r7, #24]
 658:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 659:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	/* Get first sensor in widget */
 660:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	firstSensor = CapSense_1_rawDataIndex[widget];
 713              		.loc 1 660 0
 714 000c 0023     		mov	r3, #0
 715 000e 7B61     		str	r3, [r7, #20]
 661:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	
 662:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	/* Get last sensor in widget */
 663:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	lastSensor = (CapSense_1_rawDataIndex[widget] + sensorsPerWidget);
 716              		.loc 1 663 0
 717 0010 0023     		mov	r3, #0
 718 0012 1A1C     		mov	r2, r3
 719 0014 BB69     		ldr	r3, [r7, #24]
 720 0016 D318     		add	r3, r2, r3
 721 0018 3B61     		str	r3, [r7, #16]
 664:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	
 665:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 722              		.loc 1 665 0
 723 001a 7B69     		ldr	r3, [r7, #20]
 724 001c FB61     		str	r3, [r7, #28]
 725 001e 11E0     		b	.L38
 726              	.L40:
 666:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 667:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         isSensorEnabled = CapSense_1_GetBitValue(CapSense_1_sensorEnableMask, i);
 727              		.loc 1 667 0
 728 0020 0C4A     		ldr	r2, .L41
 729 0022 FB69     		ldr	r3, [r7, #28]
 730 0024 101C     		mov	r0, r2
 731 0026 191C     		mov	r1, r3
 732 0028 FFF7FEFF 		bl	CapSense_1_GetBitValue
 733 002c 031C     		mov	r3, r0
 734 002e FB60     		str	r3, [r7, #12]
 668:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
 669:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(0u != isSensorEnabled)
 735              		.loc 1 669 0
 736 0030 FB68     		ldr	r3, [r7, #12]
 737 0032 002B     		cmp	r3, #0
 738 0034 03D0     		beq	.L39
 670:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
 671:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 739              		.loc 1 671 0
 740 0036 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 26


 741 0038 181C     		mov	r0, r3
 742 003a FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 743              	.L39:
 665:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 744              		.loc 1 665 0
 745 003e FB69     		ldr	r3, [r7, #28]
 746 0040 0133     		add	r3, r3, #1
 747 0042 FB61     		str	r3, [r7, #28]
 748              	.L38:
 665:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 749              		.loc 1 665 0 is_stmt 0 discriminator 1
 750 0044 FA69     		ldr	r2, [r7, #28]
 751 0046 3B69     		ldr	r3, [r7, #16]
 752 0048 9A42     		cmp	r2, r3
 753 004a E9D3     		bcc	.L40
 672:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
 673:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 674:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 754              		.loc 1 674 0 is_stmt 1
 755 004c BD46     		mov	sp, r7
 756 004e 08B0     		add	sp, sp, #32
 757              		@ sp needed
 758 0050 80BD     		pop	{r7, pc}
 759              	.L42:
 760 0052 C046     		.align	2
 761              	.L41:
 762 0054 00000000 		.word	CapSense_1_sensorEnableMask
 763              		.cfi_endproc
 764              	.LFE40:
 765              		.size	CapSense_1_UpdateWidgetBaseline, .-CapSense_1_UpdateWidgetBaseline
 766              		.section	.text.CapSense_1_GetBaselineData,"ax",%progbits
 767              		.align	2
 768              		.global	CapSense_1_GetBaselineData
 769              		.code	16
 770              		.thumb_func
 771              		.type	CapSense_1_GetBaselineData, %function
 772              	CapSense_1_GetBaselineData:
 773              	.LFB41:
 675:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 676:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 677:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetBaselineData
 679:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 681:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 682:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the sensor baseline from the component.
 683:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 684:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 685:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 686:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 687:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 688:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 689:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 690:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 691:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] - the array with an initial values by scanning
 692:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 693:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 27


 694:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 695:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 696:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 697:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint16 CapSense_1_GetBaselineData(uint32 sensor)
 698:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 774              		.loc 1 698 0
 775              		.cfi_startproc
 776 0000 80B5     		push	{r7, lr}
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 7, -8
 779              		.cfi_offset 14, -4
 780 0002 82B0     		sub	sp, sp, #8
 781              		.cfi_def_cfa_offset 16
 782 0004 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 784 0006 7860     		str	r0, [r7, #4]
 699:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return (CapSense_1_sensorBaseline[sensor]);
 785              		.loc 1 699 0
 786 0008 034B     		ldr	r3, .L45
 787 000a 7A68     		ldr	r2, [r7, #4]
 788 000c 5200     		lsl	r2, r2, #1
 789 000e D35A     		ldrh	r3, [r2, r3]
 700:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 790              		.loc 1 700 0
 791 0010 181C     		mov	r0, r3
 792 0012 BD46     		mov	sp, r7
 793 0014 02B0     		add	sp, sp, #8
 794              		@ sp needed
 795 0016 80BD     		pop	{r7, pc}
 796              	.L46:
 797              		.align	2
 798              	.L45:
 799 0018 00000000 		.word	CapSense_1_sensorBaseline
 800              		.cfi_endproc
 801              	.LFE41:
 802              		.size	CapSense_1_GetBaselineData, .-CapSense_1_GetBaselineData
 803              		.section	.text.CapSense_1_SetBaselineData,"ax",%progbits
 804              		.align	2
 805              		.global	CapSense_1_SetBaselineData
 806              		.code	16
 807              		.thumb_func
 808              		.type	CapSense_1_SetBaselineData, %function
 809              	CapSense_1_SetBaselineData:
 810              	.LFB42:
 701:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 702:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 703:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 704:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_SetBaselineData
 705:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 706:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 707:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 708:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 709:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 710:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 711:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 712:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  data:    Sensor baseline.
 713:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 28


 714:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 715:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None.
 716:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 717:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 718:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] - the array with initial values by scanning
 719:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 720:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 721:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 722:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 723:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 724:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_SetBaselineData(uint32 sensor, uint16 data)
 725:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 811              		.loc 1 725 0
 812              		.cfi_startproc
 813 0000 80B5     		push	{r7, lr}
 814              		.cfi_def_cfa_offset 8
 815              		.cfi_offset 7, -8
 816              		.cfi_offset 14, -4
 817 0002 82B0     		sub	sp, sp, #8
 818              		.cfi_def_cfa_offset 16
 819 0004 00AF     		add	r7, sp, #0
 820              		.cfi_def_cfa_register 7
 821 0006 7860     		str	r0, [r7, #4]
 822 0008 0A1C     		mov	r2, r1
 823 000a BB1C     		add	r3, r7, #2
 824 000c 1A80     		strh	r2, [r3]
 726:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	CapSense_1_sensorBaseline[sensor] = data;
 825              		.loc 1 726 0
 826 000e 044B     		ldr	r3, .L48
 827 0010 7A68     		ldr	r2, [r7, #4]
 828 0012 5200     		lsl	r2, r2, #1
 829 0014 B91C     		add	r1, r7, #2
 830 0016 0988     		ldrh	r1, [r1]
 831 0018 D152     		strh	r1, [r2, r3]
 727:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 832              		.loc 1 727 0
 833 001a BD46     		mov	sp, r7
 834 001c 02B0     		add	sp, sp, #8
 835              		@ sp needed
 836 001e 80BD     		pop	{r7, pc}
 837              	.L49:
 838              		.align	2
 839              	.L48:
 840 0020 00000000 		.word	CapSense_1_sensorBaseline
 841              		.cfi_endproc
 842              	.LFE42:
 843              		.size	CapSense_1_SetBaselineData, .-CapSense_1_SetBaselineData
 844              		.section	.text.CapSense_1_GetDiffCountData,"ax",%progbits
 845              		.align	2
 846              		.global	CapSense_1_GetDiffCountData
 847              		.code	16
 848              		.thumb_func
 849              		.type	CapSense_1_GetDiffCountData, %function
 850              	CapSense_1_GetDiffCountData:
 851              	.LFB43:
 728:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 729:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 29


 730:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 731:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetDiffCountData
 732:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 733:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 734:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 735:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function returns the Sensor Signal from the component.
 736:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 737:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 738:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 739:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 740:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 741:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the 
 742:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  argument. 
 743:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 744:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 745:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[] - the array with difference counts for sensors
 746:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 747:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 748:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 749:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 750:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 751:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetDiffCountData(uint32 sensor)
 752:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 852              		.loc 1 752 0
 853              		.cfi_startproc
 854 0000 80B5     		push	{r7, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 82B0     		sub	sp, sp, #8
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 862 0006 7860     		str	r0, [r7, #4]
 753:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return (CapSense_1_sensorSignal[sensor]);
 863              		.loc 1 753 0
 864 0008 034A     		ldr	r2, .L52
 865 000a 7B68     		ldr	r3, [r7, #4]
 866 000c D318     		add	r3, r2, r3
 867 000e 1B78     		ldrb	r3, [r3]
 754:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 868              		.loc 1 754 0
 869 0010 181C     		mov	r0, r3
 870 0012 BD46     		mov	sp, r7
 871 0014 02B0     		add	sp, sp, #8
 872              		@ sp needed
 873 0016 80BD     		pop	{r7, pc}
 874              	.L53:
 875              		.align	2
 876              	.L52:
 877 0018 00000000 		.word	CapSense_1_sensorSignal
 878              		.cfi_endproc
 879              	.LFE43:
 880              		.size	CapSense_1_GetDiffCountData, .-CapSense_1_GetDiffCountData
 881              		.section	.text.CapSense_1_SetDiffCountData,"ax",%progbits
 882              		.align	2
 883              		.global	CapSense_1_SetDiffCountData
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 30


 884              		.code	16
 885              		.thumb_func
 886              		.type	CapSense_1_SetDiffCountData, %function
 887              	CapSense_1_SetDiffCountData:
 888              	.LFB44:
 755:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 756:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 757:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 758:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_SetDiffCountData
 759:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 760:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 761:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 762:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 763:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 764:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 765:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 766:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  value:   Sensor signal.
 767:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 768:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 769:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None. 
 770:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 771:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 772:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[] - the array with difference counts for sensors
 773:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 774:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 775:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 776:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 777:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 778:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_SetDiffCountData(uint32 sensor, uint8 value)
 779:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 889              		.loc 1 779 0
 890              		.cfi_startproc
 891 0000 80B5     		push	{r7, lr}
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 7, -8
 894              		.cfi_offset 14, -4
 895 0002 82B0     		sub	sp, sp, #8
 896              		.cfi_def_cfa_offset 16
 897 0004 00AF     		add	r7, sp, #0
 898              		.cfi_def_cfa_register 7
 899 0006 7860     		str	r0, [r7, #4]
 900 0008 0A1C     		mov	r2, r1
 901 000a FB1C     		add	r3, r7, #3
 902 000c 1A70     		strb	r2, [r3]
 780:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = value;
 903              		.loc 1 780 0
 904 000e 044A     		ldr	r2, .L55
 905 0010 7B68     		ldr	r3, [r7, #4]
 906 0012 D318     		add	r3, r2, r3
 907 0014 FA1C     		add	r2, r7, #3
 908 0016 1278     		ldrb	r2, [r2]
 909 0018 1A70     		strb	r2, [r3]
 781:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 910              		.loc 1 781 0
 911 001a BD46     		mov	sp, r7
 912 001c 02B0     		add	sp, sp, #8
 913              		@ sp needed
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 31


 914 001e 80BD     		pop	{r7, pc}
 915              	.L56:
 916              		.align	2
 917              	.L55:
 918 0020 00000000 		.word	CapSense_1_sensorSignal
 919              		.cfi_endproc
 920              	.LFE44:
 921              		.size	CapSense_1_SetDiffCountData, .-CapSense_1_SetDiffCountData
 922              		.section	.text.CapSense_1_GetFingerThreshold,"ax",%progbits
 923              		.align	2
 924              		.global	CapSense_1_GetFingerThreshold
 925              		.code	16
 926              		.thumb_func
 927              		.type	CapSense_1_GetFingerThreshold, %function
 928              	CapSense_1_GetFingerThreshold:
 929              	.LFB45:
 782:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 783:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 784:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 785:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetFingerThreshold
 786:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 787:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 788:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 789:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the finger threshold from the component.
 790:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 791:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 792:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
 793:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 794:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 795:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument. 
 796:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 797:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 798:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_fingerThreshold[] - This array contains the level of signal 
 799:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 800:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 801:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 802:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 803:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 804:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 805:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetFingerThreshold(uint32 widget)
 806:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 930              		.loc 1 806 0
 931              		.cfi_startproc
 932 0000 80B5     		push	{r7, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 82B0     		sub	sp, sp, #8
 937              		.cfi_def_cfa_offset 16
 938 0004 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 940 0006 7860     		str	r0, [r7, #4]
 807:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return(CapSense_1_fingerThreshold[widget]);
 941              		.loc 1 807 0
 942 0008 6423     		mov	r3, #100
 808:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 943              		.loc 1 808 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 32


 944 000a 181C     		mov	r0, r3
 945 000c BD46     		mov	sp, r7
 946 000e 02B0     		add	sp, sp, #8
 947              		@ sp needed
 948 0010 80BD     		pop	{r7, pc}
 949              		.cfi_endproc
 950              	.LFE45:
 951              		.size	CapSense_1_GetFingerThreshold, .-CapSense_1_GetFingerThreshold
 952 0012 C046     		.section	.text.CapSense_1_GetNoiseThreshold,"ax",%progbits
 953              		.align	2
 954              		.global	CapSense_1_GetNoiseThreshold
 955              		.code	16
 956              		.thumb_func
 957              		.type	CapSense_1_GetNoiseThreshold, %function
 958              	CapSense_1_GetNoiseThreshold:
 959              	.LFB46:
 809:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 810:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 811:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetNoiseThreshold
 813:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 814:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 815:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 816:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the noise threshold from the component.
 817:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 818:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 819:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
 820:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 821:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 822:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument. 
 823:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 824:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 825:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_noiseThreshold[] - This array contains the level of signal 
 826:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 827:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 828:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 829:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 830:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 831:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 832:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetNoiseThreshold(uint32 widget)
 833:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 960              		.loc 1 833 0
 961              		.cfi_startproc
 962 0000 80B5     		push	{r7, lr}
 963              		.cfi_def_cfa_offset 8
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 82B0     		sub	sp, sp, #8
 967              		.cfi_def_cfa_offset 16
 968 0004 00AF     		add	r7, sp, #0
 969              		.cfi_def_cfa_register 7
 970 0006 7860     		str	r0, [r7, #4]
 834:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return (CapSense_1_noiseThreshold[widget]);
 971              		.loc 1 834 0
 972 0008 1423     		mov	r3, #20
 835:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 973              		.loc 1 835 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 33


 974 000a 181C     		mov	r0, r3
 975 000c BD46     		mov	sp, r7
 976 000e 02B0     		add	sp, sp, #8
 977              		@ sp needed
 978 0010 80BD     		pop	{r7, pc}
 979              		.cfi_endproc
 980              	.LFE46:
 981              		.size	CapSense_1_GetNoiseThreshold, .-CapSense_1_GetNoiseThreshold
 982 0012 C046     		.section	.text.CapSense_1_GetFingerHysteresis,"ax",%progbits
 983              		.align	2
 984              		.global	CapSense_1_GetFingerHysteresis
 985              		.code	16
 986              		.thumb_func
 987              		.type	CapSense_1_GetFingerHysteresis, %function
 988              	CapSense_1_GetFingerHysteresis:
 989              	.LFB47:
 836:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 837:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 838:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 839:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetFingerHysteresis
 840:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 841:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 842:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 843:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the Hysteresis value from the component.
 844:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 845:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
 846:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
 847:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 848:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
 849:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument. 
 850:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 851:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 852:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_hysteresis[] - This array contains the hysteresis value 
 853:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   for each widget.
 854:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_widgetNumberSld - structure with dynamic sliders' parameters.
 855:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 856:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 857:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 858:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 859:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 860:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetFingerHysteresis(uint32 widget)
 861:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 990              		.loc 1 861 0
 991              		.cfi_startproc
 992 0000 80B5     		push	{r7, lr}
 993              		.cfi_def_cfa_offset 8
 994              		.cfi_offset 7, -8
 995              		.cfi_offset 14, -4
 996 0002 82B0     		sub	sp, sp, #8
 997              		.cfi_def_cfa_offset 16
 998 0004 00AF     		add	r7, sp, #0
 999              		.cfi_def_cfa_register 7
 1000 0006 7860     		str	r0, [r7, #4]
 862:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return(CapSense_1_hysteresis[widget]);
 1001              		.loc 1 862 0
 1002 0008 0023     		mov	r3, #0
 863:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 34


 1003              		.loc 1 863 0
 1004 000a 181C     		mov	r0, r3
 1005 000c BD46     		mov	sp, r7
 1006 000e 02B0     		add	sp, sp, #8
 1007              		@ sp needed
 1008 0010 80BD     		pop	{r7, pc}
 1009              		.cfi_endproc
 1010              	.LFE47:
 1011              		.size	CapSense_1_GetFingerHysteresis, .-CapSense_1_GetFingerHysteresis
 1012 0012 C046     		.section	.text.CapSense_1_GetNegativeNoiseThreshold,"ax",%progbits
 1013              		.align	2
 1014              		.global	CapSense_1_GetNegativeNoiseThreshold
 1015              		.code	16
 1016              		.thumb_func
 1017              		.type	CapSense_1_GetNegativeNoiseThreshold, %function
 1018              	CapSense_1_GetNegativeNoiseThreshold:
 1019              	.LFB48:
 864:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 865:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 866:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
 867:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetNegativeNoiseThreshold
 868:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
 869:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 870:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
 871:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function reads the negative noise threshold from the component.
 872:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 873:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters: 
 874:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None.
 875:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 876:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return Value: 
 877:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the negative noise threshold
 878:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 879:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
 880:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_negativeNoiseThreshold - This variable specifies the negative 
 881:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 882:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   to the raw count level.
 883:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
 884:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
 885:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
 886:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
 887:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
 888:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetNegativeNoiseThreshold(uint32 widget)
 889:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1020              		.loc 1 889 0
 1021              		.cfi_startproc
 1022 0000 80B5     		push	{r7, lr}
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 82B0     		sub	sp, sp, #8
 1027              		.cfi_def_cfa_offset 16
 1028 0004 00AF     		add	r7, sp, #0
 1029              		.cfi_def_cfa_register 7
 1030 0006 7860     		str	r0, [r7, #4]
 890:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)
 891:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return(CapSense_1_negativeNoiseThreshold[widget]);
 892:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #else
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 35


 893:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return(CapSense_1_NEGATIVE_NOISE_THRESHOLD);
 1031              		.loc 1 893 0
 1032 0008 1423     		mov	r3, #20
 894:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */ 
 895:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1033              		.loc 1 895 0
 1034 000a 181C     		mov	r0, r3
 1035 000c BD46     		mov	sp, r7
 1036 000e 02B0     		add	sp, sp, #8
 1037              		@ sp needed
 1038 0010 80BD     		pop	{r7, pc}
 1039              		.cfi_endproc
 1040              	.LFE48:
 1041              		.size	CapSense_1_GetNegativeNoiseThreshold, .-CapSense_1_GetNegativeNoiseThreshold
 1042 0012 C046     		.section	.text.CapSense_1_CheckIsSensorActive,"ax",%progbits
 1043              		.align	2
 1044              		.global	CapSense_1_CheckIsSensorActive
 1045              		.code	16
 1046              		.thumb_func
 1047              		.type	CapSense_1_CheckIsSensorActive, %function
 1048              	CapSense_1_CheckIsSensorActive:
 1049              	.LFB49:
 896:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 897:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 898:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if(CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE)
 899:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	/*******************************************************************************
 900:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Function Name: CapSense_1_SetFingerThreshold
 901:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	********************************************************************************
 902:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 903:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Summary:
 904:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  This API sets the finger threshold value for a widget. 
 905:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 906:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Parameters: 
 907:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  sensorNumber:  widget index. 
 908:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  value:  Finger threshold value for the widget.
 909:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 910:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Return Value: 
 911:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
 912:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 913:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
 914:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_fingerThreshold[] - This array contains the level of signal 
 915:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*   for each widget that determines if a finger is present on the widget.
 916:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
 917:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
 918:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
 919:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 920:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*******************************************************************************/
 921:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	void CapSense_1_SetFingerThreshold(uint32 widget, uint8 value)
 922:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	{	
 923:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		CapSense_1_fingerThreshold[widget] = value;
 924:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	}
 925:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 926:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 927:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	/*******************************************************************************
 928:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Function Name: CapSense_1_SetNoiseThreshold
 929:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	********************************************************************************
 930:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 36


 931:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Summary:
 932:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  This API sets the Noise Threshold value for each widget.
 933:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 934:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Parameters:
 935:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  widget:  Sensor index number.
 936:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  value:   Noise Threshold value for widget.
 937:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 938:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Return Value: 
 939:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
 940:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 941:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
 942:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_noiseThreshold[] - This array contains the level of signal 
 943:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*   for each widget that determines the level of noise in the capacitive scan.
 944:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
 945:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
 946:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
 947:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 948:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*******************************************************************************/
 949:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	void CapSense_1_SetNoiseThreshold(uint32 widget, uint8 value)
 950:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	{
 951:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		CapSense_1_noiseThreshold[widget] = value;
 952:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	}
 953:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 954:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 955:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	/*******************************************************************************
 956:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Function Name: CapSense_1_SetFingerHysteresis
 957:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	********************************************************************************
 958:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 959:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Summary:
 960:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  This API sets the Hysteresis value of a widget
 961:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 962:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Parameters: 
 963:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  value:  Hysteresis value for widgets.
 964:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  widget:  widget number
 965:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 966:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Return Value: 
 967:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
 968:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 969:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
 970:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_hysteresis[] - This array contains the hysteresis value for each widget.
 971:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_widgetNumberSld - structure with dynamic sliders' parameters.
 972:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 973:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
 974:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
 975:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 976:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*******************************************************************************/
 977:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	void CapSense_1_SetFingerHysteresis(uint32 widget, uint8 value)
 978:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	{
 979:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		CapSense_1_hysteresis[widget] = value;
 980:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	}
 981:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 982:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
 983:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	/*******************************************************************************
 984:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Function Name: CapSense_1_SetNegativeNoiseThreshold
 985:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	********************************************************************************
 986:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 987:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 37


 988:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  This API sets the Negative Noise Threshold value of a widget
 989:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 990:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Parameters: 
 991:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  value:  Negative Noise Threshold value for widgets.
 992:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  widget: widget number
 993:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 994:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Return Value: 
 995:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
 996:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
 997:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
 998:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_negativeNoiseThreshold  - This parameter specifies the negative 
 999:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*   difference between the raw count and baseline levels for Baseline resetting to 
1000:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*   the raw count level.
1001:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
1002:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
1003:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
1004:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1005:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*******************************************************************************/
1006:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	void CapSense_1_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1007:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	{
1008:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		CapSense_1_negativeNoiseThreshold[widget] = value;
1009:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	}
1010:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1011:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1012:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	/*******************************************************************************
1013:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Function Name: CapSense_1_SetDebounce
1014:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	********************************************************************************
1015:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1016:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Summary:
1017:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  This API sets the debounce value for a widget.
1018:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1019:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Parameters: 
1020:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  value:  Debounce value for widget.
1021:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  widget: widget index.
1022:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1023:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Return Value: 
1024:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
1025:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1026:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
1027:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_debounce[] - This array contains the debounce value for each widget.
1028:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_widgetNumberSld - structure with dynamic sliders' parameters.
1029:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1030:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
1031:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
1032:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1033:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*******************************************************************************/
1034:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	void CapSense_1_SetDebounce(uint32 widget, uint8 value)
1035:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	{
1036:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		CapSense_1_debounce[widget] = value;
1037:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	}
1038:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1039:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1040:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	/*******************************************************************************
1041:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Function Name: CapSense_1_SetLowBaselineReset
1042:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	********************************************************************************
1043:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1044:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 38


1045:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  This API sets the low baseline reset threshold value for the sensor.
1046:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1047:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Parameters: 
1048:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  value: low baseline reset threshold value.
1049:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  sensor: Sensor index.
1050:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1051:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Return Value: 
1052:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
1053:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1054:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
1055:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_lowBaselineReset[] - This array contains the Baseline update 
1056:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  threshold value for each sensor.
1057:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
1058:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
1059:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
1060:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1061:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*******************************************************************************/
1062:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	void CapSense_1_SetLowBaselineReset(uint32 sensor, uint8 value)
1063:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	{
1064:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		CapSense_1_lowBaselineReset[sensor] = value;
1065:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	}
1066:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TUNING_METHOD != CapSense_1__TUNING_NONE) */
1067:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1068:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1069:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
1070:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsSensorActive
1071:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1072:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1073:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1074:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Compares the CapSense_1_sensorSignal[sensor] array element to the finger
1075:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into 
1076:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
1077:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  based on whether the sensor is currently active. 
1078:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1079:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1080:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1081:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This function updates the CapSense_1_sensorOnMask[] array element.
1082:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1083:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1084:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
1085:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1086:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1087:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1088:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1089:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1090:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[] - used to store the difference between 
1091:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1092:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store the current debounce 
1093:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix 
1094:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1095:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1096:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] - used to store the sensors on/off state.
1097:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[0] contains the masked bits for sensors 
1098:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1099:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
1100:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1101:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor is inactive.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 39


1102:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor is active.
1103:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
1104:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1105:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1106:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1107:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1108:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint32 CapSense_1_CheckIsSensorActive(uint32 sensor)
1109:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {	
 1050              		.loc 1 1109 0
 1051              		.cfi_startproc
 1052 0000 80B5     		push	{r7, lr}
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 7, -8
 1055              		.cfi_offset 14, -4
 1056 0002 84B0     		sub	sp, sp, #16
 1057              		.cfi_def_cfa_offset 24
 1058 0004 00AF     		add	r7, sp, #0
 1059              		.cfi_def_cfa_register 7
 1060 0006 7860     		str	r0, [r7, #4]
1110:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	uint8 widget;
1111:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	uint8 debounce;
1112:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	uint8 debounceIndex;
1113:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1114:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	uint8 fingerThreshold;
1115:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	uint8 hysteresis;
1116:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	static uint8 CapSense_1_debounceCounter[] = {
1117:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     0u, 
1118:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** };
1119:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1120:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1121:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	
1122:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Prepare to find debounce counter index */
1123:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     widget = CapSense_1_widgetNumber[sensor];
 1061              		.loc 1 1123 0
 1062 0008 3B1C     		mov	r3, r7
 1063 000a 0F33     		add	r3, r3, #15
 1064 000c 3F49     		ldr	r1, .L74
 1065 000e 7A68     		ldr	r2, [r7, #4]
 1066 0010 8A18     		add	r2, r1, r2
 1067 0012 1278     		ldrb	r2, [r2]
 1068 0014 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	
1125:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     fingerThreshold = CapSense_1_fingerThreshold[widget];
 1069              		.loc 1 1125 0
 1070 0016 3B1C     		mov	r3, r7
 1071 0018 0E33     		add	r3, r3, #14
 1072 001a 6422     		mov	r2, #100
 1073 001c 1A70     		strb	r2, [r3]
1126:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	hysteresis = CapSense_1_hysteresis[widget];
 1074              		.loc 1 1126 0
 1075 001e 3B1C     		mov	r3, r7
 1076 0020 0D33     		add	r3, r3, #13
 1077 0022 0022     		mov	r2, #0
 1078 0024 1A70     		strb	r2, [r3]
1127:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	debounce = CapSense_1_debounce[widget];	
 1079              		.loc 1 1127 0
 1080 0026 3B1C     		mov	r3, r7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 40


 1081 0028 0C33     		add	r3, r3, #12
 1082 002a 0122     		mov	r2, #1
 1083 002c 1A70     		strb	r2, [r3]
1128:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	
1129:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	    debounceIndex = CapSense_1_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1084              		.loc 1 1129 0
 1085 002e 3B1C     		mov	r3, r7
 1086 0030 0B33     		add	r3, r3, #11
 1087 0032 0022     		mov	r2, #0
 1088 0034 1A70     		strb	r2, [r3]
1130:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     CapSense_1_debounceCounter[debounceIndex] = 1u;
 1089              		.loc 1 1130 0
 1090 0036 3B1C     		mov	r3, r7
 1091 0038 0B33     		add	r3, r3, #11
 1092 003a 1B78     		ldrb	r3, [r3]
 1093 003c 344A     		ldr	r2, .L74+4
 1094 003e 0121     		mov	r1, #1
 1095 0040 D154     		strb	r1, [r2, r3]
1131:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1132:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	
1133:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Was on */
1134:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     if (0u != CapSense_1_GetBitValue(CapSense_1_sensorOnMask, sensor))
 1096              		.loc 1 1134 0
 1097 0042 344A     		ldr	r2, .L74+8
 1098 0044 7B68     		ldr	r3, [r7, #4]
 1099 0046 101C     		mov	r0, r2
 1100 0048 191C     		mov	r1, r3
 1101 004a FFF7FEFF 		bl	CapSense_1_GetBitValue
 1102 004e 031C     		mov	r3, r0
 1103 0050 002B     		cmp	r3, #0
 1104 0052 1DD0     		beq	.L66
1135:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1136:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Hysteresis minus */
1137:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1105              		.loc 1 1137 0
 1106 0054 304A     		ldr	r2, .L74+12
 1107 0056 7B68     		ldr	r3, [r7, #4]
 1108 0058 D318     		add	r3, r2, r3
 1109 005a 1B78     		ldrb	r3, [r3]
 1110 005c 1A1C     		mov	r2, r3
 1111 005e 3B1C     		mov	r3, r7
 1112 0060 0E33     		add	r3, r3, #14
 1113 0062 1978     		ldrb	r1, [r3]
 1114 0064 3B1C     		mov	r3, r7
 1115 0066 0D33     		add	r3, r3, #13
 1116 0068 1B78     		ldrb	r3, [r3]
 1117 006a CB1A     		sub	r3, r1, r3
 1118 006c 9A42     		cmp	r2, r3
 1119 006e 3DDA     		bge	.L68
1138:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1139:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	   		CapSense_1_SetBitValue(CapSense_1_sensorOnMask, sensor, 0u);
 1120              		.loc 1 1139 0
 1121 0070 284A     		ldr	r2, .L74+8
 1122 0072 7B68     		ldr	r3, [r7, #4]
 1123 0074 101C     		mov	r0, r2
 1124 0076 191C     		mov	r1, r3
 1125 0078 0022     		mov	r2, #0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 41


 1126 007a FFF7FEFF 		bl	CapSense_1_SetBitValue
1140:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			/* Sensor inactive - reset Debounce counter */
1141:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 1127              		.loc 1 1141 0
 1128 007e 3B1C     		mov	r3, r7
 1129 0080 0B33     		add	r3, r3, #11
 1130 0082 1B78     		ldrb	r3, [r3]
 1131 0084 224A     		ldr	r2, .L74+4
 1132 0086 391C     		mov	r1, r7
 1133 0088 0C31     		add	r1, r1, #12
 1134 008a 0978     		ldrb	r1, [r1]
 1135 008c D154     		strb	r1, [r2, r3]
 1136 008e 2DE0     		b	.L68
 1137              	.L66:
1142:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1143:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1144:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     else    /* Was off */
1145:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1146:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Hysteresis plus */
1147:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1138              		.loc 1 1147 0
 1139 0090 214A     		ldr	r2, .L74+12
 1140 0092 7B68     		ldr	r3, [r7, #4]
 1141 0094 D318     		add	r3, r2, r3
 1142 0096 1B78     		ldrb	r3, [r3]
 1143 0098 1A1C     		mov	r2, r3
 1144 009a 3B1C     		mov	r3, r7
 1145 009c 0E33     		add	r3, r3, #14
 1146 009e 1978     		ldrb	r1, [r3]
 1147 00a0 3B1C     		mov	r3, r7
 1148 00a2 0D33     		add	r3, r3, #13
 1149 00a4 1B78     		ldrb	r3, [r3]
 1150 00a6 CB18     		add	r3, r1, r3
 1151 00a8 9A42     		cmp	r2, r3
 1152 00aa 17DB     		blt	.L69
1148:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1149:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			CapSense_1_debounceCounter[debounceIndex]--;
 1153              		.loc 1 1149 0
 1154 00ac 3B1C     		mov	r3, r7
 1155 00ae 0B33     		add	r3, r3, #11
 1156 00b0 1B78     		ldrb	r3, [r3]
 1157 00b2 174A     		ldr	r2, .L74+4
 1158 00b4 D25C     		ldrb	r2, [r2, r3]
 1159 00b6 013A     		sub	r2, r2, #1
 1160 00b8 D1B2     		uxtb	r1, r2
 1161 00ba 154A     		ldr	r2, .L74+4
 1162 00bc D154     		strb	r1, [r2, r3]
1150:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Sensor active, decrement debounce counter */
1151:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(CapSense_1_debounceCounter[debounceIndex] == 0u)
 1163              		.loc 1 1151 0
 1164 00be 3B1C     		mov	r3, r7
 1165 00c0 0B33     		add	r3, r3, #11
 1166 00c2 1B78     		ldrb	r3, [r3]
 1167 00c4 124A     		ldr	r2, .L74+4
 1168 00c6 D35C     		ldrb	r3, [r2, r3]
 1169 00c8 002B     		cmp	r3, #0
 1170 00ca 0FD1     		bne	.L68
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 42


1152:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1153:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_SetBitValue(CapSense_1_sensorOnMask, sensor, 1u); 
 1171              		.loc 1 1153 0
 1172 00cc 114A     		ldr	r2, .L74+8
 1173 00ce 7B68     		ldr	r3, [r7, #4]
 1174 00d0 101C     		mov	r0, r2
 1175 00d2 191C     		mov	r1, r3
 1176 00d4 0122     		mov	r2, #1
 1177 00d6 FFF7FEFF 		bl	CapSense_1_SetBitValue
 1178 00da 07E0     		b	.L68
 1179              	.L69:
1154:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1155:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1156:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
1157:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1158:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1159:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 1180              		.loc 1 1159 0
 1181 00dc 3B1C     		mov	r3, r7
 1182 00de 0B33     		add	r3, r3, #11
 1183 00e0 1B78     		ldrb	r3, [r3]
 1184 00e2 0B4A     		ldr	r2, .L74+4
 1185 00e4 391C     		mov	r1, r7
 1186 00e6 0C31     		add	r1, r1, #12
 1187 00e8 0978     		ldrb	r1, [r1]
 1188 00ea D154     		strb	r1, [r2, r3]
 1189              	.L68:
1160:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1161:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1162:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1163:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return ((uint32)((0u != CapSense_1_GetBitValue(CapSense_1_sensorOnMask, sensor)) ? 1u : 0u));
 1190              		.loc 1 1163 0
 1191 00ec 094A     		ldr	r2, .L74+8
 1192 00ee 7B68     		ldr	r3, [r7, #4]
 1193 00f0 101C     		mov	r0, r2
 1194 00f2 191C     		mov	r1, r3
 1195 00f4 FFF7FEFF 		bl	CapSense_1_GetBitValue
 1196 00f8 031C     		mov	r3, r0
 1197 00fa 002B     		cmp	r3, #0
 1198 00fc 01D0     		beq	.L71
 1199              		.loc 1 1163 0 is_stmt 0 discriminator 1
 1200 00fe 0123     		mov	r3, #1
 1201 0100 00E0     		b	.L72
 1202              	.L71:
 1203              		.loc 1 1163 0 discriminator 2
 1204 0102 0023     		mov	r3, #0
 1205              	.L72:
1164:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1206              		.loc 1 1164 0 is_stmt 1 discriminator 3
 1207 0104 181C     		mov	r0, r3
 1208 0106 BD46     		mov	sp, r7
 1209 0108 04B0     		add	sp, sp, #16
 1210              		@ sp needed
 1211 010a 80BD     		pop	{r7, pc}
 1212              	.L75:
 1213              		.align	2
 1214              	.L74:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 43


 1215 010c 00000000 		.word	CapSense_1_widgetNumber
 1216 0110 20000000 		.word	CapSense_1_debounceCounter.5275
 1217 0114 00000000 		.word	CapSense_1_sensorOnMask
 1218 0118 00000000 		.word	CapSense_1_sensorSignal
 1219              		.cfi_endproc
 1220              	.LFE49:
 1221              		.size	CapSense_1_CheckIsSensorActive, .-CapSense_1_CheckIsSensorActive
 1222              		.section	.text.CapSense_1_CheckIsWidgetActive,"ax",%progbits
 1223              		.align	2
 1224              		.global	CapSense_1_CheckIsWidgetActive
 1225              		.code	16
 1226              		.thumb_func
 1227              		.type	CapSense_1_CheckIsWidgetActive, %function
 1228              	CapSense_1_CheckIsWidgetActive:
 1229              	.LFB50:
1165:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1166:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1167:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
1168:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsWidgetActive
1169:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1170:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1171:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1172:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of 
1173:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account. 
1174:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1175:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is 
1176:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold 
1177:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  is raised by the hysteresis amount. 
1178:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * The debounce counter added to the sensor active transition. 
1179:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1180:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1181:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1182:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
1183:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1184:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1185:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
1186:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1187:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1188:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1189:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1190:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
1191:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1192:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1193:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1194:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1195:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint32 CapSense_1_CheckIsWidgetActive(uint32 widget)
1196:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1230              		.loc 1 1196 0
 1231              		.cfi_startproc
 1232 0000 80B5     		push	{r7, lr}
 1233              		.cfi_def_cfa_offset 8
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 86B0     		sub	sp, sp, #24
 1237              		.cfi_def_cfa_offset 32
 1238 0004 00AF     		add	r7, sp, #0
 1239              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 44


 1240 0006 7860     		str	r0, [r7, #4]
1197:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_1_rawDataIndex[widget];
 1241              		.loc 1 1197 0
 1242 0008 0023     		mov	r3, #0
 1243 000a 7B61     		str	r3, [r7, #20]
1198:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_1_numberOfSensors[widget] + rawIndex;
 1244              		.loc 1 1198 0
 1245 000c 0523     		mov	r3, #5
 1246 000e 1A1C     		mov	r2, r3
 1247 0010 7B69     		ldr	r3, [r7, #20]
 1248 0012 D318     		add	r3, r2, r3
 1249 0014 FB60     		str	r3, [r7, #12]
1199:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 state = 0u;
 1250              		.loc 1 1199 0
 1251 0016 0023     		mov	r3, #0
 1252 0018 3B61     		str	r3, [r7, #16]
 1253              	.L78:
1200:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1201:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Check all sensors of widget */
1202:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     do
1203:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1204:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1254              		.loc 1 1204 0
 1255 001a 7B69     		ldr	r3, [r7, #20]
 1256 001c 181C     		mov	r0, r3
 1257 001e FFF7FEFF 		bl	CapSense_1_CheckIsSensorActive
 1258 0022 031C     		mov	r3, r0
 1259 0024 002B     		cmp	r3, #0
 1260 0026 01D0     		beq	.L77
1205:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1206:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             state = CapSense_1_SENSOR_IS_ACTIVE;
 1261              		.loc 1 1206 0
 1262 0028 0123     		mov	r3, #1
 1263 002a 3B61     		str	r3, [r7, #16]
 1264              	.L77:
1207:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1208:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         rawIndex++;
 1265              		.loc 1 1208 0
 1266 002c 7B69     		ldr	r3, [r7, #20]
 1267 002e 0133     		add	r3, r3, #1
 1268 0030 7B61     		str	r3, [r7, #20]
1209:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1210:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(rawIndex < numOfSensors);
 1269              		.loc 1 1210 0
 1270 0032 7A69     		ldr	r2, [r7, #20]
 1271 0034 FB68     		ldr	r3, [r7, #12]
 1272 0036 9A42     		cmp	r2, r3
 1273 0038 EFD3     		bcc	.L78
1211:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1212:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1213:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1214:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return state;
 1274              		.loc 1 1214 0
 1275 003a 3B69     		ldr	r3, [r7, #16]
1215:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1276              		.loc 1 1215 0
 1277 003c 181C     		mov	r0, r3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 45


 1278 003e BD46     		mov	sp, r7
 1279 0040 06B0     		add	sp, sp, #24
 1280              		@ sp needed
 1281 0042 80BD     		pop	{r7, pc}
 1282              		.cfi_endproc
 1283              	.LFE50:
 1284              		.size	CapSense_1_CheckIsWidgetActive, .-CapSense_1_CheckIsWidgetActive
 1285              		.section	.text.CapSense_1_CheckIsAnyWidgetActive,"ax",%progbits
 1286              		.align	2
 1287              		.global	CapSense_1_CheckIsAnyWidgetActive
 1288              		.code	16
 1289              		.thumb_func
 1290              		.type	CapSense_1_CheckIsAnyWidgetActive, %function
 1291              	CapSense_1_CheckIsAnyWidgetActive:
 1292              	.LFB51:
1216:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1217:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1218:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
1219:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsAnyWidgetActive
1220:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1221:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1222:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1223:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Compares all the sensors of the CapSense_1_Signal[] array to their finger 
1224:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  threshold. Calls CapSense_1_CheckIsWidgetActive() for each widget so 
1225:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  the CapSense_1_sensorOnMask[] array is up to date after calling this 
1226:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  function.
1227:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1228:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1229:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
1230:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1231:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1232:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1233:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1234:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1235:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1236:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
1237:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1238:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1239:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1240:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1241:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint32 CapSense_1_CheckIsAnyWidgetActive(void)
1242:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1293              		.loc 1 1242 0
 1294              		.cfi_startproc
 1295 0000 80B5     		push	{r7, lr}
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 7, -8
 1298              		.cfi_offset 14, -4
 1299 0002 82B0     		sub	sp, sp, #8
 1300              		.cfi_def_cfa_offset 16
 1301 0004 00AF     		add	r7, sp, #0
 1302              		.cfi_def_cfa_register 7
1243:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1244:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	    uint32 i;
1245:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 state = 0u;
 1303              		.loc 1 1245 0
 1304 0006 0023     		mov	r3, #0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 46


 1305 0008 3B60     		str	r3, [r7]
1246:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1247:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 1306              		.loc 1 1247 0
 1307 000a 0023     		mov	r3, #0
 1308 000c 7B60     		str	r3, [r7, #4]
 1309 000e 0BE0     		b	.L81
 1310              	.L83:
1248:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1249:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 1311              		.loc 1 1249 0
 1312 0010 7B68     		ldr	r3, [r7, #4]
 1313 0012 181C     		mov	r0, r3
 1314 0014 FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
 1315 0018 031C     		mov	r3, r0
 1316 001a 002B     		cmp	r3, #0
 1317 001c 01D0     		beq	.L82
1250:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1251:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             state = CapSense_1_WIDGET_IS_ACTIVE;
 1318              		.loc 1 1251 0
 1319 001e 0123     		mov	r3, #1
 1320 0020 3B60     		str	r3, [r7]
 1321              	.L82:
1247:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 1322              		.loc 1 1247 0
 1323 0022 7B68     		ldr	r3, [r7, #4]
 1324 0024 0133     		add	r3, r3, #1
 1325 0026 7B60     		str	r3, [r7, #4]
 1326              	.L81:
1247:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 1327              		.loc 1 1247 0 is_stmt 0 discriminator 1
 1328 0028 7B68     		ldr	r3, [r7, #4]
 1329 002a 002B     		cmp	r3, #0
 1330 002c F0D0     		beq	.L83
1252:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1253:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1254:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1255:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1256:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1257:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     return state;
 1331              		.loc 1 1257 0 is_stmt 1
 1332 002e 3B68     		ldr	r3, [r7]
1258:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1333              		.loc 1 1258 0
 1334 0030 181C     		mov	r0, r3
 1335 0032 BD46     		mov	sp, r7
 1336 0034 02B0     		add	sp, sp, #8
 1337              		@ sp needed
 1338 0036 80BD     		pop	{r7, pc}
 1339              		.cfi_endproc
 1340              	.LFE51:
 1341              		.size	CapSense_1_CheckIsAnyWidgetActive, .-CapSense_1_CheckIsAnyWidgetActive
 1342              		.section	.text.CapSense_1_EnableWidget,"ax",%progbits
 1343              		.align	2
 1344              		.global	CapSense_1_EnableWidget
 1345              		.code	16
 1346              		.thumb_func
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 47


 1347              		.type	CapSense_1_EnableWidget, %function
 1348              	CapSense_1_EnableWidget:
 1349              	.LFB52:
1259:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1260:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1261:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_EnableWidget
1263:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1265:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1266:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1267:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1268:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1269:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
1270:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1271:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1272:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1273:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1274:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1275:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
1276:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  state.
1277:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
1278:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1279:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
1280:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1281:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
1282:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
1283:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
1284:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1285:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1286:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1287:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1288:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_EnableWidget(uint32 widget)
1289:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1350              		.loc 1 1289 0
 1351              		.cfi_startproc
 1352 0000 80B5     		push	{r7, lr}
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 7, -8
 1355              		.cfi_offset 14, -4
 1356 0002 84B0     		sub	sp, sp, #16
 1357              		.cfi_def_cfa_offset 24
 1358 0004 00AF     		add	r7, sp, #0
 1359              		.cfi_def_cfa_register 7
 1360 0006 7860     		str	r0, [r7, #4]
1290:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1291:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 1361              		.loc 1 1291 0
 1362 0008 3B1C     		mov	r3, r7
 1363 000a 0F33     		add	r3, r3, #15
 1364 000c 0022     		mov	r2, #0
 1365 000e 1A70     		strb	r2, [r3]
1292:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 numOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 1366              		.loc 1 1292 0
 1367 0010 0521     		mov	r1, #5
 1368 0012 3B1C     		mov	r3, r7
 1369 0014 0E33     		add	r3, r3, #14
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 48


 1370 0016 3A1C     		mov	r2, r7
 1371 0018 0F32     		add	r2, r2, #15
 1372 001a 1278     		ldrb	r2, [r2]
 1373 001c 8A18     		add	r2, r1, r2
 1374 001e 1A70     		strb	r2, [r3]
 1375              	.L86:
1293:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1294:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Enable all sensors of widget */
1295:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     do
1296:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1297:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_SetBitValue(CapSense_1_sensorEnableMask, (uint32)rawIndex, 1u);
 1376              		.loc 1 1297 0 discriminator 1
 1377 0020 3B1C     		mov	r3, r7
 1378 0022 0F33     		add	r3, r3, #15
 1379 0024 1B78     		ldrb	r3, [r3]
 1380 0026 0C4A     		ldr	r2, .L87
 1381 0028 101C     		mov	r0, r2
 1382 002a 191C     		mov	r1, r3
 1383 002c 0122     		mov	r2, #1
 1384 002e FFF7FEFF 		bl	CapSense_1_SetBitValue
1298:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         rawIndex++;
 1385              		.loc 1 1298 0 discriminator 1
 1386 0032 3B1C     		mov	r3, r7
 1387 0034 0F33     		add	r3, r3, #15
 1388 0036 1A78     		ldrb	r2, [r3]
 1389 0038 3B1C     		mov	r3, r7
 1390 003a 0F33     		add	r3, r3, #15
 1391 003c 0132     		add	r2, r2, #1
 1392 003e 1A70     		strb	r2, [r3]
1299:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1300:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(rawIndex < numOfSensors);
 1393              		.loc 1 1300 0 discriminator 1
 1394 0040 3A1C     		mov	r2, r7
 1395 0042 0F32     		add	r2, r2, #15
 1396 0044 3B1C     		mov	r3, r7
 1397 0046 0E33     		add	r3, r3, #14
 1398 0048 1278     		ldrb	r2, [r2]
 1399 004a 1B78     		ldrb	r3, [r3]
 1400 004c 9A42     		cmp	r2, r3
 1401 004e E7D3     		bcc	.L86
1301:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1402              		.loc 1 1301 0
 1403 0050 BD46     		mov	sp, r7
 1404 0052 04B0     		add	sp, sp, #16
 1405              		@ sp needed
 1406 0054 80BD     		pop	{r7, pc}
 1407              	.L88:
 1408 0056 C046     		.align	2
 1409              	.L87:
 1410 0058 00000000 		.word	CapSense_1_sensorEnableMask
 1411              		.cfi_endproc
 1412              	.LFE52:
 1413              		.size	CapSense_1_EnableWidget, .-CapSense_1_EnableWidget
 1414              		.section	.text.CapSense_1_DisableWidget,"ax",%progbits
 1415              		.align	2
 1416              		.global	CapSense_1_DisableWidget
 1417              		.code	16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 49


 1418              		.thumb_func
 1419              		.type	CapSense_1_DisableWidget, %function
 1420              	CapSense_1_DisableWidget:
 1421              	.LFB53:
1302:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1303:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1304:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
1305:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_DisableWidget
1306:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
1307:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1308:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
1309:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1310:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1311:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
1312:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  widget:  widget number.
1313:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1314:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
1315:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1316:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1317:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
1318:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
1319:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  state.
1320:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
1321:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1322:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
1323:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1324:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  0 - sensor isn't scanned by CapSense_1_ScanEnabledWidgets().
1325:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  1 - sensor is scanned by CapSense_1_ScanEnabledWidgets().
1326:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
1327:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
1328:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
1329:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
1330:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
1331:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** void CapSense_1_DisableWidget(uint32 widget)
1332:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 1422              		.loc 1 1332 0
 1423              		.cfi_startproc
 1424 0000 80B5     		push	{r7, lr}
 1425              		.cfi_def_cfa_offset 8
 1426              		.cfi_offset 7, -8
 1427              		.cfi_offset 14, -4
 1428 0002 84B0     		sub	sp, sp, #16
 1429              		.cfi_def_cfa_offset 24
 1430 0004 00AF     		add	r7, sp, #0
 1431              		.cfi_def_cfa_register 7
 1432 0006 7860     		str	r0, [r7, #4]
1333:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 1433              		.loc 1 1333 0
 1434 0008 3B1C     		mov	r3, r7
 1435 000a 0F33     		add	r3, r3, #15
 1436 000c 0022     		mov	r2, #0
 1437 000e 1A70     		strb	r2, [r3]
1334:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 numOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 1438              		.loc 1 1334 0
 1439 0010 0521     		mov	r1, #5
 1440 0012 3B1C     		mov	r3, r7
 1441 0014 0E33     		add	r3, r3, #14
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 50


 1442 0016 3A1C     		mov	r2, r7
 1443 0018 0F32     		add	r2, r2, #15
 1444 001a 1278     		ldrb	r2, [r2]
 1445 001c 8A18     		add	r2, r1, r2
 1446 001e 1A70     		strb	r2, [r3]
 1447              	.L90:
1335:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****    
1336:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /* Disable all sensors of widget */
1337:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     do
1338:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
1339:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1340:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_SetBitValue(CapSense_1_sensorEnableMask, (uint32)rawIndex, 0u);
 1448              		.loc 1 1340 0 discriminator 1
 1449 0020 3B1C     		mov	r3, r7
 1450 0022 0F33     		add	r3, r3, #15
 1451 0024 1B78     		ldrb	r3, [r3]
 1452 0026 0C4A     		ldr	r2, .L91
 1453 0028 101C     		mov	r0, r2
 1454 002a 191C     		mov	r1, r3
 1455 002c 0022     		mov	r2, #0
 1456 002e FFF7FEFF 		bl	CapSense_1_SetBitValue
1341:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         rawIndex++;
 1457              		.loc 1 1341 0 discriminator 1
 1458 0032 3B1C     		mov	r3, r7
 1459 0034 0F33     		add	r3, r3, #15
 1460 0036 1A78     		ldrb	r2, [r3]
 1461 0038 3B1C     		mov	r3, r7
 1462 003a 0F33     		add	r3, r3, #15
 1463 003c 0132     		add	r2, r2, #1
 1464 003e 1A70     		strb	r2, [r3]
1342:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
1343:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     while(rawIndex < numOfSensors);
 1465              		.loc 1 1343 0 discriminator 1
 1466 0040 3A1C     		mov	r2, r7
 1467 0042 0F32     		add	r2, r2, #15
 1468 0044 3B1C     		mov	r3, r7
 1469 0046 0E33     		add	r3, r3, #14
 1470 0048 1278     		ldrb	r2, [r2]
 1471 004a 1B78     		ldrb	r3, [r3]
 1472 004c 9A42     		cmp	r2, r3
 1473 004e E7D3     		bcc	.L90
1344:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 1474              		.loc 1 1344 0
 1475 0050 BD46     		mov	sp, r7
 1476 0052 04B0     		add	sp, sp, #16
 1477              		@ sp needed
 1478 0054 80BD     		pop	{r7, pc}
 1479              	.L92:
 1480 0056 C046     		.align	2
 1481              	.L91:
 1482 0058 00000000 		.word	CapSense_1_sensorEnableMask
 1483              		.cfi_endproc
 1484              	.LFE53:
 1485              		.size	CapSense_1_DisableWidget, .-CapSense_1_DisableWidget
 1486              		.section	.text.CapSense_1_FindMaximum,"ax",%progbits
 1487              		.align	2
 1488              		.global	CapSense_1_FindMaximum
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 51


 1489              		.code	16
 1490              		.thumb_func
 1491              		.type	CapSense_1_FindMaximum, %function
 1492              	CapSense_1_FindMaximum:
 1493              	.LFB54:
1345:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1346:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1347:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_CENTROIDS_BASIC_COUNT)
1348:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1349:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_FindMaximum
1350:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1351:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1352:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1353:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks 
1354:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense_1_sensorSignal[] within a defined centroid and 
1355:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are 
1356:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  ignored.
1357:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1358:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1359:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1360:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * 
1361:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
1362:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  offset:  Start index of centroid in CapSense_1_sensorSignal[] array.
1363:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  count:   number of elements within centroid.
1364:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1365:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  diplex:   pointer to diplex table.
1366:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * 
1367:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
1368:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1369:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1370:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1371:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
1372:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_startOfSlider[] - contains the index of the first slider element
1373:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
1374:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects: 
1375:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
1376:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
1377:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1378:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#if (CapSense_1_IS_DIPLEX_SLIDER)
1379:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *diple
1380:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#else 
1381:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1382:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	#endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1383:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1494              		.loc 1 1383 0
 1495              		.cfi_startproc
 1496 0000 80B5     		push	{r7, lr}
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 84B0     		sub	sp, sp, #16
 1501              		.cfi_def_cfa_offset 24
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 FB1D     		add	r3, r7, #7
 1505 0008 1870     		strb	r0, [r3]
 1506 000a BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 52


 1507 000c 1970     		strb	r1, [r3]
 1508 000e 7B1D     		add	r3, r7, #5
 1509 0010 1A70     		strb	r2, [r3]
1384:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 i;
1385:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
1386:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 curPos = 0u;
1387:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* No centroid at Start */
1388:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 curCntrdSize = 0u;
1389:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 curCtrdStartPos = CapSense_1_MAXIMUM_CENTROID;
1390:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Biggest centroid is zero */
1391:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1392:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1393:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1394:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 maximum = CapSense_1_MAXIMUM_CENTROID;
 1510              		.loc 1 1394 0
 1511 0012 3B1C     		mov	r3, r7
 1512 0014 0E33     		add	r3, r3, #14
 1513 0016 FF22     		mov	r2, #255
 1514 0018 1A70     		strb	r2, [r3]
1395:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		
1396:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 temp = 0u;
 1515              		.loc 1 1396 0
 1516 001a 3B1C     		mov	r3, r7
 1517 001c 0D33     		add	r3, r3, #13
 1518 001e 0022     		mov	r2, #0
 1519 0020 1A70     		strb	r2, [r3]
1397:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset];
 1520              		.loc 1 1397 0
 1521 0022 FB1D     		add	r3, r7, #7
 1522 0024 1A78     		ldrb	r2, [r3]
 1523 0026 204B     		ldr	r3, .L98
 1524 0028 D318     		add	r3, r2, r3
 1525 002a BB60     		str	r3, [r7, #8]
1398:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1399:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
1400:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(diplex != 0u)
1401:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1402:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Initialize */
1403:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 i = 0u;
1404:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 
1405:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Make slider x2 as Diplexed */
1406:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 count <<= 1u;
1407:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 while(1u)
1408:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 { 
1409:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1410:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1411:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         if (curCtrdStartPos == CapSense_1_MAXIMUM_CENTROID)
1412:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
1413:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             /* Start of centroid */
1414:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCtrdStartPos = i;
1415:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCntrdSize++;
1416:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
1417:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         else
1418:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
1419:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCntrdSize++;
1420:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
1421:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 53


1422:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1423:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {          
1424:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         if(curCntrdSize > 0u)
1425:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
1426:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             /* We are at the end of current */
1427:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1428:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1429:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1430:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1431:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1432:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             
1433:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCntrdSize = 0u;
1434:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curCtrdStartPos = CapSense_1_MAXIMUM_CENTROID;
1435:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
1436:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1437:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     
1438:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     i++; 
1439:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     curPos = diplex[i];
1440:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if(i == count)
1441:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1442:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         break;
1443:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }            
1444:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1445:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     
1446:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1447:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                        We are at the end of current */
1448:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
1449:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1450:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1451:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1452:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1453:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1454:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             else
1455:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1456:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Without diplexing */ 
1457:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 biggestCtrdSize = count;
1458:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1459:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         
1460:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1461:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Check centroid size */
1462:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_NON_DIPLEX_SLIDER)
1463:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1464:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #else                    
1465:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1466:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_NON_DIPLEX_SLIDER) */
1467:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1468:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1469:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1470:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
1471:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (diplex == 0u)
1472:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1473:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 curPos = i;
1474:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1475:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             else
1476:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1477:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 curPos = diplex[i];
1478:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }                    
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 54


1479:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #elif (CapSense_1_IS_DIPLEX_SLIDER)                    
1480:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             curPos = diplex[i];                    
1481:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) 
1482:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Looking for greater element within centroid */
1483:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1484:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
1485:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1486:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1487:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 maximum = i;
1488:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 temp = startOfSlider[curPos];
1489:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1490:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
1491:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1492:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 } 
1493:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
1494:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
 1526              		.loc 1 1494 0
 1527 002c 3B1C     		mov	r3, r7
 1528 002e 0F33     		add	r3, r3, #15
 1529 0030 0022     		mov	r2, #0
 1530 0032 1A70     		strb	r2, [r3]
 1531 0034 2AE0     		b	.L94
 1532              	.L96:
1495:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {                      
1496:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Looking for greater element within centroid */
1497:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1533              		.loc 1 1497 0
 1534 0036 3B1C     		mov	r3, r7
 1535 0038 0F33     		add	r3, r3, #15
 1536 003a 1B78     		ldrb	r3, [r3]
 1537 003c BA68     		ldr	r2, [r7, #8]
 1538 003e D318     		add	r3, r2, r3
 1539 0040 1B78     		ldrb	r3, [r3]
 1540 0042 7A1D     		add	r2, r7, #5
 1541 0044 1278     		ldrb	r2, [r2]
 1542 0046 9A42     		cmp	r2, r3
 1543 0048 19D2     		bcs	.L95
1498:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1499:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if(startOfSlider[i] > temp)
 1544              		.loc 1 1499 0
 1545 004a 3B1C     		mov	r3, r7
 1546 004c 0F33     		add	r3, r3, #15
 1547 004e 1B78     		ldrb	r3, [r3]
 1548 0050 BA68     		ldr	r2, [r7, #8]
 1549 0052 D318     		add	r3, r2, r3
 1550 0054 1B78     		ldrb	r3, [r3]
 1551 0056 3A1C     		mov	r2, r7
 1552 0058 0D32     		add	r2, r2, #13
 1553 005a 1278     		ldrb	r2, [r2]
 1554 005c 9A42     		cmp	r2, r3
 1555 005e 0ED2     		bcs	.L95
1500:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1501:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         maximum = i;
 1556              		.loc 1 1501 0
 1557 0060 3B1C     		mov	r3, r7
 1558 0062 0E33     		add	r3, r3, #14
 1559 0064 3A1C     		mov	r2, r7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 55


 1560 0066 0F32     		add	r2, r2, #15
 1561 0068 1278     		ldrb	r2, [r2]
 1562 006a 1A70     		strb	r2, [r3]
1502:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
 1563              		.loc 1 1502 0
 1564 006c 3B1C     		mov	r3, r7
 1565 006e 0F33     		add	r3, r3, #15
 1566 0070 1B78     		ldrb	r3, [r3]
 1567 0072 BA68     		ldr	r2, [r7, #8]
 1568 0074 D218     		add	r2, r2, r3
 1569 0076 3B1C     		mov	r3, r7
 1570 0078 0D33     		add	r3, r3, #13
 1571 007a 1278     		ldrb	r2, [r2]
 1572 007c 1A70     		strb	r2, [r3]
 1573              	.L95:
1494:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
 1574              		.loc 1 1494 0
 1575 007e 3B1C     		mov	r3, r7
 1576 0080 0F33     		add	r3, r3, #15
 1577 0082 1A78     		ldrb	r2, [r3]
 1578 0084 3B1C     		mov	r3, r7
 1579 0086 0F33     		add	r3, r3, #15
 1580 0088 0132     		add	r2, r2, #1
 1581 008a 1A70     		strb	r2, [r3]
 1582              	.L94:
1494:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
 1583              		.loc 1 1494 0 is_stmt 0 discriminator 1
 1584 008c 3A1C     		mov	r2, r7
 1585 008e 0F32     		add	r2, r2, #15
 1586 0090 BB1D     		add	r3, r7, #6
 1587 0092 1278     		ldrb	r2, [r2]
 1588 0094 1B78     		ldrb	r3, [r3]
 1589 0096 9A42     		cmp	r2, r3
 1590 0098 CDD3     		bcc	.L96
1503:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1504:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1505:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }    
1506:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1507:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (maximum);
 1591              		.loc 1 1507 0 is_stmt 1
 1592 009a 3B1C     		mov	r3, r7
 1593 009c 0E33     		add	r3, r3, #14
 1594 009e 1B78     		ldrb	r3, [r3]
1508:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 1595              		.loc 1 1508 0
 1596 00a0 181C     		mov	r0, r3
 1597 00a2 BD46     		mov	sp, r7
 1598 00a4 04B0     		add	sp, sp, #16
 1599              		@ sp needed
 1600 00a6 80BD     		pop	{r7, pc}
 1601              	.L99:
 1602              		.align	2
 1603              	.L98:
 1604 00a8 00000000 		.word	CapSense_1_sensorSignal
 1605              		.cfi_endproc
 1606              	.LFE54:
 1607              		.size	CapSense_1_FindMaximum, .-CapSense_1_FindMaximum
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 56


 1608              		.global	__aeabi_idiv
 1609              		.section	.text.CapSense_1_CalcCentroid,"ax",%progbits
 1610              		.align	2
 1611              		.global	CapSense_1_CalcCentroid
 1612              		.code	16
 1613              		.thumb_func
 1614              		.type	CapSense_1_CalcCentroid, %function
 1615              	CapSense_1_CalcCentroid:
 1616              	.LFB55:
1509:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1510:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
1511:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1512:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_CalcCentroid
1513:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1514:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1515:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1516:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1517:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  resolution.
1518:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1519:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
1520:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  type:  widget type.
1521:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  diplex:  pointer to diplex table.
1522:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1523:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  offset:   Start index of centroid in CapSense_1_sensorSignal[] array.
1524:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  count:    Number of elements within centroid.
1525:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1526:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  API resolution.
1527:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1528:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * 
1529:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
1530:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a position value of the slider.
1531:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1532:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects: 
1533:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
1534:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
1535:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1536:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (CapSense_1_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1537:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset, 
1538:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1539:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #else								
1540:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset, 
1541:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)						
1542:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1543:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1617              		.loc 1 1543 0
 1618              		.cfi_startproc
 1619 0000 90B5     		push	{r4, r7, lr}
 1620              		.cfi_def_cfa_offset 12
 1621              		.cfi_offset 4, -12
 1622              		.cfi_offset 7, -8
 1623              		.cfi_offset 14, -4
 1624 0002 89B0     		sub	sp, sp, #36
 1625              		.cfi_def_cfa_offset 48
 1626 0004 00AF     		add	r7, sp, #0
 1627              		.cfi_def_cfa_register 7
 1628 0006 041C     		mov	r4, r0
 1629 0008 081C     		mov	r0, r1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 57


 1630 000a 111C     		mov	r1, r2
 1631 000c 1A1C     		mov	r2, r3
 1632 000e FB1D     		add	r3, r7, #7
 1633 0010 1C70     		strb	r4, [r3]
 1634 0012 BB1D     		add	r3, r7, #6
 1635 0014 1870     		strb	r0, [r3]
 1636 0016 7B1D     		add	r3, r7, #5
 1637 0018 1970     		strb	r1, [r3]
 1638 001a BB1C     		add	r3, r7, #2
 1639 001c 1A80     		strh	r2, [r3]
1544:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC_COU
1545:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posPrev;
1546:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posNext;
1547:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC
1548:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1549:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Helps during centroid calculation */
1550:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_TOTAL_CENTROIDS_BASIC_COUNT)
1551:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		    static uint8 CapSense_1_centroid[3u];
1552:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_TOTAL_CENTROIDS_BASIC_COUNT) */
1553:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                
1554:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)                
1555:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 pos;
1556:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1557:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1558:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 position;
1559:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 numerator;
1560:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         int32 denominator;
1561:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		
1562:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		uint8  *startOfSlider = &CapSense_1_sensorSignal[offset];
 1640              		.loc 1 1562 0
 1641 001e BB1D     		add	r3, r7, #6
 1642 0020 1A78     		ldrb	r2, [r3]
 1643 0022 5A4B     		ldr	r3, .L110
 1644 0024 D318     		add	r3, r2, r3
 1645 0026 BB61     		str	r3, [r7, #24]
1563:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		
1564:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC_COU
1565:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             posPrev = 0u;
 1646              		.loc 1 1565 0
 1647 0028 3B1C     		mov	r3, r7
 1648 002a 1F33     		add	r3, r3, #31
 1649 002c 0022     		mov	r2, #0
 1650 002e 1A70     		strb	r2, [r3]
1566:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC
1567:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****      
1568:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1569:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(type == CapSense_1_TYPE_RADIAL_SLIDER)
1570:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1571:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1572:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1573:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1574:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Copy Signal to the centroid array */
1575:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1576:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                  
1577:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Check borders for ROTARY Slider */
1578:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1579:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 { 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 58


1580:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[count - 1u];
1581:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[1u];
1582:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1583:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1584:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1585:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1586:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[0u];
1587:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1588:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1589:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1590:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1591:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[maximum + 1u];
1592:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1593:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1594:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1595:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1596:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1597:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             else
1598:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1599:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1600:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1601:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_BASIC
1602:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)               
1603:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1604:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if(diplex == 0u)
1605:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1606:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         pos     = maximum;
1607:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1608:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posNext = maximum + 1u; 
1609:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1610:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     else
1611:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1612:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         pos     = diplex[maximum];
1613:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1614:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posNext = diplex[maximum + 1u];
1615:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         count <<= 1u;
1616:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }                    
1617:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #elif (CapSense_1_IS_DIPLEX_SLIDER)
1618:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1619:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     pos     = diplex[maximum];
1620:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1621:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posNext = diplex[maximum + 1u];
1622:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     count <<= 1u;                    
1623:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #else                    
1624:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1625:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (maximum >= 1u)
 1651              		.loc 1 1625 0
 1652 0030 FB1D     		add	r3, r7, #7
 1653 0032 1B78     		ldrb	r3, [r3]
 1654 0034 002B     		cmp	r3, #0
 1655 0036 05D0     		beq	.L101
1626:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1627:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
 1656              		.loc 1 1627 0
 1657 0038 3B1C     		mov	r3, r7
 1658 003a 1F33     		add	r3, r3, #31
 1659 003c FA1D     		add	r2, r7, #7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 59


 1660 003e 1278     		ldrb	r2, [r2]
 1661 0040 013A     		sub	r2, r2, #1
 1662 0042 1A70     		strb	r2, [r3]
 1663              	.L101:
1628:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1629:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posNext = maximum + 1u;
 1664              		.loc 1 1629 0
 1665 0044 3B1C     		mov	r3, r7
 1666 0046 1733     		add	r3, r3, #23
 1667 0048 FA1D     		add	r2, r7, #7
 1668 004a 1278     		ldrb	r2, [r2]
 1669 004c 0132     		add	r2, r2, #1
 1670 004e 1A70     		strb	r2, [r3]
1630:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) */
1631:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         
1632:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Copy Signal to the centroid array */
1633:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER)
1634:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[pos];
1635:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #else
1636:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
 1671              		.loc 1 1636 0
 1672 0050 FB1D     		add	r3, r7, #7
 1673 0052 1B78     		ldrb	r3, [r3]
 1674 0054 BA69     		ldr	r2, [r7, #24]
 1675 0056 D318     		add	r3, r2, r3
 1676 0058 1A78     		ldrb	r2, [r3]
 1677 005a 4D4B     		ldr	r3, .L110+4
 1678 005c 5A70     		strb	r2, [r3, #1]
1637:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1638:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     
1639:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Check borders for LINEAR Slider */
1640:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1679              		.loc 1 1640 0
 1680 005e FB1D     		add	r3, r7, #7
 1681 0060 1B78     		ldrb	r3, [r3]
 1682 0062 002B     		cmp	r3, #0
 1683 0064 0BD1     		bne	.L102
1641:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 { 
1642:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
 1684              		.loc 1 1642 0
 1685 0066 4A4B     		ldr	r3, .L110+4
 1686 0068 0022     		mov	r2, #0
 1687 006a 1A70     		strb	r2, [r3]
1643:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
 1688              		.loc 1 1643 0
 1689 006c 3B1C     		mov	r3, r7
 1690 006e 1733     		add	r3, r3, #23
 1691 0070 1B78     		ldrb	r3, [r3]
 1692 0072 BA69     		ldr	r2, [r7, #24]
 1693 0074 D318     		add	r3, r2, r3
 1694 0076 1A78     		ldrb	r2, [r3]
 1695 0078 454B     		ldr	r3, .L110+4
 1696 007a 9A70     		strb	r2, [r3, #2]
 1697 007c 22E0     		b	.L103
 1698              	.L102:
1644:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1645:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 60


 1699              		.loc 1 1645 0
 1700 007e FB1D     		add	r3, r7, #7
 1701 0080 1A78     		ldrb	r2, [r3]
 1702 0082 7B1D     		add	r3, r7, #5
 1703 0084 1B78     		ldrb	r3, [r3]
 1704 0086 013B     		sub	r3, r3, #1
 1705 0088 9A42     		cmp	r2, r3
 1706 008a 0BD1     		bne	.L104
1646:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1647:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
 1707              		.loc 1 1647 0
 1708 008c 3B1C     		mov	r3, r7
 1709 008e 1F33     		add	r3, r3, #31
 1710 0090 1B78     		ldrb	r3, [r3]
 1711 0092 BA69     		ldr	r2, [r7, #24]
 1712 0094 D318     		add	r3, r2, r3
 1713 0096 1A78     		ldrb	r2, [r3]
 1714 0098 3D4B     		ldr	r3, .L110+4
 1715 009a 1A70     		strb	r2, [r3]
1648:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
 1716              		.loc 1 1648 0
 1717 009c 3C4B     		ldr	r3, .L110+4
 1718 009e 0022     		mov	r2, #0
 1719 00a0 9A70     		strb	r2, [r3, #2]
 1720 00a2 0FE0     		b	.L103
 1721              	.L104:
1649:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1650:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1651:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1652:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
 1722              		.loc 1 1652 0
 1723 00a4 3B1C     		mov	r3, r7
 1724 00a6 1F33     		add	r3, r3, #31
 1725 00a8 1B78     		ldrb	r3, [r3]
 1726 00aa BA69     		ldr	r2, [r7, #24]
 1727 00ac D318     		add	r3, r2, r3
 1728 00ae 1A78     		ldrb	r2, [r3]
 1729 00b0 374B     		ldr	r3, .L110+4
 1730 00b2 1A70     		strb	r2, [r3]
1653:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
 1731              		.loc 1 1653 0
 1732 00b4 3B1C     		mov	r3, r7
 1733 00b6 1733     		add	r3, r3, #23
 1734 00b8 1B78     		ldrb	r3, [r3]
 1735 00ba BA69     		ldr	r2, [r7, #24]
 1736 00bc D318     		add	r3, r2, r3
 1737 00be 1A78     		ldrb	r2, [r3]
 1738 00c0 334B     		ldr	r3, .L110+4
 1739 00c2 9A70     		strb	r2, [r3, #2]
 1740              	.L103:
1654:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1655:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_1_TOTAL_TOUCH_PADS_BAS
1656:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1657:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1658:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1659:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1660:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 61


1661:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1662:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_PREV] > noiseThreshold)
 1741              		.loc 1 1662 0
 1742 00c4 324B     		ldr	r3, .L110+4
 1743 00c6 1B78     		ldrb	r3, [r3]
 1744 00c8 3A1C     		mov	r2, r7
 1745 00ca 3032     		add	r2, r2, #48
 1746 00cc 1278     		ldrb	r2, [r2]
 1747 00ce 9A42     		cmp	r2, r3
 1748 00d0 09D2     		bcs	.L105
1663:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1664:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] -= noiseThreshold;
 1749              		.loc 1 1664 0
 1750 00d2 2F4B     		ldr	r3, .L110+4
 1751 00d4 1A78     		ldrb	r2, [r3]
 1752 00d6 3B1C     		mov	r3, r7
 1753 00d8 3033     		add	r3, r3, #48
 1754 00da 1B78     		ldrb	r3, [r3]
 1755 00dc D31A     		sub	r3, r2, r3
 1756 00de DAB2     		uxtb	r2, r3
 1757 00e0 2B4B     		ldr	r3, .L110+4
 1758 00e2 1A70     		strb	r2, [r3]
 1759 00e4 02E0     		b	.L106
 1760              	.L105:
1665:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1666:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
1667:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1668:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
 1761              		.loc 1 1668 0
 1762 00e6 2A4B     		ldr	r3, .L110+4
 1763 00e8 0022     		mov	r2, #0
 1764 00ea 1A70     		strb	r2, [r3]
 1765              	.L106:
1669:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1670:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1671:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1672:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         CapSense_1_centroid[CapSense_1_POS] -= noiseThreshold;
 1766              		.loc 1 1672 0
 1767 00ec 284B     		ldr	r3, .L110+4
 1768 00ee 5A78     		ldrb	r2, [r3, #1]
 1769 00f0 3B1C     		mov	r3, r7
 1770 00f2 3033     		add	r3, r3, #48
 1771 00f4 1B78     		ldrb	r3, [r3]
 1772 00f6 D31A     		sub	r3, r2, r3
 1773 00f8 DAB2     		uxtb	r2, r3
 1774 00fa 254B     		ldr	r3, .L110+4
 1775 00fc 5A70     		strb	r2, [r3, #1]
1673:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1674:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1675:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_NEXT] > noiseThreshold)
 1776              		.loc 1 1675 0
 1777 00fe 244B     		ldr	r3, .L110+4
 1778 0100 9B78     		ldrb	r3, [r3, #2]
 1779 0102 3A1C     		mov	r2, r7
 1780 0104 3032     		add	r2, r2, #48
 1781 0106 1278     		ldrb	r2, [r2]
 1782 0108 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 62


 1783 010a 09D2     		bcs	.L107
1676:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1677:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] -= noiseThreshold;
 1784              		.loc 1 1677 0
 1785 010c 204B     		ldr	r3, .L110+4
 1786 010e 9A78     		ldrb	r2, [r3, #2]
 1787 0110 3B1C     		mov	r3, r7
 1788 0112 3033     		add	r3, r3, #48
 1789 0114 1B78     		ldrb	r3, [r3]
 1790 0116 D31A     		sub	r3, r2, r3
 1791 0118 DAB2     		uxtb	r2, r3
 1792 011a 1D4B     		ldr	r3, .L110+4
 1793 011c 9A70     		strb	r2, [r3, #2]
 1794 011e 02E0     		b	.L108
 1795              	.L107:
1678:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1679:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
1680:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1681:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
 1796              		.loc 1 1681 0
 1797 0120 1B4B     		ldr	r3, .L110+4
 1798 0122 0022     		mov	r2, #0
 1799 0124 9A70     		strb	r2, [r3, #2]
 1800              	.L108:
1682:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1683:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1684:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1685:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Si+1 - Si-1 */
1686:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
 1801              		.loc 1 1686 0
 1802 0126 1A4B     		ldr	r3, .L110+4
 1803 0128 9B78     		ldrb	r3, [r3, #2]
 1804 012a 1A1C     		mov	r2, r3
1687:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
 1805              		.loc 1 1687 0
 1806 012c 184B     		ldr	r3, .L110+4
 1807 012e 1B78     		ldrb	r3, [r3]
1686:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
 1808              		.loc 1 1686 0
 1809 0130 D31A     		sub	r3, r2, r3
 1810 0132 3B61     		str	r3, [r7, #16]
1688:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1689:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Si+1 + Si + Si-1 */
1690:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
 1811              		.loc 1 1690 0
 1812 0134 164B     		ldr	r3, .L110+4
 1813 0136 1B78     		ldrb	r3, [r3]
 1814 0138 1A1C     		mov	r2, r3
1691:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
 1815              		.loc 1 1691 0
 1816 013a 154B     		ldr	r3, .L110+4
 1817 013c 5B78     		ldrb	r3, [r3, #1]
1690:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
 1818              		.loc 1 1690 0
 1819 013e D218     		add	r2, r2, r3
1692:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS_NEXT];
 1820              		.loc 1 1692 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 63


 1821 0140 134B     		ldr	r3, .L110+4
 1822 0142 9B78     		ldrb	r3, [r3, #2]
1690:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
 1823              		.loc 1 1690 0
 1824 0144 D318     		add	r3, r2, r3
 1825 0146 FB60     		str	r3, [r7, #12]
1693:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1694:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* (numerator/denominator) + maximum */
1695:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1826              		.loc 1 1695 0
 1827 0148 3B69     		ldr	r3, [r7, #16]
 1828 014a 1B02     		lsl	r3, r3, #8
 1829 014c 181C     		mov	r0, r3
 1830 014e F968     		ldr	r1, [r7, #12]
 1831 0150 FFF7FEFF 		bl	__aeabi_idiv
 1832 0154 031C     		mov	r3, r0
 1833 0156 1A1C     		mov	r2, r3
 1834 0158 FB1D     		add	r3, r7, #7
 1835 015a 1B78     		ldrb	r3, [r3]
 1836 015c 1B02     		lsl	r3, r3, #8
 1837 015e D318     		add	r3, r2, r3
 1838 0160 FB60     		str	r3, [r7, #12]
1696:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1697:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1698:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Only required for RADIAL Slider */
1699:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(denominator < 0)
1700:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1701:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1702:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1703:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1704:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1705:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         denominator *= (int16)resolution;
 1839              		.loc 1 1705 0
 1840 0162 BB1C     		add	r3, r7, #2
 1841 0164 1B88     		ldrh	r3, [r3]
 1842 0166 1AB2     		sxth	r2, r3
 1843 0168 FB68     		ldr	r3, [r7, #12]
 1844 016a 5343     		mul	r3, r2
 1845 016c FB60     		str	r3, [r7, #12]
1706:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1707:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Round result and put it to uint8 */
1708:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_1_CENTROID_ROUND_VALUE));
 1846              		.loc 1 1708 0
 1847 016e FB68     		ldr	r3, [r7, #12]
 1848 0170 FE22     		mov	r2, #254
 1849 0172 D201     		lsl	r2, r2, #7
 1850 0174 9B18     		add	r3, r3, r2
 1851 0176 1A0C     		lsr	r2, r3, #16
 1852 0178 3B1C     		mov	r3, r7
 1853 017a 0B33     		add	r3, r3, #11
 1854 017c 1A70     		strb	r2, [r3]
1709:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1710:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (position);
 1855              		.loc 1 1710 0
 1856 017e 3B1C     		mov	r3, r7
 1857 0180 0B33     		add	r3, r3, #11
 1858 0182 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 64


1711:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }    
 1859              		.loc 1 1711 0
 1860 0184 181C     		mov	r0, r3
 1861 0186 BD46     		mov	sp, r7
 1862 0188 09B0     		add	sp, sp, #36
 1863              		@ sp needed
 1864 018a 90BD     		pop	{r4, r7, pc}
 1865              	.L111:
 1866              		.align	2
 1867              	.L110:
 1868 018c 00000000 		.word	CapSense_1_sensorSignal
 1869 0190 24000000 		.word	CapSense_1_centroid.5327
 1870              		.cfi_endproc
 1871              	.LFE55:
 1872              		.size	CapSense_1_CalcCentroid, .-CapSense_1_CalcCentroid
 1873              		.section	.text.CapSense_1_GetCentroidPos,"ax",%progbits
 1874              		.align	2
 1875              		.global	CapSense_1_GetCentroidPos
 1876              		.code	16
 1877              		.thumb_func
 1878              		.type	CapSense_1_GetCentroidPos, %function
 1879              	CapSense_1_GetCentroidPos:
 1880              	.LFB56:
1712:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_CENTROIDS_BASIC_COUNT) */
1713:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1714:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1715:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if((CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1716:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1717:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetCentroidPos
1718:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1719:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1720:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1721:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1722:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1723:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1724:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  result if enabled.
1725:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1726:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
1727:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1728:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1729:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  #define CapSense_1_"widget_name"__LS           5
1730:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * 
1731:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
1732:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a position value of the linear slider.
1733:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1734:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
1735:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
1736:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1737:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
1738:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1739:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1740:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1741:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1742:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1743:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1744:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1745:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Note:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 65


1746:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1747:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1748:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1749:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1750:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1751:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_GetCentroidPos(uint32 widget)
1752:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 1881              		.loc 1 1752 0
 1882              		.cfi_startproc
 1883 0000 90B5     		push	{r4, r7, lr}
 1884              		.cfi_def_cfa_offset 12
 1885              		.cfi_offset 4, -12
 1886              		.cfi_offset 7, -8
 1887              		.cfi_offset 14, -4
 1888 0002 87B0     		sub	sp, sp, #28
 1889              		.cfi_def_cfa_offset 40
 1890 0004 02AF     		add	r7, sp, #8
 1891              		.cfi_def_cfa 7, 32
 1892 0006 7860     		str	r0, [r7, #4]
1753:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1754:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             const uint8 *diplex;
1755:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1756:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 
1757:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1758:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posIndex;
1759:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
 1893              		.loc 1 1759 0
 1894 0008 3B1C     		mov	r3, r7
 1895 000a 0D33     		add	r3, r3, #13
 1896 000c 4A49     		ldr	r1, .L118
 1897 000e 7A68     		ldr	r2, [r7, #4]
 1898 0010 8A18     		add	r2, r1, r2
 1899 0012 1278     		ldrb	r2, [r2]
 1900 0014 1A70     		strb	r2, [r3]
1760:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];  
 1901              		.loc 1 1760 0
 1902 0016 3B1C     		mov	r3, r7
 1903 0018 0C33     		add	r3, r3, #12
 1904 001a 0822     		mov	r2, #8
 1905 001c 1A70     		strb	r2, [r3]
1761:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1762:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1763:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1764:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1765:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 tempPos;
1766:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1767:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK
1768:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                */
1769:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1770:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 maximum;
1771:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 position;
1772:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
 1906              		.loc 1 1772 0
 1907 001e 3B1C     		mov	r3, r7
 1908 0020 0B33     		add	r3, r3, #11
 1909 0022 0022     		mov	r2, #0
 1910 0024 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 66


1773:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
 1911              		.loc 1 1773 0
 1912 0026 3B1C     		mov	r3, r7
 1913 0028 0A33     		add	r3, r3, #10
 1914 002a 0522     		mov	r2, #5
 1915 002c 1A70     		strb	r2, [r3]
1774:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         
1775:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1776:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(widget < CapSense_1_TOTAL_DIPLEXED_SLIDERS_COUNT)
1777:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1778:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 maximum = CapSense_1_diplexTable[widget];
1779:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 diplex = &CapSense_1_diplexTable[maximum];
1780:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1781:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             else
1782:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
1783:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 diplex = 0u;
1784:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
1785:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1786:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1787:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		/* Find Maximum within centroid */      
1788:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#if (CapSense_1_IS_DIPLEX_SLIDER)        
1789:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			maximum = CapSense_1_FindMaximum(offset, count, (uint8)CapSense_1_fingerThreshold[widget], diple
1790:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#else
1791:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			maximum = CapSense_1_FindMaximum(offset, count, (uint8)CapSense_1_fingerThreshold[widget]);
 1916              		.loc 1 1791 0
 1917 002e 6423     		mov	r3, #100
 1918 0030 3C1C     		mov	r4, r7
 1919 0032 0934     		add	r4, r4, #9
 1920 0034 3A1C     		mov	r2, r7
 1921 0036 0B32     		add	r2, r2, #11
 1922 0038 1178     		ldrb	r1, [r2]
 1923 003a 3A1C     		mov	r2, r7
 1924 003c 0A32     		add	r2, r2, #10
 1925 003e 1278     		ldrb	r2, [r2]
 1926 0040 081C     		mov	r0, r1
 1927 0042 111C     		mov	r1, r2
 1928 0044 1A1C     		mov	r2, r3
 1929 0046 FFF7FEFF 		bl	CapSense_1_FindMaximum
 1930 004a 031C     		mov	r3, r0
 1931 004c 2370     		strb	r3, [r4]
1792:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1793:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1794:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
 1932              		.loc 1 1794 0
 1933 004e 3B1C     		mov	r3, r7
 1934 0050 0933     		add	r3, r3, #9
 1935 0052 1B78     		ldrb	r3, [r3]
 1936 0054 FF2B     		cmp	r3, #255
 1937 0056 57D0     		beq	.L113
1795:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1796:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Calculate centroid */
1797:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
 1938              		.loc 1 1797 0
 1939 0058 FF23     		mov	r3, #255
 1940 005a 9B01     		lsl	r3, r3, #6
 1941 005c 1424     		mov	r4, #20
 1942 005e 3A1C     		mov	r2, r7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 67


 1943 0060 0932     		add	r2, r2, #9
 1944 0062 1078     		ldrb	r0, [r2]
 1945 0064 3A1C     		mov	r2, r7
 1946 0066 0B32     		add	r2, r2, #11
 1947 0068 1178     		ldrb	r1, [r2]
 1948 006a 3A1C     		mov	r2, r7
 1949 006c 0A32     		add	r2, r2, #10
 1950 006e 1278     		ldrb	r2, [r2]
 1951 0070 0094     		str	r4, [sp]
 1952 0072 FFF7FEFF 		bl	CapSense_1_CalcCentroid
 1953 0076 031C     		mov	r3, r0
 1954 0078 1A1C     		mov	r2, r3
 1955 007a 3B1C     		mov	r3, r7
 1956 007c 0E33     		add	r3, r3, #14
 1957 007e 1A80     		strh	r2, [r3]
1798:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1799:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1800:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1801:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1802:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
 1958              		.loc 1 1802 0
 1959 0080 3B1C     		mov	r3, r7
 1960 0082 0C33     		add	r3, r3, #12
 1961 0084 1A78     		ldrb	r2, [r3]
 1962 0086 1F23     		mov	r3, #31
 1963 0088 1340     		and	r3, r2
 1964 008a 4ED0     		beq	.L116
1803:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1804:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate position to store filters data */
1805:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 1965              		.loc 1 1805 0
 1966 008c 3B1C     		mov	r3, r7
 1967 008e 0833     		add	r3, r3, #8
 1968 0090 3A1C     		mov	r2, r7
 1969 0092 0D32     		add	r2, r2, #13
 1970 0094 1278     		ldrb	r2, [r2]
 1971 0096 0132     		add	r2, r2, #1
 1972 0098 1A70     		strb	r2, [r3]
1806:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     
1807:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
 1973              		.loc 1 1807 0
 1974 009a 3B1C     		mov	r3, r7
 1975 009c 0D33     		add	r3, r3, #13
 1976 009e 1B78     		ldrb	r3, [r3]
 1977 00a0 254A     		ldr	r2, .L118
 1978 00a2 D35C     		ldrb	r3, [r2, r3]
 1979 00a4 002B     		cmp	r3, #0
 1980 00a6 0FD1     		bne	.L115
1808:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1809:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Init filters */
1810:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
 1981              		.loc 1 1810 0
 1982 00a8 3B1C     		mov	r3, r7
 1983 00aa 0833     		add	r3, r3, #8
 1984 00ac 1B78     		ldrb	r3, [r3]
 1985 00ae 3A1C     		mov	r2, r7
 1986 00b0 0E32     		add	r2, r2, #14
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 68


 1987 00b2 1288     		ldrh	r2, [r2]
 1988 00b4 D1B2     		uxtb	r1, r2
 1989 00b6 204A     		ldr	r2, .L118
 1990 00b8 D154     		strb	r1, [r2, r3]
1811:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1812:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1813:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1814:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1815:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1816:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1817:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1818:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1819:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1820:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1821:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1822:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1823:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1824:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1825:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1826:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         
1827:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
 1991              		.loc 1 1827 0
 1992 00ba 3B1C     		mov	r3, r7
 1993 00bc 0D33     		add	r3, r3, #13
 1994 00be 1B78     		ldrb	r3, [r3]
 1995 00c0 1D4A     		ldr	r2, .L118
 1996 00c2 0121     		mov	r1, #1
 1997 00c4 D154     		strb	r1, [r2, r3]
 1998 00c6 30E0     		b	.L116
 1999              	.L115:
1828:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1829:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     else
1830:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1831:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Do filtering */
1832:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1833:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1834:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1835:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1836:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1837:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1838:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1839:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
1840:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1841:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1842:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1843:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /*(0u != (CapSense_1_MEDIAN_FILTER &
1844:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *         CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1845:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1846:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1847:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if(0u!=(CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1848:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) 
1849:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1850:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1851:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
1852:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1853:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1854:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]=CapSense_1_posFiltersData[po
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 69


1855:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1856:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1857:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1858:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1859:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1860:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1861:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1862:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER)) 
1863:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1864:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1865:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1866:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1867:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1868:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1869:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1870:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1871:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1872:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1873:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
 2000              		.loc 1 1873 0
 2001 00c8 3B1C     		mov	r3, r7
 2002 00ca 0C33     		add	r3, r3, #12
 2003 00cc 1A78     		ldrb	r2, [r3]
 2004 00ce 0823     		mov	r3, #8
 2005 00d0 1340     		and	r3, r2
 2006 00d2 2AD0     		beq	.L116
1874:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1875:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1876:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
 2007              		.loc 1 1876 0
 2008 00d4 3B1C     		mov	r3, r7
 2009 00d6 0833     		add	r3, r3, #8
 2010 00d8 1B78     		ldrb	r3, [r3]
 2011 00da 174A     		ldr	r2, .L118
 2012 00dc D35C     		ldrb	r3, [r2, r3]
1875:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
 2013              		.loc 1 1875 0
 2014 00de 3C1C     		mov	r4, r7
 2015 00e0 0E34     		add	r4, r4, #14
 2016 00e2 3A1C     		mov	r2, r7
 2017 00e4 0E32     		add	r2, r2, #14
 2018 00e6 1288     		ldrh	r2, [r2]
 2019 00e8 101C     		mov	r0, r2
 2020 00ea 191C     		mov	r1, r3
 2021 00ec FFF7FEFF 		bl	CapSense_1_IIR4Filter
 2022 00f0 031C     		mov	r3, r0
 2023 00f2 2380     		strh	r3, [r4]
1877:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
 2024              		.loc 1 1877 0
 2025 00f4 3B1C     		mov	r3, r7
 2026 00f6 0833     		add	r3, r3, #8
 2027 00f8 1B78     		ldrb	r3, [r3]
 2028 00fa 3A1C     		mov	r2, r7
 2029 00fc 0E32     		add	r2, r2, #14
 2030 00fe 1288     		ldrh	r2, [r2]
 2031 0100 D1B2     		uxtb	r1, r2
 2032 0102 0D4A     		ldr	r2, .L118
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 70


 2033 0104 D154     		strb	r1, [r2, r3]
 2034 0106 10E0     		b	.L116
 2035              	.L113:
1878:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }                                
1879:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1880:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1881:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1882:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1883:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1884:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1885:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
1886:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
1887:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1888:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1889:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
1890:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1891:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1892:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
1893:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
1894:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1895:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1896:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1897:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
1898:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
1899:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1900:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Maximum wasn't found */
1901:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             position = 0xFFFFu;
 2036              		.loc 1 1901 0
 2037 0108 3B1C     		mov	r3, r7
 2038 010a 0E33     		add	r3, r3, #14
 2039 010c 0122     		mov	r2, #1
 2040 010e 5242     		neg	r2, r2
 2041 0110 1A80     		strh	r2, [r3]
1902:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1903:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if(0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1904:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Reset filters */
1905:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
 2042              		.loc 1 1905 0
 2043 0112 3B1C     		mov	r3, r7
 2044 0114 0C33     		add	r3, r3, #12
 2045 0116 1A78     		ldrb	r2, [r3]
 2046 0118 1F23     		mov	r3, #31
 2047 011a 1340     		and	r3, r2
 2048 011c 05D0     		beq	.L116
1906:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
1907:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
 2049              		.loc 1 1907 0
 2050 011e 3B1C     		mov	r3, r7
 2051 0120 0D33     		add	r3, r3, #13
 2052 0122 1B78     		ldrb	r3, [r3]
 2053 0124 044A     		ldr	r2, .L118
 2054 0126 0021     		mov	r1, #0
 2055 0128 D154     		strb	r1, [r2, r3]
 2056              	.L116:
1908:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
1909:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1910:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 71


1911:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1912:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1913:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (position);
 2057              		.loc 1 1913 0
 2058 012a 3B1C     		mov	r3, r7
 2059 012c 0E33     		add	r3, r3, #14
 2060 012e 1B88     		ldrh	r3, [r3]
1914:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 2061              		.loc 1 1914 0
 2062 0130 181C     		mov	r0, r3
 2063 0132 BD46     		mov	sp, r7
 2064 0134 05B0     		add	sp, sp, #20
 2065              		@ sp needed
 2066 0136 90BD     		pop	{r4, r7, pc}
 2067              	.L119:
 2068              		.align	2
 2069              	.L118:
 2070 0138 08000000 		.word	CapSense_1_posFiltersData
 2071              		.cfi_endproc
 2072              	.LFE56:
 2073              		.size	CapSense_1_GetCentroidPos, .-CapSense_1_GetCentroidPos
 2074              		.section	.text.CapSense_1_GetRadialCentroidPos,"ax",%progbits
 2075              		.align	2
 2076              		.global	CapSense_1_GetRadialCentroidPos
 2077              		.code	16
 2078              		.thumb_func
 2079              		.type	CapSense_1_GetRadialCentroidPos, %function
 2080              	CapSense_1_GetRadialCentroidPos:
 2081              	.LFB57:
1915:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ((CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT >
1916:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1917:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1918:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if((CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1919:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
1920:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetRadialCentroidPos
1921:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
1922:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1923:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
1924:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1925:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1926:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1927:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  result if enabled.
1928:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1929:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
1930:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1931:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1932:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  #define CapSense_1_"widget_name"__RS           5
1933:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * 
1934:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
1935:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a position value of the radial slider.
1936:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1937:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
1938:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None.
1939:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
1940:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
1941:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1942:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 72


1943:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1944:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1945:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1946:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1947:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Note:
1948:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1949:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1950:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1951:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1952:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
1953:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
1954:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****      uint16 CapSense_1_GetRadialCentroidPos(uint32 widget)
1955:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 2082              		.loc 1 1955 0
 2083              		.cfi_startproc
 2084 0000 90B5     		push	{r4, r7, lr}
 2085              		.cfi_def_cfa_offset 12
 2086              		.cfi_offset 4, -12
 2087              		.cfi_offset 7, -8
 2088              		.cfi_offset 14, -4
 2089 0002 87B0     		sub	sp, sp, #28
 2090              		.cfi_def_cfa_offset 40
 2091 0004 02AF     		add	r7, sp, #8
 2092              		.cfi_def_cfa 7, 32
 2093 0006 7860     		str	r0, [r7, #4]
1956:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1957:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posIndex;
1958:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1959:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget]; 
1960:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1961:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1962:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1963:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1964:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 tempPos;
1965:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) 
1966:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK
1967:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                */
1968:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1969:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 maximum;
1970:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 position;
1971:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
 2094              		.loc 1 1971 0
 2095 0008 3B1C     		mov	r3, r7
 2096 000a 0D33     		add	r3, r3, #13
 2097 000c 0022     		mov	r2, #0
 2098 000e 1A70     		strb	r2, [r3]
1972:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
 2099              		.loc 1 1972 0
 2100 0010 3B1C     		mov	r3, r7
 2101 0012 0C33     		add	r3, r3, #12
 2102 0014 0522     		mov	r2, #5
 2103 0016 1A70     		strb	r2, [r3]
1973:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1974:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		/* Find Maximum within centroid */      
1975:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#if (CapSense_1_IS_DIPLEX_SLIDER)        
1976:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			maximum = CapSense_1_FindMaximum(offset, count, (uint8)CapSense_1_fingerThreshold[widget], 0u);
1977:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#else
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 73


1978:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 			maximum = CapSense_1_FindMaximum(offset, count, (uint8)CapSense_1_fingerThreshold[widget]);
 2104              		.loc 1 1978 0
 2105 0018 6423     		mov	r3, #100
 2106 001a 3C1C     		mov	r4, r7
 2107 001c 0B34     		add	r4, r4, #11
 2108 001e 3A1C     		mov	r2, r7
 2109 0020 0D32     		add	r2, r2, #13
 2110 0022 1178     		ldrb	r1, [r2]
 2111 0024 3A1C     		mov	r2, r7
 2112 0026 0C32     		add	r2, r2, #12
 2113 0028 1278     		ldrb	r2, [r2]
 2114 002a 081C     		mov	r0, r1
 2115 002c 111C     		mov	r1, r2
 2116 002e 1A1C     		mov	r2, r3
 2117 0030 FFF7FEFF 		bl	CapSense_1_FindMaximum
 2118 0034 031C     		mov	r3, r0
 2119 0036 2370     		strb	r3, [r4]
1979:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 		#endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1980:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
1981:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (maximum != CapSense_1_MAXIMUM_CENTROID)
 2120              		.loc 1 1981 0
 2121 0038 3B1C     		mov	r3, r7
 2122 003a 0B33     		add	r3, r3, #11
 2123 003c 1B78     		ldrb	r3, [r3]
 2124 003e FF2B     		cmp	r3, #255
 2125 0040 14D0     		beq	.L121
1982:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
1983:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Calculate centroid */
1984:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
 2126              		.loc 1 1984 0
 2127 0042 FF23     		mov	r3, #255
 2128 0044 9B01     		lsl	r3, r3, #6
 2129 0046 1424     		mov	r4, #20
 2130 0048 3A1C     		mov	r2, r7
 2131 004a 0B32     		add	r2, r2, #11
 2132 004c 1078     		ldrb	r0, [r2]
 2133 004e 3A1C     		mov	r2, r7
 2134 0050 0D32     		add	r2, r2, #13
 2135 0052 1178     		ldrb	r1, [r2]
 2136 0054 3A1C     		mov	r2, r7
 2137 0056 0C32     		add	r2, r2, #12
 2138 0058 1278     		ldrb	r2, [r2]
 2139 005a 0094     		str	r4, [sp]
 2140 005c FFF7FEFF 		bl	CapSense_1_CalcCentroid
 2141 0060 031C     		mov	r3, r0
 2142 0062 1A1C     		mov	r2, r3
 2143 0064 3B1C     		mov	r3, r7
 2144 0066 0E33     		add	r3, r3, #14
 2145 0068 1A80     		strh	r2, [r3]
 2146 006a 04E0     		b	.L122
 2147              	.L121:
1985:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1986:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
1987:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1988:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1989:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1990:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 74


1991:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Calculate position to store filters data */
1992:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1993:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     
1994:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1995:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
1996:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Init filters */
1997:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1998:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1999:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2000:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
2001:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2002:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2003:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))  || 
2004:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
2005:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2006:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
2007:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2008:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
2009:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2010:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
2011:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2012:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2013:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         
2014:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
2015:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
2016:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     else
2017:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
2018:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Do filtering */
2019:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
2020:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
2021:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2022:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
2023:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
2024:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
2025:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
2026:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = 
2027:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                               CapSense_1_posFilters
2028:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
2029:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2030:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_MEDIAN_FILTER & 
2031:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2032:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2033:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2034:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_AVERAGING_FILTER & \
2035:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2036:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
2037:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2038:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
2039:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position, 
2040:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2041:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2042:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]= CapSense_1_posFiltersData[p
2043:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
2044:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2045:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
2046:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2047:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 75


2048:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2049:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
2050:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
2051:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2052:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
2053:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
2054:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
2055:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2056:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & 
2057:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2058:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2059:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2060:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
2061:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
2062:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2063:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
2064:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
2065:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
2066:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2067:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & 
2068:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2069:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2070:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2071:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
2072:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
2073:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             {
2074:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position, 
2075:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                          CapSense_1_posFiltersData[
2076:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
2077:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             }
2078:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER &
2079:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
2080:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                */
2081:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
2082:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2083:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2084:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2085:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2086:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
2087:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2088:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Maximum was not found */
2089:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             position = 0xFFFFu;
 2148              		.loc 1 2089 0
 2149 006c 3B1C     		mov	r3, r7
 2150 006e 0E33     		add	r3, r3, #14
 2151 0070 0122     		mov	r2, #1
 2152 0072 5242     		neg	r2, r2
 2153 0074 1A80     		strh	r2, [r3]
 2154              	.L122:
2090:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2091:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
2092:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Reset filters */
2093:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
2094:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
2095:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
2096:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2097:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 76


2098:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2099:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2100:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (position);
 2155              		.loc 1 2100 0
 2156 0076 3B1C     		mov	r3, r7
 2157 0078 0E33     		add	r3, r3, #14
 2158 007a 1B88     		ldrh	r3, [r3]
2101:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 2159              		.loc 1 2101 0
 2160 007c 181C     		mov	r0, r3
 2161 007e BD46     		mov	sp, r7
 2162 0080 05B0     		add	sp, sp, #20
 2163              		@ sp needed
 2164 0082 90BD     		pop	{r4, r7, pc}
 2165              		.cfi_endproc
 2166              	.LFE57:
 2167              		.size	CapSense_1_GetRadialCentroidPos, .-CapSense_1_GetRadialCentroidPos
 2168              		.section	.text.CapSense_1_IIR4Filter,"ax",%progbits
 2169              		.align	2
 2170              		.global	CapSense_1_IIR4Filter
 2171              		.code	16
 2172              		.thumb_func
 2173              		.type	CapSense_1_IIR4Filter, %function
 2174              	CapSense_1_IIR4Filter:
 2175              	.LFB58:
2102:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ((CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT >
2103:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2104:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2105:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2106:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2107:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetTouchCentroidPos
2108:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2109:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2110:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2111:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2112:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2113:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2114:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2115:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The position filter is applied to the result if enabled.
2116:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2117:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  customizer.
2118:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2119:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2120:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  Widget number. 
2121:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2122:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  #define CapSense_1_"widget_name"__TP            5
2123:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2124:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2125:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  result of calculation of X and Y position are stored.
2126:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  pos[0u]  - position of X
2127:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  pos[1u]  - position of Y
2128:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2129:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2130:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2131:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2132:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
2133:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 77


2134:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2135:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Side Effects:
2136:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2137:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2138:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *   calculations.
2139:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2140:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2141:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 CapSense_1_GetTouchCentroidPos(uint32 widget, uint16* pos)
2142:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2143:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
2144:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posXIndex;
2145:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posYIndex;
2146:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
2147:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
2148:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
2149:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2150:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
2151:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
2152:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             uint16 tempPos;
2153:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
2154:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
2155:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                */
2156:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2157:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 MaxX;
2158:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 MaxY;
2159:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 posX;
2160:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 posY;
2161:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 touch = 0u;
2162:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
2163:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
2164:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2165:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* Find Maximum within X centroid */
2166:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
2167:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             MaxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u);
2168:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #else
2169:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             MaxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
2170:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
2171:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2172:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (MaxX != CapSense_1_MAXIMUM_CENTROID)
2173:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2174:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             offset = CapSense_1_rawDataIndex[widget + 1u];
2175:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             count = CapSense_1_numberOfSensors[widget + 1u];
2176:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2177:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Find Maximum within Y centroid */
2178:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_DIPLEX_SLIDER)
2179:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 MaxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
2180:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #else
2181:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 MaxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
2182:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
2183:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2184:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if (MaxY != CapSense_1_MAXIMUM_CENTROID)
2185:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2186:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* X and Y maximums are found = true touch */
2187:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 touch = 1u;
2188:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 
2189:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Calculate Y centroid */
2190:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 posY = CapSense_1_CalcCentroid(MaxY, offset, count, 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 78


2191:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget + 1u], CapSense_1_noiseThreshold[widget 
2192:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 
2193:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Calculate X centroid */
2194:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 offset = CapSense_1_rawDataIndex[widget];
2195:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 count = CapSense_1_numberOfSensors[widget];
2196:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 
2197:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 posX = CapSense_1_CalcCentroid(MaxX, offset, count, 
2198:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget],CapSense_1_noiseThreshold[widget]);
2199:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
2200:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
2201:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     /* Check if this TP has enabled filters */
2202:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
2203:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     {
2204:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         /* Calculate position to store filters data */
2205:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2206:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         posYIndex  = CapSense_1_posFiltersData[widget + 1u];
2207:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         
2208:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         if (0u == CapSense_1_posFiltersData[firstTimeIndex])
2209:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
2210:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             /* Init filters */
2211:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posXIndex] = posX;
2212:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posYIndex] = posY;
2213:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2214:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if((0u != (CapSense_1_MEDIAN_FILTER & \
2215:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))|| \
2216:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 (0u != (CapSense_1_AVERAGING_FILTER & \
2217:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
2218:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2219:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
2220:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
2221:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2222:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = posX;
2223:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = posY;
2224:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2225:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
2226:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
2227:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *    (0u != (CapSense_1_AVERAGING_FILTER & \
2228:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *            CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
2229:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2230:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             
2231:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[firstTimeIndex] = 1u;
2232:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
2233:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         else
2234:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         {
2235:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             /* Do filtering */
2236:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
2237:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
2238:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2239:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     tempPos = posX;
2240:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_MedianFilter(posX,
2241:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
2242:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
2243:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
2244:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
2245:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
2246:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     
2247:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     tempPos = posY;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 79


2248:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_MedianFilter(posY,
2249:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2250:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2251:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
2252:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
2253:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
2254:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2255:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 
2256:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_MEDIAN_FILTER & \
2257:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
2258:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2259:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2260:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if(0u !=(CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTE
2261:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
2262:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2263:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     tempPos = posX;
2264:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_AveragingFilter(posX,
2265:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2266:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
2267:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
2268:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
2269:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
2270:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     
2271:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     tempPos = posY;
2272:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_AveragingFilter(posY, 
2273:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
2274:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
2275:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
2276:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
2277:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
2278:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2279:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2280:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
2281:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
2282:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2283:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2284:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
2285:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
2286:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2287:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR2Filter(posX, 
2288:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                            CapSense_1_posFiltersDat
2289:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
2290:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     
2291:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR2Filter(posY, 
2292:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
2293:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
2294:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2295:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 
2296:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR2_FILTER & \
2297:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
2298:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2299:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2300:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
2301:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
2302:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 {
2303:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR4Filter((uint16)posX,
2304:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 80


2305:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
2306:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2307:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR4Filter((uint16)posY,
2308:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
2309:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
2310:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 }
2311:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 
2312:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR4_FILTER & \
2313:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
2314:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2315:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2316:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
2317:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
2318:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     {
2319:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         posX = (uint8) CapSense_1_JitterFilter(posX, 
2320:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
2321:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posXIndex] = posX;
2322:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         
2323:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         posY = (uint8) CapSense_1_JitterFilter(posY, 
2324:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
2325:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posYIndex] = posY;
2326:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                     }
2327:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_JITTER_FILTER & \
2328:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
2329:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                                    */
2330:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                         }
2331:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     }
2332:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
2333:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2334:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Save positions */
2335:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 pos[0u] = posX;
2336:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 pos[1u] = posY;
2337:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2338:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2339:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2340:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
2341:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if(touch == 0u)
2342:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2343:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 /* Reset filters */
2344:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if ((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
2345:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
2346:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
2347:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2348:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2349:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
2350:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2351:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (touch);
2352:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2353:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2354:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2355:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2356:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)) || \
2357:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER)) || \
2358:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       ((CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)) )
2359:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2360:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_MedianFilter
2361:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 81


2362:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2363:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2364:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the Median filter function. 
2365:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
2366:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  median value.
2367:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2368:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2369:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2370:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2371:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
2372:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2373:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2374:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2375:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2376:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
2377:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None.
2378:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2379:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
2380:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
2381:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
2382:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2383:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2384:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2385:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 tmp;
2386:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2387:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (x1 > x2)
2388:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2389:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             tmp = x2;
2390:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             x2 = x1;
2391:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             x1 = tmp;
2392:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2393:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2394:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (x2 > x3)
2395:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2396:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             x2 = x3;
2397:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2398:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2399:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
2400:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2401:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)) || \
2402:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER)) || \
2403:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       ((CapSense_1_TUNING_METHOD == CapSense_1__TUNING_AUTO)) ) */
2404:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2405:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2406:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)) || \
2407:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER)) )
2408:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2409:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_AveragingFilter
2410:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2411:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2412:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2413:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the Averaging filter function.
2414:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2415:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  reports the averaging value.
2416:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2417:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2418:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 82


2419:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2420:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
2421:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2422:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2423:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2424:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2425:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
2426:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None.
2427:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2428:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
2429:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
2430:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
2431:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2432:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2433:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2434:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2435:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2436:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
2437:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2438:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) || \
2439:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) ) */
2440:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2441:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2442:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)) || \
2443:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER)) )
2444:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2445:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR2Filter
2446:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2447:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2448:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2449:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2450:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2451:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2452:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2453:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2454:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2455:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2456:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2457:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2458:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
2459:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None.
2460:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2461:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
2462:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
2463:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
2464:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2465:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR2Filter(uint16 x1, uint16 x2)
2466:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2467:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp;
2468:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2469:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2470:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2471:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp >>= 1u;
2472:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
2473:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
2474:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2475:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)) || \
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 83


2476:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****        *    (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER)) )
2477:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****        */
2478:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2479:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2480:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)) || \
2481:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER)) )
2482:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2483:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR4Filter
2484:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2485:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2486:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2487:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2488:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2489:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2490:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2491:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2492:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2493:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2494:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns a filtered value.
2495:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2496:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
2497:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None.
2498:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2499:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
2500:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
2501:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
2502:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2503:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR4Filter(uint16 x1, uint16 x2)
2504:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
 2176              		.loc 1 2504 0
 2177              		.cfi_startproc
 2178 0000 80B5     		push	{r7, lr}
 2179              		.cfi_def_cfa_offset 8
 2180              		.cfi_offset 7, -8
 2181              		.cfi_offset 14, -4
 2182 0002 84B0     		sub	sp, sp, #16
 2183              		.cfi_def_cfa_offset 24
 2184 0004 00AF     		add	r7, sp, #0
 2185              		.cfi_def_cfa_register 7
 2186 0006 0A1C     		mov	r2, r1
 2187 0008 BB1D     		add	r3, r7, #6
 2188 000a 011C     		add	r1, r0, #0
 2189 000c 1980     		strh	r1, [r3]
 2190 000e 3B1D     		add	r3, r7, #4
 2191 0010 1A80     		strh	r2, [r3]
2505:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp;
2506:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2507:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2508:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2192              		.loc 1 2508 0
 2193 0012 BB1D     		add	r3, r7, #6
 2194 0014 1A88     		ldrh	r2, [r3]
 2195 0016 3B1D     		add	r3, r7, #4
 2196 0018 1B88     		ldrh	r3, [r3]
 2197 001a D318     		add	r3, r2, r3
 2198 001c FB60     		str	r3, [r7, #12]
2509:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp += ((uint32)x2 << 1u);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 84


 2199              		.loc 1 2509 0
 2200 001e 3B1D     		add	r3, r7, #4
 2201 0020 1B88     		ldrh	r3, [r3]
 2202 0022 5B00     		lsl	r3, r3, #1
 2203 0024 FA68     		ldr	r2, [r7, #12]
 2204 0026 D318     		add	r3, r2, r3
 2205 0028 FB60     		str	r3, [r7, #12]
2510:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp >>= 2u;
 2206              		.loc 1 2510 0
 2207 002a FB68     		ldr	r3, [r7, #12]
 2208 002c 9B08     		lsr	r3, r3, #2
 2209 002e FB60     		str	r3, [r7, #12]
2511:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2512:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
 2210              		.loc 1 2512 0
 2211 0030 FB68     		ldr	r3, [r7, #12]
 2212 0032 9BB2     		uxth	r3, r3
2513:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
 2213              		.loc 1 2513 0
 2214 0034 181C     		mov	r0, r3
 2215 0036 BD46     		mov	sp, r7
 2216 0038 04B0     		add	sp, sp, #16
 2217              		@ sp needed
 2218 003a 80BD     		pop	{r7, pc}
 2219              		.cfi_endproc
 2220              	.LFE58:
 2221              		.size	CapSense_1_IIR4Filter, .-CapSense_1_IIR4Filter
 2222              		.section	.text.CapSense_1_GetWidgetNumber,"ax",%progbits
 2223              		.align	2
 2224              		.global	CapSense_1_GetWidgetNumber
 2225              		.code	16
 2226              		.thumb_func
 2227              		.type	CapSense_1_GetWidgetNumber, %function
 2228              	CapSense_1_GetWidgetNumber:
 2229              	.LFB59:
2514:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)) || \
2515:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****        *    (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER)) )
2516:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****        */
2517:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2518:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2519:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)) || \
2520:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_JITTER_FILTER)) || \
2521:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****       (0u != (CapSense_1_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_1_JITTER_FILTER)))  
2522:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2523:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: uint16 CapSense_1_JitterFilter
2524:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2525:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2526:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2527:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the Jitter filter function.
2528:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2529:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2530:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2531:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2532:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2533:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2534:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2535:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 85


2536:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
2537:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None.
2538:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2539:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
2540:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
2541:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
2542:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2543:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_JitterFilter(uint16 x1, uint16 x2)
2544:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2545:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (x1 > x2)
2546:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2547:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             x1--;
2548:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2549:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         else
2550:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2551:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if (x1 < x2)
2552:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2553:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 x1++;
2554:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2555:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2556:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
2557:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return x1;
2558:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2559:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* ( (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)) || \
2560:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****        *    (0u != (CapSense_1_POS_FILTERS_MASK & CapSense_1_JITTER_FILTER)) )
2561:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	   *    (0u != (CapSense_1_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_1_JITTER_FILTER)) )
2562:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****        */
2563:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2564:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2565:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER))
2566:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2567:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR8Filter
2568:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2569:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2570:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2571:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2572:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Only applies for raw data.
2573:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2574:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2575:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2576:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2577:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2578:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2579:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2580:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2581:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
2582:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None.
2583:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2584:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
2585:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
2586:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
2587:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2588:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR8Filter(uint16 x1, uint16 x2)
2589:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2590:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp;
2591:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2592:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 86


2593:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp = (uint32)x1;
2594:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2595:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp >>= 3u;
2596:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     
2597:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
2598:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2599:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)) */
2600:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2601:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2602:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (0u != (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
2603:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2604:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR16Filter
2605:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2606:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2607:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2608:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2609:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Only applies for raw data.
2610:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2611:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
2612:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x1:  Current value.
2613:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  x2:  Previous value.
2614:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2615:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2616:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns filtered value.
2617:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2618:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
2619:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None.
2620:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2621:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
2622:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
2623:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
2624:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2625:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR16Filter(uint16 x1, uint16 x2)
2626:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2627:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 tmp;
2628:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2629:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2630:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp = (uint32)x1;
2631:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2632:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         tmp >>= 4u;
2633:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         
2634:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return ((uint16) tmp);
2635:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2636:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER) */
2637:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2638:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2639:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #if (0u != (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT))
2640:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2641:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     /*******************************************************************************
2642:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetMatrixButtonPos
2643:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     ********************************************************************************
2644:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2645:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Summary:
2646:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2647:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  button widget.
2648:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2649:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 87


2650:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  widget:  widget number;
2651:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be 
2652:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *           stored:
2653:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *           pos[0] - column position;
2654:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *           pos[1] - raw position.
2655:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *
2656:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     * Return:
2657:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2658:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *  cases.
2659:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2660:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Global Variables:
2661:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2662:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  CapSense_1_sensorSignal[ ] - used to store a difference between the current value of 
2663:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  raw data and a previous value of the baseline.
2664:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*
2665:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* Side Effects:
2666:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	*  None
2667:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	* 
2668:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     uint32 CapSense_1_GetMatrixButtonPos(uint32 widget, uint8* pos)
2670:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     {
2671:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 i;
2672:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint32 retVal = 0u;
2673:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 row_sig_max = 0u;
2674:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint16 col_sig_max = 0u;
2675:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 row_ind = 0u;
2676:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         uint8 col_ind = 0u;
2677:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2678:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(widget) == 1u)
2679:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         {
2680:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Find row number with maximal signal value */
2681:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             for(i = CapSense_1_rawDataIndex[widget]; i < (CapSense_1_rawDataIndex[widget] + \
2682:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                  CapSense_1_numberOfSensors[widget]); i++)
2683:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2684:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (CapSense_1_sensorSignal[i] > col_sig_max)
2685:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
2686:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     col_ind = i;
2687:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     col_sig_max = CapSense_1_sensorSignal[i];
2688:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2689:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2690:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2691:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             /* Find row number with maximal signal value */
2692:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             for(i = CapSense_1_rawDataIndex[widget+1u]; i < (CapSense_1_rawDataIndex[widget+1u] + \
2693:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                  CapSense_1_numberOfSensors[widget+1u]); i++)
2694:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2695:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 if (CapSense_1_sensorSignal[i] > row_sig_max)
2696:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 {
2697:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     row_ind = i;
2698:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                     row_sig_max = CapSense_1_sensorSignal[i];
2699:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 }
2700:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2701:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2702:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             if((col_sig_max >= CapSense_1_fingerThreshold[widget]) && \
2703:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                (row_sig_max >= CapSense_1_fingerThreshold[widget+1u]))
2704:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             {
2705:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 pos[0u] = col_ind - CapSense_1_rawDataIndex[widget];
2706:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 pos[1u] = row_ind - CapSense_1_rawDataIndex[widget+1u];
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 88


2707:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****                 retVal = 1u;
2708:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****             }
2709:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         }
2710:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****         return (retVal);
2711:.\Generated_Source\PSoC4/CapSense_1_CSHL.c ****     }
2712:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2713:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** #endif /* (0u != (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) */
2714:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2715:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
2716:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetWidgetNumber
2717:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
2718:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2719:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
2720:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the widget number for the sensor.
2721:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2722:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
2723:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor: sensor index. The value of index can be 
2724:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  from 0 to (CapSense_1_TOTAL_SENSOR_COUNT-1).
2725:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2726:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
2727:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the widget number for the sensor. 
2728:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2729:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
2730:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_widgetNumber[]  - stores widget numbers.
2731:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
2732:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
2733:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
2734:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2735:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
2736:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint32 CapSense_1_GetWidgetNumber(uint32 sensor)
2737:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 2230              		.loc 1 2737 0
 2231              		.cfi_startproc
 2232 0000 80B5     		push	{r7, lr}
 2233              		.cfi_def_cfa_offset 8
 2234              		.cfi_offset 7, -8
 2235              		.cfi_offset 14, -4
 2236 0002 82B0     		sub	sp, sp, #8
 2237              		.cfi_def_cfa_offset 16
 2238 0004 00AF     		add	r7, sp, #0
 2239              		.cfi_def_cfa_register 7
 2240 0006 7860     		str	r0, [r7, #4]
2738:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return((uint32)CapSense_1_widgetNumber[sensor]);
 2241              		.loc 1 2738 0
 2242 0008 034A     		ldr	r2, .L128
 2243 000a 7B68     		ldr	r3, [r7, #4]
 2244 000c D318     		add	r3, r2, r3
 2245 000e 1B78     		ldrb	r3, [r3]
2739:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 2246              		.loc 1 2739 0
 2247 0010 181C     		mov	r0, r3
 2248 0012 BD46     		mov	sp, r7
 2249 0014 02B0     		add	sp, sp, #8
 2250              		@ sp needed
 2251 0016 80BD     		pop	{r7, pc}
 2252              	.L129:
 2253              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 89


 2254              	.L128:
 2255 0018 00000000 		.word	CapSense_1_widgetNumber
 2256              		.cfi_endproc
 2257              	.LFE59:
 2258              		.size	CapSense_1_GetWidgetNumber, .-CapSense_1_GetWidgetNumber
 2259              		.section	.text.CapSense_1_GetLowBaselineReset,"ax",%progbits
 2260              		.align	2
 2261              		.global	CapSense_1_GetLowBaselineReset
 2262              		.code	16
 2263              		.thumb_func
 2264              		.type	CapSense_1_GetLowBaselineReset, %function
 2265              	CapSense_1_GetLowBaselineReset:
 2266              	.LFB60:
2740:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2741:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
2742:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetLowBaselineReset
2743:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
2744:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
2746:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2747:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2748:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
2749:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor: sensor index. The value of index can be 
2750:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  from 0 to (CapSense_1_TOTAL_SENSOR_COUNT-1).
2751:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2752:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
2753:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  low baseline reset threshold value a sensor.
2754:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2755:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
2756:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_lowBaselineReset[]  - stores low baseline reset values.
2757:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
2758:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
2759:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
2760:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2761:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
2762:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetLowBaselineReset(uint32 sensor)
2763:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 2267              		.loc 1 2763 0
 2268              		.cfi_startproc
 2269 0000 80B5     		push	{r7, lr}
 2270              		.cfi_def_cfa_offset 8
 2271              		.cfi_offset 7, -8
 2272              		.cfi_offset 14, -4
 2273 0002 82B0     		sub	sp, sp, #8
 2274              		.cfi_def_cfa_offset 16
 2275 0004 00AF     		add	r7, sp, #0
 2276              		.cfi_def_cfa_register 7
 2277 0006 7860     		str	r0, [r7, #4]
2764:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return(CapSense_1_lowBaselineReset[sensor]);
 2278              		.loc 1 2764 0
 2279 0008 034A     		ldr	r2, .L132
 2280 000a 7B68     		ldr	r3, [r7, #4]
 2281 000c D318     		add	r3, r2, r3
 2282 000e 1B78     		ldrb	r3, [r3]
2765:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 2283              		.loc 1 2765 0
 2284 0010 181C     		mov	r0, r3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 90


 2285 0012 BD46     		mov	sp, r7
 2286 0014 02B0     		add	sp, sp, #8
 2287              		@ sp needed
 2288 0016 80BD     		pop	{r7, pc}
 2289              	.L133:
 2290              		.align	2
 2291              	.L132:
 2292 0018 00000000 		.word	CapSense_1_lowBaselineReset
 2293              		.cfi_endproc
 2294              	.LFE60:
 2295              		.size	CapSense_1_GetLowBaselineReset, .-CapSense_1_GetLowBaselineReset
 2296              		.section	.text.CapSense_1_GetDebounce,"ax",%progbits
 2297              		.align	2
 2298              		.global	CapSense_1_GetDebounce
 2299              		.code	16
 2300              		.thumb_func
 2301              		.type	CapSense_1_GetDebounce, %function
 2302              	CapSense_1_GetDebounce:
 2303              	.LFB61:
2766:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 
2767:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** /*******************************************************************************
2768:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Function Name: CapSense_1_GetDebounce
2769:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** ********************************************************************************
2770:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Summary:
2772:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  This API returns a debounce value.
2773:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2774:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Parameters:
2775:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  sensor: sensor index. The value of index can be 
2776:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  from 0 to (CapSense_1_TOTAL_SENSOR_COUNT-1).
2777:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2778:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Return:
2779:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  Debounce value 
2780:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2781:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Global Variables:
2782:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  CapSense_1_debounce[]  - stores the debounce value.
2783:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * 
2784:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** * Side Effects:
2785:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *  None
2786:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *
2787:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** *******************************************************************************/
2788:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** uint8 CapSense_1_GetDebounce(uint32 widget)
2789:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** {
 2304              		.loc 1 2789 0
 2305              		.cfi_startproc
 2306 0000 80B5     		push	{r7, lr}
 2307              		.cfi_def_cfa_offset 8
 2308              		.cfi_offset 7, -8
 2309              		.cfi_offset 14, -4
 2310 0002 82B0     		sub	sp, sp, #8
 2311              		.cfi_def_cfa_offset 16
 2312 0004 00AF     		add	r7, sp, #0
 2313              		.cfi_def_cfa_register 7
 2314 0006 7860     		str	r0, [r7, #4]
2790:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** 	return(CapSense_1_debounce[widget]);
 2315              		.loc 1 2790 0
 2316 0008 0123     		mov	r3, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 91


2791:.\Generated_Source\PSoC4/CapSense_1_CSHL.c **** }
 2317              		.loc 1 2791 0
 2318 000a 181C     		mov	r0, r3
 2319 000c BD46     		mov	sp, r7
 2320 000e 02B0     		add	sp, sp, #8
 2321              		@ sp needed
 2322 0010 80BD     		pop	{r7, pc}
 2323              		.cfi_endproc
 2324              	.LFE61:
 2325              		.size	CapSense_1_GetDebounce, .-CapSense_1_GetDebounce
 2326 0012 C046     		.bss
 2327 001d 000000   		.align	2
 2328              	CapSense_1_debounceCounter.5275:
 2329 0020 00       		.space	1
 2330 0021 000000   		.align	2
 2331              	CapSense_1_centroid.5327:
 2332 0024 000000   		.space	3
 2333 0027 00       		.text
 2334              	.Letext0:
 2335              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2336              		.section	.debug_info,"",%progbits
 2337              	.Ldebug_info0:
 2338 0000 590A0000 		.4byte	0xa59
 2339 0004 0400     		.2byte	0x4
 2340 0006 00000000 		.4byte	.Ldebug_abbrev0
 2341 000a 04       		.byte	0x4
 2342 000b 01       		.uleb128 0x1
 2343 000c 2C050000 		.4byte	.LASF101
 2344 0010 01       		.byte	0x1
 2345 0011 50080000 		.4byte	.LASF102
 2346 0015 D7010000 		.4byte	.LASF103
 2347 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2348 001d 00000000 		.4byte	0
 2349 0021 00000000 		.4byte	.Ldebug_line0
 2350 0025 02       		.uleb128 0x2
 2351 0026 01       		.byte	0x1
 2352 0027 06       		.byte	0x6
 2353 0028 35010000 		.4byte	.LASF0
 2354 002c 02       		.uleb128 0x2
 2355 002d 01       		.byte	0x1
 2356 002e 08       		.byte	0x8
 2357 002f 26060000 		.4byte	.LASF1
 2358 0033 02       		.uleb128 0x2
 2359 0034 02       		.byte	0x2
 2360 0035 05       		.byte	0x5
 2361 0036 69060000 		.4byte	.LASF2
 2362 003a 02       		.uleb128 0x2
 2363 003b 02       		.byte	0x2
 2364 003c 07       		.byte	0x7
 2365 003d 43030000 		.4byte	.LASF3
 2366 0041 02       		.uleb128 0x2
 2367 0042 04       		.byte	0x4
 2368 0043 05       		.byte	0x5
 2369 0044 99010000 		.4byte	.LASF4
 2370 0048 02       		.uleb128 0x2
 2371 0049 04       		.byte	0x4
 2372 004a 07       		.byte	0x7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 92


 2373 004b 10030000 		.4byte	.LASF5
 2374 004f 02       		.uleb128 0x2
 2375 0050 08       		.byte	0x8
 2376 0051 05       		.byte	0x5
 2377 0052 27010000 		.4byte	.LASF6
 2378 0056 02       		.uleb128 0x2
 2379 0057 08       		.byte	0x8
 2380 0058 07       		.byte	0x7
 2381 0059 87000000 		.4byte	.LASF7
 2382 005d 03       		.uleb128 0x3
 2383 005e 04       		.byte	0x4
 2384 005f 05       		.byte	0x5
 2385 0060 696E7400 		.ascii	"int\000"
 2386 0064 02       		.uleb128 0x2
 2387 0065 04       		.byte	0x4
 2388 0066 07       		.byte	0x7
 2389 0067 FA020000 		.4byte	.LASF8
 2390 006b 04       		.uleb128 0x4
 2391 006c D1010000 		.4byte	.LASF9
 2392 0070 02       		.byte	0x2
 2393 0071 C1       		.byte	0xc1
 2394 0072 2C000000 		.4byte	0x2c
 2395 0076 04       		.uleb128 0x4
 2396 0077 06000000 		.4byte	.LASF10
 2397 007b 02       		.byte	0x2
 2398 007c C2       		.byte	0xc2
 2399 007d 3A000000 		.4byte	0x3a
 2400 0081 04       		.uleb128 0x4
 2401 0082 4D020000 		.4byte	.LASF11
 2402 0086 02       		.byte	0x2
 2403 0087 C3       		.byte	0xc3
 2404 0088 48000000 		.4byte	0x48
 2405 008c 04       		.uleb128 0x4
 2406 008d BA070000 		.4byte	.LASF12
 2407 0091 02       		.byte	0x2
 2408 0092 C5       		.byte	0xc5
 2409 0093 33000000 		.4byte	0x33
 2410 0097 04       		.uleb128 0x4
 2411 0098 76010000 		.4byte	.LASF13
 2412 009c 02       		.byte	0x2
 2413 009d C6       		.byte	0xc6
 2414 009e 41000000 		.4byte	0x41
 2415 00a2 02       		.uleb128 0x2
 2416 00a3 04       		.byte	0x4
 2417 00a4 04       		.byte	0x4
 2418 00a5 09050000 		.4byte	.LASF14
 2419 00a9 02       		.uleb128 0x2
 2420 00aa 08       		.byte	0x8
 2421 00ab 04       		.byte	0x4
 2422 00ac 46020000 		.4byte	.LASF15
 2423 00b0 02       		.uleb128 0x2
 2424 00b1 01       		.byte	0x1
 2425 00b2 08       		.byte	0x8
 2426 00b3 37070000 		.4byte	.LASF16
 2427 00b7 02       		.uleb128 0x2
 2428 00b8 04       		.byte	0x4
 2429 00b9 07       		.byte	0x7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 93


 2430 00ba F3030000 		.4byte	.LASF17
 2431 00be 05       		.uleb128 0x5
 2432 00bf 04       		.byte	0x4
 2433 00c0 6B000000 		.4byte	0x6b
 2434 00c4 06       		.uleb128 0x6
 2435 00c5 54000000 		.4byte	.LASF18
 2436 00c9 01       		.byte	0x1
 2437 00ca 92       		.byte	0x92
 2438 00cb 00000000 		.4byte	.LFB33
 2439 00cf 44000000 		.4byte	.LFE33-.LFB33
 2440 00d3 01       		.uleb128 0x1
 2441 00d4 9C       		.byte	0x9c
 2442 00d5 E8000000 		.4byte	0xe8
 2443 00d9 07       		.uleb128 0x7
 2444 00da 56030000 		.4byte	.LASF20
 2445 00de 01       		.byte	0x1
 2446 00df 92       		.byte	0x92
 2447 00e0 81000000 		.4byte	0x81
 2448 00e4 02       		.uleb128 0x2
 2449 00e5 91       		.byte	0x91
 2450 00e6 74       		.sleb128 -12
 2451 00e7 00       		.byte	0
 2452 00e8 08       		.uleb128 0x8
 2453 00e9 A7040000 		.4byte	.LASF19
 2454 00ed 01       		.byte	0x1
 2455 00ee DD       		.byte	0xdd
 2456 00ef 00000000 		.4byte	.LFB34
 2457 00f3 2A000000 		.4byte	.LFE34-.LFB34
 2458 00f7 01       		.uleb128 0x1
 2459 00f8 9C       		.byte	0x9c
 2460 00f9 0C010000 		.4byte	0x10c
 2461 00fd 07       		.uleb128 0x7
 2462 00fe 56030000 		.4byte	.LASF20
 2463 0102 01       		.byte	0x1
 2464 0103 DD       		.byte	0xdd
 2465 0104 81000000 		.4byte	0x81
 2466 0108 02       		.uleb128 0x2
 2467 0109 91       		.byte	0x91
 2468 010a 74       		.sleb128 -12
 2469 010b 00       		.byte	0
 2470 010c 09       		.uleb128 0x9
 2471 010d 32000000 		.4byte	.LASF21
 2472 0111 01       		.byte	0x1
 2473 0112 0201     		.2byte	0x102
 2474 0114 00000000 		.4byte	.LFB35
 2475 0118 26000000 		.4byte	.LFE35-.LFB35
 2476 011c 01       		.uleb128 0x1
 2477 011d 9C       		.byte	0x9c
 2478 011e 30010000 		.4byte	0x130
 2479 0122 0A       		.uleb128 0xa
 2480 0123 6900     		.ascii	"i\000"
 2481 0125 01       		.byte	0x1
 2482 0126 0401     		.2byte	0x104
 2483 0128 81000000 		.4byte	0x81
 2484 012c 02       		.uleb128 0x2
 2485 012d 91       		.byte	0x91
 2486 012e 74       		.sleb128 -12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 94


 2487 012f 00       		.byte	0
 2488 0130 09       		.uleb128 0x9
 2489 0131 34060000 		.4byte	.LASF22
 2490 0135 01       		.byte	0x1
 2491 0136 2501     		.2byte	0x125
 2492 0138 00000000 		.4byte	.LFB36
 2493 013c 50000000 		.4byte	.LFE36-.LFB36
 2494 0140 01       		.uleb128 0x1
 2495 0141 9C       		.byte	0x9c
 2496 0142 63010000 		.4byte	0x163
 2497 0146 0A       		.uleb128 0xa
 2498 0147 6900     		.ascii	"i\000"
 2499 0149 01       		.byte	0x1
 2500 014a 2701     		.2byte	0x127
 2501 014c 81000000 		.4byte	0x81
 2502 0150 02       		.uleb128 0x2
 2503 0151 91       		.byte	0x91
 2504 0152 74       		.sleb128 -12
 2505 0153 0B       		.uleb128 0xb
 2506 0154 F0060000 		.4byte	.LASF23
 2507 0158 01       		.byte	0x1
 2508 0159 2801     		.2byte	0x128
 2509 015b 81000000 		.4byte	0x81
 2510 015f 02       		.uleb128 0x2
 2511 0160 91       		.byte	0x91
 2512 0161 70       		.sleb128 -16
 2513 0162 00       		.byte	0
 2514 0163 09       		.uleb128 0x9
 2515 0164 A8050000 		.4byte	.LASF24
 2516 0168 01       		.byte	0x1
 2517 0169 6601     		.2byte	0x166
 2518 016b 00000000 		.4byte	.LFB37
 2519 016f B4010000 		.4byte	.LFE37-.LFB37
 2520 0173 01       		.uleb128 0x1
 2521 0174 9C       		.byte	0x9c
 2522 0175 E3010000 		.4byte	0x1e3
 2523 0179 0C       		.uleb128 0xc
 2524 017a 56030000 		.4byte	.LASF20
 2525 017e 01       		.byte	0x1
 2526 017f 6601     		.2byte	0x166
 2527 0181 81000000 		.4byte	0x81
 2528 0185 02       		.uleb128 0x2
 2529 0186 91       		.byte	0x91
 2530 0187 64       		.sleb128 -28
 2531 0188 0B       		.uleb128 0xb
 2532 0189 A5030000 		.4byte	.LASF25
 2533 018d 01       		.byte	0x1
 2534 018e 6801     		.2byte	0x168
 2535 0190 81000000 		.4byte	0x81
 2536 0194 02       		.uleb128 0x2
 2537 0195 91       		.byte	0x91
 2538 0196 68       		.sleb128 -24
 2539 0197 0B       		.uleb128 0xb
 2540 0198 8D070000 		.4byte	.LASF26
 2541 019c 01       		.byte	0x1
 2542 019d 6901     		.2byte	0x169
 2543 019f 81000000 		.4byte	0x81
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 95


 2544 01a3 02       		.uleb128 0x2
 2545 01a4 91       		.byte	0x91
 2546 01a5 74       		.sleb128 -12
 2547 01a6 0B       		.uleb128 0xb
 2548 01a7 0E080000 		.4byte	.LASF27
 2549 01ab 01       		.byte	0x1
 2550 01ac 6A01     		.2byte	0x16a
 2551 01ae 76000000 		.4byte	0x76
 2552 01b2 02       		.uleb128 0x2
 2553 01b3 91       		.byte	0x91
 2554 01b4 72       		.sleb128 -14
 2555 01b5 0B       		.uleb128 0xb
 2556 01b6 0D000000 		.4byte	.LASF28
 2557 01ba 01       		.byte	0x1
 2558 01bb 6B01     		.2byte	0x16b
 2559 01bd 76000000 		.4byte	0x76
 2560 01c1 02       		.uleb128 0x2
 2561 01c2 91       		.byte	0x91
 2562 01c3 6E       		.sleb128 -18
 2563 01c4 0B       		.uleb128 0xb
 2564 01c5 73060000 		.4byte	.LASF29
 2565 01c9 01       		.byte	0x1
 2566 01ca 6C01     		.2byte	0x16c
 2567 01cc 6B000000 		.4byte	0x6b
 2568 01d0 02       		.uleb128 0x2
 2569 01d1 91       		.byte	0x91
 2570 01d2 71       		.sleb128 -15
 2571 01d3 0B       		.uleb128 0xb
 2572 01d4 5A060000 		.4byte	.LASF30
 2573 01d8 01       		.byte	0x1
 2574 01d9 6D01     		.2byte	0x16d
 2575 01db 6B000000 		.4byte	0x6b
 2576 01df 02       		.uleb128 0x2
 2577 01e0 91       		.byte	0x91
 2578 01e1 70       		.sleb128 -16
 2579 01e2 00       		.byte	0
 2580 01e3 09       		.uleb128 0x9
 2581 01e4 7A060000 		.4byte	.LASF31
 2582 01e8 01       		.byte	0x1
 2583 01e9 2502     		.2byte	0x225
 2584 01eb 00000000 		.4byte	.LFB38
 2585 01ef 16000000 		.4byte	.LFE38-.LFB38
 2586 01f3 01       		.uleb128 0x1
 2587 01f4 9C       		.byte	0x9c
 2588 01f5 09020000 		.4byte	0x209
 2589 01f9 0C       		.uleb128 0xc
 2590 01fa 56030000 		.4byte	.LASF20
 2591 01fe 01       		.byte	0x1
 2592 01ff 2502     		.2byte	0x225
 2593 0201 81000000 		.4byte	0x81
 2594 0205 02       		.uleb128 0x2
 2595 0206 91       		.byte	0x91
 2596 0207 74       		.sleb128 -12
 2597 0208 00       		.byte	0
 2598 0209 09       		.uleb128 0x9
 2599 020a CB040000 		.4byte	.LASF32
 2600 020e 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 96


 2601 020f 5B02     		.2byte	0x25b
 2602 0211 00000000 		.4byte	.LFB39
 2603 0215 40000000 		.4byte	.LFE39-.LFB39
 2604 0219 01       		.uleb128 0x1
 2605 021a 9C       		.byte	0x9c
 2606 021b 3C020000 		.4byte	0x23c
 2607 021f 0A       		.uleb128 0xa
 2608 0220 6900     		.ascii	"i\000"
 2609 0222 01       		.byte	0x1
 2610 0223 5D02     		.2byte	0x25d
 2611 0225 81000000 		.4byte	0x81
 2612 0229 02       		.uleb128 0x2
 2613 022a 91       		.byte	0x91
 2614 022b 74       		.sleb128 -12
 2615 022c 0B       		.uleb128 0xb
 2616 022d F0060000 		.4byte	.LASF23
 2617 0231 01       		.byte	0x1
 2618 0232 5E02     		.2byte	0x25e
 2619 0234 81000000 		.4byte	0x81
 2620 0238 02       		.uleb128 0x2
 2621 0239 91       		.byte	0x91
 2622 023a 70       		.sleb128 -16
 2623 023b 00       		.byte	0
 2624 023c 09       		.uleb128 0x9
 2625 023d 7E020000 		.4byte	.LASF33
 2626 0241 01       		.byte	0x1
 2627 0242 8802     		.2byte	0x288
 2628 0244 00000000 		.4byte	.LFB40
 2629 0248 58000000 		.4byte	.LFE40-.LFB40
 2630 024c 01       		.uleb128 0x1
 2631 024d 9C       		.byte	0x9c
 2632 024e AB020000 		.4byte	0x2ab
 2633 0252 0C       		.uleb128 0xc
 2634 0253 73060000 		.4byte	.LASF29
 2635 0257 01       		.byte	0x1
 2636 0258 8802     		.2byte	0x288
 2637 025a 81000000 		.4byte	0x81
 2638 025e 02       		.uleb128 0x2
 2639 025f 91       		.byte	0x91
 2640 0260 5C       		.sleb128 -36
 2641 0261 0B       		.uleb128 0xb
 2642 0262 00070000 		.4byte	.LASF34
 2643 0266 01       		.byte	0x1
 2644 0267 8A02     		.2byte	0x28a
 2645 0269 81000000 		.4byte	0x81
 2646 026d 02       		.uleb128 0x2
 2647 026e 91       		.byte	0x91
 2648 026f 70       		.sleb128 -16
 2649 0270 0B       		.uleb128 0xb
 2650 0271 56070000 		.4byte	.LASF35
 2651 0275 01       		.byte	0x1
 2652 0276 8B02     		.2byte	0x28b
 2653 0278 81000000 		.4byte	0x81
 2654 027c 02       		.uleb128 0x2
 2655 027d 91       		.byte	0x91
 2656 027e 6C       		.sleb128 -20
 2657 027f 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 97


 2658 0280 EF020000 		.4byte	.LASF36
 2659 0284 01       		.byte	0x1
 2660 0285 8C02     		.2byte	0x28c
 2661 0287 81000000 		.4byte	0x81
 2662 028b 02       		.uleb128 0x2
 2663 028c 91       		.byte	0x91
 2664 028d 68       		.sleb128 -24
 2665 028e 0A       		.uleb128 0xa
 2666 028f 6900     		.ascii	"i\000"
 2667 0291 01       		.byte	0x1
 2668 0292 8D02     		.2byte	0x28d
 2669 0294 81000000 		.4byte	0x81
 2670 0298 02       		.uleb128 0x2
 2671 0299 91       		.byte	0x91
 2672 029a 74       		.sleb128 -12
 2673 029b 0B       		.uleb128 0xb
 2674 029c F0060000 		.4byte	.LASF23
 2675 02a0 01       		.byte	0x1
 2676 02a1 8E02     		.2byte	0x28e
 2677 02a3 81000000 		.4byte	0x81
 2678 02a7 02       		.uleb128 0x2
 2679 02a8 91       		.byte	0x91
 2680 02a9 64       		.sleb128 -28
 2681 02aa 00       		.byte	0
 2682 02ab 0D       		.uleb128 0xd
 2683 02ac 9F070000 		.4byte	.LASF39
 2684 02b0 01       		.byte	0x1
 2685 02b1 B902     		.2byte	0x2b9
 2686 02b3 76000000 		.4byte	0x76
 2687 02b7 00000000 		.4byte	.LFB41
 2688 02bb 1C000000 		.4byte	.LFE41-.LFB41
 2689 02bf 01       		.uleb128 0x1
 2690 02c0 9C       		.byte	0x9c
 2691 02c1 D5020000 		.4byte	0x2d5
 2692 02c5 0C       		.uleb128 0xc
 2693 02c6 56030000 		.4byte	.LASF20
 2694 02ca 01       		.byte	0x1
 2695 02cb B902     		.2byte	0x2b9
 2696 02cd 81000000 		.4byte	0x81
 2697 02d1 02       		.uleb128 0x2
 2698 02d2 91       		.byte	0x91
 2699 02d3 74       		.sleb128 -12
 2700 02d4 00       		.byte	0
 2701 02d5 0E       		.uleb128 0xe
 2702 02d6 AA030000 		.4byte	.LASF37
 2703 02da 01       		.byte	0x1
 2704 02db D402     		.2byte	0x2d4
 2705 02dd 00000000 		.4byte	.LFB42
 2706 02e1 24000000 		.4byte	.LFE42-.LFB42
 2707 02e5 01       		.uleb128 0x1
 2708 02e6 9C       		.byte	0x9c
 2709 02e7 0A030000 		.4byte	0x30a
 2710 02eb 0C       		.uleb128 0xc
 2711 02ec 56030000 		.4byte	.LASF20
 2712 02f0 01       		.byte	0x1
 2713 02f1 D402     		.2byte	0x2d4
 2714 02f3 81000000 		.4byte	0x81
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 98


 2715 02f7 02       		.uleb128 0x2
 2716 02f8 91       		.byte	0x91
 2717 02f9 74       		.sleb128 -12
 2718 02fa 0C       		.uleb128 0xc
 2719 02fb 3E030000 		.4byte	.LASF38
 2720 02ff 01       		.byte	0x1
 2721 0300 D402     		.2byte	0x2d4
 2722 0302 76000000 		.4byte	0x76
 2723 0306 02       		.uleb128 0x2
 2724 0307 91       		.byte	0x91
 2725 0308 72       		.sleb128 -14
 2726 0309 00       		.byte	0
 2727 030a 0D       		.uleb128 0xd
 2728 030b 73040000 		.4byte	.LASF40
 2729 030f 01       		.byte	0x1
 2730 0310 EF02     		.2byte	0x2ef
 2731 0312 6B000000 		.4byte	0x6b
 2732 0316 00000000 		.4byte	.LFB43
 2733 031a 1C000000 		.4byte	.LFE43-.LFB43
 2734 031e 01       		.uleb128 0x1
 2735 031f 9C       		.byte	0x9c
 2736 0320 34030000 		.4byte	0x334
 2737 0324 0C       		.uleb128 0xc
 2738 0325 56030000 		.4byte	.LASF20
 2739 0329 01       		.byte	0x1
 2740 032a EF02     		.2byte	0x2ef
 2741 032c 81000000 		.4byte	0x81
 2742 0330 02       		.uleb128 0x2
 2743 0331 91       		.byte	0x91
 2744 0332 74       		.sleb128 -12
 2745 0333 00       		.byte	0
 2746 0334 0E       		.uleb128 0xe
 2747 0335 22030000 		.4byte	.LASF41
 2748 0339 01       		.byte	0x1
 2749 033a 0A03     		.2byte	0x30a
 2750 033c 00000000 		.4byte	.LFB44
 2751 0340 24000000 		.4byte	.LFE44-.LFB44
 2752 0344 01       		.uleb128 0x1
 2753 0345 9C       		.byte	0x9c
 2754 0346 69030000 		.4byte	0x369
 2755 034a 0C       		.uleb128 0xc
 2756 034b 56030000 		.4byte	.LASF20
 2757 034f 01       		.byte	0x1
 2758 0350 0A03     		.2byte	0x30a
 2759 0352 81000000 		.4byte	0x81
 2760 0356 02       		.uleb128 0x2
 2761 0357 91       		.byte	0x91
 2762 0358 74       		.sleb128 -12
 2763 0359 0C       		.uleb128 0xc
 2764 035a E9020000 		.4byte	.LASF42
 2765 035e 01       		.byte	0x1
 2766 035f 0A03     		.2byte	0x30a
 2767 0361 6B000000 		.4byte	0x6b
 2768 0365 02       		.uleb128 0x2
 2769 0366 91       		.byte	0x91
 2770 0367 73       		.sleb128 -13
 2771 0368 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 99


 2772 0369 0D       		.uleb128 0xd
 2773 036a DA070000 		.4byte	.LASF43
 2774 036e 01       		.byte	0x1
 2775 036f 2503     		.2byte	0x325
 2776 0371 6B000000 		.4byte	0x6b
 2777 0375 00000000 		.4byte	.LFB45
 2778 0379 12000000 		.4byte	.LFE45-.LFB45
 2779 037d 01       		.uleb128 0x1
 2780 037e 9C       		.byte	0x9c
 2781 037f 93030000 		.4byte	0x393
 2782 0383 0C       		.uleb128 0xc
 2783 0384 73060000 		.4byte	.LASF29
 2784 0388 01       		.byte	0x1
 2785 0389 2503     		.2byte	0x325
 2786 038b 81000000 		.4byte	0x81
 2787 038f 02       		.uleb128 0x2
 2788 0390 91       		.byte	0x91
 2789 0391 74       		.sleb128 -12
 2790 0392 00       		.byte	0
 2791 0393 0D       		.uleb128 0xd
 2792 0394 0F050000 		.4byte	.LASF44
 2793 0398 01       		.byte	0x1
 2794 0399 4003     		.2byte	0x340
 2795 039b 6B000000 		.4byte	0x6b
 2796 039f 00000000 		.4byte	.LFB46
 2797 03a3 12000000 		.4byte	.LFE46-.LFB46
 2798 03a7 01       		.uleb128 0x1
 2799 03a8 9C       		.byte	0x9c
 2800 03a9 BD030000 		.4byte	0x3bd
 2801 03ad 0C       		.uleb128 0xc
 2802 03ae 73060000 		.4byte	.LASF29
 2803 03b2 01       		.byte	0x1
 2804 03b3 4003     		.2byte	0x340
 2805 03b5 81000000 		.4byte	0x81
 2806 03b9 02       		.uleb128 0x2
 2807 03ba 91       		.byte	0x91
 2808 03bb 74       		.sleb128 -12
 2809 03bc 00       		.byte	0
 2810 03bd 0D       		.uleb128 0xd
 2811 03be 5F020000 		.4byte	.LASF45
 2812 03c2 01       		.byte	0x1
 2813 03c3 5C03     		.2byte	0x35c
 2814 03c5 6B000000 		.4byte	0x6b
 2815 03c9 00000000 		.4byte	.LFB47
 2816 03cd 12000000 		.4byte	.LFE47-.LFB47
 2817 03d1 01       		.uleb128 0x1
 2818 03d2 9C       		.byte	0x9c
 2819 03d3 E7030000 		.4byte	0x3e7
 2820 03d7 0C       		.uleb128 0xc
 2821 03d8 73060000 		.4byte	.LASF29
 2822 03dc 01       		.byte	0x1
 2823 03dd 5C03     		.2byte	0x35c
 2824 03df 81000000 		.4byte	0x81
 2825 03e3 02       		.uleb128 0x2
 2826 03e4 91       		.byte	0x91
 2827 03e5 74       		.sleb128 -12
 2828 03e6 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 100


 2829 03e7 0D       		.uleb128 0xd
 2830 03e8 5D030000 		.4byte	.LASF46
 2831 03ec 01       		.byte	0x1
 2832 03ed 7803     		.2byte	0x378
 2833 03ef 6B000000 		.4byte	0x6b
 2834 03f3 00000000 		.4byte	.LFB48
 2835 03f7 12000000 		.4byte	.LFE48-.LFB48
 2836 03fb 01       		.uleb128 0x1
 2837 03fc 9C       		.byte	0x9c
 2838 03fd 11040000 		.4byte	0x411
 2839 0401 0C       		.uleb128 0xc
 2840 0402 73060000 		.4byte	.LASF29
 2841 0406 01       		.byte	0x1
 2842 0407 7803     		.2byte	0x378
 2843 0409 81000000 		.4byte	0x81
 2844 040d 02       		.uleb128 0x2
 2845 040e 91       		.byte	0x91
 2846 040f 74       		.sleb128 -12
 2847 0410 00       		.byte	0
 2848 0411 0F       		.uleb128 0xf
 2849 0412 E5050000 		.4byte	.LASF47
 2850 0416 01       		.byte	0x1
 2851 0417 5404     		.2byte	0x454
 2852 0419 81000000 		.4byte	0x81
 2853 041d 00000000 		.4byte	.LFB49
 2854 0421 1C010000 		.4byte	.LFE49-.LFB49
 2855 0425 01       		.uleb128 0x1
 2856 0426 9C       		.byte	0x9c
 2857 0427 98040000 		.4byte	0x498
 2858 042b 0C       		.uleb128 0xc
 2859 042c 56030000 		.4byte	.LASF20
 2860 0430 01       		.byte	0x1
 2861 0431 5404     		.2byte	0x454
 2862 0433 81000000 		.4byte	0x81
 2863 0437 02       		.uleb128 0x2
 2864 0438 91       		.byte	0x91
 2865 0439 6C       		.sleb128 -20
 2866 043a 0B       		.uleb128 0xb
 2867 043b 73060000 		.4byte	.LASF29
 2868 043f 01       		.byte	0x1
 2869 0440 5604     		.2byte	0x456
 2870 0442 6B000000 		.4byte	0x6b
 2871 0446 02       		.uleb128 0x2
 2872 0447 91       		.byte	0x91
 2873 0448 77       		.sleb128 -9
 2874 0449 0B       		.uleb128 0xb
 2875 044a EA030000 		.4byte	.LASF48
 2876 044e 01       		.byte	0x1
 2877 044f 5704     		.2byte	0x457
 2878 0451 6B000000 		.4byte	0x6b
 2879 0455 02       		.uleb128 0x2
 2880 0456 91       		.byte	0x91
 2881 0457 74       		.sleb128 -12
 2882 0458 0B       		.uleb128 0xb
 2883 0459 7F070000 		.4byte	.LASF49
 2884 045d 01       		.byte	0x1
 2885 045e 5804     		.2byte	0x458
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 101


 2886 0460 6B000000 		.4byte	0x6b
 2887 0464 02       		.uleb128 0x2
 2888 0465 91       		.byte	0x91
 2889 0466 73       		.sleb128 -13
 2890 0467 0B       		.uleb128 0xb
 2891 0468 1D000000 		.4byte	.LASF50
 2892 046c 01       		.byte	0x1
 2893 046d 5A04     		.2byte	0x45a
 2894 046f 6B000000 		.4byte	0x6b
 2895 0473 02       		.uleb128 0x2
 2896 0474 91       		.byte	0x91
 2897 0475 76       		.sleb128 -10
 2898 0476 0B       		.uleb128 0xb
 2899 0477 54020000 		.4byte	.LASF51
 2900 047b 01       		.byte	0x1
 2901 047c 5B04     		.2byte	0x45b
 2902 047e 6B000000 		.4byte	0x6b
 2903 0482 02       		.uleb128 0x2
 2904 0483 91       		.byte	0x91
 2905 0484 75       		.sleb128 -11
 2906 0485 0B       		.uleb128 0xb
 2907 0486 CD060000 		.4byte	.LASF52
 2908 048a 01       		.byte	0x1
 2909 048b 5C04     		.2byte	0x45c
 2910 048d 98040000 		.4byte	0x498
 2911 0491 05       		.uleb128 0x5
 2912 0492 03       		.byte	0x3
 2913 0493 20000000 		.4byte	CapSense_1_debounceCounter.5275
 2914 0497 00       		.byte	0
 2915 0498 10       		.uleb128 0x10
 2916 0499 6B000000 		.4byte	0x6b
 2917 049d A8040000 		.4byte	0x4a8
 2918 04a1 11       		.uleb128 0x11
 2919 04a2 B7000000 		.4byte	0xb7
 2920 04a6 00       		.byte	0
 2921 04a7 00       		.byte	0
 2922 04a8 0F       		.uleb128 0xf
 2923 04a9 C5000000 		.4byte	.LASF53
 2924 04ad 01       		.byte	0x1
 2925 04ae AB04     		.2byte	0x4ab
 2926 04b0 81000000 		.4byte	0x81
 2927 04b4 00000000 		.4byte	.LFB50
 2928 04b8 44000000 		.4byte	.LFE50-.LFB50
 2929 04bc 01       		.uleb128 0x1
 2930 04bd 9C       		.byte	0x9c
 2931 04be FF040000 		.4byte	0x4ff
 2932 04c2 0C       		.uleb128 0xc
 2933 04c3 73060000 		.4byte	.LASF29
 2934 04c7 01       		.byte	0x1
 2935 04c8 AB04     		.2byte	0x4ab
 2936 04ca 81000000 		.4byte	0x81
 2937 04ce 02       		.uleb128 0x2
 2938 04cf 91       		.byte	0x91
 2939 04d0 64       		.sleb128 -28
 2940 04d1 0B       		.uleb128 0xb
 2941 04d2 41010000 		.4byte	.LASF54
 2942 04d6 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 102


 2943 04d7 AD04     		.2byte	0x4ad
 2944 04d9 81000000 		.4byte	0x81
 2945 04dd 02       		.uleb128 0x2
 2946 04de 91       		.byte	0x91
 2947 04df 74       		.sleb128 -12
 2948 04e0 0B       		.uleb128 0xb
 2949 04e1 92070000 		.4byte	.LASF55
 2950 04e5 01       		.byte	0x1
 2951 04e6 AE04     		.2byte	0x4ae
 2952 04e8 81000000 		.4byte	0x81
 2953 04ec 02       		.uleb128 0x2
 2954 04ed 91       		.byte	0x91
 2955 04ee 6C       		.sleb128 -20
 2956 04ef 0B       		.uleb128 0xb
 2957 04f0 7C010000 		.4byte	.LASF56
 2958 04f4 01       		.byte	0x1
 2959 04f5 AF04     		.2byte	0x4af
 2960 04f7 81000000 		.4byte	0x81
 2961 04fb 02       		.uleb128 0x2
 2962 04fc 91       		.byte	0x91
 2963 04fd 70       		.sleb128 -16
 2964 04fe 00       		.byte	0
 2965 04ff 0F       		.uleb128 0xf
 2966 0500 04060000 		.4byte	.LASF57
 2967 0504 01       		.byte	0x1
 2968 0505 D904     		.2byte	0x4d9
 2969 0507 81000000 		.4byte	0x81
 2970 050b 00000000 		.4byte	.LFB51
 2971 050f 38000000 		.4byte	.LFE51-.LFB51
 2972 0513 01       		.uleb128 0x1
 2973 0514 9C       		.byte	0x9c
 2974 0515 36050000 		.4byte	0x536
 2975 0519 0A       		.uleb128 0xa
 2976 051a 6900     		.ascii	"i\000"
 2977 051c 01       		.byte	0x1
 2978 051d DC04     		.2byte	0x4dc
 2979 051f 81000000 		.4byte	0x81
 2980 0523 02       		.uleb128 0x2
 2981 0524 91       		.byte	0x91
 2982 0525 74       		.sleb128 -12
 2983 0526 0B       		.uleb128 0xb
 2984 0527 7C010000 		.4byte	.LASF56
 2985 052b 01       		.byte	0x1
 2986 052c DD04     		.2byte	0x4dd
 2987 052e 81000000 		.4byte	0x81
 2988 0532 02       		.uleb128 0x2
 2989 0533 91       		.byte	0x91
 2990 0534 70       		.sleb128 -16
 2991 0535 00       		.byte	0
 2992 0536 09       		.uleb128 0x9
 2993 0537 9E000000 		.4byte	.LASF58
 2994 053b 01       		.byte	0x1
 2995 053c 0805     		.2byte	0x508
 2996 053e 00000000 		.4byte	.LFB52
 2997 0542 5C000000 		.4byte	.LFE52-.LFB52
 2998 0546 01       		.uleb128 0x1
 2999 0547 9C       		.byte	0x9c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 103


 3000 0548 7A050000 		.4byte	0x57a
 3001 054c 0C       		.uleb128 0xc
 3002 054d 73060000 		.4byte	.LASF29
 3003 0551 01       		.byte	0x1
 3004 0552 0805     		.2byte	0x508
 3005 0554 81000000 		.4byte	0x81
 3006 0558 02       		.uleb128 0x2
 3007 0559 91       		.byte	0x91
 3008 055a 6C       		.sleb128 -20
 3009 055b 0B       		.uleb128 0xb
 3010 055c 41010000 		.4byte	.LASF54
 3011 0560 01       		.byte	0x1
 3012 0561 0B05     		.2byte	0x50b
 3013 0563 6B000000 		.4byte	0x6b
 3014 0567 02       		.uleb128 0x2
 3015 0568 91       		.byte	0x91
 3016 0569 77       		.sleb128 -9
 3017 056a 0B       		.uleb128 0xb
 3018 056b 92070000 		.4byte	.LASF55
 3019 056f 01       		.byte	0x1
 3020 0570 0C05     		.2byte	0x50c
 3021 0572 6B000000 		.4byte	0x6b
 3022 0576 02       		.uleb128 0x2
 3023 0577 91       		.byte	0x91
 3024 0578 76       		.sleb128 -10
 3025 0579 00       		.byte	0
 3026 057a 09       		.uleb128 0x9
 3027 057b AC010000 		.4byte	.LASF59
 3028 057f 01       		.byte	0x1
 3029 0580 3305     		.2byte	0x533
 3030 0582 00000000 		.4byte	.LFB53
 3031 0586 5C000000 		.4byte	.LFE53-.LFB53
 3032 058a 01       		.uleb128 0x1
 3033 058b 9C       		.byte	0x9c
 3034 058c BE050000 		.4byte	0x5be
 3035 0590 0C       		.uleb128 0xc
 3036 0591 73060000 		.4byte	.LASF29
 3037 0595 01       		.byte	0x1
 3038 0596 3305     		.2byte	0x533
 3039 0598 81000000 		.4byte	0x81
 3040 059c 02       		.uleb128 0x2
 3041 059d 91       		.byte	0x91
 3042 059e 6C       		.sleb128 -20
 3043 059f 0B       		.uleb128 0xb
 3044 05a0 41010000 		.4byte	.LASF54
 3045 05a4 01       		.byte	0x1
 3046 05a5 3505     		.2byte	0x535
 3047 05a7 6B000000 		.4byte	0x6b
 3048 05ab 02       		.uleb128 0x2
 3049 05ac 91       		.byte	0x91
 3050 05ad 77       		.sleb128 -9
 3051 05ae 0B       		.uleb128 0xb
 3052 05af 92070000 		.4byte	.LASF55
 3053 05b3 01       		.byte	0x1
 3054 05b4 3605     		.2byte	0x536
 3055 05b6 6B000000 		.4byte	0x6b
 3056 05ba 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 104


 3057 05bb 91       		.byte	0x91
 3058 05bc 76       		.sleb128 -10
 3059 05bd 00       		.byte	0
 3060 05be 0D       		.uleb128 0xd
 3061 05bf 82010000 		.4byte	.LASF60
 3062 05c3 01       		.byte	0x1
 3063 05c4 6505     		.2byte	0x565
 3064 05c6 6B000000 		.4byte	0x6b
 3065 05ca 00000000 		.4byte	.LFB54
 3066 05ce AC000000 		.4byte	.LFE54-.LFB54
 3067 05d2 01       		.uleb128 0x1
 3068 05d3 9C       		.byte	0x9c
 3069 05d4 40060000 		.4byte	0x640
 3070 05d8 0C       		.uleb128 0xc
 3071 05d9 9E020000 		.4byte	.LASF61
 3072 05dd 01       		.byte	0x1
 3073 05de 6505     		.2byte	0x565
 3074 05e0 6B000000 		.4byte	0x6b
 3075 05e4 02       		.uleb128 0x2
 3076 05e5 91       		.byte	0x91
 3077 05e6 6F       		.sleb128 -17
 3078 05e7 0C       		.uleb128 0xc
 3079 05e8 00000000 		.4byte	.LASF62
 3080 05ec 01       		.byte	0x1
 3081 05ed 6505     		.2byte	0x565
 3082 05ef 6B000000 		.4byte	0x6b
 3083 05f3 02       		.uleb128 0x2
 3084 05f4 91       		.byte	0x91
 3085 05f5 6E       		.sleb128 -18
 3086 05f6 0C       		.uleb128 0xc
 3087 05f7 1D000000 		.4byte	.LASF50
 3088 05fb 01       		.byte	0x1
 3089 05fc 6505     		.2byte	0x565
 3090 05fe 6B000000 		.4byte	0x6b
 3091 0602 02       		.uleb128 0x2
 3092 0603 91       		.byte	0x91
 3093 0604 6D       		.sleb128 -19
 3094 0605 0A       		.uleb128 0xa
 3095 0606 6900     		.ascii	"i\000"
 3096 0608 01       		.byte	0x1
 3097 0609 6805     		.2byte	0x568
 3098 060b 6B000000 		.4byte	0x6b
 3099 060f 02       		.uleb128 0x2
 3100 0610 91       		.byte	0x91
 3101 0611 77       		.sleb128 -9
 3102 0612 0B       		.uleb128 0xb
 3103 0613 E8060000 		.4byte	.LASF63
 3104 0617 01       		.byte	0x1
 3105 0618 7205     		.2byte	0x572
 3106 061a 6B000000 		.4byte	0x6b
 3107 061e 02       		.uleb128 0x2
 3108 061f 91       		.byte	0x91
 3109 0620 76       		.sleb128 -10
 3110 0621 0B       		.uleb128 0xb
 3111 0622 2D000000 		.4byte	.LASF64
 3112 0626 01       		.byte	0x1
 3113 0627 7405     		.2byte	0x574
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 105


 3114 0629 6B000000 		.4byte	0x6b
 3115 062d 02       		.uleb128 0x2
 3116 062e 91       		.byte	0x91
 3117 062f 75       		.sleb128 -11
 3118 0630 0B       		.uleb128 0xb
 3119 0631 DB020000 		.4byte	.LASF65
 3120 0635 01       		.byte	0x1
 3121 0636 7505     		.2byte	0x575
 3122 0638 BE000000 		.4byte	0xbe
 3123 063c 02       		.uleb128 0x2
 3124 063d 91       		.byte	0x91
 3125 063e 70       		.sleb128 -16
 3126 063f 00       		.byte	0
 3127 0640 0F       		.uleb128 0xf
 3128 0641 44040000 		.4byte	.LASF66
 3129 0645 01       		.byte	0x1
 3130 0646 0406     		.2byte	0x604
 3131 0648 6B000000 		.4byte	0x6b
 3132 064c 00000000 		.4byte	.LFB55
 3133 0650 94010000 		.4byte	.LFE55-.LFB55
 3134 0654 01       		.uleb128 0x1
 3135 0655 9C       		.byte	0x9c
 3136 0656 12070000 		.4byte	0x712
 3137 065a 0C       		.uleb128 0xc
 3138 065b E8060000 		.4byte	.LASF63
 3139 065f 01       		.byte	0x1
 3140 0660 0406     		.2byte	0x604
 3141 0662 6B000000 		.4byte	0x6b
 3142 0666 02       		.uleb128 0x2
 3143 0667 91       		.byte	0x91
 3144 0668 57       		.sleb128 -41
 3145 0669 0C       		.uleb128 0xc
 3146 066a 9E020000 		.4byte	.LASF61
 3147 066e 01       		.byte	0x1
 3148 066f 0406     		.2byte	0x604
 3149 0671 6B000000 		.4byte	0x6b
 3150 0675 02       		.uleb128 0x2
 3151 0676 91       		.byte	0x91
 3152 0677 56       		.sleb128 -42
 3153 0678 0C       		.uleb128 0xc
 3154 0679 00000000 		.4byte	.LASF62
 3155 067d 01       		.byte	0x1
 3156 067e 0506     		.2byte	0x605
 3157 0680 6B000000 		.4byte	0x6b
 3158 0684 02       		.uleb128 0x2
 3159 0685 91       		.byte	0x91
 3160 0686 55       		.sleb128 -43
 3161 0687 0C       		.uleb128 0xc
 3162 0688 11070000 		.4byte	.LASF67
 3163 068c 01       		.byte	0x1
 3164 068d 0506     		.2byte	0x605
 3165 068f 76000000 		.4byte	0x76
 3166 0693 02       		.uleb128 0x2
 3167 0694 91       		.byte	0x91
 3168 0695 52       		.sleb128 -46
 3169 0696 0C       		.uleb128 0xc
 3170 0697 5A060000 		.4byte	.LASF30
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 106


 3171 069b 01       		.byte	0x1
 3172 069c 0506     		.2byte	0x605
 3173 069e 6B000000 		.4byte	0x6b
 3174 06a2 02       		.uleb128 0x2
 3175 06a3 91       		.byte	0x91
 3176 06a4 00       		.sleb128 0
 3177 06a5 0B       		.uleb128 0xb
 3178 06a6 82030000 		.4byte	.LASF68
 3179 06aa 01       		.byte	0x1
 3180 06ab 0906     		.2byte	0x609
 3181 06ad 6B000000 		.4byte	0x6b
 3182 06b1 02       		.uleb128 0x2
 3183 06b2 91       		.byte	0x91
 3184 06b3 6F       		.sleb128 -17
 3185 06b4 0B       		.uleb128 0xb
 3186 06b5 D3020000 		.4byte	.LASF69
 3187 06b9 01       		.byte	0x1
 3188 06ba 0A06     		.2byte	0x60a
 3189 06bc 6B000000 		.4byte	0x6b
 3190 06c0 02       		.uleb128 0x2
 3191 06c1 91       		.byte	0x91
 3192 06c2 67       		.sleb128 -25
 3193 06c3 0B       		.uleb128 0xb
 3194 06c4 62010000 		.4byte	.LASF70
 3195 06c8 01       		.byte	0x1
 3196 06c9 0F06     		.2byte	0x60f
 3197 06cb 12070000 		.4byte	0x712
 3198 06cf 05       		.uleb128 0x5
 3199 06d0 03       		.byte	0x3
 3200 06d1 24000000 		.4byte	CapSense_1_centroid.5327
 3201 06d5 0B       		.uleb128 0xb
 3202 06d6 07030000 		.4byte	.LASF71
 3203 06da 01       		.byte	0x1
 3204 06db 1606     		.2byte	0x616
 3205 06dd 6B000000 		.4byte	0x6b
 3206 06e1 02       		.uleb128 0x2
 3207 06e2 91       		.byte	0x91
 3208 06e3 5B       		.sleb128 -37
 3209 06e4 0B       		.uleb128 0xb
 3210 06e5 A2010000 		.4byte	.LASF72
 3211 06e9 01       		.byte	0x1
 3212 06ea 1706     		.2byte	0x617
 3213 06ec 81000000 		.4byte	0x81
 3214 06f0 02       		.uleb128 0x2
 3215 06f1 91       		.byte	0x91
 3216 06f2 60       		.sleb128 -32
 3217 06f3 0B       		.uleb128 0xb
 3218 06f4 C5010000 		.4byte	.LASF73
 3219 06f8 01       		.byte	0x1
 3220 06f9 1806     		.2byte	0x618
 3221 06fb 97000000 		.4byte	0x97
 3222 06ff 02       		.uleb128 0x2
 3223 0700 91       		.byte	0x91
 3224 0701 5C       		.sleb128 -36
 3225 0702 0B       		.uleb128 0xb
 3226 0703 DB020000 		.4byte	.LASF65
 3227 0707 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 107


 3228 0708 1A06     		.2byte	0x61a
 3229 070a BE000000 		.4byte	0xbe
 3230 070e 02       		.uleb128 0x2
 3231 070f 91       		.byte	0x91
 3232 0710 68       		.sleb128 -24
 3233 0711 00       		.byte	0
 3234 0712 10       		.uleb128 0x10
 3235 0713 6B000000 		.4byte	0x6b
 3236 0717 22070000 		.4byte	0x722
 3237 071b 11       		.uleb128 0x11
 3238 071c B7000000 		.4byte	0xb7
 3239 0720 02       		.byte	0x2
 3240 0721 00       		.byte	0
 3241 0722 0F       		.uleb128 0xf
 3242 0723 3C070000 		.4byte	.LASF74
 3243 0727 01       		.byte	0x1
 3244 0728 D706     		.2byte	0x6d7
 3245 072a 76000000 		.4byte	0x76
 3246 072e 00000000 		.4byte	.LFB56
 3247 0732 3C010000 		.4byte	.LFE56-.LFB56
 3248 0736 01       		.uleb128 0x1
 3249 0737 9C       		.byte	0x9c
 3250 0738 B5070000 		.4byte	0x7b5
 3251 073c 0C       		.uleb128 0xc
 3252 073d 73060000 		.4byte	.LASF29
 3253 0741 01       		.byte	0x1
 3254 0742 D706     		.2byte	0x6d7
 3255 0744 81000000 		.4byte	0x81
 3256 0748 02       		.uleb128 0x2
 3257 0749 91       		.byte	0x91
 3258 074a 64       		.sleb128 -28
 3259 074b 0B       		.uleb128 0xb
 3260 074c E1030000 		.4byte	.LASF75
 3261 0750 01       		.byte	0x1
 3262 0751 DE06     		.2byte	0x6de
 3263 0753 6B000000 		.4byte	0x6b
 3264 0757 02       		.uleb128 0x2
 3265 0758 91       		.byte	0x91
 3266 0759 68       		.sleb128 -24
 3267 075a 0B       		.uleb128 0xb
 3268 075b B6000000 		.4byte	.LASF76
 3269 075f 01       		.byte	0x1
 3270 0760 DF06     		.2byte	0x6df
 3271 0762 6B000000 		.4byte	0x6b
 3272 0766 02       		.uleb128 0x2
 3273 0767 91       		.byte	0x91
 3274 0768 6D       		.sleb128 -19
 3275 0769 0B       		.uleb128 0xb
 3276 076a FC030000 		.4byte	.LASF77
 3277 076e 01       		.byte	0x1
 3278 076f E006     		.2byte	0x6e0
 3279 0771 6B000000 		.4byte	0x6b
 3280 0775 02       		.uleb128 0x2
 3281 0776 91       		.byte	0x91
 3282 0777 6C       		.sleb128 -20
 3283 0778 0B       		.uleb128 0xb
 3284 0779 E8060000 		.4byte	.LASF63
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 108


 3285 077d 01       		.byte	0x1
 3286 077e EA06     		.2byte	0x6ea
 3287 0780 6B000000 		.4byte	0x6b
 3288 0784 02       		.uleb128 0x2
 3289 0785 91       		.byte	0x91
 3290 0786 69       		.sleb128 -23
 3291 0787 0B       		.uleb128 0xb
 3292 0788 07030000 		.4byte	.LASF71
 3293 078c 01       		.byte	0x1
 3294 078d EB06     		.2byte	0x6eb
 3295 078f 76000000 		.4byte	0x76
 3296 0793 02       		.uleb128 0x2
 3297 0794 91       		.byte	0x91
 3298 0795 6E       		.sleb128 -18
 3299 0796 0B       		.uleb128 0xb
 3300 0797 9E020000 		.4byte	.LASF61
 3301 079b 01       		.byte	0x1
 3302 079c EC06     		.2byte	0x6ec
 3303 079e 6B000000 		.4byte	0x6b
 3304 07a2 02       		.uleb128 0x2
 3305 07a3 91       		.byte	0x91
 3306 07a4 6B       		.sleb128 -21
 3307 07a5 0B       		.uleb128 0xb
 3308 07a6 00000000 		.4byte	.LASF62
 3309 07aa 01       		.byte	0x1
 3310 07ab ED06     		.2byte	0x6ed
 3311 07ad 6B000000 		.4byte	0x6b
 3312 07b1 02       		.uleb128 0x2
 3313 07b2 91       		.byte	0x91
 3314 07b3 6A       		.sleb128 -22
 3315 07b4 00       		.byte	0
 3316 07b5 0F       		.uleb128 0xf
 3317 07b6 30080000 		.4byte	.LASF78
 3318 07ba 01       		.byte	0x1
 3319 07bb A207     		.2byte	0x7a2
 3320 07bd 76000000 		.4byte	0x76
 3321 07c1 00000000 		.4byte	.LFB57
 3322 07c5 84000000 		.4byte	.LFE57-.LFB57
 3323 07c9 01       		.uleb128 0x1
 3324 07ca 9C       		.byte	0x9c
 3325 07cb 1B080000 		.4byte	0x81b
 3326 07cf 0C       		.uleb128 0xc
 3327 07d0 73060000 		.4byte	.LASF29
 3328 07d4 01       		.byte	0x1
 3329 07d5 A207     		.2byte	0x7a2
 3330 07d7 81000000 		.4byte	0x81
 3331 07db 02       		.uleb128 0x2
 3332 07dc 91       		.byte	0x91
 3333 07dd 64       		.sleb128 -28
 3334 07de 0B       		.uleb128 0xb
 3335 07df E8060000 		.4byte	.LASF63
 3336 07e3 01       		.byte	0x1
 3337 07e4 B107     		.2byte	0x7b1
 3338 07e6 6B000000 		.4byte	0x6b
 3339 07ea 02       		.uleb128 0x2
 3340 07eb 91       		.byte	0x91
 3341 07ec 6B       		.sleb128 -21
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 109


 3342 07ed 0B       		.uleb128 0xb
 3343 07ee 07030000 		.4byte	.LASF71
 3344 07f2 01       		.byte	0x1
 3345 07f3 B207     		.2byte	0x7b2
 3346 07f5 76000000 		.4byte	0x76
 3347 07f9 02       		.uleb128 0x2
 3348 07fa 91       		.byte	0x91
 3349 07fb 6E       		.sleb128 -18
 3350 07fc 0B       		.uleb128 0xb
 3351 07fd 9E020000 		.4byte	.LASF61
 3352 0801 01       		.byte	0x1
 3353 0802 B307     		.2byte	0x7b3
 3354 0804 6B000000 		.4byte	0x6b
 3355 0808 02       		.uleb128 0x2
 3356 0809 91       		.byte	0x91
 3357 080a 6D       		.sleb128 -19
 3358 080b 0B       		.uleb128 0xb
 3359 080c 00000000 		.4byte	.LASF62
 3360 0810 01       		.byte	0x1
 3361 0811 B407     		.2byte	0x7b4
 3362 0813 6B000000 		.4byte	0x6b
 3363 0817 02       		.uleb128 0x2
 3364 0818 91       		.byte	0x91
 3365 0819 6C       		.sleb128 -20
 3366 081a 00       		.byte	0
 3367 081b 0D       		.uleb128 0xd
 3368 081c F8070000 		.4byte	.LASF79
 3369 0820 01       		.byte	0x1
 3370 0821 C709     		.2byte	0x9c7
 3371 0823 76000000 		.4byte	0x76
 3372 0827 00000000 		.4byte	.LFB58
 3373 082b 3C000000 		.4byte	.LFE58-.LFB58
 3374 082f 01       		.uleb128 0x1
 3375 0830 9C       		.byte	0x9c
 3376 0831 61080000 		.4byte	0x861
 3377 0835 12       		.uleb128 0x12
 3378 0836 783100   		.ascii	"x1\000"
 3379 0839 01       		.byte	0x1
 3380 083a C709     		.2byte	0x9c7
 3381 083c 76000000 		.4byte	0x76
 3382 0840 02       		.uleb128 0x2
 3383 0841 91       		.byte	0x91
 3384 0842 6E       		.sleb128 -18
 3385 0843 12       		.uleb128 0x12
 3386 0844 783200   		.ascii	"x2\000"
 3387 0847 01       		.byte	0x1
 3388 0848 C709     		.2byte	0x9c7
 3389 084a 76000000 		.4byte	0x76
 3390 084e 02       		.uleb128 0x2
 3391 084f 91       		.byte	0x91
 3392 0850 6C       		.sleb128 -20
 3393 0851 0A       		.uleb128 0xa
 3394 0852 746D7000 		.ascii	"tmp\000"
 3395 0856 01       		.byte	0x1
 3396 0857 C909     		.2byte	0x9c9
 3397 0859 81000000 		.4byte	0x81
 3398 085d 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 110


 3399 085e 91       		.byte	0x91
 3400 085f 74       		.sleb128 -12
 3401 0860 00       		.byte	0
 3402 0861 0D       		.uleb128 0xd
 3403 0862 B2060000 		.4byte	.LASF80
 3404 0866 01       		.byte	0x1
 3405 0867 B00A     		.2byte	0xab0
 3406 0869 81000000 		.4byte	0x81
 3407 086d 00000000 		.4byte	.LFB59
 3408 0871 1C000000 		.4byte	.LFE59-.LFB59
 3409 0875 01       		.uleb128 0x1
 3410 0876 9C       		.byte	0x9c
 3411 0877 8B080000 		.4byte	0x88b
 3412 087b 0C       		.uleb128 0xc
 3413 087c 56030000 		.4byte	.LASF20
 3414 0880 01       		.byte	0x1
 3415 0881 B00A     		.2byte	0xab0
 3416 0883 81000000 		.4byte	0x81
 3417 0887 02       		.uleb128 0x2
 3418 0888 91       		.byte	0x91
 3419 0889 74       		.sleb128 -12
 3420 088a 00       		.byte	0
 3421 088b 0D       		.uleb128 0xd
 3422 088c 68000000 		.4byte	.LASF81
 3423 0890 01       		.byte	0x1
 3424 0891 CA0A     		.2byte	0xaca
 3425 0893 6B000000 		.4byte	0x6b
 3426 0897 00000000 		.4byte	.LFB60
 3427 089b 1C000000 		.4byte	.LFE60-.LFB60
 3428 089f 01       		.uleb128 0x1
 3429 08a0 9C       		.byte	0x9c
 3430 08a1 B5080000 		.4byte	0x8b5
 3431 08a5 0C       		.uleb128 0xc
 3432 08a6 56030000 		.4byte	.LASF20
 3433 08aa 01       		.byte	0x1
 3434 08ab CA0A     		.2byte	0xaca
 3435 08ad 81000000 		.4byte	0x81
 3436 08b1 02       		.uleb128 0x2
 3437 08b2 91       		.byte	0x91
 3438 08b3 74       		.sleb128 -12
 3439 08b4 00       		.byte	0
 3440 08b5 0D       		.uleb128 0xd
 3441 08b6 5C040000 		.4byte	.LASF82
 3442 08ba 01       		.byte	0x1
 3443 08bb E40A     		.2byte	0xae4
 3444 08bd 6B000000 		.4byte	0x6b
 3445 08c1 00000000 		.4byte	.LFB61
 3446 08c5 12000000 		.4byte	.LFE61-.LFB61
 3447 08c9 01       		.uleb128 0x1
 3448 08ca 9C       		.byte	0x9c
 3449 08cb DF080000 		.4byte	0x8df
 3450 08cf 0C       		.uleb128 0xc
 3451 08d0 73060000 		.4byte	.LASF29
 3452 08d4 01       		.byte	0x1
 3453 08d5 E40A     		.2byte	0xae4
 3454 08d7 81000000 		.4byte	0x81
 3455 08db 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 111


 3456 08dc 91       		.byte	0x91
 3457 08dd 74       		.sleb128 -12
 3458 08de 00       		.byte	0
 3459 08df 10       		.uleb128 0x10
 3460 08e0 76000000 		.4byte	0x76
 3461 08e4 EF080000 		.4byte	0x8ef
 3462 08e8 11       		.uleb128 0x11
 3463 08e9 B7000000 		.4byte	0xb7
 3464 08ed 00       		.byte	0
 3465 08ee 00       		.byte	0
 3466 08ef 13       		.uleb128 0x13
 3467 08f0 4A010000 		.4byte	.LASF83
 3468 08f4 01       		.byte	0x1
 3469 08f5 61       		.byte	0x61
 3470 08f6 00090000 		.4byte	0x900
 3471 08fa 05       		.uleb128 0x5
 3472 08fb 03       		.byte	0x3
 3473 08fc 18000000 		.4byte	CapSense_1_centroidMult
 3474 0900 14       		.uleb128 0x14
 3475 0901 DF080000 		.4byte	0x8df
 3476 0905 13       		.uleb128 0x13
 3477 0906 16080000 		.4byte	.LASF84
 3478 090a 01       		.byte	0x1
 3479 090b 65       		.byte	0x65
 3480 090c 16090000 		.4byte	0x916
 3481 0910 05       		.uleb128 0x5
 3482 0911 03       		.byte	0x3
 3483 0912 1C000000 		.4byte	CapSense_1_posFiltersMask
 3484 0916 14       		.uleb128 0x14
 3485 0917 98040000 		.4byte	0x498
 3486 091b 13       		.uleb128 0x13
 3487 091c 0B040000 		.4byte	.LASF85
 3488 0920 01       		.byte	0x1
 3489 0921 69       		.byte	0x69
 3490 0922 12070000 		.4byte	0x712
 3491 0926 05       		.uleb128 0x5
 3492 0927 03       		.byte	0x3
 3493 0928 08000000 		.4byte	CapSense_1_posFiltersData
 3494 092c 10       		.uleb128 0x10
 3495 092d 76000000 		.4byte	0x76
 3496 0931 3C090000 		.4byte	0x93c
 3497 0935 11       		.uleb128 0x11
 3498 0936 B7000000 		.4byte	0xb7
 3499 093a 04       		.byte	0x4
 3500 093b 00       		.byte	0
 3501 093c 15       		.uleb128 0x15
 3502 093d 12010000 		.4byte	.LASF86
 3503 0941 01       		.byte	0x1
 3504 0942 2C       		.byte	0x2c
 3505 0943 2C090000 		.4byte	0x92c
 3506 0947 15       		.uleb128 0x15
 3507 0948 C5030000 		.4byte	.LASF87
 3508 094c 01       		.byte	0x1
 3509 094d 2D       		.byte	0x2d
 3510 094e 98040000 		.4byte	0x498
 3511 0952 10       		.uleb128 0x10
 3512 0953 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 112


 3513 0957 62090000 		.4byte	0x962
 3514 095b 11       		.uleb128 0x11
 3515 095c B7000000 		.4byte	0xb7
 3516 0960 04       		.byte	0x4
 3517 0961 00       		.byte	0
 3518 0962 15       		.uleb128 0x15
 3519 0963 8F040000 		.4byte	.LASF88
 3520 0967 01       		.byte	0x1
 3521 0968 2E       		.byte	0x2e
 3522 0969 6D090000 		.4byte	0x96d
 3523 096d 14       		.uleb128 0x14
 3524 096e 52090000 		.4byte	0x952
 3525 0972 16       		.uleb128 0x16
 3526 0973 C0070000 		.4byte	.LASF89
 3527 0977 01       		.byte	0x1
 3528 0978 34       		.byte	0x34
 3529 0979 2C090000 		.4byte	0x92c
 3530 097d 05       		.uleb128 0x5
 3531 097e 03       		.byte	0x3
 3532 097f 00000000 		.4byte	CapSense_1_sensorBaseline
 3533 0983 16       		.uleb128 0x16
 3534 0984 62070000 		.4byte	.LASF90
 3535 0988 01       		.byte	0x1
 3536 0989 35       		.byte	0x35
 3537 098a 52090000 		.4byte	0x952
 3538 098e 05       		.uleb128 0x5
 3539 098f 03       		.byte	0x3
 3540 0990 00000000 		.4byte	CapSense_1_sensorBaselineLow
 3541 0994 16       		.uleb128 0x16
 3542 0995 9A060000 		.4byte	.LASF91
 3543 0999 01       		.byte	0x1
 3544 099a 36       		.byte	0x36
 3545 099b 52090000 		.4byte	0x952
 3546 099f 05       		.uleb128 0x5
 3547 09a0 03       		.byte	0x3
 3548 09a1 00000000 		.4byte	CapSense_1_sensorSignal
 3549 09a5 16       		.uleb128 0x16
 3550 09a6 CD050000 		.4byte	.LASF92
 3551 09aa 01       		.byte	0x1
 3552 09ab 37       		.byte	0x37
 3553 09ac 98040000 		.4byte	0x498
 3554 09b0 05       		.uleb128 0x5
 3555 09b1 03       		.byte	0x3
 3556 09b2 00000000 		.4byte	CapSense_1_sensorOnMask
 3557 09b6 16       		.uleb128 0x16
 3558 09b7 25040000 		.4byte	.LASF93
 3559 09bb 01       		.byte	0x1
 3560 09bc 39       		.byte	0x39
 3561 09bd 52090000 		.4byte	0x952
 3562 09c1 05       		.uleb128 0x5
 3563 09c2 03       		.byte	0x3
 3564 09c3 00000000 		.4byte	CapSense_1_lowBaselineResetCnt
 3565 09c7 16       		.uleb128 0x16
 3566 09c8 ED040000 		.4byte	.LASF94
 3567 09cc 01       		.byte	0x1
 3568 09cd 3A       		.byte	0x3a
 3569 09ce 52090000 		.4byte	0x952
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 113


 3570 09d2 05       		.uleb128 0x5
 3571 09d3 03       		.byte	0x3
 3572 09d4 00000000 		.4byte	CapSense_1_lowBaselineReset
 3573 09d8 16       		.uleb128 0x16
 3574 09d9 1C070000 		.4byte	.LASF95
 3575 09dd 01       		.byte	0x1
 3576 09de 49       		.byte	0x49
 3577 09df E9090000 		.4byte	0x9e9
 3578 09e3 05       		.uleb128 0x5
 3579 09e4 03       		.byte	0x3
 3580 09e5 00000000 		.4byte	CapSense_1_fingerThreshold
 3581 09e9 14       		.uleb128 0x14
 3582 09ea 98040000 		.4byte	0x498
 3583 09ee 16       		.uleb128 0x16
 3584 09ef E4000000 		.4byte	.LASF96
 3585 09f3 01       		.byte	0x1
 3586 09f4 4D       		.byte	0x4d
 3587 09f5 FF090000 		.4byte	0x9ff
 3588 09f9 05       		.uleb128 0x5
 3589 09fa 03       		.byte	0x3
 3590 09fb 00000000 		.4byte	CapSense_1_noiseThreshold
 3591 09ff 14       		.uleb128 0x14
 3592 0a00 98040000 		.4byte	0x498
 3593 0a04 16       		.uleb128 0x16
 3594 0a05 A5020000 		.4byte	.LASF97
 3595 0a09 01       		.byte	0x1
 3596 0a0a 51       		.byte	0x51
 3597 0a0b 150A0000 		.4byte	0xa15
 3598 0a0f 05       		.uleb128 0x5
 3599 0a10 03       		.byte	0x3
 3600 0a11 00000000 		.4byte	CapSense_1_hysteresis
 3601 0a15 14       		.uleb128 0x14
 3602 0a16 98040000 		.4byte	0x498
 3603 0a1a 16       		.uleb128 0x16
 3604 0a1b FE000000 		.4byte	.LASF98
 3605 0a1f 01       		.byte	0x1
 3606 0a20 55       		.byte	0x55
 3607 0a21 2B0A0000 		.4byte	0xa2b
 3608 0a25 05       		.uleb128 0x5
 3609 0a26 03       		.byte	0x3
 3610 0a27 00000000 		.4byte	CapSense_1_debounce
 3611 0a2b 14       		.uleb128 0x14
 3612 0a2c 98040000 		.4byte	0x498
 3613 0a30 16       		.uleb128 0x16
 3614 0a31 BB020000 		.4byte	.LASF99
 3615 0a35 01       		.byte	0x1
 3616 0a36 59       		.byte	0x59
 3617 0a37 410A0000 		.4byte	0xa41
 3618 0a3b 05       		.uleb128 0x5
 3619 0a3c 03       		.byte	0x3
 3620 0a3d 00000000 		.4byte	CapSense_1_rawDataIndex
 3621 0a41 14       		.uleb128 0x14
 3622 0a42 98040000 		.4byte	0x498
 3623 0a46 16       		.uleb128 0x16
 3624 0a47 8A030000 		.4byte	.LASF100
 3625 0a4b 01       		.byte	0x1
 3626 0a4c 5D       		.byte	0x5d
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 114


 3627 0a4d 570A0000 		.4byte	0xa57
 3628 0a51 05       		.uleb128 0x5
 3629 0a52 03       		.byte	0x3
 3630 0a53 00000000 		.4byte	CapSense_1_numberOfSensors
 3631 0a57 14       		.uleb128 0x14
 3632 0a58 98040000 		.4byte	0x498
 3633 0a5c 00       		.byte	0
 3634              		.section	.debug_abbrev,"",%progbits
 3635              	.Ldebug_abbrev0:
 3636 0000 01       		.uleb128 0x1
 3637 0001 11       		.uleb128 0x11
 3638 0002 01       		.byte	0x1
 3639 0003 25       		.uleb128 0x25
 3640 0004 0E       		.uleb128 0xe
 3641 0005 13       		.uleb128 0x13
 3642 0006 0B       		.uleb128 0xb
 3643 0007 03       		.uleb128 0x3
 3644 0008 0E       		.uleb128 0xe
 3645 0009 1B       		.uleb128 0x1b
 3646 000a 0E       		.uleb128 0xe
 3647 000b 55       		.uleb128 0x55
 3648 000c 17       		.uleb128 0x17
 3649 000d 11       		.uleb128 0x11
 3650 000e 01       		.uleb128 0x1
 3651 000f 10       		.uleb128 0x10
 3652 0010 17       		.uleb128 0x17
 3653 0011 00       		.byte	0
 3654 0012 00       		.byte	0
 3655 0013 02       		.uleb128 0x2
 3656 0014 24       		.uleb128 0x24
 3657 0015 00       		.byte	0
 3658 0016 0B       		.uleb128 0xb
 3659 0017 0B       		.uleb128 0xb
 3660 0018 3E       		.uleb128 0x3e
 3661 0019 0B       		.uleb128 0xb
 3662 001a 03       		.uleb128 0x3
 3663 001b 0E       		.uleb128 0xe
 3664 001c 00       		.byte	0
 3665 001d 00       		.byte	0
 3666 001e 03       		.uleb128 0x3
 3667 001f 24       		.uleb128 0x24
 3668 0020 00       		.byte	0
 3669 0021 0B       		.uleb128 0xb
 3670 0022 0B       		.uleb128 0xb
 3671 0023 3E       		.uleb128 0x3e
 3672 0024 0B       		.uleb128 0xb
 3673 0025 03       		.uleb128 0x3
 3674 0026 08       		.uleb128 0x8
 3675 0027 00       		.byte	0
 3676 0028 00       		.byte	0
 3677 0029 04       		.uleb128 0x4
 3678 002a 16       		.uleb128 0x16
 3679 002b 00       		.byte	0
 3680 002c 03       		.uleb128 0x3
 3681 002d 0E       		.uleb128 0xe
 3682 002e 3A       		.uleb128 0x3a
 3683 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 115


 3684 0030 3B       		.uleb128 0x3b
 3685 0031 0B       		.uleb128 0xb
 3686 0032 49       		.uleb128 0x49
 3687 0033 13       		.uleb128 0x13
 3688 0034 00       		.byte	0
 3689 0035 00       		.byte	0
 3690 0036 05       		.uleb128 0x5
 3691 0037 0F       		.uleb128 0xf
 3692 0038 00       		.byte	0
 3693 0039 0B       		.uleb128 0xb
 3694 003a 0B       		.uleb128 0xb
 3695 003b 49       		.uleb128 0x49
 3696 003c 13       		.uleb128 0x13
 3697 003d 00       		.byte	0
 3698 003e 00       		.byte	0
 3699 003f 06       		.uleb128 0x6
 3700 0040 2E       		.uleb128 0x2e
 3701 0041 01       		.byte	0x1
 3702 0042 3F       		.uleb128 0x3f
 3703 0043 19       		.uleb128 0x19
 3704 0044 03       		.uleb128 0x3
 3705 0045 0E       		.uleb128 0xe
 3706 0046 3A       		.uleb128 0x3a
 3707 0047 0B       		.uleb128 0xb
 3708 0048 3B       		.uleb128 0x3b
 3709 0049 0B       		.uleb128 0xb
 3710 004a 27       		.uleb128 0x27
 3711 004b 19       		.uleb128 0x19
 3712 004c 11       		.uleb128 0x11
 3713 004d 01       		.uleb128 0x1
 3714 004e 12       		.uleb128 0x12
 3715 004f 06       		.uleb128 0x6
 3716 0050 40       		.uleb128 0x40
 3717 0051 18       		.uleb128 0x18
 3718 0052 9742     		.uleb128 0x2117
 3719 0054 19       		.uleb128 0x19
 3720 0055 01       		.uleb128 0x1
 3721 0056 13       		.uleb128 0x13
 3722 0057 00       		.byte	0
 3723 0058 00       		.byte	0
 3724 0059 07       		.uleb128 0x7
 3725 005a 05       		.uleb128 0x5
 3726 005b 00       		.byte	0
 3727 005c 03       		.uleb128 0x3
 3728 005d 0E       		.uleb128 0xe
 3729 005e 3A       		.uleb128 0x3a
 3730 005f 0B       		.uleb128 0xb
 3731 0060 3B       		.uleb128 0x3b
 3732 0061 0B       		.uleb128 0xb
 3733 0062 49       		.uleb128 0x49
 3734 0063 13       		.uleb128 0x13
 3735 0064 02       		.uleb128 0x2
 3736 0065 18       		.uleb128 0x18
 3737 0066 00       		.byte	0
 3738 0067 00       		.byte	0
 3739 0068 08       		.uleb128 0x8
 3740 0069 2E       		.uleb128 0x2e
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 116


 3741 006a 01       		.byte	0x1
 3742 006b 3F       		.uleb128 0x3f
 3743 006c 19       		.uleb128 0x19
 3744 006d 03       		.uleb128 0x3
 3745 006e 0E       		.uleb128 0xe
 3746 006f 3A       		.uleb128 0x3a
 3747 0070 0B       		.uleb128 0xb
 3748 0071 3B       		.uleb128 0x3b
 3749 0072 0B       		.uleb128 0xb
 3750 0073 27       		.uleb128 0x27
 3751 0074 19       		.uleb128 0x19
 3752 0075 11       		.uleb128 0x11
 3753 0076 01       		.uleb128 0x1
 3754 0077 12       		.uleb128 0x12
 3755 0078 06       		.uleb128 0x6
 3756 0079 40       		.uleb128 0x40
 3757 007a 18       		.uleb128 0x18
 3758 007b 9642     		.uleb128 0x2116
 3759 007d 19       		.uleb128 0x19
 3760 007e 01       		.uleb128 0x1
 3761 007f 13       		.uleb128 0x13
 3762 0080 00       		.byte	0
 3763 0081 00       		.byte	0
 3764 0082 09       		.uleb128 0x9
 3765 0083 2E       		.uleb128 0x2e
 3766 0084 01       		.byte	0x1
 3767 0085 3F       		.uleb128 0x3f
 3768 0086 19       		.uleb128 0x19
 3769 0087 03       		.uleb128 0x3
 3770 0088 0E       		.uleb128 0xe
 3771 0089 3A       		.uleb128 0x3a
 3772 008a 0B       		.uleb128 0xb
 3773 008b 3B       		.uleb128 0x3b
 3774 008c 05       		.uleb128 0x5
 3775 008d 27       		.uleb128 0x27
 3776 008e 19       		.uleb128 0x19
 3777 008f 11       		.uleb128 0x11
 3778 0090 01       		.uleb128 0x1
 3779 0091 12       		.uleb128 0x12
 3780 0092 06       		.uleb128 0x6
 3781 0093 40       		.uleb128 0x40
 3782 0094 18       		.uleb128 0x18
 3783 0095 9642     		.uleb128 0x2116
 3784 0097 19       		.uleb128 0x19
 3785 0098 01       		.uleb128 0x1
 3786 0099 13       		.uleb128 0x13
 3787 009a 00       		.byte	0
 3788 009b 00       		.byte	0
 3789 009c 0A       		.uleb128 0xa
 3790 009d 34       		.uleb128 0x34
 3791 009e 00       		.byte	0
 3792 009f 03       		.uleb128 0x3
 3793 00a0 08       		.uleb128 0x8
 3794 00a1 3A       		.uleb128 0x3a
 3795 00a2 0B       		.uleb128 0xb
 3796 00a3 3B       		.uleb128 0x3b
 3797 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 117


 3798 00a5 49       		.uleb128 0x49
 3799 00a6 13       		.uleb128 0x13
 3800 00a7 02       		.uleb128 0x2
 3801 00a8 18       		.uleb128 0x18
 3802 00a9 00       		.byte	0
 3803 00aa 00       		.byte	0
 3804 00ab 0B       		.uleb128 0xb
 3805 00ac 34       		.uleb128 0x34
 3806 00ad 00       		.byte	0
 3807 00ae 03       		.uleb128 0x3
 3808 00af 0E       		.uleb128 0xe
 3809 00b0 3A       		.uleb128 0x3a
 3810 00b1 0B       		.uleb128 0xb
 3811 00b2 3B       		.uleb128 0x3b
 3812 00b3 05       		.uleb128 0x5
 3813 00b4 49       		.uleb128 0x49
 3814 00b5 13       		.uleb128 0x13
 3815 00b6 02       		.uleb128 0x2
 3816 00b7 18       		.uleb128 0x18
 3817 00b8 00       		.byte	0
 3818 00b9 00       		.byte	0
 3819 00ba 0C       		.uleb128 0xc
 3820 00bb 05       		.uleb128 0x5
 3821 00bc 00       		.byte	0
 3822 00bd 03       		.uleb128 0x3
 3823 00be 0E       		.uleb128 0xe
 3824 00bf 3A       		.uleb128 0x3a
 3825 00c0 0B       		.uleb128 0xb
 3826 00c1 3B       		.uleb128 0x3b
 3827 00c2 05       		.uleb128 0x5
 3828 00c3 49       		.uleb128 0x49
 3829 00c4 13       		.uleb128 0x13
 3830 00c5 02       		.uleb128 0x2
 3831 00c6 18       		.uleb128 0x18
 3832 00c7 00       		.byte	0
 3833 00c8 00       		.byte	0
 3834 00c9 0D       		.uleb128 0xd
 3835 00ca 2E       		.uleb128 0x2e
 3836 00cb 01       		.byte	0x1
 3837 00cc 3F       		.uleb128 0x3f
 3838 00cd 19       		.uleb128 0x19
 3839 00ce 03       		.uleb128 0x3
 3840 00cf 0E       		.uleb128 0xe
 3841 00d0 3A       		.uleb128 0x3a
 3842 00d1 0B       		.uleb128 0xb
 3843 00d2 3B       		.uleb128 0x3b
 3844 00d3 05       		.uleb128 0x5
 3845 00d4 27       		.uleb128 0x27
 3846 00d5 19       		.uleb128 0x19
 3847 00d6 49       		.uleb128 0x49
 3848 00d7 13       		.uleb128 0x13
 3849 00d8 11       		.uleb128 0x11
 3850 00d9 01       		.uleb128 0x1
 3851 00da 12       		.uleb128 0x12
 3852 00db 06       		.uleb128 0x6
 3853 00dc 40       		.uleb128 0x40
 3854 00dd 18       		.uleb128 0x18
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 118


 3855 00de 9742     		.uleb128 0x2117
 3856 00e0 19       		.uleb128 0x19
 3857 00e1 01       		.uleb128 0x1
 3858 00e2 13       		.uleb128 0x13
 3859 00e3 00       		.byte	0
 3860 00e4 00       		.byte	0
 3861 00e5 0E       		.uleb128 0xe
 3862 00e6 2E       		.uleb128 0x2e
 3863 00e7 01       		.byte	0x1
 3864 00e8 3F       		.uleb128 0x3f
 3865 00e9 19       		.uleb128 0x19
 3866 00ea 03       		.uleb128 0x3
 3867 00eb 0E       		.uleb128 0xe
 3868 00ec 3A       		.uleb128 0x3a
 3869 00ed 0B       		.uleb128 0xb
 3870 00ee 3B       		.uleb128 0x3b
 3871 00ef 05       		.uleb128 0x5
 3872 00f0 27       		.uleb128 0x27
 3873 00f1 19       		.uleb128 0x19
 3874 00f2 11       		.uleb128 0x11
 3875 00f3 01       		.uleb128 0x1
 3876 00f4 12       		.uleb128 0x12
 3877 00f5 06       		.uleb128 0x6
 3878 00f6 40       		.uleb128 0x40
 3879 00f7 18       		.uleb128 0x18
 3880 00f8 9742     		.uleb128 0x2117
 3881 00fa 19       		.uleb128 0x19
 3882 00fb 01       		.uleb128 0x1
 3883 00fc 13       		.uleb128 0x13
 3884 00fd 00       		.byte	0
 3885 00fe 00       		.byte	0
 3886 00ff 0F       		.uleb128 0xf
 3887 0100 2E       		.uleb128 0x2e
 3888 0101 01       		.byte	0x1
 3889 0102 3F       		.uleb128 0x3f
 3890 0103 19       		.uleb128 0x19
 3891 0104 03       		.uleb128 0x3
 3892 0105 0E       		.uleb128 0xe
 3893 0106 3A       		.uleb128 0x3a
 3894 0107 0B       		.uleb128 0xb
 3895 0108 3B       		.uleb128 0x3b
 3896 0109 05       		.uleb128 0x5
 3897 010a 27       		.uleb128 0x27
 3898 010b 19       		.uleb128 0x19
 3899 010c 49       		.uleb128 0x49
 3900 010d 13       		.uleb128 0x13
 3901 010e 11       		.uleb128 0x11
 3902 010f 01       		.uleb128 0x1
 3903 0110 12       		.uleb128 0x12
 3904 0111 06       		.uleb128 0x6
 3905 0112 40       		.uleb128 0x40
 3906 0113 18       		.uleb128 0x18
 3907 0114 9642     		.uleb128 0x2116
 3908 0116 19       		.uleb128 0x19
 3909 0117 01       		.uleb128 0x1
 3910 0118 13       		.uleb128 0x13
 3911 0119 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 119


 3912 011a 00       		.byte	0
 3913 011b 10       		.uleb128 0x10
 3914 011c 01       		.uleb128 0x1
 3915 011d 01       		.byte	0x1
 3916 011e 49       		.uleb128 0x49
 3917 011f 13       		.uleb128 0x13
 3918 0120 01       		.uleb128 0x1
 3919 0121 13       		.uleb128 0x13
 3920 0122 00       		.byte	0
 3921 0123 00       		.byte	0
 3922 0124 11       		.uleb128 0x11
 3923 0125 21       		.uleb128 0x21
 3924 0126 00       		.byte	0
 3925 0127 49       		.uleb128 0x49
 3926 0128 13       		.uleb128 0x13
 3927 0129 2F       		.uleb128 0x2f
 3928 012a 0B       		.uleb128 0xb
 3929 012b 00       		.byte	0
 3930 012c 00       		.byte	0
 3931 012d 12       		.uleb128 0x12
 3932 012e 05       		.uleb128 0x5
 3933 012f 00       		.byte	0
 3934 0130 03       		.uleb128 0x3
 3935 0131 08       		.uleb128 0x8
 3936 0132 3A       		.uleb128 0x3a
 3937 0133 0B       		.uleb128 0xb
 3938 0134 3B       		.uleb128 0x3b
 3939 0135 05       		.uleb128 0x5
 3940 0136 49       		.uleb128 0x49
 3941 0137 13       		.uleb128 0x13
 3942 0138 02       		.uleb128 0x2
 3943 0139 18       		.uleb128 0x18
 3944 013a 00       		.byte	0
 3945 013b 00       		.byte	0
 3946 013c 13       		.uleb128 0x13
 3947 013d 34       		.uleb128 0x34
 3948 013e 00       		.byte	0
 3949 013f 03       		.uleb128 0x3
 3950 0140 0E       		.uleb128 0xe
 3951 0141 3A       		.uleb128 0x3a
 3952 0142 0B       		.uleb128 0xb
 3953 0143 3B       		.uleb128 0x3b
 3954 0144 0B       		.uleb128 0xb
 3955 0145 49       		.uleb128 0x49
 3956 0146 13       		.uleb128 0x13
 3957 0147 02       		.uleb128 0x2
 3958 0148 18       		.uleb128 0x18
 3959 0149 00       		.byte	0
 3960 014a 00       		.byte	0
 3961 014b 14       		.uleb128 0x14
 3962 014c 26       		.uleb128 0x26
 3963 014d 00       		.byte	0
 3964 014e 49       		.uleb128 0x49
 3965 014f 13       		.uleb128 0x13
 3966 0150 00       		.byte	0
 3967 0151 00       		.byte	0
 3968 0152 15       		.uleb128 0x15
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 120


 3969 0153 34       		.uleb128 0x34
 3970 0154 00       		.byte	0
 3971 0155 03       		.uleb128 0x3
 3972 0156 0E       		.uleb128 0xe
 3973 0157 3A       		.uleb128 0x3a
 3974 0158 0B       		.uleb128 0xb
 3975 0159 3B       		.uleb128 0x3b
 3976 015a 0B       		.uleb128 0xb
 3977 015b 49       		.uleb128 0x49
 3978 015c 13       		.uleb128 0x13
 3979 015d 3F       		.uleb128 0x3f
 3980 015e 19       		.uleb128 0x19
 3981 015f 3C       		.uleb128 0x3c
 3982 0160 19       		.uleb128 0x19
 3983 0161 00       		.byte	0
 3984 0162 00       		.byte	0
 3985 0163 16       		.uleb128 0x16
 3986 0164 34       		.uleb128 0x34
 3987 0165 00       		.byte	0
 3988 0166 03       		.uleb128 0x3
 3989 0167 0E       		.uleb128 0xe
 3990 0168 3A       		.uleb128 0x3a
 3991 0169 0B       		.uleb128 0xb
 3992 016a 3B       		.uleb128 0x3b
 3993 016b 0B       		.uleb128 0xb
 3994 016c 49       		.uleb128 0x49
 3995 016d 13       		.uleb128 0x13
 3996 016e 3F       		.uleb128 0x3f
 3997 016f 19       		.uleb128 0x19
 3998 0170 02       		.uleb128 0x2
 3999 0171 18       		.uleb128 0x18
 4000 0172 00       		.byte	0
 4001 0173 00       		.byte	0
 4002 0174 00       		.byte	0
 4003              		.section	.debug_aranges,"",%progbits
 4004 0000 FC000000 		.4byte	0xfc
 4005 0004 0200     		.2byte	0x2
 4006 0006 00000000 		.4byte	.Ldebug_info0
 4007 000a 04       		.byte	0x4
 4008 000b 00       		.byte	0
 4009 000c 0000     		.2byte	0
 4010 000e 0000     		.2byte	0
 4011 0010 00000000 		.4byte	.LFB33
 4012 0014 44000000 		.4byte	.LFE33-.LFB33
 4013 0018 00000000 		.4byte	.LFB34
 4014 001c 2A000000 		.4byte	.LFE34-.LFB34
 4015 0020 00000000 		.4byte	.LFB35
 4016 0024 26000000 		.4byte	.LFE35-.LFB35
 4017 0028 00000000 		.4byte	.LFB36
 4018 002c 50000000 		.4byte	.LFE36-.LFB36
 4019 0030 00000000 		.4byte	.LFB37
 4020 0034 B4010000 		.4byte	.LFE37-.LFB37
 4021 0038 00000000 		.4byte	.LFB38
 4022 003c 16000000 		.4byte	.LFE38-.LFB38
 4023 0040 00000000 		.4byte	.LFB39
 4024 0044 40000000 		.4byte	.LFE39-.LFB39
 4025 0048 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 121


 4026 004c 58000000 		.4byte	.LFE40-.LFB40
 4027 0050 00000000 		.4byte	.LFB41
 4028 0054 1C000000 		.4byte	.LFE41-.LFB41
 4029 0058 00000000 		.4byte	.LFB42
 4030 005c 24000000 		.4byte	.LFE42-.LFB42
 4031 0060 00000000 		.4byte	.LFB43
 4032 0064 1C000000 		.4byte	.LFE43-.LFB43
 4033 0068 00000000 		.4byte	.LFB44
 4034 006c 24000000 		.4byte	.LFE44-.LFB44
 4035 0070 00000000 		.4byte	.LFB45
 4036 0074 12000000 		.4byte	.LFE45-.LFB45
 4037 0078 00000000 		.4byte	.LFB46
 4038 007c 12000000 		.4byte	.LFE46-.LFB46
 4039 0080 00000000 		.4byte	.LFB47
 4040 0084 12000000 		.4byte	.LFE47-.LFB47
 4041 0088 00000000 		.4byte	.LFB48
 4042 008c 12000000 		.4byte	.LFE48-.LFB48
 4043 0090 00000000 		.4byte	.LFB49
 4044 0094 1C010000 		.4byte	.LFE49-.LFB49
 4045 0098 00000000 		.4byte	.LFB50
 4046 009c 44000000 		.4byte	.LFE50-.LFB50
 4047 00a0 00000000 		.4byte	.LFB51
 4048 00a4 38000000 		.4byte	.LFE51-.LFB51
 4049 00a8 00000000 		.4byte	.LFB52
 4050 00ac 5C000000 		.4byte	.LFE52-.LFB52
 4051 00b0 00000000 		.4byte	.LFB53
 4052 00b4 5C000000 		.4byte	.LFE53-.LFB53
 4053 00b8 00000000 		.4byte	.LFB54
 4054 00bc AC000000 		.4byte	.LFE54-.LFB54
 4055 00c0 00000000 		.4byte	.LFB55
 4056 00c4 94010000 		.4byte	.LFE55-.LFB55
 4057 00c8 00000000 		.4byte	.LFB56
 4058 00cc 3C010000 		.4byte	.LFE56-.LFB56
 4059 00d0 00000000 		.4byte	.LFB57
 4060 00d4 84000000 		.4byte	.LFE57-.LFB57
 4061 00d8 00000000 		.4byte	.LFB58
 4062 00dc 3C000000 		.4byte	.LFE58-.LFB58
 4063 00e0 00000000 		.4byte	.LFB59
 4064 00e4 1C000000 		.4byte	.LFE59-.LFB59
 4065 00e8 00000000 		.4byte	.LFB60
 4066 00ec 1C000000 		.4byte	.LFE60-.LFB60
 4067 00f0 00000000 		.4byte	.LFB61
 4068 00f4 12000000 		.4byte	.LFE61-.LFB61
 4069 00f8 00000000 		.4byte	0
 4070 00fc 00000000 		.4byte	0
 4071              		.section	.debug_ranges,"",%progbits
 4072              	.Ldebug_ranges0:
 4073 0000 00000000 		.4byte	.LFB33
 4074 0004 44000000 		.4byte	.LFE33
 4075 0008 00000000 		.4byte	.LFB34
 4076 000c 2A000000 		.4byte	.LFE34
 4077 0010 00000000 		.4byte	.LFB35
 4078 0014 26000000 		.4byte	.LFE35
 4079 0018 00000000 		.4byte	.LFB36
 4080 001c 50000000 		.4byte	.LFE36
 4081 0020 00000000 		.4byte	.LFB37
 4082 0024 B4010000 		.4byte	.LFE37
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 122


 4083 0028 00000000 		.4byte	.LFB38
 4084 002c 16000000 		.4byte	.LFE38
 4085 0030 00000000 		.4byte	.LFB39
 4086 0034 40000000 		.4byte	.LFE39
 4087 0038 00000000 		.4byte	.LFB40
 4088 003c 58000000 		.4byte	.LFE40
 4089 0040 00000000 		.4byte	.LFB41
 4090 0044 1C000000 		.4byte	.LFE41
 4091 0048 00000000 		.4byte	.LFB42
 4092 004c 24000000 		.4byte	.LFE42
 4093 0050 00000000 		.4byte	.LFB43
 4094 0054 1C000000 		.4byte	.LFE43
 4095 0058 00000000 		.4byte	.LFB44
 4096 005c 24000000 		.4byte	.LFE44
 4097 0060 00000000 		.4byte	.LFB45
 4098 0064 12000000 		.4byte	.LFE45
 4099 0068 00000000 		.4byte	.LFB46
 4100 006c 12000000 		.4byte	.LFE46
 4101 0070 00000000 		.4byte	.LFB47
 4102 0074 12000000 		.4byte	.LFE47
 4103 0078 00000000 		.4byte	.LFB48
 4104 007c 12000000 		.4byte	.LFE48
 4105 0080 00000000 		.4byte	.LFB49
 4106 0084 1C010000 		.4byte	.LFE49
 4107 0088 00000000 		.4byte	.LFB50
 4108 008c 44000000 		.4byte	.LFE50
 4109 0090 00000000 		.4byte	.LFB51
 4110 0094 38000000 		.4byte	.LFE51
 4111 0098 00000000 		.4byte	.LFB52
 4112 009c 5C000000 		.4byte	.LFE52
 4113 00a0 00000000 		.4byte	.LFB53
 4114 00a4 5C000000 		.4byte	.LFE53
 4115 00a8 00000000 		.4byte	.LFB54
 4116 00ac AC000000 		.4byte	.LFE54
 4117 00b0 00000000 		.4byte	.LFB55
 4118 00b4 94010000 		.4byte	.LFE55
 4119 00b8 00000000 		.4byte	.LFB56
 4120 00bc 3C010000 		.4byte	.LFE56
 4121 00c0 00000000 		.4byte	.LFB57
 4122 00c4 84000000 		.4byte	.LFE57
 4123 00c8 00000000 		.4byte	.LFB58
 4124 00cc 3C000000 		.4byte	.LFE58
 4125 00d0 00000000 		.4byte	.LFB59
 4126 00d4 1C000000 		.4byte	.LFE59
 4127 00d8 00000000 		.4byte	.LFB60
 4128 00dc 1C000000 		.4byte	.LFE60
 4129 00e0 00000000 		.4byte	.LFB61
 4130 00e4 12000000 		.4byte	.LFE61
 4131 00e8 00000000 		.4byte	0
 4132 00ec 00000000 		.4byte	0
 4133              		.section	.debug_line,"",%progbits
 4134              	.Ldebug_line0:
 4135 0000 BD030000 		.section	.debug_str,"MS",%progbits,1
 4135      02004E00 
 4135      00000201 
 4135      FB0E0D00 
 4135      01010101 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 123


 4136              	.LASF62:
 4137 0000 636F756E 		.ascii	"count\000"
 4137      7400
 4138              	.LASF10:
 4139 0006 75696E74 		.ascii	"uint16\000"
 4139      313600
 4140              	.LASF28:
 4141 000d 66696C74 		.ascii	"filteredRawData\000"
 4141      65726564 
 4141      52617744 
 4141      61746100 
 4142              	.LASF50:
 4143 001d 66696E67 		.ascii	"fingerThreshold\000"
 4143      65725468 
 4143      72657368 
 4143      6F6C6400 
 4144              	.LASF64:
 4145 002d 74656D70 		.ascii	"temp\000"
 4145      00
 4146              	.LASF21:
 4147 0032 43617053 		.ascii	"CapSense_1_InitializeAllBaselines\000"
 4147      656E7365 
 4147      5F315F49 
 4147      6E697469 
 4147      616C697A 
 4148              	.LASF18:
 4149 0054 43617053 		.ascii	"CapSense_1_BaseInit\000"
 4149      656E7365 
 4149      5F315F42 
 4149      61736549 
 4149      6E697400 
 4150              	.LASF81:
 4151 0068 43617053 		.ascii	"CapSense_1_GetLowBaselineReset\000"
 4151      656E7365 
 4151      5F315F47 
 4151      65744C6F 
 4151      77426173 
 4152              	.LASF7:
 4153 0087 6C6F6E67 		.ascii	"long long unsigned int\000"
 4153      206C6F6E 
 4153      6720756E 
 4153      7369676E 
 4153      65642069 
 4154              	.LASF58:
 4155 009e 43617053 		.ascii	"CapSense_1_EnableWidget\000"
 4155      656E7365 
 4155      5F315F45 
 4155      6E61626C 
 4155      65576964 
 4156              	.LASF76:
 4157 00b6 66697273 		.ascii	"firstTimeIndex\000"
 4157      7454696D 
 4157      65496E64 
 4157      657800
 4158              	.LASF53:
 4159 00c5 43617053 		.ascii	"CapSense_1_CheckIsWidgetActive\000"
 4159      656E7365 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 124


 4159      5F315F43 
 4159      6865636B 
 4159      49735769 
 4160              	.LASF96:
 4161 00e4 43617053 		.ascii	"CapSense_1_noiseThreshold\000"
 4161      656E7365 
 4161      5F315F6E 
 4161      6F697365 
 4161      54687265 
 4162              	.LASF98:
 4163 00fe 43617053 		.ascii	"CapSense_1_debounce\000"
 4163      656E7365 
 4163      5F315F64 
 4163      65626F75 
 4163      6E636500 
 4164              	.LASF86:
 4165 0112 43617053 		.ascii	"CapSense_1_sensorRaw\000"
 4165      656E7365 
 4165      5F315F73 
 4165      656E736F 
 4165      72526177 
 4166              	.LASF6:
 4167 0127 6C6F6E67 		.ascii	"long long int\000"
 4167      206C6F6E 
 4167      6720696E 
 4167      7400
 4168              	.LASF0:
 4169 0135 7369676E 		.ascii	"signed char\000"
 4169      65642063 
 4169      68617200 
 4170              	.LASF54:
 4171 0141 72617749 		.ascii	"rawIndex\000"
 4171      6E646578 
 4171      00
 4172              	.LASF83:
 4173 014a 43617053 		.ascii	"CapSense_1_centroidMult\000"
 4173      656E7365 
 4173      5F315F63 
 4173      656E7472 
 4173      6F69644D 
 4174              	.LASF70:
 4175 0162 43617053 		.ascii	"CapSense_1_centroid\000"
 4175      656E7365 
 4175      5F315F63 
 4175      656E7472 
 4175      6F696400 
 4176              	.LASF13:
 4177 0176 696E7433 		.ascii	"int32\000"
 4177      3200
 4178              	.LASF56:
 4179 017c 73746174 		.ascii	"state\000"
 4179      6500
 4180              	.LASF60:
 4181 0182 43617053 		.ascii	"CapSense_1_FindMaximum\000"
 4181      656E7365 
 4181      5F315F46 
 4181      696E644D 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 125


 4181      6178696D 
 4182              	.LASF4:
 4183 0199 6C6F6E67 		.ascii	"long int\000"
 4183      20696E74 
 4183      00
 4184              	.LASF72:
 4185 01a2 6E756D65 		.ascii	"numerator\000"
 4185      7261746F 
 4185      7200
 4186              	.LASF59:
 4187 01ac 43617053 		.ascii	"CapSense_1_DisableWidget\000"
 4187      656E7365 
 4187      5F315F44 
 4187      69736162 
 4187      6C655769 
 4188              	.LASF73:
 4189 01c5 64656E6F 		.ascii	"denominator\000"
 4189      6D696E61 
 4189      746F7200 
 4190              	.LASF9:
 4191 01d1 75696E74 		.ascii	"uint8\000"
 4191      3800
 4192              	.LASF103:
 4193 01d7 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 4193      73657273 
 4193      5C6D6974 
 4193      6368656C 
 4193      6C5C446F 
 4194 0204 2D546872 		.ascii	"-Throttle\\ExampleProject1\\Lab Solutions\\Lab 3 Ca"
 4194      6F74746C 
 4194      655C4578 
 4194      616D706C 
 4194      6550726F 
 4195 0234 7053656E 		.ascii	"pSense UART.cydsn\000"
 4195      73652055 
 4195      4152542E 
 4195      63796473 
 4195      6E00
 4196              	.LASF15:
 4197 0246 646F7562 		.ascii	"double\000"
 4197      6C6500
 4198              	.LASF11:
 4199 024d 75696E74 		.ascii	"uint32\000"
 4199      333200
 4200              	.LASF51:
 4201 0254 68797374 		.ascii	"hysteresis\000"
 4201      65726573 
 4201      697300
 4202              	.LASF45:
 4203 025f 43617053 		.ascii	"CapSense_1_GetFingerHysteresis\000"
 4203      656E7365 
 4203      5F315F47 
 4203      65744669 
 4203      6E676572 
 4204              	.LASF33:
 4205 027e 43617053 		.ascii	"CapSense_1_UpdateWidgetBaseline\000"
 4205      656E7365 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 126


 4205      5F315F55 
 4205      70646174 
 4205      65576964 
 4206              	.LASF61:
 4207 029e 6F666673 		.ascii	"offset\000"
 4207      657400
 4208              	.LASF97:
 4209 02a5 43617053 		.ascii	"CapSense_1_hysteresis\000"
 4209      656E7365 
 4209      5F315F68 
 4209      79737465 
 4209      72657369 
 4210              	.LASF99:
 4211 02bb 43617053 		.ascii	"CapSense_1_rawDataIndex\000"
 4211      656E7365 
 4211      5F315F72 
 4211      61774461 
 4211      7461496E 
 4212              	.LASF69:
 4213 02d3 706F734E 		.ascii	"posNext\000"
 4213      65787400 
 4214              	.LASF65:
 4215 02db 73746172 		.ascii	"startOfSlider\000"
 4215      744F6653 
 4215      6C696465 
 4215      7200
 4216              	.LASF42:
 4217 02e9 76616C75 		.ascii	"value\000"
 4217      6500
 4218              	.LASF36:
 4219 02ef 6C617374 		.ascii	"lastSensor\000"
 4219      53656E73 
 4219      6F7200
 4220              	.LASF8:
 4221 02fa 756E7369 		.ascii	"unsigned int\000"
 4221      676E6564 
 4221      20696E74 
 4221      00
 4222              	.LASF71:
 4223 0307 706F7369 		.ascii	"position\000"
 4223      74696F6E 
 4223      00
 4224              	.LASF5:
 4225 0310 6C6F6E67 		.ascii	"long unsigned int\000"
 4225      20756E73 
 4225      69676E65 
 4225      6420696E 
 4225      7400
 4226              	.LASF41:
 4227 0322 43617053 		.ascii	"CapSense_1_SetDiffCountData\000"
 4227      656E7365 
 4227      5F315F53 
 4227      65744469 
 4227      6666436F 
 4228              	.LASF38:
 4229 033e 64617461 		.ascii	"data\000"
 4229      00
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 127


 4230              	.LASF3:
 4231 0343 73686F72 		.ascii	"short unsigned int\000"
 4231      7420756E 
 4231      7369676E 
 4231      65642069 
 4231      6E7400
 4232              	.LASF20:
 4233 0356 73656E73 		.ascii	"sensor\000"
 4233      6F7200
 4234              	.LASF46:
 4235 035d 43617053 		.ascii	"CapSense_1_GetNegativeNoiseThreshold\000"
 4235      656E7365 
 4235      5F315F47 
 4235      65744E65 
 4235      67617469 
 4236              	.LASF68:
 4237 0382 706F7350 		.ascii	"posPrev\000"
 4237      72657600 
 4238              	.LASF100:
 4239 038a 43617053 		.ascii	"CapSense_1_numberOfSensors\000"
 4239      656E7365 
 4239      5F315F6E 
 4239      756D6265 
 4239      724F6653 
 4240              	.LASF25:
 4241 03a5 63616C63 		.ascii	"calc\000"
 4241      00
 4242              	.LASF37:
 4243 03aa 43617053 		.ascii	"CapSense_1_SetBaselineData\000"
 4243      656E7365 
 4243      5F315F53 
 4243      65744261 
 4243      73656C69 
 4244              	.LASF87:
 4245 03c5 43617053 		.ascii	"CapSense_1_sensorEnableMask\000"
 4245      656E7365 
 4245      5F315F73 
 4245      656E736F 
 4245      72456E61 
 4246              	.LASF75:
 4247 03e1 706F7349 		.ascii	"posIndex\000"
 4247      6E646578 
 4247      00
 4248              	.LASF48:
 4249 03ea 6465626F 		.ascii	"debounce\000"
 4249      756E6365 
 4249      00
 4250              	.LASF17:
 4251 03f3 73697A65 		.ascii	"sizetype\000"
 4251      74797065 
 4251      00
 4252              	.LASF77:
 4253 03fc 706F7346 		.ascii	"posFiltersMask\000"
 4253      696C7465 
 4253      72734D61 
 4253      736B00
 4254              	.LASF85:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 128


 4255 040b 43617053 		.ascii	"CapSense_1_posFiltersData\000"
 4255      656E7365 
 4255      5F315F70 
 4255      6F734669 
 4255      6C746572 
 4256              	.LASF93:
 4257 0425 43617053 		.ascii	"CapSense_1_lowBaselineResetCnt\000"
 4257      656E7365 
 4257      5F315F6C 
 4257      6F774261 
 4257      73656C69 
 4258              	.LASF66:
 4259 0444 43617053 		.ascii	"CapSense_1_CalcCentroid\000"
 4259      656E7365 
 4259      5F315F43 
 4259      616C6343 
 4259      656E7472 
 4260              	.LASF82:
 4261 045c 43617053 		.ascii	"CapSense_1_GetDebounce\000"
 4261      656E7365 
 4261      5F315F47 
 4261      65744465 
 4261      626F756E 
 4262              	.LASF40:
 4263 0473 43617053 		.ascii	"CapSense_1_GetDiffCountData\000"
 4263      656E7365 
 4263      5F315F47 
 4263      65744469 
 4263      6666436F 
 4264              	.LASF88:
 4265 048f 43617053 		.ascii	"CapSense_1_widgetNumber\000"
 4265      656E7365 
 4265      5F315F77 
 4265      69646765 
 4265      744E756D 
 4266              	.LASF19:
 4267 04a7 43617053 		.ascii	"CapSense_1_InitializeSensorBaseline\000"
 4267      656E7365 
 4267      5F315F49 
 4267      6E697469 
 4267      616C697A 
 4268              	.LASF32:
 4269 04cb 43617053 		.ascii	"CapSense_1_UpdateEnabledBaselines\000"
 4269      656E7365 
 4269      5F315F55 
 4269      70646174 
 4269      65456E61 
 4270              	.LASF94:
 4271 04ed 43617053 		.ascii	"CapSense_1_lowBaselineReset\000"
 4271      656E7365 
 4271      5F315F6C 
 4271      6F774261 
 4271      73656C69 
 4272              	.LASF14:
 4273 0509 666C6F61 		.ascii	"float\000"
 4273      7400
 4274              	.LASF44:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 129


 4275 050f 43617053 		.ascii	"CapSense_1_GetNoiseThreshold\000"
 4275      656E7365 
 4275      5F315F47 
 4275      65744E6F 
 4275      69736554 
 4276              	.LASF101:
 4277 052c 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4277      4320342E 
 4277      382E3420 
 4277      32303134 
 4277      30353236 
 4278 055f 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4278      20726576 
 4278      6973696F 
 4278      6E203231 
 4278      31333538 
 4279 0592 30202D66 		.ascii	"0 -ffunction-sections\000"
 4279      66756E63 
 4279      74696F6E 
 4279      2D736563 
 4279      74696F6E 
 4280              	.LASF24:
 4281 05a8 43617053 		.ascii	"CapSense_1_UpdateBaselineNoThreshold\000"
 4281      656E7365 
 4281      5F315F55 
 4281      70646174 
 4281      65426173 
 4282              	.LASF92:
 4283 05cd 43617053 		.ascii	"CapSense_1_sensorOnMask\000"
 4283      656E7365 
 4283      5F315F73 
 4283      656E736F 
 4283      724F6E4D 
 4284              	.LASF47:
 4285 05e5 43617053 		.ascii	"CapSense_1_CheckIsSensorActive\000"
 4285      656E7365 
 4285      5F315F43 
 4285      6865636B 
 4285      49735365 
 4286              	.LASF57:
 4287 0604 43617053 		.ascii	"CapSense_1_CheckIsAnyWidgetActive\000"
 4287      656E7365 
 4287      5F315F43 
 4287      6865636B 
 4287      4973416E 
 4288              	.LASF1:
 4289 0626 756E7369 		.ascii	"unsigned char\000"
 4289      676E6564 
 4289      20636861 
 4289      7200
 4290              	.LASF22:
 4291 0634 43617053 		.ascii	"CapSense_1_InitializeEnabledBaselines\000"
 4291      656E7365 
 4291      5F315F49 
 4291      6E697469 
 4291      616C697A 
 4292              	.LASF30:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 130


 4293 065a 6E6F6973 		.ascii	"noiseThreshold\000"
 4293      65546872 
 4293      6573686F 
 4293      6C6400
 4294              	.LASF2:
 4295 0669 73686F72 		.ascii	"short int\000"
 4295      7420696E 
 4295      7400
 4296              	.LASF29:
 4297 0673 77696467 		.ascii	"widget\000"
 4297      657400
 4298              	.LASF31:
 4299 067a 43617053 		.ascii	"CapSense_1_UpdateSensorBaseline\000"
 4299      656E7365 
 4299      5F315F55 
 4299      70646174 
 4299      6553656E 
 4300              	.LASF91:
 4301 069a 43617053 		.ascii	"CapSense_1_sensorSignal\000"
 4301      656E7365 
 4301      5F315F73 
 4301      656E736F 
 4301      72536967 
 4302              	.LASF80:
 4303 06b2 43617053 		.ascii	"CapSense_1_GetWidgetNumber\000"
 4303      656E7365 
 4303      5F315F47 
 4303      65745769 
 4303      64676574 
 4304              	.LASF52:
 4305 06cd 43617053 		.ascii	"CapSense_1_debounceCounter\000"
 4305      656E7365 
 4305      5F315F64 
 4305      65626F75 
 4305      6E636543 
 4306              	.LASF63:
 4307 06e8 6D617869 		.ascii	"maximum\000"
 4307      6D756D00 
 4308              	.LASF23:
 4309 06f0 69735365 		.ascii	"isSensorEnabled\000"
 4309      6E736F72 
 4309      456E6162 
 4309      6C656400 
 4310              	.LASF34:
 4311 0700 73656E73 		.ascii	"sensorsPerWidget\000"
 4311      6F727350 
 4311      65725769 
 4311      64676574 
 4311      00
 4312              	.LASF67:
 4313 0711 7265736F 		.ascii	"resolution\000"
 4313      6C757469 
 4313      6F6E00
 4314              	.LASF95:
 4315 071c 43617053 		.ascii	"CapSense_1_fingerThreshold\000"
 4315      656E7365 
 4315      5F315F66 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 131


 4315      696E6765 
 4315      72546872 
 4316              	.LASF16:
 4317 0737 63686172 		.ascii	"char\000"
 4317      00
 4318              	.LASF74:
 4319 073c 43617053 		.ascii	"CapSense_1_GetCentroidPos\000"
 4319      656E7365 
 4319      5F315F47 
 4319      65744365 
 4319      6E74726F 
 4320              	.LASF35:
 4321 0756 66697273 		.ascii	"firstSensor\000"
 4321      7453656E 
 4321      736F7200 
 4322              	.LASF90:
 4323 0762 43617053 		.ascii	"CapSense_1_sensorBaselineLow\000"
 4323      656E7365 
 4323      5F315F73 
 4323      656E736F 
 4323      72426173 
 4324              	.LASF49:
 4325 077f 6465626F 		.ascii	"debounceIndex\000"
 4325      756E6365 
 4325      496E6465 
 4325      7800
 4326              	.LASF26:
 4327 078d 7369676E 		.ascii	"sign\000"
 4327      00
 4328              	.LASF55:
 4329 0792 6E756D4F 		.ascii	"numOfSensors\000"
 4329      6653656E 
 4329      736F7273 
 4329      00
 4330              	.LASF39:
 4331 079f 43617053 		.ascii	"CapSense_1_GetBaselineData\000"
 4331      656E7365 
 4331      5F315F47 
 4331      65744261 
 4331      73656C69 
 4332              	.LASF12:
 4333 07ba 696E7431 		.ascii	"int16\000"
 4333      3600
 4334              	.LASF89:
 4335 07c0 43617053 		.ascii	"CapSense_1_sensorBaseline\000"
 4335      656E7365 
 4335      5F315F73 
 4335      656E736F 
 4335      72426173 
 4336              	.LASF43:
 4337 07da 43617053 		.ascii	"CapSense_1_GetFingerThreshold\000"
 4337      656E7365 
 4337      5F315F47 
 4337      65744669 
 4337      6E676572 
 4338              	.LASF79:
 4339 07f8 43617053 		.ascii	"CapSense_1_IIR4Filter\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cclqk7v6.s 			page 132


 4339      656E7365 
 4339      5F315F49 
 4339      49523446 
 4339      696C7465 
 4340              	.LASF27:
 4341 080e 74656D70 		.ascii	"tempRaw\000"
 4341      52617700 
 4342              	.LASF84:
 4343 0816 43617053 		.ascii	"CapSense_1_posFiltersMask\000"
 4343      656E7365 
 4343      5F315F70 
 4343      6F734669 
 4343      6C746572 
 4344              	.LASF78:
 4345 0830 43617053 		.ascii	"CapSense_1_GetRadialCentroidPos\000"
 4345      656E7365 
 4345      5F315F47 
 4345      65745261 
 4345      6469616C 
 4346              	.LASF102:
 4347 0850 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_1_CSHL.c\000"
 4347      6E657261 
 4347      7465645F 
 4347      536F7572 
 4347      63655C50 
 4348              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
