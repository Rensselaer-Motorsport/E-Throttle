ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_1_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_1_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	UART_1_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_1_UartInit, %function
  23              	UART_1_UartInit:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_1_UART.c"
   1:.\Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_1_UART.c **** * File Name: UART_1_UART.c
   3:.\Generated_Source\PSoC4/UART_1_UART.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/UART_1_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_1_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_1_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_1_UART.c **** *  UART mode.
   8:.\Generated_Source\PSoC4/UART_1_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_1_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_1_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_1_UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/UART_1_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/UART_1_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/UART_1_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  18:.\Generated_Source\PSoC4/UART_1_UART.c **** #include "UART_1_PVT.h"
  19:.\Generated_Source\PSoC4/UART_1_UART.c **** #include "UART_1_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  21:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  22:.\Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
  23:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  24:.\Generated_Source\PSoC4/UART_1_UART.c ****     /***************************************
  25:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Configuration Structure Initialization
  26:.\Generated_Source\PSoC4/UART_1_UART.c ****     ***************************************/
  27:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  28:.\Generated_Source\PSoC4/UART_1_UART.c ****     const UART_1_UART_INIT_STRUCT UART_1_configUart =
  29:.\Generated_Source\PSoC4/UART_1_UART.c ****     {
  30:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_SUB_MODE,
  31:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DIRECTION,
  32:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DATA_BITS_NUM,
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 2


  33:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_PARITY_TYPE,
  34:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_STOP_BITS_NUM,
  35:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_OVS_FACTOR,
  36:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_IRDA_LOW_POWER,
  37:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MEDIAN_FILTER_ENABLE,
  38:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_RETRY_ON_NACK,
  39:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_IRDA_POLARITY,
  40:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DROP_ON_PARITY_ERR,
  41:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_DROP_ON_FRAME_ERR,
  42:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_WAKE_ENABLE,
  43:.\Generated_Source\PSoC4/UART_1_UART.c ****         0u,
  44:.\Generated_Source\PSoC4/UART_1_UART.c ****         NULL,
  45:.\Generated_Source\PSoC4/UART_1_UART.c ****         0u,
  46:.\Generated_Source\PSoC4/UART_1_UART.c ****         NULL,
  47:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_MODE_ENABLE,
  48:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_ACCEPT_ADDRESS,
  49:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_RX_ADDRESS,
  50:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_MP_RX_ADDRESS_MASK,
  51:.\Generated_Source\PSoC4/UART_1_UART.c ****         (uint32) UART_1_SCB_IRQ_INTERNAL,
  52:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_INTR_RX_MASK,
  53:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_RX_TRIGGER_LEVEL,
  54:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_INTR_TX_MASK,
  55:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_TX_TRIGGER_LEVEL,
  56:.\Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_BYTE_MODE_ENABLE,
  57:.\Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_CTS_ENABLE,
  58:.\Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_CTS_POLARITY,
  59:.\Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_RTS_POLARITY,
  60:.\Generated_Source\PSoC4/UART_1_UART.c ****         (uint8) UART_1_UART_RTS_FIFO_LEVEL
  61:.\Generated_Source\PSoC4/UART_1_UART.c ****     };
  62:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  63:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  64:.\Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
  65:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartInit
  66:.\Generated_Source\PSoC4/UART_1_UART.c ****     ********************************************************************************
  67:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
  68:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Summary:
  69:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Configures the SCB for the UART operation.
  70:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
  71:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Parameters:
  72:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  config:  Pointer to a structure that contains the following ordered list of
  73:.\Generated_Source\PSoC4/UART_1_UART.c ****     *           fields. These fields match the selections available in the
  74:.\Generated_Source\PSoC4/UART_1_UART.c ****     *           customizer.
  75:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
  76:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Return:
  77:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  None
  78:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
  79:.\Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
  80:.\Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartInit(const UART_1_UART_INIT_STRUCT *config)
  81:.\Generated_Source\PSoC4/UART_1_UART.c ****     {
  82:.\Generated_Source\PSoC4/UART_1_UART.c ****         uint32 pinsConfig;
  83:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  84:.\Generated_Source\PSoC4/UART_1_UART.c ****         if (NULL == config)
  85:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
  86:.\Generated_Source\PSoC4/UART_1_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
  87:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
  88:.\Generated_Source\PSoC4/UART_1_UART.c ****         else
  89:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 3


  90:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
  91:.\Generated_Source\PSoC4/UART_1_UART.c ****             pinsConfig  = config->direction;
  92:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  93:.\Generated_Source\PSoC4/UART_1_UART.c ****         #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
  94:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Add RTS and CTS pins to configure */
  95:.\Generated_Source\PSoC4/UART_1_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_1_UART_RTS_PIN_ENABLE) : (0u);
  96:.\Generated_Source\PSoC4/UART_1_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_1_UART_CTS_PIN_ENABLE) : (0u);
  97:.\Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
  98:.\Generated_Source\PSoC4/UART_1_UART.c **** 
  99:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure pins */
 100:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_SetPins(UART_1_SCB_MODE_UART, config->mode, pinsConfig);
 101:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 102:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Store internal configuration */
 103:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_scbMode       = (uint8) UART_1_SCB_MODE_UART;
 104:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_scbEnableWake = (uint8) config->enableWake;
 105:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_scbEnableIntr = (uint8) config->enableInterrupt;
 106:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 107:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Set RX direction internal variables */
 108:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBuffer      =         config->rxBuffer;
 109:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxDataBits    = (uint8) config->dataBits;
 110:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferSize  = (uint8) config->rxBufferSize;
 111:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 112:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Set TX direction internal variables */
 113:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBuffer      =         config->txBuffer;
 114:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txDataBits    = (uint8) config->dataBits;
 115:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBufferSize  = (uint8) config->txBufferSize;
 116:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 117:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure UART interface */
 118:.\Generated_Source\PSoC4/UART_1_UART.c ****             if(UART_1_UART_MODE_IRDA == config->mode)
 119:.\Generated_Source\PSoC4/UART_1_UART.c ****             {
 120:.\Generated_Source\PSoC4/UART_1_UART.c ****                 /* OVS settings: IrDA */
 121:.\Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 122:.\Generated_Source\PSoC4/UART_1_UART.c ****                                                 (UART_1_UART_GET_CTRL_OVS_IRDA_LP(config->oversampl
 123:.\Generated_Source\PSoC4/UART_1_UART.c ****                                                 (UART_1_CTRL_OVS_IRDA_OVS16));
 124:.\Generated_Source\PSoC4/UART_1_UART.c ****             }
 125:.\Generated_Source\PSoC4/UART_1_UART.c ****             else
 126:.\Generated_Source\PSoC4/UART_1_UART.c ****             {
 127:.\Generated_Source\PSoC4/UART_1_UART.c ****                 /* OVS settings: UART and SmartCard */
 128:.\Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_CTRL_REG  = UART_1_GET_CTRL_OVS(config->oversample);
 129:.\Generated_Source\PSoC4/UART_1_UART.c ****             }
 130:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 131:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_CTRL_REG     |= UART_1_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 132:.\Generated_Source\PSoC4/UART_1_UART.c ****                                              UART_1_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAdd
 133:.\Generated_Source\PSoC4/UART_1_UART.c ****                                              UART_1_CTRL_UART;
 134:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 135:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 136:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_CTRL_REG = UART_1_GET_UART_CTRL_MODE(config->mode);
 137:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 138:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure RX direction */
 139:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_RX_CTRL_REG = UART_1_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 140:.\Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx) 
 141:.\Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)   
 142:.\Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPa
 143:.\Generated_Source\PSoC4/UART_1_UART.c ****                                         UART_1_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFra
 144:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 145:.\Generated_Source\PSoC4/UART_1_UART.c ****             if(UART_1_UART_PARITY_NONE != config->parity)
 146:.\Generated_Source\PSoC4/UART_1_UART.c ****             {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 4


 147:.\Generated_Source\PSoC4/UART_1_UART.c ****                UART_1_UART_RX_CTRL_REG |= UART_1_GET_UART_RX_CTRL_PARITY(config->parity) |
 148:.\Generated_Source\PSoC4/UART_1_UART.c ****                                                     UART_1_UART_RX_CTRL_PARITY_ENABLED;
 149:.\Generated_Source\PSoC4/UART_1_UART.c ****             }
 150:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 151:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_RX_CTRL_REG      = UART_1_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 152:.\Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_RX_CTRL_MEDIAN(config->enableMedianFilte
 153:.\Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_UART_RX_CTRL_ENABLED(config->direction);
 154:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 155:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_RX_FIFO_CTRL_REG = UART_1_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel)
 156:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 157:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure MP address */
 158:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_RX_MATCH_REG     = UART_1_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 159:.\Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_RX_MATCH_MASK(config->multiprocAddrMask)
 160:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 161:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure RX direction */
 162:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_TX_CTRL_REG = UART_1_GET_UART_TX_CTRL_MODE(config->stopBits) |
 163:.\Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_UART_TX_CTRL_RETRY_NACK(config->enableRe
 164:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 165:.\Generated_Source\PSoC4/UART_1_UART.c ****             if(UART_1_UART_PARITY_NONE != config->parity)
 166:.\Generated_Source\PSoC4/UART_1_UART.c ****             {
 167:.\Generated_Source\PSoC4/UART_1_UART.c ****                UART_1_UART_TX_CTRL_REG |= UART_1_GET_UART_TX_CTRL_PARITY(config->parity) |
 168:.\Generated_Source\PSoC4/UART_1_UART.c ****                                                     UART_1_UART_TX_CTRL_PARITY_ENABLED;
 169:.\Generated_Source\PSoC4/UART_1_UART.c ****             }
 170:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 171:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_TX_CTRL_REG      = UART_1_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 172:.\Generated_Source\PSoC4/UART_1_UART.c ****                                                 UART_1_GET_UART_TX_CTRL_ENABLED(config->direction);
 173:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 174:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_TX_FIFO_CTRL_REG = UART_1_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel)
 175:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 176:.\Generated_Source\PSoC4/UART_1_UART.c ****         #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 177:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_FLOW_CTRL_REG = UART_1_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 178:.\Generated_Source\PSoC4/UART_1_UART.c ****                                             UART_1_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPola
 179:.\Generated_Source\PSoC4/UART_1_UART.c ****                                             UART_1_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPola
 180:.\Generated_Source\PSoC4/UART_1_UART.c ****                                             UART_1_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFi
 181:.\Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 182:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 183:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 184:.\Generated_Source\PSoC4/UART_1_UART.c ****             CyIntDisable    (UART_1_ISR_NUMBER);
 185:.\Generated_Source\PSoC4/UART_1_UART.c ****             CyIntSetPriority(UART_1_ISR_NUMBER, UART_1_ISR_PRIORITY);
 186:.\Generated_Source\PSoC4/UART_1_UART.c ****             (void) CyIntSetVector(UART_1_ISR_NUMBER, &UART_1_SPI_UART_ISR);
 187:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 188:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure WAKE interrupt */
 189:.\Generated_Source\PSoC4/UART_1_UART.c ****         #if(UART_1_UART_RX_WAKEUP_IRQ)
 190:.\Generated_Source\PSoC4/UART_1_UART.c ****             CyIntDisable    (UART_1_RX_WAKE_ISR_NUMBER);
 191:.\Generated_Source\PSoC4/UART_1_UART.c ****             CyIntSetPriority(UART_1_RX_WAKE_ISR_NUMBER, UART_1_RX_WAKE_ISR_PRIORITY);
 192:.\Generated_Source\PSoC4/UART_1_UART.c ****             (void) CyIntSetVector(UART_1_RX_WAKE_ISR_NUMBER, &UART_1_UART_WAKEUP_ISR);
 193:.\Generated_Source\PSoC4/UART_1_UART.c ****         #endif /* (UART_1_UART_RX_WAKEUP_IRQ) */
 194:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 195:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Configure interrupt sources */
 196:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_I2C_EC_MASK_REG = UART_1_NO_INTR_SOURCES;
 197:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_SPI_EC_MASK_REG = UART_1_NO_INTR_SOURCES;
 198:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_SLAVE_MASK_REG  = UART_1_NO_INTR_SOURCES;
 199:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_MASTER_MASK_REG = UART_1_NO_INTR_SOURCES;
 200:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_RX_MASK_REG     = config->rxInterruptMask;
 201:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_INTR_TX_MASK_REG     = config->txInterruptMask;
 202:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 203:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Clear RX buffer indexes */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 5


 204:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferHead     = 0u;
 205:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferTail     = 0u;
 206:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_rxBufferOverflow = 0u;
 207:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 208:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Clear TX buffer indexes */
 209:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBufferHead = 0u;
 210:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_txBufferTail = 0u;
 211:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 212:.\Generated_Source\PSoC4/UART_1_UART.c ****     }
 213:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 214:.\Generated_Source\PSoC4/UART_1_UART.c **** #else
 215:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 216:.\Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 217:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartInit
 218:.\Generated_Source\PSoC4/UART_1_UART.c ****     ********************************************************************************
 219:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 220:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Summary:
 221:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Configures the SCB for the UART operation.
 222:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 223:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Parameters:
 224:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  None
 225:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 226:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Return:
 227:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  None
 228:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 229:.\Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 230:.\Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartInit(void)
 231:.\Generated_Source\PSoC4/UART_1_UART.c ****     {
  26              		.loc 1 231 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure UART interface */
 233:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_CTRL_REG = UART_1_UART_DEFAULT_CTRL;
  34              		.loc 1 233 0
  35 0004 174B     		ldr	r3, .L2
  36 0006 184A     		ldr	r2, .L2+4
  37 0008 1A60     		str	r2, [r3]
 234:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 235:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 236:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_CTRL_REG = UART_1_UART_DEFAULT_UART_CTRL;
  38              		.loc 1 236 0
  39 000a 184B     		ldr	r3, .L2+8
  40 000c 0022     		mov	r2, #0
  41 000e 1A60     		str	r2, [r3]
 237:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 238:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure RX direction */
 239:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_RX_CTRL_REG = UART_1_UART_DEFAULT_UART_RX_CTRL;
  42              		.loc 1 239 0
  43 0010 174B     		ldr	r3, .L2+12
  44 0012 0122     		mov	r2, #1
  45 0014 1A60     		str	r2, [r3]
 240:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_RX_CTRL_REG      = UART_1_UART_DEFAULT_RX_CTRL;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 6


  46              		.loc 1 240 0
  47 0016 174B     		ldr	r3, .L2+16
  48 0018 0722     		mov	r2, #7
  49 001a 1A60     		str	r2, [r3]
 241:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_RX_FIFO_CTRL_REG = UART_1_UART_DEFAULT_RX_FIFO_CTRL;
  50              		.loc 1 241 0
  51 001c 164B     		ldr	r3, .L2+20
  52 001e 0722     		mov	r2, #7
  53 0020 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_RX_MATCH_REG     = UART_1_UART_DEFAULT_RX_MATCH_REG;
  54              		.loc 1 242 0
  55 0022 164B     		ldr	r3, .L2+24
  56 0024 0022     		mov	r2, #0
  57 0026 1A60     		str	r2, [r3]
 243:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 244:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure TX direction */
 245:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_TX_CTRL_REG = UART_1_UART_DEFAULT_UART_TX_CTRL;
  58              		.loc 1 245 0
  59 0028 154B     		ldr	r3, .L2+28
  60 002a 0122     		mov	r2, #1
  61 002c 1A60     		str	r2, [r3]
 246:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_TX_CTRL_REG      = UART_1_UART_DEFAULT_TX_CTRL;
  62              		.loc 1 246 0
  63 002e 154B     		ldr	r3, .L2+32
  64 0030 154A     		ldr	r2, .L2+36
  65 0032 1A60     		str	r2, [r3]
 247:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_TX_FIFO_CTRL_REG = UART_1_UART_DEFAULT_TX_FIFO_CTRL;
  66              		.loc 1 247 0
  67 0034 154B     		ldr	r3, .L2+40
  68 0036 0022     		mov	r2, #0
  69 0038 1A60     		str	r2, [r3]
 248:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 249:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 250:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UART_FLOW_CTRL_REG = UART_1_UART_DEFAULT_FLOW_CTRL;
 251:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 252:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 253:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 254:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_SCB_IRQ_INTERNAL)
 255:.\Generated_Source\PSoC4/UART_1_UART.c ****         CyIntDisable    (UART_1_ISR_NUMBER);
 256:.\Generated_Source\PSoC4/UART_1_UART.c ****         CyIntSetPriority(UART_1_ISR_NUMBER, UART_1_ISR_PRIORITY);
 257:.\Generated_Source\PSoC4/UART_1_UART.c ****         (void) CyIntSetVector(UART_1_ISR_NUMBER, &UART_1_SPI_UART_ISR);
 258:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_SCB_IRQ_INTERNAL) */
 259:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 260:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure WAKE interrupt */
 261:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_UART_RX_WAKEUP_IRQ)
 262:.\Generated_Source\PSoC4/UART_1_UART.c ****         CyIntDisable    (UART_1_RX_WAKE_ISR_NUMBER);
 263:.\Generated_Source\PSoC4/UART_1_UART.c ****         CyIntSetPriority(UART_1_RX_WAKE_ISR_NUMBER, UART_1_RX_WAKE_ISR_PRIORITY);
 264:.\Generated_Source\PSoC4/UART_1_UART.c ****         (void) CyIntSetVector(UART_1_RX_WAKE_ISR_NUMBER, &UART_1_UART_WAKEUP_ISR);
 265:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_RX_WAKEUP_IRQ) */
 266:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 267:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Configure interrupt sources */
 268:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_I2C_EC_MASK_REG = UART_1_UART_DEFAULT_INTR_I2C_EC_MASK;
  70              		.loc 1 268 0
  71 003a 154B     		ldr	r3, .L2+44
  72 003c 0022     		mov	r2, #0
  73 003e 1A60     		str	r2, [r3]
 269:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_SPI_EC_MASK_REG = UART_1_UART_DEFAULT_INTR_SPI_EC_MASK;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 7


  74              		.loc 1 269 0
  75 0040 144B     		ldr	r3, .L2+48
  76 0042 0022     		mov	r2, #0
  77 0044 1A60     		str	r2, [r3]
 270:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_SLAVE_MASK_REG  = UART_1_UART_DEFAULT_INTR_SLAVE_MASK;
  78              		.loc 1 270 0
  79 0046 144B     		ldr	r3, .L2+52
  80 0048 0022     		mov	r2, #0
  81 004a 1A60     		str	r2, [r3]
 271:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_MASTER_MASK_REG = UART_1_UART_DEFAULT_INTR_MASTER_MASK;
  82              		.loc 1 271 0
  83 004c 134B     		ldr	r3, .L2+56
  84 004e 0022     		mov	r2, #0
  85 0050 1A60     		str	r2, [r3]
 272:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_RX_MASK_REG     = UART_1_UART_DEFAULT_INTR_RX_MASK;
  86              		.loc 1 272 0
  87 0052 134B     		ldr	r3, .L2+60
  88 0054 0022     		mov	r2, #0
  89 0056 1A60     		str	r2, [r3]
 273:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_INTR_TX_MASK_REG     = UART_1_UART_DEFAULT_INTR_TX_MASK;
  90              		.loc 1 273 0
  91 0058 124B     		ldr	r3, .L2+64
  92 005a 0022     		mov	r2, #0
  93 005c 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 275:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_INTERNAL_RX_SW_BUFFER_CONST)
 276:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rxBufferHead     = 0u;
 277:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rxBufferTail     = 0u;
 278:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rxBufferOverflow = 0u;
 279:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_INTERNAL_RX_SW_BUFFER_CONST) */
 280:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 281:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if(UART_1_INTERNAL_TX_SW_BUFFER_CONST)
 282:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_txBufferHead = 0u;
 283:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_txBufferTail = 0u;
 284:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_INTERNAL_TX_SW_BUFFER_CONST) */
 285:.\Generated_Source\PSoC4/UART_1_UART.c ****     }
  94              		.loc 1 285 0
  95 005e BD46     		mov	sp, r7
  96              		@ sp needed
  97 0060 80BD     		pop	{r7, pc}
  98              	.L3:
  99 0062 C046     		.align	2
 100              	.L2:
 101 0064 00000640 		.word	1074135040
 102 0068 0B000002 		.word	33554443
 103 006c 40000640 		.word	1074135104
 104 0070 48000640 		.word	1074135112
 105 0074 00030640 		.word	1074135808
 106 0078 04030640 		.word	1074135812
 107 007c 10030640 		.word	1074135824
 108 0080 44000640 		.word	1074135108
 109 0084 00020640 		.word	1074135552
 110 0088 07000080 		.word	-2147483641
 111 008c 04020640 		.word	1074135556
 112 0090 880E0640 		.word	1074138760
 113 0094 C80E0640 		.word	1074138824
 114 0098 480F0640 		.word	1074138952
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 8


 115 009c 080F0640 		.word	1074138888
 116 00a0 C80F0640 		.word	1074139080
 117 00a4 880F0640 		.word	1074139016
 118              		.cfi_endproc
 119              	.LFE0:
 120              		.size	UART_1_UartInit, .-UART_1_UartInit
 121              		.section	.text.UART_1_UartPostEnable,"ax",%progbits
 122              		.align	2
 123              		.global	UART_1_UartPostEnable
 124              		.code	16
 125              		.thumb_func
 126              		.type	UART_1_UartPostEnable, %function
 127              	UART_1_UartPostEnable:
 128              	.LFB1:
 286:.\Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 287:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 288:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 289:.\Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartPostEnable
 291:.\Generated_Source\PSoC4/UART_1_UART.c **** ********************************************************************************
 292:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 293:.\Generated_Source\PSoC4/UART_1_UART.c **** * Summary:
 294:.\Generated_Source\PSoC4/UART_1_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be 
 295:.\Generated_Source\PSoC4/UART_1_UART.c **** *  controlled by the SCB UART.
 296:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 297:.\Generated_Source\PSoC4/UART_1_UART.c **** * Parameters:
 298:.\Generated_Source\PSoC4/UART_1_UART.c **** *  None
 299:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 300:.\Generated_Source\PSoC4/UART_1_UART.c **** * Return:
 301:.\Generated_Source\PSoC4/UART_1_UART.c **** *  None
 302:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 303:.\Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartPostEnable(void)
 305:.\Generated_Source\PSoC4/UART_1_UART.c **** {
 129              		.loc 1 305 0
 130              		.cfi_startproc
 131 0000 80B5     		push	{r7, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 135 0002 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
 306:.\Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 307:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 308:.\Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_TX_SDA_MISO_PIN)
 309:.\Generated_Source\PSoC4/UART_1_UART.c ****     if (UART_1_CHECK_TX_SDA_MISO_PIN_USED)
 310:.\Generated_Source\PSoC4/UART_1_UART.c ****     {
 311:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Set SCB UART to drive the output pin */
 312:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_TX_SDA_MISO_HSIOM_REG, UART_1_TX_SDA_MISO_HSIOM_MASK,
 313:.\Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_TX_SDA_MISO_HSIOM_POS, UART_1_HSIOM_UART_SEL);
 314:.\Generated_Source\PSoC4/UART_1_UART.c ****     }
 315:.\Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_TX_SDA_MISO_PIN_PIN) */
 316:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 317:.\Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_SS0_PIN)
 318:.\Generated_Source\PSoC4/UART_1_UART.c ****     if (UART_1_CHECK_SS0_PIN_USED)
 319:.\Generated_Source\PSoC4/UART_1_UART.c ****     {
 320:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Set SCB UART to drive the output pin */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 9


 321:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_SS0_HSIOM_REG, UART_1_SS0_HSIOM_MASK,
 322:.\Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_SS0_HSIOM_POS, UART_1_HSIOM_UART_SEL);
 323:.\Generated_Source\PSoC4/UART_1_UART.c ****     }
 324:.\Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SS0_PIN) */
 325:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 326:.\Generated_Source\PSoC4/UART_1_UART.c **** #else
 327:.\Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_UART_TX_PIN)
 328:.\Generated_Source\PSoC4/UART_1_UART.c ****      /* Set SCB UART to drive the output pin */
 329:.\Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_SET_HSIOM_SEL(UART_1_TX_HSIOM_REG, UART_1_TX_HSIOM_MASK,
 137              		.loc 1 329 0
 138 0004 044B     		ldr	r3, .L5
 139 0006 044A     		ldr	r2, .L5
 140 0008 1268     		ldr	r2, [r2]
 141 000a F021     		mov	r1, #240
 142 000c 8A43     		bic	r2, r1
 143 000e 9021     		mov	r1, #144
 144 0010 0A43     		orr	r2, r1
 145 0012 1A60     		str	r2, [r3]
 330:.\Generated_Source\PSoC4/UART_1_UART.c ****                                    UART_1_TX_HSIOM_POS, UART_1_HSIOM_UART_SEL);
 331:.\Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_TX_PIN) */
 332:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 333:.\Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_UART_RTS_PIN)
 334:.\Generated_Source\PSoC4/UART_1_UART.c ****     /* Set SCB UART to drive the output pin */
 335:.\Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_SET_HSIOM_SEL(UART_1_RTS_HSIOM_REG, UART_1_RTS_HSIOM_MASK,
 336:.\Generated_Source\PSoC4/UART_1_UART.c ****                                    UART_1_RTS_HSIOM_POS, UART_1_HSIOM_UART_SEL);
 337:.\Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_RTS_PIN) */
 338:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 339:.\Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 340:.\Generated_Source\PSoC4/UART_1_UART.c **** }
 146              		.loc 1 340 0
 147 0014 BD46     		mov	sp, r7
 148              		@ sp needed
 149 0016 80BD     		pop	{r7, pc}
 150              	.L6:
 151              		.align	2
 152              	.L5:
 153 0018 10000140 		.word	1073807376
 154              		.cfi_endproc
 155              	.LFE1:
 156              		.size	UART_1_UartPostEnable, .-UART_1_UartPostEnable
 157              		.section	.text.UART_1_UartStop,"ax",%progbits
 158              		.align	2
 159              		.global	UART_1_UartStop
 160              		.code	16
 161              		.thumb_func
 162              		.type	UART_1_UartStop, %function
 163              	UART_1_UartStop:
 164              	.LFB2:
 341:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 342:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 343:.\Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 344:.\Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartStop
 345:.\Generated_Source\PSoC4/UART_1_UART.c **** ********************************************************************************
 346:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 347:.\Generated_Source\PSoC4/UART_1_UART.c **** * Summary:
 348:.\Generated_Source\PSoC4/UART_1_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 349:.\Generated_Source\PSoC4/UART_1_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 10


 350:.\Generated_Source\PSoC4/UART_1_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature to
 351:.\Generated_Source\PSoC4/UART_1_UART.c **** *  not cause it to trigger after the component is enabled.
 352:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 353:.\Generated_Source\PSoC4/UART_1_UART.c **** * Parameters:
 354:.\Generated_Source\PSoC4/UART_1_UART.c **** *  None
 355:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 356:.\Generated_Source\PSoC4/UART_1_UART.c **** * Return:
 357:.\Generated_Source\PSoC4/UART_1_UART.c **** *  None
 358:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 359:.\Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 360:.\Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartStop(void)
 361:.\Generated_Source\PSoC4/UART_1_UART.c **** {
 165              		.loc 1 361 0
 166              		.cfi_startproc
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 00AF     		add	r7, sp, #0
 172              		.cfi_def_cfa_register 7
 362:.\Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_SCB_MODE_UNCONFIG_CONST_CFG)
 363:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_TX_SDA_MISO_PIN)
 364:.\Generated_Source\PSoC4/UART_1_UART.c ****         if (UART_1_CHECK_TX_SDA_MISO_PIN_USED)
 365:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 366:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Set GPIO to drive output pin */
 367:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_SET_HSIOM_SEL(UART_1_TX_SDA_MISO_HSIOM_REG, UART_1_TX_SDA_MISO_HSIOM_MASK,
 368:.\Generated_Source\PSoC4/UART_1_UART.c ****                                            UART_1_TX_SDA_MISO_HSIOM_POS, UART_1_HSIOM_GPIO_SEL);
 369:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 370:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_TX_SDA_MISO_PIN_PIN) */
 371:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 372:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_SS0_PIN)
 373:.\Generated_Source\PSoC4/UART_1_UART.c ****         if (UART_1_CHECK_SS0_PIN_USED)
 374:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 375:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Set output pin state after block is disabled */
 376:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_spi_ss0_Write(UART_1_GET_UART_RTS_INACTIVE);
 377:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 378:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Set GPIO to drive output pin */
 379:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_SET_HSIOM_SEL(UART_1_SS0_HSIOM_REG, UART_1_SS0_HSIOM_MASK,
 380:.\Generated_Source\PSoC4/UART_1_UART.c ****                                            UART_1_SS0_HSIOM_POS, UART_1_HSIOM_GPIO_SEL);
 381:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 382:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_SS0_PIN) */
 383:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 384:.\Generated_Source\PSoC4/UART_1_UART.c **** #else
 385:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_TX_PIN)
 386:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Set GPIO to drive output pin */
 387:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_TX_HSIOM_REG, UART_1_TX_HSIOM_MASK,
 173              		.loc 1 387 0
 174 0004 034B     		ldr	r3, .L8
 175 0006 034A     		ldr	r2, .L8
 176 0008 1268     		ldr	r2, [r2]
 177 000a F021     		mov	r1, #240
 178 000c 8A43     		bic	r2, r1
 179 000e 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_TX_HSIOM_POS, UART_1_HSIOM_GPIO_SEL);
 389:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_TX_PIN) */
 390:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 391:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if (UART_1_UART_RTS_PIN)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 11


 392:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Set output pin state after block is disabled */
 393:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_rts_Write(UART_1_GET_UART_RTS_INACTIVE);
 394:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 395:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Set GPIO to drive output pin */
 396:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_SET_HSIOM_SEL(UART_1_RTS_HSIOM_REG, UART_1_RTS_HSIOM_MASK,
 397:.\Generated_Source\PSoC4/UART_1_UART.c ****                                        UART_1_RTS_HSIOM_POS, UART_1_HSIOM_GPIO_SEL);
 398:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* (UART_1_UART_RTS_PIN) */
 399:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 400:.\Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 401:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 402:.\Generated_Source\PSoC4/UART_1_UART.c **** #if (UART_1_UART_WAKE_ENABLE_CONST)
 403:.\Generated_Source\PSoC4/UART_1_UART.c ****     /* Disable skip start feature used for wakeup */
 404:.\Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_UART_RX_CTRL_REG &= (uint32) ~UART_1_UART_RX_CTRL_SKIP_START;
 405:.\Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_WAKE_ENABLE_CONST) */
 406:.\Generated_Source\PSoC4/UART_1_UART.c **** }
 180              		.loc 1 406 0
 181 0010 BD46     		mov	sp, r7
 182              		@ sp needed
 183 0012 80BD     		pop	{r7, pc}
 184              	.L9:
 185              		.align	2
 186              	.L8:
 187 0014 10000140 		.word	1073807376
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	UART_1_UartStop, .-UART_1_UartStop
 191              		.section	.text.UART_1_UartSetRxAddress,"ax",%progbits
 192              		.align	2
 193              		.global	UART_1_UartSetRxAddress
 194              		.code	16
 195              		.thumb_func
 196              		.type	UART_1_UartSetRxAddress, %function
 197              	UART_1_UartSetRxAddress:
 198              	.LFB3:
 407:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 408:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 409:.\Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartSetRxAddress
 411:.\Generated_Source\PSoC4/UART_1_UART.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 413:.\Generated_Source\PSoC4/UART_1_UART.c **** * Summary:
 414:.\Generated_Source\PSoC4/UART_1_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 415:.\Generated_Source\PSoC4/UART_1_UART.c **** *  Multiprocessor mode.
 416:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 417:.\Generated_Source\PSoC4/UART_1_UART.c **** * Parameters:
 418:.\Generated_Source\PSoC4/UART_1_UART.c **** *  address: Address for hardware address detection.
 419:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 420:.\Generated_Source\PSoC4/UART_1_UART.c **** * Return:
 421:.\Generated_Source\PSoC4/UART_1_UART.c **** *  None
 422:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 423:.\Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 424:.\Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartSetRxAddress(uint32 address)
 425:.\Generated_Source\PSoC4/UART_1_UART.c **** {
 199              		.loc 1 425 0
 200              		.cfi_startproc
 201 0000 80B5     		push	{r7, lr}
 202              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 12


 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 84B0     		sub	sp, sp, #16
 206              		.cfi_def_cfa_offset 24
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 209 0006 7860     		str	r0, [r7, #4]
 426:.\Generated_Source\PSoC4/UART_1_UART.c ****      uint32 matchReg;
 427:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 428:.\Generated_Source\PSoC4/UART_1_UART.c ****     matchReg = UART_1_RX_MATCH_REG;
 210              		.loc 1 428 0
 211 0008 094B     		ldr	r3, .L11
 212 000a 1B68     		ldr	r3, [r3]
 213 000c FB60     		str	r3, [r7, #12]
 429:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 430:.\Generated_Source\PSoC4/UART_1_UART.c ****     matchReg &= ((uint32) ~UART_1_RX_MATCH_ADDR_MASK); /* Clear address bits */
 214              		.loc 1 430 0
 215 000e FB68     		ldr	r3, [r7, #12]
 216 0010 FF22     		mov	r2, #255
 217 0012 9343     		bic	r3, r2
 218 0014 FB60     		str	r3, [r7, #12]
 431:.\Generated_Source\PSoC4/UART_1_UART.c ****     matchReg |= ((uint32)  (address & UART_1_RX_MATCH_ADDR_MASK)); /* Set address  */
 219              		.loc 1 431 0
 220 0016 7A68     		ldr	r2, [r7, #4]
 221 0018 FF23     		mov	r3, #255
 222 001a 1340     		and	r3, r2
 223 001c FA68     		ldr	r2, [r7, #12]
 224 001e 1343     		orr	r3, r2
 225 0020 FB60     		str	r3, [r7, #12]
 432:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 433:.\Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_RX_MATCH_REG = matchReg;
 226              		.loc 1 433 0
 227 0022 034B     		ldr	r3, .L11
 228 0024 FA68     		ldr	r2, [r7, #12]
 229 0026 1A60     		str	r2, [r3]
 434:.\Generated_Source\PSoC4/UART_1_UART.c **** }
 230              		.loc 1 434 0
 231 0028 BD46     		mov	sp, r7
 232 002a 04B0     		add	sp, sp, #16
 233              		@ sp needed
 234 002c 80BD     		pop	{r7, pc}
 235              	.L12:
 236 002e C046     		.align	2
 237              	.L11:
 238 0030 10030640 		.word	1074135824
 239              		.cfi_endproc
 240              	.LFE3:
 241              		.size	UART_1_UartSetRxAddress, .-UART_1_UartSetRxAddress
 242              		.section	.text.UART_1_UartSetRxAddressMask,"ax",%progbits
 243              		.align	2
 244              		.global	UART_1_UartSetRxAddressMask
 245              		.code	16
 246              		.thumb_func
 247              		.type	UART_1_UartSetRxAddressMask, %function
 248              	UART_1_UartSetRxAddressMask:
 249              	.LFB4:
 435:.\Generated_Source\PSoC4/UART_1_UART.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 13


 436:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 437:.\Generated_Source\PSoC4/UART_1_UART.c **** /*******************************************************************************
 438:.\Generated_Source\PSoC4/UART_1_UART.c **** * Function Name: UART_1_UartSetRxAddressMask
 439:.\Generated_Source\PSoC4/UART_1_UART.c **** ********************************************************************************
 440:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 441:.\Generated_Source\PSoC4/UART_1_UART.c **** * Summary:
 442:.\Generated_Source\PSoC4/UART_1_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 443:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 444:.\Generated_Source\PSoC4/UART_1_UART.c **** * Parameters:
 445:.\Generated_Source\PSoC4/UART_1_UART.c **** *  addressMask: Address mask.
 446:.\Generated_Source\PSoC4/UART_1_UART.c **** *   0 - address bit does not care while comparison.
 447:.\Generated_Source\PSoC4/UART_1_UART.c **** *   1 - address bit is significant while comparison.
 448:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 449:.\Generated_Source\PSoC4/UART_1_UART.c **** * Return:
 450:.\Generated_Source\PSoC4/UART_1_UART.c **** *  None
 451:.\Generated_Source\PSoC4/UART_1_UART.c **** *
 452:.\Generated_Source\PSoC4/UART_1_UART.c **** *******************************************************************************/
 453:.\Generated_Source\PSoC4/UART_1_UART.c **** void UART_1_UartSetRxAddressMask(uint32 addressMask)
 454:.\Generated_Source\PSoC4/UART_1_UART.c **** {
 250              		.loc 1 454 0
 251              		.cfi_startproc
 252 0000 80B5     		push	{r7, lr}
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 7, -8
 255              		.cfi_offset 14, -4
 256 0002 84B0     		sub	sp, sp, #16
 257              		.cfi_def_cfa_offset 24
 258 0004 00AF     		add	r7, sp, #0
 259              		.cfi_def_cfa_register 7
 260 0006 7860     		str	r0, [r7, #4]
 455:.\Generated_Source\PSoC4/UART_1_UART.c ****     uint32 matchReg;
 456:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 457:.\Generated_Source\PSoC4/UART_1_UART.c ****     matchReg = UART_1_RX_MATCH_REG;
 261              		.loc 1 457 0
 262 0008 084B     		ldr	r3, .L14
 263 000a 1B68     		ldr	r3, [r3]
 264 000c FB60     		str	r3, [r7, #12]
 458:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 459:.\Generated_Source\PSoC4/UART_1_UART.c ****     matchReg &= ((uint32) ~UART_1_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 265              		.loc 1 459 0
 266 000e FA68     		ldr	r2, [r7, #12]
 267 0010 074B     		ldr	r3, .L14+4
 268 0012 1340     		and	r3, r2
 269 0014 FB60     		str	r3, [r7, #12]
 460:.\Generated_Source\PSoC4/UART_1_UART.c ****     matchReg |= ((uint32) (addressMask << UART_1_RX_MATCH_MASK_POS));
 270              		.loc 1 460 0
 271 0016 7B68     		ldr	r3, [r7, #4]
 272 0018 1B04     		lsl	r3, r3, #16
 273 001a FA68     		ldr	r2, [r7, #12]
 274 001c 1343     		orr	r3, r2
 275 001e FB60     		str	r3, [r7, #12]
 461:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 462:.\Generated_Source\PSoC4/UART_1_UART.c ****     UART_1_RX_MATCH_REG = matchReg;
 276              		.loc 1 462 0
 277 0020 024B     		ldr	r3, .L14
 278 0022 FA68     		ldr	r2, [r7, #12]
 279 0024 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 14


 463:.\Generated_Source\PSoC4/UART_1_UART.c **** }
 280              		.loc 1 463 0
 281 0026 BD46     		mov	sp, r7
 282 0028 04B0     		add	sp, sp, #16
 283              		@ sp needed
 284 002a 80BD     		pop	{r7, pc}
 285              	.L15:
 286              		.align	2
 287              	.L14:
 288 002c 10030640 		.word	1074135824
 289 0030 FFFF00FF 		.word	-16711681
 290              		.cfi_endproc
 291              	.LFE4:
 292              		.size	UART_1_UartSetRxAddressMask, .-UART_1_UartSetRxAddressMask
 293              		.section	.text.UART_1_UartPutString,"ax",%progbits
 294              		.align	2
 295              		.global	UART_1_UartPutString
 296              		.code	16
 297              		.thumb_func
 298              		.type	UART_1_UartPutString, %function
 299              	UART_1_UartPutString:
 300              	.LFB5:
 464:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 465:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 466:.\Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_UART_RX_DIRECTION)
 467:.\Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 468:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartGetChar
 469:.\Generated_Source\PSoC4/UART_1_UART.c ****     ********************************************************************************
 470:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 471:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Summary:
 472:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Retrieves the next data element from the receive buffer.
 473:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is designed for ASCII characters and returns a char
 474:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  where 1 to 255 are valid characters and 0 indicates an error occurred or
 475:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  no data present.
 476:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  - The RX software buffer is disabled: returns the data element
 477:.\Generated_Source\PSoC4/UART_1_UART.c ****     *    retrieved from the RX FIFO.
 478:.\Generated_Source\PSoC4/UART_1_UART.c ****     *    Undefined data will be returned if the RX FIFO is empty.
 479:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  - The RX software buffer is enabled: returns the data element from
 480:.\Generated_Source\PSoC4/UART_1_UART.c ****     *    the software receive buffer.
 481:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 482:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Parameters:
 483:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  None
 484:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 485:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Return:
 486:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  The next data element from the receive buffer.
 487:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  ASCII character values from 1 to 255 are valid.
 488:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  A returned zero signifies an error condition or no data available.
 489:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 490:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Side Effects:
 491:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 492:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  and software buffer usage.
 493:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  RX software buffer is enabled: The internal software buffer overflow
 494:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  does not treat as an error condition.
 495:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 496:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 497:.\Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 498:.\Generated_Source\PSoC4/UART_1_UART.c ****     uint32 UART_1_UartGetChar(void)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 15


 499:.\Generated_Source\PSoC4/UART_1_UART.c ****     {
 500:.\Generated_Source\PSoC4/UART_1_UART.c ****         uint32 rxData = 0u;
 501:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 502:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Reads data only if there is data to read */
 503:.\Generated_Source\PSoC4/UART_1_UART.c ****         if (0u != UART_1_SpiUartGetRxBufferSize())
 504:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 505:.\Generated_Source\PSoC4/UART_1_UART.c ****             rxData = UART_1_SpiUartReadRxData();
 506:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 507:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 508:.\Generated_Source\PSoC4/UART_1_UART.c ****         if (UART_1_CHECK_INTR_RX(UART_1_INTR_RX_ERR))
 509:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 510:.\Generated_Source\PSoC4/UART_1_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 511:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_ClearRxInterruptSource(UART_1_INTR_RX_ERR);
 512:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 513:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 514:.\Generated_Source\PSoC4/UART_1_UART.c ****         return (rxData);
 515:.\Generated_Source\PSoC4/UART_1_UART.c ****     }
 516:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 517:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 518:.\Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 519:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartGetByte
 520:.\Generated_Source\PSoC4/UART_1_UART.c ****     ********************************************************************************
 521:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 522:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Summary:
 523:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 524:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  received byte and error condition.
 525:.\Generated_Source\PSoC4/UART_1_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 526:.\Generated_Source\PSoC4/UART_1_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 527:.\Generated_Source\PSoC4/UART_1_UART.c ****     *     empty.
 528:.\Generated_Source\PSoC4/UART_1_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 529:.\Generated_Source\PSoC4/UART_1_UART.c ****     *     software receive buffer.
 530:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 531:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Parameters:
 532:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  None
 533:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 534:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Return:
 535:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Bits 7-0 contain the next data element from the receive buffer and
 536:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  other bits contain the error condition.
 537:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 538:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Side Effects:
 539:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 540:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  and software buffer usage.
 541:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  RX software buffer is disabled: The internal software buffer overflow
 542:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  is not returned as status by this function.
 543:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 544:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 545:.\Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 546:.\Generated_Source\PSoC4/UART_1_UART.c ****     uint32 UART_1_UartGetByte(void)
 547:.\Generated_Source\PSoC4/UART_1_UART.c ****     {
 548:.\Generated_Source\PSoC4/UART_1_UART.c ****         uint32 rxData;
 549:.\Generated_Source\PSoC4/UART_1_UART.c ****         uint32 tmpStatus;
 550:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 551:.\Generated_Source\PSoC4/UART_1_UART.c ****         #if (UART_1_CHECK_RX_SW_BUFFER)
 552:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 553:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_DisableInt();
 554:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 555:.\Generated_Source\PSoC4/UART_1_UART.c ****         #endif
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 16


 556:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 557:.\Generated_Source\PSoC4/UART_1_UART.c ****         if (0u != UART_1_SpiUartGetRxBufferSize())
 558:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 559:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:.\Generated_Source\PSoC4/UART_1_UART.c ****             * buffer.
 561:.\Generated_Source\PSoC4/UART_1_UART.c ****             */
 562:.\Generated_Source\PSoC4/UART_1_UART.c ****             #if (UART_1_CHECK_RX_SW_BUFFER)
 563:.\Generated_Source\PSoC4/UART_1_UART.c ****             {            
 564:.\Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_EnableInt();
 565:.\Generated_Source\PSoC4/UART_1_UART.c ****             }
 566:.\Generated_Source\PSoC4/UART_1_UART.c ****             #endif
 567:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 568:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Get received byte */
 569:.\Generated_Source\PSoC4/UART_1_UART.c ****             rxData = UART_1_SpiUartReadRxData();
 570:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 571:.\Generated_Source\PSoC4/UART_1_UART.c ****         else
 572:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 573:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the case
 574:.\Generated_Source\PSoC4/UART_1_UART.c ****             * of empty. Otherwise the first received byte will be read.
 575:.\Generated_Source\PSoC4/UART_1_UART.c ****             */
 576:.\Generated_Source\PSoC4/UART_1_UART.c ****             rxData = UART_1_RX_FIFO_RD_REG;
 577:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 578:.\Generated_Source\PSoC4/UART_1_UART.c ****             /* Enables interrupt to receive more bytes.
 579:.\Generated_Source\PSoC4/UART_1_UART.c ****             * The RX_NOT_EMPTY interrupt is cleared by the interrupt routine
 580:.\Generated_Source\PSoC4/UART_1_UART.c ****             * in case the byte was received and read by code above.
 581:.\Generated_Source\PSoC4/UART_1_UART.c ****             */
 582:.\Generated_Source\PSoC4/UART_1_UART.c ****             #if (UART_1_CHECK_RX_SW_BUFFER)
 583:.\Generated_Source\PSoC4/UART_1_UART.c ****             {
 584:.\Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_EnableInt();
 585:.\Generated_Source\PSoC4/UART_1_UART.c ****             }
 586:.\Generated_Source\PSoC4/UART_1_UART.c ****             #endif
 587:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 588:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 589:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Get and clear RX error mask */
 590:.\Generated_Source\PSoC4/UART_1_UART.c ****         tmpStatus = (UART_1_GetRxInterruptSource() & UART_1_INTR_RX_ERR);
 591:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_ClearRxInterruptSource(UART_1_INTR_RX_ERR);
 592:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 593:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Puts together data and error status:
 594:.\Generated_Source\PSoC4/UART_1_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 595:.\Generated_Source\PSoC4/UART_1_UART.c ****         */
 596:.\Generated_Source\PSoC4/UART_1_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 597:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 598:.\Generated_Source\PSoC4/UART_1_UART.c ****         return (rxData);
 599:.\Generated_Source\PSoC4/UART_1_UART.c ****     }
 600:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 601:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 602:.\Generated_Source\PSoC4/UART_1_UART.c ****     #if !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1)
 603:.\Generated_Source\PSoC4/UART_1_UART.c ****         /*******************************************************************************
 604:.\Generated_Source\PSoC4/UART_1_UART.c ****         * Function Name: UART_1_UartSetRtsPolarity
 605:.\Generated_Source\PSoC4/UART_1_UART.c ****         ********************************************************************************
 606:.\Generated_Source\PSoC4/UART_1_UART.c ****         *
 607:.\Generated_Source\PSoC4/UART_1_UART.c ****         * Summary:
 608:.\Generated_Source\PSoC4/UART_1_UART.c ****         *  Sets active polarity of RTS output signal.
 609:.\Generated_Source\PSoC4/UART_1_UART.c ****         *
 610:.\Generated_Source\PSoC4/UART_1_UART.c ****         * Parameters:
 611:.\Generated_Source\PSoC4/UART_1_UART.c ****         *  polarity: Active polarity of RTS output signal.
 612:.\Generated_Source\PSoC4/UART_1_UART.c ****         *   UART_1_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 17


 613:.\Generated_Source\PSoC4/UART_1_UART.c ****         *   UART_1_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 614:.\Generated_Source\PSoC4/UART_1_UART.c ****         *
 615:.\Generated_Source\PSoC4/UART_1_UART.c ****         * Return:
 616:.\Generated_Source\PSoC4/UART_1_UART.c ****         *  None
 617:.\Generated_Source\PSoC4/UART_1_UART.c ****         *
 618:.\Generated_Source\PSoC4/UART_1_UART.c ****         *******************************************************************************/
 619:.\Generated_Source\PSoC4/UART_1_UART.c ****         void UART_1_UartSetRtsPolarity(uint32 polarity)
 620:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 621:.\Generated_Source\PSoC4/UART_1_UART.c ****             if(0u != polarity)
 622:.\Generated_Source\PSoC4/UART_1_UART.c ****             {
 623:.\Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_UART_FLOW_CTRL_REG |= (uint32)  UART_1_UART_FLOW_CTRL_RTS_POLARITY;
 624:.\Generated_Source\PSoC4/UART_1_UART.c ****             }
 625:.\Generated_Source\PSoC4/UART_1_UART.c ****             else
 626:.\Generated_Source\PSoC4/UART_1_UART.c ****             {
 627:.\Generated_Source\PSoC4/UART_1_UART.c ****                 UART_1_UART_FLOW_CTRL_REG &= (uint32) ~UART_1_UART_FLOW_CTRL_RTS_POLARITY;
 628:.\Generated_Source\PSoC4/UART_1_UART.c ****             }
 629:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 630:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 631:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 632:.\Generated_Source\PSoC4/UART_1_UART.c ****         /*******************************************************************************
 633:.\Generated_Source\PSoC4/UART_1_UART.c ****         * Function Name: UART_1_UartSetRtsFifoLevel
 634:.\Generated_Source\PSoC4/UART_1_UART.c ****         ********************************************************************************
 635:.\Generated_Source\PSoC4/UART_1_UART.c ****         *
 636:.\Generated_Source\PSoC4/UART_1_UART.c ****         * Summary:
 637:.\Generated_Source\PSoC4/UART_1_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:.\Generated_Source\PSoC4/UART_1_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:.\Generated_Source\PSoC4/UART_1_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:.\Generated_Source\PSoC4/UART_1_UART.c ****         *
 641:.\Generated_Source\PSoC4/UART_1_UART.c ****         * Parameters:
 642:.\Generated_Source\PSoC4/UART_1_UART.c ****         *  level: Level in the RX FIFO for RTS signal activation.
 643:.\Generated_Source\PSoC4/UART_1_UART.c ****         *         The range of valid level values is between 0 and RX FIFO depth - 1.
 644:.\Generated_Source\PSoC4/UART_1_UART.c ****         *         Setting level value to 0 disables RTS signal activation.
 645:.\Generated_Source\PSoC4/UART_1_UART.c ****         *
 646:.\Generated_Source\PSoC4/UART_1_UART.c ****         * Return:
 647:.\Generated_Source\PSoC4/UART_1_UART.c ****         *  None
 648:.\Generated_Source\PSoC4/UART_1_UART.c ****         *
 649:.\Generated_Source\PSoC4/UART_1_UART.c ****         *******************************************************************************/
 650:.\Generated_Source\PSoC4/UART_1_UART.c ****         void UART_1_UartSetRtsFifoLevel(uint32 level)
 651:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 652:.\Generated_Source\PSoC4/UART_1_UART.c ****             uint32 uartFlowCtrl;
 653:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 654:.\Generated_Source\PSoC4/UART_1_UART.c ****             uartFlowCtrl = UART_1_UART_FLOW_CTRL_REG;
 655:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 656:.\Generated_Source\PSoC4/UART_1_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_1_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level ma
 657:.\Generated_Source\PSoC4/UART_1_UART.c ****             uartFlowCtrl |= ((uint32) (UART_1_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 658:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 659:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 661:.\Generated_Source\PSoC4/UART_1_UART.c ****     #endif /* !(UART_1_CY_SCBIP_V0 || UART_1_CY_SCBIP_V1) */
 662:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 663:.\Generated_Source\PSoC4/UART_1_UART.c **** #endif /* (UART_1_UART_RX_DIRECTION) */
 664:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 665:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 666:.\Generated_Source\PSoC4/UART_1_UART.c **** #if(UART_1_UART_TX_DIRECTION)
 667:.\Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 668:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartPutString
 669:.\Generated_Source\PSoC4/UART_1_UART.c ****     ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 18


 670:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 671:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Summary:
 672:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 673:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  next available bus time.
 674:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is blocking and waits until there is space available to put
 675:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  all the requested data into the  transmit buffer.
 676:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 677:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  string: pointer to the null terminated string array to be placed in the
 679:.\Generated_Source\PSoC4/UART_1_UART.c ****     *          transmit buffer.
 680:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 681:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Return:
 682:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  None
 683:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 684:.\Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 685:.\Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartPutString(const char8 string[])
 686:.\Generated_Source\PSoC4/UART_1_UART.c ****     {
 301              		.loc 1 686 0
 302              		.cfi_startproc
 303 0000 80B5     		push	{r7, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 84B0     		sub	sp, sp, #16
 308              		.cfi_def_cfa_offset 24
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
 311 0006 7860     		str	r0, [r7, #4]
 687:.\Generated_Source\PSoC4/UART_1_UART.c ****         uint32 bufIndex;
 688:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 689:.\Generated_Source\PSoC4/UART_1_UART.c ****         bufIndex = 0u;
 312              		.loc 1 689 0
 313 0008 0023     		mov	r3, #0
 314 000a FB60     		str	r3, [r7, #12]
 690:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 691:.\Generated_Source\PSoC4/UART_1_UART.c ****         /* Blocks the control flow until all data has been sent */
 692:.\Generated_Source\PSoC4/UART_1_UART.c ****         while(string[bufIndex] != ((char8) 0))
 315              		.loc 1 692 0
 316 000c 09E0     		b	.L17
 317              	.L18:
 693:.\Generated_Source\PSoC4/UART_1_UART.c ****         {
 694:.\Generated_Source\PSoC4/UART_1_UART.c ****             UART_1_UartPutChar((uint32) string[bufIndex]);
 318              		.loc 1 694 0
 319 000e 7A68     		ldr	r2, [r7, #4]
 320 0010 FB68     		ldr	r3, [r7, #12]
 321 0012 D318     		add	r3, r2, r3
 322 0014 1B78     		ldrb	r3, [r3]
 323 0016 181C     		mov	r0, r3
 324 0018 FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 695:.\Generated_Source\PSoC4/UART_1_UART.c ****             bufIndex++;
 325              		.loc 1 695 0
 326 001c FB68     		ldr	r3, [r7, #12]
 327 001e 0133     		add	r3, r3, #1
 328 0020 FB60     		str	r3, [r7, #12]
 329              	.L17:
 692:.\Generated_Source\PSoC4/UART_1_UART.c ****         while(string[bufIndex] != ((char8) 0))
 330              		.loc 1 692 0 discriminator 1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 19


 331 0022 7A68     		ldr	r2, [r7, #4]
 332 0024 FB68     		ldr	r3, [r7, #12]
 333 0026 D318     		add	r3, r2, r3
 334 0028 1B78     		ldrb	r3, [r3]
 335 002a 002B     		cmp	r3, #0
 336 002c EFD1     		bne	.L18
 696:.\Generated_Source\PSoC4/UART_1_UART.c ****         }
 697:.\Generated_Source\PSoC4/UART_1_UART.c ****     }
 337              		.loc 1 697 0
 338 002e BD46     		mov	sp, r7
 339 0030 04B0     		add	sp, sp, #16
 340              		@ sp needed
 341 0032 80BD     		pop	{r7, pc}
 342              		.cfi_endproc
 343              	.LFE5:
 344              		.size	UART_1_UartPutString, .-UART_1_UartPutString
 345              		.section	.text.UART_1_UartPutCRLF,"ax",%progbits
 346              		.align	2
 347              		.global	UART_1_UartPutCRLF
 348              		.code	16
 349              		.thumb_func
 350              		.type	UART_1_UartPutCRLF, %function
 351              	UART_1_UartPutCRLF:
 352              	.LFB6:
 698:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 699:.\Generated_Source\PSoC4/UART_1_UART.c **** 
 700:.\Generated_Source\PSoC4/UART_1_UART.c ****     /*******************************************************************************
 701:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Function Name: UART_1_UartPutCRLF
 702:.\Generated_Source\PSoC4/UART_1_UART.c ****     ********************************************************************************
 703:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 704:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Summary:
 705:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  Places a byte of data followed by a carriage return (0x0D) and
 706:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  line feed (0x0A) into the transmit buffer.
 707:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  This function is blocking and waits until there is space available to put
 708:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  all the requested data into the  transmit buffer.
 709:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 710:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Parameters:
 711:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  txDataByte : the data to be transmitted.
 712:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 713:.\Generated_Source\PSoC4/UART_1_UART.c ****     * Return:
 714:.\Generated_Source\PSoC4/UART_1_UART.c ****     *  None
 715:.\Generated_Source\PSoC4/UART_1_UART.c ****     *
 716:.\Generated_Source\PSoC4/UART_1_UART.c ****     *******************************************************************************/
 717:.\Generated_Source\PSoC4/UART_1_UART.c ****     void UART_1_UartPutCRLF(uint32 txDataByte)
 718:.\Generated_Source\PSoC4/UART_1_UART.c ****     {
 353              		.loc 1 718 0
 354              		.cfi_startproc
 355 0000 80B5     		push	{r7, lr}
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 7, -8
 358              		.cfi_offset 14, -4
 359 0002 82B0     		sub	sp, sp, #8
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
 362              		.cfi_def_cfa_register 7
 363 0006 7860     		str	r0, [r7, #4]
 719:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 20


 364              		.loc 1 719 0
 365 0008 7B68     		ldr	r3, [r7, #4]
 366 000a 181C     		mov	r0, r3
 367 000c FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 720:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 368              		.loc 1 720 0
 369 0010 0D20     		mov	r0, #13
 370 0012 FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 721:.\Generated_Source\PSoC4/UART_1_UART.c ****         UART_1_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 371              		.loc 1 721 0
 372 0016 0A20     		mov	r0, #10
 373 0018 FFF7FEFF 		bl	UART_1_SpiUartWriteTxData
 722:.\Generated_Source\PSoC4/UART_1_UART.c ****     }
 374              		.loc 1 722 0
 375 001c BD46     		mov	sp, r7
 376 001e 02B0     		add	sp, sp, #8
 377              		@ sp needed
 378 0020 80BD     		pop	{r7, pc}
 379              		.cfi_endproc
 380              	.LFE6:
 381              		.size	UART_1_UartPutCRLF, .-UART_1_UartPutCRLF
 382 0022 C046     		.text
 383              	.Letext0:
 384              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 385              		.section	.debug_info,"",%progbits
 386              	.Ldebug_info0:
 387 0000 AC010000 		.4byte	0x1ac
 388 0004 0400     		.2byte	0x4
 389 0006 00000000 		.4byte	.Ldebug_abbrev0
 390 000a 04       		.byte	0x4
 391 000b 01       		.uleb128 0x1
 392 000c 59000000 		.4byte	.LASF28
 393 0010 01       		.byte	0x1
 394 0011 C5010000 		.4byte	.LASF29
 395 0015 37010000 		.4byte	.LASF30
 396 0019 00000000 		.4byte	.Ldebug_ranges0+0
 397 001d 00000000 		.4byte	0
 398 0021 00000000 		.4byte	.Ldebug_line0
 399 0025 02       		.uleb128 0x2
 400 0026 01       		.byte	0x1
 401 0027 06       		.byte	0x6
 402 0028 82020000 		.4byte	.LASF0
 403 002c 02       		.uleb128 0x2
 404 002d 01       		.byte	0x1
 405 002e 08       		.byte	0x8
 406 002f D5000000 		.4byte	.LASF1
 407 0033 02       		.uleb128 0x2
 408 0034 02       		.byte	0x2
 409 0035 05       		.byte	0x5
 410 0036 56020000 		.4byte	.LASF2
 411 003a 02       		.uleb128 0x2
 412 003b 02       		.byte	0x2
 413 003c 07       		.byte	0x7
 414 003d FB000000 		.4byte	.LASF3
 415 0041 02       		.uleb128 0x2
 416 0042 04       		.byte	0x4
 417 0043 05       		.byte	0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 21


 418 0044 70020000 		.4byte	.LASF4
 419 0048 02       		.uleb128 0x2
 420 0049 04       		.byte	0x4
 421 004a 07       		.byte	0x7
 422 004b E9000000 		.4byte	.LASF5
 423 004f 02       		.uleb128 0x2
 424 0050 08       		.byte	0x8
 425 0051 05       		.byte	0x5
 426 0052 00000000 		.4byte	.LASF6
 427 0056 02       		.uleb128 0x2
 428 0057 08       		.byte	0x8
 429 0058 07       		.byte	0x7
 430 0059 01020000 		.4byte	.LASF7
 431 005d 03       		.uleb128 0x3
 432 005e 04       		.byte	0x4
 433 005f 05       		.byte	0x5
 434 0060 696E7400 		.ascii	"int\000"
 435 0064 02       		.uleb128 0x2
 436 0065 04       		.byte	0x4
 437 0066 07       		.byte	0x7
 438 0067 EC010000 		.4byte	.LASF8
 439 006b 04       		.uleb128 0x4
 440 006c BE010000 		.4byte	.LASF11
 441 0070 02       		.byte	0x2
 442 0071 C3       		.byte	0xc3
 443 0072 48000000 		.4byte	0x48
 444 0076 02       		.uleb128 0x2
 445 0077 04       		.byte	0x4
 446 0078 04       		.byte	0x4
 447 0079 53000000 		.4byte	.LASF9
 448 007d 02       		.uleb128 0x2
 449 007e 08       		.byte	0x8
 450 007f 04       		.byte	0x4
 451 0080 1A010000 		.4byte	.LASF10
 452 0084 04       		.uleb128 0x4
 453 0085 E3000000 		.4byte	.LASF12
 454 0089 02       		.byte	0x2
 455 008a D2       		.byte	0xd2
 456 008b 8F000000 		.4byte	0x8f
 457 008f 02       		.uleb128 0x2
 458 0090 01       		.byte	0x1
 459 0091 08       		.byte	0x8
 460 0092 51020000 		.4byte	.LASF13
 461 0096 05       		.uleb128 0x5
 462 0097 0E000000 		.4byte	.LASF14
 463 009b 02       		.byte	0x2
 464 009c 6D01     		.2byte	0x16d
 465 009e A2000000 		.4byte	0xa2
 466 00a2 06       		.uleb128 0x6
 467 00a3 6B000000 		.4byte	0x6b
 468 00a7 02       		.uleb128 0x2
 469 00a8 04       		.byte	0x4
 470 00a9 07       		.byte	0x7
 471 00aa 3D020000 		.4byte	.LASF15
 472 00ae 07       		.uleb128 0x7
 473 00af 60020000 		.4byte	.LASF16
 474 00b3 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 22


 475 00b4 E6       		.byte	0xe6
 476 00b5 00000000 		.4byte	.LFB0
 477 00b9 A8000000 		.4byte	.LFE0-.LFB0
 478 00bd 01       		.uleb128 0x1
 479 00be 9C       		.byte	0x9c
 480 00bf 08       		.uleb128 0x8
 481 00c0 21010000 		.4byte	.LASF17
 482 00c4 01       		.byte	0x1
 483 00c5 3001     		.2byte	0x130
 484 00c7 00000000 		.4byte	.LFB1
 485 00cb 1C000000 		.4byte	.LFE1-.LFB1
 486 00cf 01       		.uleb128 0x1
 487 00d0 9C       		.byte	0x9c
 488 00d1 08       		.uleb128 0x8
 489 00d2 3C000000 		.4byte	.LASF18
 490 00d6 01       		.byte	0x1
 491 00d7 6801     		.2byte	0x168
 492 00d9 00000000 		.4byte	.LFB2
 493 00dd 18000000 		.4byte	.LFE2-.LFB2
 494 00e1 01       		.uleb128 0x1
 495 00e2 9C       		.byte	0x9c
 496 00e3 09       		.uleb128 0x9
 497 00e4 A6010000 		.4byte	.LASF19
 498 00e8 01       		.byte	0x1
 499 00e9 A801     		.2byte	0x1a8
 500 00eb 00000000 		.4byte	.LFB3
 501 00ef 34000000 		.4byte	.LFE3-.LFB3
 502 00f3 01       		.uleb128 0x1
 503 00f4 9C       		.byte	0x9c
 504 00f5 18010000 		.4byte	0x118
 505 00f9 0A       		.uleb128 0xa
 506 00fa F9010000 		.4byte	.LASF21
 507 00fe 01       		.byte	0x1
 508 00ff A801     		.2byte	0x1a8
 509 0101 6B000000 		.4byte	0x6b
 510 0105 02       		.uleb128 0x2
 511 0106 91       		.byte	0x91
 512 0107 6C       		.sleb128 -20
 513 0108 0B       		.uleb128 0xb
 514 0109 79020000 		.4byte	.LASF23
 515 010d 01       		.byte	0x1
 516 010e AA01     		.2byte	0x1aa
 517 0110 6B000000 		.4byte	0x6b
 518 0114 02       		.uleb128 0x2
 519 0115 91       		.byte	0x91
 520 0116 74       		.sleb128 -12
 521 0117 00       		.byte	0
 522 0118 09       		.uleb128 0x9
 523 0119 21020000 		.4byte	.LASF20
 524 011d 01       		.byte	0x1
 525 011e C501     		.2byte	0x1c5
 526 0120 00000000 		.4byte	.LFB4
 527 0124 34000000 		.4byte	.LFE4-.LFB4
 528 0128 01       		.uleb128 0x1
 529 0129 9C       		.byte	0x9c
 530 012a 4D010000 		.4byte	0x14d
 531 012e 0A       		.uleb128 0xa
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 23


 532 012f 0E010000 		.4byte	.LASF22
 533 0133 01       		.byte	0x1
 534 0134 C501     		.2byte	0x1c5
 535 0136 6B000000 		.4byte	0x6b
 536 013a 02       		.uleb128 0x2
 537 013b 91       		.byte	0x91
 538 013c 6C       		.sleb128 -20
 539 013d 0B       		.uleb128 0xb
 540 013e 79020000 		.4byte	.LASF23
 541 0142 01       		.byte	0x1
 542 0143 C701     		.2byte	0x1c7
 543 0145 6B000000 		.4byte	0x6b
 544 0149 02       		.uleb128 0x2
 545 014a 91       		.byte	0x91
 546 014b 74       		.sleb128 -12
 547 014c 00       		.byte	0
 548 014d 0C       		.uleb128 0xc
 549 014e 27000000 		.4byte	.LASF24
 550 0152 01       		.byte	0x1
 551 0153 AD02     		.2byte	0x2ad
 552 0155 00000000 		.4byte	.LFB5
 553 0159 34000000 		.4byte	.LFE5-.LFB5
 554 015d 01       		.uleb128 0x1
 555 015e 9C       		.byte	0x9c
 556 015f 82010000 		.4byte	0x182
 557 0163 0A       		.uleb128 0xa
 558 0164 4C000000 		.4byte	.LASF25
 559 0168 01       		.byte	0x1
 560 0169 AD02     		.2byte	0x2ad
 561 016b 82010000 		.4byte	0x182
 562 016f 02       		.uleb128 0x2
 563 0170 91       		.byte	0x91
 564 0171 6C       		.sleb128 -20
 565 0172 0B       		.uleb128 0xb
 566 0173 18020000 		.4byte	.LASF26
 567 0177 01       		.byte	0x1
 568 0178 AF02     		.2byte	0x2af
 569 017a 6B000000 		.4byte	0x6b
 570 017e 02       		.uleb128 0x2
 571 017f 91       		.byte	0x91
 572 0180 74       		.sleb128 -12
 573 0181 00       		.byte	0
 574 0182 0D       		.uleb128 0xd
 575 0183 04       		.byte	0x4
 576 0184 88010000 		.4byte	0x188
 577 0188 0E       		.uleb128 0xe
 578 0189 84000000 		.4byte	0x84
 579 018d 0F       		.uleb128 0xf
 580 018e 14000000 		.4byte	.LASF31
 581 0192 01       		.byte	0x1
 582 0193 CD02     		.2byte	0x2cd
 583 0195 00000000 		.4byte	.LFB6
 584 0199 22000000 		.4byte	.LFE6-.LFB6
 585 019d 01       		.uleb128 0x1
 586 019e 9C       		.byte	0x9c
 587 019f 0A       		.uleb128 0xa
 588 01a0 46020000 		.4byte	.LASF27
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 24


 589 01a4 01       		.byte	0x1
 590 01a5 CD02     		.2byte	0x2cd
 591 01a7 6B000000 		.4byte	0x6b
 592 01ab 02       		.uleb128 0x2
 593 01ac 91       		.byte	0x91
 594 01ad 74       		.sleb128 -12
 595 01ae 00       		.byte	0
 596 01af 00       		.byte	0
 597              		.section	.debug_abbrev,"",%progbits
 598              	.Ldebug_abbrev0:
 599 0000 01       		.uleb128 0x1
 600 0001 11       		.uleb128 0x11
 601 0002 01       		.byte	0x1
 602 0003 25       		.uleb128 0x25
 603 0004 0E       		.uleb128 0xe
 604 0005 13       		.uleb128 0x13
 605 0006 0B       		.uleb128 0xb
 606 0007 03       		.uleb128 0x3
 607 0008 0E       		.uleb128 0xe
 608 0009 1B       		.uleb128 0x1b
 609 000a 0E       		.uleb128 0xe
 610 000b 55       		.uleb128 0x55
 611 000c 17       		.uleb128 0x17
 612 000d 11       		.uleb128 0x11
 613 000e 01       		.uleb128 0x1
 614 000f 10       		.uleb128 0x10
 615 0010 17       		.uleb128 0x17
 616 0011 00       		.byte	0
 617 0012 00       		.byte	0
 618 0013 02       		.uleb128 0x2
 619 0014 24       		.uleb128 0x24
 620 0015 00       		.byte	0
 621 0016 0B       		.uleb128 0xb
 622 0017 0B       		.uleb128 0xb
 623 0018 3E       		.uleb128 0x3e
 624 0019 0B       		.uleb128 0xb
 625 001a 03       		.uleb128 0x3
 626 001b 0E       		.uleb128 0xe
 627 001c 00       		.byte	0
 628 001d 00       		.byte	0
 629 001e 03       		.uleb128 0x3
 630 001f 24       		.uleb128 0x24
 631 0020 00       		.byte	0
 632 0021 0B       		.uleb128 0xb
 633 0022 0B       		.uleb128 0xb
 634 0023 3E       		.uleb128 0x3e
 635 0024 0B       		.uleb128 0xb
 636 0025 03       		.uleb128 0x3
 637 0026 08       		.uleb128 0x8
 638 0027 00       		.byte	0
 639 0028 00       		.byte	0
 640 0029 04       		.uleb128 0x4
 641 002a 16       		.uleb128 0x16
 642 002b 00       		.byte	0
 643 002c 03       		.uleb128 0x3
 644 002d 0E       		.uleb128 0xe
 645 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 25


 646 002f 0B       		.uleb128 0xb
 647 0030 3B       		.uleb128 0x3b
 648 0031 0B       		.uleb128 0xb
 649 0032 49       		.uleb128 0x49
 650 0033 13       		.uleb128 0x13
 651 0034 00       		.byte	0
 652 0035 00       		.byte	0
 653 0036 05       		.uleb128 0x5
 654 0037 16       		.uleb128 0x16
 655 0038 00       		.byte	0
 656 0039 03       		.uleb128 0x3
 657 003a 0E       		.uleb128 0xe
 658 003b 3A       		.uleb128 0x3a
 659 003c 0B       		.uleb128 0xb
 660 003d 3B       		.uleb128 0x3b
 661 003e 05       		.uleb128 0x5
 662 003f 49       		.uleb128 0x49
 663 0040 13       		.uleb128 0x13
 664 0041 00       		.byte	0
 665 0042 00       		.byte	0
 666 0043 06       		.uleb128 0x6
 667 0044 35       		.uleb128 0x35
 668 0045 00       		.byte	0
 669 0046 49       		.uleb128 0x49
 670 0047 13       		.uleb128 0x13
 671 0048 00       		.byte	0
 672 0049 00       		.byte	0
 673 004a 07       		.uleb128 0x7
 674 004b 2E       		.uleb128 0x2e
 675 004c 00       		.byte	0
 676 004d 3F       		.uleb128 0x3f
 677 004e 19       		.uleb128 0x19
 678 004f 03       		.uleb128 0x3
 679 0050 0E       		.uleb128 0xe
 680 0051 3A       		.uleb128 0x3a
 681 0052 0B       		.uleb128 0xb
 682 0053 3B       		.uleb128 0x3b
 683 0054 0B       		.uleb128 0xb
 684 0055 27       		.uleb128 0x27
 685 0056 19       		.uleb128 0x19
 686 0057 11       		.uleb128 0x11
 687 0058 01       		.uleb128 0x1
 688 0059 12       		.uleb128 0x12
 689 005a 06       		.uleb128 0x6
 690 005b 40       		.uleb128 0x40
 691 005c 18       		.uleb128 0x18
 692 005d 9742     		.uleb128 0x2117
 693 005f 19       		.uleb128 0x19
 694 0060 00       		.byte	0
 695 0061 00       		.byte	0
 696 0062 08       		.uleb128 0x8
 697 0063 2E       		.uleb128 0x2e
 698 0064 00       		.byte	0
 699 0065 3F       		.uleb128 0x3f
 700 0066 19       		.uleb128 0x19
 701 0067 03       		.uleb128 0x3
 702 0068 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 26


 703 0069 3A       		.uleb128 0x3a
 704 006a 0B       		.uleb128 0xb
 705 006b 3B       		.uleb128 0x3b
 706 006c 05       		.uleb128 0x5
 707 006d 27       		.uleb128 0x27
 708 006e 19       		.uleb128 0x19
 709 006f 11       		.uleb128 0x11
 710 0070 01       		.uleb128 0x1
 711 0071 12       		.uleb128 0x12
 712 0072 06       		.uleb128 0x6
 713 0073 40       		.uleb128 0x40
 714 0074 18       		.uleb128 0x18
 715 0075 9742     		.uleb128 0x2117
 716 0077 19       		.uleb128 0x19
 717 0078 00       		.byte	0
 718 0079 00       		.byte	0
 719 007a 09       		.uleb128 0x9
 720 007b 2E       		.uleb128 0x2e
 721 007c 01       		.byte	0x1
 722 007d 3F       		.uleb128 0x3f
 723 007e 19       		.uleb128 0x19
 724 007f 03       		.uleb128 0x3
 725 0080 0E       		.uleb128 0xe
 726 0081 3A       		.uleb128 0x3a
 727 0082 0B       		.uleb128 0xb
 728 0083 3B       		.uleb128 0x3b
 729 0084 05       		.uleb128 0x5
 730 0085 27       		.uleb128 0x27
 731 0086 19       		.uleb128 0x19
 732 0087 11       		.uleb128 0x11
 733 0088 01       		.uleb128 0x1
 734 0089 12       		.uleb128 0x12
 735 008a 06       		.uleb128 0x6
 736 008b 40       		.uleb128 0x40
 737 008c 18       		.uleb128 0x18
 738 008d 9742     		.uleb128 0x2117
 739 008f 19       		.uleb128 0x19
 740 0090 01       		.uleb128 0x1
 741 0091 13       		.uleb128 0x13
 742 0092 00       		.byte	0
 743 0093 00       		.byte	0
 744 0094 0A       		.uleb128 0xa
 745 0095 05       		.uleb128 0x5
 746 0096 00       		.byte	0
 747 0097 03       		.uleb128 0x3
 748 0098 0E       		.uleb128 0xe
 749 0099 3A       		.uleb128 0x3a
 750 009a 0B       		.uleb128 0xb
 751 009b 3B       		.uleb128 0x3b
 752 009c 05       		.uleb128 0x5
 753 009d 49       		.uleb128 0x49
 754 009e 13       		.uleb128 0x13
 755 009f 02       		.uleb128 0x2
 756 00a0 18       		.uleb128 0x18
 757 00a1 00       		.byte	0
 758 00a2 00       		.byte	0
 759 00a3 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 27


 760 00a4 34       		.uleb128 0x34
 761 00a5 00       		.byte	0
 762 00a6 03       		.uleb128 0x3
 763 00a7 0E       		.uleb128 0xe
 764 00a8 3A       		.uleb128 0x3a
 765 00a9 0B       		.uleb128 0xb
 766 00aa 3B       		.uleb128 0x3b
 767 00ab 05       		.uleb128 0x5
 768 00ac 49       		.uleb128 0x49
 769 00ad 13       		.uleb128 0x13
 770 00ae 02       		.uleb128 0x2
 771 00af 18       		.uleb128 0x18
 772 00b0 00       		.byte	0
 773 00b1 00       		.byte	0
 774 00b2 0C       		.uleb128 0xc
 775 00b3 2E       		.uleb128 0x2e
 776 00b4 01       		.byte	0x1
 777 00b5 3F       		.uleb128 0x3f
 778 00b6 19       		.uleb128 0x19
 779 00b7 03       		.uleb128 0x3
 780 00b8 0E       		.uleb128 0xe
 781 00b9 3A       		.uleb128 0x3a
 782 00ba 0B       		.uleb128 0xb
 783 00bb 3B       		.uleb128 0x3b
 784 00bc 05       		.uleb128 0x5
 785 00bd 27       		.uleb128 0x27
 786 00be 19       		.uleb128 0x19
 787 00bf 11       		.uleb128 0x11
 788 00c0 01       		.uleb128 0x1
 789 00c1 12       		.uleb128 0x12
 790 00c2 06       		.uleb128 0x6
 791 00c3 40       		.uleb128 0x40
 792 00c4 18       		.uleb128 0x18
 793 00c5 9642     		.uleb128 0x2116
 794 00c7 19       		.uleb128 0x19
 795 00c8 01       		.uleb128 0x1
 796 00c9 13       		.uleb128 0x13
 797 00ca 00       		.byte	0
 798 00cb 00       		.byte	0
 799 00cc 0D       		.uleb128 0xd
 800 00cd 0F       		.uleb128 0xf
 801 00ce 00       		.byte	0
 802 00cf 0B       		.uleb128 0xb
 803 00d0 0B       		.uleb128 0xb
 804 00d1 49       		.uleb128 0x49
 805 00d2 13       		.uleb128 0x13
 806 00d3 00       		.byte	0
 807 00d4 00       		.byte	0
 808 00d5 0E       		.uleb128 0xe
 809 00d6 26       		.uleb128 0x26
 810 00d7 00       		.byte	0
 811 00d8 49       		.uleb128 0x49
 812 00d9 13       		.uleb128 0x13
 813 00da 00       		.byte	0
 814 00db 00       		.byte	0
 815 00dc 0F       		.uleb128 0xf
 816 00dd 2E       		.uleb128 0x2e
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 28


 817 00de 01       		.byte	0x1
 818 00df 3F       		.uleb128 0x3f
 819 00e0 19       		.uleb128 0x19
 820 00e1 03       		.uleb128 0x3
 821 00e2 0E       		.uleb128 0xe
 822 00e3 3A       		.uleb128 0x3a
 823 00e4 0B       		.uleb128 0xb
 824 00e5 3B       		.uleb128 0x3b
 825 00e6 05       		.uleb128 0x5
 826 00e7 27       		.uleb128 0x27
 827 00e8 19       		.uleb128 0x19
 828 00e9 11       		.uleb128 0x11
 829 00ea 01       		.uleb128 0x1
 830 00eb 12       		.uleb128 0x12
 831 00ec 06       		.uleb128 0x6
 832 00ed 40       		.uleb128 0x40
 833 00ee 18       		.uleb128 0x18
 834 00ef 9642     		.uleb128 0x2116
 835 00f1 19       		.uleb128 0x19
 836 00f2 00       		.byte	0
 837 00f3 00       		.byte	0
 838 00f4 00       		.byte	0
 839              		.section	.debug_aranges,"",%progbits
 840 0000 4C000000 		.4byte	0x4c
 841 0004 0200     		.2byte	0x2
 842 0006 00000000 		.4byte	.Ldebug_info0
 843 000a 04       		.byte	0x4
 844 000b 00       		.byte	0
 845 000c 0000     		.2byte	0
 846 000e 0000     		.2byte	0
 847 0010 00000000 		.4byte	.LFB0
 848 0014 A8000000 		.4byte	.LFE0-.LFB0
 849 0018 00000000 		.4byte	.LFB1
 850 001c 1C000000 		.4byte	.LFE1-.LFB1
 851 0020 00000000 		.4byte	.LFB2
 852 0024 18000000 		.4byte	.LFE2-.LFB2
 853 0028 00000000 		.4byte	.LFB3
 854 002c 34000000 		.4byte	.LFE3-.LFB3
 855 0030 00000000 		.4byte	.LFB4
 856 0034 34000000 		.4byte	.LFE4-.LFB4
 857 0038 00000000 		.4byte	.LFB5
 858 003c 34000000 		.4byte	.LFE5-.LFB5
 859 0040 00000000 		.4byte	.LFB6
 860 0044 22000000 		.4byte	.LFE6-.LFB6
 861 0048 00000000 		.4byte	0
 862 004c 00000000 		.4byte	0
 863              		.section	.debug_ranges,"",%progbits
 864              	.Ldebug_ranges0:
 865 0000 00000000 		.4byte	.LFB0
 866 0004 A8000000 		.4byte	.LFE0
 867 0008 00000000 		.4byte	.LFB1
 868 000c 1C000000 		.4byte	.LFE1
 869 0010 00000000 		.4byte	.LFB2
 870 0014 18000000 		.4byte	.LFE2
 871 0018 00000000 		.4byte	.LFB3
 872 001c 34000000 		.4byte	.LFE3
 873 0020 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 29


 874 0024 34000000 		.4byte	.LFE4
 875 0028 00000000 		.4byte	.LFB5
 876 002c 34000000 		.4byte	.LFE5
 877 0030 00000000 		.4byte	.LFB6
 878 0034 22000000 		.4byte	.LFE6
 879 0038 00000000 		.4byte	0
 880 003c 00000000 		.4byte	0
 881              		.section	.debug_line,"",%progbits
 882              	.Ldebug_line0:
 883 0000 0F010000 		.section	.debug_str,"MS",%progbits,1
 883      02006100 
 883      00000201 
 883      FB0E0D00 
 883      01010101 
 884              	.LASF6:
 885 0000 6C6F6E67 		.ascii	"long long int\000"
 885      206C6F6E 
 885      6720696E 
 885      7400
 886              	.LASF14:
 887 000e 72656733 		.ascii	"reg32\000"
 887      3200
 888              	.LASF31:
 889 0014 55415254 		.ascii	"UART_1_UartPutCRLF\000"
 889      5F315F55 
 889      61727450 
 889      75744352 
 889      4C4600
 890              	.LASF24:
 891 0027 55415254 		.ascii	"UART_1_UartPutString\000"
 891      5F315F55 
 891      61727450 
 891      75745374 
 891      72696E67 
 892              	.LASF18:
 893 003c 55415254 		.ascii	"UART_1_UartStop\000"
 893      5F315F55 
 893      61727453 
 893      746F7000 
 894              	.LASF25:
 895 004c 73747269 		.ascii	"string\000"
 895      6E6700
 896              	.LASF9:
 897 0053 666C6F61 		.ascii	"float\000"
 897      7400
 898              	.LASF28:
 899 0059 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 899      4320342E 
 899      382E3420 
 899      32303134 
 899      30353236 
 900 008c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 900      20726576 
 900      6973696F 
 900      6E203231 
 900      31333538 
 901 00bf 30202D66 		.ascii	"0 -ffunction-sections\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 30


 901      66756E63 
 901      74696F6E 
 901      2D736563 
 901      74696F6E 
 902              	.LASF1:
 903 00d5 756E7369 		.ascii	"unsigned char\000"
 903      676E6564 
 903      20636861 
 903      7200
 904              	.LASF12:
 905 00e3 63686172 		.ascii	"char8\000"
 905      3800
 906              	.LASF5:
 907 00e9 6C6F6E67 		.ascii	"long unsigned int\000"
 907      20756E73 
 907      69676E65 
 907      6420696E 
 907      7400
 908              	.LASF3:
 909 00fb 73686F72 		.ascii	"short unsigned int\000"
 909      7420756E 
 909      7369676E 
 909      65642069 
 909      6E7400
 910              	.LASF22:
 911 010e 61646472 		.ascii	"addressMask\000"
 911      6573734D 
 911      61736B00 
 912              	.LASF10:
 913 011a 646F7562 		.ascii	"double\000"
 913      6C6500
 914              	.LASF17:
 915 0121 55415254 		.ascii	"UART_1_UartPostEnable\000"
 915      5F315F55 
 915      61727450 
 915      6F737445 
 915      6E61626C 
 916              	.LASF30:
 917 0137 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 917      73657273 
 917      5C6D6974 
 917      6368656C 
 917      6C5C446F 
 918 0164 2D546872 		.ascii	"-Throttle\\ExampleProject1\\Lab Solutions\\Lab 3 Ca"
 918      6F74746C 
 918      655C4578 
 918      616D706C 
 918      6550726F 
 919 0194 7053656E 		.ascii	"pSense UART.cydsn\000"
 919      73652055 
 919      4152542E 
 919      63796473 
 919      6E00
 920              	.LASF19:
 921 01a6 55415254 		.ascii	"UART_1_UartSetRxAddress\000"
 921      5F315F55 
 921      61727453 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 31


 921      65745278 
 921      41646472 
 922              	.LASF11:
 923 01be 75696E74 		.ascii	"uint32\000"
 923      333200
 924              	.LASF29:
 925 01c5 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_1_UART.c\000"
 925      6E657261 
 925      7465645F 
 925      536F7572 
 925      63655C50 
 926              	.LASF8:
 927 01ec 756E7369 		.ascii	"unsigned int\000"
 927      676E6564 
 927      20696E74 
 927      00
 928              	.LASF21:
 929 01f9 61646472 		.ascii	"address\000"
 929      65737300 
 930              	.LASF7:
 931 0201 6C6F6E67 		.ascii	"long long unsigned int\000"
 931      206C6F6E 
 931      6720756E 
 931      7369676E 
 931      65642069 
 932              	.LASF26:
 933 0218 62756649 		.ascii	"bufIndex\000"
 933      6E646578 
 933      00
 934              	.LASF20:
 935 0221 55415254 		.ascii	"UART_1_UartSetRxAddressMask\000"
 935      5F315F55 
 935      61727453 
 935      65745278 
 935      41646472 
 936              	.LASF15:
 937 023d 73697A65 		.ascii	"sizetype\000"
 937      74797065 
 937      00
 938              	.LASF27:
 939 0246 74784461 		.ascii	"txDataByte\000"
 939      74614279 
 939      746500
 940              	.LASF13:
 941 0251 63686172 		.ascii	"char\000"
 941      00
 942              	.LASF2:
 943 0256 73686F72 		.ascii	"short int\000"
 943      7420696E 
 943      7400
 944              	.LASF16:
 945 0260 55415254 		.ascii	"UART_1_UartInit\000"
 945      5F315F55 
 945      61727449 
 945      6E697400 
 946              	.LASF4:
 947 0270 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccl5CBCG.s 			page 32


 947      20696E74 
 947      00
 948              	.LASF23:
 949 0279 6D617463 		.ascii	"matchReg\000"
 949      68526567 
 949      00
 950              	.LASF0:
 951 0282 7369676E 		.ascii	"signed char\000"
 951      65642063 
 951      68617200 
 952              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
