ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_1_initVar
  18              		.bss
  19              		.type	PWM_1_initVar, %object
  20              		.size	PWM_1_initVar, 1
  21              	PWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_1_Init, %function
  29              	PWM_1_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  This file provides the source code to the API for the PWM_1
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_1.c **** *
   9:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_1.c **** *
  12:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_1.c **** 
  19:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  20:.\Generated_Source\PSoC4/PWM_1.c **** 
  21:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM_1.c **** 
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  26:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_1.c **** *
  28:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize/Restore default PWM_1 configuration.
  30:.\Generated_Source\PSoC4/PWM_1.c **** *
  31:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  33:.\Generated_Source\PSoC4/PWM_1.c **** *
  34:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  36:.\Generated_Source\PSoC4/PWM_1.c **** *
  37:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void)
  39:.\Generated_Source\PSoC4/PWM_1.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/PWM_1.c **** 
  41:.\Generated_Source\PSoC4/PWM_1.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__QUAD == PWM_1_CONFIG)
  43:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM_1.c ****         
  45:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM_1.c **** 
  48:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM_1.c ****         
  51:.\Generated_Source\PSoC4/PWM_1.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetCounterMode(PWM_1_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__QUAD == PWM_1_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM_1.c **** 
  57:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
  58:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM_1.c ****         
  60:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM_1.c ****     
  63:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM_1.c ****         
  66:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM_1.c **** 
  69:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM_1.c **** 
  72:.\Generated_Source\PSoC4/PWM_1.c ****             #if (1u == PWM_1_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCompareBuf(PWM_1_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (1u == PWM_1_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 3


  76:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__COMPARE == PWM_1_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM_1.c **** 
  78:.\Generated_Source\PSoC4/PWM_1.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM_1.c ****         #elif(PWM_1__COUNT_DOWN == PWM_1_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  84:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_CY_TCPWM_V2 && PWM_1_TIMER_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__TIMER == PWM_1_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM_1.c **** 
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
  89:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL_REG = PWM_1_CTRL_PWM_BASE_CONFIG;
  40              		.loc 1 89 0
  41 0004 104B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 D204     		lsl	r2, r2, #19
  44 000a 1A60     		str	r2, [r3]
  90:.\Generated_Source\PSoC4/PWM_1.c **** 
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCounter(PWM_1_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #else
  95:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_ALIGN | PWM_1_CTRL_PWM_KILL_EVENT;
  45              		.loc 1 95 0
  46 000c 0E4B     		ldr	r3, .L2
  47 000e 0E4A     		ldr	r2, .L2
  48 0010 1268     		ldr	r2, [r2]
  49 0012 1A60     		str	r2, [r3]
  96:.\Generated_Source\PSoC4/PWM_1.c ****             
  97:.\Generated_Source\PSoC4/PWM_1.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(PWM_1_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM_1.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_WriteCounter(0u);
  50              		.loc 1 103 0
  51 0014 0020     		mov	r0, #0
  52 0016 FFF7FEFF 		bl	PWM_1_WriteCounter
 104:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1_CY_TCPWM_V2 && PWM_1_PWM_UPDOWN_CNT_USED && !PWM_1_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_DT == PWM_1_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_DT == PWM_1_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM == PWM_1_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL_REG |= PWM_1_CTRL_PWM_PRESCALER;
  53              		.loc 1 112 0
  54 001a 0B4B     		ldr	r3, .L2
  55 001c 0A4A     		ldr	r2, .L2
  56 001e 1268     		ldr	r2, [r2]
  57 0020 1A60     		str	r2, [r3]
 113:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM == PWM_1_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 4


 115:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_TRIG_CONTROL1_REG  = PWM_1_PWM_SIGNALS_MODES;
  58              		.loc 1 116 0
  59 0022 0A4B     		ldr	r3, .L2+4
  60 0024 0C22     		mov	r2, #12
  61 0026 1A60     		str	r2, [r3]
 117:.\Generated_Source\PSoC4/PWM_1.c ****     
 118:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_PWM_INTERRUPT_MASK);
  62              		.loc 1 119 0
  63 0028 0120     		mov	r0, #1
  64 002a FFF7FEFF 		bl	PWM_1_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM_1.c **** 
 121:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1__PWM_PR == PWM_1_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM_1.c ****                     (PWM_1_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM_1.c ****                     PWM_1_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 128:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__LEFT == PWM_1_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_LEFT;
  65              		.loc 1 129 0
  66 002e 084B     		ldr	r3, .L2+8
  67 0030 3122     		mov	r2, #49
  68 0032 1A60     		str	r2, [r3]
 130:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_LEFT == PWM_1_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM_1.c **** 
 132:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__RIGHT == PWM_1_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_RIGHT == PWM_1_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__CENTER == PWM_1_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* ( PWM_1_PWM_CENTER == PWM_1_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM_1.c **** 
 140:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_TRIG_CONTROL2_REG = PWM_1_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM_1.c ****             #endif  /* (PWM_1__ASYMMETRIC == PWM_1_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (PWM_1__PWM_PR == PWM_1_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WritePeriod(PWM_1_PWM_PERIOD_VALUE );
  69              		.loc 1 146 0
  70 0034 FA23     		mov	r3, #250
  71 0036 9B00     		lsl	r3, r3, #2
  72 0038 181C     		mov	r0, r3
  73 003a FFF7FEFF 		bl	PWM_1_WritePeriod
 147:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCompare(PWM_1_PWM_COMPARE_VALUE);
  74              		.loc 1 147 0
  75 003e 0020     		mov	r0, #0
  76 0040 FFF7FEFF 		bl	PWM_1_WriteCompare
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompareBuf(PWM_1_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_COMPARE_SWAP) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 5


 153:.\Generated_Source\PSoC4/PWM_1.c **** 
 154:.\Generated_Source\PSoC4/PWM_1.c ****         #if (1u == PWM_1_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WritePeriodBuf(PWM_1_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM_1.c ****         #endif  /* (1u == PWM_1_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM_1.c ****     #endif  /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM_1.c ****     
 160:.\Generated_Source\PSoC4/PWM_1.c **** }
  77              		.loc 1 160 0
  78 0044 BD46     		mov	sp, r7
  79              		@ sp needed
  80 0046 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0048 00010540 		.word	1074069760
  85 004c 24010540 		.word	1074069796
  86 0050 28010540 		.word	1074069800
  87              		.cfi_endproc
  88              	.LFE0:
  89              		.size	PWM_1_Init, .-PWM_1_Init
  90              		.section	.text.PWM_1_Enable,"ax",%progbits
  91              		.align	2
  92              		.global	PWM_1_Enable
  93              		.code	16
  94              		.thumb_func
  95              		.type	PWM_1_Enable, %function
  96              	PWM_1_Enable:
  97              	.LFB1:
 161:.\Generated_Source\PSoC4/PWM_1.c **** 
 162:.\Generated_Source\PSoC4/PWM_1.c **** 
 163:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 165:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM_1.c **** *
 167:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM_1.
 169:.\Generated_Source\PSoC4/PWM_1.c **** *
 170:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 172:.\Generated_Source\PSoC4/PWM_1.c **** *
 173:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 175:.\Generated_Source\PSoC4/PWM_1.c **** *
 176:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void)
 178:.\Generated_Source\PSoC4/PWM_1.c **** {
  98              		.loc 1 178 0
  99              		.cfi_startproc
 100 0000 90B5     		push	{r4, r7, lr}
 101              		.cfi_def_cfa_offset 12
 102              		.cfi_offset 4, -12
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
 105 0002 83B0     		sub	sp, sp, #12
 106              		.cfi_def_cfa_offset 24
 107 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 6


 108              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 109              		.loc 1 181 0
 110 0006 FC1D     		add	r4, r7, #7
 111 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 112 000c 031C     		mov	r3, r0
 113 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG |= PWM_1_MASK;
 114              		.loc 1 182 0
 115 0010 084B     		ldr	r3, .L5
 116 0012 084A     		ldr	r2, .L5
 117 0014 1268     		ldr	r2, [r2]
 118 0016 0121     		mov	r1, #1
 119 0018 0A43     		orr	r2, r1
 120 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 121              		.loc 1 183 0
 122 001c FB1D     		add	r3, r7, #7
 123 001e 1B78     		ldrb	r3, [r3]
 124 0020 181C     		mov	r0, r3
 125 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/PWM_1.c **** 
 185:.\Generated_Source\PSoC4/PWM_1.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__PWM_SEL == PWM_1_CONFIG)
 187:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 126              		.loc 1 188 0
 127 0026 0120     		mov	r0, #1
 128 0028 1821     		mov	r1, #24
 129 002a FFF7FEFF 		bl	PWM_1_TriggerCommand
 189:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__PWM_SEL == PWM_1_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM_1.c **** 
 192:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1__TIMER == PWM_1_CONFIG)
 193:.\Generated_Source\PSoC4/PWM_1.c ****         #if (0u == PWM_1_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_TriggerCommand(PWM_1_MASK, PWM_1_CMD_START);
 195:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0u == PWM_1_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1__TIMER == PWM_1_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM_1.c **** }
 130              		.loc 1 197 0
 131 002e BD46     		mov	sp, r7
 132 0030 03B0     		add	sp, sp, #12
 133              		@ sp needed
 134 0032 90BD     		pop	{r4, r7, pc}
 135              	.L6:
 136              		.align	2
 137              	.L5:
 138 0034 00000540 		.word	1074069504
 139              		.cfi_endproc
 140              	.LFE1:
 141              		.size	PWM_1_Enable, .-PWM_1_Enable
 142              		.section	.text.PWM_1_Start,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_1_Start
 145              		.code	16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 7


 146              		.thumb_func
 147              		.type	PWM_1_Start, %function
 148              	PWM_1_Start:
 149              	.LFB2:
 198:.\Generated_Source\PSoC4/PWM_1.c **** 
 199:.\Generated_Source\PSoC4/PWM_1.c **** 
 200:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
 202:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM_1.c **** *
 204:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM_1.c **** *  Initializes the PWM_1 with default customizer
 206:.\Generated_Source\PSoC4/PWM_1.c **** *  values when called the first time and enables the PWM_1.
 207:.\Generated_Source\PSoC4/PWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM_1.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM_1.c **** *
 210:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 212:.\Generated_Source\PSoC4/PWM_1.c **** *
 213:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 215:.\Generated_Source\PSoC4/PWM_1.c **** *
 216:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  to 1 the first time PWM_1_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM_1.c **** *  calls to the PWM_1_Start() routine.
 222:.\Generated_Source\PSoC4/PWM_1.c **** *
 223:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void)
 225:.\Generated_Source\PSoC4/PWM_1.c **** {
 150              		.loc 1 225 0
 151              		.cfi_startproc
 152 0000 80B5     		push	{r7, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 00AF     		add	r7, sp, #0
 157              		.cfi_def_cfa_register 7
 226:.\Generated_Source\PSoC4/PWM_1.c ****     if (0u == PWM_1_initVar)
 158              		.loc 1 226 0
 159 0004 064B     		ldr	r3, .L9
 160 0006 1B78     		ldrb	r3, [r3]
 161 0008 002B     		cmp	r3, #0
 162 000a 04D1     		bne	.L8
 227:.\Generated_Source\PSoC4/PWM_1.c ****     {
 228:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
 163              		.loc 1 228 0
 164 000c FFF7FEFF 		bl	PWM_1_Init
 229:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 165              		.loc 1 229 0
 166 0010 034B     		ldr	r3, .L9
 167 0012 0122     		mov	r2, #1
 168 0014 1A70     		strb	r2, [r3]
 169              	.L8:
 230:.\Generated_Source\PSoC4/PWM_1.c ****     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 8


 231:.\Generated_Source\PSoC4/PWM_1.c **** 
 232:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
 170              		.loc 1 232 0
 171 0016 FFF7FEFF 		bl	PWM_1_Enable
 233:.\Generated_Source\PSoC4/PWM_1.c **** }
 172              		.loc 1 233 0
 173 001a BD46     		mov	sp, r7
 174              		@ sp needed
 175 001c 80BD     		pop	{r7, pc}
 176              	.L10:
 177 001e C046     		.align	2
 178              	.L9:
 179 0020 00000000 		.word	PWM_1_initVar
 180              		.cfi_endproc
 181              	.LFE2:
 182              		.size	PWM_1_Start, .-PWM_1_Start
 183              		.section	.text.PWM_1_Stop,"ax",%progbits
 184              		.align	2
 185              		.global	PWM_1_Stop
 186              		.code	16
 187              		.thumb_func
 188              		.type	PWM_1_Stop, %function
 189              	PWM_1_Stop:
 190              	.LFB3:
 234:.\Generated_Source\PSoC4/PWM_1.c **** 
 235:.\Generated_Source\PSoC4/PWM_1.c **** 
 236:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 238:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM_1.c **** *
 240:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM_1.c **** *  Disables the PWM_1.
 242:.\Generated_Source\PSoC4/PWM_1.c **** *
 243:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 245:.\Generated_Source\PSoC4/PWM_1.c **** *
 246:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 248:.\Generated_Source\PSoC4/PWM_1.c **** *
 249:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void)
 251:.\Generated_Source\PSoC4/PWM_1.c **** {
 191              		.loc 1 251 0
 192              		.cfi_startproc
 193 0000 90B5     		push	{r4, r7, lr}
 194              		.cfi_def_cfa_offset 12
 195              		.cfi_offset 4, -12
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 83B0     		sub	sp, sp, #12
 199              		.cfi_def_cfa_offset 24
 200 0004 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 252:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM_1.c **** 
 254:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 254 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 9


 203 0006 FC1D     		add	r4, r7, #7
 204 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 205 000c 031C     		mov	r3, r0
 206 000e 2370     		strb	r3, [r4]
 255:.\Generated_Source\PSoC4/PWM_1.c **** 
 256:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_BLOCK_CONTROL_REG &= (uint32)~PWM_1_MASK;
 207              		.loc 1 256 0
 208 0010 064B     		ldr	r3, .L12
 209 0012 064A     		ldr	r2, .L12
 210 0014 1268     		ldr	r2, [r2]
 211 0016 0121     		mov	r1, #1
 212 0018 8A43     		bic	r2, r1
 213 001a 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/PWM_1.c **** 
 258:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 214              		.loc 1 258 0
 215 001c FB1D     		add	r3, r7, #7
 216 001e 1B78     		ldrb	r3, [r3]
 217 0020 181C     		mov	r0, r3
 218 0022 FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC4/PWM_1.c **** }
 219              		.loc 1 259 0
 220 0026 BD46     		mov	sp, r7
 221 0028 03B0     		add	sp, sp, #12
 222              		@ sp needed
 223 002a 90BD     		pop	{r4, r7, pc}
 224              	.L13:
 225              		.align	2
 226              	.L12:
 227 002c 00000540 		.word	1074069504
 228              		.cfi_endproc
 229              	.LFE3:
 230              		.size	PWM_1_Stop, .-PWM_1_Stop
 231              		.section	.text.PWM_1_SetMode,"ax",%progbits
 232              		.align	2
 233              		.global	PWM_1_SetMode
 234              		.code	16
 235              		.thumb_func
 236              		.type	PWM_1_SetMode, %function
 237              	PWM_1_SetMode:
 238              	.LFB4:
 260:.\Generated_Source\PSoC4/PWM_1.c **** 
 261:.\Generated_Source\PSoC4/PWM_1.c **** 
 262:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetMode
 264:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM_1.c **** *
 266:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the operation mode of the PWM_1. This function is used when
 268:.\Generated_Source\PSoC4/PWM_1.c **** *  configured as a generic PWM_1 and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM_1.c **** *
 271:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM_1.c **** *  mode: Mode for the PWM_1 to operate in
 273:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM_1.c **** *   - PWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 compare capability
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 10


 276:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM_1.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/PWM_1.c **** *
 283:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 285:.\Generated_Source\PSoC4/PWM_1.c **** *
 286:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM_1.c **** {
 239              		.loc 1 288 0
 240              		.cfi_startproc
 241 0000 90B5     		push	{r4, r7, lr}
 242              		.cfi_def_cfa_offset 12
 243              		.cfi_offset 4, -12
 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0002 85B0     		sub	sp, sp, #20
 247              		.cfi_def_cfa_offset 32
 248 0004 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 250 0006 7860     		str	r0, [r7, #4]
 289:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM_1.c **** 
 291:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 251              		.loc 1 291 0
 252 0008 3C1C     		mov	r4, r7
 253 000a 0F34     		add	r4, r4, #15
 254 000c FFF7FEFF 		bl	CyEnterCriticalSection
 255 0010 031C     		mov	r3, r0
 256 0012 2370     		strb	r3, [r4]
 292:.\Generated_Source\PSoC4/PWM_1.c **** 
 293:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_MODE_MASK;
 257              		.loc 1 293 0
 258 0014 0A4B     		ldr	r3, .L15
 259 0016 0A4A     		ldr	r2, .L15
 260 0018 1168     		ldr	r1, [r2]
 261 001a 0A4A     		ldr	r2, .L15+4
 262 001c 0A40     		and	r2, r1
 263 001e 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mode;
 264              		.loc 1 294 0
 265 0020 074B     		ldr	r3, .L15
 266 0022 074A     		ldr	r2, .L15
 267 0024 1168     		ldr	r1, [r2]
 268 0026 7A68     		ldr	r2, [r7, #4]
 269 0028 0A43     		orr	r2, r1
 270 002a 1A60     		str	r2, [r3]
 295:.\Generated_Source\PSoC4/PWM_1.c **** 
 296:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 271              		.loc 1 296 0
 272 002c 3B1C     		mov	r3, r7
 273 002e 0F33     		add	r3, r3, #15
 274 0030 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 11


 275 0032 181C     		mov	r0, r3
 276 0034 FFF7FEFF 		bl	CyExitCriticalSection
 297:.\Generated_Source\PSoC4/PWM_1.c **** }
 277              		.loc 1 297 0
 278 0038 BD46     		mov	sp, r7
 279 003a 05B0     		add	sp, sp, #20
 280              		@ sp needed
 281 003c 90BD     		pop	{r4, r7, pc}
 282              	.L16:
 283 003e C046     		.align	2
 284              	.L15:
 285 0040 00010540 		.word	1074069760
 286 0044 FFFFFFF8 		.word	-117440513
 287              		.cfi_endproc
 288              	.LFE4:
 289              		.size	PWM_1_SetMode, .-PWM_1_SetMode
 290              		.section	.text.PWM_1_SetQDMode,"ax",%progbits
 291              		.align	2
 292              		.global	PWM_1_SetQDMode
 293              		.code	16
 294              		.thumb_func
 295              		.type	PWM_1_SetQDMode, %function
 296              	PWM_1_SetQDMode:
 297              	.LFB5:
 298:.\Generated_Source\PSoC4/PWM_1.c **** 
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetQDMode
 302:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM_1.c **** *
 304:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM_1.c **** *
 308:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM_1.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM_1.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM_1.c **** *
 316:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 318:.\Generated_Source\PSoC4/PWM_1.c **** *
 319:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM_1.c **** {
 298              		.loc 1 321 0
 299              		.cfi_startproc
 300 0000 90B5     		push	{r4, r7, lr}
 301              		.cfi_def_cfa_offset 12
 302              		.cfi_offset 4, -12
 303              		.cfi_offset 7, -8
 304              		.cfi_offset 14, -4
 305 0002 85B0     		sub	sp, sp, #20
 306              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 12


 307 0004 00AF     		add	r7, sp, #0
 308              		.cfi_def_cfa_register 7
 309 0006 7860     		str	r0, [r7, #4]
 322:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM_1.c **** 
 324:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 310              		.loc 1 324 0
 311 0008 3C1C     		mov	r4, r7
 312 000a 0F34     		add	r4, r4, #15
 313 000c FFF7FEFF 		bl	CyEnterCriticalSection
 314 0010 031C     		mov	r3, r0
 315 0012 2370     		strb	r3, [r4]
 325:.\Generated_Source\PSoC4/PWM_1.c **** 
 326:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_QUAD_MODE_MASK;
 316              		.loc 1 326 0
 317 0014 0A4B     		ldr	r3, .L18
 318 0016 0A4A     		ldr	r2, .L18
 319 0018 1168     		ldr	r1, [r2]
 320 001a 0A4A     		ldr	r2, .L18+4
 321 001c 0A40     		and	r2, r1
 322 001e 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= qdMode;
 323              		.loc 1 327 0
 324 0020 074B     		ldr	r3, .L18
 325 0022 074A     		ldr	r2, .L18
 326 0024 1168     		ldr	r1, [r2]
 327 0026 7A68     		ldr	r2, [r7, #4]
 328 0028 0A43     		orr	r2, r1
 329 002a 1A60     		str	r2, [r3]
 328:.\Generated_Source\PSoC4/PWM_1.c **** 
 329:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 330              		.loc 1 329 0
 331 002c 3B1C     		mov	r3, r7
 332 002e 0F33     		add	r3, r3, #15
 333 0030 1B78     		ldrb	r3, [r3]
 334 0032 181C     		mov	r0, r3
 335 0034 FFF7FEFF 		bl	CyExitCriticalSection
 330:.\Generated_Source\PSoC4/PWM_1.c **** }
 336              		.loc 1 330 0
 337 0038 BD46     		mov	sp, r7
 338 003a 05B0     		add	sp, sp, #20
 339              		@ sp needed
 340 003c 90BD     		pop	{r4, r7, pc}
 341              	.L19:
 342 003e C046     		.align	2
 343              	.L18:
 344 0040 00010540 		.word	1074069760
 345 0044 FFFF8FFF 		.word	-7340033
 346              		.cfi_endproc
 347              	.LFE5:
 348              		.size	PWM_1_SetQDMode, .-PWM_1_SetQDMode
 349              		.section	.text.PWM_1_SetPrescaler,"ax",%progbits
 350              		.align	2
 351              		.global	PWM_1_SetPrescaler
 352              		.code	16
 353              		.thumb_func
 354              		.type	PWM_1_SetPrescaler, %function
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 13


 355              	PWM_1_SetPrescaler:
 356              	.LFB6:
 331:.\Generated_Source\PSoC4/PWM_1.c **** 
 332:.\Generated_Source\PSoC4/PWM_1.c **** 
 333:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM_1.c **** *
 337:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM_1.c **** *
 341:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM_1.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM_1.c **** *
 353:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 355:.\Generated_Source\PSoC4/PWM_1.c **** *
 356:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM_1.c **** {
 357              		.loc 1 358 0
 358              		.cfi_startproc
 359 0000 90B5     		push	{r4, r7, lr}
 360              		.cfi_def_cfa_offset 12
 361              		.cfi_offset 4, -12
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 85B0     		sub	sp, sp, #20
 365              		.cfi_def_cfa_offset 32
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 368 0006 7860     		str	r0, [r7, #4]
 359:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM_1.c **** 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 369              		.loc 1 361 0
 370 0008 3C1C     		mov	r4, r7
 371 000a 0F34     		add	r4, r4, #15
 372 000c FFF7FEFF 		bl	CyEnterCriticalSection
 373 0010 031C     		mov	r3, r0
 374 0012 2370     		strb	r3, [r4]
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
 363:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 375              		.loc 1 363 0
 376 0014 0A4B     		ldr	r3, .L21
 377 0016 0A4A     		ldr	r2, .L21
 378 0018 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 14


 379 001a 0A4A     		ldr	r2, .L21+4
 380 001c 0A40     		and	r2, r1
 381 001e 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= prescaler;
 382              		.loc 1 364 0
 383 0020 074B     		ldr	r3, .L21
 384 0022 074A     		ldr	r2, .L21
 385 0024 1168     		ldr	r1, [r2]
 386 0026 7A68     		ldr	r2, [r7, #4]
 387 0028 0A43     		orr	r2, r1
 388 002a 1A60     		str	r2, [r3]
 365:.\Generated_Source\PSoC4/PWM_1.c **** 
 366:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 389              		.loc 1 366 0
 390 002c 3B1C     		mov	r3, r7
 391 002e 0F33     		add	r3, r3, #15
 392 0030 1B78     		ldrb	r3, [r3]
 393 0032 181C     		mov	r0, r3
 394 0034 FFF7FEFF 		bl	CyExitCriticalSection
 367:.\Generated_Source\PSoC4/PWM_1.c **** }
 395              		.loc 1 367 0
 396 0038 BD46     		mov	sp, r7
 397 003a 05B0     		add	sp, sp, #20
 398              		@ sp needed
 399 003c 90BD     		pop	{r4, r7, pc}
 400              	.L22:
 401 003e C046     		.align	2
 402              	.L21:
 403 0040 00010540 		.word	1074069760
 404 0044 FF00FFFF 		.word	-65281
 405              		.cfi_endproc
 406              	.LFE6:
 407              		.size	PWM_1_SetPrescaler, .-PWM_1_SetPrescaler
 408              		.section	.text.PWM_1_SetOneShot,"ax",%progbits
 409              		.align	2
 410              		.global	PWM_1_SetOneShot
 411              		.code	16
 412              		.thumb_func
 413              		.type	PWM_1_SetOneShot, %function
 414              	PWM_1_SetOneShot:
 415              	.LFB7:
 368:.\Generated_Source\PSoC4/PWM_1.c **** 
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetOneShot
 372:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM_1.c **** *
 374:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM_1 runs
 376:.\Generated_Source\PSoC4/PWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1 operates in the continuous mode.
 378:.\Generated_Source\PSoC4/PWM_1.c **** *
 379:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM_1.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable One Shot
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 15


 384:.\Generated_Source\PSoC4/PWM_1.c **** *
 385:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 387:.\Generated_Source\PSoC4/PWM_1.c **** *
 388:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM_1.c **** {
 416              		.loc 1 390 0
 417              		.cfi_startproc
 418 0000 90B5     		push	{r4, r7, lr}
 419              		.cfi_def_cfa_offset 12
 420              		.cfi_offset 4, -12
 421              		.cfi_offset 7, -8
 422              		.cfi_offset 14, -4
 423 0002 85B0     		sub	sp, sp, #20
 424              		.cfi_def_cfa_offset 32
 425 0004 00AF     		add	r7, sp, #0
 426              		.cfi_def_cfa_register 7
 427 0006 7860     		str	r0, [r7, #4]
 391:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM_1.c **** 
 393:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 428              		.loc 1 393 0
 429 0008 3C1C     		mov	r4, r7
 430 000a 0F34     		add	r4, r4, #15
 431 000c FFF7FEFF 		bl	CyEnterCriticalSection
 432 0010 031C     		mov	r3, r0
 433 0012 2370     		strb	r3, [r4]
 394:.\Generated_Source\PSoC4/PWM_1.c **** 
 395:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_ONESHOT_MASK;
 434              		.loc 1 395 0
 435 0014 0B4B     		ldr	r3, .L24
 436 0016 0B4A     		ldr	r2, .L24
 437 0018 1168     		ldr	r1, [r2]
 438 001a 0B4A     		ldr	r2, .L24+4
 439 001c 0A40     		and	r2, r1
 440 001e 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1_1BIT_MASK) <<
 441              		.loc 1 396 0
 442 0020 084B     		ldr	r3, .L24
 443 0022 084A     		ldr	r2, .L24
 444 0024 1168     		ldr	r1, [r2]
 445 0026 7868     		ldr	r0, [r7, #4]
 446 0028 0122     		mov	r2, #1
 447 002a 0240     		and	r2, r0
 448 002c 9204     		lsl	r2, r2, #18
 449 002e 0A43     		orr	r2, r1
 450 0030 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/PWM_1.c ****                                                                PWM_1_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM_1.c **** 
 399:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 451              		.loc 1 399 0
 452 0032 3B1C     		mov	r3, r7
 453 0034 0F33     		add	r3, r3, #15
 454 0036 1B78     		ldrb	r3, [r3]
 455 0038 181C     		mov	r0, r3
 456 003a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 16


 400:.\Generated_Source\PSoC4/PWM_1.c **** }
 457              		.loc 1 400 0
 458 003e BD46     		mov	sp, r7
 459 0040 05B0     		add	sp, sp, #20
 460              		@ sp needed
 461 0042 90BD     		pop	{r4, r7, pc}
 462              	.L25:
 463              		.align	2
 464              	.L24:
 465 0044 00010540 		.word	1074069760
 466 0048 FFFFFBFF 		.word	-262145
 467              		.cfi_endproc
 468              	.LFE7:
 469              		.size	PWM_1_SetOneShot, .-PWM_1_SetOneShot
 470              		.section	.text.PWM_1_SetPWMMode,"ax",%progbits
 471              		.align	2
 472              		.global	PWM_1_SetPWMMode
 473              		.code	16
 474              		.thumb_func
 475              		.type	PWM_1_SetPWMMode, %function
 476              	PWM_1_SetPWMMode:
 477              	.LFB8:
 401:.\Generated_Source\PSoC4/PWM_1.c **** 
 402:.\Generated_Source\PSoC4/PWM_1.c **** 
 403:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM_1.c **** *
 407:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM_1.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM_1.c **** *
 414:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM_1.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PWM_1.c **** *                             combined with up/down 0 mode
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 17


 436:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM_1.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM_1.c **** *
 439:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 441:.\Generated_Source\PSoC4/PWM_1.c **** *
 442:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM_1.c **** {
 478              		.loc 1 444 0
 479              		.cfi_startproc
 480 0000 80B5     		push	{r7, lr}
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 7, -8
 483              		.cfi_offset 14, -4
 484 0002 82B0     		sub	sp, sp, #8
 485              		.cfi_def_cfa_offset 16
 486 0004 00AF     		add	r7, sp, #0
 487              		.cfi_def_cfa_register 7
 488 0006 7860     		str	r0, [r7, #4]
 445:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL2_REG = (modeMask & PWM_1_6BIT_MASK);
 489              		.loc 1 445 0
 490 0008 034B     		ldr	r3, .L27
 491 000a 7968     		ldr	r1, [r7, #4]
 492 000c 3F22     		mov	r2, #63
 493 000e 0A40     		and	r2, r1
 494 0010 1A60     		str	r2, [r3]
 446:.\Generated_Source\PSoC4/PWM_1.c **** }
 495              		.loc 1 446 0
 496 0012 BD46     		mov	sp, r7
 497 0014 02B0     		add	sp, sp, #8
 498              		@ sp needed
 499 0016 80BD     		pop	{r7, pc}
 500              	.L28:
 501              		.align	2
 502              	.L27:
 503 0018 28010540 		.word	1074069800
 504              		.cfi_endproc
 505              	.LFE8:
 506              		.size	PWM_1_SetPWMMode, .-PWM_1_SetPWMMode
 507              		.section	.text.PWM_1_SetPWMSyncKill,"ax",%progbits
 508              		.align	2
 509              		.global	PWM_1_SetPWMSyncKill
 510              		.code	16
 511              		.thumb_func
 512              		.type	PWM_1_SetPWMSyncKill, %function
 513              	PWM_1_SetPWMSyncKill:
 514              	.LFB9:
 447:.\Generated_Source\PSoC4/PWM_1.c **** 
 448:.\Generated_Source\PSoC4/PWM_1.c **** 
 449:.\Generated_Source\PSoC4/PWM_1.c **** 
 450:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM_1.c **** *
 454:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 455:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 18


 456:.\Generated_Source\PSoC4/PWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM_1.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM_1.c **** *
 460:.\Generated_Source\PSoC4/PWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM_1.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM_1.c **** *
 463:.\Generated_Source\PSoC4/PWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM_1.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM_1.c **** 
 468:.\Generated_Source\PSoC4/PWM_1.c **** *
 469:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM_1.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM_1.c **** *
 475:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM_1.c **** {
 515              		.loc 1 480 0
 516              		.cfi_startproc
 517 0000 90B5     		push	{r4, r7, lr}
 518              		.cfi_def_cfa_offset 12
 519              		.cfi_offset 4, -12
 520              		.cfi_offset 7, -8
 521              		.cfi_offset 14, -4
 522 0002 85B0     		sub	sp, sp, #20
 523              		.cfi_def_cfa_offset 32
 524 0004 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 526 0006 7860     		str	r0, [r7, #4]
 481:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM_1.c **** 
 483:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 527              		.loc 1 483 0
 528 0008 3C1C     		mov	r4, r7
 529 000a 0F34     		add	r4, r4, #15
 530 000c FFF7FEFF 		bl	CyEnterCriticalSection
 531 0010 031C     		mov	r3, r0
 532 0012 2370     		strb	r3, [r4]
 484:.\Generated_Source\PSoC4/PWM_1.c **** 
 485:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_SYNC_KILL_MASK;
 533              		.loc 1 485 0
 534 0014 0B4B     		ldr	r3, .L30
 535 0016 0B4A     		ldr	r2, .L30
 536 0018 1268     		ldr	r2, [r2]
 537 001a 0421     		mov	r1, #4
 538 001c 8A43     		bic	r2, r1
 539 001e 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1_1BIT_MASK)  <<
 540              		.loc 1 486 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 19


 541 0020 084B     		ldr	r3, .L30
 542 0022 084A     		ldr	r2, .L30
 543 0024 1168     		ldr	r1, [r2]
 544 0026 7868     		ldr	r0, [r7, #4]
 545 0028 0122     		mov	r2, #1
 546 002a 0240     		and	r2, r0
 547 002c 9200     		lsl	r2, r2, #2
 548 002e 0A43     		orr	r2, r1
 549 0030 1A60     		str	r2, [r3]
 487:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM_1.c **** 
 489:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 550              		.loc 1 489 0
 551 0032 3B1C     		mov	r3, r7
 552 0034 0F33     		add	r3, r3, #15
 553 0036 1B78     		ldrb	r3, [r3]
 554 0038 181C     		mov	r0, r3
 555 003a FFF7FEFF 		bl	CyExitCriticalSection
 490:.\Generated_Source\PSoC4/PWM_1.c **** }
 556              		.loc 1 490 0
 557 003e BD46     		mov	sp, r7
 558 0040 05B0     		add	sp, sp, #20
 559              		@ sp needed
 560 0042 90BD     		pop	{r4, r7, pc}
 561              	.L31:
 562              		.align	2
 563              	.L30:
 564 0044 00010540 		.word	1074069760
 565              		.cfi_endproc
 566              	.LFE9:
 567              		.size	PWM_1_SetPWMSyncKill, .-PWM_1_SetPWMSyncKill
 568              		.section	.text.PWM_1_SetPWMStopOnKill,"ax",%progbits
 569              		.align	2
 570              		.global	PWM_1_SetPWMStopOnKill
 571              		.code	16
 572              		.thumb_func
 573              		.type	PWM_1_SetPWMStopOnKill, %function
 574              	PWM_1_SetPWMStopOnKill:
 575              	.LFB10:
 491:.\Generated_Source\PSoC4/PWM_1.c **** 
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM_1.c **** *
 497:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM_1.c **** *
 502:.\Generated_Source\PSoC4/PWM_1.c **** *
 503:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM_1.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 20


 509:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 511:.\Generated_Source\PSoC4/PWM_1.c **** *
 512:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM_1.c **** {
 576              		.loc 1 514 0
 577              		.cfi_startproc
 578 0000 90B5     		push	{r4, r7, lr}
 579              		.cfi_def_cfa_offset 12
 580              		.cfi_offset 4, -12
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0002 85B0     		sub	sp, sp, #20
 584              		.cfi_def_cfa_offset 32
 585 0004 00AF     		add	r7, sp, #0
 586              		.cfi_def_cfa_register 7
 587 0006 7860     		str	r0, [r7, #4]
 515:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM_1.c **** 
 517:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 588              		.loc 1 517 0
 589 0008 3C1C     		mov	r4, r7
 590 000a 0F34     		add	r4, r4, #15
 591 000c FFF7FEFF 		bl	CyEnterCriticalSection
 592 0010 031C     		mov	r3, r0
 593 0012 2370     		strb	r3, [r4]
 518:.\Generated_Source\PSoC4/PWM_1.c **** 
 519:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PWM_STOP_KILL_MASK;
 594              		.loc 1 519 0
 595 0014 0B4B     		ldr	r3, .L33
 596 0016 0B4A     		ldr	r2, .L33
 597 0018 1268     		ldr	r2, [r2]
 598 001a 0821     		mov	r1, #8
 599 001c 8A43     		bic	r2, r1
 600 001e 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1_1BIT_MASK)  <<
 601              		.loc 1 520 0
 602 0020 084B     		ldr	r3, .L33
 603 0022 084A     		ldr	r2, .L33
 604 0024 1168     		ldr	r1, [r2]
 605 0026 7868     		ldr	r0, [r7, #4]
 606 0028 0122     		mov	r2, #1
 607 002a 0240     		and	r2, r0
 608 002c D200     		lsl	r2, r2, #3
 609 002e 0A43     		orr	r2, r1
 610 0030 1A60     		str	r2, [r3]
 521:.\Generated_Source\PSoC4/PWM_1.c ****                                                          PWM_1_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM_1.c **** 
 523:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 611              		.loc 1 523 0
 612 0032 3B1C     		mov	r3, r7
 613 0034 0F33     		add	r3, r3, #15
 614 0036 1B78     		ldrb	r3, [r3]
 615 0038 181C     		mov	r0, r3
 616 003a FFF7FEFF 		bl	CyExitCriticalSection
 524:.\Generated_Source\PSoC4/PWM_1.c **** }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 21


 617              		.loc 1 524 0
 618 003e BD46     		mov	sp, r7
 619 0040 05B0     		add	sp, sp, #20
 620              		@ sp needed
 621 0042 90BD     		pop	{r4, r7, pc}
 622              	.L34:
 623              		.align	2
 624              	.L33:
 625 0044 00010540 		.word	1074069760
 626              		.cfi_endproc
 627              	.LFE10:
 628              		.size	PWM_1_SetPWMStopOnKill, .-PWM_1_SetPWMStopOnKill
 629              		.section	.text.PWM_1_SetPWMDeadTime,"ax",%progbits
 630              		.align	2
 631              		.global	PWM_1_SetPWMDeadTime
 632              		.code	16
 633              		.thumb_func
 634              		.type	PWM_1_SetPWMDeadTime, %function
 635              	PWM_1_SetPWMDeadTime:
 636              	.LFB11:
 525:.\Generated_Source\PSoC4/PWM_1.c **** 
 526:.\Generated_Source\PSoC4/PWM_1.c **** 
 527:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM_1.c **** *
 531:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM_1.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** *
 538:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM_1.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM_1.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM_1.c **** *
 542:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 544:.\Generated_Source\PSoC4/PWM_1.c **** *
 545:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM_1.c **** {
 637              		.loc 1 547 0
 638              		.cfi_startproc
 639 0000 90B5     		push	{r4, r7, lr}
 640              		.cfi_def_cfa_offset 12
 641              		.cfi_offset 4, -12
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 85B0     		sub	sp, sp, #20
 645              		.cfi_def_cfa_offset 32
 646 0004 00AF     		add	r7, sp, #0
 647              		.cfi_def_cfa_register 7
 648 0006 7860     		str	r0, [r7, #4]
 548:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 22


 550:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 649              		.loc 1 550 0
 650 0008 3C1C     		mov	r4, r7
 651 000a 0F34     		add	r4, r4, #15
 652 000c FFF7FEFF 		bl	CyEnterCriticalSection
 653 0010 031C     		mov	r3, r0
 654 0012 2370     		strb	r3, [r4]
 551:.\Generated_Source\PSoC4/PWM_1.c **** 
 552:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_PRESCALER_MASK;
 655              		.loc 1 552 0
 656 0014 0B4B     		ldr	r3, .L36
 657 0016 0B4A     		ldr	r2, .L36
 658 0018 1168     		ldr	r1, [r2]
 659 001a 0B4A     		ldr	r2, .L36+4
 660 001c 0A40     		and	r2, r1
 661 001e 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((deadTime & PWM_1_8BIT_MASK) <<
 662              		.loc 1 553 0
 663 0020 084B     		ldr	r3, .L36
 664 0022 084A     		ldr	r2, .L36
 665 0024 1168     		ldr	r1, [r2]
 666 0026 7A68     		ldr	r2, [r7, #4]
 667 0028 1202     		lsl	r2, r2, #8
 668 002a 1204     		lsl	r2, r2, #16
 669 002c 120C     		lsr	r2, r2, #16
 670 002e 0A43     		orr	r2, r1
 671 0030 1A60     		str	r2, [r3]
 554:.\Generated_Source\PSoC4/PWM_1.c ****                                                           PWM_1_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM_1.c **** 
 556:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 672              		.loc 1 556 0
 673 0032 3B1C     		mov	r3, r7
 674 0034 0F33     		add	r3, r3, #15
 675 0036 1B78     		ldrb	r3, [r3]
 676 0038 181C     		mov	r0, r3
 677 003a FFF7FEFF 		bl	CyExitCriticalSection
 557:.\Generated_Source\PSoC4/PWM_1.c **** }
 678              		.loc 1 557 0
 679 003e BD46     		mov	sp, r7
 680 0040 05B0     		add	sp, sp, #20
 681              		@ sp needed
 682 0042 90BD     		pop	{r4, r7, pc}
 683              	.L37:
 684              		.align	2
 685              	.L36:
 686 0044 00010540 		.word	1074069760
 687 0048 FF00FFFF 		.word	-65281
 688              		.cfi_endproc
 689              	.LFE11:
 690              		.size	PWM_1_SetPWMDeadTime, .-PWM_1_SetPWMDeadTime
 691              		.section	.text.PWM_1_SetPWMInvert,"ax",%progbits
 692              		.align	2
 693              		.global	PWM_1_SetPWMInvert
 694              		.code	16
 695              		.thumb_func
 696              		.type	PWM_1_SetPWMInvert, %function
 697              	PWM_1_SetPWMInvert:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 23


 698              	.LFB12:
 558:.\Generated_Source\PSoC4/PWM_1.c **** 
 559:.\Generated_Source\PSoC4/PWM_1.c **** 
 560:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM_1.c **** *
 564:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 565:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM_1.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM_1.c **** *
 569:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM_1.c **** *         - PWM_1_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM_1.c **** *
 575:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 577:.\Generated_Source\PSoC4/PWM_1.c **** *
 578:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM_1.c **** {
 699              		.loc 1 580 0
 700              		.cfi_startproc
 701 0000 90B5     		push	{r4, r7, lr}
 702              		.cfi_def_cfa_offset 12
 703              		.cfi_offset 4, -12
 704              		.cfi_offset 7, -8
 705              		.cfi_offset 14, -4
 706 0002 85B0     		sub	sp, sp, #20
 707              		.cfi_def_cfa_offset 32
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 710 0006 7860     		str	r0, [r7, #4]
 581:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM_1.c **** 
 583:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 711              		.loc 1 583 0
 712 0008 3C1C     		mov	r4, r7
 713 000a 0F34     		add	r4, r4, #15
 714 000c FFF7FEFF 		bl	CyEnterCriticalSection
 715 0010 031C     		mov	r3, r0
 716 0012 2370     		strb	r3, [r4]
 584:.\Generated_Source\PSoC4/PWM_1.c **** 
 585:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_INV_OUT_MASK;
 717              		.loc 1 585 0
 718 0014 0A4B     		ldr	r3, .L39
 719 0016 0A4A     		ldr	r2, .L39
 720 0018 1168     		ldr	r1, [r2]
 721 001a 0A4A     		ldr	r2, .L39+4
 722 001c 0A40     		and	r2, r1
 723 001e 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= mask;
 724              		.loc 1 586 0
 725 0020 074B     		ldr	r3, .L39
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 24


 726 0022 074A     		ldr	r2, .L39
 727 0024 1168     		ldr	r1, [r2]
 728 0026 7A68     		ldr	r2, [r7, #4]
 729 0028 0A43     		orr	r2, r1
 730 002a 1A60     		str	r2, [r3]
 587:.\Generated_Source\PSoC4/PWM_1.c **** 
 588:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 731              		.loc 1 588 0
 732 002c 3B1C     		mov	r3, r7
 733 002e 0F33     		add	r3, r3, #15
 734 0030 1B78     		ldrb	r3, [r3]
 735 0032 181C     		mov	r0, r3
 736 0034 FFF7FEFF 		bl	CyExitCriticalSection
 589:.\Generated_Source\PSoC4/PWM_1.c **** }
 737              		.loc 1 589 0
 738 0038 BD46     		mov	sp, r7
 739 003a 05B0     		add	sp, sp, #20
 740              		@ sp needed
 741 003c 90BD     		pop	{r4, r7, pc}
 742              	.L40:
 743 003e C046     		.align	2
 744              	.L39:
 745 0040 00010540 		.word	1074069760
 746 0044 FFFFCFFF 		.word	-3145729
 747              		.cfi_endproc
 748              	.LFE12:
 749              		.size	PWM_1_SetPWMInvert, .-PWM_1_SetPWMInvert
 750              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 751              		.align	2
 752              		.global	PWM_1_WriteCounter
 753              		.code	16
 754              		.thumb_func
 755              		.type	PWM_1_WriteCounter, %function
 756              	PWM_1_WriteCounter:
 757              	.LFB13:
 590:.\Generated_Source\PSoC4/PWM_1.c **** 
 591:.\Generated_Source\PSoC4/PWM_1.c **** 
 592:.\Generated_Source\PSoC4/PWM_1.c **** 
 593:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCounter
 595:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM_1.c **** *
 597:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM_1.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM_1.c **** *
 602:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM_1.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM_1.c **** *
 605:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 607:.\Generated_Source\PSoC4/PWM_1.c **** *
 608:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM_1.c **** {
 758              		.loc 1 610 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 25


 759              		.cfi_startproc
 760 0000 80B5     		push	{r7, lr}
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 82B0     		sub	sp, sp, #8
 765              		.cfi_def_cfa_offset 16
 766 0004 00AF     		add	r7, sp, #0
 767              		.cfi_def_cfa_register 7
 768 0006 7860     		str	r0, [r7, #4]
 611:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COUNTER_REG = (count & PWM_1_16BIT_MASK);
 769              		.loc 1 611 0
 770 0008 034B     		ldr	r3, .L42
 771 000a 7A68     		ldr	r2, [r7, #4]
 772 000c 1204     		lsl	r2, r2, #16
 773 000e 120C     		lsr	r2, r2, #16
 774 0010 1A60     		str	r2, [r3]
 612:.\Generated_Source\PSoC4/PWM_1.c **** }
 775              		.loc 1 612 0
 776 0012 BD46     		mov	sp, r7
 777 0014 02B0     		add	sp, sp, #8
 778              		@ sp needed
 779 0016 80BD     		pop	{r7, pc}
 780              	.L43:
 781              		.align	2
 782              	.L42:
 783 0018 08010540 		.word	1074069768
 784              		.cfi_endproc
 785              	.LFE13:
 786              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 787              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 788              		.align	2
 789              		.global	PWM_1_ReadCounter
 790              		.code	16
 791              		.thumb_func
 792              		.type	PWM_1_ReadCounter, %function
 793              	PWM_1_ReadCounter:
 794              	.LFB14:
 613:.\Generated_Source\PSoC4/PWM_1.c **** 
 614:.\Generated_Source\PSoC4/PWM_1.c **** 
 615:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCounter
 617:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM_1.c **** *
 619:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM_1.c **** *
 622:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 624:.\Generated_Source\PSoC4/PWM_1.c **** *
 625:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM_1.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM_1.c **** *
 628:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM_1.c **** {
 795              		.loc 1 630 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 26


 796              		.cfi_startproc
 797 0000 80B5     		push	{r7, lr}
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 631:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COUNTER_REG & PWM_1_16BIT_MASK);
 803              		.loc 1 631 0
 804 0004 034B     		ldr	r3, .L46
 805 0006 1B68     		ldr	r3, [r3]
 806 0008 1B04     		lsl	r3, r3, #16
 807 000a 1B0C     		lsr	r3, r3, #16
 632:.\Generated_Source\PSoC4/PWM_1.c **** }
 808              		.loc 1 632 0
 809 000c 181C     		mov	r0, r3
 810 000e BD46     		mov	sp, r7
 811              		@ sp needed
 812 0010 80BD     		pop	{r7, pc}
 813              	.L47:
 814 0012 C046     		.align	2
 815              	.L46:
 816 0014 08010540 		.word	1074069768
 817              		.cfi_endproc
 818              	.LFE14:
 819              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 820              		.section	.text.PWM_1_SetCounterMode,"ax",%progbits
 821              		.align	2
 822              		.global	PWM_1_SetCounterMode
 823              		.code	16
 824              		.thumb_func
 825              		.type	PWM_1_SetCounterMode, %function
 826              	PWM_1_SetCounterMode:
 827              	.LFB15:
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c **** 
 635:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM_1.c **** *
 639:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 640:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM_1.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM_1.c **** *
 643:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM_1.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM_1.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM_1.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM_1.c **** *
 654:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 655:.\Generated_Source\PSoC4/PWM_1.c **** *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 27


 656:.\Generated_Source\PSoC4/PWM_1.c **** *
 657:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM_1.c **** {
 828              		.loc 1 659 0
 829              		.cfi_startproc
 830 0000 90B5     		push	{r4, r7, lr}
 831              		.cfi_def_cfa_offset 12
 832              		.cfi_offset 4, -12
 833              		.cfi_offset 7, -8
 834              		.cfi_offset 14, -4
 835 0002 85B0     		sub	sp, sp, #20
 836              		.cfi_def_cfa_offset 32
 837 0004 00AF     		add	r7, sp, #0
 838              		.cfi_def_cfa_register 7
 839 0006 7860     		str	r0, [r7, #4]
 660:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM_1.c **** 
 662:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 840              		.loc 1 662 0
 841 0008 3C1C     		mov	r4, r7
 842 000a 0F34     		add	r4, r4, #15
 843 000c FFF7FEFF 		bl	CyEnterCriticalSection
 844 0010 031C     		mov	r3, r0
 845 0012 2370     		strb	r3, [r4]
 663:.\Generated_Source\PSoC4/PWM_1.c **** 
 664:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_UPDOWN_MASK;
 846              		.loc 1 664 0
 847 0014 0A4B     		ldr	r3, .L49
 848 0016 0A4A     		ldr	r2, .L49
 849 0018 1168     		ldr	r1, [r2]
 850 001a 0A4A     		ldr	r2, .L49+4
 851 001c 0A40     		and	r2, r1
 852 001e 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= counterMode;
 853              		.loc 1 665 0
 854 0020 074B     		ldr	r3, .L49
 855 0022 074A     		ldr	r2, .L49
 856 0024 1168     		ldr	r1, [r2]
 857 0026 7A68     		ldr	r2, [r7, #4]
 858 0028 0A43     		orr	r2, r1
 859 002a 1A60     		str	r2, [r3]
 666:.\Generated_Source\PSoC4/PWM_1.c **** 
 667:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 860              		.loc 1 667 0
 861 002c 3B1C     		mov	r3, r7
 862 002e 0F33     		add	r3, r3, #15
 863 0030 1B78     		ldrb	r3, [r3]
 864 0032 181C     		mov	r0, r3
 865 0034 FFF7FEFF 		bl	CyExitCriticalSection
 668:.\Generated_Source\PSoC4/PWM_1.c **** }
 866              		.loc 1 668 0
 867 0038 BD46     		mov	sp, r7
 868 003a 05B0     		add	sp, sp, #20
 869              		@ sp needed
 870 003c 90BD     		pop	{r4, r7, pc}
 871              	.L50:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 28


 872 003e C046     		.align	2
 873              	.L49:
 874 0040 00010540 		.word	1074069760
 875 0044 FFFFFCFF 		.word	-196609
 876              		.cfi_endproc
 877              	.LFE15:
 878              		.size	PWM_1_SetCounterMode, .-PWM_1_SetCounterMode
 879              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 880              		.align	2
 881              		.global	PWM_1_WritePeriod
 882              		.code	16
 883              		.thumb_func
 884              		.type	PWM_1_WritePeriod, %function
 885              	PWM_1_WritePeriod:
 886              	.LFB16:
 669:.\Generated_Source\PSoC4/PWM_1.c **** 
 670:.\Generated_Source\PSoC4/PWM_1.c **** 
 671:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 673:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM_1.c **** *
 675:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM_1.c **** *
 680:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM_1.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM_1.c **** *
 683:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 685:.\Generated_Source\PSoC4/PWM_1.c **** *
 686:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM_1.c **** {
 887              		.loc 1 688 0
 888              		.cfi_startproc
 889 0000 80B5     		push	{r7, lr}
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 7, -8
 892              		.cfi_offset 14, -4
 893 0002 82B0     		sub	sp, sp, #8
 894              		.cfi_def_cfa_offset 16
 895 0004 00AF     		add	r7, sp, #0
 896              		.cfi_def_cfa_register 7
 897 0006 7860     		str	r0, [r7, #4]
 689:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_REG = (period & PWM_1_16BIT_MASK);
 898              		.loc 1 689 0
 899 0008 034B     		ldr	r3, .L52
 900 000a 7A68     		ldr	r2, [r7, #4]
 901 000c 1204     		lsl	r2, r2, #16
 902 000e 120C     		lsr	r2, r2, #16
 903 0010 1A60     		str	r2, [r3]
 690:.\Generated_Source\PSoC4/PWM_1.c **** }
 904              		.loc 1 690 0
 905 0012 BD46     		mov	sp, r7
 906 0014 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 29


 907              		@ sp needed
 908 0016 80BD     		pop	{r7, pc}
 909              	.L53:
 910              		.align	2
 911              	.L52:
 912 0018 14010540 		.word	1074069780
 913              		.cfi_endproc
 914              	.LFE16:
 915              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 916              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 917              		.align	2
 918              		.global	PWM_1_ReadPeriod
 919              		.code	16
 920              		.thumb_func
 921              		.type	PWM_1_ReadPeriod, %function
 922              	PWM_1_ReadPeriod:
 923              	.LFB17:
 691:.\Generated_Source\PSoC4/PWM_1.c **** 
 692:.\Generated_Source\PSoC4/PWM_1.c **** 
 693:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM_1.c **** *
 697:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM_1.c **** *
 700:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 702:.\Generated_Source\PSoC4/PWM_1.c **** *
 703:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM_1.c **** *
 706:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM_1.c **** {
 924              		.loc 1 708 0
 925              		.cfi_startproc
 926 0000 80B5     		push	{r7, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 7, -8
 929              		.cfi_offset 14, -4
 930 0002 00AF     		add	r7, sp, #0
 931              		.cfi_def_cfa_register 7
 709:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_REG & PWM_1_16BIT_MASK);
 932              		.loc 1 709 0
 933 0004 034B     		ldr	r3, .L56
 934 0006 1B68     		ldr	r3, [r3]
 935 0008 1B04     		lsl	r3, r3, #16
 936 000a 1B0C     		lsr	r3, r3, #16
 710:.\Generated_Source\PSoC4/PWM_1.c **** }
 937              		.loc 1 710 0
 938 000c 181C     		mov	r0, r3
 939 000e BD46     		mov	sp, r7
 940              		@ sp needed
 941 0010 80BD     		pop	{r7, pc}
 942              	.L57:
 943 0012 C046     		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 30


 944              	.L56:
 945 0014 14010540 		.word	1074069780
 946              		.cfi_endproc
 947              	.LFE17:
 948              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 949              		.section	.text.PWM_1_SetCompareSwap,"ax",%progbits
 950              		.align	2
 951              		.global	PWM_1_SetCompareSwap
 952              		.code	16
 953              		.thumb_func
 954              		.type	PWM_1_SetCompareSwap, %function
 955              	PWM_1_SetCompareSwap:
 956              	.LFB18:
 711:.\Generated_Source\PSoC4/PWM_1.c **** 
 712:.\Generated_Source\PSoC4/PWM_1.c **** 
 713:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCompareSwap
 715:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM_1.c **** *
 717:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM_1.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM_1.c **** *
 723:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM_1.c **** *
 729:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 731:.\Generated_Source\PSoC4/PWM_1.c **** *
 732:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM_1.c **** {
 957              		.loc 1 734 0
 958              		.cfi_startproc
 959 0000 90B5     		push	{r4, r7, lr}
 960              		.cfi_def_cfa_offset 12
 961              		.cfi_offset 4, -12
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 85B0     		sub	sp, sp, #20
 965              		.cfi_def_cfa_offset 32
 966 0004 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
 968 0006 7860     		str	r0, [r7, #4]
 735:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM_1.c **** 
 737:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 969              		.loc 1 737 0
 970 0008 3C1C     		mov	r4, r7
 971 000a 0F34     		add	r4, r4, #15
 972 000c FFF7FEFF 		bl	CyEnterCriticalSection
 973 0010 031C     		mov	r3, r0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 31


 974 0012 2370     		strb	r3, [r4]
 738:.\Generated_Source\PSoC4/PWM_1.c **** 
 739:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_CC_MASK;
 975              		.loc 1 739 0
 976 0014 0B4B     		ldr	r3, .L59
 977 0016 0B4A     		ldr	r2, .L59
 978 0018 1268     		ldr	r2, [r2]
 979 001a 0121     		mov	r1, #1
 980 001c 8A43     		bic	r2, r1
 981 001e 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= (swapEnable & PWM_1_1BIT_MASK);
 982              		.loc 1 740 0
 983 0020 084B     		ldr	r3, .L59
 984 0022 084A     		ldr	r2, .L59
 985 0024 1168     		ldr	r1, [r2]
 986 0026 7868     		ldr	r0, [r7, #4]
 987 0028 0122     		mov	r2, #1
 988 002a 0240     		and	r2, r0
 989 002c 0A43     		orr	r2, r1
 990 002e 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/PWM_1.c **** 
 742:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 991              		.loc 1 742 0
 992 0030 3B1C     		mov	r3, r7
 993 0032 0F33     		add	r3, r3, #15
 994 0034 1B78     		ldrb	r3, [r3]
 995 0036 181C     		mov	r0, r3
 996 0038 FFF7FEFF 		bl	CyExitCriticalSection
 743:.\Generated_Source\PSoC4/PWM_1.c **** }
 997              		.loc 1 743 0
 998 003c BD46     		mov	sp, r7
 999 003e 05B0     		add	sp, sp, #20
 1000              		@ sp needed
 1001 0040 90BD     		pop	{r4, r7, pc}
 1002              	.L60:
 1003 0042 C046     		.align	2
 1004              	.L59:
 1005 0044 00010540 		.word	1074069760
 1006              		.cfi_endproc
 1007              	.LFE18:
 1008              		.size	PWM_1_SetCompareSwap, .-PWM_1_SetCompareSwap
 1009              		.section	.text.PWM_1_WritePeriodBuf,"ax",%progbits
 1010              		.align	2
 1011              		.global	PWM_1_WritePeriodBuf
 1012              		.code	16
 1013              		.thumb_func
 1014              		.type	PWM_1_WritePeriodBuf, %function
 1015              	PWM_1_WritePeriodBuf:
 1016              	.LFB19:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c **** *
 750:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 32


 752:.\Generated_Source\PSoC4/PWM_1.c **** *
 753:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM_1.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM_1.c **** *
 756:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 758:.\Generated_Source\PSoC4/PWM_1.c **** *
 759:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM_1.c **** {
 1017              		.loc 1 761 0
 1018              		.cfi_startproc
 1019 0000 80B5     		push	{r7, lr}
 1020              		.cfi_def_cfa_offset 8
 1021              		.cfi_offset 7, -8
 1022              		.cfi_offset 14, -4
 1023 0002 82B0     		sub	sp, sp, #8
 1024              		.cfi_def_cfa_offset 16
 1025 0004 00AF     		add	r7, sp, #0
 1026              		.cfi_def_cfa_register 7
 1027 0006 7860     		str	r0, [r7, #4]
 762:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_PERIOD_BUF_REG = (periodBuf & PWM_1_16BIT_MASK);
 1028              		.loc 1 762 0
 1029 0008 034B     		ldr	r3, .L62
 1030 000a 7A68     		ldr	r2, [r7, #4]
 1031 000c 1204     		lsl	r2, r2, #16
 1032 000e 120C     		lsr	r2, r2, #16
 1033 0010 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/PWM_1.c **** }
 1034              		.loc 1 763 0
 1035 0012 BD46     		mov	sp, r7
 1036 0014 02B0     		add	sp, sp, #8
 1037              		@ sp needed
 1038 0016 80BD     		pop	{r7, pc}
 1039              	.L63:
 1040              		.align	2
 1041              	.L62:
 1042 0018 18010540 		.word	1074069784
 1043              		.cfi_endproc
 1044              	.LFE19:
 1045              		.size	PWM_1_WritePeriodBuf, .-PWM_1_WritePeriodBuf
 1046              		.section	.text.PWM_1_ReadPeriodBuf,"ax",%progbits
 1047              		.align	2
 1048              		.global	PWM_1_ReadPeriodBuf
 1049              		.code	16
 1050              		.thumb_func
 1051              		.type	PWM_1_ReadPeriodBuf, %function
 1052              	PWM_1_ReadPeriodBuf:
 1053              	.LFB20:
 764:.\Generated_Source\PSoC4/PWM_1.c **** 
 765:.\Generated_Source\PSoC4/PWM_1.c **** 
 766:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM_1.c **** *
 770:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 771:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the 16 bit period buf register.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 33


 772:.\Generated_Source\PSoC4/PWM_1.c **** *
 773:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 775:.\Generated_Source\PSoC4/PWM_1.c **** *
 776:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM_1.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM_1.c **** *
 779:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM_1.c **** {
 1054              		.loc 1 781 0
 1055              		.cfi_startproc
 1056 0000 80B5     		push	{r7, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 7, -8
 1059              		.cfi_offset 14, -4
 1060 0002 00AF     		add	r7, sp, #0
 1061              		.cfi_def_cfa_register 7
 782:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_PERIOD_BUF_REG & PWM_1_16BIT_MASK);
 1062              		.loc 1 782 0
 1063 0004 034B     		ldr	r3, .L66
 1064 0006 1B68     		ldr	r3, [r3]
 1065 0008 1B04     		lsl	r3, r3, #16
 1066 000a 1B0C     		lsr	r3, r3, #16
 783:.\Generated_Source\PSoC4/PWM_1.c **** }
 1067              		.loc 1 783 0
 1068 000c 181C     		mov	r0, r3
 1069 000e BD46     		mov	sp, r7
 1070              		@ sp needed
 1071 0010 80BD     		pop	{r7, pc}
 1072              	.L67:
 1073 0012 C046     		.align	2
 1074              	.L66:
 1075 0014 18010540 		.word	1074069784
 1076              		.cfi_endproc
 1077              	.LFE20:
 1078              		.size	PWM_1_ReadPeriodBuf, .-PWM_1_ReadPeriodBuf
 1079              		.section	.text.PWM_1_SetPeriodSwap,"ax",%progbits
 1080              		.align	2
 1081              		.global	PWM_1_SetPeriodSwap
 1082              		.code	16
 1083              		.thumb_func
 1084              		.type	PWM_1_SetPeriodSwap, %function
 1085              	PWM_1_SetPeriodSwap:
 1086              	.LFB21:
 784:.\Generated_Source\PSoC4/PWM_1.c **** 
 785:.\Generated_Source\PSoC4/PWM_1.c **** 
 786:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM_1.c **** *
 790:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM_1.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 34


 796:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM_1.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM_1.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM_1.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM_1.c **** *
 802:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 804:.\Generated_Source\PSoC4/PWM_1.c **** *
 805:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM_1.c **** {
 1087              		.loc 1 807 0
 1088              		.cfi_startproc
 1089 0000 90B5     		push	{r4, r7, lr}
 1090              		.cfi_def_cfa_offset 12
 1091              		.cfi_offset 4, -12
 1092              		.cfi_offset 7, -8
 1093              		.cfi_offset 14, -4
 1094 0002 85B0     		sub	sp, sp, #20
 1095              		.cfi_def_cfa_offset 32
 1096 0004 00AF     		add	r7, sp, #0
 1097              		.cfi_def_cfa_register 7
 1098 0006 7860     		str	r0, [r7, #4]
 808:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM_1.c **** 
 810:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1099              		.loc 1 810 0
 1100 0008 3C1C     		mov	r4, r7
 1101 000a 0F34     		add	r4, r4, #15
 1102 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1103 0010 031C     		mov	r3, r0
 1104 0012 2370     		strb	r3, [r4]
 811:.\Generated_Source\PSoC4/PWM_1.c **** 
 812:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG &= (uint32)~PWM_1_RELOAD_PERIOD_MASK;
 1105              		.loc 1 812 0
 1106 0014 0B4B     		ldr	r3, .L69
 1107 0016 0B4A     		ldr	r2, .L69
 1108 0018 1268     		ldr	r2, [r2]
 1109 001a 0221     		mov	r1, #2
 1110 001c 8A43     		bic	r2, r1
 1111 001e 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_CONTROL_REG |= ((uint32)((swapEnable & PWM_1_1BIT_MASK) <<
 1112              		.loc 1 813 0
 1113 0020 084B     		ldr	r3, .L69
 1114 0022 084A     		ldr	r2, .L69
 1115 0024 1168     		ldr	r1, [r2]
 1116 0026 7868     		ldr	r0, [r7, #4]
 1117 0028 0122     		mov	r2, #1
 1118 002a 0240     		and	r2, r0
 1119 002c 5200     		lsl	r2, r2, #1
 1120 002e 0A43     		orr	r2, r1
 1121 0030 1A60     		str	r2, [r3]
 814:.\Generated_Source\PSoC4/PWM_1.c ****                                                             PWM_1_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM_1.c **** 
 816:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1122              		.loc 1 816 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 35


 1123 0032 3B1C     		mov	r3, r7
 1124 0034 0F33     		add	r3, r3, #15
 1125 0036 1B78     		ldrb	r3, [r3]
 1126 0038 181C     		mov	r0, r3
 1127 003a FFF7FEFF 		bl	CyExitCriticalSection
 817:.\Generated_Source\PSoC4/PWM_1.c **** }
 1128              		.loc 1 817 0
 1129 003e BD46     		mov	sp, r7
 1130 0040 05B0     		add	sp, sp, #20
 1131              		@ sp needed
 1132 0042 90BD     		pop	{r4, r7, pc}
 1133              	.L70:
 1134              		.align	2
 1135              	.L69:
 1136 0044 00010540 		.word	1074069760
 1137              		.cfi_endproc
 1138              	.LFE21:
 1139              		.size	PWM_1_SetPeriodSwap, .-PWM_1_SetPeriodSwap
 1140              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 1141              		.align	2
 1142              		.global	PWM_1_WriteCompare
 1143              		.code	16
 1144              		.thumb_func
 1145              		.type	PWM_1_WriteCompare, %function
 1146              	PWM_1_WriteCompare:
 1147              	.LFB22:
 818:.\Generated_Source\PSoC4/PWM_1.c **** 
 819:.\Generated_Source\PSoC4/PWM_1.c **** 
 820:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompare
 822:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM_1.c **** *
 824:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM_1.c **** *
 828:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM_1.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM_1.c **** *
 831:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 833:.\Generated_Source\PSoC4/PWM_1.c **** *
 834:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM_1.c **** {
 1148              		.loc 1 836 0
 1149              		.cfi_startproc
 1150 0000 80B5     		push	{r7, lr}
 1151              		.cfi_def_cfa_offset 8
 1152              		.cfi_offset 7, -8
 1153              		.cfi_offset 14, -4
 1154 0002 82B0     		sub	sp, sp, #8
 1155              		.cfi_def_cfa_offset 16
 1156 0004 00AF     		add	r7, sp, #0
 1157              		.cfi_def_cfa_register 7
 1158 0006 7860     		str	r0, [r7, #4]
 837:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 36


 838:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM_1.c **** 
 841:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM_1.c **** 
 844:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM_1.c ****         {
 846:.\Generated_Source\PSoC4/PWM_1.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM_1.c ****         }
 848:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM_1.c ****         {
 850:.\Generated_Source\PSoC4/PWM_1.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM_1.c ****         }
 852:.\Generated_Source\PSoC4/PWM_1.c ****         else
 853:.\Generated_Source\PSoC4/PWM_1.c ****         {
 854:.\Generated_Source\PSoC4/PWM_1.c ****         }
 855:.\Generated_Source\PSoC4/PWM_1.c ****         
 856:.\Generated_Source\PSoC4/PWM_1.c ****     
 857:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM_1.c ****     
 859:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_REG = (compare & PWM_1_16BIT_MASK);
 1159              		.loc 1 859 0
 1160 0008 034B     		ldr	r3, .L72
 1161 000a 7A68     		ldr	r2, [r7, #4]
 1162 000c 1204     		lsl	r2, r2, #16
 1163 000e 120C     		lsr	r2, r2, #16
 1164 0010 1A60     		str	r2, [r3]
 860:.\Generated_Source\PSoC4/PWM_1.c **** }
 1165              		.loc 1 860 0
 1166 0012 BD46     		mov	sp, r7
 1167 0014 02B0     		add	sp, sp, #8
 1168              		@ sp needed
 1169 0016 80BD     		pop	{r7, pc}
 1170              	.L73:
 1171              		.align	2
 1172              	.L72:
 1173 0018 0C010540 		.word	1074069772
 1174              		.cfi_endproc
 1175              	.LFE22:
 1176              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 1177              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 1178              		.align	2
 1179              		.global	PWM_1_ReadCompare
 1180              		.code	16
 1181              		.thumb_func
 1182              		.type	PWM_1_ReadCompare, %function
 1183              	PWM_1_ReadCompare:
 1184              	.LFB23:
 861:.\Generated_Source\PSoC4/PWM_1.c **** 
 862:.\Generated_Source\PSoC4/PWM_1.c **** 
 863:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompare
 865:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM_1.c **** *
 867:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 868:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 37


 869:.\Generated_Source\PSoC4/PWM_1.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM_1.c **** *
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM_1.c **** {
 1185              		.loc 1 879 0
 1186              		.cfi_startproc
 1187 0000 80B5     		push	{r7, lr}
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
 1190              		.cfi_offset 14, -4
 1191 0002 00AF     		add	r7, sp, #0
 1192              		.cfi_def_cfa_register 7
 880:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM_1.c **** 
 885:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM_1.c ****         
 888:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM_1.c ****         
 890:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM_1.c ****         {
 892:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM_1.c ****         }
 894:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM_1.c ****         {
 896:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM_1.c ****         }
 898:.\Generated_Source\PSoC4/PWM_1.c ****         else
 899:.\Generated_Source\PSoC4/PWM_1.c ****         {
 900:.\Generated_Source\PSoC4/PWM_1.c ****         }
 901:.\Generated_Source\PSoC4/PWM_1.c **** 
 902:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 904:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 1193              		.loc 1 904 0
 1194 0004 034B     		ldr	r3, .L76
 1195 0006 1B68     		ldr	r3, [r3]
 1196 0008 1B04     		lsl	r3, r3, #16
 1197 000a 1B0C     		lsr	r3, r3, #16
 905:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM_1.c **** }
 1198              		.loc 1 906 0
 1199 000c 181C     		mov	r0, r3
 1200 000e BD46     		mov	sp, r7
 1201              		@ sp needed
 1202 0010 80BD     		pop	{r7, pc}
 1203              	.L77:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 38


 1204 0012 C046     		.align	2
 1205              	.L76:
 1206 0014 0C010540 		.word	1074069772
 1207              		.cfi_endproc
 1208              	.LFE23:
 1209              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 1210              		.section	.text.PWM_1_WriteCompareBuf,"ax",%progbits
 1211              		.align	2
 1212              		.global	PWM_1_WriteCompareBuf
 1213              		.code	16
 1214              		.thumb_func
 1215              		.type	PWM_1_WriteCompareBuf, %function
 1216              	PWM_1_WriteCompareBuf:
 1217              	.LFB24:
 907:.\Generated_Source\PSoC4/PWM_1.c **** 
 908:.\Generated_Source\PSoC4/PWM_1.c **** 
 909:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM_1.c **** *
 913:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM_1.c **** *
 917:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM_1.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM_1.c **** *
 920:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 922:.\Generated_Source\PSoC4/PWM_1.c **** *
 923:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM_1.c **** {
 1218              		.loc 1 925 0
 1219              		.cfi_startproc
 1220 0000 80B5     		push	{r7, lr}
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 7, -8
 1223              		.cfi_offset 14, -4
 1224 0002 82B0     		sub	sp, sp, #8
 1225              		.cfi_def_cfa_offset 16
 1226 0004 00AF     		add	r7, sp, #0
 1227              		.cfi_def_cfa_register 7
 1228 0006 7860     		str	r0, [r7, #4]
 926:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM_1.c **** 
 930:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM_1.c **** 
 933:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM_1.c ****         {
 935:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM_1.c ****         }
 937:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PWM_1.c ****         {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 39


 939:.\Generated_Source\PSoC4/PWM_1.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM_1.c ****         }
 941:.\Generated_Source\PSoC4/PWM_1.c ****         else
 942:.\Generated_Source\PSoC4/PWM_1.c ****         {
 943:.\Generated_Source\PSoC4/PWM_1.c ****         }
 944:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM_1.c ****     
 946:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMP_CAP_BUF_REG = (compareBuf & PWM_1_16BIT_MASK);
 1229              		.loc 1 946 0
 1230 0008 034B     		ldr	r3, .L79
 1231 000a 7A68     		ldr	r2, [r7, #4]
 1232 000c 1204     		lsl	r2, r2, #16
 1233 000e 120C     		lsr	r2, r2, #16
 1234 0010 1A60     		str	r2, [r3]
 947:.\Generated_Source\PSoC4/PWM_1.c **** }
 1235              		.loc 1 947 0
 1236 0012 BD46     		mov	sp, r7
 1237 0014 02B0     		add	sp, sp, #8
 1238              		@ sp needed
 1239 0016 80BD     		pop	{r7, pc}
 1240              	.L80:
 1241              		.align	2
 1242              	.L79:
 1243 0018 10010540 		.word	1074069776
 1244              		.cfi_endproc
 1245              	.LFE24:
 1246              		.size	PWM_1_WriteCompareBuf, .-PWM_1_WriteCompareBuf
 1247              		.section	.text.PWM_1_ReadCompareBuf,"ax",%progbits
 1248              		.align	2
 1249              		.global	PWM_1_ReadCompareBuf
 1250              		.code	16
 1251              		.thumb_func
 1252              		.type	PWM_1_ReadCompareBuf, %function
 1253              	PWM_1_ReadCompareBuf:
 1254              	.LFB25:
 948:.\Generated_Source\PSoC4/PWM_1.c **** 
 949:.\Generated_Source\PSoC4/PWM_1.c **** 
 950:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM_1.c **** *
 954:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM_1.c **** *
 958:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 960:.\Generated_Source\PSoC4/PWM_1.c **** *
 961:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM_1.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM_1.c **** *
 964:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM_1.c **** {
 1255              		.loc 1 966 0
 1256              		.cfi_startproc
 1257 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 40


 1258              		.cfi_def_cfa_offset 8
 1259              		.cfi_offset 7, -8
 1260              		.cfi_offset 14, -4
 1261 0002 00AF     		add	r7, sp, #0
 1262              		.cfi_def_cfa_register 7
 967:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM_1.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM_1.c **** 
 972:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM_1.c ****         currentMode = ((PWM_1_CONTROL_REG & PWM_1_UPDOWN_MASK) >> PWM_1_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM_1.c **** 
 975:.\Generated_Source\PSoC4/PWM_1.c ****         regVal = PWM_1_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM_1.c ****         
 977:.\Generated_Source\PSoC4/PWM_1.c ****         if (((uint32)PWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM_1.c ****         {
 979:.\Generated_Source\PSoC4/PWM_1.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM_1.c ****         }
 981:.\Generated_Source\PSoC4/PWM_1.c ****         else if (((uint32)PWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM_1.c ****         {
 983:.\Generated_Source\PSoC4/PWM_1.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM_1.c ****         }
 985:.\Generated_Source\PSoC4/PWM_1.c ****         else
 986:.\Generated_Source\PSoC4/PWM_1.c ****         {
 987:.\Generated_Source\PSoC4/PWM_1.c ****         }
 988:.\Generated_Source\PSoC4/PWM_1.c **** 
 989:.\Generated_Source\PSoC4/PWM_1.c ****         return (regVal & PWM_1_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 991:.\Generated_Source\PSoC4/PWM_1.c ****         return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 1263              		.loc 1 991 0
 1264 0004 034B     		ldr	r3, .L83
 1265 0006 1B68     		ldr	r3, [r3]
 1266 0008 1B04     		lsl	r3, r3, #16
 1267 000a 1B0C     		lsr	r3, r3, #16
 992:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM_1.c **** }
 1268              		.loc 1 993 0
 1269 000c 181C     		mov	r0, r3
 1270 000e BD46     		mov	sp, r7
 1271              		@ sp needed
 1272 0010 80BD     		pop	{r7, pc}
 1273              	.L84:
 1274 0012 C046     		.align	2
 1275              	.L83:
 1276 0014 10010540 		.word	1074069776
 1277              		.cfi_endproc
 1278              	.LFE25:
 1279              		.size	PWM_1_ReadCompareBuf, .-PWM_1_ReadCompareBuf
 1280              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 1281              		.align	2
 1282              		.global	PWM_1_ReadCapture
 1283              		.code	16
 1284              		.thumb_func
 1285              		.type	PWM_1_ReadCapture, %function
 1286              	PWM_1_ReadCapture:
 1287              	.LFB26:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 41


 994:.\Generated_Source\PSoC4/PWM_1.c **** 
 995:.\Generated_Source\PSoC4/PWM_1.c **** 
 996:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCapture
 998:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM_1.c **** *
1000:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM_1.c **** *
1004:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1006:.\Generated_Source\PSoC4/PWM_1.c **** *
1007:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM_1.c **** *
1010:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM_1.c **** {
 1288              		.loc 1 1012 0
 1289              		.cfi_startproc
 1290 0000 80B5     		push	{r7, lr}
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 7, -8
 1293              		.cfi_offset 14, -4
 1294 0002 00AF     		add	r7, sp, #0
 1295              		.cfi_def_cfa_register 7
1013:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_REG & PWM_1_16BIT_MASK);
 1296              		.loc 1 1013 0
 1297 0004 034B     		ldr	r3, .L87
 1298 0006 1B68     		ldr	r3, [r3]
 1299 0008 1B04     		lsl	r3, r3, #16
 1300 000a 1B0C     		lsr	r3, r3, #16
1014:.\Generated_Source\PSoC4/PWM_1.c **** }
 1301              		.loc 1 1014 0
 1302 000c 181C     		mov	r0, r3
 1303 000e BD46     		mov	sp, r7
 1304              		@ sp needed
 1305 0010 80BD     		pop	{r7, pc}
 1306              	.L88:
 1307 0012 C046     		.align	2
 1308              	.L87:
 1309 0014 0C010540 		.word	1074069772
 1310              		.cfi_endproc
 1311              	.LFE26:
 1312              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 1313              		.section	.text.PWM_1_ReadCaptureBuf,"ax",%progbits
 1314              		.align	2
 1315              		.global	PWM_1_ReadCaptureBuf
 1316              		.code	16
 1317              		.thumb_func
 1318              		.type	PWM_1_ReadCaptureBuf, %function
 1319              	PWM_1_ReadCaptureBuf:
 1320              	.LFB27:
1015:.\Generated_Source\PSoC4/PWM_1.c **** 
1016:.\Generated_Source\PSoC4/PWM_1.c **** 
1017:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 42


1018:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM_1.c **** *
1021:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM_1.c **** *
1025:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1027:.\Generated_Source\PSoC4/PWM_1.c **** *
1028:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM_1.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM_1.c **** *
1031:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM_1.c **** {
 1321              		.loc 1 1033 0
 1322              		.cfi_startproc
 1323 0000 80B5     		push	{r7, lr}
 1324              		.cfi_def_cfa_offset 8
 1325              		.cfi_offset 7, -8
 1326              		.cfi_offset 14, -4
 1327 0002 00AF     		add	r7, sp, #0
 1328              		.cfi_def_cfa_register 7
1034:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_COMP_CAP_BUF_REG & PWM_1_16BIT_MASK);
 1329              		.loc 1 1034 0
 1330 0004 034B     		ldr	r3, .L91
 1331 0006 1B68     		ldr	r3, [r3]
 1332 0008 1B04     		lsl	r3, r3, #16
 1333 000a 1B0C     		lsr	r3, r3, #16
1035:.\Generated_Source\PSoC4/PWM_1.c **** }
 1334              		.loc 1 1035 0
 1335 000c 181C     		mov	r0, r3
 1336 000e BD46     		mov	sp, r7
 1337              		@ sp needed
 1338 0010 80BD     		pop	{r7, pc}
 1339              	.L92:
 1340 0012 C046     		.align	2
 1341              	.L91:
 1342 0014 10010540 		.word	1074069776
 1343              		.cfi_endproc
 1344              	.LFE27:
 1345              		.size	PWM_1_ReadCaptureBuf, .-PWM_1_ReadCaptureBuf
 1346              		.section	.text.PWM_1_SetCaptureMode,"ax",%progbits
 1347              		.align	2
 1348              		.global	PWM_1_SetCaptureMode
 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	PWM_1_SetCaptureMode, %function
 1352              	PWM_1_SetCaptureMode:
 1353              	.LFB28:
1036:.\Generated_Source\PSoC4/PWM_1.c **** 
1037:.\Generated_Source\PSoC4/PWM_1.c **** 
1038:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 43


1042:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM_1.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/PWM_1.c **** *
1047:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM_1.c **** *
1055:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1057:.\Generated_Source\PSoC4/PWM_1.c **** *
1058:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM_1.c **** {
 1354              		.loc 1 1060 0
 1355              		.cfi_startproc
 1356 0000 90B5     		push	{r4, r7, lr}
 1357              		.cfi_def_cfa_offset 12
 1358              		.cfi_offset 4, -12
 1359              		.cfi_offset 7, -8
 1360              		.cfi_offset 14, -4
 1361 0002 85B0     		sub	sp, sp, #20
 1362              		.cfi_def_cfa_offset 32
 1363 0004 00AF     		add	r7, sp, #0
 1364              		.cfi_def_cfa_register 7
 1365 0006 7860     		str	r0, [r7, #4]
1061:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM_1.c **** 
1063:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1366              		.loc 1 1063 0
 1367 0008 3C1C     		mov	r4, r7
 1368 000a 0F34     		add	r4, r4, #15
 1369 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1370 0010 031C     		mov	r3, r0
 1371 0012 2370     		strb	r3, [r4]
1064:.\Generated_Source\PSoC4/PWM_1.c **** 
1065:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_CAPTURE_MASK;
 1372              		.loc 1 1065 0
 1373 0014 0A4B     		ldr	r3, .L94
 1374 0016 0A4A     		ldr	r2, .L94
 1375 0018 1268     		ldr	r2, [r2]
 1376 001a 0321     		mov	r1, #3
 1377 001c 8A43     		bic	r2, r1
 1378 001e 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= triggerMode;
 1379              		.loc 1 1066 0
 1380 0020 074B     		ldr	r3, .L94
 1381 0022 074A     		ldr	r2, .L94
 1382 0024 1168     		ldr	r1, [r2]
 1383 0026 7A68     		ldr	r2, [r7, #4]
 1384 0028 0A43     		orr	r2, r1
 1385 002a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 44


1067:.\Generated_Source\PSoC4/PWM_1.c **** 
1068:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1386              		.loc 1 1068 0
 1387 002c 3B1C     		mov	r3, r7
 1388 002e 0F33     		add	r3, r3, #15
 1389 0030 1B78     		ldrb	r3, [r3]
 1390 0032 181C     		mov	r0, r3
 1391 0034 FFF7FEFF 		bl	CyExitCriticalSection
1069:.\Generated_Source\PSoC4/PWM_1.c **** }
 1392              		.loc 1 1069 0
 1393 0038 BD46     		mov	sp, r7
 1394 003a 05B0     		add	sp, sp, #20
 1395              		@ sp needed
 1396 003c 90BD     		pop	{r4, r7, pc}
 1397              	.L95:
 1398 003e C046     		.align	2
 1399              	.L94:
 1400 0040 24010540 		.word	1074069796
 1401              		.cfi_endproc
 1402              	.LFE28:
 1403              		.size	PWM_1_SetCaptureMode, .-PWM_1_SetCaptureMode
 1404              		.section	.text.PWM_1_SetReloadMode,"ax",%progbits
 1405              		.align	2
 1406              		.global	PWM_1_SetReloadMode
 1407              		.code	16
 1408              		.thumb_func
 1409              		.type	PWM_1_SetReloadMode, %function
 1410              	PWM_1_SetReloadMode:
 1411              	.LFB29:
1070:.\Generated_Source\PSoC4/PWM_1.c **** 
1071:.\Generated_Source\PSoC4/PWM_1.c **** 
1072:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM_1.c **** *
1076:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM_1.c **** *
1080:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM_1.c **** *
1088:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1090:.\Generated_Source\PSoC4/PWM_1.c **** *
1091:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM_1.c **** {
 1412              		.loc 1 1093 0
 1413              		.cfi_startproc
 1414 0000 90B5     		push	{r4, r7, lr}
 1415              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 45


 1416              		.cfi_offset 4, -12
 1417              		.cfi_offset 7, -8
 1418              		.cfi_offset 14, -4
 1419 0002 85B0     		sub	sp, sp, #20
 1420              		.cfi_def_cfa_offset 32
 1421 0004 00AF     		add	r7, sp, #0
 1422              		.cfi_def_cfa_register 7
 1423 0006 7860     		str	r0, [r7, #4]
1094:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM_1.c **** 
1096:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1424              		.loc 1 1096 0
 1425 0008 3C1C     		mov	r4, r7
 1426 000a 0F34     		add	r4, r4, #15
 1427 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1428 0010 031C     		mov	r3, r0
 1429 0012 2370     		strb	r3, [r4]
1097:.\Generated_Source\PSoC4/PWM_1.c **** 
1098:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_RELOAD_MASK;
 1430              		.loc 1 1098 0
 1431 0014 0A4B     		ldr	r3, .L97
 1432 0016 0A4A     		ldr	r2, .L97
 1433 0018 1268     		ldr	r2, [r2]
 1434 001a 3021     		mov	r1, #48
 1435 001c 8A43     		bic	r2, r1
 1436 001e 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_RELOAD_SHIFT));
 1437              		.loc 1 1099 0
 1438 0020 074B     		ldr	r3, .L97
 1439 0022 074A     		ldr	r2, .L97
 1440 0024 1168     		ldr	r1, [r2]
 1441 0026 7A68     		ldr	r2, [r7, #4]
 1442 0028 1201     		lsl	r2, r2, #4
 1443 002a 0A43     		orr	r2, r1
 1444 002c 1A60     		str	r2, [r3]
1100:.\Generated_Source\PSoC4/PWM_1.c **** 
1101:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1445              		.loc 1 1101 0
 1446 002e 3B1C     		mov	r3, r7
 1447 0030 0F33     		add	r3, r3, #15
 1448 0032 1B78     		ldrb	r3, [r3]
 1449 0034 181C     		mov	r0, r3
 1450 0036 FFF7FEFF 		bl	CyExitCriticalSection
1102:.\Generated_Source\PSoC4/PWM_1.c **** }
 1451              		.loc 1 1102 0
 1452 003a BD46     		mov	sp, r7
 1453 003c 05B0     		add	sp, sp, #20
 1454              		@ sp needed
 1455 003e 90BD     		pop	{r4, r7, pc}
 1456              	.L98:
 1457              		.align	2
 1458              	.L97:
 1459 0040 24010540 		.word	1074069796
 1460              		.cfi_endproc
 1461              	.LFE29:
 1462              		.size	PWM_1_SetReloadMode, .-PWM_1_SetReloadMode
 1463              		.section	.text.PWM_1_SetStartMode,"ax",%progbits
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 46


 1464              		.align	2
 1465              		.global	PWM_1_SetStartMode
 1466              		.code	16
 1467              		.thumb_func
 1468              		.type	PWM_1_SetStartMode, %function
 1469              	PWM_1_SetStartMode:
 1470              	.LFB30:
1103:.\Generated_Source\PSoC4/PWM_1.c **** 
1104:.\Generated_Source\PSoC4/PWM_1.c **** 
1105:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStartMode
1107:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM_1.c **** *
1109:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM_1.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM_1.c **** *
1113:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM_1.c **** *
1121:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1123:.\Generated_Source\PSoC4/PWM_1.c **** *
1124:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM_1.c **** {
 1471              		.loc 1 1126 0
 1472              		.cfi_startproc
 1473 0000 90B5     		push	{r4, r7, lr}
 1474              		.cfi_def_cfa_offset 12
 1475              		.cfi_offset 4, -12
 1476              		.cfi_offset 7, -8
 1477              		.cfi_offset 14, -4
 1478 0002 85B0     		sub	sp, sp, #20
 1479              		.cfi_def_cfa_offset 32
 1480 0004 00AF     		add	r7, sp, #0
 1481              		.cfi_def_cfa_register 7
 1482 0006 7860     		str	r0, [r7, #4]
1127:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM_1.c **** 
1129:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1483              		.loc 1 1129 0
 1484 0008 3C1C     		mov	r4, r7
 1485 000a 0F34     		add	r4, r4, #15
 1486 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1487 0010 031C     		mov	r3, r0
 1488 0012 2370     		strb	r3, [r4]
1130:.\Generated_Source\PSoC4/PWM_1.c **** 
1131:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_START_MASK;
 1489              		.loc 1 1131 0
 1490 0014 0A4B     		ldr	r3, .L100
 1491 0016 0A4A     		ldr	r2, .L100
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 47


 1492 0018 1168     		ldr	r1, [r2]
 1493 001a 0A4A     		ldr	r2, .L100+4
 1494 001c 0A40     		and	r2, r1
 1495 001e 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_START_SHIFT));
 1496              		.loc 1 1132 0
 1497 0020 074B     		ldr	r3, .L100
 1498 0022 074A     		ldr	r2, .L100
 1499 0024 1168     		ldr	r1, [r2]
 1500 0026 7A68     		ldr	r2, [r7, #4]
 1501 0028 1202     		lsl	r2, r2, #8
 1502 002a 0A43     		orr	r2, r1
 1503 002c 1A60     		str	r2, [r3]
1133:.\Generated_Source\PSoC4/PWM_1.c **** 
1134:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1504              		.loc 1 1134 0
 1505 002e 3B1C     		mov	r3, r7
 1506 0030 0F33     		add	r3, r3, #15
 1507 0032 1B78     		ldrb	r3, [r3]
 1508 0034 181C     		mov	r0, r3
 1509 0036 FFF7FEFF 		bl	CyExitCriticalSection
1135:.\Generated_Source\PSoC4/PWM_1.c **** }
 1510              		.loc 1 1135 0
 1511 003a BD46     		mov	sp, r7
 1512 003c 05B0     		add	sp, sp, #20
 1513              		@ sp needed
 1514 003e 90BD     		pop	{r4, r7, pc}
 1515              	.L101:
 1516              		.align	2
 1517              	.L100:
 1518 0040 24010540 		.word	1074069796
 1519 0044 FFFCFFFF 		.word	-769
 1520              		.cfi_endproc
 1521              	.LFE30:
 1522              		.size	PWM_1_SetStartMode, .-PWM_1_SetStartMode
 1523              		.section	.text.PWM_1_SetStopMode,"ax",%progbits
 1524              		.align	2
 1525              		.global	PWM_1_SetStopMode
 1526              		.code	16
 1527              		.thumb_func
 1528              		.type	PWM_1_SetStopMode, %function
 1529              	PWM_1_SetStopMode:
 1530              	.LFB31:
1136:.\Generated_Source\PSoC4/PWM_1.c **** 
1137:.\Generated_Source\PSoC4/PWM_1.c **** 
1138:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetStopMode
1140:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM_1.c **** *
1142:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM_1.c **** *
1145:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 48


1150:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM_1.c **** *
1153:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1155:.\Generated_Source\PSoC4/PWM_1.c **** *
1156:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM_1.c **** {
 1531              		.loc 1 1158 0
 1532              		.cfi_startproc
 1533 0000 90B5     		push	{r4, r7, lr}
 1534              		.cfi_def_cfa_offset 12
 1535              		.cfi_offset 4, -12
 1536              		.cfi_offset 7, -8
 1537              		.cfi_offset 14, -4
 1538 0002 85B0     		sub	sp, sp, #20
 1539              		.cfi_def_cfa_offset 32
 1540 0004 00AF     		add	r7, sp, #0
 1541              		.cfi_def_cfa_register 7
 1542 0006 7860     		str	r0, [r7, #4]
1159:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM_1.c **** 
1161:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1543              		.loc 1 1161 0
 1544 0008 3C1C     		mov	r4, r7
 1545 000a 0F34     		add	r4, r4, #15
 1546 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1547 0010 031C     		mov	r3, r0
 1548 0012 2370     		strb	r3, [r4]
1162:.\Generated_Source\PSoC4/PWM_1.c **** 
1163:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_STOP_MASK;
 1549              		.loc 1 1163 0
 1550 0014 0A4B     		ldr	r3, .L103
 1551 0016 0A4A     		ldr	r2, .L103
 1552 0018 1268     		ldr	r2, [r2]
 1553 001a C021     		mov	r1, #192
 1554 001c 8A43     		bic	r2, r1
 1555 001e 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_STOP_SHIFT));
 1556              		.loc 1 1164 0
 1557 0020 074B     		ldr	r3, .L103
 1558 0022 074A     		ldr	r2, .L103
 1559 0024 1168     		ldr	r1, [r2]
 1560 0026 7A68     		ldr	r2, [r7, #4]
 1561 0028 9201     		lsl	r2, r2, #6
 1562 002a 0A43     		orr	r2, r1
 1563 002c 1A60     		str	r2, [r3]
1165:.\Generated_Source\PSoC4/PWM_1.c **** 
1166:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1564              		.loc 1 1166 0
 1565 002e 3B1C     		mov	r3, r7
 1566 0030 0F33     		add	r3, r3, #15
 1567 0032 1B78     		ldrb	r3, [r3]
 1568 0034 181C     		mov	r0, r3
 1569 0036 FFF7FEFF 		bl	CyExitCriticalSection
1167:.\Generated_Source\PSoC4/PWM_1.c **** }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 49


 1570              		.loc 1 1167 0
 1571 003a BD46     		mov	sp, r7
 1572 003c 05B0     		add	sp, sp, #20
 1573              		@ sp needed
 1574 003e 90BD     		pop	{r4, r7, pc}
 1575              	.L104:
 1576              		.align	2
 1577              	.L103:
 1578 0040 24010540 		.word	1074069796
 1579              		.cfi_endproc
 1580              	.LFE31:
 1581              		.size	PWM_1_SetStopMode, .-PWM_1_SetStopMode
 1582              		.section	.text.PWM_1_SetCountMode,"ax",%progbits
 1583              		.align	2
 1584              		.global	PWM_1_SetCountMode
 1585              		.code	16
 1586              		.thumb_func
 1587              		.type	PWM_1_SetCountMode, %function
 1588              	PWM_1_SetCountMode:
 1589              	.LFB32:
1168:.\Generated_Source\PSoC4/PWM_1.c **** 
1169:.\Generated_Source\PSoC4/PWM_1.c **** 
1170:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetCountMode
1172:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM_1.c **** *
1174:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM_1.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM_1.c **** *
1178:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM_1.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM_1.c **** *
1186:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1188:.\Generated_Source\PSoC4/PWM_1.c **** *
1189:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM_1.c **** {
 1590              		.loc 1 1191 0
 1591              		.cfi_startproc
 1592 0000 90B5     		push	{r4, r7, lr}
 1593              		.cfi_def_cfa_offset 12
 1594              		.cfi_offset 4, -12
 1595              		.cfi_offset 7, -8
 1596              		.cfi_offset 14, -4
 1597 0002 85B0     		sub	sp, sp, #20
 1598              		.cfi_def_cfa_offset 32
 1599 0004 00AF     		add	r7, sp, #0
 1600              		.cfi_def_cfa_register 7
 1601 0006 7860     		str	r0, [r7, #4]
1192:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 50


1193:.\Generated_Source\PSoC4/PWM_1.c **** 
1194:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1602              		.loc 1 1194 0
 1603 0008 3C1C     		mov	r4, r7
 1604 000a 0F34     		add	r4, r4, #15
 1605 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1606 0010 031C     		mov	r3, r0
 1607 0012 2370     		strb	r3, [r4]
1195:.\Generated_Source\PSoC4/PWM_1.c **** 
1196:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG &= (uint32)~PWM_1_COUNT_MASK;
 1608              		.loc 1 1196 0
 1609 0014 0A4B     		ldr	r3, .L106
 1610 0016 0A4A     		ldr	r2, .L106
 1611 0018 1268     		ldr	r2, [r2]
 1612 001a 0C21     		mov	r1, #12
 1613 001c 8A43     		bic	r2, r1
 1614 001e 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_1_COUNT_SHIFT));
 1615              		.loc 1 1197 0
 1616 0020 074B     		ldr	r3, .L106
 1617 0022 074A     		ldr	r2, .L106
 1618 0024 1168     		ldr	r1, [r2]
 1619 0026 7A68     		ldr	r2, [r7, #4]
 1620 0028 9200     		lsl	r2, r2, #2
 1621 002a 0A43     		orr	r2, r1
 1622 002c 1A60     		str	r2, [r3]
1198:.\Generated_Source\PSoC4/PWM_1.c **** 
1199:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1623              		.loc 1 1199 0
 1624 002e 3B1C     		mov	r3, r7
 1625 0030 0F33     		add	r3, r3, #15
 1626 0032 1B78     		ldrb	r3, [r3]
 1627 0034 181C     		mov	r0, r3
 1628 0036 FFF7FEFF 		bl	CyExitCriticalSection
1200:.\Generated_Source\PSoC4/PWM_1.c **** }
 1629              		.loc 1 1200 0
 1630 003a BD46     		mov	sp, r7
 1631 003c 05B0     		add	sp, sp, #20
 1632              		@ sp needed
 1633 003e 90BD     		pop	{r4, r7, pc}
 1634              	.L107:
 1635              		.align	2
 1636              	.L106:
 1637 0040 24010540 		.word	1074069796
 1638              		.cfi_endproc
 1639              	.LFE32:
 1640              		.size	PWM_1_SetCountMode, .-PWM_1_SetCountMode
 1641              		.section	.text.PWM_1_TriggerCommand,"ax",%progbits
 1642              		.align	2
 1643              		.global	PWM_1_TriggerCommand
 1644              		.code	16
 1645              		.thumb_func
 1646              		.type	PWM_1_TriggerCommand, %function
 1647              	PWM_1_TriggerCommand:
 1648              	.LFB33:
1201:.\Generated_Source\PSoC4/PWM_1.c **** 
1202:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 51


1203:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM_1.c **** *
1207:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM_1.c **** *
1212:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM_1.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM_1.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM_1.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM_1.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/PWM_1.c **** *
1226:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1228:.\Generated_Source\PSoC4/PWM_1.c **** *
1229:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM_1.c **** {
 1649              		.loc 1 1231 0
 1650              		.cfi_startproc
 1651 0000 90B5     		push	{r4, r7, lr}
 1652              		.cfi_def_cfa_offset 12
 1653              		.cfi_offset 4, -12
 1654              		.cfi_offset 7, -8
 1655              		.cfi_offset 14, -4
 1656 0002 85B0     		sub	sp, sp, #20
 1657              		.cfi_def_cfa_offset 32
 1658 0004 00AF     		add	r7, sp, #0
 1659              		.cfi_def_cfa_register 7
 1660 0006 7860     		str	r0, [r7, #4]
 1661 0008 3960     		str	r1, [r7]
1232:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM_1.c **** 
1234:.\Generated_Source\PSoC4/PWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1662              		.loc 1 1234 0
 1663 000a 3C1C     		mov	r4, r7
 1664 000c 0F34     		add	r4, r4, #15
 1665 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1666 0012 031C     		mov	r3, r0
 1667 0014 2370     		strb	r3, [r4]
1235:.\Generated_Source\PSoC4/PWM_1.c **** 
1236:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_COMMAND_REG = ((uint32)(mask << command));
 1668              		.loc 1 1236 0
 1669 0016 084B     		ldr	r3, .L109
 1670 0018 3A68     		ldr	r2, [r7]
 1671 001a 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 52


 1672 001c 081C     		mov	r0, r1
 1673 001e 9040     		lsl	r0, r0, r2
 1674 0020 021C     		mov	r2, r0
 1675 0022 1A60     		str	r2, [r3]
1237:.\Generated_Source\PSoC4/PWM_1.c **** 
1238:.\Generated_Source\PSoC4/PWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1676              		.loc 1 1238 0
 1677 0024 3B1C     		mov	r3, r7
 1678 0026 0F33     		add	r3, r3, #15
 1679 0028 1B78     		ldrb	r3, [r3]
 1680 002a 181C     		mov	r0, r3
 1681 002c FFF7FEFF 		bl	CyExitCriticalSection
1239:.\Generated_Source\PSoC4/PWM_1.c **** }
 1682              		.loc 1 1239 0
 1683 0030 BD46     		mov	sp, r7
 1684 0032 05B0     		add	sp, sp, #20
 1685              		@ sp needed
 1686 0034 90BD     		pop	{r4, r7, pc}
 1687              	.L110:
 1688 0036 C046     		.align	2
 1689              	.L109:
 1690 0038 08000540 		.word	1074069512
 1691              		.cfi_endproc
 1692              	.LFE33:
 1693              		.size	PWM_1_TriggerCommand, .-PWM_1_TriggerCommand
 1694              		.section	.text.PWM_1_ReadStatus,"ax",%progbits
 1695              		.align	2
 1696              		.global	PWM_1_ReadStatus
 1697              		.code	16
 1698              		.thumb_func
 1699              		.type	PWM_1_ReadStatus, %function
 1700              	PWM_1_ReadStatus:
 1701              	.LFB34:
1240:.\Generated_Source\PSoC4/PWM_1.c **** 
1241:.\Generated_Source\PSoC4/PWM_1.c **** 
1242:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadStatus
1244:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM_1.c **** *
1246:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the status of the PWM_1.
1248:.\Generated_Source\PSoC4/PWM_1.c **** *
1249:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1251:.\Generated_Source\PSoC4/PWM_1.c **** *
1252:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM_1.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM_1.c **** *
1258:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM_1.c **** {
 1702              		.loc 1 1260 0
 1703              		.cfi_startproc
 1704 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 53


 1705              		.cfi_def_cfa_offset 8
 1706              		.cfi_offset 7, -8
 1707              		.cfi_offset 14, -4
 1708 0002 00AF     		add	r7, sp, #0
 1709              		.cfi_def_cfa_register 7
1261:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1710              		.loc 1 1261 0
 1711 0004 054B     		ldr	r3, .L113
 1712 0006 1B68     		ldr	r3, [r3]
 1713 0008 9A0F     		lsr	r2, r3, #30
1262:.\Generated_Source\PSoC4/PWM_1.c ****             (PWM_1_STATUS_REG & PWM_1_STATUS_DOWN));
 1714              		.loc 1 1262 0
 1715 000a 044B     		ldr	r3, .L113
 1716 000c 1968     		ldr	r1, [r3]
 1717 000e 0123     		mov	r3, #1
 1718 0010 0B40     		and	r3, r1
1261:.\Generated_Source\PSoC4/PWM_1.c ****     return ((PWM_1_STATUS_REG >> PWM_1_RUNNING_STATUS_SHIFT) |
 1719              		.loc 1 1261 0
 1720 0012 1343     		orr	r3, r2
1263:.\Generated_Source\PSoC4/PWM_1.c **** }
 1721              		.loc 1 1263 0
 1722 0014 181C     		mov	r0, r3
 1723 0016 BD46     		mov	sp, r7
 1724              		@ sp needed
 1725 0018 80BD     		pop	{r7, pc}
 1726              	.L114:
 1727 001a C046     		.align	2
 1728              	.L113:
 1729 001c 04010540 		.word	1074069764
 1730              		.cfi_endproc
 1731              	.LFE34:
 1732              		.size	PWM_1_ReadStatus, .-PWM_1_ReadStatus
 1733              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 1734              		.align	2
 1735              		.global	PWM_1_SetInterruptMode
 1736              		.code	16
 1737              		.thumb_func
 1738              		.type	PWM_1_SetInterruptMode, %function
 1739              	PWM_1_SetInterruptMode:
 1740              	.LFB35:
1264:.\Generated_Source\PSoC4/PWM_1.c **** 
1265:.\Generated_Source\PSoC4/PWM_1.c **** 
1266:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM_1.c **** *
1270:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM_1.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM_1.c **** *
1274:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1277:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM_1.c **** *
1280:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 54


1281:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1282:.\Generated_Source\PSoC4/PWM_1.c **** *
1283:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM_1.c **** {
 1741              		.loc 1 1285 0
 1742              		.cfi_startproc
 1743 0000 80B5     		push	{r7, lr}
 1744              		.cfi_def_cfa_offset 8
 1745              		.cfi_offset 7, -8
 1746              		.cfi_offset 14, -4
 1747 0002 82B0     		sub	sp, sp, #8
 1748              		.cfi_def_cfa_offset 16
 1749 0004 00AF     		add	r7, sp, #0
 1750              		.cfi_def_cfa_register 7
 1751 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1752              		.loc 1 1286 0
 1753 0008 024B     		ldr	r3, .L116
 1754 000a 7A68     		ldr	r2, [r7, #4]
 1755 000c 1A60     		str	r2, [r3]
1287:.\Generated_Source\PSoC4/PWM_1.c **** }
 1756              		.loc 1 1287 0
 1757 000e BD46     		mov	sp, r7
 1758 0010 02B0     		add	sp, sp, #8
 1759              		@ sp needed
 1760 0012 80BD     		pop	{r7, pc}
 1761              	.L117:
 1762              		.align	2
 1763              	.L116:
 1764 0014 38010540 		.word	1074069816
 1765              		.cfi_endproc
 1766              	.LFE35:
 1767              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 1768              		.section	.text.PWM_1_GetInterruptSourceMasked,"ax",%progbits
 1769              		.align	2
 1770              		.global	PWM_1_GetInterruptSourceMasked
 1771              		.code	16
 1772              		.thumb_func
 1773              		.type	PWM_1_GetInterruptSourceMasked, %function
 1774              	PWM_1_GetInterruptSourceMasked:
 1775              	.LFB36:
1288:.\Generated_Source\PSoC4/PWM_1.c **** 
1289:.\Generated_Source\PSoC4/PWM_1.c **** 
1290:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM_1.c **** *
1294:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM_1.c **** *
1297:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM_1.c **** *   None
1299:.\Generated_Source\PSoC4/PWM_1.c **** *
1300:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM_1.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 55


1303:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/PWM_1.c **** *
1306:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM_1.c **** {
 1776              		.loc 1 1308 0
 1777              		.cfi_startproc
 1778 0000 80B5     		push	{r7, lr}
 1779              		.cfi_def_cfa_offset 8
 1780              		.cfi_offset 7, -8
 1781              		.cfi_offset 14, -4
 1782 0002 00AF     		add	r7, sp, #0
 1783              		.cfi_def_cfa_register 7
1309:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_MASKED_REG);
 1784              		.loc 1 1309 0
 1785 0004 024B     		ldr	r3, .L120
 1786 0006 1B68     		ldr	r3, [r3]
1310:.\Generated_Source\PSoC4/PWM_1.c **** }
 1787              		.loc 1 1310 0
 1788 0008 181C     		mov	r0, r3
 1789 000a BD46     		mov	sp, r7
 1790              		@ sp needed
 1791 000c 80BD     		pop	{r7, pc}
 1792              	.L121:
 1793 000e C046     		.align	2
 1794              	.L120:
 1795 0010 3C010540 		.word	1074069820
 1796              		.cfi_endproc
 1797              	.LFE36:
 1798              		.size	PWM_1_GetInterruptSourceMasked, .-PWM_1_GetInterruptSourceMasked
 1799              		.section	.text.PWM_1_GetInterruptSource,"ax",%progbits
 1800              		.align	2
 1801              		.global	PWM_1_GetInterruptSource
 1802              		.code	16
 1803              		.thumb_func
 1804              		.type	PWM_1_GetInterruptSource, %function
 1805              	PWM_1_GetInterruptSource:
 1806              	.LFB37:
1311:.\Generated_Source\PSoC4/PWM_1.c **** 
1312:.\Generated_Source\PSoC4/PWM_1.c **** 
1313:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM_1.c **** *
1317:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM_1.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM_1.c **** *
1320:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1322:.\Generated_Source\PSoC4/PWM_1.c **** *
1323:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM_1.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PWM_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 56


1329:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM_1.c **** uint32 PWM_1_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM_1.c **** {
 1807              		.loc 1 1331 0
 1808              		.cfi_startproc
 1809 0000 80B5     		push	{r7, lr}
 1810              		.cfi_def_cfa_offset 8
 1811              		.cfi_offset 7, -8
 1812              		.cfi_offset 14, -4
 1813 0002 00AF     		add	r7, sp, #0
 1814              		.cfi_def_cfa_register 7
1332:.\Generated_Source\PSoC4/PWM_1.c ****     return (PWM_1_INTERRUPT_REQ_REG);
 1815              		.loc 1 1332 0
 1816 0004 024B     		ldr	r3, .L124
 1817 0006 1B68     		ldr	r3, [r3]
1333:.\Generated_Source\PSoC4/PWM_1.c **** }
 1818              		.loc 1 1333 0
 1819 0008 181C     		mov	r0, r3
 1820 000a BD46     		mov	sp, r7
 1821              		@ sp needed
 1822 000c 80BD     		pop	{r7, pc}
 1823              	.L125:
 1824 000e C046     		.align	2
 1825              	.L124:
 1826 0010 30010540 		.word	1074069808
 1827              		.cfi_endproc
 1828              	.LFE37:
 1829              		.size	PWM_1_GetInterruptSource, .-PWM_1_GetInterruptSource
 1830              		.section	.text.PWM_1_ClearInterrupt,"ax",%progbits
 1831              		.align	2
 1832              		.global	PWM_1_ClearInterrupt
 1833              		.code	16
 1834              		.thumb_func
 1835              		.type	PWM_1_ClearInterrupt, %function
 1836              	PWM_1_ClearInterrupt:
 1837              	.LFB38:
1334:.\Generated_Source\PSoC4/PWM_1.c **** 
1335:.\Generated_Source\PSoC4/PWM_1.c **** 
1336:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM_1.c **** *
1340:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM_1.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM_1.c **** *
1343:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM_1.c **** *
1349:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1351:.\Generated_Source\PSoC4/PWM_1.c **** *
1352:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PWM_1.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 57


 1838              		.loc 1 1354 0
 1839              		.cfi_startproc
 1840 0000 80B5     		push	{r7, lr}
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 7, -8
 1843              		.cfi_offset 14, -4
 1844 0002 82B0     		sub	sp, sp, #8
 1845              		.cfi_def_cfa_offset 16
 1846 0004 00AF     		add	r7, sp, #0
 1847              		.cfi_def_cfa_register 7
 1848 0006 7860     		str	r0, [r7, #4]
1355:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_REQ_REG = interruptMask;
 1849              		.loc 1 1355 0
 1850 0008 024B     		ldr	r3, .L127
 1851 000a 7A68     		ldr	r2, [r7, #4]
 1852 000c 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/PWM_1.c **** }
 1853              		.loc 1 1356 0
 1854 000e BD46     		mov	sp, r7
 1855 0010 02B0     		add	sp, sp, #8
 1856              		@ sp needed
 1857 0012 80BD     		pop	{r7, pc}
 1858              	.L128:
 1859              		.align	2
 1860              	.L127:
 1861 0014 30010540 		.word	1074069808
 1862              		.cfi_endproc
 1863              	.LFE38:
 1864              		.size	PWM_1_ClearInterrupt, .-PWM_1_ClearInterrupt
 1865              		.section	.text.PWM_1_SetInterrupt,"ax",%progbits
 1866              		.align	2
 1867              		.global	PWM_1_SetInterrupt
 1868              		.code	16
 1869              		.thumb_func
 1870              		.type	PWM_1_SetInterrupt, %function
 1871              	PWM_1_SetInterrupt:
 1872              	.LFB39:
1357:.\Generated_Source\PSoC4/PWM_1.c **** 
1358:.\Generated_Source\PSoC4/PWM_1.c **** 
1359:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM_1.c **** *
1363:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM_1.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM_1.c **** *
1366:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM_1.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM_1.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM_1.c **** *     - PWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM_1.c **** *
1372:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM_1.c **** *  None
1374:.\Generated_Source\PSoC4/PWM_1.c **** *
1375:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_SetInterrupt(uint32 interruptMask)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 58


1377:.\Generated_Source\PSoC4/PWM_1.c **** {
 1873              		.loc 1 1377 0
 1874              		.cfi_startproc
 1875 0000 80B5     		push	{r7, lr}
 1876              		.cfi_def_cfa_offset 8
 1877              		.cfi_offset 7, -8
 1878              		.cfi_offset 14, -4
 1879 0002 82B0     		sub	sp, sp, #8
 1880              		.cfi_def_cfa_offset 16
 1881 0004 00AF     		add	r7, sp, #0
 1882              		.cfi_def_cfa_register 7
 1883 0006 7860     		str	r0, [r7, #4]
1378:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_INTERRUPT_SET_REG = interruptMask;
 1884              		.loc 1 1378 0
 1885 0008 024B     		ldr	r3, .L130
 1886 000a 7A68     		ldr	r2, [r7, #4]
 1887 000c 1A60     		str	r2, [r3]
1379:.\Generated_Source\PSoC4/PWM_1.c **** }
 1888              		.loc 1 1379 0
 1889 000e BD46     		mov	sp, r7
 1890 0010 02B0     		add	sp, sp, #8
 1891              		@ sp needed
 1892 0012 80BD     		pop	{r7, pc}
 1893              	.L131:
 1894              		.align	2
 1895              	.L130:
 1896 0014 34010540 		.word	1074069812
 1897              		.cfi_endproc
 1898              	.LFE39:
 1899              		.size	PWM_1_SetInterrupt, .-PWM_1_SetInterrupt
 1900              		.text
 1901              	.Letext0:
 1902              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1903              		.section	.debug_info,"",%progbits
 1904              	.Ldebug_info0:
 1905 0000 EC060000 		.4byte	0x6ec
 1906 0004 0400     		.2byte	0x4
 1907 0006 00000000 		.4byte	.Ldebug_abbrev0
 1908 000a 04       		.byte	0x4
 1909 000b 01       		.uleb128 0x1
 1910 000c 1D030000 		.4byte	.LASF76
 1911 0010 01       		.byte	0x1
 1912 0011 94020000 		.4byte	.LASF77
 1913 0015 13020000 		.4byte	.LASF78
 1914 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1915 001d 00000000 		.4byte	0
 1916 0021 00000000 		.4byte	.Ldebug_line0
 1917 0025 02       		.uleb128 0x2
 1918 0026 01       		.byte	0x1
 1919 0027 06       		.byte	0x6
 1920 0028 BA000000 		.4byte	.LASF0
 1921 002c 02       		.uleb128 0x2
 1922 002d 01       		.byte	0x1
 1923 002e 08       		.byte	0x8
 1924 002f D3030000 		.4byte	.LASF1
 1925 0033 02       		.uleb128 0x2
 1926 0034 02       		.byte	0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 59


 1927 0035 05       		.byte	0x5
 1928 0036 1C040000 		.4byte	.LASF2
 1929 003a 02       		.uleb128 0x2
 1930 003b 02       		.byte	0x2
 1931 003c 07       		.byte	0x7
 1932 003d AA010000 		.4byte	.LASF3
 1933 0041 02       		.uleb128 0x2
 1934 0042 04       		.byte	0x4
 1935 0043 05       		.byte	0x5
 1936 0044 EC000000 		.4byte	.LASF4
 1937 0048 02       		.uleb128 0x2
 1938 0049 04       		.byte	0x4
 1939 004a 07       		.byte	0x7
 1940 004b 6B010000 		.4byte	.LASF5
 1941 004f 02       		.uleb128 0x2
 1942 0050 08       		.byte	0x8
 1943 0051 05       		.byte	0x5
 1944 0052 AC000000 		.4byte	.LASF6
 1945 0056 02       		.uleb128 0x2
 1946 0057 08       		.byte	0x8
 1947 0058 07       		.byte	0x7
 1948 0059 58000000 		.4byte	.LASF7
 1949 005d 03       		.uleb128 0x3
 1950 005e 04       		.byte	0x4
 1951 005f 05       		.byte	0x5
 1952 0060 696E7400 		.ascii	"int\000"
 1953 0064 02       		.uleb128 0x2
 1954 0065 04       		.byte	0x4
 1955 0066 07       		.byte	0x7
 1956 0067 48010000 		.4byte	.LASF8
 1957 006b 04       		.uleb128 0x4
 1958 006c F5000000 		.4byte	.LASF9
 1959 0070 02       		.byte	0x2
 1960 0071 C1       		.byte	0xc1
 1961 0072 2C000000 		.4byte	0x2c
 1962 0076 04       		.uleb128 0x4
 1963 0077 27010000 		.4byte	.LASF10
 1964 007b 02       		.byte	0x2
 1965 007c C3       		.byte	0xc3
 1966 007d 48000000 		.4byte	0x48
 1967 0081 02       		.uleb128 0x2
 1968 0082 04       		.byte	0x4
 1969 0083 04       		.byte	0x4
 1970 0084 0D030000 		.4byte	.LASF11
 1971 0088 02       		.uleb128 0x2
 1972 0089 08       		.byte	0x8
 1973 008a 04       		.byte	0x4
 1974 008b FB000000 		.4byte	.LASF12
 1975 008f 02       		.uleb128 0x2
 1976 0090 01       		.byte	0x1
 1977 0091 08       		.byte	0x8
 1978 0092 71040000 		.4byte	.LASF13
 1979 0096 05       		.uleb128 0x5
 1980 0097 E3010000 		.4byte	.LASF14
 1981 009b 02       		.byte	0x2
 1982 009c 6D01     		.2byte	0x16d
 1983 009e A2000000 		.4byte	0xa2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 60


 1984 00a2 06       		.uleb128 0x6
 1985 00a3 76000000 		.4byte	0x76
 1986 00a7 02       		.uleb128 0x2
 1987 00a8 04       		.byte	0x4
 1988 00a9 07       		.byte	0x7
 1989 00aa 7C020000 		.4byte	.LASF15
 1990 00ae 07       		.uleb128 0x7
 1991 00af D8010000 		.4byte	.LASF16
 1992 00b3 01       		.byte	0x1
 1993 00b4 26       		.byte	0x26
 1994 00b5 00000000 		.4byte	.LFB0
 1995 00b9 54000000 		.4byte	.LFE0-.LFB0
 1996 00bd 01       		.uleb128 0x1
 1997 00be 9C       		.byte	0x9c
 1998 00bf 08       		.uleb128 0x8
 1999 00c0 CB010000 		.4byte	.LASF18
 2000 00c4 01       		.byte	0x1
 2001 00c5 B1       		.byte	0xb1
 2002 00c6 00000000 		.4byte	.LFB1
 2003 00ca 38000000 		.4byte	.LFE1-.LFB1
 2004 00ce 01       		.uleb128 0x1
 2005 00cf 9C       		.byte	0x9c
 2006 00d0 E3000000 		.4byte	0xe3
 2007 00d4 09       		.uleb128 0x9
 2008 00d5 05050000 		.4byte	.LASF20
 2009 00d9 01       		.byte	0x1
 2010 00da B3       		.byte	0xb3
 2011 00db 6B000000 		.4byte	0x6b
 2012 00df 02       		.uleb128 0x2
 2013 00e0 91       		.byte	0x91
 2014 00e1 6F       		.sleb128 -17
 2015 00e2 00       		.byte	0
 2016 00e3 07       		.uleb128 0x7
 2017 00e4 E5040000 		.4byte	.LASF17
 2018 00e8 01       		.byte	0x1
 2019 00e9 E0       		.byte	0xe0
 2020 00ea 00000000 		.4byte	.LFB2
 2021 00ee 24000000 		.4byte	.LFE2-.LFB2
 2022 00f2 01       		.uleb128 0x1
 2023 00f3 9C       		.byte	0x9c
 2024 00f4 08       		.uleb128 0x8
 2025 00f5 06000000 		.4byte	.LASF19
 2026 00f9 01       		.byte	0x1
 2027 00fa FA       		.byte	0xfa
 2028 00fb 00000000 		.4byte	.LFB3
 2029 00ff 30000000 		.4byte	.LFE3-.LFB3
 2030 0103 01       		.uleb128 0x1
 2031 0104 9C       		.byte	0x9c
 2032 0105 18010000 		.4byte	0x118
 2033 0109 09       		.uleb128 0x9
 2034 010a 05050000 		.4byte	.LASF20
 2035 010e 01       		.byte	0x1
 2036 010f FC       		.byte	0xfc
 2037 0110 6B000000 		.4byte	0x6b
 2038 0114 02       		.uleb128 0x2
 2039 0115 91       		.byte	0x91
 2040 0116 6F       		.sleb128 -17
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 61


 2041 0117 00       		.byte	0
 2042 0118 0A       		.uleb128 0xa
 2043 0119 55010000 		.4byte	.LASF21
 2044 011d 01       		.byte	0x1
 2045 011e 1F01     		.2byte	0x11f
 2046 0120 00000000 		.4byte	.LFB4
 2047 0124 48000000 		.4byte	.LFE4-.LFB4
 2048 0128 01       		.uleb128 0x1
 2049 0129 9C       		.byte	0x9c
 2050 012a 4D010000 		.4byte	0x14d
 2051 012e 0B       		.uleb128 0xb
 2052 012f 76040000 		.4byte	.LASF23
 2053 0133 01       		.byte	0x1
 2054 0134 1F01     		.2byte	0x11f
 2055 0136 76000000 		.4byte	0x76
 2056 013a 02       		.uleb128 0x2
 2057 013b 91       		.byte	0x91
 2058 013c 64       		.sleb128 -28
 2059 013d 0C       		.uleb128 0xc
 2060 013e 05050000 		.4byte	.LASF20
 2061 0142 01       		.byte	0x1
 2062 0143 2101     		.2byte	0x121
 2063 0145 6B000000 		.4byte	0x6b
 2064 0149 02       		.uleb128 0x2
 2065 014a 91       		.byte	0x91
 2066 014b 6F       		.sleb128 -17
 2067 014c 00       		.byte	0
 2068 014d 0A       		.uleb128 0xa
 2069 014e 4B050000 		.4byte	.LASF22
 2070 0152 01       		.byte	0x1
 2071 0153 4001     		.2byte	0x140
 2072 0155 00000000 		.4byte	.LFB5
 2073 0159 48000000 		.4byte	.LFE5-.LFB5
 2074 015d 01       		.uleb128 0x1
 2075 015e 9C       		.byte	0x9c
 2076 015f 82010000 		.4byte	0x182
 2077 0163 0B       		.uleb128 0xb
 2078 0164 6F000000 		.4byte	.LASF24
 2079 0168 01       		.byte	0x1
 2080 0169 4001     		.2byte	0x140
 2081 016b 76000000 		.4byte	0x76
 2082 016f 02       		.uleb128 0x2
 2083 0170 91       		.byte	0x91
 2084 0171 64       		.sleb128 -28
 2085 0172 0C       		.uleb128 0xc
 2086 0173 05050000 		.4byte	.LASF20
 2087 0177 01       		.byte	0x1
 2088 0178 4201     		.2byte	0x142
 2089 017a 6B000000 		.4byte	0x6b
 2090 017e 02       		.uleb128 0x2
 2091 017f 91       		.byte	0x91
 2092 0180 6F       		.sleb128 -17
 2093 0181 00       		.byte	0
 2094 0182 0A       		.uleb128 0xa
 2095 0183 90040000 		.4byte	.LASF25
 2096 0187 01       		.byte	0x1
 2097 0188 6501     		.2byte	0x165
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 62


 2098 018a 00000000 		.4byte	.LFB6
 2099 018e 48000000 		.4byte	.LFE6-.LFB6
 2100 0192 01       		.uleb128 0x1
 2101 0193 9C       		.byte	0x9c
 2102 0194 B7010000 		.4byte	0x1b7
 2103 0198 0B       		.uleb128 0xb
 2104 0199 13030000 		.4byte	.LASF26
 2105 019d 01       		.byte	0x1
 2106 019e 6501     		.2byte	0x165
 2107 01a0 76000000 		.4byte	0x76
 2108 01a4 02       		.uleb128 0x2
 2109 01a5 91       		.byte	0x91
 2110 01a6 64       		.sleb128 -28
 2111 01a7 0C       		.uleb128 0xc
 2112 01a8 05050000 		.4byte	.LASF20
 2113 01ac 01       		.byte	0x1
 2114 01ad 6701     		.2byte	0x167
 2115 01af 6B000000 		.4byte	0x6b
 2116 01b3 02       		.uleb128 0x2
 2117 01b4 91       		.byte	0x91
 2118 01b5 6F       		.sleb128 -17
 2119 01b6 00       		.byte	0
 2120 01b7 0A       		.uleb128 0xa
 2121 01b8 76000000 		.4byte	.LASF27
 2122 01bc 01       		.byte	0x1
 2123 01bd 8501     		.2byte	0x185
 2124 01bf 00000000 		.4byte	.LFB7
 2125 01c3 4C000000 		.4byte	.LFE7-.LFB7
 2126 01c7 01       		.uleb128 0x1
 2127 01c8 9C       		.byte	0x9c
 2128 01c9 EC010000 		.4byte	0x1ec
 2129 01cd 0B       		.uleb128 0xb
 2130 01ce BD010000 		.4byte	.LASF28
 2131 01d2 01       		.byte	0x1
 2132 01d3 8501     		.2byte	0x185
 2133 01d5 76000000 		.4byte	0x76
 2134 01d9 02       		.uleb128 0x2
 2135 01da 91       		.byte	0x91
 2136 01db 64       		.sleb128 -28
 2137 01dc 0C       		.uleb128 0xc
 2138 01dd 05050000 		.4byte	.LASF20
 2139 01e1 01       		.byte	0x1
 2140 01e2 8701     		.2byte	0x187
 2141 01e4 6B000000 		.4byte	0x6b
 2142 01e8 02       		.uleb128 0x2
 2143 01e9 91       		.byte	0x91
 2144 01ea 6F       		.sleb128 -17
 2145 01eb 00       		.byte	0
 2146 01ec 0D       		.uleb128 0xd
 2147 01ed BD020000 		.4byte	.LASF29
 2148 01f1 01       		.byte	0x1
 2149 01f2 BB01     		.2byte	0x1bb
 2150 01f4 00000000 		.4byte	.LFB8
 2151 01f8 1C000000 		.4byte	.LFE8-.LFB8
 2152 01fc 01       		.uleb128 0x1
 2153 01fd 9C       		.byte	0x9c
 2154 01fe 12020000 		.4byte	0x212
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 63


 2155 0202 0B       		.uleb128 0xb
 2156 0203 7D010000 		.4byte	.LASF30
 2157 0207 01       		.byte	0x1
 2158 0208 BB01     		.2byte	0x1bb
 2159 020a 76000000 		.4byte	0x76
 2160 020e 02       		.uleb128 0x2
 2161 020f 91       		.byte	0x91
 2162 0210 74       		.sleb128 -12
 2163 0211 00       		.byte	0
 2164 0212 0A       		.uleb128 0xa
 2165 0213 F6030000 		.4byte	.LASF31
 2166 0217 01       		.byte	0x1
 2167 0218 DF01     		.2byte	0x1df
 2168 021a 00000000 		.4byte	.LFB9
 2169 021e 48000000 		.4byte	.LFE9-.LFB9
 2170 0222 01       		.uleb128 0x1
 2171 0223 9C       		.byte	0x9c
 2172 0224 47020000 		.4byte	0x247
 2173 0228 0B       		.uleb128 0xb
 2174 0229 85020000 		.4byte	.LASF32
 2175 022d 01       		.byte	0x1
 2176 022e DF01     		.2byte	0x1df
 2177 0230 76000000 		.4byte	0x76
 2178 0234 02       		.uleb128 0x2
 2179 0235 91       		.byte	0x91
 2180 0236 64       		.sleb128 -28
 2181 0237 0C       		.uleb128 0xc
 2182 0238 05050000 		.4byte	.LASF20
 2183 023c 01       		.byte	0x1
 2184 023d E101     		.2byte	0x1e1
 2185 023f 6B000000 		.4byte	0x6b
 2186 0243 02       		.uleb128 0x2
 2187 0244 91       		.byte	0x91
 2188 0245 6F       		.sleb128 -17
 2189 0246 00       		.byte	0
 2190 0247 0A       		.uleb128 0xa
 2191 0248 FC010000 		.4byte	.LASF33
 2192 024c 01       		.byte	0x1
 2193 024d 0102     		.2byte	0x201
 2194 024f 00000000 		.4byte	.LFB10
 2195 0253 48000000 		.4byte	.LFE10-.LFB10
 2196 0257 01       		.uleb128 0x1
 2197 0258 9C       		.byte	0x9c
 2198 0259 7C020000 		.4byte	0x27c
 2199 025d 0B       		.uleb128 0xb
 2200 025e 0B040000 		.4byte	.LASF34
 2201 0262 01       		.byte	0x1
 2202 0263 0102     		.2byte	0x201
 2203 0265 76000000 		.4byte	0x76
 2204 0269 02       		.uleb128 0x2
 2205 026a 91       		.byte	0x91
 2206 026b 64       		.sleb128 -28
 2207 026c 0C       		.uleb128 0xc
 2208 026d 05050000 		.4byte	.LASF20
 2209 0271 01       		.byte	0x1
 2210 0272 0302     		.2byte	0x203
 2211 0274 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 64


 2212 0278 02       		.uleb128 0x2
 2213 0279 91       		.byte	0x91
 2214 027a 6F       		.sleb128 -17
 2215 027b 00       		.byte	0
 2216 027c 0A       		.uleb128 0xa
 2217 027d E1030000 		.4byte	.LASF35
 2218 0281 01       		.byte	0x1
 2219 0282 2202     		.2byte	0x222
 2220 0284 00000000 		.4byte	.LFB11
 2221 0288 4C000000 		.4byte	.LFE11-.LFB11
 2222 028c 01       		.uleb128 0x1
 2223 028d 9C       		.byte	0x9c
 2224 028e B1020000 		.4byte	0x2b1
 2225 0292 0B       		.uleb128 0xb
 2226 0293 3F010000 		.4byte	.LASF36
 2227 0297 01       		.byte	0x1
 2228 0298 2202     		.2byte	0x222
 2229 029a 76000000 		.4byte	0x76
 2230 029e 02       		.uleb128 0x2
 2231 029f 91       		.byte	0x91
 2232 02a0 64       		.sleb128 -28
 2233 02a1 0C       		.uleb128 0xc
 2234 02a2 05050000 		.4byte	.LASF20
 2235 02a6 01       		.byte	0x1
 2236 02a7 2402     		.2byte	0x224
 2237 02a9 6B000000 		.4byte	0x6b
 2238 02ad 02       		.uleb128 0x2
 2239 02ae 91       		.byte	0x91
 2240 02af 6F       		.sleb128 -17
 2241 02b0 00       		.byte	0
 2242 02b1 0A       		.uleb128 0xa
 2243 02b2 AD030000 		.4byte	.LASF37
 2244 02b6 01       		.byte	0x1
 2245 02b7 4302     		.2byte	0x243
 2246 02b9 00000000 		.4byte	.LFB12
 2247 02bd 48000000 		.4byte	.LFE12-.LFB12
 2248 02c1 01       		.uleb128 0x1
 2249 02c2 9C       		.byte	0x9c
 2250 02c3 E6020000 		.4byte	0x2e6
 2251 02c7 0B       		.uleb128 0xb
 2252 02c8 3A010000 		.4byte	.LASF38
 2253 02cc 01       		.byte	0x1
 2254 02cd 4302     		.2byte	0x243
 2255 02cf 76000000 		.4byte	0x76
 2256 02d3 02       		.uleb128 0x2
 2257 02d4 91       		.byte	0x91
 2258 02d5 64       		.sleb128 -28
 2259 02d6 0C       		.uleb128 0xc
 2260 02d7 05050000 		.4byte	.LASF20
 2261 02db 01       		.byte	0x1
 2262 02dc 4502     		.2byte	0x245
 2263 02de 6B000000 		.4byte	0x6b
 2264 02e2 02       		.uleb128 0x2
 2265 02e3 91       		.byte	0x91
 2266 02e4 6F       		.sleb128 -17
 2267 02e5 00       		.byte	0
 2268 02e6 0D       		.uleb128 0xd
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 65


 2269 02e7 E9010000 		.4byte	.LASF39
 2270 02eb 01       		.byte	0x1
 2271 02ec 6102     		.2byte	0x261
 2272 02ee 00000000 		.4byte	.LFB13
 2273 02f2 1C000000 		.4byte	.LFE13-.LFB13
 2274 02f6 01       		.uleb128 0x1
 2275 02f7 9C       		.byte	0x9c
 2276 02f8 0C030000 		.4byte	0x30c
 2277 02fc 0B       		.uleb128 0xb
 2278 02fd 00000000 		.4byte	.LASF40
 2279 0301 01       		.byte	0x1
 2280 0302 6102     		.2byte	0x261
 2281 0304 76000000 		.4byte	0x76
 2282 0308 02       		.uleb128 0x2
 2283 0309 91       		.byte	0x91
 2284 030a 74       		.sleb128 -12
 2285 030b 00       		.byte	0
 2286 030c 0E       		.uleb128 0xe
 2287 030d 02010000 		.4byte	.LASF45
 2288 0311 01       		.byte	0x1
 2289 0312 7502     		.2byte	0x275
 2290 0314 76000000 		.4byte	0x76
 2291 0318 00000000 		.4byte	.LFB14
 2292 031c 18000000 		.4byte	.LFE14-.LFB14
 2293 0320 01       		.uleb128 0x1
 2294 0321 9C       		.byte	0x9c
 2295 0322 0A       		.uleb128 0xa
 2296 0323 CE020000 		.4byte	.LASF41
 2297 0327 01       		.byte	0x1
 2298 0328 9202     		.2byte	0x292
 2299 032a 00000000 		.4byte	.LFB15
 2300 032e 48000000 		.4byte	.LFE15-.LFB15
 2301 0332 01       		.uleb128 0x1
 2302 0333 9C       		.byte	0x9c
 2303 0334 57030000 		.4byte	0x357
 2304 0338 0B       		.uleb128 0xb
 2305 0339 CE040000 		.4byte	.LASF42
 2306 033d 01       		.byte	0x1
 2307 033e 9202     		.2byte	0x292
 2308 0340 76000000 		.4byte	0x76
 2309 0344 02       		.uleb128 0x2
 2310 0345 91       		.byte	0x91
 2311 0346 64       		.sleb128 -28
 2312 0347 0C       		.uleb128 0xc
 2313 0348 05050000 		.4byte	.LASF20
 2314 034c 01       		.byte	0x1
 2315 034d 9402     		.2byte	0x294
 2316 034f 6B000000 		.4byte	0x6b
 2317 0353 02       		.uleb128 0x2
 2318 0354 91       		.byte	0x91
 2319 0355 6F       		.sleb128 -17
 2320 0356 00       		.byte	0
 2321 0357 0D       		.uleb128 0xd
 2322 0358 16050000 		.4byte	.LASF43
 2323 035c 01       		.byte	0x1
 2324 035d AF02     		.2byte	0x2af
 2325 035f 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 66


 2326 0363 1C000000 		.4byte	.LFE16-.LFB16
 2327 0367 01       		.uleb128 0x1
 2328 0368 9C       		.byte	0x9c
 2329 0369 7D030000 		.4byte	0x37d
 2330 036d 0B       		.uleb128 0xb
 2331 036e 51000000 		.4byte	.LASF44
 2332 0372 01       		.byte	0x1
 2333 0373 AF02     		.2byte	0x2af
 2334 0375 76000000 		.4byte	0x76
 2335 0379 02       		.uleb128 0x2
 2336 037a 91       		.byte	0x91
 2337 037b 74       		.sleb128 -12
 2338 037c 00       		.byte	0
 2339 037d 0E       		.uleb128 0xe
 2340 037e 86010000 		.4byte	.LASF46
 2341 0382 01       		.byte	0x1
 2342 0383 C302     		.2byte	0x2c3
 2343 0385 76000000 		.4byte	0x76
 2344 0389 00000000 		.4byte	.LFB17
 2345 038d 18000000 		.4byte	.LFE17-.LFB17
 2346 0391 01       		.uleb128 0x1
 2347 0392 9C       		.byte	0x9c
 2348 0393 0A       		.uleb128 0xa
 2349 0394 F8020000 		.4byte	.LASF47
 2350 0398 01       		.byte	0x1
 2351 0399 DD02     		.2byte	0x2dd
 2352 039b 00000000 		.4byte	.LFB18
 2353 039f 48000000 		.4byte	.LFE18-.LFB18
 2354 03a3 01       		.uleb128 0x1
 2355 03a4 9C       		.byte	0x9c
 2356 03a5 C8030000 		.4byte	0x3c8
 2357 03a9 0B       		.uleb128 0xb
 2358 03aa 5B050000 		.4byte	.LASF48
 2359 03ae 01       		.byte	0x1
 2360 03af DD02     		.2byte	0x2dd
 2361 03b1 76000000 		.4byte	0x76
 2362 03b5 02       		.uleb128 0x2
 2363 03b6 91       		.byte	0x91
 2364 03b7 64       		.sleb128 -28
 2365 03b8 0C       		.uleb128 0xc
 2366 03b9 05050000 		.4byte	.LASF20
 2367 03bd 01       		.byte	0x1
 2368 03be DF02     		.2byte	0x2df
 2369 03c0 6B000000 		.4byte	0x6b
 2370 03c4 02       		.uleb128 0x2
 2371 03c5 91       		.byte	0x91
 2372 03c6 6F       		.sleb128 -17
 2373 03c7 00       		.byte	0
 2374 03c8 0D       		.uleb128 0xd
 2375 03c9 3C000000 		.4byte	.LASF49
 2376 03cd 01       		.byte	0x1
 2377 03ce F802     		.2byte	0x2f8
 2378 03d0 00000000 		.4byte	.LFB19
 2379 03d4 1C000000 		.4byte	.LFE19-.LFB19
 2380 03d8 01       		.uleb128 0x1
 2381 03d9 9C       		.byte	0x9c
 2382 03da EE030000 		.4byte	0x3ee
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 67


 2383 03de 0B       		.uleb128 0xb
 2384 03df 66050000 		.4byte	.LASF50
 2385 03e3 01       		.byte	0x1
 2386 03e4 F802     		.2byte	0x2f8
 2387 03e6 76000000 		.4byte	0x76
 2388 03ea 02       		.uleb128 0x2
 2389 03eb 91       		.byte	0x91
 2390 03ec 74       		.sleb128 -12
 2391 03ed 00       		.byte	0
 2392 03ee 0E       		.uleb128 0xe
 2393 03ef 99030000 		.4byte	.LASF51
 2394 03f3 01       		.byte	0x1
 2395 03f4 0C03     		.2byte	0x30c
 2396 03f6 76000000 		.4byte	0x76
 2397 03fa 00000000 		.4byte	.LFB20
 2398 03fe 18000000 		.4byte	.LFE20-.LFB20
 2399 0402 01       		.uleb128 0x1
 2400 0403 9C       		.byte	0x9c
 2401 0404 0A       		.uleb128 0xa
 2402 0405 26040000 		.4byte	.LASF52
 2403 0409 01       		.byte	0x1
 2404 040a 2603     		.2byte	0x326
 2405 040c 00000000 		.4byte	.LFB21
 2406 0410 48000000 		.4byte	.LFE21-.LFB21
 2407 0414 01       		.uleb128 0x1
 2408 0415 9C       		.byte	0x9c
 2409 0416 39040000 		.4byte	0x439
 2410 041a 0B       		.uleb128 0xb
 2411 041b 5B050000 		.4byte	.LASF48
 2412 041f 01       		.byte	0x1
 2413 0420 2603     		.2byte	0x326
 2414 0422 76000000 		.4byte	0x76
 2415 0426 02       		.uleb128 0x2
 2416 0427 91       		.byte	0x91
 2417 0428 64       		.sleb128 -28
 2418 0429 0C       		.uleb128 0xc
 2419 042a 05050000 		.4byte	.LASF20
 2420 042e 01       		.byte	0x1
 2421 042f 2803     		.2byte	0x328
 2422 0431 6B000000 		.4byte	0x6b
 2423 0435 02       		.uleb128 0x2
 2424 0436 91       		.byte	0x91
 2425 0437 6F       		.sleb128 -17
 2426 0438 00       		.byte	0
 2427 0439 0D       		.uleb128 0xd
 2428 043a 97010000 		.4byte	.LASF53
 2429 043e 01       		.byte	0x1
 2430 043f 4303     		.2byte	0x343
 2431 0441 00000000 		.4byte	.LFB22
 2432 0445 1C000000 		.4byte	.LFE22-.LFB22
 2433 0449 01       		.uleb128 0x1
 2434 044a 9C       		.byte	0x9c
 2435 044b 5F040000 		.4byte	0x45f
 2436 044f 0B       		.uleb128 0xb
 2437 0450 B5020000 		.4byte	.LASF54
 2438 0454 01       		.byte	0x1
 2439 0455 4303     		.2byte	0x343
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 68


 2440 0457 76000000 		.4byte	0x76
 2441 045b 02       		.uleb128 0x2
 2442 045c 91       		.byte	0x91
 2443 045d 74       		.sleb128 -12
 2444 045e 00       		.byte	0
 2445 045f 0E       		.uleb128 0xe
 2446 0460 87000000 		.4byte	.LASF55
 2447 0464 01       		.byte	0x1
 2448 0465 6E03     		.2byte	0x36e
 2449 0467 76000000 		.4byte	0x76
 2450 046b 00000000 		.4byte	.LFB23
 2451 046f 18000000 		.4byte	.LFE23-.LFB23
 2452 0473 01       		.uleb128 0x1
 2453 0474 9C       		.byte	0x9c
 2454 0475 0D       		.uleb128 0xd
 2455 0476 B8040000 		.4byte	.LASF56
 2456 047a 01       		.byte	0x1
 2457 047b 9C03     		.2byte	0x39c
 2458 047d 00000000 		.4byte	.LFB24
 2459 0481 1C000000 		.4byte	.LFE24-.LFB24
 2460 0485 01       		.uleb128 0x1
 2461 0486 9C       		.byte	0x9c
 2462 0487 9B040000 		.4byte	0x49b
 2463 048b 0B       		.uleb128 0xb
 2464 048c DA040000 		.4byte	.LASF57
 2465 0490 01       		.byte	0x1
 2466 0491 9C03     		.2byte	0x39c
 2467 0493 76000000 		.4byte	0x76
 2468 0497 02       		.uleb128 0x2
 2469 0498 91       		.byte	0x91
 2470 0499 74       		.sleb128 -12
 2471 049a 00       		.byte	0
 2472 049b 0E       		.uleb128 0xe
 2473 049c E3020000 		.4byte	.LASF58
 2474 04a0 01       		.byte	0x1
 2475 04a1 C503     		.2byte	0x3c5
 2476 04a3 76000000 		.4byte	0x76
 2477 04a7 00000000 		.4byte	.LFB25
 2478 04ab 18000000 		.4byte	.LFE25-.LFB25
 2479 04af 01       		.uleb128 0x1
 2480 04b0 9C       		.byte	0x9c
 2481 04b1 0E       		.uleb128 0xe
 2482 04b2 11000000 		.4byte	.LASF59
 2483 04b6 01       		.byte	0x1
 2484 04b7 F303     		.2byte	0x3f3
 2485 04b9 76000000 		.4byte	0x76
 2486 04bd 00000000 		.4byte	.LFB26
 2487 04c1 18000000 		.4byte	.LFE26-.LFB26
 2488 04c5 01       		.uleb128 0x1
 2489 04c6 9C       		.byte	0x9c
 2490 04c7 0E       		.uleb128 0xe
 2491 04c8 C6000000 		.4byte	.LASF60
 2492 04cc 01       		.byte	0x1
 2493 04cd 0804     		.2byte	0x408
 2494 04cf 76000000 		.4byte	0x76
 2495 04d3 00000000 		.4byte	.LFB27
 2496 04d7 18000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 69


 2497 04db 01       		.uleb128 0x1
 2498 04dc 9C       		.byte	0x9c
 2499 04dd 0A       		.uleb128 0xa
 2500 04de 28050000 		.4byte	.LASF61
 2501 04e2 01       		.byte	0x1
 2502 04e3 2304     		.2byte	0x423
 2503 04e5 00000000 		.4byte	.LFB28
 2504 04e9 44000000 		.4byte	.LFE28-.LFB28
 2505 04ed 01       		.uleb128 0x1
 2506 04ee 9C       		.byte	0x9c
 2507 04ef 12050000 		.4byte	0x512
 2508 04f3 0B       		.uleb128 0xb
 2509 04f4 2E010000 		.4byte	.LASF62
 2510 04f8 01       		.byte	0x1
 2511 04f9 2304     		.2byte	0x423
 2512 04fb 76000000 		.4byte	0x76
 2513 04ff 02       		.uleb128 0x2
 2514 0500 91       		.byte	0x91
 2515 0501 64       		.sleb128 -28
 2516 0502 0C       		.uleb128 0xc
 2517 0503 05050000 		.4byte	.LASF20
 2518 0507 01       		.byte	0x1
 2519 0508 2504     		.2byte	0x425
 2520 050a 6B000000 		.4byte	0x6b
 2521 050e 02       		.uleb128 0x2
 2522 050f 91       		.byte	0x91
 2523 0510 6F       		.sleb128 -17
 2524 0511 00       		.byte	0
 2525 0512 0A       		.uleb128 0xa
 2526 0513 F1040000 		.4byte	.LASF63
 2527 0517 01       		.byte	0x1
 2528 0518 4404     		.2byte	0x444
 2529 051a 00000000 		.4byte	.LFB29
 2530 051e 44000000 		.4byte	.LFE29-.LFB29
 2531 0522 01       		.uleb128 0x1
 2532 0523 9C       		.byte	0x9c
 2533 0524 47050000 		.4byte	0x547
 2534 0528 0B       		.uleb128 0xb
 2535 0529 2E010000 		.4byte	.LASF62
 2536 052d 01       		.byte	0x1
 2537 052e 4404     		.2byte	0x444
 2538 0530 76000000 		.4byte	0x76
 2539 0534 02       		.uleb128 0x2
 2540 0535 91       		.byte	0x91
 2541 0536 64       		.sleb128 -28
 2542 0537 0C       		.uleb128 0xc
 2543 0538 05050000 		.4byte	.LASF20
 2544 053c 01       		.byte	0x1
 2545 053d 4604     		.2byte	0x446
 2546 053f 6B000000 		.4byte	0x6b
 2547 0543 02       		.uleb128 0x2
 2548 0544 91       		.byte	0x91
 2549 0545 6F       		.sleb128 -17
 2550 0546 00       		.byte	0
 2551 0547 0A       		.uleb128 0xa
 2552 0548 C0030000 		.4byte	.LASF64
 2553 054c 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 70


 2554 054d 6504     		.2byte	0x465
 2555 054f 00000000 		.4byte	.LFB30
 2556 0553 48000000 		.4byte	.LFE30-.LFB30
 2557 0557 01       		.uleb128 0x1
 2558 0558 9C       		.byte	0x9c
 2559 0559 7C050000 		.4byte	0x57c
 2560 055d 0B       		.uleb128 0xb
 2561 055e 2E010000 		.4byte	.LASF62
 2562 0562 01       		.byte	0x1
 2563 0563 6504     		.2byte	0x465
 2564 0565 76000000 		.4byte	0x76
 2565 0569 02       		.uleb128 0x2
 2566 056a 91       		.byte	0x91
 2567 056b 64       		.sleb128 -28
 2568 056c 0C       		.uleb128 0xc
 2569 056d 05050000 		.4byte	.LASF20
 2570 0571 01       		.byte	0x1
 2571 0572 6704     		.2byte	0x467
 2572 0574 6B000000 		.4byte	0x6b
 2573 0578 02       		.uleb128 0x2
 2574 0579 91       		.byte	0x91
 2575 057a 6F       		.sleb128 -17
 2576 057b 00       		.byte	0
 2577 057c 0A       		.uleb128 0xa
 2578 057d 5F040000 		.4byte	.LASF65
 2579 0581 01       		.byte	0x1
 2580 0582 8504     		.2byte	0x485
 2581 0584 00000000 		.4byte	.LFB31
 2582 0588 44000000 		.4byte	.LFE31-.LFB31
 2583 058c 01       		.uleb128 0x1
 2584 058d 9C       		.byte	0x9c
 2585 058e B1050000 		.4byte	0x5b1
 2586 0592 0B       		.uleb128 0xb
 2587 0593 2E010000 		.4byte	.LASF62
 2588 0597 01       		.byte	0x1
 2589 0598 8504     		.2byte	0x485
 2590 059a 76000000 		.4byte	0x76
 2591 059e 02       		.uleb128 0x2
 2592 059f 91       		.byte	0x91
 2593 05a0 64       		.sleb128 -28
 2594 05a1 0C       		.uleb128 0xc
 2595 05a2 05050000 		.4byte	.LASF20
 2596 05a6 01       		.byte	0x1
 2597 05a7 8704     		.2byte	0x487
 2598 05a9 6B000000 		.4byte	0x6b
 2599 05ad 02       		.uleb128 0x2
 2600 05ae 91       		.byte	0x91
 2601 05af 6F       		.sleb128 -17
 2602 05b0 00       		.byte	0
 2603 05b1 0A       		.uleb128 0xa
 2604 05b2 14010000 		.4byte	.LASF66
 2605 05b6 01       		.byte	0x1
 2606 05b7 A604     		.2byte	0x4a6
 2607 05b9 00000000 		.4byte	.LFB32
 2608 05bd 44000000 		.4byte	.LFE32-.LFB32
 2609 05c1 01       		.uleb128 0x1
 2610 05c2 9C       		.byte	0x9c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 71


 2611 05c3 E6050000 		.4byte	0x5e6
 2612 05c7 0B       		.uleb128 0xb
 2613 05c8 2E010000 		.4byte	.LASF62
 2614 05cc 01       		.byte	0x1
 2615 05cd A604     		.2byte	0x4a6
 2616 05cf 76000000 		.4byte	0x76
 2617 05d3 02       		.uleb128 0x2
 2618 05d4 91       		.byte	0x91
 2619 05d5 64       		.sleb128 -28
 2620 05d6 0C       		.uleb128 0xc
 2621 05d7 05050000 		.4byte	.LASF20
 2622 05db 01       		.byte	0x1
 2623 05dc A804     		.2byte	0x4a8
 2624 05de 6B000000 		.4byte	0x6b
 2625 05e2 02       		.uleb128 0x2
 2626 05e3 91       		.byte	0x91
 2627 05e4 6F       		.sleb128 -17
 2628 05e5 00       		.byte	0
 2629 05e6 0A       		.uleb128 0xa
 2630 05e7 7B040000 		.4byte	.LASF67
 2631 05eb 01       		.byte	0x1
 2632 05ec CE04     		.2byte	0x4ce
 2633 05ee 00000000 		.4byte	.LFB33
 2634 05f2 3C000000 		.4byte	.LFE33-.LFB33
 2635 05f6 01       		.uleb128 0x1
 2636 05f7 9C       		.byte	0x9c
 2637 05f8 2A060000 		.4byte	0x62a
 2638 05fc 0B       		.uleb128 0xb
 2639 05fd 3A010000 		.4byte	.LASF38
 2640 0601 01       		.byte	0x1
 2641 0602 CE04     		.2byte	0x4ce
 2642 0604 76000000 		.4byte	0x76
 2643 0608 02       		.uleb128 0x2
 2644 0609 91       		.byte	0x91
 2645 060a 64       		.sleb128 -28
 2646 060b 0B       		.uleb128 0xb
 2647 060c 63010000 		.4byte	.LASF68
 2648 0610 01       		.byte	0x1
 2649 0611 CE04     		.2byte	0x4ce
 2650 0613 76000000 		.4byte	0x76
 2651 0617 02       		.uleb128 0x2
 2652 0618 91       		.byte	0x91
 2653 0619 60       		.sleb128 -32
 2654 061a 0C       		.uleb128 0xc
 2655 061b 05050000 		.4byte	.LASF20
 2656 061f 01       		.byte	0x1
 2657 0620 D004     		.2byte	0x4d0
 2658 0622 6B000000 		.4byte	0x6b
 2659 0626 02       		.uleb128 0x2
 2660 0627 91       		.byte	0x91
 2661 0628 6F       		.sleb128 -17
 2662 0629 00       		.byte	0
 2663 062a 0E       		.uleb128 0xe
 2664 062b DB000000 		.4byte	.LASF69
 2665 062f 01       		.byte	0x1
 2666 0630 EB04     		.2byte	0x4eb
 2667 0632 76000000 		.4byte	0x76
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 72


 2668 0636 00000000 		.4byte	.LFB34
 2669 063a 20000000 		.4byte	.LFE34-.LFB34
 2670 063e 01       		.uleb128 0x1
 2671 063f 9C       		.byte	0x9c
 2672 0640 0D       		.uleb128 0xd
 2673 0641 48040000 		.4byte	.LASF70
 2674 0645 01       		.byte	0x1
 2675 0646 0405     		.2byte	0x504
 2676 0648 00000000 		.4byte	.LFB35
 2677 064c 18000000 		.4byte	.LFE35-.LFB35
 2678 0650 01       		.uleb128 0x1
 2679 0651 9C       		.byte	0x9c
 2680 0652 66060000 		.4byte	0x666
 2681 0656 0B       		.uleb128 0xb
 2682 0657 3A040000 		.4byte	.LASF71
 2683 065b 01       		.byte	0x1
 2684 065c 0405     		.2byte	0x504
 2685 065e 76000000 		.4byte	0x76
 2686 0662 02       		.uleb128 0x2
 2687 0663 91       		.byte	0x91
 2688 0664 74       		.sleb128 -12
 2689 0665 00       		.byte	0
 2690 0666 0E       		.uleb128 0xe
 2691 0667 70050000 		.4byte	.LASF72
 2692 066b 01       		.byte	0x1
 2693 066c 1B05     		.2byte	0x51b
 2694 066e 76000000 		.4byte	0x76
 2695 0672 00000000 		.4byte	.LFB36
 2696 0676 14000000 		.4byte	.LFE36-.LFB36
 2697 067a 01       		.uleb128 0x1
 2698 067b 9C       		.byte	0x9c
 2699 067c 0E       		.uleb128 0xe
 2700 067d 23000000 		.4byte	.LASF73
 2701 0681 01       		.byte	0x1
 2702 0682 3205     		.2byte	0x532
 2703 0684 76000000 		.4byte	0x76
 2704 0688 00000000 		.4byte	.LFB37
 2705 068c 14000000 		.4byte	.LFE37-.LFB37
 2706 0690 01       		.uleb128 0x1
 2707 0691 9C       		.byte	0x9c
 2708 0692 0D       		.uleb128 0xd
 2709 0693 A3040000 		.4byte	.LASF74
 2710 0697 01       		.byte	0x1
 2711 0698 4905     		.2byte	0x549
 2712 069a 00000000 		.4byte	.LFB38
 2713 069e 18000000 		.4byte	.LFE38-.LFB38
 2714 06a2 01       		.uleb128 0x1
 2715 06a3 9C       		.byte	0x9c
 2716 06a4 B8060000 		.4byte	0x6b8
 2717 06a8 0B       		.uleb128 0xb
 2718 06a9 3A040000 		.4byte	.LASF71
 2719 06ad 01       		.byte	0x1
 2720 06ae 4905     		.2byte	0x549
 2721 06b0 76000000 		.4byte	0x76
 2722 06b4 02       		.uleb128 0x2
 2723 06b5 91       		.byte	0x91
 2724 06b6 74       		.sleb128 -12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 73


 2725 06b7 00       		.byte	0
 2726 06b8 0D       		.uleb128 0xd
 2727 06b9 99000000 		.4byte	.LASF75
 2728 06bd 01       		.byte	0x1
 2729 06be 6005     		.2byte	0x560
 2730 06c0 00000000 		.4byte	.LFB39
 2731 06c4 18000000 		.4byte	.LFE39-.LFB39
 2732 06c8 01       		.uleb128 0x1
 2733 06c9 9C       		.byte	0x9c
 2734 06ca DE060000 		.4byte	0x6de
 2735 06ce 0B       		.uleb128 0xb
 2736 06cf 3A040000 		.4byte	.LASF71
 2737 06d3 01       		.byte	0x1
 2738 06d4 6005     		.2byte	0x560
 2739 06d6 76000000 		.4byte	0x76
 2740 06da 02       		.uleb128 0x2
 2741 06db 91       		.byte	0x91
 2742 06dc 74       		.sleb128 -12
 2743 06dd 00       		.byte	0
 2744 06de 0F       		.uleb128 0xf
 2745 06df 3D050000 		.4byte	.LASF79
 2746 06e3 01       		.byte	0x1
 2747 06e4 15       		.byte	0x15
 2748 06e5 6B000000 		.4byte	0x6b
 2749 06e9 05       		.uleb128 0x5
 2750 06ea 03       		.byte	0x3
 2751 06eb 00000000 		.4byte	PWM_1_initVar
 2752 06ef 00       		.byte	0
 2753              		.section	.debug_abbrev,"",%progbits
 2754              	.Ldebug_abbrev0:
 2755 0000 01       		.uleb128 0x1
 2756 0001 11       		.uleb128 0x11
 2757 0002 01       		.byte	0x1
 2758 0003 25       		.uleb128 0x25
 2759 0004 0E       		.uleb128 0xe
 2760 0005 13       		.uleb128 0x13
 2761 0006 0B       		.uleb128 0xb
 2762 0007 03       		.uleb128 0x3
 2763 0008 0E       		.uleb128 0xe
 2764 0009 1B       		.uleb128 0x1b
 2765 000a 0E       		.uleb128 0xe
 2766 000b 55       		.uleb128 0x55
 2767 000c 17       		.uleb128 0x17
 2768 000d 11       		.uleb128 0x11
 2769 000e 01       		.uleb128 0x1
 2770 000f 10       		.uleb128 0x10
 2771 0010 17       		.uleb128 0x17
 2772 0011 00       		.byte	0
 2773 0012 00       		.byte	0
 2774 0013 02       		.uleb128 0x2
 2775 0014 24       		.uleb128 0x24
 2776 0015 00       		.byte	0
 2777 0016 0B       		.uleb128 0xb
 2778 0017 0B       		.uleb128 0xb
 2779 0018 3E       		.uleb128 0x3e
 2780 0019 0B       		.uleb128 0xb
 2781 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 74


 2782 001b 0E       		.uleb128 0xe
 2783 001c 00       		.byte	0
 2784 001d 00       		.byte	0
 2785 001e 03       		.uleb128 0x3
 2786 001f 24       		.uleb128 0x24
 2787 0020 00       		.byte	0
 2788 0021 0B       		.uleb128 0xb
 2789 0022 0B       		.uleb128 0xb
 2790 0023 3E       		.uleb128 0x3e
 2791 0024 0B       		.uleb128 0xb
 2792 0025 03       		.uleb128 0x3
 2793 0026 08       		.uleb128 0x8
 2794 0027 00       		.byte	0
 2795 0028 00       		.byte	0
 2796 0029 04       		.uleb128 0x4
 2797 002a 16       		.uleb128 0x16
 2798 002b 00       		.byte	0
 2799 002c 03       		.uleb128 0x3
 2800 002d 0E       		.uleb128 0xe
 2801 002e 3A       		.uleb128 0x3a
 2802 002f 0B       		.uleb128 0xb
 2803 0030 3B       		.uleb128 0x3b
 2804 0031 0B       		.uleb128 0xb
 2805 0032 49       		.uleb128 0x49
 2806 0033 13       		.uleb128 0x13
 2807 0034 00       		.byte	0
 2808 0035 00       		.byte	0
 2809 0036 05       		.uleb128 0x5
 2810 0037 16       		.uleb128 0x16
 2811 0038 00       		.byte	0
 2812 0039 03       		.uleb128 0x3
 2813 003a 0E       		.uleb128 0xe
 2814 003b 3A       		.uleb128 0x3a
 2815 003c 0B       		.uleb128 0xb
 2816 003d 3B       		.uleb128 0x3b
 2817 003e 05       		.uleb128 0x5
 2818 003f 49       		.uleb128 0x49
 2819 0040 13       		.uleb128 0x13
 2820 0041 00       		.byte	0
 2821 0042 00       		.byte	0
 2822 0043 06       		.uleb128 0x6
 2823 0044 35       		.uleb128 0x35
 2824 0045 00       		.byte	0
 2825 0046 49       		.uleb128 0x49
 2826 0047 13       		.uleb128 0x13
 2827 0048 00       		.byte	0
 2828 0049 00       		.byte	0
 2829 004a 07       		.uleb128 0x7
 2830 004b 2E       		.uleb128 0x2e
 2831 004c 00       		.byte	0
 2832 004d 3F       		.uleb128 0x3f
 2833 004e 19       		.uleb128 0x19
 2834 004f 03       		.uleb128 0x3
 2835 0050 0E       		.uleb128 0xe
 2836 0051 3A       		.uleb128 0x3a
 2837 0052 0B       		.uleb128 0xb
 2838 0053 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 75


 2839 0054 0B       		.uleb128 0xb
 2840 0055 27       		.uleb128 0x27
 2841 0056 19       		.uleb128 0x19
 2842 0057 11       		.uleb128 0x11
 2843 0058 01       		.uleb128 0x1
 2844 0059 12       		.uleb128 0x12
 2845 005a 06       		.uleb128 0x6
 2846 005b 40       		.uleb128 0x40
 2847 005c 18       		.uleb128 0x18
 2848 005d 9642     		.uleb128 0x2116
 2849 005f 19       		.uleb128 0x19
 2850 0060 00       		.byte	0
 2851 0061 00       		.byte	0
 2852 0062 08       		.uleb128 0x8
 2853 0063 2E       		.uleb128 0x2e
 2854 0064 01       		.byte	0x1
 2855 0065 3F       		.uleb128 0x3f
 2856 0066 19       		.uleb128 0x19
 2857 0067 03       		.uleb128 0x3
 2858 0068 0E       		.uleb128 0xe
 2859 0069 3A       		.uleb128 0x3a
 2860 006a 0B       		.uleb128 0xb
 2861 006b 3B       		.uleb128 0x3b
 2862 006c 0B       		.uleb128 0xb
 2863 006d 27       		.uleb128 0x27
 2864 006e 19       		.uleb128 0x19
 2865 006f 11       		.uleb128 0x11
 2866 0070 01       		.uleb128 0x1
 2867 0071 12       		.uleb128 0x12
 2868 0072 06       		.uleb128 0x6
 2869 0073 40       		.uleb128 0x40
 2870 0074 18       		.uleb128 0x18
 2871 0075 9642     		.uleb128 0x2116
 2872 0077 19       		.uleb128 0x19
 2873 0078 01       		.uleb128 0x1
 2874 0079 13       		.uleb128 0x13
 2875 007a 00       		.byte	0
 2876 007b 00       		.byte	0
 2877 007c 09       		.uleb128 0x9
 2878 007d 34       		.uleb128 0x34
 2879 007e 00       		.byte	0
 2880 007f 03       		.uleb128 0x3
 2881 0080 0E       		.uleb128 0xe
 2882 0081 3A       		.uleb128 0x3a
 2883 0082 0B       		.uleb128 0xb
 2884 0083 3B       		.uleb128 0x3b
 2885 0084 0B       		.uleb128 0xb
 2886 0085 49       		.uleb128 0x49
 2887 0086 13       		.uleb128 0x13
 2888 0087 02       		.uleb128 0x2
 2889 0088 18       		.uleb128 0x18
 2890 0089 00       		.byte	0
 2891 008a 00       		.byte	0
 2892 008b 0A       		.uleb128 0xa
 2893 008c 2E       		.uleb128 0x2e
 2894 008d 01       		.byte	0x1
 2895 008e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 76


 2896 008f 19       		.uleb128 0x19
 2897 0090 03       		.uleb128 0x3
 2898 0091 0E       		.uleb128 0xe
 2899 0092 3A       		.uleb128 0x3a
 2900 0093 0B       		.uleb128 0xb
 2901 0094 3B       		.uleb128 0x3b
 2902 0095 05       		.uleb128 0x5
 2903 0096 27       		.uleb128 0x27
 2904 0097 19       		.uleb128 0x19
 2905 0098 11       		.uleb128 0x11
 2906 0099 01       		.uleb128 0x1
 2907 009a 12       		.uleb128 0x12
 2908 009b 06       		.uleb128 0x6
 2909 009c 40       		.uleb128 0x40
 2910 009d 18       		.uleb128 0x18
 2911 009e 9642     		.uleb128 0x2116
 2912 00a0 19       		.uleb128 0x19
 2913 00a1 01       		.uleb128 0x1
 2914 00a2 13       		.uleb128 0x13
 2915 00a3 00       		.byte	0
 2916 00a4 00       		.byte	0
 2917 00a5 0B       		.uleb128 0xb
 2918 00a6 05       		.uleb128 0x5
 2919 00a7 00       		.byte	0
 2920 00a8 03       		.uleb128 0x3
 2921 00a9 0E       		.uleb128 0xe
 2922 00aa 3A       		.uleb128 0x3a
 2923 00ab 0B       		.uleb128 0xb
 2924 00ac 3B       		.uleb128 0x3b
 2925 00ad 05       		.uleb128 0x5
 2926 00ae 49       		.uleb128 0x49
 2927 00af 13       		.uleb128 0x13
 2928 00b0 02       		.uleb128 0x2
 2929 00b1 18       		.uleb128 0x18
 2930 00b2 00       		.byte	0
 2931 00b3 00       		.byte	0
 2932 00b4 0C       		.uleb128 0xc
 2933 00b5 34       		.uleb128 0x34
 2934 00b6 00       		.byte	0
 2935 00b7 03       		.uleb128 0x3
 2936 00b8 0E       		.uleb128 0xe
 2937 00b9 3A       		.uleb128 0x3a
 2938 00ba 0B       		.uleb128 0xb
 2939 00bb 3B       		.uleb128 0x3b
 2940 00bc 05       		.uleb128 0x5
 2941 00bd 49       		.uleb128 0x49
 2942 00be 13       		.uleb128 0x13
 2943 00bf 02       		.uleb128 0x2
 2944 00c0 18       		.uleb128 0x18
 2945 00c1 00       		.byte	0
 2946 00c2 00       		.byte	0
 2947 00c3 0D       		.uleb128 0xd
 2948 00c4 2E       		.uleb128 0x2e
 2949 00c5 01       		.byte	0x1
 2950 00c6 3F       		.uleb128 0x3f
 2951 00c7 19       		.uleb128 0x19
 2952 00c8 03       		.uleb128 0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 77


 2953 00c9 0E       		.uleb128 0xe
 2954 00ca 3A       		.uleb128 0x3a
 2955 00cb 0B       		.uleb128 0xb
 2956 00cc 3B       		.uleb128 0x3b
 2957 00cd 05       		.uleb128 0x5
 2958 00ce 27       		.uleb128 0x27
 2959 00cf 19       		.uleb128 0x19
 2960 00d0 11       		.uleb128 0x11
 2961 00d1 01       		.uleb128 0x1
 2962 00d2 12       		.uleb128 0x12
 2963 00d3 06       		.uleb128 0x6
 2964 00d4 40       		.uleb128 0x40
 2965 00d5 18       		.uleb128 0x18
 2966 00d6 9742     		.uleb128 0x2117
 2967 00d8 19       		.uleb128 0x19
 2968 00d9 01       		.uleb128 0x1
 2969 00da 13       		.uleb128 0x13
 2970 00db 00       		.byte	0
 2971 00dc 00       		.byte	0
 2972 00dd 0E       		.uleb128 0xe
 2973 00de 2E       		.uleb128 0x2e
 2974 00df 00       		.byte	0
 2975 00e0 3F       		.uleb128 0x3f
 2976 00e1 19       		.uleb128 0x19
 2977 00e2 03       		.uleb128 0x3
 2978 00e3 0E       		.uleb128 0xe
 2979 00e4 3A       		.uleb128 0x3a
 2980 00e5 0B       		.uleb128 0xb
 2981 00e6 3B       		.uleb128 0x3b
 2982 00e7 05       		.uleb128 0x5
 2983 00e8 27       		.uleb128 0x27
 2984 00e9 19       		.uleb128 0x19
 2985 00ea 49       		.uleb128 0x49
 2986 00eb 13       		.uleb128 0x13
 2987 00ec 11       		.uleb128 0x11
 2988 00ed 01       		.uleb128 0x1
 2989 00ee 12       		.uleb128 0x12
 2990 00ef 06       		.uleb128 0x6
 2991 00f0 40       		.uleb128 0x40
 2992 00f1 18       		.uleb128 0x18
 2993 00f2 9742     		.uleb128 0x2117
 2994 00f4 19       		.uleb128 0x19
 2995 00f5 00       		.byte	0
 2996 00f6 00       		.byte	0
 2997 00f7 0F       		.uleb128 0xf
 2998 00f8 34       		.uleb128 0x34
 2999 00f9 00       		.byte	0
 3000 00fa 03       		.uleb128 0x3
 3001 00fb 0E       		.uleb128 0xe
 3002 00fc 3A       		.uleb128 0x3a
 3003 00fd 0B       		.uleb128 0xb
 3004 00fe 3B       		.uleb128 0x3b
 3005 00ff 0B       		.uleb128 0xb
 3006 0100 49       		.uleb128 0x49
 3007 0101 13       		.uleb128 0x13
 3008 0102 3F       		.uleb128 0x3f
 3009 0103 19       		.uleb128 0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 78


 3010 0104 02       		.uleb128 0x2
 3011 0105 18       		.uleb128 0x18
 3012 0106 00       		.byte	0
 3013 0107 00       		.byte	0
 3014 0108 00       		.byte	0
 3015              		.section	.debug_aranges,"",%progbits
 3016 0000 54010000 		.4byte	0x154
 3017 0004 0200     		.2byte	0x2
 3018 0006 00000000 		.4byte	.Ldebug_info0
 3019 000a 04       		.byte	0x4
 3020 000b 00       		.byte	0
 3021 000c 0000     		.2byte	0
 3022 000e 0000     		.2byte	0
 3023 0010 00000000 		.4byte	.LFB0
 3024 0014 54000000 		.4byte	.LFE0-.LFB0
 3025 0018 00000000 		.4byte	.LFB1
 3026 001c 38000000 		.4byte	.LFE1-.LFB1
 3027 0020 00000000 		.4byte	.LFB2
 3028 0024 24000000 		.4byte	.LFE2-.LFB2
 3029 0028 00000000 		.4byte	.LFB3
 3030 002c 30000000 		.4byte	.LFE3-.LFB3
 3031 0030 00000000 		.4byte	.LFB4
 3032 0034 48000000 		.4byte	.LFE4-.LFB4
 3033 0038 00000000 		.4byte	.LFB5
 3034 003c 48000000 		.4byte	.LFE5-.LFB5
 3035 0040 00000000 		.4byte	.LFB6
 3036 0044 48000000 		.4byte	.LFE6-.LFB6
 3037 0048 00000000 		.4byte	.LFB7
 3038 004c 4C000000 		.4byte	.LFE7-.LFB7
 3039 0050 00000000 		.4byte	.LFB8
 3040 0054 1C000000 		.4byte	.LFE8-.LFB8
 3041 0058 00000000 		.4byte	.LFB9
 3042 005c 48000000 		.4byte	.LFE9-.LFB9
 3043 0060 00000000 		.4byte	.LFB10
 3044 0064 48000000 		.4byte	.LFE10-.LFB10
 3045 0068 00000000 		.4byte	.LFB11
 3046 006c 4C000000 		.4byte	.LFE11-.LFB11
 3047 0070 00000000 		.4byte	.LFB12
 3048 0074 48000000 		.4byte	.LFE12-.LFB12
 3049 0078 00000000 		.4byte	.LFB13
 3050 007c 1C000000 		.4byte	.LFE13-.LFB13
 3051 0080 00000000 		.4byte	.LFB14
 3052 0084 18000000 		.4byte	.LFE14-.LFB14
 3053 0088 00000000 		.4byte	.LFB15
 3054 008c 48000000 		.4byte	.LFE15-.LFB15
 3055 0090 00000000 		.4byte	.LFB16
 3056 0094 1C000000 		.4byte	.LFE16-.LFB16
 3057 0098 00000000 		.4byte	.LFB17
 3058 009c 18000000 		.4byte	.LFE17-.LFB17
 3059 00a0 00000000 		.4byte	.LFB18
 3060 00a4 48000000 		.4byte	.LFE18-.LFB18
 3061 00a8 00000000 		.4byte	.LFB19
 3062 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3063 00b0 00000000 		.4byte	.LFB20
 3064 00b4 18000000 		.4byte	.LFE20-.LFB20
 3065 00b8 00000000 		.4byte	.LFB21
 3066 00bc 48000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 79


 3067 00c0 00000000 		.4byte	.LFB22
 3068 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3069 00c8 00000000 		.4byte	.LFB23
 3070 00cc 18000000 		.4byte	.LFE23-.LFB23
 3071 00d0 00000000 		.4byte	.LFB24
 3072 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3073 00d8 00000000 		.4byte	.LFB25
 3074 00dc 18000000 		.4byte	.LFE25-.LFB25
 3075 00e0 00000000 		.4byte	.LFB26
 3076 00e4 18000000 		.4byte	.LFE26-.LFB26
 3077 00e8 00000000 		.4byte	.LFB27
 3078 00ec 18000000 		.4byte	.LFE27-.LFB27
 3079 00f0 00000000 		.4byte	.LFB28
 3080 00f4 44000000 		.4byte	.LFE28-.LFB28
 3081 00f8 00000000 		.4byte	.LFB29
 3082 00fc 44000000 		.4byte	.LFE29-.LFB29
 3083 0100 00000000 		.4byte	.LFB30
 3084 0104 48000000 		.4byte	.LFE30-.LFB30
 3085 0108 00000000 		.4byte	.LFB31
 3086 010c 44000000 		.4byte	.LFE31-.LFB31
 3087 0110 00000000 		.4byte	.LFB32
 3088 0114 44000000 		.4byte	.LFE32-.LFB32
 3089 0118 00000000 		.4byte	.LFB33
 3090 011c 3C000000 		.4byte	.LFE33-.LFB33
 3091 0120 00000000 		.4byte	.LFB34
 3092 0124 20000000 		.4byte	.LFE34-.LFB34
 3093 0128 00000000 		.4byte	.LFB35
 3094 012c 18000000 		.4byte	.LFE35-.LFB35
 3095 0130 00000000 		.4byte	.LFB36
 3096 0134 14000000 		.4byte	.LFE36-.LFB36
 3097 0138 00000000 		.4byte	.LFB37
 3098 013c 14000000 		.4byte	.LFE37-.LFB37
 3099 0140 00000000 		.4byte	.LFB38
 3100 0144 18000000 		.4byte	.LFE38-.LFB38
 3101 0148 00000000 		.4byte	.LFB39
 3102 014c 18000000 		.4byte	.LFE39-.LFB39
 3103 0150 00000000 		.4byte	0
 3104 0154 00000000 		.4byte	0
 3105              		.section	.debug_ranges,"",%progbits
 3106              	.Ldebug_ranges0:
 3107 0000 00000000 		.4byte	.LFB0
 3108 0004 54000000 		.4byte	.LFE0
 3109 0008 00000000 		.4byte	.LFB1
 3110 000c 38000000 		.4byte	.LFE1
 3111 0010 00000000 		.4byte	.LFB2
 3112 0014 24000000 		.4byte	.LFE2
 3113 0018 00000000 		.4byte	.LFB3
 3114 001c 30000000 		.4byte	.LFE3
 3115 0020 00000000 		.4byte	.LFB4
 3116 0024 48000000 		.4byte	.LFE4
 3117 0028 00000000 		.4byte	.LFB5
 3118 002c 48000000 		.4byte	.LFE5
 3119 0030 00000000 		.4byte	.LFB6
 3120 0034 48000000 		.4byte	.LFE6
 3121 0038 00000000 		.4byte	.LFB7
 3122 003c 4C000000 		.4byte	.LFE7
 3123 0040 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 80


 3124 0044 1C000000 		.4byte	.LFE8
 3125 0048 00000000 		.4byte	.LFB9
 3126 004c 48000000 		.4byte	.LFE9
 3127 0050 00000000 		.4byte	.LFB10
 3128 0054 48000000 		.4byte	.LFE10
 3129 0058 00000000 		.4byte	.LFB11
 3130 005c 4C000000 		.4byte	.LFE11
 3131 0060 00000000 		.4byte	.LFB12
 3132 0064 48000000 		.4byte	.LFE12
 3133 0068 00000000 		.4byte	.LFB13
 3134 006c 1C000000 		.4byte	.LFE13
 3135 0070 00000000 		.4byte	.LFB14
 3136 0074 18000000 		.4byte	.LFE14
 3137 0078 00000000 		.4byte	.LFB15
 3138 007c 48000000 		.4byte	.LFE15
 3139 0080 00000000 		.4byte	.LFB16
 3140 0084 1C000000 		.4byte	.LFE16
 3141 0088 00000000 		.4byte	.LFB17
 3142 008c 18000000 		.4byte	.LFE17
 3143 0090 00000000 		.4byte	.LFB18
 3144 0094 48000000 		.4byte	.LFE18
 3145 0098 00000000 		.4byte	.LFB19
 3146 009c 1C000000 		.4byte	.LFE19
 3147 00a0 00000000 		.4byte	.LFB20
 3148 00a4 18000000 		.4byte	.LFE20
 3149 00a8 00000000 		.4byte	.LFB21
 3150 00ac 48000000 		.4byte	.LFE21
 3151 00b0 00000000 		.4byte	.LFB22
 3152 00b4 1C000000 		.4byte	.LFE22
 3153 00b8 00000000 		.4byte	.LFB23
 3154 00bc 18000000 		.4byte	.LFE23
 3155 00c0 00000000 		.4byte	.LFB24
 3156 00c4 1C000000 		.4byte	.LFE24
 3157 00c8 00000000 		.4byte	.LFB25
 3158 00cc 18000000 		.4byte	.LFE25
 3159 00d0 00000000 		.4byte	.LFB26
 3160 00d4 18000000 		.4byte	.LFE26
 3161 00d8 00000000 		.4byte	.LFB27
 3162 00dc 18000000 		.4byte	.LFE27
 3163 00e0 00000000 		.4byte	.LFB28
 3164 00e4 44000000 		.4byte	.LFE28
 3165 00e8 00000000 		.4byte	.LFB29
 3166 00ec 44000000 		.4byte	.LFE29
 3167 00f0 00000000 		.4byte	.LFB30
 3168 00f4 48000000 		.4byte	.LFE30
 3169 00f8 00000000 		.4byte	.LFB31
 3170 00fc 44000000 		.4byte	.LFE31
 3171 0100 00000000 		.4byte	.LFB32
 3172 0104 44000000 		.4byte	.LFE32
 3173 0108 00000000 		.4byte	.LFB33
 3174 010c 3C000000 		.4byte	.LFE33
 3175 0110 00000000 		.4byte	.LFB34
 3176 0114 20000000 		.4byte	.LFE34
 3177 0118 00000000 		.4byte	.LFB35
 3178 011c 18000000 		.4byte	.LFE35
 3179 0120 00000000 		.4byte	.LFB36
 3180 0124 14000000 		.4byte	.LFE36
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 81


 3181 0128 00000000 		.4byte	.LFB37
 3182 012c 14000000 		.4byte	.LFE37
 3183 0130 00000000 		.4byte	.LFB38
 3184 0134 18000000 		.4byte	.LFE38
 3185 0138 00000000 		.4byte	.LFB39
 3186 013c 18000000 		.4byte	.LFE39
 3187 0140 00000000 		.4byte	0
 3188 0144 00000000 		.4byte	0
 3189              		.section	.debug_line,"",%progbits
 3190              	.Ldebug_line0:
 3191 0000 71030000 		.section	.debug_str,"MS",%progbits,1
 3191      02004400 
 3191      00000201 
 3191      FB0E0D00 
 3191      01010101 
 3192              	.LASF40:
 3193 0000 636F756E 		.ascii	"count\000"
 3193      7400
 3194              	.LASF19:
 3195 0006 50574D5F 		.ascii	"PWM_1_Stop\000"
 3195      315F5374 
 3195      6F7000
 3196              	.LASF59:
 3197 0011 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 3197      315F5265 
 3197      61644361 
 3197      70747572 
 3197      6500
 3198              	.LASF73:
 3199 0023 50574D5F 		.ascii	"PWM_1_GetInterruptSource\000"
 3199      315F4765 
 3199      74496E74 
 3199      65727275 
 3199      7074536F 
 3200              	.LASF49:
 3201 003c 50574D5F 		.ascii	"PWM_1_WritePeriodBuf\000"
 3201      315F5772 
 3201      69746550 
 3201      6572696F 
 3201      64427566 
 3202              	.LASF44:
 3203 0051 70657269 		.ascii	"period\000"
 3203      6F6400
 3204              	.LASF7:
 3205 0058 6C6F6E67 		.ascii	"long long unsigned int\000"
 3205      206C6F6E 
 3205      6720756E 
 3205      7369676E 
 3205      65642069 
 3206              	.LASF24:
 3207 006f 71644D6F 		.ascii	"qdMode\000"
 3207      646500
 3208              	.LASF27:
 3209 0076 50574D5F 		.ascii	"PWM_1_SetOneShot\000"
 3209      315F5365 
 3209      744F6E65 
 3209      53686F74 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 82


 3209      00
 3210              	.LASF55:
 3211 0087 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 3211      315F5265 
 3211      6164436F 
 3211      6D706172 
 3211      6500
 3212              	.LASF75:
 3213 0099 50574D5F 		.ascii	"PWM_1_SetInterrupt\000"
 3213      315F5365 
 3213      74496E74 
 3213      65727275 
 3213      707400
 3214              	.LASF6:
 3215 00ac 6C6F6E67 		.ascii	"long long int\000"
 3215      206C6F6E 
 3215      6720696E 
 3215      7400
 3216              	.LASF0:
 3217 00ba 7369676E 		.ascii	"signed char\000"
 3217      65642063 
 3217      68617200 
 3218              	.LASF60:
 3219 00c6 50574D5F 		.ascii	"PWM_1_ReadCaptureBuf\000"
 3219      315F5265 
 3219      61644361 
 3219      70747572 
 3219      65427566 
 3220              	.LASF69:
 3221 00db 50574D5F 		.ascii	"PWM_1_ReadStatus\000"
 3221      315F5265 
 3221      61645374 
 3221      61747573 
 3221      00
 3222              	.LASF4:
 3223 00ec 6C6F6E67 		.ascii	"long int\000"
 3223      20696E74 
 3223      00
 3224              	.LASF9:
 3225 00f5 75696E74 		.ascii	"uint8\000"
 3225      3800
 3226              	.LASF12:
 3227 00fb 646F7562 		.ascii	"double\000"
 3227      6C6500
 3228              	.LASF45:
 3229 0102 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 3229      315F5265 
 3229      6164436F 
 3229      756E7465 
 3229      7200
 3230              	.LASF66:
 3231 0114 50574D5F 		.ascii	"PWM_1_SetCountMode\000"
 3231      315F5365 
 3231      74436F75 
 3231      6E744D6F 
 3231      646500
 3232              	.LASF10:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 83


 3233 0127 75696E74 		.ascii	"uint32\000"
 3233      333200
 3234              	.LASF62:
 3235 012e 74726967 		.ascii	"triggerMode\000"
 3235      6765724D 
 3235      6F646500 
 3236              	.LASF38:
 3237 013a 6D61736B 		.ascii	"mask\000"
 3237      00
 3238              	.LASF36:
 3239 013f 64656164 		.ascii	"deadTime\000"
 3239      54696D65 
 3239      00
 3240              	.LASF8:
 3241 0148 756E7369 		.ascii	"unsigned int\000"
 3241      676E6564 
 3241      20696E74 
 3241      00
 3242              	.LASF21:
 3243 0155 50574D5F 		.ascii	"PWM_1_SetMode\000"
 3243      315F5365 
 3243      744D6F64 
 3243      6500
 3244              	.LASF68:
 3245 0163 636F6D6D 		.ascii	"command\000"
 3245      616E6400 
 3246              	.LASF5:
 3247 016b 6C6F6E67 		.ascii	"long unsigned int\000"
 3247      20756E73 
 3247      69676E65 
 3247      6420696E 
 3247      7400
 3248              	.LASF30:
 3249 017d 6D6F6465 		.ascii	"modeMask\000"
 3249      4D61736B 
 3249      00
 3250              	.LASF46:
 3251 0186 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 3251      315F5265 
 3251      61645065 
 3251      72696F64 
 3251      00
 3252              	.LASF53:
 3253 0197 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 3253      315F5772 
 3253      69746543 
 3253      6F6D7061 
 3253      726500
 3254              	.LASF3:
 3255 01aa 73686F72 		.ascii	"short unsigned int\000"
 3255      7420756E 
 3255      7369676E 
 3255      65642069 
 3255      6E7400
 3256              	.LASF28:
 3257 01bd 6F6E6553 		.ascii	"oneShotEnable\000"
 3257      686F7445 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 84


 3257      6E61626C 
 3257      6500
 3258              	.LASF18:
 3259 01cb 50574D5F 		.ascii	"PWM_1_Enable\000"
 3259      315F456E 
 3259      61626C65 
 3259      00
 3260              	.LASF16:
 3261 01d8 50574D5F 		.ascii	"PWM_1_Init\000"
 3261      315F496E 
 3261      697400
 3262              	.LASF14:
 3263 01e3 72656733 		.ascii	"reg32\000"
 3263      3200
 3264              	.LASF39:
 3265 01e9 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 3265      315F5772 
 3265      69746543 
 3265      6F756E74 
 3265      657200
 3266              	.LASF33:
 3267 01fc 50574D5F 		.ascii	"PWM_1_SetPWMStopOnKill\000"
 3267      315F5365 
 3267      7450574D 
 3267      53746F70 
 3267      4F6E4B69 
 3268              	.LASF78:
 3269 0213 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 3269      73657273 
 3269      5C6D6974 
 3269      6368656C 
 3269      6C5C446F 
 3270 0240 2D546872 		.ascii	"-Throttle\\ExampleProject1\\Lab Solutions\\Lab 2 LE"
 3270      6F74746C 
 3270      655C4578 
 3270      616D706C 
 3270      6550726F 
 3271 0270 44205057 		.ascii	"D PWM.cydsn\000"
 3271      4D2E6379 
 3271      64736E00 
 3272              	.LASF15:
 3273 027c 73697A65 		.ascii	"sizetype\000"
 3273      74797065 
 3273      00
 3274              	.LASF32:
 3275 0285 73796E63 		.ascii	"syncKillEnable\000"
 3275      4B696C6C 
 3275      456E6162 
 3275      6C6500
 3276              	.LASF77:
 3277 0294 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 3277      6E657261 
 3277      7465645F 
 3277      536F7572 
 3277      63655C50 
 3278              	.LASF54:
 3279 02b5 636F6D70 		.ascii	"compare\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 85


 3279      61726500 
 3280              	.LASF29:
 3281 02bd 50574D5F 		.ascii	"PWM_1_SetPWMMode\000"
 3281      315F5365 
 3281      7450574D 
 3281      4D6F6465 
 3281      00
 3282              	.LASF41:
 3283 02ce 50574D5F 		.ascii	"PWM_1_SetCounterMode\000"
 3283      315F5365 
 3283      74436F75 
 3283      6E746572 
 3283      4D6F6465 
 3284              	.LASF58:
 3285 02e3 50574D5F 		.ascii	"PWM_1_ReadCompareBuf\000"
 3285      315F5265 
 3285      6164436F 
 3285      6D706172 
 3285      65427566 
 3286              	.LASF47:
 3287 02f8 50574D5F 		.ascii	"PWM_1_SetCompareSwap\000"
 3287      315F5365 
 3287      74436F6D 
 3287      70617265 
 3287      53776170 
 3288              	.LASF11:
 3289 030d 666C6F61 		.ascii	"float\000"
 3289      7400
 3290              	.LASF26:
 3291 0313 70726573 		.ascii	"prescaler\000"
 3291      63616C65 
 3291      7200
 3292              	.LASF76:
 3293 031d 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3293      4320342E 
 3293      382E3420 
 3293      32303134 
 3293      30353236 
 3294 0350 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3294      20726576 
 3294      6973696F 
 3294      6E203231 
 3294      31333538 
 3295 0383 30202D66 		.ascii	"0 -ffunction-sections\000"
 3295      66756E63 
 3295      74696F6E 
 3295      2D736563 
 3295      74696F6E 
 3296              	.LASF51:
 3297 0399 50574D5F 		.ascii	"PWM_1_ReadPeriodBuf\000"
 3297      315F5265 
 3297      61645065 
 3297      72696F64 
 3297      42756600 
 3298              	.LASF37:
 3299 03ad 50574D5F 		.ascii	"PWM_1_SetPWMInvert\000"
 3299      315F5365 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 86


 3299      7450574D 
 3299      496E7665 
 3299      727400
 3300              	.LASF64:
 3301 03c0 50574D5F 		.ascii	"PWM_1_SetStartMode\000"
 3301      315F5365 
 3301      74537461 
 3301      72744D6F 
 3301      646500
 3302              	.LASF1:
 3303 03d3 756E7369 		.ascii	"unsigned char\000"
 3303      676E6564 
 3303      20636861 
 3303      7200
 3304              	.LASF35:
 3305 03e1 50574D5F 		.ascii	"PWM_1_SetPWMDeadTime\000"
 3305      315F5365 
 3305      7450574D 
 3305      44656164 
 3305      54696D65 
 3306              	.LASF31:
 3307 03f6 50574D5F 		.ascii	"PWM_1_SetPWMSyncKill\000"
 3307      315F5365 
 3307      7450574D 
 3307      53796E63 
 3307      4B696C6C 
 3308              	.LASF34:
 3309 040b 73746F70 		.ascii	"stopOnKillEnable\000"
 3309      4F6E4B69 
 3309      6C6C456E 
 3309      61626C65 
 3309      00
 3310              	.LASF2:
 3311 041c 73686F72 		.ascii	"short int\000"
 3311      7420696E 
 3311      7400
 3312              	.LASF52:
 3313 0426 50574D5F 		.ascii	"PWM_1_SetPeriodSwap\000"
 3313      315F5365 
 3313      74506572 
 3313      696F6453 
 3313      77617000 
 3314              	.LASF71:
 3315 043a 696E7465 		.ascii	"interruptMask\000"
 3315      72727570 
 3315      744D6173 
 3315      6B00
 3316              	.LASF70:
 3317 0448 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 3317      315F5365 
 3317      74496E74 
 3317      65727275 
 3317      70744D6F 
 3318              	.LASF65:
 3319 045f 50574D5F 		.ascii	"PWM_1_SetStopMode\000"
 3319      315F5365 
 3319      7453746F 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 87


 3319      704D6F64 
 3319      6500
 3320              	.LASF13:
 3321 0471 63686172 		.ascii	"char\000"
 3321      00
 3322              	.LASF23:
 3323 0476 6D6F6465 		.ascii	"mode\000"
 3323      00
 3324              	.LASF67:
 3325 047b 50574D5F 		.ascii	"PWM_1_TriggerCommand\000"
 3325      315F5472 
 3325      69676765 
 3325      72436F6D 
 3325      6D616E64 
 3326              	.LASF25:
 3327 0490 50574D5F 		.ascii	"PWM_1_SetPrescaler\000"
 3327      315F5365 
 3327      74507265 
 3327      7363616C 
 3327      657200
 3328              	.LASF74:
 3329 04a3 50574D5F 		.ascii	"PWM_1_ClearInterrupt\000"
 3329      315F436C 
 3329      65617249 
 3329      6E746572 
 3329      72757074 
 3330              	.LASF56:
 3331 04b8 50574D5F 		.ascii	"PWM_1_WriteCompareBuf\000"
 3331      315F5772 
 3331      69746543 
 3331      6F6D7061 
 3331      72654275 
 3332              	.LASF42:
 3333 04ce 636F756E 		.ascii	"counterMode\000"
 3333      7465724D 
 3333      6F646500 
 3334              	.LASF57:
 3335 04da 636F6D70 		.ascii	"compareBuf\000"
 3335      61726542 
 3335      756600
 3336              	.LASF17:
 3337 04e5 50574D5F 		.ascii	"PWM_1_Start\000"
 3337      315F5374 
 3337      61727400 
 3338              	.LASF63:
 3339 04f1 50574D5F 		.ascii	"PWM_1_SetReloadMode\000"
 3339      315F5365 
 3339      7452656C 
 3339      6F61644D 
 3339      6F646500 
 3340              	.LASF20:
 3341 0505 656E6162 		.ascii	"enableInterrupts\000"
 3341      6C65496E 
 3341      74657272 
 3341      75707473 
 3341      00
 3342              	.LASF43:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccDViMRy.s 			page 88


 3343 0516 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 3343      315F5772 
 3343      69746550 
 3343      6572696F 
 3343      6400
 3344              	.LASF61:
 3345 0528 50574D5F 		.ascii	"PWM_1_SetCaptureMode\000"
 3345      315F5365 
 3345      74436170 
 3345      74757265 
 3345      4D6F6465 
 3346              	.LASF79:
 3347 053d 50574D5F 		.ascii	"PWM_1_initVar\000"
 3347      315F696E 
 3347      69745661 
 3347      7200
 3348              	.LASF22:
 3349 054b 50574D5F 		.ascii	"PWM_1_SetQDMode\000"
 3349      315F5365 
 3349      7451444D 
 3349      6F646500 
 3350              	.LASF48:
 3351 055b 73776170 		.ascii	"swapEnable\000"
 3351      456E6162 
 3351      6C6500
 3352              	.LASF50:
 3353 0566 70657269 		.ascii	"periodBuf\000"
 3353      6F644275 
 3353      6600
 3354              	.LASF72:
 3355 0570 50574D5F 		.ascii	"PWM_1_GetInterruptSourceMasked\000"
 3355      315F4765 
 3355      74496E74 
 3355      65727275 
 3355      7074536F 
 3356              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
