ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_B.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_B_initVar
  18              		.bss
  19              		.type	PWM_B_initVar, %object
  20              		.size	PWM_B_initVar, 1
  21              	PWM_B_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_B_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_B_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_B_Init, %function
  29              	PWM_B_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_B.c"
   1:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_B.c **** * File Name: PWM_B.c
   3:.\Generated_Source\PSoC4/PWM_B.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PWM_B.c **** *
   5:.\Generated_Source\PSoC4/PWM_B.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_B.c **** *  This file provides the source code to the API for the PWM_B
   7:.\Generated_Source\PSoC4/PWM_B.c **** *  component
   8:.\Generated_Source\PSoC4/PWM_B.c **** *
   9:.\Generated_Source\PSoC4/PWM_B.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM_B.c **** *  None
  11:.\Generated_Source\PSoC4/PWM_B.c **** *
  12:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM_B.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM_B.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM_B.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM_B.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM_B.c **** 
  19:.\Generated_Source\PSoC4/PWM_B.c **** #include "PWM_B.h"
  20:.\Generated_Source\PSoC4/PWM_B.c **** 
  21:.\Generated_Source\PSoC4/PWM_B.c **** uint8 PWM_B_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM_B.c **** 
  23:.\Generated_Source\PSoC4/PWM_B.c **** 
  24:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_Init
  26:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_B.c **** *
  28:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM_B.c **** *  Initialize/Restore default PWM_B configuration.
  30:.\Generated_Source\PSoC4/PWM_B.c **** *
  31:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM_B.c **** *  None
  33:.\Generated_Source\PSoC4/PWM_B.c **** *
  34:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM_B.c **** *  None
  36:.\Generated_Source\PSoC4/PWM_B.c **** *
  37:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_Init(void)
  39:.\Generated_Source\PSoC4/PWM_B.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/PWM_B.c **** 
  41:.\Generated_Source\PSoC4/PWM_B.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__QUAD == PWM_B_CONFIG)
  43:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_CONTROL_REG = PWM_B_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM_B.c ****         
  45:.\Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_TRIG_CONTROL1_REG  = PWM_B_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM_B.c **** 
  48:.\Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_SetInterruptMode(PWM_B_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM_B.c ****         
  51:.\Generated_Source\PSoC4/PWM_B.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_SetCounterMode(PWM_B_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WritePeriod(PWM_B_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WriteCounter(PWM_B_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM_B.c ****     #endif  /* (PWM_B__QUAD == PWM_B_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM_B.c **** 
  57:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__TIMER == PWM_B_CONFIG)
  58:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_CONTROL_REG = PWM_B_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM_B.c ****         
  60:.\Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_TRIG_CONTROL1_REG  = PWM_B_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM_B.c ****     
  63:.\Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_SetInterruptMode(PWM_B_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM_B.c ****         
  66:.\Generated_Source\PSoC4/PWM_B.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WritePeriod(PWM_B_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM_B.c **** 
  69:.\Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__COMPARE == PWM_B_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCompare(PWM_B_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM_B.c **** 
  72:.\Generated_Source\PSoC4/PWM_B.c ****             #if (1u == PWM_B_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_WriteCompareBuf(PWM_B_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM_B.c ****             #endif  /* (1u == PWM_B_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 3


  76:.\Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__COMPARE == PWM_B_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM_B.c **** 
  78:.\Generated_Source\PSoC4/PWM_B.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B_CY_TCPWM_V2 && PWM_B_TIMER_UPDOWN_CNT_USED && !PWM_B_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM_B.c ****         #elif(PWM_B__COUNT_DOWN == PWM_B_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCounter(PWM_B_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM_B.c ****         #else
  84:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM_B.c ****         #endif /* (PWM_B_CY_TCPWM_V2 && PWM_B_TIMER_UPDOWN_CNT_USED && !PWM_B_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM_B.c ****     #endif  /* (PWM_B__TIMER == PWM_B_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM_B.c **** 
  88:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__PWM_SEL == PWM_B_CONFIG)
  89:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_CONTROL_REG = PWM_B_CTRL_PWM_BASE_CONFIG;
  40              		.loc 1 89 0
  41 0004 104B     		ldr	r3, .L2
  42 0006 8222     		mov	r2, #130
  43 0008 D204     		lsl	r2, r2, #19
  44 000a 1A60     		str	r2, [r3]
  90:.\Generated_Source\PSoC4/PWM_B.c **** 
  91:.\Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__PWM_PR == PWM_B_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_CONTROL_REG |= PWM_B_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCounter(PWM_B_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM_B.c ****         #else
  95:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_CONTROL_REG |= PWM_B_CTRL_PWM_ALIGN | PWM_B_CTRL_PWM_KILL_EVENT;
  45              		.loc 1 95 0
  46 000c 0E4B     		ldr	r3, .L2
  47 000e 0E4A     		ldr	r2, .L2
  48 0010 1268     		ldr	r2, [r2]
  49 0012 1A60     		str	r2, [r3]
  96:.\Generated_Source\PSoC4/PWM_B.c ****             
  97:.\Generated_Source\PSoC4/PWM_B.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B_CY_TCPWM_V2 && PWM_B_PWM_UPDOWN_CNT_USED && !PWM_B_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM_B.c ****             #elif (PWM_B__RIGHT == PWM_B_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_WriteCounter(PWM_B_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM_B.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_WriteCounter(0u);
  50              		.loc 1 103 0
  51 0014 0020     		mov	r0, #0
  52 0016 FFF7FEFF 		bl	PWM_B_WriteCounter
 104:.\Generated_Source\PSoC4/PWM_B.c ****             #endif  /* (PWM_B_CY_TCPWM_V2 && PWM_B_PWM_UPDOWN_CNT_USED && !PWM_B_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__PWM_PR == PWM_B_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM_B.c **** 
 107:.\Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__PWM_DT == PWM_B_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_CONTROL_REG |= PWM_B_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__PWM_DT == PWM_B_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM_B.c **** 
 111:.\Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__PWM == PWM_B_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_CONTROL_REG |= PWM_B_CTRL_PWM_PRESCALER;
  53              		.loc 1 112 0
  54 001a 0B4B     		ldr	r3, .L2
  55 001c 0A4A     		ldr	r2, .L2
  56 001e 1268     		ldr	r2, [r2]
  57 0020 1A60     		str	r2, [r3]
 113:.\Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__PWM == PWM_B_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM_B.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 4


 115:.\Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_TRIG_CONTROL1_REG  = PWM_B_PWM_SIGNALS_MODES;
  58              		.loc 1 116 0
  59 0022 0A4B     		ldr	r3, .L2+4
  60 0024 0C22     		mov	r2, #12
  61 0026 1A60     		str	r2, [r3]
 117:.\Generated_Source\PSoC4/PWM_B.c ****     
 118:.\Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_SetInterruptMode(PWM_B_PWM_INTERRUPT_MASK);
  62              		.loc 1 119 0
  63 0028 0120     		mov	r0, #1
  64 002a FFF7FEFF 		bl	PWM_B_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM_B.c **** 
 121:.\Generated_Source\PSoC4/PWM_B.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM_B.c ****         #if (PWM_B__PWM_PR == PWM_B_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM_B.c ****                     (PWM_B_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM_B.c ****                     PWM_B_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM_B.c ****                     PWM_B_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM_B.c ****         #else
 128:.\Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B__LEFT == PWM_B_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_TRIG_CONTROL2_REG = PWM_B_PWM_MODE_LEFT;
  65              		.loc 1 129 0
  66 002e 084B     		ldr	r3, .L2+8
  67 0030 3122     		mov	r2, #49
  68 0032 1A60     		str	r2, [r3]
 130:.\Generated_Source\PSoC4/PWM_B.c ****             #endif  /* ( PWM_B_PWM_LEFT == PWM_B_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM_B.c **** 
 132:.\Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B__RIGHT == PWM_B_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_TRIG_CONTROL2_REG = PWM_B_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM_B.c ****             #endif  /* ( PWM_B_PWM_RIGHT == PWM_B_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM_B.c **** 
 136:.\Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B__CENTER == PWM_B_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_TRIG_CONTROL2_REG = PWM_B_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM_B.c ****             #endif  /* ( PWM_B_PWM_CENTER == PWM_B_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM_B.c **** 
 140:.\Generated_Source\PSoC4/PWM_B.c ****             #if (PWM_B__ASYMMETRIC == PWM_B_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM_B.c ****                 PWM_B_TRIG_CONTROL2_REG = PWM_B_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM_B.c ****             #endif  /* (PWM_B__ASYMMETRIC == PWM_B_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (PWM_B__PWM_PR == PWM_B_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM_B.c **** 
 145:.\Generated_Source\PSoC4/PWM_B.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WritePeriod(PWM_B_PWM_PERIOD_VALUE );
  69              		.loc 1 146 0
  70 0034 074B     		ldr	r3, .L2+12
  71 0036 181C     		mov	r0, r3
  72 0038 FFF7FEFF 		bl	PWM_B_WritePeriod
 147:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_WriteCompare(PWM_B_PWM_COMPARE_VALUE);
  73              		.loc 1 147 0
  74 003c 054B     		ldr	r3, .L2+12
  75 003e 181C     		mov	r0, r3
  76 0040 FFF7FEFF 		bl	PWM_B_WriteCompare
 148:.\Generated_Source\PSoC4/PWM_B.c **** 
 149:.\Generated_Source\PSoC4/PWM_B.c ****         #if (1u == PWM_B_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WriteCompareBuf(PWM_B_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (1u == PWM_B_PWM_COMPARE_SWAP) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 5


 153:.\Generated_Source\PSoC4/PWM_B.c **** 
 154:.\Generated_Source\PSoC4/PWM_B.c ****         #if (1u == PWM_B_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_WritePeriodBuf(PWM_B_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM_B.c ****         #endif  /* (1u == PWM_B_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM_B.c ****     #endif  /* (PWM_B__PWM_SEL == PWM_B_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM_B.c ****     
 160:.\Generated_Source\PSoC4/PWM_B.c **** }
  77              		.loc 1 160 0
  78 0044 BD46     		mov	sp, r7
  79              		@ sp needed
  80 0046 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0048 00010540 		.word	1074069760
  85 004c 24010540 		.word	1074069796
  86 0050 28010540 		.word	1074069800
  87 0054 FFFF0000 		.word	65535
  88              		.cfi_endproc
  89              	.LFE0:
  90              		.size	PWM_B_Init, .-PWM_B_Init
  91              		.section	.text.PWM_B_Enable,"ax",%progbits
  92              		.align	2
  93              		.global	PWM_B_Enable
  94              		.code	16
  95              		.thumb_func
  96              		.type	PWM_B_Enable, %function
  97              	PWM_B_Enable:
  98              	.LFB1:
 161:.\Generated_Source\PSoC4/PWM_B.c **** 
 162:.\Generated_Source\PSoC4/PWM_B.c **** 
 163:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_Enable
 165:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM_B.c **** *
 167:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM_B.c **** *  Enables the PWM_B.
 169:.\Generated_Source\PSoC4/PWM_B.c **** *
 170:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 172:.\Generated_Source\PSoC4/PWM_B.c **** *
 173:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 175:.\Generated_Source\PSoC4/PWM_B.c **** *
 176:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_Enable(void)
 178:.\Generated_Source\PSoC4/PWM_B.c **** {
  99              		.loc 1 178 0
 100              		.cfi_startproc
 101 0000 90B5     		push	{r4, r7, lr}
 102              		.cfi_def_cfa_offset 12
 103              		.cfi_offset 4, -12
 104              		.cfi_offset 7, -8
 105              		.cfi_offset 14, -4
 106 0002 83B0     		sub	sp, sp, #12
 107              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 6


 108 0004 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 179:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM_B.c **** 
 181:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 110              		.loc 1 181 0
 111 0006 FC1D     		add	r4, r7, #7
 112 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 113 000c 031C     		mov	r3, r0
 114 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_BLOCK_CONTROL_REG |= PWM_B_MASK;
 115              		.loc 1 182 0
 116 0010 084B     		ldr	r3, .L5
 117 0012 084A     		ldr	r2, .L5
 118 0014 1268     		ldr	r2, [r2]
 119 0016 0121     		mov	r1, #1
 120 0018 0A43     		orr	r2, r1
 121 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 122              		.loc 1 183 0
 123 001c FB1D     		add	r3, r7, #7
 124 001e 1B78     		ldrb	r3, [r3]
 125 0020 181C     		mov	r0, r3
 126 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/PWM_B.c **** 
 185:.\Generated_Source\PSoC4/PWM_B.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__PWM_SEL == PWM_B_CONFIG)
 187:.\Generated_Source\PSoC4/PWM_B.c ****         #if (0u == PWM_B_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_TriggerCommand(PWM_B_MASK, PWM_B_CMD_START);
 127              		.loc 1 188 0
 128 0026 0120     		mov	r0, #1
 129 0028 1821     		mov	r1, #24
 130 002a FFF7FEFF 		bl	PWM_B_TriggerCommand
 189:.\Generated_Source\PSoC4/PWM_B.c ****         #endif /* (0u == PWM_B_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B__PWM_SEL == PWM_B_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM_B.c **** 
 192:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B__TIMER == PWM_B_CONFIG)
 193:.\Generated_Source\PSoC4/PWM_B.c ****         #if (0u == PWM_B_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM_B.c ****             PWM_B_TriggerCommand(PWM_B_MASK, PWM_B_CMD_START);
 195:.\Generated_Source\PSoC4/PWM_B.c ****         #endif /* (0u == PWM_B_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B__TIMER == PWM_B_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM_B.c **** }
 131              		.loc 1 197 0
 132 002e BD46     		mov	sp, r7
 133 0030 03B0     		add	sp, sp, #12
 134              		@ sp needed
 135 0032 90BD     		pop	{r4, r7, pc}
 136              	.L6:
 137              		.align	2
 138              	.L5:
 139 0034 00000540 		.word	1074069504
 140              		.cfi_endproc
 141              	.LFE1:
 142              		.size	PWM_B_Enable, .-PWM_B_Enable
 143              		.section	.text.PWM_B_Start,"ax",%progbits
 144              		.align	2
 145              		.global	PWM_B_Start
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 7


 146              		.code	16
 147              		.thumb_func
 148              		.type	PWM_B_Start, %function
 149              	PWM_B_Start:
 150              	.LFB2:
 198:.\Generated_Source\PSoC4/PWM_B.c **** 
 199:.\Generated_Source\PSoC4/PWM_B.c **** 
 200:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_Start
 202:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PWM_B.c **** *
 204:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 205:.\Generated_Source\PSoC4/PWM_B.c **** *  Initializes the PWM_B with default customizer
 206:.\Generated_Source\PSoC4/PWM_B.c **** *  values when called the first time and enables the PWM_B.
 207:.\Generated_Source\PSoC4/PWM_B.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PWM_B.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PWM_B.c **** *
 210:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 212:.\Generated_Source\PSoC4/PWM_B.c **** *
 213:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 214:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 215:.\Generated_Source\PSoC4/PWM_B.c **** *
 216:.\Generated_Source\PSoC4/PWM_B.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PWM_B.c **** *  PWM_B_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PWM_B.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PWM_B.c **** *  to 1 the first time PWM_B_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PWM_B.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PWM_B.c **** *  calls to the PWM_B_Start() routine.
 222:.\Generated_Source\PSoC4/PWM_B.c **** *
 223:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_Start(void)
 225:.\Generated_Source\PSoC4/PWM_B.c **** {
 151              		.loc 1 225 0
 152              		.cfi_startproc
 153 0000 80B5     		push	{r7, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
 226:.\Generated_Source\PSoC4/PWM_B.c ****     if (0u == PWM_B_initVar)
 159              		.loc 1 226 0
 160 0004 064B     		ldr	r3, .L9
 161 0006 1B78     		ldrb	r3, [r3]
 162 0008 002B     		cmp	r3, #0
 163 000a 04D1     		bne	.L8
 227:.\Generated_Source\PSoC4/PWM_B.c ****     {
 228:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_Init();
 164              		.loc 1 228 0
 165 000c FFF7FEFF 		bl	PWM_B_Init
 229:.\Generated_Source\PSoC4/PWM_B.c ****         PWM_B_initVar = 1u;
 166              		.loc 1 229 0
 167 0010 034B     		ldr	r3, .L9
 168 0012 0122     		mov	r2, #1
 169 0014 1A70     		strb	r2, [r3]
 170              	.L8:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 8


 230:.\Generated_Source\PSoC4/PWM_B.c ****     }
 231:.\Generated_Source\PSoC4/PWM_B.c **** 
 232:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_Enable();
 171              		.loc 1 232 0
 172 0016 FFF7FEFF 		bl	PWM_B_Enable
 233:.\Generated_Source\PSoC4/PWM_B.c **** }
 173              		.loc 1 233 0
 174 001a BD46     		mov	sp, r7
 175              		@ sp needed
 176 001c 80BD     		pop	{r7, pc}
 177              	.L10:
 178 001e C046     		.align	2
 179              	.L9:
 180 0020 00000000 		.word	PWM_B_initVar
 181              		.cfi_endproc
 182              	.LFE2:
 183              		.size	PWM_B_Start, .-PWM_B_Start
 184              		.section	.text.PWM_B_Stop,"ax",%progbits
 185              		.align	2
 186              		.global	PWM_B_Stop
 187              		.code	16
 188              		.thumb_func
 189              		.type	PWM_B_Stop, %function
 190              	PWM_B_Stop:
 191              	.LFB3:
 234:.\Generated_Source\PSoC4/PWM_B.c **** 
 235:.\Generated_Source\PSoC4/PWM_B.c **** 
 236:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_Stop
 238:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PWM_B.c **** *
 240:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 241:.\Generated_Source\PSoC4/PWM_B.c **** *  Disables the PWM_B.
 242:.\Generated_Source\PSoC4/PWM_B.c **** *
 243:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 245:.\Generated_Source\PSoC4/PWM_B.c **** *
 246:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 247:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 248:.\Generated_Source\PSoC4/PWM_B.c **** *
 249:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_Stop(void)
 251:.\Generated_Source\PSoC4/PWM_B.c **** {
 192              		.loc 1 251 0
 193              		.cfi_startproc
 194 0000 90B5     		push	{r4, r7, lr}
 195              		.cfi_def_cfa_offset 12
 196              		.cfi_offset 4, -12
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 83B0     		sub	sp, sp, #12
 200              		.cfi_def_cfa_offset 24
 201 0004 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 252:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PWM_B.c **** 
 254:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 9


 203              		.loc 1 254 0
 204 0006 FC1D     		add	r4, r7, #7
 205 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 206 000c 031C     		mov	r3, r0
 207 000e 2370     		strb	r3, [r4]
 255:.\Generated_Source\PSoC4/PWM_B.c **** 
 256:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_BLOCK_CONTROL_REG &= (uint32)~PWM_B_MASK;
 208              		.loc 1 256 0
 209 0010 064B     		ldr	r3, .L12
 210 0012 064A     		ldr	r2, .L12
 211 0014 1268     		ldr	r2, [r2]
 212 0016 0121     		mov	r1, #1
 213 0018 8A43     		bic	r2, r1
 214 001a 1A60     		str	r2, [r3]
 257:.\Generated_Source\PSoC4/PWM_B.c **** 
 258:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 215              		.loc 1 258 0
 216 001c FB1D     		add	r3, r7, #7
 217 001e 1B78     		ldrb	r3, [r3]
 218 0020 181C     		mov	r0, r3
 219 0022 FFF7FEFF 		bl	CyExitCriticalSection
 259:.\Generated_Source\PSoC4/PWM_B.c **** }
 220              		.loc 1 259 0
 221 0026 BD46     		mov	sp, r7
 222 0028 03B0     		add	sp, sp, #12
 223              		@ sp needed
 224 002a 90BD     		pop	{r4, r7, pc}
 225              	.L13:
 226              		.align	2
 227              	.L12:
 228 002c 00000540 		.word	1074069504
 229              		.cfi_endproc
 230              	.LFE3:
 231              		.size	PWM_B_Stop, .-PWM_B_Stop
 232              		.section	.text.PWM_B_SetMode,"ax",%progbits
 233              		.align	2
 234              		.global	PWM_B_SetMode
 235              		.code	16
 236              		.thumb_func
 237              		.type	PWM_B_SetMode, %function
 238              	PWM_B_SetMode:
 239              	.LFB4:
 260:.\Generated_Source\PSoC4/PWM_B.c **** 
 261:.\Generated_Source\PSoC4/PWM_B.c **** 
 262:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetMode
 264:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PWM_B.c **** *
 266:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 267:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the operation mode of the PWM_B. This function is used when
 268:.\Generated_Source\PSoC4/PWM_B.c **** *  configured as a generic PWM_B and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PWM_B.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PWM_B.c **** *
 271:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PWM_B.c **** *  mode: Mode for the PWM_B to operate in
 273:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 274:.\Generated_Source\PSoC4/PWM_B.c **** *   - PWM_B_MODE_TIMER_COMPARE - Timer / Counter with
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 10


 275:.\Generated_Source\PSoC4/PWM_B.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PWM_B.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/PWM_B.c **** *
 283:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 284:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 285:.\Generated_Source\PSoC4/PWM_B.c **** *
 286:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PWM_B.c **** {
 240              		.loc 1 288 0
 241              		.cfi_startproc
 242 0000 90B5     		push	{r4, r7, lr}
 243              		.cfi_def_cfa_offset 12
 244              		.cfi_offset 4, -12
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 85B0     		sub	sp, sp, #20
 248              		.cfi_def_cfa_offset 32
 249 0004 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 251 0006 7860     		str	r0, [r7, #4]
 289:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PWM_B.c **** 
 291:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 252              		.loc 1 291 0
 253 0008 3C1C     		mov	r4, r7
 254 000a 0F34     		add	r4, r4, #15
 255 000c FFF7FEFF 		bl	CyEnterCriticalSection
 256 0010 031C     		mov	r3, r0
 257 0012 2370     		strb	r3, [r4]
 292:.\Generated_Source\PSoC4/PWM_B.c **** 
 293:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_MODE_MASK;
 258              		.loc 1 293 0
 259 0014 0A4B     		ldr	r3, .L15
 260 0016 0A4A     		ldr	r2, .L15
 261 0018 1168     		ldr	r1, [r2]
 262 001a 0A4A     		ldr	r2, .L15+4
 263 001c 0A40     		and	r2, r1
 264 001e 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= mode;
 265              		.loc 1 294 0
 266 0020 074B     		ldr	r3, .L15
 267 0022 074A     		ldr	r2, .L15
 268 0024 1168     		ldr	r1, [r2]
 269 0026 7A68     		ldr	r2, [r7, #4]
 270 0028 0A43     		orr	r2, r1
 271 002a 1A60     		str	r2, [r3]
 295:.\Generated_Source\PSoC4/PWM_B.c **** 
 296:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 272              		.loc 1 296 0
 273 002c 3B1C     		mov	r3, r7
 274 002e 0F33     		add	r3, r3, #15
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 11


 275 0030 1B78     		ldrb	r3, [r3]
 276 0032 181C     		mov	r0, r3
 277 0034 FFF7FEFF 		bl	CyExitCriticalSection
 297:.\Generated_Source\PSoC4/PWM_B.c **** }
 278              		.loc 1 297 0
 279 0038 BD46     		mov	sp, r7
 280 003a 05B0     		add	sp, sp, #20
 281              		@ sp needed
 282 003c 90BD     		pop	{r4, r7, pc}
 283              	.L16:
 284 003e C046     		.align	2
 285              	.L15:
 286 0040 00010540 		.word	1074069760
 287 0044 FFFFFFF8 		.word	-117440513
 288              		.cfi_endproc
 289              	.LFE4:
 290              		.size	PWM_B_SetMode, .-PWM_B_SetMode
 291              		.section	.text.PWM_B_SetQDMode,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_B_SetQDMode
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWM_B_SetQDMode, %function
 297              	PWM_B_SetQDMode:
 298              	.LFB5:
 298:.\Generated_Source\PSoC4/PWM_B.c **** 
 299:.\Generated_Source\PSoC4/PWM_B.c **** 
 300:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetQDMode
 302:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PWM_B.c **** *
 304:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 305:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PWM_B.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PWM_B.c **** *
 308:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PWM_B.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 311:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PWM_B.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PWM_B.c **** *
 316:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 317:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 318:.\Generated_Source\PSoC4/PWM_B.c **** *
 319:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PWM_B.c **** {
 299              		.loc 1 321 0
 300              		.cfi_startproc
 301 0000 90B5     		push	{r4, r7, lr}
 302              		.cfi_def_cfa_offset 12
 303              		.cfi_offset 4, -12
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 12


 307              		.cfi_def_cfa_offset 32
 308 0004 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0006 7860     		str	r0, [r7, #4]
 322:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PWM_B.c **** 
 324:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 311              		.loc 1 324 0
 312 0008 3C1C     		mov	r4, r7
 313 000a 0F34     		add	r4, r4, #15
 314 000c FFF7FEFF 		bl	CyEnterCriticalSection
 315 0010 031C     		mov	r3, r0
 316 0012 2370     		strb	r3, [r4]
 325:.\Generated_Source\PSoC4/PWM_B.c **** 
 326:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_QUAD_MODE_MASK;
 317              		.loc 1 326 0
 318 0014 0A4B     		ldr	r3, .L18
 319 0016 0A4A     		ldr	r2, .L18
 320 0018 1168     		ldr	r1, [r2]
 321 001a 0A4A     		ldr	r2, .L18+4
 322 001c 0A40     		and	r2, r1
 323 001e 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= qdMode;
 324              		.loc 1 327 0
 325 0020 074B     		ldr	r3, .L18
 326 0022 074A     		ldr	r2, .L18
 327 0024 1168     		ldr	r1, [r2]
 328 0026 7A68     		ldr	r2, [r7, #4]
 329 0028 0A43     		orr	r2, r1
 330 002a 1A60     		str	r2, [r3]
 328:.\Generated_Source\PSoC4/PWM_B.c **** 
 329:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 331              		.loc 1 329 0
 332 002c 3B1C     		mov	r3, r7
 333 002e 0F33     		add	r3, r3, #15
 334 0030 1B78     		ldrb	r3, [r3]
 335 0032 181C     		mov	r0, r3
 336 0034 FFF7FEFF 		bl	CyExitCriticalSection
 330:.\Generated_Source\PSoC4/PWM_B.c **** }
 337              		.loc 1 330 0
 338 0038 BD46     		mov	sp, r7
 339 003a 05B0     		add	sp, sp, #20
 340              		@ sp needed
 341 003c 90BD     		pop	{r4, r7, pc}
 342              	.L19:
 343 003e C046     		.align	2
 344              	.L18:
 345 0040 00010540 		.word	1074069760
 346 0044 FFFF8FFF 		.word	-7340033
 347              		.cfi_endproc
 348              	.LFE5:
 349              		.size	PWM_B_SetQDMode, .-PWM_B_SetQDMode
 350              		.section	.text.PWM_B_SetPrescaler,"ax",%progbits
 351              		.align	2
 352              		.global	PWM_B_SetPrescaler
 353              		.code	16
 354              		.thumb_func
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 13


 355              		.type	PWM_B_SetPrescaler, %function
 356              	PWM_B_SetPrescaler:
 357              	.LFB6:
 331:.\Generated_Source\PSoC4/PWM_B.c **** 
 332:.\Generated_Source\PSoC4/PWM_B.c **** 
 333:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPrescaler
 335:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PWM_B.c **** *
 337:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 338:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PWM_B.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PWM_B.c **** *
 341:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PWM_B.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 344:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PWM_B.c **** *
 353:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 354:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 355:.\Generated_Source\PSoC4/PWM_B.c **** *
 356:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PWM_B.c **** {
 358              		.loc 1 358 0
 359              		.cfi_startproc
 360 0000 90B5     		push	{r4, r7, lr}
 361              		.cfi_def_cfa_offset 12
 362              		.cfi_offset 4, -12
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 85B0     		sub	sp, sp, #20
 366              		.cfi_def_cfa_offset 32
 367 0004 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
 369 0006 7860     		str	r0, [r7, #4]
 359:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PWM_B.c **** 
 361:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 370              		.loc 1 361 0
 371 0008 3C1C     		mov	r4, r7
 372 000a 0F34     		add	r4, r4, #15
 373 000c FFF7FEFF 		bl	CyEnterCriticalSection
 374 0010 031C     		mov	r3, r0
 375 0012 2370     		strb	r3, [r4]
 362:.\Generated_Source\PSoC4/PWM_B.c **** 
 363:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_PRESCALER_MASK;
 376              		.loc 1 363 0
 377 0014 0A4B     		ldr	r3, .L21
 378 0016 0A4A     		ldr	r2, .L21
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 14


 379 0018 1168     		ldr	r1, [r2]
 380 001a 0A4A     		ldr	r2, .L21+4
 381 001c 0A40     		and	r2, r1
 382 001e 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= prescaler;
 383              		.loc 1 364 0
 384 0020 074B     		ldr	r3, .L21
 385 0022 074A     		ldr	r2, .L21
 386 0024 1168     		ldr	r1, [r2]
 387 0026 7A68     		ldr	r2, [r7, #4]
 388 0028 0A43     		orr	r2, r1
 389 002a 1A60     		str	r2, [r3]
 365:.\Generated_Source\PSoC4/PWM_B.c **** 
 366:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 390              		.loc 1 366 0
 391 002c 3B1C     		mov	r3, r7
 392 002e 0F33     		add	r3, r3, #15
 393 0030 1B78     		ldrb	r3, [r3]
 394 0032 181C     		mov	r0, r3
 395 0034 FFF7FEFF 		bl	CyExitCriticalSection
 367:.\Generated_Source\PSoC4/PWM_B.c **** }
 396              		.loc 1 367 0
 397 0038 BD46     		mov	sp, r7
 398 003a 05B0     		add	sp, sp, #20
 399              		@ sp needed
 400 003c 90BD     		pop	{r4, r7, pc}
 401              	.L22:
 402 003e C046     		.align	2
 403              	.L21:
 404 0040 00010540 		.word	1074069760
 405 0044 FF00FFFF 		.word	-65281
 406              		.cfi_endproc
 407              	.LFE6:
 408              		.size	PWM_B_SetPrescaler, .-PWM_B_SetPrescaler
 409              		.section	.text.PWM_B_SetOneShot,"ax",%progbits
 410              		.align	2
 411              		.global	PWM_B_SetOneShot
 412              		.code	16
 413              		.thumb_func
 414              		.type	PWM_B_SetOneShot, %function
 415              	PWM_B_SetOneShot:
 416              	.LFB7:
 368:.\Generated_Source\PSoC4/PWM_B.c **** 
 369:.\Generated_Source\PSoC4/PWM_B.c **** 
 370:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetOneShot
 372:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PWM_B.c **** *
 374:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 375:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the PWM_B runs
 376:.\Generated_Source\PSoC4/PWM_B.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PWM_B.c **** *  PWM_B operates in the continuous mode.
 378:.\Generated_Source\PSoC4/PWM_B.c **** *
 379:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PWM_B.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 382:.\Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Continuous
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 15


 383:.\Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PWM_B.c **** *
 385:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 386:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 387:.\Generated_Source\PSoC4/PWM_B.c **** *
 388:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PWM_B.c **** {
 417              		.loc 1 390 0
 418              		.cfi_startproc
 419 0000 90B5     		push	{r4, r7, lr}
 420              		.cfi_def_cfa_offset 12
 421              		.cfi_offset 4, -12
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 85B0     		sub	sp, sp, #20
 425              		.cfi_def_cfa_offset 32
 426 0004 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 428 0006 7860     		str	r0, [r7, #4]
 391:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PWM_B.c **** 
 393:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 429              		.loc 1 393 0
 430 0008 3C1C     		mov	r4, r7
 431 000a 0F34     		add	r4, r4, #15
 432 000c FFF7FEFF 		bl	CyEnterCriticalSection
 433 0010 031C     		mov	r3, r0
 434 0012 2370     		strb	r3, [r4]
 394:.\Generated_Source\PSoC4/PWM_B.c **** 
 395:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_ONESHOT_MASK;
 435              		.loc 1 395 0
 436 0014 0B4B     		ldr	r3, .L24
 437 0016 0B4A     		ldr	r2, .L24
 438 0018 1168     		ldr	r1, [r2]
 439 001a 0B4A     		ldr	r2, .L24+4
 440 001c 0A40     		and	r2, r1
 441 001e 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_B_1BIT_MASK) <<
 442              		.loc 1 396 0
 443 0020 084B     		ldr	r3, .L24
 444 0022 084A     		ldr	r2, .L24
 445 0024 1168     		ldr	r1, [r2]
 446 0026 7868     		ldr	r0, [r7, #4]
 447 0028 0122     		mov	r2, #1
 448 002a 0240     		and	r2, r0
 449 002c 9204     		lsl	r2, r2, #18
 450 002e 0A43     		orr	r2, r1
 451 0030 1A60     		str	r2, [r3]
 397:.\Generated_Source\PSoC4/PWM_B.c ****                                                                PWM_B_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PWM_B.c **** 
 399:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 452              		.loc 1 399 0
 453 0032 3B1C     		mov	r3, r7
 454 0034 0F33     		add	r3, r3, #15
 455 0036 1B78     		ldrb	r3, [r3]
 456 0038 181C     		mov	r0, r3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 16


 457 003a FFF7FEFF 		bl	CyExitCriticalSection
 400:.\Generated_Source\PSoC4/PWM_B.c **** }
 458              		.loc 1 400 0
 459 003e BD46     		mov	sp, r7
 460 0040 05B0     		add	sp, sp, #20
 461              		@ sp needed
 462 0042 90BD     		pop	{r4, r7, pc}
 463              	.L25:
 464              		.align	2
 465              	.L24:
 466 0044 00010540 		.word	1074069760
 467 0048 FFFFFBFF 		.word	-262145
 468              		.cfi_endproc
 469              	.LFE7:
 470              		.size	PWM_B_SetOneShot, .-PWM_B_SetOneShot
 471              		.section	.text.PWM_B_SetPWMMode,"ax",%progbits
 472              		.align	2
 473              		.global	PWM_B_SetPWMMode
 474              		.code	16
 475              		.thumb_func
 476              		.type	PWM_B_SetPWMMode, %function
 477              	PWM_B_SetPWMMode:
 478              	.LFB8:
 401:.\Generated_Source\PSoC4/PWM_B.c **** 
 402:.\Generated_Source\PSoC4/PWM_B.c **** 
 403:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMMode
 405:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PWM_B.c **** *
 407:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 408:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PWM_B.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PWM_B.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PWM_B.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PWM_B.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PWM_B.c **** *
 414:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PWM_B.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PWM_B.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 418:.\Generated_Source\PSoC4/PWM_B.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PWM_B.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PWM_B.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PWM_B.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PWM_B.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PWM_B.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PWM_B.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PWM_B.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PWM_B.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PWM_B.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PWM_B.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PWM_B.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PWM_B.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PWM_B.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 17


 435:.\Generated_Source\PSoC4/PWM_B.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM_B.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PWM_B.c **** *
 439:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 440:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 441:.\Generated_Source\PSoC4/PWM_B.c **** *
 442:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PWM_B.c **** {
 479              		.loc 1 444 0
 480              		.cfi_startproc
 481 0000 80B5     		push	{r7, lr}
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 7, -8
 484              		.cfi_offset 14, -4
 485 0002 82B0     		sub	sp, sp, #8
 486              		.cfi_def_cfa_offset 16
 487 0004 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 489 0006 7860     		str	r0, [r7, #4]
 445:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL2_REG = (modeMask & PWM_B_6BIT_MASK);
 490              		.loc 1 445 0
 491 0008 034B     		ldr	r3, .L27
 492 000a 7968     		ldr	r1, [r7, #4]
 493 000c 3F22     		mov	r2, #63
 494 000e 0A40     		and	r2, r1
 495 0010 1A60     		str	r2, [r3]
 446:.\Generated_Source\PSoC4/PWM_B.c **** }
 496              		.loc 1 446 0
 497 0012 BD46     		mov	sp, r7
 498 0014 02B0     		add	sp, sp, #8
 499              		@ sp needed
 500 0016 80BD     		pop	{r7, pc}
 501              	.L28:
 502              		.align	2
 503              	.L27:
 504 0018 28010540 		.word	1074069800
 505              		.cfi_endproc
 506              	.LFE8:
 507              		.size	PWM_B_SetPWMMode, .-PWM_B_SetPWMMode
 508              		.section	.text.PWM_B_SetPWMSyncKill,"ax",%progbits
 509              		.align	2
 510              		.global	PWM_B_SetPWMSyncKill
 511              		.code	16
 512              		.thumb_func
 513              		.type	PWM_B_SetPWMSyncKill, %function
 514              	PWM_B_SetPWMSyncKill:
 515              	.LFB9:
 447:.\Generated_Source\PSoC4/PWM_B.c **** 
 448:.\Generated_Source\PSoC4/PWM_B.c **** 
 449:.\Generated_Source\PSoC4/PWM_B.c **** 
 450:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PWM_B.c **** *
 454:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 18


 455:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PWM_B.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PWM_B.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PWM_B.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PWM_B.c **** *
 460:.\Generated_Source\PSoC4/PWM_B.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PWM_B.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PWM_B.c **** *
 463:.\Generated_Source\PSoC4/PWM_B.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PWM_B.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PWM_B.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PWM_B.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PWM_B.c **** 
 468:.\Generated_Source\PSoC4/PWM_B.c **** *
 469:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PWM_B.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 472:.\Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PWM_B.c **** *
 475:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 476:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 477:.\Generated_Source\PSoC4/PWM_B.c **** *
 478:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PWM_B.c **** {
 516              		.loc 1 480 0
 517              		.cfi_startproc
 518 0000 90B5     		push	{r4, r7, lr}
 519              		.cfi_def_cfa_offset 12
 520              		.cfi_offset 4, -12
 521              		.cfi_offset 7, -8
 522              		.cfi_offset 14, -4
 523 0002 85B0     		sub	sp, sp, #20
 524              		.cfi_def_cfa_offset 32
 525 0004 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 527 0006 7860     		str	r0, [r7, #4]
 481:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PWM_B.c **** 
 483:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 528              		.loc 1 483 0
 529 0008 3C1C     		mov	r4, r7
 530 000a 0F34     		add	r4, r4, #15
 531 000c FFF7FEFF 		bl	CyEnterCriticalSection
 532 0010 031C     		mov	r3, r0
 533 0012 2370     		strb	r3, [r4]
 484:.\Generated_Source\PSoC4/PWM_B.c **** 
 485:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_PWM_SYNC_KILL_MASK;
 534              		.loc 1 485 0
 535 0014 0B4B     		ldr	r3, .L30
 536 0016 0B4A     		ldr	r2, .L30
 537 0018 1268     		ldr	r2, [r2]
 538 001a 0421     		mov	r1, #4
 539 001c 8A43     		bic	r2, r1
 540 001e 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_B_1BIT_MASK)  <<
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 19


 541              		.loc 1 486 0
 542 0020 084B     		ldr	r3, .L30
 543 0022 084A     		ldr	r2, .L30
 544 0024 1168     		ldr	r1, [r2]
 545 0026 7868     		ldr	r0, [r7, #4]
 546 0028 0122     		mov	r2, #1
 547 002a 0240     		and	r2, r0
 548 002c 9200     		lsl	r2, r2, #2
 549 002e 0A43     		orr	r2, r1
 550 0030 1A60     		str	r2, [r3]
 487:.\Generated_Source\PSoC4/PWM_B.c ****                                                PWM_B_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PWM_B.c **** 
 489:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 551              		.loc 1 489 0
 552 0032 3B1C     		mov	r3, r7
 553 0034 0F33     		add	r3, r3, #15
 554 0036 1B78     		ldrb	r3, [r3]
 555 0038 181C     		mov	r0, r3
 556 003a FFF7FEFF 		bl	CyExitCriticalSection
 490:.\Generated_Source\PSoC4/PWM_B.c **** }
 557              		.loc 1 490 0
 558 003e BD46     		mov	sp, r7
 559 0040 05B0     		add	sp, sp, #20
 560              		@ sp needed
 561 0042 90BD     		pop	{r4, r7, pc}
 562              	.L31:
 563              		.align	2
 564              	.L30:
 565 0044 00010540 		.word	1074069760
 566              		.cfi_endproc
 567              	.LFE9:
 568              		.size	PWM_B_SetPWMSyncKill, .-PWM_B_SetPWMSyncKill
 569              		.section	.text.PWM_B_SetPWMStopOnKill,"ax",%progbits
 570              		.align	2
 571              		.global	PWM_B_SetPWMStopOnKill
 572              		.code	16
 573              		.thumb_func
 574              		.type	PWM_B_SetPWMStopOnKill, %function
 575              	PWM_B_SetPWMStopOnKill:
 576              	.LFB10:
 491:.\Generated_Source\PSoC4/PWM_B.c **** 
 492:.\Generated_Source\PSoC4/PWM_B.c **** 
 493:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PWM_B.c **** *
 497:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 498:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PWM_B.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PWM_B.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PWM_B.c **** *
 502:.\Generated_Source\PSoC4/PWM_B.c **** *
 503:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PWM_B.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 506:.\Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Stop
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 20


 508:.\Generated_Source\PSoC4/PWM_B.c **** *
 509:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 510:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 511:.\Generated_Source\PSoC4/PWM_B.c **** *
 512:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PWM_B.c **** {
 577              		.loc 1 514 0
 578              		.cfi_startproc
 579 0000 90B5     		push	{r4, r7, lr}
 580              		.cfi_def_cfa_offset 12
 581              		.cfi_offset 4, -12
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 85B0     		sub	sp, sp, #20
 585              		.cfi_def_cfa_offset 32
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 588 0006 7860     		str	r0, [r7, #4]
 515:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PWM_B.c **** 
 517:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 589              		.loc 1 517 0
 590 0008 3C1C     		mov	r4, r7
 591 000a 0F34     		add	r4, r4, #15
 592 000c FFF7FEFF 		bl	CyEnterCriticalSection
 593 0010 031C     		mov	r3, r0
 594 0012 2370     		strb	r3, [r4]
 518:.\Generated_Source\PSoC4/PWM_B.c **** 
 519:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_PWM_STOP_KILL_MASK;
 595              		.loc 1 519 0
 596 0014 0B4B     		ldr	r3, .L33
 597 0016 0B4A     		ldr	r2, .L33
 598 0018 1268     		ldr	r2, [r2]
 599 001a 0821     		mov	r1, #8
 600 001c 8A43     		bic	r2, r1
 601 001e 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_B_1BIT_MASK)  <<
 602              		.loc 1 520 0
 603 0020 084B     		ldr	r3, .L33
 604 0022 084A     		ldr	r2, .L33
 605 0024 1168     		ldr	r1, [r2]
 606 0026 7868     		ldr	r0, [r7, #4]
 607 0028 0122     		mov	r2, #1
 608 002a 0240     		and	r2, r0
 609 002c D200     		lsl	r2, r2, #3
 610 002e 0A43     		orr	r2, r1
 611 0030 1A60     		str	r2, [r3]
 521:.\Generated_Source\PSoC4/PWM_B.c ****                                                          PWM_B_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PWM_B.c **** 
 523:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 612              		.loc 1 523 0
 613 0032 3B1C     		mov	r3, r7
 614 0034 0F33     		add	r3, r3, #15
 615 0036 1B78     		ldrb	r3, [r3]
 616 0038 181C     		mov	r0, r3
 617 003a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 21


 524:.\Generated_Source\PSoC4/PWM_B.c **** }
 618              		.loc 1 524 0
 619 003e BD46     		mov	sp, r7
 620 0040 05B0     		add	sp, sp, #20
 621              		@ sp needed
 622 0042 90BD     		pop	{r4, r7, pc}
 623              	.L34:
 624              		.align	2
 625              	.L33:
 626 0044 00010540 		.word	1074069760
 627              		.cfi_endproc
 628              	.LFE10:
 629              		.size	PWM_B_SetPWMStopOnKill, .-PWM_B_SetPWMStopOnKill
 630              		.section	.text.PWM_B_SetPWMDeadTime,"ax",%progbits
 631              		.align	2
 632              		.global	PWM_B_SetPWMDeadTime
 633              		.code	16
 634              		.thumb_func
 635              		.type	PWM_B_SetPWMDeadTime, %function
 636              	PWM_B_SetPWMDeadTime:
 637              	.LFB11:
 525:.\Generated_Source\PSoC4/PWM_B.c **** 
 526:.\Generated_Source\PSoC4/PWM_B.c **** 
 527:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PWM_B.c **** *
 531:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 532:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PWM_B.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PWM_B.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PWM_B.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PWM_B.c **** 
 537:.\Generated_Source\PSoC4/PWM_B.c **** *
 538:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PWM_B.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PWM_B.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PWM_B.c **** *
 542:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 543:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 544:.\Generated_Source\PSoC4/PWM_B.c **** *
 545:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PWM_B.c **** {
 638              		.loc 1 547 0
 639              		.cfi_startproc
 640 0000 90B5     		push	{r4, r7, lr}
 641              		.cfi_def_cfa_offset 12
 642              		.cfi_offset 4, -12
 643              		.cfi_offset 7, -8
 644              		.cfi_offset 14, -4
 645 0002 85B0     		sub	sp, sp, #20
 646              		.cfi_def_cfa_offset 32
 647 0004 00AF     		add	r7, sp, #0
 648              		.cfi_def_cfa_register 7
 649 0006 7860     		str	r0, [r7, #4]
 548:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 22


 549:.\Generated_Source\PSoC4/PWM_B.c **** 
 550:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 650              		.loc 1 550 0
 651 0008 3C1C     		mov	r4, r7
 652 000a 0F34     		add	r4, r4, #15
 653 000c FFF7FEFF 		bl	CyEnterCriticalSection
 654 0010 031C     		mov	r3, r0
 655 0012 2370     		strb	r3, [r4]
 551:.\Generated_Source\PSoC4/PWM_B.c **** 
 552:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_PRESCALER_MASK;
 656              		.loc 1 552 0
 657 0014 0B4B     		ldr	r3, .L36
 658 0016 0B4A     		ldr	r2, .L36
 659 0018 1168     		ldr	r1, [r2]
 660 001a 0B4A     		ldr	r2, .L36+4
 661 001c 0A40     		and	r2, r1
 662 001e 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((deadTime & PWM_B_8BIT_MASK) <<
 663              		.loc 1 553 0
 664 0020 084B     		ldr	r3, .L36
 665 0022 084A     		ldr	r2, .L36
 666 0024 1168     		ldr	r1, [r2]
 667 0026 7A68     		ldr	r2, [r7, #4]
 668 0028 1202     		lsl	r2, r2, #8
 669 002a 1204     		lsl	r2, r2, #16
 670 002c 120C     		lsr	r2, r2, #16
 671 002e 0A43     		orr	r2, r1
 672 0030 1A60     		str	r2, [r3]
 554:.\Generated_Source\PSoC4/PWM_B.c ****                                                           PWM_B_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PWM_B.c **** 
 556:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 673              		.loc 1 556 0
 674 0032 3B1C     		mov	r3, r7
 675 0034 0F33     		add	r3, r3, #15
 676 0036 1B78     		ldrb	r3, [r3]
 677 0038 181C     		mov	r0, r3
 678 003a FFF7FEFF 		bl	CyExitCriticalSection
 557:.\Generated_Source\PSoC4/PWM_B.c **** }
 679              		.loc 1 557 0
 680 003e BD46     		mov	sp, r7
 681 0040 05B0     		add	sp, sp, #20
 682              		@ sp needed
 683 0042 90BD     		pop	{r4, r7, pc}
 684              	.L37:
 685              		.align	2
 686              	.L36:
 687 0044 00010540 		.word	1074069760
 688 0048 FF00FFFF 		.word	-65281
 689              		.cfi_endproc
 690              	.LFE11:
 691              		.size	PWM_B_SetPWMDeadTime, .-PWM_B_SetPWMDeadTime
 692              		.section	.text.PWM_B_SetPWMInvert,"ax",%progbits
 693              		.align	2
 694              		.global	PWM_B_SetPWMInvert
 695              		.code	16
 696              		.thumb_func
 697              		.type	PWM_B_SetPWMInvert, %function
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 23


 698              	PWM_B_SetPWMInvert:
 699              	.LFB12:
 558:.\Generated_Source\PSoC4/PWM_B.c **** 
 559:.\Generated_Source\PSoC4/PWM_B.c **** 
 560:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPWMInvert
 562:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PWM_B.c **** *
 564:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 565:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PWM_B.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PWM_B.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PWM_B.c **** *
 569:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PWM_B.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 572:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PWM_B.c **** *         - PWM_B_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PWM_B.c **** *
 575:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 576:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 577:.\Generated_Source\PSoC4/PWM_B.c **** *
 578:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PWM_B.c **** {
 700              		.loc 1 580 0
 701              		.cfi_startproc
 702 0000 90B5     		push	{r4, r7, lr}
 703              		.cfi_def_cfa_offset 12
 704              		.cfi_offset 4, -12
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 85B0     		sub	sp, sp, #20
 708              		.cfi_def_cfa_offset 32
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 581:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PWM_B.c **** 
 583:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 712              		.loc 1 583 0
 713 0008 3C1C     		mov	r4, r7
 714 000a 0F34     		add	r4, r4, #15
 715 000c FFF7FEFF 		bl	CyEnterCriticalSection
 716 0010 031C     		mov	r3, r0
 717 0012 2370     		strb	r3, [r4]
 584:.\Generated_Source\PSoC4/PWM_B.c **** 
 585:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_INV_OUT_MASK;
 718              		.loc 1 585 0
 719 0014 0A4B     		ldr	r3, .L39
 720 0016 0A4A     		ldr	r2, .L39
 721 0018 1168     		ldr	r1, [r2]
 722 001a 0A4A     		ldr	r2, .L39+4
 723 001c 0A40     		and	r2, r1
 724 001e 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= mask;
 725              		.loc 1 586 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 24


 726 0020 074B     		ldr	r3, .L39
 727 0022 074A     		ldr	r2, .L39
 728 0024 1168     		ldr	r1, [r2]
 729 0026 7A68     		ldr	r2, [r7, #4]
 730 0028 0A43     		orr	r2, r1
 731 002a 1A60     		str	r2, [r3]
 587:.\Generated_Source\PSoC4/PWM_B.c **** 
 588:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 732              		.loc 1 588 0
 733 002c 3B1C     		mov	r3, r7
 734 002e 0F33     		add	r3, r3, #15
 735 0030 1B78     		ldrb	r3, [r3]
 736 0032 181C     		mov	r0, r3
 737 0034 FFF7FEFF 		bl	CyExitCriticalSection
 589:.\Generated_Source\PSoC4/PWM_B.c **** }
 738              		.loc 1 589 0
 739 0038 BD46     		mov	sp, r7
 740 003a 05B0     		add	sp, sp, #20
 741              		@ sp needed
 742 003c 90BD     		pop	{r4, r7, pc}
 743              	.L40:
 744 003e C046     		.align	2
 745              	.L39:
 746 0040 00010540 		.word	1074069760
 747 0044 FFFFCFFF 		.word	-3145729
 748              		.cfi_endproc
 749              	.LFE12:
 750              		.size	PWM_B_SetPWMInvert, .-PWM_B_SetPWMInvert
 751              		.section	.text.PWM_B_WriteCounter,"ax",%progbits
 752              		.align	2
 753              		.global	PWM_B_WriteCounter
 754              		.code	16
 755              		.thumb_func
 756              		.type	PWM_B_WriteCounter, %function
 757              	PWM_B_WriteCounter:
 758              	.LFB13:
 590:.\Generated_Source\PSoC4/PWM_B.c **** 
 591:.\Generated_Source\PSoC4/PWM_B.c **** 
 592:.\Generated_Source\PSoC4/PWM_B.c **** 
 593:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WriteCounter
 595:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PWM_B.c **** *
 597:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 598:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PWM_B.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PWM_B.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PWM_B.c **** *
 602:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PWM_B.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PWM_B.c **** *
 605:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 606:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 607:.\Generated_Source\PSoC4/PWM_B.c **** *
 608:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PWM_B.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 25


 759              		.loc 1 610 0
 760              		.cfi_startproc
 761 0000 80B5     		push	{r7, lr}
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
 765 0002 82B0     		sub	sp, sp, #8
 766              		.cfi_def_cfa_offset 16
 767 0004 00AF     		add	r7, sp, #0
 768              		.cfi_def_cfa_register 7
 769 0006 7860     		str	r0, [r7, #4]
 611:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_COUNTER_REG = (count & PWM_B_16BIT_MASK);
 770              		.loc 1 611 0
 771 0008 034B     		ldr	r3, .L42
 772 000a 7A68     		ldr	r2, [r7, #4]
 773 000c 1204     		lsl	r2, r2, #16
 774 000e 120C     		lsr	r2, r2, #16
 775 0010 1A60     		str	r2, [r3]
 612:.\Generated_Source\PSoC4/PWM_B.c **** }
 776              		.loc 1 612 0
 777 0012 BD46     		mov	sp, r7
 778 0014 02B0     		add	sp, sp, #8
 779              		@ sp needed
 780 0016 80BD     		pop	{r7, pc}
 781              	.L43:
 782              		.align	2
 783              	.L42:
 784 0018 08010540 		.word	1074069768
 785              		.cfi_endproc
 786              	.LFE13:
 787              		.size	PWM_B_WriteCounter, .-PWM_B_WriteCounter
 788              		.section	.text.PWM_B_ReadCounter,"ax",%progbits
 789              		.align	2
 790              		.global	PWM_B_ReadCounter
 791              		.code	16
 792              		.thumb_func
 793              		.type	PWM_B_ReadCounter, %function
 794              	PWM_B_ReadCounter:
 795              	.LFB14:
 613:.\Generated_Source\PSoC4/PWM_B.c **** 
 614:.\Generated_Source\PSoC4/PWM_B.c **** 
 615:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCounter
 617:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PWM_B.c **** *
 619:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 620:.\Generated_Source\PSoC4/PWM_B.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PWM_B.c **** *
 622:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 624:.\Generated_Source\PSoC4/PWM_B.c **** *
 625:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 626:.\Generated_Source\PSoC4/PWM_B.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PWM_B.c **** *
 628:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PWM_B.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 26


 796              		.loc 1 630 0
 797              		.cfi_startproc
 798 0000 80B5     		push	{r7, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 631:.\Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_COUNTER_REG & PWM_B_16BIT_MASK);
 804              		.loc 1 631 0
 805 0004 034B     		ldr	r3, .L46
 806 0006 1B68     		ldr	r3, [r3]
 807 0008 1B04     		lsl	r3, r3, #16
 808 000a 1B0C     		lsr	r3, r3, #16
 632:.\Generated_Source\PSoC4/PWM_B.c **** }
 809              		.loc 1 632 0
 810 000c 181C     		mov	r0, r3
 811 000e BD46     		mov	sp, r7
 812              		@ sp needed
 813 0010 80BD     		pop	{r7, pc}
 814              	.L47:
 815 0012 C046     		.align	2
 816              	.L46:
 817 0014 08010540 		.word	1074069768
 818              		.cfi_endproc
 819              	.LFE14:
 820              		.size	PWM_B_ReadCounter, .-PWM_B_ReadCounter
 821              		.section	.text.PWM_B_SetCounterMode,"ax",%progbits
 822              		.align	2
 823              		.global	PWM_B_SetCounterMode
 824              		.code	16
 825              		.thumb_func
 826              		.type	PWM_B_SetCounterMode, %function
 827              	PWM_B_SetCounterMode:
 828              	.LFB15:
 633:.\Generated_Source\PSoC4/PWM_B.c **** 
 634:.\Generated_Source\PSoC4/PWM_B.c **** 
 635:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetCounterMode
 637:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PWM_B.c **** *
 639:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 640:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PWM_B.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PWM_B.c **** *
 643:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PWM_B.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 646:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PWM_B.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PWM_B.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PWM_B.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PWM_B.c **** *
 654:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 27


 655:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 656:.\Generated_Source\PSoC4/PWM_B.c **** *
 657:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PWM_B.c **** {
 829              		.loc 1 659 0
 830              		.cfi_startproc
 831 0000 90B5     		push	{r4, r7, lr}
 832              		.cfi_def_cfa_offset 12
 833              		.cfi_offset 4, -12
 834              		.cfi_offset 7, -8
 835              		.cfi_offset 14, -4
 836 0002 85B0     		sub	sp, sp, #20
 837              		.cfi_def_cfa_offset 32
 838 0004 00AF     		add	r7, sp, #0
 839              		.cfi_def_cfa_register 7
 840 0006 7860     		str	r0, [r7, #4]
 660:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PWM_B.c **** 
 662:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 841              		.loc 1 662 0
 842 0008 3C1C     		mov	r4, r7
 843 000a 0F34     		add	r4, r4, #15
 844 000c FFF7FEFF 		bl	CyEnterCriticalSection
 845 0010 031C     		mov	r3, r0
 846 0012 2370     		strb	r3, [r4]
 663:.\Generated_Source\PSoC4/PWM_B.c **** 
 664:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_UPDOWN_MASK;
 847              		.loc 1 664 0
 848 0014 0A4B     		ldr	r3, .L49
 849 0016 0A4A     		ldr	r2, .L49
 850 0018 1168     		ldr	r1, [r2]
 851 001a 0A4A     		ldr	r2, .L49+4
 852 001c 0A40     		and	r2, r1
 853 001e 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= counterMode;
 854              		.loc 1 665 0
 855 0020 074B     		ldr	r3, .L49
 856 0022 074A     		ldr	r2, .L49
 857 0024 1168     		ldr	r1, [r2]
 858 0026 7A68     		ldr	r2, [r7, #4]
 859 0028 0A43     		orr	r2, r1
 860 002a 1A60     		str	r2, [r3]
 666:.\Generated_Source\PSoC4/PWM_B.c **** 
 667:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 861              		.loc 1 667 0
 862 002c 3B1C     		mov	r3, r7
 863 002e 0F33     		add	r3, r3, #15
 864 0030 1B78     		ldrb	r3, [r3]
 865 0032 181C     		mov	r0, r3
 866 0034 FFF7FEFF 		bl	CyExitCriticalSection
 668:.\Generated_Source\PSoC4/PWM_B.c **** }
 867              		.loc 1 668 0
 868 0038 BD46     		mov	sp, r7
 869 003a 05B0     		add	sp, sp, #20
 870              		@ sp needed
 871 003c 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 28


 872              	.L50:
 873 003e C046     		.align	2
 874              	.L49:
 875 0040 00010540 		.word	1074069760
 876 0044 FFFFFCFF 		.word	-196609
 877              		.cfi_endproc
 878              	.LFE15:
 879              		.size	PWM_B_SetCounterMode, .-PWM_B_SetCounterMode
 880              		.section	.text.PWM_B_WritePeriod,"ax",%progbits
 881              		.align	2
 882              		.global	PWM_B_WritePeriod
 883              		.code	16
 884              		.thumb_func
 885              		.type	PWM_B_WritePeriod, %function
 886              	PWM_B_WritePeriod:
 887              	.LFB16:
 669:.\Generated_Source\PSoC4/PWM_B.c **** 
 670:.\Generated_Source\PSoC4/PWM_B.c **** 
 671:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WritePeriod
 673:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PWM_B.c **** *
 675:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 676:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PWM_B.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PWM_B.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PWM_B.c **** *
 680:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PWM_B.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PWM_B.c **** *
 683:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 684:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 685:.\Generated_Source\PSoC4/PWM_B.c **** *
 686:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PWM_B.c **** {
 888              		.loc 1 688 0
 889              		.cfi_startproc
 890 0000 80B5     		push	{r7, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 82B0     		sub	sp, sp, #8
 895              		.cfi_def_cfa_offset 16
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 898 0006 7860     		str	r0, [r7, #4]
 689:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_PERIOD_REG = (period & PWM_B_16BIT_MASK);
 899              		.loc 1 689 0
 900 0008 034B     		ldr	r3, .L52
 901 000a 7A68     		ldr	r2, [r7, #4]
 902 000c 1204     		lsl	r2, r2, #16
 903 000e 120C     		lsr	r2, r2, #16
 904 0010 1A60     		str	r2, [r3]
 690:.\Generated_Source\PSoC4/PWM_B.c **** }
 905              		.loc 1 690 0
 906 0012 BD46     		mov	sp, r7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 29


 907 0014 02B0     		add	sp, sp, #8
 908              		@ sp needed
 909 0016 80BD     		pop	{r7, pc}
 910              	.L53:
 911              		.align	2
 912              	.L52:
 913 0018 14010540 		.word	1074069780
 914              		.cfi_endproc
 915              	.LFE16:
 916              		.size	PWM_B_WritePeriod, .-PWM_B_WritePeriod
 917              		.section	.text.PWM_B_ReadPeriod,"ax",%progbits
 918              		.align	2
 919              		.global	PWM_B_ReadPeriod
 920              		.code	16
 921              		.thumb_func
 922              		.type	PWM_B_ReadPeriod, %function
 923              	PWM_B_ReadPeriod:
 924              	.LFB17:
 691:.\Generated_Source\PSoC4/PWM_B.c **** 
 692:.\Generated_Source\PSoC4/PWM_B.c **** 
 693:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadPeriod
 695:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PWM_B.c **** *
 697:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 698:.\Generated_Source\PSoC4/PWM_B.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PWM_B.c **** *
 700:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 702:.\Generated_Source\PSoC4/PWM_B.c **** *
 703:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 704:.\Generated_Source\PSoC4/PWM_B.c **** *  Period value
 705:.\Generated_Source\PSoC4/PWM_B.c **** *
 706:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PWM_B.c **** {
 925              		.loc 1 708 0
 926              		.cfi_startproc
 927 0000 80B5     		push	{r7, lr}
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 7, -8
 930              		.cfi_offset 14, -4
 931 0002 00AF     		add	r7, sp, #0
 932              		.cfi_def_cfa_register 7
 709:.\Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_PERIOD_REG & PWM_B_16BIT_MASK);
 933              		.loc 1 709 0
 934 0004 034B     		ldr	r3, .L56
 935 0006 1B68     		ldr	r3, [r3]
 936 0008 1B04     		lsl	r3, r3, #16
 937 000a 1B0C     		lsr	r3, r3, #16
 710:.\Generated_Source\PSoC4/PWM_B.c **** }
 938              		.loc 1 710 0
 939 000c 181C     		mov	r0, r3
 940 000e BD46     		mov	sp, r7
 941              		@ sp needed
 942 0010 80BD     		pop	{r7, pc}
 943              	.L57:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 30


 944 0012 C046     		.align	2
 945              	.L56:
 946 0014 14010540 		.word	1074069780
 947              		.cfi_endproc
 948              	.LFE17:
 949              		.size	PWM_B_ReadPeriod, .-PWM_B_ReadPeriod
 950              		.section	.text.PWM_B_SetCompareSwap,"ax",%progbits
 951              		.align	2
 952              		.global	PWM_B_SetCompareSwap
 953              		.code	16
 954              		.thumb_func
 955              		.type	PWM_B_SetCompareSwap, %function
 956              	PWM_B_SetCompareSwap:
 957              	.LFB18:
 711:.\Generated_Source\PSoC4/PWM_B.c **** 
 712:.\Generated_Source\PSoC4/PWM_B.c **** 
 713:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetCompareSwap
 715:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PWM_B.c **** *
 717:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 718:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PWM_B.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PWM_B.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PWM_B.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PWM_B.c **** *
 723:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM_B.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 726:.\Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PWM_B.c **** *
 729:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 730:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 731:.\Generated_Source\PSoC4/PWM_B.c **** *
 732:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PWM_B.c **** {
 958              		.loc 1 734 0
 959              		.cfi_startproc
 960 0000 90B5     		push	{r4, r7, lr}
 961              		.cfi_def_cfa_offset 12
 962              		.cfi_offset 4, -12
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 85B0     		sub	sp, sp, #20
 966              		.cfi_def_cfa_offset 32
 967 0004 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
 969 0006 7860     		str	r0, [r7, #4]
 735:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PWM_B.c **** 
 737:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 970              		.loc 1 737 0
 971 0008 3C1C     		mov	r4, r7
 972 000a 0F34     		add	r4, r4, #15
 973 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 31


 974 0010 031C     		mov	r3, r0
 975 0012 2370     		strb	r3, [r4]
 738:.\Generated_Source\PSoC4/PWM_B.c **** 
 739:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_RELOAD_CC_MASK;
 976              		.loc 1 739 0
 977 0014 0B4B     		ldr	r3, .L59
 978 0016 0B4A     		ldr	r2, .L59
 979 0018 1268     		ldr	r2, [r2]
 980 001a 0121     		mov	r1, #1
 981 001c 8A43     		bic	r2, r1
 982 001e 1A60     		str	r2, [r3]
 740:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= (swapEnable & PWM_B_1BIT_MASK);
 983              		.loc 1 740 0
 984 0020 084B     		ldr	r3, .L59
 985 0022 084A     		ldr	r2, .L59
 986 0024 1168     		ldr	r1, [r2]
 987 0026 7868     		ldr	r0, [r7, #4]
 988 0028 0122     		mov	r2, #1
 989 002a 0240     		and	r2, r0
 990 002c 0A43     		orr	r2, r1
 991 002e 1A60     		str	r2, [r3]
 741:.\Generated_Source\PSoC4/PWM_B.c **** 
 742:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 992              		.loc 1 742 0
 993 0030 3B1C     		mov	r3, r7
 994 0032 0F33     		add	r3, r3, #15
 995 0034 1B78     		ldrb	r3, [r3]
 996 0036 181C     		mov	r0, r3
 997 0038 FFF7FEFF 		bl	CyExitCriticalSection
 743:.\Generated_Source\PSoC4/PWM_B.c **** }
 998              		.loc 1 743 0
 999 003c BD46     		mov	sp, r7
 1000 003e 05B0     		add	sp, sp, #20
 1001              		@ sp needed
 1002 0040 90BD     		pop	{r4, r7, pc}
 1003              	.L60:
 1004 0042 C046     		.align	2
 1005              	.L59:
 1006 0044 00010540 		.word	1074069760
 1007              		.cfi_endproc
 1008              	.LFE18:
 1009              		.size	PWM_B_SetCompareSwap, .-PWM_B_SetCompareSwap
 1010              		.section	.text.PWM_B_WritePeriodBuf,"ax",%progbits
 1011              		.align	2
 1012              		.global	PWM_B_WritePeriodBuf
 1013              		.code	16
 1014              		.thumb_func
 1015              		.type	PWM_B_WritePeriodBuf, %function
 1016              	PWM_B_WritePeriodBuf:
 1017              	.LFB19:
 744:.\Generated_Source\PSoC4/PWM_B.c **** 
 745:.\Generated_Source\PSoC4/PWM_B.c **** 
 746:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_B.c **** *
 750:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 32


 751:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PWM_B.c **** *
 753:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PWM_B.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PWM_B.c **** *
 756:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 757:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 758:.\Generated_Source\PSoC4/PWM_B.c **** *
 759:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PWM_B.c **** {
 1018              		.loc 1 761 0
 1019              		.cfi_startproc
 1020 0000 80B5     		push	{r7, lr}
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 82B0     		sub	sp, sp, #8
 1025              		.cfi_def_cfa_offset 16
 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 1028 0006 7860     		str	r0, [r7, #4]
 762:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_PERIOD_BUF_REG = (periodBuf & PWM_B_16BIT_MASK);
 1029              		.loc 1 762 0
 1030 0008 034B     		ldr	r3, .L62
 1031 000a 7A68     		ldr	r2, [r7, #4]
 1032 000c 1204     		lsl	r2, r2, #16
 1033 000e 120C     		lsr	r2, r2, #16
 1034 0010 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/PWM_B.c **** }
 1035              		.loc 1 763 0
 1036 0012 BD46     		mov	sp, r7
 1037 0014 02B0     		add	sp, sp, #8
 1038              		@ sp needed
 1039 0016 80BD     		pop	{r7, pc}
 1040              	.L63:
 1041              		.align	2
 1042              	.L62:
 1043 0018 18010540 		.word	1074069784
 1044              		.cfi_endproc
 1045              	.LFE19:
 1046              		.size	PWM_B_WritePeriodBuf, .-PWM_B_WritePeriodBuf
 1047              		.section	.text.PWM_B_ReadPeriodBuf,"ax",%progbits
 1048              		.align	2
 1049              		.global	PWM_B_ReadPeriodBuf
 1050              		.code	16
 1051              		.thumb_func
 1052              		.type	PWM_B_ReadPeriodBuf, %function
 1053              	PWM_B_ReadPeriodBuf:
 1054              	.LFB20:
 764:.\Generated_Source\PSoC4/PWM_B.c **** 
 765:.\Generated_Source\PSoC4/PWM_B.c **** 
 766:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PWM_B.c **** *
 770:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 33


 771:.\Generated_Source\PSoC4/PWM_B.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PWM_B.c **** *
 773:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 775:.\Generated_Source\PSoC4/PWM_B.c **** *
 776:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 777:.\Generated_Source\PSoC4/PWM_B.c **** *  Period value
 778:.\Generated_Source\PSoC4/PWM_B.c **** *
 779:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PWM_B.c **** {
 1055              		.loc 1 781 0
 1056              		.cfi_startproc
 1057 0000 80B5     		push	{r7, lr}
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 00AF     		add	r7, sp, #0
 1062              		.cfi_def_cfa_register 7
 782:.\Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_PERIOD_BUF_REG & PWM_B_16BIT_MASK);
 1063              		.loc 1 782 0
 1064 0004 034B     		ldr	r3, .L66
 1065 0006 1B68     		ldr	r3, [r3]
 1066 0008 1B04     		lsl	r3, r3, #16
 1067 000a 1B0C     		lsr	r3, r3, #16
 783:.\Generated_Source\PSoC4/PWM_B.c **** }
 1068              		.loc 1 783 0
 1069 000c 181C     		mov	r0, r3
 1070 000e BD46     		mov	sp, r7
 1071              		@ sp needed
 1072 0010 80BD     		pop	{r7, pc}
 1073              	.L67:
 1074 0012 C046     		.align	2
 1075              	.L66:
 1076 0014 18010540 		.word	1074069784
 1077              		.cfi_endproc
 1078              	.LFE20:
 1079              		.size	PWM_B_ReadPeriodBuf, .-PWM_B_ReadPeriodBuf
 1080              		.section	.text.PWM_B_SetPeriodSwap,"ax",%progbits
 1081              		.align	2
 1082              		.global	PWM_B_SetPeriodSwap
 1083              		.code	16
 1084              		.thumb_func
 1085              		.type	PWM_B_SetPeriodSwap, %function
 1086              	PWM_B_SetPeriodSwap:
 1087              	.LFB21:
 784:.\Generated_Source\PSoC4/PWM_B.c **** 
 785:.\Generated_Source\PSoC4/PWM_B.c **** 
 786:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PWM_B.c **** *
 790:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 791:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PWM_B.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PWM_B.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PWM_B.c **** *  switch event.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 34


 795:.\Generated_Source\PSoC4/PWM_B.c **** *
 796:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM_B.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
 799:.\Generated_Source\PSoC4/PWM_B.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PWM_B.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PWM_B.c **** *
 802:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 803:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 804:.\Generated_Source\PSoC4/PWM_B.c **** *
 805:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PWM_B.c **** {
 1088              		.loc 1 807 0
 1089              		.cfi_startproc
 1090 0000 90B5     		push	{r4, r7, lr}
 1091              		.cfi_def_cfa_offset 12
 1092              		.cfi_offset 4, -12
 1093              		.cfi_offset 7, -8
 1094              		.cfi_offset 14, -4
 1095 0002 85B0     		sub	sp, sp, #20
 1096              		.cfi_def_cfa_offset 32
 1097 0004 00AF     		add	r7, sp, #0
 1098              		.cfi_def_cfa_register 7
 1099 0006 7860     		str	r0, [r7, #4]
 808:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PWM_B.c **** 
 810:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1100              		.loc 1 810 0
 1101 0008 3C1C     		mov	r4, r7
 1102 000a 0F34     		add	r4, r4, #15
 1103 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1104 0010 031C     		mov	r3, r0
 1105 0012 2370     		strb	r3, [r4]
 811:.\Generated_Source\PSoC4/PWM_B.c **** 
 812:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG &= (uint32)~PWM_B_RELOAD_PERIOD_MASK;
 1106              		.loc 1 812 0
 1107 0014 0B4B     		ldr	r3, .L69
 1108 0016 0B4A     		ldr	r2, .L69
 1109 0018 1268     		ldr	r2, [r2]
 1110 001a 0221     		mov	r1, #2
 1111 001c 8A43     		bic	r2, r1
 1112 001e 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_CONTROL_REG |= ((uint32)((swapEnable & PWM_B_1BIT_MASK) <<
 1113              		.loc 1 813 0
 1114 0020 084B     		ldr	r3, .L69
 1115 0022 084A     		ldr	r2, .L69
 1116 0024 1168     		ldr	r1, [r2]
 1117 0026 7868     		ldr	r0, [r7, #4]
 1118 0028 0122     		mov	r2, #1
 1119 002a 0240     		and	r2, r0
 1120 002c 5200     		lsl	r2, r2, #1
 1121 002e 0A43     		orr	r2, r1
 1122 0030 1A60     		str	r2, [r3]
 814:.\Generated_Source\PSoC4/PWM_B.c ****                                                             PWM_B_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PWM_B.c **** 
 816:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 35


 1123              		.loc 1 816 0
 1124 0032 3B1C     		mov	r3, r7
 1125 0034 0F33     		add	r3, r3, #15
 1126 0036 1B78     		ldrb	r3, [r3]
 1127 0038 181C     		mov	r0, r3
 1128 003a FFF7FEFF 		bl	CyExitCriticalSection
 817:.\Generated_Source\PSoC4/PWM_B.c **** }
 1129              		.loc 1 817 0
 1130 003e BD46     		mov	sp, r7
 1131 0040 05B0     		add	sp, sp, #20
 1132              		@ sp needed
 1133 0042 90BD     		pop	{r4, r7, pc}
 1134              	.L70:
 1135              		.align	2
 1136              	.L69:
 1137 0044 00010540 		.word	1074069760
 1138              		.cfi_endproc
 1139              	.LFE21:
 1140              		.size	PWM_B_SetPeriodSwap, .-PWM_B_SetPeriodSwap
 1141              		.section	.text.PWM_B_WriteCompare,"ax",%progbits
 1142              		.align	2
 1143              		.global	PWM_B_WriteCompare
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	PWM_B_WriteCompare, %function
 1147              	PWM_B_WriteCompare:
 1148              	.LFB22:
 818:.\Generated_Source\PSoC4/PWM_B.c **** 
 819:.\Generated_Source\PSoC4/PWM_B.c **** 
 820:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WriteCompare
 822:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PWM_B.c **** *
 824:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 825:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PWM_B.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PWM_B.c **** *
 828:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PWM_B.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PWM_B.c **** *
 831:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 832:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 833:.\Generated_Source\PSoC4/PWM_B.c **** *
 834:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PWM_B.c **** {
 1149              		.loc 1 836 0
 1150              		.cfi_startproc
 1151 0000 80B5     		push	{r7, lr}
 1152              		.cfi_def_cfa_offset 8
 1153              		.cfi_offset 7, -8
 1154              		.cfi_offset 14, -4
 1155 0002 82B0     		sub	sp, sp, #8
 1156              		.cfi_def_cfa_offset 16
 1157 0004 00AF     		add	r7, sp, #0
 1158              		.cfi_def_cfa_register 7
 1159 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 36


 837:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PWM_B.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PWM_B.c **** 
 841:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PWM_B.c ****         currentMode = ((PWM_B_CONTROL_REG & PWM_B_UPDOWN_MASK) >> PWM_B_UPDOWN_SHIFT);
 843:.\Generated_Source\PSoC4/PWM_B.c **** 
 844:.\Generated_Source\PSoC4/PWM_B.c ****         if (((uint32)PWM_B__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PWM_B.c ****         {
 846:.\Generated_Source\PSoC4/PWM_B.c ****             compare++;
 847:.\Generated_Source\PSoC4/PWM_B.c ****         }
 848:.\Generated_Source\PSoC4/PWM_B.c ****         else if (((uint32)PWM_B__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PWM_B.c ****         {
 850:.\Generated_Source\PSoC4/PWM_B.c ****             compare--;
 851:.\Generated_Source\PSoC4/PWM_B.c ****         }
 852:.\Generated_Source\PSoC4/PWM_B.c ****         else
 853:.\Generated_Source\PSoC4/PWM_B.c ****         {
 854:.\Generated_Source\PSoC4/PWM_B.c ****         }
 855:.\Generated_Source\PSoC4/PWM_B.c ****         
 856:.\Generated_Source\PSoC4/PWM_B.c ****     
 857:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PWM_B.c ****     
 859:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_COMP_CAP_REG = (compare & PWM_B_16BIT_MASK);
 1160              		.loc 1 859 0
 1161 0008 034B     		ldr	r3, .L72
 1162 000a 7A68     		ldr	r2, [r7, #4]
 1163 000c 1204     		lsl	r2, r2, #16
 1164 000e 120C     		lsr	r2, r2, #16
 1165 0010 1A60     		str	r2, [r3]
 860:.\Generated_Source\PSoC4/PWM_B.c **** }
 1166              		.loc 1 860 0
 1167 0012 BD46     		mov	sp, r7
 1168 0014 02B0     		add	sp, sp, #8
 1169              		@ sp needed
 1170 0016 80BD     		pop	{r7, pc}
 1171              	.L73:
 1172              		.align	2
 1173              	.L72:
 1174 0018 0C010540 		.word	1074069772
 1175              		.cfi_endproc
 1176              	.LFE22:
 1177              		.size	PWM_B_WriteCompare, .-PWM_B_WriteCompare
 1178              		.section	.text.PWM_B_ReadCompare,"ax",%progbits
 1179              		.align	2
 1180              		.global	PWM_B_ReadCompare
 1181              		.code	16
 1182              		.thumb_func
 1183              		.type	PWM_B_ReadCompare, %function
 1184              	PWM_B_ReadCompare:
 1185              	.LFB23:
 861:.\Generated_Source\PSoC4/PWM_B.c **** 
 862:.\Generated_Source\PSoC4/PWM_B.c **** 
 863:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCompare
 865:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PWM_B.c **** *
 867:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 37


 868:.\Generated_Source\PSoC4/PWM_B.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PWM_B.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PWM_B.c **** *
 871:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 873:.\Generated_Source\PSoC4/PWM_B.c **** *
 874:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 875:.\Generated_Source\PSoC4/PWM_B.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PWM_B.c **** *
 877:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PWM_B.c **** {
 1186              		.loc 1 879 0
 1187              		.cfi_startproc
 1188 0000 80B5     		push	{r7, lr}
 1189              		.cfi_def_cfa_offset 8
 1190              		.cfi_offset 7, -8
 1191              		.cfi_offset 14, -4
 1192 0002 00AF     		add	r7, sp, #0
 1193              		.cfi_def_cfa_register 7
 880:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PWM_B.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PWM_B.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PWM_B.c **** 
 885:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/PWM_B.c ****         currentMode = ((PWM_B_CONTROL_REG & PWM_B_UPDOWN_MASK) >> PWM_B_UPDOWN_SHIFT);
 887:.\Generated_Source\PSoC4/PWM_B.c ****         
 888:.\Generated_Source\PSoC4/PWM_B.c ****         regVal = PWM_B_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PWM_B.c ****         
 890:.\Generated_Source\PSoC4/PWM_B.c ****         if (((uint32)PWM_B__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PWM_B.c ****         {
 892:.\Generated_Source\PSoC4/PWM_B.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PWM_B.c ****         }
 894:.\Generated_Source\PSoC4/PWM_B.c ****         else if (((uint32)PWM_B__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PWM_B.c ****         {
 896:.\Generated_Source\PSoC4/PWM_B.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PWM_B.c ****         }
 898:.\Generated_Source\PSoC4/PWM_B.c ****         else
 899:.\Generated_Source\PSoC4/PWM_B.c ****         {
 900:.\Generated_Source\PSoC4/PWM_B.c ****         }
 901:.\Generated_Source\PSoC4/PWM_B.c **** 
 902:.\Generated_Source\PSoC4/PWM_B.c ****         return (regVal & PWM_B_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PWM_B.c ****     #else
 904:.\Generated_Source\PSoC4/PWM_B.c ****         return (PWM_B_COMP_CAP_REG & PWM_B_16BIT_MASK);
 1194              		.loc 1 904 0
 1195 0004 034B     		ldr	r3, .L76
 1196 0006 1B68     		ldr	r3, [r3]
 1197 0008 1B04     		lsl	r3, r3, #16
 1198 000a 1B0C     		lsr	r3, r3, #16
 905:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM_B.c **** }
 1199              		.loc 1 906 0
 1200 000c 181C     		mov	r0, r3
 1201 000e BD46     		mov	sp, r7
 1202              		@ sp needed
 1203 0010 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 38


 1204              	.L77:
 1205 0012 C046     		.align	2
 1206              	.L76:
 1207 0014 0C010540 		.word	1074069772
 1208              		.cfi_endproc
 1209              	.LFE23:
 1210              		.size	PWM_B_ReadCompare, .-PWM_B_ReadCompare
 1211              		.section	.text.PWM_B_WriteCompareBuf,"ax",%progbits
 1212              		.align	2
 1213              		.global	PWM_B_WriteCompareBuf
 1214              		.code	16
 1215              		.thumb_func
 1216              		.type	PWM_B_WriteCompareBuf, %function
 1217              	PWM_B_WriteCompareBuf:
 1218              	.LFB24:
 907:.\Generated_Source\PSoC4/PWM_B.c **** 
 908:.\Generated_Source\PSoC4/PWM_B.c **** 
 909:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PWM_B.c **** *
 913:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 914:.\Generated_Source\PSoC4/PWM_B.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PWM_B.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PWM_B.c **** *
 917:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PWM_B.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PWM_B.c **** *
 920:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 921:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 922:.\Generated_Source\PSoC4/PWM_B.c **** *
 923:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PWM_B.c **** {
 1219              		.loc 1 925 0
 1220              		.cfi_startproc
 1221 0000 80B5     		push	{r7, lr}
 1222              		.cfi_def_cfa_offset 8
 1223              		.cfi_offset 7, -8
 1224              		.cfi_offset 14, -4
 1225 0002 82B0     		sub	sp, sp, #8
 1226              		.cfi_def_cfa_offset 16
 1227 0004 00AF     		add	r7, sp, #0
 1228              		.cfi_def_cfa_register 7
 1229 0006 7860     		str	r0, [r7, #4]
 926:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PWM_B.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PWM_B.c **** 
 930:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/PWM_B.c ****         currentMode = ((PWM_B_CONTROL_REG & PWM_B_UPDOWN_MASK) >> PWM_B_UPDOWN_SHIFT);
 932:.\Generated_Source\PSoC4/PWM_B.c **** 
 933:.\Generated_Source\PSoC4/PWM_B.c ****         if (((uint32)PWM_B__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PWM_B.c ****         {
 935:.\Generated_Source\PSoC4/PWM_B.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PWM_B.c ****         }
 937:.\Generated_Source\PSoC4/PWM_B.c ****         else if (((uint32)PWM_B__COUNT_UP == currentMode) && (0u != compareBuf))
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 39


 938:.\Generated_Source\PSoC4/PWM_B.c ****         {
 939:.\Generated_Source\PSoC4/PWM_B.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PWM_B.c ****         }
 941:.\Generated_Source\PSoC4/PWM_B.c ****         else
 942:.\Generated_Source\PSoC4/PWM_B.c ****         {
 943:.\Generated_Source\PSoC4/PWM_B.c ****         }
 944:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PWM_B.c ****     
 946:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_COMP_CAP_BUF_REG = (compareBuf & PWM_B_16BIT_MASK);
 1230              		.loc 1 946 0
 1231 0008 034B     		ldr	r3, .L79
 1232 000a 7A68     		ldr	r2, [r7, #4]
 1233 000c 1204     		lsl	r2, r2, #16
 1234 000e 120C     		lsr	r2, r2, #16
 1235 0010 1A60     		str	r2, [r3]
 947:.\Generated_Source\PSoC4/PWM_B.c **** }
 1236              		.loc 1 947 0
 1237 0012 BD46     		mov	sp, r7
 1238 0014 02B0     		add	sp, sp, #8
 1239              		@ sp needed
 1240 0016 80BD     		pop	{r7, pc}
 1241              	.L80:
 1242              		.align	2
 1243              	.L79:
 1244 0018 10010540 		.word	1074069776
 1245              		.cfi_endproc
 1246              	.LFE24:
 1247              		.size	PWM_B_WriteCompareBuf, .-PWM_B_WriteCompareBuf
 1248              		.section	.text.PWM_B_ReadCompareBuf,"ax",%progbits
 1249              		.align	2
 1250              		.global	PWM_B_ReadCompareBuf
 1251              		.code	16
 1252              		.thumb_func
 1253              		.type	PWM_B_ReadCompareBuf, %function
 1254              	PWM_B_ReadCompareBuf:
 1255              	.LFB25:
 948:.\Generated_Source\PSoC4/PWM_B.c **** 
 949:.\Generated_Source\PSoC4/PWM_B.c **** 
 950:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PWM_B.c **** *
 954:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
 955:.\Generated_Source\PSoC4/PWM_B.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PWM_B.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PWM_B.c **** *
 958:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PWM_B.c **** *  None
 960:.\Generated_Source\PSoC4/PWM_B.c **** *
 961:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
 962:.\Generated_Source\PSoC4/PWM_B.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PWM_B.c **** *
 964:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PWM_B.c **** {
 1256              		.loc 1 966 0
 1257              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 40


 1258 0000 80B5     		push	{r7, lr}
 1259              		.cfi_def_cfa_offset 8
 1260              		.cfi_offset 7, -8
 1261              		.cfi_offset 14, -4
 1262 0002 00AF     		add	r7, sp, #0
 1263              		.cfi_def_cfa_register 7
 967:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PWM_B.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PWM_B.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PWM_B.c **** 
 972:.\Generated_Source\PSoC4/PWM_B.c ****     #if (PWM_B_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PWM_B.c ****         currentMode = ((PWM_B_CONTROL_REG & PWM_B_UPDOWN_MASK) >> PWM_B_UPDOWN_SHIFT);
 974:.\Generated_Source\PSoC4/PWM_B.c **** 
 975:.\Generated_Source\PSoC4/PWM_B.c ****         regVal = PWM_B_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PWM_B.c ****         
 977:.\Generated_Source\PSoC4/PWM_B.c ****         if (((uint32)PWM_B__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PWM_B.c ****         {
 979:.\Generated_Source\PSoC4/PWM_B.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PWM_B.c ****         }
 981:.\Generated_Source\PSoC4/PWM_B.c ****         else if (((uint32)PWM_B__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PWM_B.c ****         {
 983:.\Generated_Source\PSoC4/PWM_B.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PWM_B.c ****         }
 985:.\Generated_Source\PSoC4/PWM_B.c ****         else
 986:.\Generated_Source\PSoC4/PWM_B.c ****         {
 987:.\Generated_Source\PSoC4/PWM_B.c ****         }
 988:.\Generated_Source\PSoC4/PWM_B.c **** 
 989:.\Generated_Source\PSoC4/PWM_B.c ****         return (regVal & PWM_B_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PWM_B.c ****     #else
 991:.\Generated_Source\PSoC4/PWM_B.c ****         return (PWM_B_COMP_CAP_BUF_REG & PWM_B_16BIT_MASK);
 1264              		.loc 1 991 0
 1265 0004 034B     		ldr	r3, .L83
 1266 0006 1B68     		ldr	r3, [r3]
 1267 0008 1B04     		lsl	r3, r3, #16
 1268 000a 1B0C     		lsr	r3, r3, #16
 992:.\Generated_Source\PSoC4/PWM_B.c ****     #endif /* (PWM_B_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PWM_B.c **** }
 1269              		.loc 1 993 0
 1270 000c 181C     		mov	r0, r3
 1271 000e BD46     		mov	sp, r7
 1272              		@ sp needed
 1273 0010 80BD     		pop	{r7, pc}
 1274              	.L84:
 1275 0012 C046     		.align	2
 1276              	.L83:
 1277 0014 10010540 		.word	1074069776
 1278              		.cfi_endproc
 1279              	.LFE25:
 1280              		.size	PWM_B_ReadCompareBuf, .-PWM_B_ReadCompareBuf
 1281              		.section	.text.PWM_B_ReadCapture,"ax",%progbits
 1282              		.align	2
 1283              		.global	PWM_B_ReadCapture
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	PWM_B_ReadCapture, %function
 1287              	PWM_B_ReadCapture:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 41


 1288              	.LFB26:
 994:.\Generated_Source\PSoC4/PWM_B.c **** 
 995:.\Generated_Source\PSoC4/PWM_B.c **** 
 996:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCapture
 998:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PWM_B.c **** *
1000:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1001:.\Generated_Source\PSoC4/PWM_B.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PWM_B.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PWM_B.c **** *
1004:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1006:.\Generated_Source\PSoC4/PWM_B.c **** *
1007:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1008:.\Generated_Source\PSoC4/PWM_B.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PWM_B.c **** *
1010:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PWM_B.c **** {
 1289              		.loc 1 1012 0
 1290              		.cfi_startproc
 1291 0000 80B5     		push	{r7, lr}
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 14, -4
 1295 0002 00AF     		add	r7, sp, #0
 1296              		.cfi_def_cfa_register 7
1013:.\Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_COMP_CAP_REG & PWM_B_16BIT_MASK);
 1297              		.loc 1 1013 0
 1298 0004 034B     		ldr	r3, .L87
 1299 0006 1B68     		ldr	r3, [r3]
 1300 0008 1B04     		lsl	r3, r3, #16
 1301 000a 1B0C     		lsr	r3, r3, #16
1014:.\Generated_Source\PSoC4/PWM_B.c **** }
 1302              		.loc 1 1014 0
 1303 000c 181C     		mov	r0, r3
 1304 000e BD46     		mov	sp, r7
 1305              		@ sp needed
 1306 0010 80BD     		pop	{r7, pc}
 1307              	.L88:
 1308 0012 C046     		.align	2
 1309              	.L87:
 1310 0014 0C010540 		.word	1074069772
 1311              		.cfi_endproc
 1312              	.LFE26:
 1313              		.size	PWM_B_ReadCapture, .-PWM_B_ReadCapture
 1314              		.section	.text.PWM_B_ReadCaptureBuf,"ax",%progbits
 1315              		.align	2
 1316              		.global	PWM_B_ReadCaptureBuf
 1317              		.code	16
 1318              		.thumb_func
 1319              		.type	PWM_B_ReadCaptureBuf, %function
 1320              	PWM_B_ReadCaptureBuf:
 1321              	.LFB27:
1015:.\Generated_Source\PSoC4/PWM_B.c **** 
1016:.\Generated_Source\PSoC4/PWM_B.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 42


1017:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PWM_B.c **** *
1021:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1022:.\Generated_Source\PSoC4/PWM_B.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PWM_B.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PWM_B.c **** *
1025:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1027:.\Generated_Source\PSoC4/PWM_B.c **** *
1028:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1029:.\Generated_Source\PSoC4/PWM_B.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PWM_B.c **** *
1031:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PWM_B.c **** {
 1322              		.loc 1 1033 0
 1323              		.cfi_startproc
 1324 0000 80B5     		push	{r7, lr}
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 7, -8
 1327              		.cfi_offset 14, -4
 1328 0002 00AF     		add	r7, sp, #0
 1329              		.cfi_def_cfa_register 7
1034:.\Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_COMP_CAP_BUF_REG & PWM_B_16BIT_MASK);
 1330              		.loc 1 1034 0
 1331 0004 034B     		ldr	r3, .L91
 1332 0006 1B68     		ldr	r3, [r3]
 1333 0008 1B04     		lsl	r3, r3, #16
 1334 000a 1B0C     		lsr	r3, r3, #16
1035:.\Generated_Source\PSoC4/PWM_B.c **** }
 1335              		.loc 1 1035 0
 1336 000c 181C     		mov	r0, r3
 1337 000e BD46     		mov	sp, r7
 1338              		@ sp needed
 1339 0010 80BD     		pop	{r7, pc}
 1340              	.L92:
 1341 0012 C046     		.align	2
 1342              	.L91:
 1343 0014 10010540 		.word	1074069776
 1344              		.cfi_endproc
 1345              	.LFE27:
 1346              		.size	PWM_B_ReadCaptureBuf, .-PWM_B_ReadCaptureBuf
 1347              		.section	.text.PWM_B_SetCaptureMode,"ax",%progbits
 1348              		.align	2
 1349              		.global	PWM_B_SetCaptureMode
 1350              		.code	16
 1351              		.thumb_func
 1352              		.type	PWM_B_SetCaptureMode, %function
 1353              	PWM_B_SetCaptureMode:
 1354              	.LFB28:
1036:.\Generated_Source\PSoC4/PWM_B.c **** 
1037:.\Generated_Source\PSoC4/PWM_B.c **** 
1038:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetCaptureMode
1040:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 43


1041:.\Generated_Source\PSoC4/PWM_B.c **** *
1042:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1043:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PWM_B.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/PWM_B.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/PWM_B.c **** *
1047:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1050:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PWM_B.c **** *
1055:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1056:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1057:.\Generated_Source\PSoC4/PWM_B.c **** *
1058:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PWM_B.c **** {
 1355              		.loc 1 1060 0
 1356              		.cfi_startproc
 1357 0000 90B5     		push	{r4, r7, lr}
 1358              		.cfi_def_cfa_offset 12
 1359              		.cfi_offset 4, -12
 1360              		.cfi_offset 7, -8
 1361              		.cfi_offset 14, -4
 1362 0002 85B0     		sub	sp, sp, #20
 1363              		.cfi_def_cfa_offset 32
 1364 0004 00AF     		add	r7, sp, #0
 1365              		.cfi_def_cfa_register 7
 1366 0006 7860     		str	r0, [r7, #4]
1061:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PWM_B.c **** 
1063:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1367              		.loc 1 1063 0
 1368 0008 3C1C     		mov	r4, r7
 1369 000a 0F34     		add	r4, r4, #15
 1370 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1371 0010 031C     		mov	r3, r0
 1372 0012 2370     		strb	r3, [r4]
1064:.\Generated_Source\PSoC4/PWM_B.c **** 
1065:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_CAPTURE_MASK;
 1373              		.loc 1 1065 0
 1374 0014 0A4B     		ldr	r3, .L94
 1375 0016 0A4A     		ldr	r2, .L94
 1376 0018 1268     		ldr	r2, [r2]
 1377 001a 0321     		mov	r1, #3
 1378 001c 8A43     		bic	r2, r1
 1379 001e 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= triggerMode;
 1380              		.loc 1 1066 0
 1381 0020 074B     		ldr	r3, .L94
 1382 0022 074A     		ldr	r2, .L94
 1383 0024 1168     		ldr	r1, [r2]
 1384 0026 7A68     		ldr	r2, [r7, #4]
 1385 0028 0A43     		orr	r2, r1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 44


 1386 002a 1A60     		str	r2, [r3]
1067:.\Generated_Source\PSoC4/PWM_B.c **** 
1068:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1387              		.loc 1 1068 0
 1388 002c 3B1C     		mov	r3, r7
 1389 002e 0F33     		add	r3, r3, #15
 1390 0030 1B78     		ldrb	r3, [r3]
 1391 0032 181C     		mov	r0, r3
 1392 0034 FFF7FEFF 		bl	CyExitCriticalSection
1069:.\Generated_Source\PSoC4/PWM_B.c **** }
 1393              		.loc 1 1069 0
 1394 0038 BD46     		mov	sp, r7
 1395 003a 05B0     		add	sp, sp, #20
 1396              		@ sp needed
 1397 003c 90BD     		pop	{r4, r7, pc}
 1398              	.L95:
 1399 003e C046     		.align	2
 1400              	.L94:
 1401 0040 24010540 		.word	1074069796
 1402              		.cfi_endproc
 1403              	.LFE28:
 1404              		.size	PWM_B_SetCaptureMode, .-PWM_B_SetCaptureMode
 1405              		.section	.text.PWM_B_SetReloadMode,"ax",%progbits
 1406              		.align	2
 1407              		.global	PWM_B_SetReloadMode
 1408              		.code	16
 1409              		.thumb_func
 1410              		.type	PWM_B_SetReloadMode, %function
 1411              	PWM_B_SetReloadMode:
 1412              	.LFB29:
1070:.\Generated_Source\PSoC4/PWM_B.c **** 
1071:.\Generated_Source\PSoC4/PWM_B.c **** 
1072:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetReloadMode
1074:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PWM_B.c **** *
1076:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1077:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PWM_B.c **** *  input.
1079:.\Generated_Source\PSoC4/PWM_B.c **** *
1080:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1083:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PWM_B.c **** *
1088:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1089:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1090:.\Generated_Source\PSoC4/PWM_B.c **** *
1091:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PWM_B.c **** {
 1413              		.loc 1 1093 0
 1414              		.cfi_startproc
 1415 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 45


 1416              		.cfi_def_cfa_offset 12
 1417              		.cfi_offset 4, -12
 1418              		.cfi_offset 7, -8
 1419              		.cfi_offset 14, -4
 1420 0002 85B0     		sub	sp, sp, #20
 1421              		.cfi_def_cfa_offset 32
 1422 0004 00AF     		add	r7, sp, #0
 1423              		.cfi_def_cfa_register 7
 1424 0006 7860     		str	r0, [r7, #4]
1094:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PWM_B.c **** 
1096:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1425              		.loc 1 1096 0
 1426 0008 3C1C     		mov	r4, r7
 1427 000a 0F34     		add	r4, r4, #15
 1428 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1429 0010 031C     		mov	r3, r0
 1430 0012 2370     		strb	r3, [r4]
1097:.\Generated_Source\PSoC4/PWM_B.c **** 
1098:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_RELOAD_MASK;
 1431              		.loc 1 1098 0
 1432 0014 0A4B     		ldr	r3, .L97
 1433 0016 0A4A     		ldr	r2, .L97
 1434 0018 1268     		ldr	r2, [r2]
 1435 001a 3021     		mov	r1, #48
 1436 001c 8A43     		bic	r2, r1
 1437 001e 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_B_RELOAD_SHIFT));
 1438              		.loc 1 1099 0
 1439 0020 074B     		ldr	r3, .L97
 1440 0022 074A     		ldr	r2, .L97
 1441 0024 1168     		ldr	r1, [r2]
 1442 0026 7A68     		ldr	r2, [r7, #4]
 1443 0028 1201     		lsl	r2, r2, #4
 1444 002a 0A43     		orr	r2, r1
 1445 002c 1A60     		str	r2, [r3]
1100:.\Generated_Source\PSoC4/PWM_B.c **** 
1101:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1446              		.loc 1 1101 0
 1447 002e 3B1C     		mov	r3, r7
 1448 0030 0F33     		add	r3, r3, #15
 1449 0032 1B78     		ldrb	r3, [r3]
 1450 0034 181C     		mov	r0, r3
 1451 0036 FFF7FEFF 		bl	CyExitCriticalSection
1102:.\Generated_Source\PSoC4/PWM_B.c **** }
 1452              		.loc 1 1102 0
 1453 003a BD46     		mov	sp, r7
 1454 003c 05B0     		add	sp, sp, #20
 1455              		@ sp needed
 1456 003e 90BD     		pop	{r4, r7, pc}
 1457              	.L98:
 1458              		.align	2
 1459              	.L97:
 1460 0040 24010540 		.word	1074069796
 1461              		.cfi_endproc
 1462              	.LFE29:
 1463              		.size	PWM_B_SetReloadMode, .-PWM_B_SetReloadMode
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 46


 1464              		.section	.text.PWM_B_SetStartMode,"ax",%progbits
 1465              		.align	2
 1466              		.global	PWM_B_SetStartMode
 1467              		.code	16
 1468              		.thumb_func
 1469              		.type	PWM_B_SetStartMode, %function
 1470              	PWM_B_SetStartMode:
 1471              	.LFB30:
1103:.\Generated_Source\PSoC4/PWM_B.c **** 
1104:.\Generated_Source\PSoC4/PWM_B.c **** 
1105:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetStartMode
1107:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PWM_B.c **** *
1109:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1110:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PWM_B.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PWM_B.c **** *
1113:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1116:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PWM_B.c **** *
1121:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1122:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1123:.\Generated_Source\PSoC4/PWM_B.c **** *
1124:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PWM_B.c **** {
 1472              		.loc 1 1126 0
 1473              		.cfi_startproc
 1474 0000 90B5     		push	{r4, r7, lr}
 1475              		.cfi_def_cfa_offset 12
 1476              		.cfi_offset 4, -12
 1477              		.cfi_offset 7, -8
 1478              		.cfi_offset 14, -4
 1479 0002 85B0     		sub	sp, sp, #20
 1480              		.cfi_def_cfa_offset 32
 1481 0004 00AF     		add	r7, sp, #0
 1482              		.cfi_def_cfa_register 7
 1483 0006 7860     		str	r0, [r7, #4]
1127:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PWM_B.c **** 
1129:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1484              		.loc 1 1129 0
 1485 0008 3C1C     		mov	r4, r7
 1486 000a 0F34     		add	r4, r4, #15
 1487 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1488 0010 031C     		mov	r3, r0
 1489 0012 2370     		strb	r3, [r4]
1130:.\Generated_Source\PSoC4/PWM_B.c **** 
1131:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_START_MASK;
 1490              		.loc 1 1131 0
 1491 0014 0A4B     		ldr	r3, .L100
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 47


 1492 0016 0A4A     		ldr	r2, .L100
 1493 0018 1168     		ldr	r1, [r2]
 1494 001a 0A4A     		ldr	r2, .L100+4
 1495 001c 0A40     		and	r2, r1
 1496 001e 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_B_START_SHIFT));
 1497              		.loc 1 1132 0
 1498 0020 074B     		ldr	r3, .L100
 1499 0022 074A     		ldr	r2, .L100
 1500 0024 1168     		ldr	r1, [r2]
 1501 0026 7A68     		ldr	r2, [r7, #4]
 1502 0028 1202     		lsl	r2, r2, #8
 1503 002a 0A43     		orr	r2, r1
 1504 002c 1A60     		str	r2, [r3]
1133:.\Generated_Source\PSoC4/PWM_B.c **** 
1134:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1505              		.loc 1 1134 0
 1506 002e 3B1C     		mov	r3, r7
 1507 0030 0F33     		add	r3, r3, #15
 1508 0032 1B78     		ldrb	r3, [r3]
 1509 0034 181C     		mov	r0, r3
 1510 0036 FFF7FEFF 		bl	CyExitCriticalSection
1135:.\Generated_Source\PSoC4/PWM_B.c **** }
 1511              		.loc 1 1135 0
 1512 003a BD46     		mov	sp, r7
 1513 003c 05B0     		add	sp, sp, #20
 1514              		@ sp needed
 1515 003e 90BD     		pop	{r4, r7, pc}
 1516              	.L101:
 1517              		.align	2
 1518              	.L100:
 1519 0040 24010540 		.word	1074069796
 1520 0044 FFFCFFFF 		.word	-769
 1521              		.cfi_endproc
 1522              	.LFE30:
 1523              		.size	PWM_B_SetStartMode, .-PWM_B_SetStartMode
 1524              		.section	.text.PWM_B_SetStopMode,"ax",%progbits
 1525              		.align	2
 1526              		.global	PWM_B_SetStopMode
 1527              		.code	16
 1528              		.thumb_func
 1529              		.type	PWM_B_SetStopMode, %function
 1530              	PWM_B_SetStopMode:
 1531              	.LFB31:
1136:.\Generated_Source\PSoC4/PWM_B.c **** 
1137:.\Generated_Source\PSoC4/PWM_B.c **** 
1138:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetStopMode
1140:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PWM_B.c **** *
1142:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1143:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PWM_B.c **** *
1145:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1148:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 48


1149:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PWM_B.c **** *
1153:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1154:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1155:.\Generated_Source\PSoC4/PWM_B.c **** *
1156:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PWM_B.c **** {
 1532              		.loc 1 1158 0
 1533              		.cfi_startproc
 1534 0000 90B5     		push	{r4, r7, lr}
 1535              		.cfi_def_cfa_offset 12
 1536              		.cfi_offset 4, -12
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 85B0     		sub	sp, sp, #20
 1540              		.cfi_def_cfa_offset 32
 1541 0004 00AF     		add	r7, sp, #0
 1542              		.cfi_def_cfa_register 7
 1543 0006 7860     		str	r0, [r7, #4]
1159:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PWM_B.c **** 
1161:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1544              		.loc 1 1161 0
 1545 0008 3C1C     		mov	r4, r7
 1546 000a 0F34     		add	r4, r4, #15
 1547 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1548 0010 031C     		mov	r3, r0
 1549 0012 2370     		strb	r3, [r4]
1162:.\Generated_Source\PSoC4/PWM_B.c **** 
1163:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_STOP_MASK;
 1550              		.loc 1 1163 0
 1551 0014 0A4B     		ldr	r3, .L103
 1552 0016 0A4A     		ldr	r2, .L103
 1553 0018 1268     		ldr	r2, [r2]
 1554 001a C021     		mov	r1, #192
 1555 001c 8A43     		bic	r2, r1
 1556 001e 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_B_STOP_SHIFT));
 1557              		.loc 1 1164 0
 1558 0020 074B     		ldr	r3, .L103
 1559 0022 074A     		ldr	r2, .L103
 1560 0024 1168     		ldr	r1, [r2]
 1561 0026 7A68     		ldr	r2, [r7, #4]
 1562 0028 9201     		lsl	r2, r2, #6
 1563 002a 0A43     		orr	r2, r1
 1564 002c 1A60     		str	r2, [r3]
1165:.\Generated_Source\PSoC4/PWM_B.c **** 
1166:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1565              		.loc 1 1166 0
 1566 002e 3B1C     		mov	r3, r7
 1567 0030 0F33     		add	r3, r3, #15
 1568 0032 1B78     		ldrb	r3, [r3]
 1569 0034 181C     		mov	r0, r3
 1570 0036 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 49


1167:.\Generated_Source\PSoC4/PWM_B.c **** }
 1571              		.loc 1 1167 0
 1572 003a BD46     		mov	sp, r7
 1573 003c 05B0     		add	sp, sp, #20
 1574              		@ sp needed
 1575 003e 90BD     		pop	{r4, r7, pc}
 1576              	.L104:
 1577              		.align	2
 1578              	.L103:
 1579 0040 24010540 		.word	1074069796
 1580              		.cfi_endproc
 1581              	.LFE31:
 1582              		.size	PWM_B_SetStopMode, .-PWM_B_SetStopMode
 1583              		.section	.text.PWM_B_SetCountMode,"ax",%progbits
 1584              		.align	2
 1585              		.global	PWM_B_SetCountMode
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	PWM_B_SetCountMode, %function
 1589              	PWM_B_SetCountMode:
 1590              	.LFB32:
1168:.\Generated_Source\PSoC4/PWM_B.c **** 
1169:.\Generated_Source\PSoC4/PWM_B.c **** 
1170:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetCountMode
1172:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PWM_B.c **** *
1174:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1175:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PWM_B.c **** *  input.
1177:.\Generated_Source\PSoC4/PWM_B.c **** *
1178:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PWM_B.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1181:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PWM_B.c **** *
1186:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1187:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1188:.\Generated_Source\PSoC4/PWM_B.c **** *
1189:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PWM_B.c **** {
 1591              		.loc 1 1191 0
 1592              		.cfi_startproc
 1593 0000 90B5     		push	{r4, r7, lr}
 1594              		.cfi_def_cfa_offset 12
 1595              		.cfi_offset 4, -12
 1596              		.cfi_offset 7, -8
 1597              		.cfi_offset 14, -4
 1598 0002 85B0     		sub	sp, sp, #20
 1599              		.cfi_def_cfa_offset 32
 1600 0004 00AF     		add	r7, sp, #0
 1601              		.cfi_def_cfa_register 7
 1602 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 50


1192:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PWM_B.c **** 
1194:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1603              		.loc 1 1194 0
 1604 0008 3C1C     		mov	r4, r7
 1605 000a 0F34     		add	r4, r4, #15
 1606 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1607 0010 031C     		mov	r3, r0
 1608 0012 2370     		strb	r3, [r4]
1195:.\Generated_Source\PSoC4/PWM_B.c **** 
1196:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG &= (uint32)~PWM_B_COUNT_MASK;
 1609              		.loc 1 1196 0
 1610 0014 0A4B     		ldr	r3, .L106
 1611 0016 0A4A     		ldr	r2, .L106
 1612 0018 1268     		ldr	r2, [r2]
 1613 001a 0C21     		mov	r1, #12
 1614 001c 8A43     		bic	r2, r1
 1615 001e 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_B_COUNT_SHIFT));
 1616              		.loc 1 1197 0
 1617 0020 074B     		ldr	r3, .L106
 1618 0022 074A     		ldr	r2, .L106
 1619 0024 1168     		ldr	r1, [r2]
 1620 0026 7A68     		ldr	r2, [r7, #4]
 1621 0028 9200     		lsl	r2, r2, #2
 1622 002a 0A43     		orr	r2, r1
 1623 002c 1A60     		str	r2, [r3]
1198:.\Generated_Source\PSoC4/PWM_B.c **** 
1199:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1624              		.loc 1 1199 0
 1625 002e 3B1C     		mov	r3, r7
 1626 0030 0F33     		add	r3, r3, #15
 1627 0032 1B78     		ldrb	r3, [r3]
 1628 0034 181C     		mov	r0, r3
 1629 0036 FFF7FEFF 		bl	CyExitCriticalSection
1200:.\Generated_Source\PSoC4/PWM_B.c **** }
 1630              		.loc 1 1200 0
 1631 003a BD46     		mov	sp, r7
 1632 003c 05B0     		add	sp, sp, #20
 1633              		@ sp needed
 1634 003e 90BD     		pop	{r4, r7, pc}
 1635              	.L107:
 1636              		.align	2
 1637              	.L106:
 1638 0040 24010540 		.word	1074069796
 1639              		.cfi_endproc
 1640              	.LFE32:
 1641              		.size	PWM_B_SetCountMode, .-PWM_B_SetCountMode
 1642              		.section	.text.PWM_B_TriggerCommand,"ax",%progbits
 1643              		.align	2
 1644              		.global	PWM_B_TriggerCommand
 1645              		.code	16
 1646              		.thumb_func
 1647              		.type	PWM_B_TriggerCommand, %function
 1648              	PWM_B_TriggerCommand:
 1649              	.LFB33:
1201:.\Generated_Source\PSoC4/PWM_B.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 51


1202:.\Generated_Source\PSoC4/PWM_B.c **** 
1203:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_TriggerCommand
1205:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PWM_B.c **** *
1207:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1208:.\Generated_Source\PSoC4/PWM_B.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PWM_B.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PWM_B.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PWM_B.c **** *
1212:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PWM_B.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PWM_B.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PWM_B.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/PWM_B.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PWM_B.c **** *        define.
1218:.\Generated_Source\PSoC4/PWM_B.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PWM_B.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1221:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/PWM_B.c **** *
1226:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1227:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1228:.\Generated_Source\PSoC4/PWM_B.c **** *
1229:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PWM_B.c **** {
 1650              		.loc 1 1231 0
 1651              		.cfi_startproc
 1652 0000 90B5     		push	{r4, r7, lr}
 1653              		.cfi_def_cfa_offset 12
 1654              		.cfi_offset 4, -12
 1655              		.cfi_offset 7, -8
 1656              		.cfi_offset 14, -4
 1657 0002 85B0     		sub	sp, sp, #20
 1658              		.cfi_def_cfa_offset 32
 1659 0004 00AF     		add	r7, sp, #0
 1660              		.cfi_def_cfa_register 7
 1661 0006 7860     		str	r0, [r7, #4]
 1662 0008 3960     		str	r1, [r7]
1232:.\Generated_Source\PSoC4/PWM_B.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PWM_B.c **** 
1234:.\Generated_Source\PSoC4/PWM_B.c ****     enableInterrupts = CyEnterCriticalSection();
 1663              		.loc 1 1234 0
 1664 000a 3C1C     		mov	r4, r7
 1665 000c 0F34     		add	r4, r4, #15
 1666 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1667 0012 031C     		mov	r3, r0
 1668 0014 2370     		strb	r3, [r4]
1235:.\Generated_Source\PSoC4/PWM_B.c **** 
1236:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_COMMAND_REG = ((uint32)(mask << command));
 1669              		.loc 1 1236 0
 1670 0016 084B     		ldr	r3, .L109
 1671 0018 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 52


 1672 001a 7968     		ldr	r1, [r7, #4]
 1673 001c 081C     		mov	r0, r1
 1674 001e 9040     		lsl	r0, r0, r2
 1675 0020 021C     		mov	r2, r0
 1676 0022 1A60     		str	r2, [r3]
1237:.\Generated_Source\PSoC4/PWM_B.c **** 
1238:.\Generated_Source\PSoC4/PWM_B.c ****     CyExitCriticalSection(enableInterrupts);
 1677              		.loc 1 1238 0
 1678 0024 3B1C     		mov	r3, r7
 1679 0026 0F33     		add	r3, r3, #15
 1680 0028 1B78     		ldrb	r3, [r3]
 1681 002a 181C     		mov	r0, r3
 1682 002c FFF7FEFF 		bl	CyExitCriticalSection
1239:.\Generated_Source\PSoC4/PWM_B.c **** }
 1683              		.loc 1 1239 0
 1684 0030 BD46     		mov	sp, r7
 1685 0032 05B0     		add	sp, sp, #20
 1686              		@ sp needed
 1687 0034 90BD     		pop	{r4, r7, pc}
 1688              	.L110:
 1689 0036 C046     		.align	2
 1690              	.L109:
 1691 0038 08000540 		.word	1074069512
 1692              		.cfi_endproc
 1693              	.LFE33:
 1694              		.size	PWM_B_TriggerCommand, .-PWM_B_TriggerCommand
 1695              		.section	.text.PWM_B_ReadStatus,"ax",%progbits
 1696              		.align	2
 1697              		.global	PWM_B_ReadStatus
 1698              		.code	16
 1699              		.thumb_func
 1700              		.type	PWM_B_ReadStatus, %function
 1701              	PWM_B_ReadStatus:
 1702              	.LFB34:
1240:.\Generated_Source\PSoC4/PWM_B.c **** 
1241:.\Generated_Source\PSoC4/PWM_B.c **** 
1242:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ReadStatus
1244:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PWM_B.c **** *
1246:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1247:.\Generated_Source\PSoC4/PWM_B.c **** *  Reads the status of the PWM_B.
1248:.\Generated_Source\PSoC4/PWM_B.c **** *
1249:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1251:.\Generated_Source\PSoC4/PWM_B.c **** *
1252:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1253:.\Generated_Source\PSoC4/PWM_B.c **** *  Status
1254:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1255:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PWM_B.c **** *
1258:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PWM_B.c **** {
 1703              		.loc 1 1260 0
 1704              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 53


 1705 0000 80B5     		push	{r7, lr}
 1706              		.cfi_def_cfa_offset 8
 1707              		.cfi_offset 7, -8
 1708              		.cfi_offset 14, -4
 1709 0002 00AF     		add	r7, sp, #0
 1710              		.cfi_def_cfa_register 7
1261:.\Generated_Source\PSoC4/PWM_B.c ****     return ((PWM_B_STATUS_REG >> PWM_B_RUNNING_STATUS_SHIFT) |
 1711              		.loc 1 1261 0
 1712 0004 054B     		ldr	r3, .L113
 1713 0006 1B68     		ldr	r3, [r3]
 1714 0008 9A0F     		lsr	r2, r3, #30
1262:.\Generated_Source\PSoC4/PWM_B.c ****             (PWM_B_STATUS_REG & PWM_B_STATUS_DOWN));
 1715              		.loc 1 1262 0
 1716 000a 044B     		ldr	r3, .L113
 1717 000c 1968     		ldr	r1, [r3]
 1718 000e 0123     		mov	r3, #1
 1719 0010 0B40     		and	r3, r1
1261:.\Generated_Source\PSoC4/PWM_B.c ****     return ((PWM_B_STATUS_REG >> PWM_B_RUNNING_STATUS_SHIFT) |
 1720              		.loc 1 1261 0
 1721 0012 1343     		orr	r3, r2
1263:.\Generated_Source\PSoC4/PWM_B.c **** }
 1722              		.loc 1 1263 0
 1723 0014 181C     		mov	r0, r3
 1724 0016 BD46     		mov	sp, r7
 1725              		@ sp needed
 1726 0018 80BD     		pop	{r7, pc}
 1727              	.L114:
 1728 001a C046     		.align	2
 1729              	.L113:
 1730 001c 04010540 		.word	1074069764
 1731              		.cfi_endproc
 1732              	.LFE34:
 1733              		.size	PWM_B_ReadStatus, .-PWM_B_ReadStatus
 1734              		.section	.text.PWM_B_SetInterruptMode,"ax",%progbits
 1735              		.align	2
 1736              		.global	PWM_B_SetInterruptMode
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	PWM_B_SetInterruptMode, %function
 1740              	PWM_B_SetInterruptMode:
 1741              	.LFB35:
1264:.\Generated_Source\PSoC4/PWM_B.c **** 
1265:.\Generated_Source\PSoC4/PWM_B.c **** 
1266:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetInterruptMode
1268:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PWM_B.c **** *
1270:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1271:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PWM_B.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/PWM_B.c **** *
1274:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PWM_B.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1277:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PWM_B.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 54


1280:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1281:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1282:.\Generated_Source\PSoC4/PWM_B.c **** *
1283:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PWM_B.c **** {
 1742              		.loc 1 1285 0
 1743              		.cfi_startproc
 1744 0000 80B5     		push	{r7, lr}
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 7, -8
 1747              		.cfi_offset 14, -4
 1748 0002 82B0     		sub	sp, sp, #8
 1749              		.cfi_def_cfa_offset 16
 1750 0004 00AF     		add	r7, sp, #0
 1751              		.cfi_def_cfa_register 7
 1752 0006 7860     		str	r0, [r7, #4]
1286:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_INTERRUPT_MASK_REG =  interruptMask;
 1753              		.loc 1 1286 0
 1754 0008 024B     		ldr	r3, .L116
 1755 000a 7A68     		ldr	r2, [r7, #4]
 1756 000c 1A60     		str	r2, [r3]
1287:.\Generated_Source\PSoC4/PWM_B.c **** }
 1757              		.loc 1 1287 0
 1758 000e BD46     		mov	sp, r7
 1759 0010 02B0     		add	sp, sp, #8
 1760              		@ sp needed
 1761 0012 80BD     		pop	{r7, pc}
 1762              	.L117:
 1763              		.align	2
 1764              	.L116:
 1765 0014 38010540 		.word	1074069816
 1766              		.cfi_endproc
 1767              	.LFE35:
 1768              		.size	PWM_B_SetInterruptMode, .-PWM_B_SetInterruptMode
 1769              		.section	.text.PWM_B_GetInterruptSourceMasked,"ax",%progbits
 1770              		.align	2
 1771              		.global	PWM_B_GetInterruptSourceMasked
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	PWM_B_GetInterruptSourceMasked, %function
 1775              	PWM_B_GetInterruptSourceMasked:
 1776              	.LFB36:
1288:.\Generated_Source\PSoC4/PWM_B.c **** 
1289:.\Generated_Source\PSoC4/PWM_B.c **** 
1290:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PWM_B.c **** *
1294:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1295:.\Generated_Source\PSoC4/PWM_B.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PWM_B.c **** *
1297:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PWM_B.c **** *   None
1299:.\Generated_Source\PSoC4/PWM_B.c **** *
1300:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1301:.\Generated_Source\PSoC4/PWM_B.c **** *  Masked interrupt source
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 55


1302:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1303:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/PWM_B.c **** *
1306:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PWM_B.c **** {
 1777              		.loc 1 1308 0
 1778              		.cfi_startproc
 1779 0000 80B5     		push	{r7, lr}
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 7, -8
 1782              		.cfi_offset 14, -4
 1783 0002 00AF     		add	r7, sp, #0
 1784              		.cfi_def_cfa_register 7
1309:.\Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_INTERRUPT_MASKED_REG);
 1785              		.loc 1 1309 0
 1786 0004 024B     		ldr	r3, .L120
 1787 0006 1B68     		ldr	r3, [r3]
1310:.\Generated_Source\PSoC4/PWM_B.c **** }
 1788              		.loc 1 1310 0
 1789 0008 181C     		mov	r0, r3
 1790 000a BD46     		mov	sp, r7
 1791              		@ sp needed
 1792 000c 80BD     		pop	{r7, pc}
 1793              	.L121:
 1794 000e C046     		.align	2
 1795              	.L120:
 1796 0010 3C010540 		.word	1074069820
 1797              		.cfi_endproc
 1798              	.LFE36:
 1799              		.size	PWM_B_GetInterruptSourceMasked, .-PWM_B_GetInterruptSourceMasked
 1800              		.section	.text.PWM_B_GetInterruptSource,"ax",%progbits
 1801              		.align	2
 1802              		.global	PWM_B_GetInterruptSource
 1803              		.code	16
 1804              		.thumb_func
 1805              		.type	PWM_B_GetInterruptSource, %function
 1806              	PWM_B_GetInterruptSource:
 1807              	.LFB37:
1311:.\Generated_Source\PSoC4/PWM_B.c **** 
1312:.\Generated_Source\PSoC4/PWM_B.c **** 
1313:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_GetInterruptSource
1315:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PWM_B.c **** *
1317:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1318:.\Generated_Source\PSoC4/PWM_B.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PWM_B.c **** *
1320:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1322:.\Generated_Source\PSoC4/PWM_B.c **** *
1323:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1324:.\Generated_Source\PSoC4/PWM_B.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1326:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 56


1328:.\Generated_Source\PSoC4/PWM_B.c **** *
1329:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PWM_B.c **** uint32 PWM_B_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PWM_B.c **** {
 1808              		.loc 1 1331 0
 1809              		.cfi_startproc
 1810 0000 80B5     		push	{r7, lr}
 1811              		.cfi_def_cfa_offset 8
 1812              		.cfi_offset 7, -8
 1813              		.cfi_offset 14, -4
 1814 0002 00AF     		add	r7, sp, #0
 1815              		.cfi_def_cfa_register 7
1332:.\Generated_Source\PSoC4/PWM_B.c ****     return (PWM_B_INTERRUPT_REQ_REG);
 1816              		.loc 1 1332 0
 1817 0004 024B     		ldr	r3, .L124
 1818 0006 1B68     		ldr	r3, [r3]
1333:.\Generated_Source\PSoC4/PWM_B.c **** }
 1819              		.loc 1 1333 0
 1820 0008 181C     		mov	r0, r3
 1821 000a BD46     		mov	sp, r7
 1822              		@ sp needed
 1823 000c 80BD     		pop	{r7, pc}
 1824              	.L125:
 1825 000e C046     		.align	2
 1826              	.L124:
 1827 0010 30010540 		.word	1074069808
 1828              		.cfi_endproc
 1829              	.LFE37:
 1830              		.size	PWM_B_GetInterruptSource, .-PWM_B_GetInterruptSource
 1831              		.section	.text.PWM_B_ClearInterrupt,"ax",%progbits
 1832              		.align	2
 1833              		.global	PWM_B_ClearInterrupt
 1834              		.code	16
 1835              		.thumb_func
 1836              		.type	PWM_B_ClearInterrupt, %function
 1837              	PWM_B_ClearInterrupt:
 1838              	.LFB38:
1334:.\Generated_Source\PSoC4/PWM_B.c **** 
1335:.\Generated_Source\PSoC4/PWM_B.c **** 
1336:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_ClearInterrupt
1338:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PWM_B.c **** *
1340:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1341:.\Generated_Source\PSoC4/PWM_B.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PWM_B.c **** *
1343:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PWM_B.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1346:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PWM_B.c **** *
1349:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1350:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1351:.\Generated_Source\PSoC4/PWM_B.c **** *
1352:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_ClearInterrupt(uint32 interruptMask)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 57


1354:.\Generated_Source\PSoC4/PWM_B.c **** {
 1839              		.loc 1 1354 0
 1840              		.cfi_startproc
 1841 0000 80B5     		push	{r7, lr}
 1842              		.cfi_def_cfa_offset 8
 1843              		.cfi_offset 7, -8
 1844              		.cfi_offset 14, -4
 1845 0002 82B0     		sub	sp, sp, #8
 1846              		.cfi_def_cfa_offset 16
 1847 0004 00AF     		add	r7, sp, #0
 1848              		.cfi_def_cfa_register 7
 1849 0006 7860     		str	r0, [r7, #4]
1355:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_INTERRUPT_REQ_REG = interruptMask;
 1850              		.loc 1 1355 0
 1851 0008 024B     		ldr	r3, .L127
 1852 000a 7A68     		ldr	r2, [r7, #4]
 1853 000c 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/PWM_B.c **** }
 1854              		.loc 1 1356 0
 1855 000e BD46     		mov	sp, r7
 1856 0010 02B0     		add	sp, sp, #8
 1857              		@ sp needed
 1858 0012 80BD     		pop	{r7, pc}
 1859              	.L128:
 1860              		.align	2
 1861              	.L127:
 1862 0014 30010540 		.word	1074069808
 1863              		.cfi_endproc
 1864              	.LFE38:
 1865              		.size	PWM_B_ClearInterrupt, .-PWM_B_ClearInterrupt
 1866              		.section	.text.PWM_B_SetInterrupt,"ax",%progbits
 1867              		.align	2
 1868              		.global	PWM_B_SetInterrupt
 1869              		.code	16
 1870              		.thumb_func
 1871              		.type	PWM_B_SetInterrupt, %function
 1872              	PWM_B_SetInterrupt:
 1873              	.LFB39:
1357:.\Generated_Source\PSoC4/PWM_B.c **** 
1358:.\Generated_Source\PSoC4/PWM_B.c **** 
1359:.\Generated_Source\PSoC4/PWM_B.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PWM_B.c **** * Function Name: PWM_B_SetInterrupt
1361:.\Generated_Source\PSoC4/PWM_B.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PWM_B.c **** *
1363:.\Generated_Source\PSoC4/PWM_B.c **** * Summary:
1364:.\Generated_Source\PSoC4/PWM_B.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PWM_B.c **** *
1366:.\Generated_Source\PSoC4/PWM_B.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PWM_B.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PWM_B.c **** *   Values:
1369:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PWM_B.c **** *     - PWM_B_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PWM_B.c **** *
1372:.\Generated_Source\PSoC4/PWM_B.c **** * Return:
1373:.\Generated_Source\PSoC4/PWM_B.c **** *  None
1374:.\Generated_Source\PSoC4/PWM_B.c **** *
1375:.\Generated_Source\PSoC4/PWM_B.c **** *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 58


1376:.\Generated_Source\PSoC4/PWM_B.c **** void PWM_B_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PWM_B.c **** {
 1874              		.loc 1 1377 0
 1875              		.cfi_startproc
 1876 0000 80B5     		push	{r7, lr}
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 7, -8
 1879              		.cfi_offset 14, -4
 1880 0002 82B0     		sub	sp, sp, #8
 1881              		.cfi_def_cfa_offset 16
 1882 0004 00AF     		add	r7, sp, #0
 1883              		.cfi_def_cfa_register 7
 1884 0006 7860     		str	r0, [r7, #4]
1378:.\Generated_Source\PSoC4/PWM_B.c ****     PWM_B_INTERRUPT_SET_REG = interruptMask;
 1885              		.loc 1 1378 0
 1886 0008 024B     		ldr	r3, .L130
 1887 000a 7A68     		ldr	r2, [r7, #4]
 1888 000c 1A60     		str	r2, [r3]
1379:.\Generated_Source\PSoC4/PWM_B.c **** }
 1889              		.loc 1 1379 0
 1890 000e BD46     		mov	sp, r7
 1891 0010 02B0     		add	sp, sp, #8
 1892              		@ sp needed
 1893 0012 80BD     		pop	{r7, pc}
 1894              	.L131:
 1895              		.align	2
 1896              	.L130:
 1897 0014 34010540 		.word	1074069812
 1898              		.cfi_endproc
 1899              	.LFE39:
 1900              		.size	PWM_B_SetInterrupt, .-PWM_B_SetInterrupt
 1901              		.text
 1902              	.Letext0:
 1903              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1904              		.section	.debug_info,"",%progbits
 1905              	.Ldebug_info0:
 1906 0000 EC060000 		.4byte	0x6ec
 1907 0004 0400     		.2byte	0x4
 1908 0006 00000000 		.4byte	.Ldebug_abbrev0
 1909 000a 04       		.byte	0x4
 1910 000b 01       		.uleb128 0x1
 1911 000c E2020000 		.4byte	.LASF76
 1912 0010 01       		.byte	0x1
 1913 0011 42020000 		.4byte	.LASF77
 1914 0015 73030000 		.4byte	.LASF78
 1915 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1916 001d 00000000 		.4byte	0
 1917 0021 00000000 		.4byte	.Ldebug_line0
 1918 0025 02       		.uleb128 0x2
 1919 0026 01       		.byte	0x1
 1920 0027 06       		.byte	0x6
 1921 0028 D5000000 		.4byte	.LASF0
 1922 002c 02       		.uleb128 0x2
 1923 002d 01       		.byte	0x1
 1924 002e 08       		.byte	0x8
 1925 002f F6030000 		.4byte	.LASF1
 1926 0033 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 59


 1927 0034 02       		.byte	0x2
 1928 0035 05       		.byte	0x5
 1929 0036 15040000 		.4byte	.LASF2
 1930 003a 02       		.uleb128 0x2
 1931 003b 02       		.byte	0x2
 1932 003c 07       		.byte	0x7
 1933 003d EA010000 		.4byte	.LASF3
 1934 0041 02       		.uleb128 0x2
 1935 0042 04       		.byte	0x4
 1936 0043 05       		.byte	0x5
 1937 0044 07010000 		.4byte	.LASF4
 1938 0048 02       		.uleb128 0x2
 1939 0049 04       		.byte	0x4
 1940 004a 07       		.byte	0x7
 1941 004b AE010000 		.4byte	.LASF5
 1942 004f 02       		.uleb128 0x2
 1943 0050 08       		.byte	0x8
 1944 0051 05       		.byte	0x5
 1945 0052 C7000000 		.4byte	.LASF6
 1946 0056 02       		.uleb128 0x2
 1947 0057 08       		.byte	0x8
 1948 0058 07       		.byte	0x7
 1949 0059 6E000000 		.4byte	.LASF7
 1950 005d 03       		.uleb128 0x3
 1951 005e 04       		.byte	0x4
 1952 005f 05       		.byte	0x5
 1953 0060 696E7400 		.ascii	"int\000"
 1954 0064 02       		.uleb128 0x2
 1955 0065 04       		.byte	0x4
 1956 0066 07       		.byte	0x7
 1957 0067 99010000 		.4byte	.LASF8
 1958 006b 04       		.uleb128 0x4
 1959 006c 32010000 		.4byte	.LASF9
 1960 0070 02       		.byte	0x2
 1961 0071 C1       		.byte	0xc1
 1962 0072 2C000000 		.4byte	0x2c
 1963 0076 04       		.uleb128 0x4
 1964 0077 53010000 		.4byte	.LASF10
 1965 007b 02       		.byte	0x2
 1966 007c C3       		.byte	0xc3
 1967 007d 48000000 		.4byte	0x48
 1968 0081 02       		.uleb128 0x2
 1969 0082 04       		.byte	0x4
 1970 0083 04       		.byte	0x4
 1971 0084 C4020000 		.4byte	.LASF11
 1972 0088 02       		.uleb128 0x2
 1973 0089 08       		.byte	0x8
 1974 008a 04       		.byte	0x4
 1975 008b 38010000 		.4byte	.LASF12
 1976 008f 02       		.uleb128 0x2
 1977 0090 01       		.byte	0x1
 1978 0091 08       		.byte	0x8
 1979 0092 8C040000 		.4byte	.LASF13
 1980 0096 05       		.uleb128 0x5
 1981 0097 63020000 		.4byte	.LASF14
 1982 009b 02       		.byte	0x2
 1983 009c 6D01     		.2byte	0x16d
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 60


 1984 009e A2000000 		.4byte	0xa2
 1985 00a2 06       		.uleb128 0x6
 1986 00a3 76000000 		.4byte	0x76
 1987 00a7 02       		.uleb128 0x2
 1988 00a8 04       		.byte	0x4
 1989 00a9 07       		.byte	0x7
 1990 00aa 7E020000 		.4byte	.LASF15
 1991 00ae 07       		.uleb128 0x7
 1992 00af 1C000000 		.4byte	.LASF16
 1993 00b3 01       		.byte	0x1
 1994 00b4 26       		.byte	0x26
 1995 00b5 00000000 		.4byte	.LFB0
 1996 00b9 58000000 		.4byte	.LFE0-.LFB0
 1997 00bd 01       		.uleb128 0x1
 1998 00be 9C       		.byte	0x9c
 1999 00bf 08       		.uleb128 0x8
 2000 00c0 25010000 		.4byte	.LASF18
 2001 00c4 01       		.byte	0x1
 2002 00c5 B1       		.byte	0xb1
 2003 00c6 00000000 		.4byte	.LFB1
 2004 00ca 38000000 		.4byte	.LFE1-.LFB1
 2005 00ce 01       		.uleb128 0x1
 2006 00cf 9C       		.byte	0x9c
 2007 00d0 E3000000 		.4byte	0xe3
 2008 00d4 09       		.uleb128 0x9
 2009 00d5 FA040000 		.4byte	.LASF20
 2010 00d9 01       		.byte	0x1
 2011 00da B3       		.byte	0xb3
 2012 00db 6B000000 		.4byte	0x6b
 2013 00df 02       		.uleb128 0x2
 2014 00e0 91       		.byte	0x91
 2015 00e1 6F       		.sleb128 -17
 2016 00e2 00       		.byte	0
 2017 00e3 07       		.uleb128 0x7
 2018 00e4 19050000 		.4byte	.LASF17
 2019 00e8 01       		.byte	0x1
 2020 00e9 E0       		.byte	0xe0
 2021 00ea 00000000 		.4byte	.LFB2
 2022 00ee 24000000 		.4byte	.LFE2-.LFB2
 2023 00f2 01       		.uleb128 0x1
 2024 00f3 9C       		.byte	0x9c
 2025 00f4 08       		.uleb128 0x8
 2026 00f5 D8030000 		.4byte	.LASF19
 2027 00f9 01       		.byte	0x1
 2028 00fa FA       		.byte	0xfa
 2029 00fb 00000000 		.4byte	.LFB3
 2030 00ff 30000000 		.4byte	.LFE3-.LFB3
 2031 0103 01       		.uleb128 0x1
 2032 0104 9C       		.byte	0x9c
 2033 0105 18010000 		.4byte	0x118
 2034 0109 09       		.uleb128 0x9
 2035 010a FA040000 		.4byte	.LASF20
 2036 010e 01       		.byte	0x1
 2037 010f FC       		.byte	0xfc
 2038 0110 6B000000 		.4byte	0x6b
 2039 0114 02       		.uleb128 0x2
 2040 0115 91       		.byte	0x91
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 61


 2041 0116 6F       		.sleb128 -17
 2042 0117 00       		.byte	0
 2043 0118 0A       		.uleb128 0xa
 2044 0119 0B050000 		.4byte	.LASF21
 2045 011d 01       		.byte	0x1
 2046 011e 1F01     		.2byte	0x11f
 2047 0120 00000000 		.4byte	.LFB4
 2048 0124 48000000 		.4byte	.LFE4-.LFB4
 2049 0128 01       		.uleb128 0x1
 2050 0129 9C       		.byte	0x9c
 2051 012a 4D010000 		.4byte	0x14d
 2052 012e 0B       		.uleb128 0xb
 2053 012f 91040000 		.4byte	.LASF23
 2054 0133 01       		.byte	0x1
 2055 0134 1F01     		.2byte	0x11f
 2056 0136 76000000 		.4byte	0x76
 2057 013a 02       		.uleb128 0x2
 2058 013b 91       		.byte	0x91
 2059 013c 64       		.sleb128 -28
 2060 013d 0C       		.uleb128 0xc
 2061 013e FA040000 		.4byte	.LASF20
 2062 0142 01       		.byte	0x1
 2063 0143 2101     		.2byte	0x121
 2064 0145 6B000000 		.4byte	0x6b
 2065 0149 02       		.uleb128 0x2
 2066 014a 91       		.byte	0x91
 2067 014b 6F       		.sleb128 -17
 2068 014c 00       		.byte	0
 2069 014d 0A       		.uleb128 0xa
 2070 014e C9010000 		.4byte	.LASF22
 2071 0152 01       		.byte	0x1
 2072 0153 4001     		.2byte	0x140
 2073 0155 00000000 		.4byte	.LFB5
 2074 0159 48000000 		.4byte	.LFE5-.LFB5
 2075 015d 01       		.uleb128 0x1
 2076 015e 9C       		.byte	0x9c
 2077 015f 82010000 		.4byte	0x182
 2078 0163 0B       		.uleb128 0xb
 2079 0164 AF000000 		.4byte	.LASF24
 2080 0168 01       		.byte	0x1
 2081 0169 4001     		.2byte	0x140
 2082 016b 76000000 		.4byte	0x76
 2083 016f 02       		.uleb128 0x2
 2084 0170 91       		.byte	0x91
 2085 0171 64       		.sleb128 -28
 2086 0172 0C       		.uleb128 0xc
 2087 0173 FA040000 		.4byte	.LASF20
 2088 0177 01       		.byte	0x1
 2089 0178 4201     		.2byte	0x142
 2090 017a 6B000000 		.4byte	0x6b
 2091 017e 02       		.uleb128 0x2
 2092 017f 91       		.byte	0x91
 2093 0180 6F       		.sleb128 -17
 2094 0181 00       		.byte	0
 2095 0182 0A       		.uleb128 0xa
 2096 0183 5A010000 		.4byte	.LASF25
 2097 0187 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 62


 2098 0188 6501     		.2byte	0x165
 2099 018a 00000000 		.4byte	.LFB6
 2100 018e 48000000 		.4byte	.LFE6-.LFB6
 2101 0192 01       		.uleb128 0x1
 2102 0193 9C       		.byte	0x9c
 2103 0194 B7010000 		.4byte	0x1b7
 2104 0198 0B       		.uleb128 0xb
 2105 0199 D8020000 		.4byte	.LASF26
 2106 019d 01       		.byte	0x1
 2107 019e 6501     		.2byte	0x165
 2108 01a0 76000000 		.4byte	0x76
 2109 01a4 02       		.uleb128 0x2
 2110 01a5 91       		.byte	0x91
 2111 01a6 64       		.sleb128 -28
 2112 01a7 0C       		.uleb128 0xc
 2113 01a8 FA040000 		.4byte	.LASF20
 2114 01ac 01       		.byte	0x1
 2115 01ad 6701     		.2byte	0x167
 2116 01af 6B000000 		.4byte	0x6b
 2117 01b3 02       		.uleb128 0x2
 2118 01b4 91       		.byte	0x91
 2119 01b5 6F       		.sleb128 -17
 2120 01b6 00       		.byte	0
 2121 01b7 0A       		.uleb128 0xa
 2122 01b8 B6000000 		.4byte	.LASF27
 2123 01bc 01       		.byte	0x1
 2124 01bd 8501     		.2byte	0x185
 2125 01bf 00000000 		.4byte	.LFB7
 2126 01c3 4C000000 		.4byte	.LFE7-.LFB7
 2127 01c7 01       		.uleb128 0x1
 2128 01c8 9C       		.byte	0x9c
 2129 01c9 EC010000 		.4byte	0x1ec
 2130 01cd 0B       		.uleb128 0xb
 2131 01ce 11020000 		.4byte	.LASF28
 2132 01d2 01       		.byte	0x1
 2133 01d3 8501     		.2byte	0x185
 2134 01d5 76000000 		.4byte	0x76
 2135 01d9 02       		.uleb128 0x2
 2136 01da 91       		.byte	0x91
 2137 01db 64       		.sleb128 -28
 2138 01dc 0C       		.uleb128 0xc
 2139 01dd FA040000 		.4byte	.LASF20
 2140 01e1 01       		.byte	0x1
 2141 01e2 8701     		.2byte	0x187
 2142 01e4 6B000000 		.4byte	0x6b
 2143 01e8 02       		.uleb128 0x2
 2144 01e9 91       		.byte	0x91
 2145 01ea 6F       		.sleb128 -17
 2146 01eb 00       		.byte	0
 2147 01ec 0D       		.uleb128 0xd
 2148 01ed 9E020000 		.4byte	.LASF29
 2149 01f1 01       		.byte	0x1
 2150 01f2 BB01     		.2byte	0x1bb
 2151 01f4 00000000 		.4byte	.LFB8
 2152 01f8 1C000000 		.4byte	.LFE8-.LFB8
 2153 01fc 01       		.uleb128 0x1
 2154 01fd 9C       		.byte	0x9c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 63


 2155 01fe 12020000 		.4byte	0x212
 2156 0202 0B       		.uleb128 0xb
 2157 0203 C0010000 		.4byte	.LASF30
 2158 0207 01       		.byte	0x1
 2159 0208 BB01     		.2byte	0x1bb
 2160 020a 76000000 		.4byte	0x76
 2161 020e 02       		.uleb128 0x2
 2162 020f 91       		.byte	0x91
 2163 0210 74       		.sleb128 -12
 2164 0211 00       		.byte	0
 2165 0212 0A       		.uleb128 0xa
 2166 0213 A8040000 		.4byte	.LASF31
 2167 0217 01       		.byte	0x1
 2168 0218 DF01     		.2byte	0x1df
 2169 021a 00000000 		.4byte	.LFB9
 2170 021e 48000000 		.4byte	.LFE9-.LFB9
 2171 0222 01       		.uleb128 0x1
 2172 0223 9C       		.byte	0x9c
 2173 0224 47020000 		.4byte	0x247
 2174 0228 0B       		.uleb128 0xb
 2175 0229 87020000 		.4byte	.LASF32
 2176 022d 01       		.byte	0x1
 2177 022e DF01     		.2byte	0x1df
 2178 0230 76000000 		.4byte	0x76
 2179 0234 02       		.uleb128 0x2
 2180 0235 91       		.byte	0x91
 2181 0236 64       		.sleb128 -28
 2182 0237 0C       		.uleb128 0xc
 2183 0238 FA040000 		.4byte	.LASF20
 2184 023c 01       		.byte	0x1
 2185 023d E101     		.2byte	0x1e1
 2186 023f 6B000000 		.4byte	0x6b
 2187 0243 02       		.uleb128 0x2
 2188 0244 91       		.byte	0x91
 2189 0245 6F       		.sleb128 -17
 2190 0246 00       		.byte	0
 2191 0247 0A       		.uleb128 0xa
 2192 0248 25050000 		.4byte	.LASF33
 2193 024c 01       		.byte	0x1
 2194 024d 0102     		.2byte	0x201
 2195 024f 00000000 		.4byte	.LFB10
 2196 0253 48000000 		.4byte	.LFE10-.LFB10
 2197 0257 01       		.uleb128 0x1
 2198 0258 9C       		.byte	0x9c
 2199 0259 7C020000 		.4byte	0x27c
 2200 025d 0B       		.uleb128 0xb
 2201 025e 04040000 		.4byte	.LASF34
 2202 0262 01       		.byte	0x1
 2203 0263 0102     		.2byte	0x201
 2204 0265 76000000 		.4byte	0x76
 2205 0269 02       		.uleb128 0x2
 2206 026a 91       		.byte	0x91
 2207 026b 64       		.sleb128 -28
 2208 026c 0C       		.uleb128 0xc
 2209 026d FA040000 		.4byte	.LASF20
 2210 0271 01       		.byte	0x1
 2211 0272 0302     		.2byte	0x203
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 64


 2212 0274 6B000000 		.4byte	0x6b
 2213 0278 02       		.uleb128 0x2
 2214 0279 91       		.byte	0x91
 2215 027a 6F       		.sleb128 -17
 2216 027b 00       		.byte	0
 2217 027c 0A       		.uleb128 0xa
 2218 027d 59000000 		.4byte	.LASF35
 2219 0281 01       		.byte	0x1
 2220 0282 2202     		.2byte	0x222
 2221 0284 00000000 		.4byte	.LFB11
 2222 0288 4C000000 		.4byte	.LFE11-.LFB11
 2223 028c 01       		.uleb128 0x1
 2224 028d 9C       		.byte	0x9c
 2225 028e B1020000 		.4byte	0x2b1
 2226 0292 0B       		.uleb128 0xb
 2227 0293 90010000 		.4byte	.LASF36
 2228 0297 01       		.byte	0x1
 2229 0298 2202     		.2byte	0x222
 2230 029a 76000000 		.4byte	0x76
 2231 029e 02       		.uleb128 0x2
 2232 029f 91       		.byte	0x91
 2233 02a0 64       		.sleb128 -28
 2234 02a1 0C       		.uleb128 0xc
 2235 02a2 FA040000 		.4byte	.LASF20
 2236 02a6 01       		.byte	0x1
 2237 02a7 2402     		.2byte	0x224
 2238 02a9 6B000000 		.4byte	0x6b
 2239 02ad 02       		.uleb128 0x2
 2240 02ae 91       		.byte	0x91
 2241 02af 6F       		.sleb128 -17
 2242 02b0 00       		.byte	0
 2243 02b1 0A       		.uleb128 0xa
 2244 02b2 9C000000 		.4byte	.LASF37
 2245 02b6 01       		.byte	0x1
 2246 02b7 4302     		.2byte	0x243
 2247 02b9 00000000 		.4byte	.LFB12
 2248 02bd 48000000 		.4byte	.LFE12-.LFB12
 2249 02c1 01       		.uleb128 0x1
 2250 02c2 9C       		.byte	0x9c
 2251 02c3 E6020000 		.4byte	0x2e6
 2252 02c7 0B       		.uleb128 0xb
 2253 02c8 79010000 		.4byte	.LASF38
 2254 02cc 01       		.byte	0x1
 2255 02cd 4302     		.2byte	0x243
 2256 02cf 76000000 		.4byte	0x76
 2257 02d3 02       		.uleb128 0x2
 2258 02d4 91       		.byte	0x91
 2259 02d5 64       		.sleb128 -28
 2260 02d6 0C       		.uleb128 0xc
 2261 02d7 FA040000 		.4byte	.LASF20
 2262 02db 01       		.byte	0x1
 2263 02dc 4502     		.2byte	0x245
 2264 02de 6B000000 		.4byte	0x6b
 2265 02e2 02       		.uleb128 0x2
 2266 02e3 91       		.byte	0x91
 2267 02e4 6F       		.sleb128 -17
 2268 02e5 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 65


 2269 02e6 0D       		.uleb128 0xd
 2270 02e7 59050000 		.4byte	.LASF39
 2271 02eb 01       		.byte	0x1
 2272 02ec 6102     		.2byte	0x261
 2273 02ee 00000000 		.4byte	.LFB13
 2274 02f2 1C000000 		.4byte	.LFE13-.LFB13
 2275 02f6 01       		.uleb128 0x1
 2276 02f7 9C       		.byte	0x9c
 2277 02f8 0C030000 		.4byte	0x30c
 2278 02fc 0B       		.uleb128 0xb
 2279 02fd 00000000 		.4byte	.LASF40
 2280 0301 01       		.byte	0x1
 2281 0302 6102     		.2byte	0x261
 2282 0304 76000000 		.4byte	0x76
 2283 0308 02       		.uleb128 0x2
 2284 0309 91       		.byte	0x91
 2285 030a 74       		.sleb128 -12
 2286 030b 00       		.byte	0
 2287 030c 0E       		.uleb128 0xe
 2288 030d 7E010000 		.4byte	.LASF45
 2289 0311 01       		.byte	0x1
 2290 0312 7502     		.2byte	0x275
 2291 0314 76000000 		.4byte	0x76
 2292 0318 00000000 		.4byte	.LFB14
 2293 031c 18000000 		.4byte	.LFE14-.LFB14
 2294 0320 01       		.uleb128 0x1
 2295 0321 9C       		.byte	0x9c
 2296 0322 0A       		.uleb128 0xa
 2297 0323 1F020000 		.4byte	.LASF41
 2298 0327 01       		.byte	0x1
 2299 0328 9202     		.2byte	0x292
 2300 032a 00000000 		.4byte	.LFB15
 2301 032e 48000000 		.4byte	.LFE15-.LFB15
 2302 0332 01       		.uleb128 0x1
 2303 0333 9C       		.byte	0x9c
 2304 0334 57030000 		.4byte	0x357
 2305 0338 0B       		.uleb128 0xb
 2306 0339 BD040000 		.4byte	.LASF42
 2307 033d 01       		.byte	0x1
 2308 033e 9202     		.2byte	0x292
 2309 0340 76000000 		.4byte	0x76
 2310 0344 02       		.uleb128 0x2
 2311 0345 91       		.byte	0x91
 2312 0346 64       		.sleb128 -28
 2313 0347 0C       		.uleb128 0xc
 2314 0348 FA040000 		.4byte	.LASF20
 2315 034c 01       		.byte	0x1
 2316 034d 9402     		.2byte	0x294
 2317 034f 6B000000 		.4byte	0x6b
 2318 0353 02       		.uleb128 0x2
 2319 0354 91       		.byte	0x91
 2320 0355 6F       		.sleb128 -17
 2321 0356 00       		.byte	0
 2322 0357 0D       		.uleb128 0xd
 2323 0358 47050000 		.4byte	.LASF43
 2324 035c 01       		.byte	0x1
 2325 035d AF02     		.2byte	0x2af
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 66


 2326 035f 00000000 		.4byte	.LFB16
 2327 0363 1C000000 		.4byte	.LFE16-.LFB16
 2328 0367 01       		.uleb128 0x1
 2329 0368 9C       		.byte	0x9c
 2330 0369 7D030000 		.4byte	0x37d
 2331 036d 0B       		.uleb128 0xb
 2332 036e 52000000 		.4byte	.LASF44
 2333 0372 01       		.byte	0x1
 2334 0373 AF02     		.2byte	0x2af
 2335 0375 76000000 		.4byte	0x76
 2336 0379 02       		.uleb128 0x2
 2337 037a 91       		.byte	0x91
 2338 037b 74       		.sleb128 -12
 2339 037c 00       		.byte	0
 2340 037d 0E       		.uleb128 0xe
 2341 037e D9010000 		.4byte	.LASF46
 2342 0382 01       		.byte	0x1
 2343 0383 C302     		.2byte	0x2c3
 2344 0385 76000000 		.4byte	0x76
 2345 0389 00000000 		.4byte	.LFB17
 2346 038d 18000000 		.4byte	.LFE17-.LFB17
 2347 0391 01       		.uleb128 0x1
 2348 0392 9C       		.byte	0x9c
 2349 0393 0A       		.uleb128 0xa
 2350 0394 30040000 		.4byte	.LASF47
 2351 0398 01       		.byte	0x1
 2352 0399 DD02     		.2byte	0x2dd
 2353 039b 00000000 		.4byte	.LFB18
 2354 039f 48000000 		.4byte	.LFE18-.LFB18
 2355 03a3 01       		.uleb128 0x1
 2356 03a4 9C       		.byte	0x9c
 2357 03a5 C8030000 		.4byte	0x3c8
 2358 03a9 0B       		.uleb128 0xb
 2359 03aa 3C050000 		.4byte	.LASF48
 2360 03ae 01       		.byte	0x1
 2361 03af DD02     		.2byte	0x2dd
 2362 03b1 76000000 		.4byte	0x76
 2363 03b5 02       		.uleb128 0x2
 2364 03b6 91       		.byte	0x91
 2365 03b7 64       		.sleb128 -28
 2366 03b8 0C       		.uleb128 0xc
 2367 03b9 FA040000 		.4byte	.LASF20
 2368 03bd 01       		.byte	0x1
 2369 03be DF02     		.2byte	0x2df
 2370 03c0 6B000000 		.4byte	0x6b
 2371 03c4 02       		.uleb128 0x2
 2372 03c5 91       		.byte	0x91
 2373 03c6 6F       		.sleb128 -17
 2374 03c7 00       		.byte	0
 2375 03c8 0D       		.uleb128 0xd
 2376 03c9 69020000 		.4byte	.LASF49
 2377 03cd 01       		.byte	0x1
 2378 03ce F802     		.2byte	0x2f8
 2379 03d0 00000000 		.4byte	.LFB19
 2380 03d4 1C000000 		.4byte	.LFE19-.LFB19
 2381 03d8 01       		.uleb128 0x1
 2382 03d9 9C       		.byte	0x9c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 67


 2383 03da EE030000 		.4byte	0x3ee
 2384 03de 0B       		.uleb128 0xb
 2385 03df 6C050000 		.4byte	.LASF50
 2386 03e3 01       		.byte	0x1
 2387 03e4 F802     		.2byte	0x2f8
 2388 03e6 76000000 		.4byte	0x76
 2389 03ea 02       		.uleb128 0x2
 2390 03eb 91       		.byte	0x91
 2391 03ec 74       		.sleb128 -12
 2392 03ed 00       		.byte	0
 2393 03ee 0E       		.uleb128 0xe
 2394 03ef F3000000 		.4byte	.LASF51
 2395 03f3 01       		.byte	0x1
 2396 03f4 0C03     		.2byte	0x30c
 2397 03f6 76000000 		.4byte	0x76
 2398 03fa 00000000 		.4byte	.LFB20
 2399 03fe 18000000 		.4byte	.LFE20-.LFB20
 2400 0402 01       		.uleb128 0x1
 2401 0403 9C       		.byte	0x9c
 2402 0404 0A       		.uleb128 0xa
 2403 0405 3F010000 		.4byte	.LASF52
 2404 0409 01       		.byte	0x1
 2405 040a 2603     		.2byte	0x326
 2406 040c 00000000 		.4byte	.LFB21
 2407 0410 48000000 		.4byte	.LFE21-.LFB21
 2408 0414 01       		.uleb128 0x1
 2409 0415 9C       		.byte	0x9c
 2410 0416 39040000 		.4byte	0x439
 2411 041a 0B       		.uleb128 0xb
 2412 041b 3C050000 		.4byte	.LASF48
 2413 041f 01       		.byte	0x1
 2414 0420 2603     		.2byte	0x326
 2415 0422 76000000 		.4byte	0x76
 2416 0426 02       		.uleb128 0x2
 2417 0427 91       		.byte	0x91
 2418 0428 64       		.sleb128 -28
 2419 0429 0C       		.uleb128 0xc
 2420 042a FA040000 		.4byte	.LASF20
 2421 042e 01       		.byte	0x1
 2422 042f 2803     		.2byte	0x328
 2423 0431 6B000000 		.4byte	0x6b
 2424 0435 02       		.uleb128 0x2
 2425 0436 91       		.byte	0x91
 2426 0437 6F       		.sleb128 -17
 2427 0438 00       		.byte	0
 2428 0439 0D       		.uleb128 0xd
 2429 043a E7040000 		.4byte	.LASF53
 2430 043e 01       		.byte	0x1
 2431 043f 4303     		.2byte	0x343
 2432 0441 00000000 		.4byte	.LFB22
 2433 0445 1C000000 		.4byte	.LFE22-.LFB22
 2434 0449 01       		.uleb128 0x1
 2435 044a 9C       		.byte	0x9c
 2436 044b 5F040000 		.4byte	0x45f
 2437 044f 0B       		.uleb128 0xb
 2438 0450 96020000 		.4byte	.LASF54
 2439 0454 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 68


 2440 0455 4303     		.2byte	0x343
 2441 0457 76000000 		.4byte	0x76
 2442 045b 02       		.uleb128 0x2
 2443 045c 91       		.byte	0x91
 2444 045d 74       		.sleb128 -12
 2445 045e 00       		.byte	0
 2446 045f 0E       		.uleb128 0xe
 2447 0460 E1000000 		.4byte	.LASF55
 2448 0464 01       		.byte	0x1
 2449 0465 6E03     		.2byte	0x36e
 2450 0467 76000000 		.4byte	0x76
 2451 046b 00000000 		.4byte	.LFB23
 2452 046f 18000000 		.4byte	.LFE23-.LFB23
 2453 0473 01       		.uleb128 0x1
 2454 0474 9C       		.byte	0x9c
 2455 0475 0D       		.uleb128 0xd
 2456 0476 06000000 		.4byte	.LASF56
 2457 047a 01       		.byte	0x1
 2458 047b 9C03     		.2byte	0x39c
 2459 047d 00000000 		.4byte	.LFB24
 2460 0481 1C000000 		.4byte	.LFE24-.LFB24
 2461 0485 01       		.uleb128 0x1
 2462 0486 9C       		.byte	0x9c
 2463 0487 9B040000 		.4byte	0x49b
 2464 048b 0B       		.uleb128 0xb
 2465 048c DC040000 		.4byte	.LASF57
 2466 0490 01       		.byte	0x1
 2467 0491 9C03     		.2byte	0x39c
 2468 0493 76000000 		.4byte	0x76
 2469 0497 02       		.uleb128 0x2
 2470 0498 91       		.byte	0x91
 2471 0499 74       		.sleb128 -12
 2472 049a 00       		.byte	0
 2473 049b 0E       		.uleb128 0xe
 2474 049c 76050000 		.4byte	.LASF58
 2475 04a0 01       		.byte	0x1
 2476 04a1 C503     		.2byte	0x3c5
 2477 04a3 76000000 		.4byte	0x76
 2478 04a7 00000000 		.4byte	.LFB25
 2479 04ab 18000000 		.4byte	.LFE25-.LFB25
 2480 04af 01       		.uleb128 0x1
 2481 04b0 9C       		.byte	0x9c
 2482 04b1 0E       		.uleb128 0xe
 2483 04b2 40000000 		.4byte	.LASF59
 2484 04b6 01       		.byte	0x1
 2485 04b7 F303     		.2byte	0x3f3
 2486 04b9 76000000 		.4byte	0x76
 2487 04bd 00000000 		.4byte	.LFB26
 2488 04c1 18000000 		.4byte	.LFE26-.LFB26
 2489 04c5 01       		.uleb128 0x1
 2490 04c6 9C       		.byte	0x9c
 2491 04c7 0E       		.uleb128 0xe
 2492 04c8 5E030000 		.4byte	.LASF60
 2493 04cc 01       		.byte	0x1
 2494 04cd 0804     		.2byte	0x408
 2495 04cf 76000000 		.4byte	0x76
 2496 04d3 00000000 		.4byte	.LFB27
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 69


 2497 04d7 18000000 		.4byte	.LFE27-.LFB27
 2498 04db 01       		.uleb128 0x1
 2499 04dc 9C       		.byte	0x9c
 2500 04dd 0A       		.uleb128 0xa
 2501 04de AF020000 		.4byte	.LASF61
 2502 04e2 01       		.byte	0x1
 2503 04e3 2304     		.2byte	0x423
 2504 04e5 00000000 		.4byte	.LFB28
 2505 04e9 44000000 		.4byte	.LFE28-.LFB28
 2506 04ed 01       		.uleb128 0x1
 2507 04ee 9C       		.byte	0x9c
 2508 04ef 12050000 		.4byte	0x512
 2509 04f3 0B       		.uleb128 0xb
 2510 04f4 6D010000 		.4byte	.LASF62
 2511 04f8 01       		.byte	0x1
 2512 04f9 2304     		.2byte	0x423
 2513 04fb 76000000 		.4byte	0x76
 2514 04ff 02       		.uleb128 0x2
 2515 0500 91       		.byte	0x91
 2516 0501 64       		.sleb128 -28
 2517 0502 0C       		.uleb128 0xc
 2518 0503 FA040000 		.4byte	.LASF20
 2519 0507 01       		.byte	0x1
 2520 0508 2504     		.2byte	0x425
 2521 050a 6B000000 		.4byte	0x6b
 2522 050e 02       		.uleb128 0x2
 2523 050f 91       		.byte	0x91
 2524 0510 6F       		.sleb128 -17
 2525 0511 00       		.byte	0
 2526 0512 0A       		.uleb128 0xa
 2527 0513 FD010000 		.4byte	.LASF63
 2528 0517 01       		.byte	0x1
 2529 0518 4404     		.2byte	0x444
 2530 051a 00000000 		.4byte	.LFB29
 2531 051e 44000000 		.4byte	.LFE29-.LFB29
 2532 0522 01       		.uleb128 0x1
 2533 0523 9C       		.byte	0x9c
 2534 0524 47050000 		.4byte	0x547
 2535 0528 0B       		.uleb128 0xb
 2536 0529 6D010000 		.4byte	.LASF62
 2537 052d 01       		.byte	0x1
 2538 052e 4404     		.2byte	0x444
 2539 0530 76000000 		.4byte	0x76
 2540 0534 02       		.uleb128 0x2
 2541 0535 91       		.byte	0x91
 2542 0536 64       		.sleb128 -28
 2543 0537 0C       		.uleb128 0xc
 2544 0538 FA040000 		.4byte	.LASF20
 2545 053c 01       		.byte	0x1
 2546 053d 4604     		.2byte	0x446
 2547 053f 6B000000 		.4byte	0x6b
 2548 0543 02       		.uleb128 0x2
 2549 0544 91       		.byte	0x91
 2550 0545 6F       		.sleb128 -17
 2551 0546 00       		.byte	0
 2552 0547 0A       		.uleb128 0xa
 2553 0548 C9040000 		.4byte	.LASF64
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 70


 2554 054c 01       		.byte	0x1
 2555 054d 6504     		.2byte	0x465
 2556 054f 00000000 		.4byte	.LFB30
 2557 0553 48000000 		.4byte	.LFE30-.LFB30
 2558 0557 01       		.uleb128 0x1
 2559 0558 9C       		.byte	0x9c
 2560 0559 7C050000 		.4byte	0x57c
 2561 055d 0B       		.uleb128 0xb
 2562 055e 6D010000 		.4byte	.LASF62
 2563 0562 01       		.byte	0x1
 2564 0563 6504     		.2byte	0x465
 2565 0565 76000000 		.4byte	0x76
 2566 0569 02       		.uleb128 0x2
 2567 056a 91       		.byte	0x91
 2568 056b 64       		.sleb128 -28
 2569 056c 0C       		.uleb128 0xc
 2570 056d FA040000 		.4byte	.LASF20
 2571 0571 01       		.byte	0x1
 2572 0572 6704     		.2byte	0x467
 2573 0574 6B000000 		.4byte	0x6b
 2574 0578 02       		.uleb128 0x2
 2575 0579 91       		.byte	0x91
 2576 057a 6F       		.sleb128 -17
 2577 057b 00       		.byte	0
 2578 057c 0A       		.uleb128 0xa
 2579 057d 96040000 		.4byte	.LASF65
 2580 0581 01       		.byte	0x1
 2581 0582 8504     		.2byte	0x485
 2582 0584 00000000 		.4byte	.LFB31
 2583 0588 44000000 		.4byte	.LFE31-.LFB31
 2584 058c 01       		.uleb128 0x1
 2585 058d 9C       		.byte	0x9c
 2586 058e B1050000 		.4byte	0x5b1
 2587 0592 0B       		.uleb128 0xb
 2588 0593 6D010000 		.4byte	.LASF62
 2589 0597 01       		.byte	0x1
 2590 0598 8504     		.2byte	0x485
 2591 059a 76000000 		.4byte	0x76
 2592 059e 02       		.uleb128 0x2
 2593 059f 91       		.byte	0x91
 2594 05a0 64       		.sleb128 -28
 2595 05a1 0C       		.uleb128 0xc
 2596 05a2 FA040000 		.4byte	.LASF20
 2597 05a6 01       		.byte	0x1
 2598 05a7 8704     		.2byte	0x487
 2599 05a9 6B000000 		.4byte	0x6b
 2600 05ad 02       		.uleb128 0x2
 2601 05ae 91       		.byte	0x91
 2602 05af 6F       		.sleb128 -17
 2603 05b0 00       		.byte	0
 2604 05b1 0A       		.uleb128 0xa
 2605 05b2 79040000 		.4byte	.LASF66
 2606 05b6 01       		.byte	0x1
 2607 05b7 A604     		.2byte	0x4a6
 2608 05b9 00000000 		.4byte	.LFB32
 2609 05bd 44000000 		.4byte	.LFE32-.LFB32
 2610 05c1 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 71


 2611 05c2 9C       		.byte	0x9c
 2612 05c3 E6050000 		.4byte	0x5e6
 2613 05c7 0B       		.uleb128 0xb
 2614 05c8 6D010000 		.4byte	.LASF62
 2615 05cc 01       		.byte	0x1
 2616 05cd A604     		.2byte	0x4a6
 2617 05cf 76000000 		.4byte	0x76
 2618 05d3 02       		.uleb128 0x2
 2619 05d4 91       		.byte	0x91
 2620 05d5 64       		.sleb128 -28
 2621 05d6 0C       		.uleb128 0xc
 2622 05d7 FA040000 		.4byte	.LASF20
 2623 05db 01       		.byte	0x1
 2624 05dc A804     		.2byte	0x4a8
 2625 05de 6B000000 		.4byte	0x6b
 2626 05e2 02       		.uleb128 0x2
 2627 05e3 91       		.byte	0x91
 2628 05e4 6F       		.sleb128 -17
 2629 05e5 00       		.byte	0
 2630 05e6 0A       		.uleb128 0xa
 2631 05e7 10010000 		.4byte	.LASF67
 2632 05eb 01       		.byte	0x1
 2633 05ec CE04     		.2byte	0x4ce
 2634 05ee 00000000 		.4byte	.LFB33
 2635 05f2 3C000000 		.4byte	.LFE33-.LFB33
 2636 05f6 01       		.uleb128 0x1
 2637 05f7 9C       		.byte	0x9c
 2638 05f8 2A060000 		.4byte	0x62a
 2639 05fc 0B       		.uleb128 0xb
 2640 05fd 79010000 		.4byte	.LASF38
 2641 0601 01       		.byte	0x1
 2642 0602 CE04     		.2byte	0x4ce
 2643 0604 76000000 		.4byte	0x76
 2644 0608 02       		.uleb128 0x2
 2645 0609 91       		.byte	0x91
 2646 060a 64       		.sleb128 -28
 2647 060b 0B       		.uleb128 0xb
 2648 060c A6010000 		.4byte	.LASF68
 2649 0610 01       		.byte	0x1
 2650 0611 CE04     		.2byte	0x4ce
 2651 0613 76000000 		.4byte	0x76
 2652 0617 02       		.uleb128 0x2
 2653 0618 91       		.byte	0x91
 2654 0619 60       		.sleb128 -32
 2655 061a 0C       		.uleb128 0xc
 2656 061b FA040000 		.4byte	.LASF20
 2657 061f 01       		.byte	0x1
 2658 0620 D004     		.2byte	0x4d0
 2659 0622 6B000000 		.4byte	0x6b
 2660 0626 02       		.uleb128 0x2
 2661 0627 91       		.byte	0x91
 2662 0628 6F       		.sleb128 -17
 2663 0629 00       		.byte	0
 2664 062a 0E       		.uleb128 0xe
 2665 062b 1F040000 		.4byte	.LASF69
 2666 062f 01       		.byte	0x1
 2667 0630 EB04     		.2byte	0x4eb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 72


 2668 0632 76000000 		.4byte	0x76
 2669 0636 00000000 		.4byte	.LFB34
 2670 063a 20000000 		.4byte	.LFE34-.LFB34
 2671 063e 01       		.uleb128 0x1
 2672 063f 9C       		.byte	0x9c
 2673 0640 0D       		.uleb128 0xd
 2674 0641 85000000 		.4byte	.LASF70
 2675 0645 01       		.byte	0x1
 2676 0646 0405     		.2byte	0x504
 2677 0648 00000000 		.4byte	.LFB35
 2678 064c 18000000 		.4byte	.LFE35-.LFB35
 2679 0650 01       		.uleb128 0x1
 2680 0651 9C       		.byte	0x9c
 2681 0652 66060000 		.4byte	0x666
 2682 0656 0B       		.uleb128 0xb
 2683 0657 CA020000 		.4byte	.LASF71
 2684 065b 01       		.byte	0x1
 2685 065c 0405     		.2byte	0x504
 2686 065e 76000000 		.4byte	0x76
 2687 0662 02       		.uleb128 0x2
 2688 0663 91       		.byte	0x91
 2689 0664 74       		.sleb128 -12
 2690 0665 00       		.byte	0
 2691 0666 0E       		.uleb128 0xe
 2692 0667 5A040000 		.4byte	.LASF72
 2693 066b 01       		.byte	0x1
 2694 066c 1B05     		.2byte	0x51b
 2695 066e 76000000 		.4byte	0x76
 2696 0672 00000000 		.4byte	.LFB36
 2697 0676 14000000 		.4byte	.LFE36-.LFB36
 2698 067a 01       		.uleb128 0x1
 2699 067b 9C       		.byte	0x9c
 2700 067c 0E       		.uleb128 0xe
 2701 067d 27000000 		.4byte	.LASF73
 2702 0681 01       		.byte	0x1
 2703 0682 3205     		.2byte	0x532
 2704 0684 76000000 		.4byte	0x76
 2705 0688 00000000 		.4byte	.LFB37
 2706 068c 14000000 		.4byte	.LFE37-.LFB37
 2707 0690 01       		.uleb128 0x1
 2708 0691 9C       		.byte	0x9c
 2709 0692 0D       		.uleb128 0xd
 2710 0693 45040000 		.4byte	.LASF74
 2711 0697 01       		.byte	0x1
 2712 0698 4905     		.2byte	0x549
 2713 069a 00000000 		.4byte	.LFB38
 2714 069e 18000000 		.4byte	.LFE38-.LFB38
 2715 06a2 01       		.uleb128 0x1
 2716 06a3 9C       		.byte	0x9c
 2717 06a4 B8060000 		.4byte	0x6b8
 2718 06a8 0B       		.uleb128 0xb
 2719 06a9 CA020000 		.4byte	.LASF71
 2720 06ad 01       		.byte	0x1
 2721 06ae 4905     		.2byte	0x549
 2722 06b0 76000000 		.4byte	0x76
 2723 06b4 02       		.uleb128 0x2
 2724 06b5 91       		.byte	0x91
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 73


 2725 06b6 74       		.sleb128 -12
 2726 06b7 00       		.byte	0
 2727 06b8 0D       		.uleb128 0xd
 2728 06b9 E3030000 		.4byte	.LASF75
 2729 06bd 01       		.byte	0x1
 2730 06be 6005     		.2byte	0x560
 2731 06c0 00000000 		.4byte	.LFB39
 2732 06c4 18000000 		.4byte	.LFE39-.LFB39
 2733 06c8 01       		.uleb128 0x1
 2734 06c9 9C       		.byte	0x9c
 2735 06ca DE060000 		.4byte	0x6de
 2736 06ce 0B       		.uleb128 0xb
 2737 06cf CA020000 		.4byte	.LASF71
 2738 06d3 01       		.byte	0x1
 2739 06d4 6005     		.2byte	0x560
 2740 06d6 76000000 		.4byte	0x76
 2741 06da 02       		.uleb128 0x2
 2742 06db 91       		.byte	0x91
 2743 06dc 74       		.sleb128 -12
 2744 06dd 00       		.byte	0
 2745 06de 0F       		.uleb128 0xf
 2746 06df 34020000 		.4byte	.LASF79
 2747 06e3 01       		.byte	0x1
 2748 06e4 15       		.byte	0x15
 2749 06e5 6B000000 		.4byte	0x6b
 2750 06e9 05       		.uleb128 0x5
 2751 06ea 03       		.byte	0x3
 2752 06eb 00000000 		.4byte	PWM_B_initVar
 2753 06ef 00       		.byte	0
 2754              		.section	.debug_abbrev,"",%progbits
 2755              	.Ldebug_abbrev0:
 2756 0000 01       		.uleb128 0x1
 2757 0001 11       		.uleb128 0x11
 2758 0002 01       		.byte	0x1
 2759 0003 25       		.uleb128 0x25
 2760 0004 0E       		.uleb128 0xe
 2761 0005 13       		.uleb128 0x13
 2762 0006 0B       		.uleb128 0xb
 2763 0007 03       		.uleb128 0x3
 2764 0008 0E       		.uleb128 0xe
 2765 0009 1B       		.uleb128 0x1b
 2766 000a 0E       		.uleb128 0xe
 2767 000b 55       		.uleb128 0x55
 2768 000c 17       		.uleb128 0x17
 2769 000d 11       		.uleb128 0x11
 2770 000e 01       		.uleb128 0x1
 2771 000f 10       		.uleb128 0x10
 2772 0010 17       		.uleb128 0x17
 2773 0011 00       		.byte	0
 2774 0012 00       		.byte	0
 2775 0013 02       		.uleb128 0x2
 2776 0014 24       		.uleb128 0x24
 2777 0015 00       		.byte	0
 2778 0016 0B       		.uleb128 0xb
 2779 0017 0B       		.uleb128 0xb
 2780 0018 3E       		.uleb128 0x3e
 2781 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 74


 2782 001a 03       		.uleb128 0x3
 2783 001b 0E       		.uleb128 0xe
 2784 001c 00       		.byte	0
 2785 001d 00       		.byte	0
 2786 001e 03       		.uleb128 0x3
 2787 001f 24       		.uleb128 0x24
 2788 0020 00       		.byte	0
 2789 0021 0B       		.uleb128 0xb
 2790 0022 0B       		.uleb128 0xb
 2791 0023 3E       		.uleb128 0x3e
 2792 0024 0B       		.uleb128 0xb
 2793 0025 03       		.uleb128 0x3
 2794 0026 08       		.uleb128 0x8
 2795 0027 00       		.byte	0
 2796 0028 00       		.byte	0
 2797 0029 04       		.uleb128 0x4
 2798 002a 16       		.uleb128 0x16
 2799 002b 00       		.byte	0
 2800 002c 03       		.uleb128 0x3
 2801 002d 0E       		.uleb128 0xe
 2802 002e 3A       		.uleb128 0x3a
 2803 002f 0B       		.uleb128 0xb
 2804 0030 3B       		.uleb128 0x3b
 2805 0031 0B       		.uleb128 0xb
 2806 0032 49       		.uleb128 0x49
 2807 0033 13       		.uleb128 0x13
 2808 0034 00       		.byte	0
 2809 0035 00       		.byte	0
 2810 0036 05       		.uleb128 0x5
 2811 0037 16       		.uleb128 0x16
 2812 0038 00       		.byte	0
 2813 0039 03       		.uleb128 0x3
 2814 003a 0E       		.uleb128 0xe
 2815 003b 3A       		.uleb128 0x3a
 2816 003c 0B       		.uleb128 0xb
 2817 003d 3B       		.uleb128 0x3b
 2818 003e 05       		.uleb128 0x5
 2819 003f 49       		.uleb128 0x49
 2820 0040 13       		.uleb128 0x13
 2821 0041 00       		.byte	0
 2822 0042 00       		.byte	0
 2823 0043 06       		.uleb128 0x6
 2824 0044 35       		.uleb128 0x35
 2825 0045 00       		.byte	0
 2826 0046 49       		.uleb128 0x49
 2827 0047 13       		.uleb128 0x13
 2828 0048 00       		.byte	0
 2829 0049 00       		.byte	0
 2830 004a 07       		.uleb128 0x7
 2831 004b 2E       		.uleb128 0x2e
 2832 004c 00       		.byte	0
 2833 004d 3F       		.uleb128 0x3f
 2834 004e 19       		.uleb128 0x19
 2835 004f 03       		.uleb128 0x3
 2836 0050 0E       		.uleb128 0xe
 2837 0051 3A       		.uleb128 0x3a
 2838 0052 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 75


 2839 0053 3B       		.uleb128 0x3b
 2840 0054 0B       		.uleb128 0xb
 2841 0055 27       		.uleb128 0x27
 2842 0056 19       		.uleb128 0x19
 2843 0057 11       		.uleb128 0x11
 2844 0058 01       		.uleb128 0x1
 2845 0059 12       		.uleb128 0x12
 2846 005a 06       		.uleb128 0x6
 2847 005b 40       		.uleb128 0x40
 2848 005c 18       		.uleb128 0x18
 2849 005d 9642     		.uleb128 0x2116
 2850 005f 19       		.uleb128 0x19
 2851 0060 00       		.byte	0
 2852 0061 00       		.byte	0
 2853 0062 08       		.uleb128 0x8
 2854 0063 2E       		.uleb128 0x2e
 2855 0064 01       		.byte	0x1
 2856 0065 3F       		.uleb128 0x3f
 2857 0066 19       		.uleb128 0x19
 2858 0067 03       		.uleb128 0x3
 2859 0068 0E       		.uleb128 0xe
 2860 0069 3A       		.uleb128 0x3a
 2861 006a 0B       		.uleb128 0xb
 2862 006b 3B       		.uleb128 0x3b
 2863 006c 0B       		.uleb128 0xb
 2864 006d 27       		.uleb128 0x27
 2865 006e 19       		.uleb128 0x19
 2866 006f 11       		.uleb128 0x11
 2867 0070 01       		.uleb128 0x1
 2868 0071 12       		.uleb128 0x12
 2869 0072 06       		.uleb128 0x6
 2870 0073 40       		.uleb128 0x40
 2871 0074 18       		.uleb128 0x18
 2872 0075 9642     		.uleb128 0x2116
 2873 0077 19       		.uleb128 0x19
 2874 0078 01       		.uleb128 0x1
 2875 0079 13       		.uleb128 0x13
 2876 007a 00       		.byte	0
 2877 007b 00       		.byte	0
 2878 007c 09       		.uleb128 0x9
 2879 007d 34       		.uleb128 0x34
 2880 007e 00       		.byte	0
 2881 007f 03       		.uleb128 0x3
 2882 0080 0E       		.uleb128 0xe
 2883 0081 3A       		.uleb128 0x3a
 2884 0082 0B       		.uleb128 0xb
 2885 0083 3B       		.uleb128 0x3b
 2886 0084 0B       		.uleb128 0xb
 2887 0085 49       		.uleb128 0x49
 2888 0086 13       		.uleb128 0x13
 2889 0087 02       		.uleb128 0x2
 2890 0088 18       		.uleb128 0x18
 2891 0089 00       		.byte	0
 2892 008a 00       		.byte	0
 2893 008b 0A       		.uleb128 0xa
 2894 008c 2E       		.uleb128 0x2e
 2895 008d 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 76


 2896 008e 3F       		.uleb128 0x3f
 2897 008f 19       		.uleb128 0x19
 2898 0090 03       		.uleb128 0x3
 2899 0091 0E       		.uleb128 0xe
 2900 0092 3A       		.uleb128 0x3a
 2901 0093 0B       		.uleb128 0xb
 2902 0094 3B       		.uleb128 0x3b
 2903 0095 05       		.uleb128 0x5
 2904 0096 27       		.uleb128 0x27
 2905 0097 19       		.uleb128 0x19
 2906 0098 11       		.uleb128 0x11
 2907 0099 01       		.uleb128 0x1
 2908 009a 12       		.uleb128 0x12
 2909 009b 06       		.uleb128 0x6
 2910 009c 40       		.uleb128 0x40
 2911 009d 18       		.uleb128 0x18
 2912 009e 9642     		.uleb128 0x2116
 2913 00a0 19       		.uleb128 0x19
 2914 00a1 01       		.uleb128 0x1
 2915 00a2 13       		.uleb128 0x13
 2916 00a3 00       		.byte	0
 2917 00a4 00       		.byte	0
 2918 00a5 0B       		.uleb128 0xb
 2919 00a6 05       		.uleb128 0x5
 2920 00a7 00       		.byte	0
 2921 00a8 03       		.uleb128 0x3
 2922 00a9 0E       		.uleb128 0xe
 2923 00aa 3A       		.uleb128 0x3a
 2924 00ab 0B       		.uleb128 0xb
 2925 00ac 3B       		.uleb128 0x3b
 2926 00ad 05       		.uleb128 0x5
 2927 00ae 49       		.uleb128 0x49
 2928 00af 13       		.uleb128 0x13
 2929 00b0 02       		.uleb128 0x2
 2930 00b1 18       		.uleb128 0x18
 2931 00b2 00       		.byte	0
 2932 00b3 00       		.byte	0
 2933 00b4 0C       		.uleb128 0xc
 2934 00b5 34       		.uleb128 0x34
 2935 00b6 00       		.byte	0
 2936 00b7 03       		.uleb128 0x3
 2937 00b8 0E       		.uleb128 0xe
 2938 00b9 3A       		.uleb128 0x3a
 2939 00ba 0B       		.uleb128 0xb
 2940 00bb 3B       		.uleb128 0x3b
 2941 00bc 05       		.uleb128 0x5
 2942 00bd 49       		.uleb128 0x49
 2943 00be 13       		.uleb128 0x13
 2944 00bf 02       		.uleb128 0x2
 2945 00c0 18       		.uleb128 0x18
 2946 00c1 00       		.byte	0
 2947 00c2 00       		.byte	0
 2948 00c3 0D       		.uleb128 0xd
 2949 00c4 2E       		.uleb128 0x2e
 2950 00c5 01       		.byte	0x1
 2951 00c6 3F       		.uleb128 0x3f
 2952 00c7 19       		.uleb128 0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 77


 2953 00c8 03       		.uleb128 0x3
 2954 00c9 0E       		.uleb128 0xe
 2955 00ca 3A       		.uleb128 0x3a
 2956 00cb 0B       		.uleb128 0xb
 2957 00cc 3B       		.uleb128 0x3b
 2958 00cd 05       		.uleb128 0x5
 2959 00ce 27       		.uleb128 0x27
 2960 00cf 19       		.uleb128 0x19
 2961 00d0 11       		.uleb128 0x11
 2962 00d1 01       		.uleb128 0x1
 2963 00d2 12       		.uleb128 0x12
 2964 00d3 06       		.uleb128 0x6
 2965 00d4 40       		.uleb128 0x40
 2966 00d5 18       		.uleb128 0x18
 2967 00d6 9742     		.uleb128 0x2117
 2968 00d8 19       		.uleb128 0x19
 2969 00d9 01       		.uleb128 0x1
 2970 00da 13       		.uleb128 0x13
 2971 00db 00       		.byte	0
 2972 00dc 00       		.byte	0
 2973 00dd 0E       		.uleb128 0xe
 2974 00de 2E       		.uleb128 0x2e
 2975 00df 00       		.byte	0
 2976 00e0 3F       		.uleb128 0x3f
 2977 00e1 19       		.uleb128 0x19
 2978 00e2 03       		.uleb128 0x3
 2979 00e3 0E       		.uleb128 0xe
 2980 00e4 3A       		.uleb128 0x3a
 2981 00e5 0B       		.uleb128 0xb
 2982 00e6 3B       		.uleb128 0x3b
 2983 00e7 05       		.uleb128 0x5
 2984 00e8 27       		.uleb128 0x27
 2985 00e9 19       		.uleb128 0x19
 2986 00ea 49       		.uleb128 0x49
 2987 00eb 13       		.uleb128 0x13
 2988 00ec 11       		.uleb128 0x11
 2989 00ed 01       		.uleb128 0x1
 2990 00ee 12       		.uleb128 0x12
 2991 00ef 06       		.uleb128 0x6
 2992 00f0 40       		.uleb128 0x40
 2993 00f1 18       		.uleb128 0x18
 2994 00f2 9742     		.uleb128 0x2117
 2995 00f4 19       		.uleb128 0x19
 2996 00f5 00       		.byte	0
 2997 00f6 00       		.byte	0
 2998 00f7 0F       		.uleb128 0xf
 2999 00f8 34       		.uleb128 0x34
 3000 00f9 00       		.byte	0
 3001 00fa 03       		.uleb128 0x3
 3002 00fb 0E       		.uleb128 0xe
 3003 00fc 3A       		.uleb128 0x3a
 3004 00fd 0B       		.uleb128 0xb
 3005 00fe 3B       		.uleb128 0x3b
 3006 00ff 0B       		.uleb128 0xb
 3007 0100 49       		.uleb128 0x49
 3008 0101 13       		.uleb128 0x13
 3009 0102 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 78


 3010 0103 19       		.uleb128 0x19
 3011 0104 02       		.uleb128 0x2
 3012 0105 18       		.uleb128 0x18
 3013 0106 00       		.byte	0
 3014 0107 00       		.byte	0
 3015 0108 00       		.byte	0
 3016              		.section	.debug_aranges,"",%progbits
 3017 0000 54010000 		.4byte	0x154
 3018 0004 0200     		.2byte	0x2
 3019 0006 00000000 		.4byte	.Ldebug_info0
 3020 000a 04       		.byte	0x4
 3021 000b 00       		.byte	0
 3022 000c 0000     		.2byte	0
 3023 000e 0000     		.2byte	0
 3024 0010 00000000 		.4byte	.LFB0
 3025 0014 58000000 		.4byte	.LFE0-.LFB0
 3026 0018 00000000 		.4byte	.LFB1
 3027 001c 38000000 		.4byte	.LFE1-.LFB1
 3028 0020 00000000 		.4byte	.LFB2
 3029 0024 24000000 		.4byte	.LFE2-.LFB2
 3030 0028 00000000 		.4byte	.LFB3
 3031 002c 30000000 		.4byte	.LFE3-.LFB3
 3032 0030 00000000 		.4byte	.LFB4
 3033 0034 48000000 		.4byte	.LFE4-.LFB4
 3034 0038 00000000 		.4byte	.LFB5
 3035 003c 48000000 		.4byte	.LFE5-.LFB5
 3036 0040 00000000 		.4byte	.LFB6
 3037 0044 48000000 		.4byte	.LFE6-.LFB6
 3038 0048 00000000 		.4byte	.LFB7
 3039 004c 4C000000 		.4byte	.LFE7-.LFB7
 3040 0050 00000000 		.4byte	.LFB8
 3041 0054 1C000000 		.4byte	.LFE8-.LFB8
 3042 0058 00000000 		.4byte	.LFB9
 3043 005c 48000000 		.4byte	.LFE9-.LFB9
 3044 0060 00000000 		.4byte	.LFB10
 3045 0064 48000000 		.4byte	.LFE10-.LFB10
 3046 0068 00000000 		.4byte	.LFB11
 3047 006c 4C000000 		.4byte	.LFE11-.LFB11
 3048 0070 00000000 		.4byte	.LFB12
 3049 0074 48000000 		.4byte	.LFE12-.LFB12
 3050 0078 00000000 		.4byte	.LFB13
 3051 007c 1C000000 		.4byte	.LFE13-.LFB13
 3052 0080 00000000 		.4byte	.LFB14
 3053 0084 18000000 		.4byte	.LFE14-.LFB14
 3054 0088 00000000 		.4byte	.LFB15
 3055 008c 48000000 		.4byte	.LFE15-.LFB15
 3056 0090 00000000 		.4byte	.LFB16
 3057 0094 1C000000 		.4byte	.LFE16-.LFB16
 3058 0098 00000000 		.4byte	.LFB17
 3059 009c 18000000 		.4byte	.LFE17-.LFB17
 3060 00a0 00000000 		.4byte	.LFB18
 3061 00a4 48000000 		.4byte	.LFE18-.LFB18
 3062 00a8 00000000 		.4byte	.LFB19
 3063 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3064 00b0 00000000 		.4byte	.LFB20
 3065 00b4 18000000 		.4byte	.LFE20-.LFB20
 3066 00b8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 79


 3067 00bc 48000000 		.4byte	.LFE21-.LFB21
 3068 00c0 00000000 		.4byte	.LFB22
 3069 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3070 00c8 00000000 		.4byte	.LFB23
 3071 00cc 18000000 		.4byte	.LFE23-.LFB23
 3072 00d0 00000000 		.4byte	.LFB24
 3073 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3074 00d8 00000000 		.4byte	.LFB25
 3075 00dc 18000000 		.4byte	.LFE25-.LFB25
 3076 00e0 00000000 		.4byte	.LFB26
 3077 00e4 18000000 		.4byte	.LFE26-.LFB26
 3078 00e8 00000000 		.4byte	.LFB27
 3079 00ec 18000000 		.4byte	.LFE27-.LFB27
 3080 00f0 00000000 		.4byte	.LFB28
 3081 00f4 44000000 		.4byte	.LFE28-.LFB28
 3082 00f8 00000000 		.4byte	.LFB29
 3083 00fc 44000000 		.4byte	.LFE29-.LFB29
 3084 0100 00000000 		.4byte	.LFB30
 3085 0104 48000000 		.4byte	.LFE30-.LFB30
 3086 0108 00000000 		.4byte	.LFB31
 3087 010c 44000000 		.4byte	.LFE31-.LFB31
 3088 0110 00000000 		.4byte	.LFB32
 3089 0114 44000000 		.4byte	.LFE32-.LFB32
 3090 0118 00000000 		.4byte	.LFB33
 3091 011c 3C000000 		.4byte	.LFE33-.LFB33
 3092 0120 00000000 		.4byte	.LFB34
 3093 0124 20000000 		.4byte	.LFE34-.LFB34
 3094 0128 00000000 		.4byte	.LFB35
 3095 012c 18000000 		.4byte	.LFE35-.LFB35
 3096 0130 00000000 		.4byte	.LFB36
 3097 0134 14000000 		.4byte	.LFE36-.LFB36
 3098 0138 00000000 		.4byte	.LFB37
 3099 013c 14000000 		.4byte	.LFE37-.LFB37
 3100 0140 00000000 		.4byte	.LFB38
 3101 0144 18000000 		.4byte	.LFE38-.LFB38
 3102 0148 00000000 		.4byte	.LFB39
 3103 014c 18000000 		.4byte	.LFE39-.LFB39
 3104 0150 00000000 		.4byte	0
 3105 0154 00000000 		.4byte	0
 3106              		.section	.debug_ranges,"",%progbits
 3107              	.Ldebug_ranges0:
 3108 0000 00000000 		.4byte	.LFB0
 3109 0004 58000000 		.4byte	.LFE0
 3110 0008 00000000 		.4byte	.LFB1
 3111 000c 38000000 		.4byte	.LFE1
 3112 0010 00000000 		.4byte	.LFB2
 3113 0014 24000000 		.4byte	.LFE2
 3114 0018 00000000 		.4byte	.LFB3
 3115 001c 30000000 		.4byte	.LFE3
 3116 0020 00000000 		.4byte	.LFB4
 3117 0024 48000000 		.4byte	.LFE4
 3118 0028 00000000 		.4byte	.LFB5
 3119 002c 48000000 		.4byte	.LFE5
 3120 0030 00000000 		.4byte	.LFB6
 3121 0034 48000000 		.4byte	.LFE6
 3122 0038 00000000 		.4byte	.LFB7
 3123 003c 4C000000 		.4byte	.LFE7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 80


 3124 0040 00000000 		.4byte	.LFB8
 3125 0044 1C000000 		.4byte	.LFE8
 3126 0048 00000000 		.4byte	.LFB9
 3127 004c 48000000 		.4byte	.LFE9
 3128 0050 00000000 		.4byte	.LFB10
 3129 0054 48000000 		.4byte	.LFE10
 3130 0058 00000000 		.4byte	.LFB11
 3131 005c 4C000000 		.4byte	.LFE11
 3132 0060 00000000 		.4byte	.LFB12
 3133 0064 48000000 		.4byte	.LFE12
 3134 0068 00000000 		.4byte	.LFB13
 3135 006c 1C000000 		.4byte	.LFE13
 3136 0070 00000000 		.4byte	.LFB14
 3137 0074 18000000 		.4byte	.LFE14
 3138 0078 00000000 		.4byte	.LFB15
 3139 007c 48000000 		.4byte	.LFE15
 3140 0080 00000000 		.4byte	.LFB16
 3141 0084 1C000000 		.4byte	.LFE16
 3142 0088 00000000 		.4byte	.LFB17
 3143 008c 18000000 		.4byte	.LFE17
 3144 0090 00000000 		.4byte	.LFB18
 3145 0094 48000000 		.4byte	.LFE18
 3146 0098 00000000 		.4byte	.LFB19
 3147 009c 1C000000 		.4byte	.LFE19
 3148 00a0 00000000 		.4byte	.LFB20
 3149 00a4 18000000 		.4byte	.LFE20
 3150 00a8 00000000 		.4byte	.LFB21
 3151 00ac 48000000 		.4byte	.LFE21
 3152 00b0 00000000 		.4byte	.LFB22
 3153 00b4 1C000000 		.4byte	.LFE22
 3154 00b8 00000000 		.4byte	.LFB23
 3155 00bc 18000000 		.4byte	.LFE23
 3156 00c0 00000000 		.4byte	.LFB24
 3157 00c4 1C000000 		.4byte	.LFE24
 3158 00c8 00000000 		.4byte	.LFB25
 3159 00cc 18000000 		.4byte	.LFE25
 3160 00d0 00000000 		.4byte	.LFB26
 3161 00d4 18000000 		.4byte	.LFE26
 3162 00d8 00000000 		.4byte	.LFB27
 3163 00dc 18000000 		.4byte	.LFE27
 3164 00e0 00000000 		.4byte	.LFB28
 3165 00e4 44000000 		.4byte	.LFE28
 3166 00e8 00000000 		.4byte	.LFB29
 3167 00ec 44000000 		.4byte	.LFE29
 3168 00f0 00000000 		.4byte	.LFB30
 3169 00f4 48000000 		.4byte	.LFE30
 3170 00f8 00000000 		.4byte	.LFB31
 3171 00fc 44000000 		.4byte	.LFE31
 3172 0100 00000000 		.4byte	.LFB32
 3173 0104 44000000 		.4byte	.LFE32
 3174 0108 00000000 		.4byte	.LFB33
 3175 010c 3C000000 		.4byte	.LFE33
 3176 0110 00000000 		.4byte	.LFB34
 3177 0114 20000000 		.4byte	.LFE34
 3178 0118 00000000 		.4byte	.LFB35
 3179 011c 18000000 		.4byte	.LFE35
 3180 0120 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 81


 3181 0124 14000000 		.4byte	.LFE36
 3182 0128 00000000 		.4byte	.LFB37
 3183 012c 14000000 		.4byte	.LFE37
 3184 0130 00000000 		.4byte	.LFB38
 3185 0134 18000000 		.4byte	.LFE38
 3186 0138 00000000 		.4byte	.LFB39
 3187 013c 18000000 		.4byte	.LFE39
 3188 0140 00000000 		.4byte	0
 3189 0144 00000000 		.4byte	0
 3190              		.section	.debug_line,"",%progbits
 3191              	.Ldebug_line0:
 3192 0000 71030000 		.section	.debug_str,"MS",%progbits,1
 3192      02004400 
 3192      00000201 
 3192      FB0E0D00 
 3192      01010101 
 3193              	.LASF40:
 3194 0000 636F756E 		.ascii	"count\000"
 3194      7400
 3195              	.LASF56:
 3196 0006 50574D5F 		.ascii	"PWM_B_WriteCompareBuf\000"
 3196      425F5772 
 3196      69746543 
 3196      6F6D7061 
 3196      72654275 
 3197              	.LASF16:
 3198 001c 50574D5F 		.ascii	"PWM_B_Init\000"
 3198      425F496E 
 3198      697400
 3199              	.LASF73:
 3200 0027 50574D5F 		.ascii	"PWM_B_GetInterruptSource\000"
 3200      425F4765 
 3200      74496E74 
 3200      65727275 
 3200      7074536F 
 3201              	.LASF59:
 3202 0040 50574D5F 		.ascii	"PWM_B_ReadCapture\000"
 3202      425F5265 
 3202      61644361 
 3202      70747572 
 3202      6500
 3203              	.LASF44:
 3204 0052 70657269 		.ascii	"period\000"
 3204      6F6400
 3205              	.LASF35:
 3206 0059 50574D5F 		.ascii	"PWM_B_SetPWMDeadTime\000"
 3206      425F5365 
 3206      7450574D 
 3206      44656164 
 3206      54696D65 
 3207              	.LASF7:
 3208 006e 6C6F6E67 		.ascii	"long long unsigned int\000"
 3208      206C6F6E 
 3208      6720756E 
 3208      7369676E 
 3208      65642069 
 3209              	.LASF70:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 82


 3210 0085 50574D5F 		.ascii	"PWM_B_SetInterruptMode\000"
 3210      425F5365 
 3210      74496E74 
 3210      65727275 
 3210      70744D6F 
 3211              	.LASF37:
 3212 009c 50574D5F 		.ascii	"PWM_B_SetPWMInvert\000"
 3212      425F5365 
 3212      7450574D 
 3212      496E7665 
 3212      727400
 3213              	.LASF24:
 3214 00af 71644D6F 		.ascii	"qdMode\000"
 3214      646500
 3215              	.LASF27:
 3216 00b6 50574D5F 		.ascii	"PWM_B_SetOneShot\000"
 3216      425F5365 
 3216      744F6E65 
 3216      53686F74 
 3216      00
 3217              	.LASF6:
 3218 00c7 6C6F6E67 		.ascii	"long long int\000"
 3218      206C6F6E 
 3218      6720696E 
 3218      7400
 3219              	.LASF0:
 3220 00d5 7369676E 		.ascii	"signed char\000"
 3220      65642063 
 3220      68617200 
 3221              	.LASF55:
 3222 00e1 50574D5F 		.ascii	"PWM_B_ReadCompare\000"
 3222      425F5265 
 3222      6164436F 
 3222      6D706172 
 3222      6500
 3223              	.LASF51:
 3224 00f3 50574D5F 		.ascii	"PWM_B_ReadPeriodBuf\000"
 3224      425F5265 
 3224      61645065 
 3224      72696F64 
 3224      42756600 
 3225              	.LASF4:
 3226 0107 6C6F6E67 		.ascii	"long int\000"
 3226      20696E74 
 3226      00
 3227              	.LASF67:
 3228 0110 50574D5F 		.ascii	"PWM_B_TriggerCommand\000"
 3228      425F5472 
 3228      69676765 
 3228      72436F6D 
 3228      6D616E64 
 3229              	.LASF18:
 3230 0125 50574D5F 		.ascii	"PWM_B_Enable\000"
 3230      425F456E 
 3230      61626C65 
 3230      00
 3231              	.LASF9:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 83


 3232 0132 75696E74 		.ascii	"uint8\000"
 3232      3800
 3233              	.LASF12:
 3234 0138 646F7562 		.ascii	"double\000"
 3234      6C6500
 3235              	.LASF52:
 3236 013f 50574D5F 		.ascii	"PWM_B_SetPeriodSwap\000"
 3236      425F5365 
 3236      74506572 
 3236      696F6453 
 3236      77617000 
 3237              	.LASF10:
 3238 0153 75696E74 		.ascii	"uint32\000"
 3238      333200
 3239              	.LASF25:
 3240 015a 50574D5F 		.ascii	"PWM_B_SetPrescaler\000"
 3240      425F5365 
 3240      74507265 
 3240      7363616C 
 3240      657200
 3241              	.LASF62:
 3242 016d 74726967 		.ascii	"triggerMode\000"
 3242      6765724D 
 3242      6F646500 
 3243              	.LASF38:
 3244 0179 6D61736B 		.ascii	"mask\000"
 3244      00
 3245              	.LASF45:
 3246 017e 50574D5F 		.ascii	"PWM_B_ReadCounter\000"
 3246      425F5265 
 3246      6164436F 
 3246      756E7465 
 3246      7200
 3247              	.LASF36:
 3248 0190 64656164 		.ascii	"deadTime\000"
 3248      54696D65 
 3248      00
 3249              	.LASF8:
 3250 0199 756E7369 		.ascii	"unsigned int\000"
 3250      676E6564 
 3250      20696E74 
 3250      00
 3251              	.LASF68:
 3252 01a6 636F6D6D 		.ascii	"command\000"
 3252      616E6400 
 3253              	.LASF5:
 3254 01ae 6C6F6E67 		.ascii	"long unsigned int\000"
 3254      20756E73 
 3254      69676E65 
 3254      6420696E 
 3254      7400
 3255              	.LASF30:
 3256 01c0 6D6F6465 		.ascii	"modeMask\000"
 3256      4D61736B 
 3256      00
 3257              	.LASF22:
 3258 01c9 50574D5F 		.ascii	"PWM_B_SetQDMode\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 84


 3258      425F5365 
 3258      7451444D 
 3258      6F646500 
 3259              	.LASF46:
 3260 01d9 50574D5F 		.ascii	"PWM_B_ReadPeriod\000"
 3260      425F5265 
 3260      61645065 
 3260      72696F64 
 3260      00
 3261              	.LASF3:
 3262 01ea 73686F72 		.ascii	"short unsigned int\000"
 3262      7420756E 
 3262      7369676E 
 3262      65642069 
 3262      6E7400
 3263              	.LASF63:
 3264 01fd 50574D5F 		.ascii	"PWM_B_SetReloadMode\000"
 3264      425F5365 
 3264      7452656C 
 3264      6F61644D 
 3264      6F646500 
 3265              	.LASF28:
 3266 0211 6F6E6553 		.ascii	"oneShotEnable\000"
 3266      686F7445 
 3266      6E61626C 
 3266      6500
 3267              	.LASF41:
 3268 021f 50574D5F 		.ascii	"PWM_B_SetCounterMode\000"
 3268      425F5365 
 3268      74436F75 
 3268      6E746572 
 3268      4D6F6465 
 3269              	.LASF79:
 3270 0234 50574D5F 		.ascii	"PWM_B_initVar\000"
 3270      425F696E 
 3270      69745661 
 3270      7200
 3271              	.LASF77:
 3272 0242 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_B.c\000"
 3272      6E657261 
 3272      7465645F 
 3272      536F7572 
 3272      63655C50 
 3273              	.LASF14:
 3274 0263 72656733 		.ascii	"reg32\000"
 3274      3200
 3275              	.LASF49:
 3276 0269 50574D5F 		.ascii	"PWM_B_WritePeriodBuf\000"
 3276      425F5772 
 3276      69746550 
 3276      6572696F 
 3276      64427566 
 3277              	.LASF15:
 3278 027e 73697A65 		.ascii	"sizetype\000"
 3278      74797065 
 3278      00
 3279              	.LASF32:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 85


 3280 0287 73796E63 		.ascii	"syncKillEnable\000"
 3280      4B696C6C 
 3280      456E6162 
 3280      6C6500
 3281              	.LASF54:
 3282 0296 636F6D70 		.ascii	"compare\000"
 3282      61726500 
 3283              	.LASF29:
 3284 029e 50574D5F 		.ascii	"PWM_B_SetPWMMode\000"
 3284      425F5365 
 3284      7450574D 
 3284      4D6F6465 
 3284      00
 3285              	.LASF61:
 3286 02af 50574D5F 		.ascii	"PWM_B_SetCaptureMode\000"
 3286      425F5365 
 3286      74436170 
 3286      74757265 
 3286      4D6F6465 
 3287              	.LASF11:
 3288 02c4 666C6F61 		.ascii	"float\000"
 3288      7400
 3289              	.LASF71:
 3290 02ca 696E7465 		.ascii	"interruptMask\000"
 3290      72727570 
 3290      744D6173 
 3290      6B00
 3291              	.LASF26:
 3292 02d8 70726573 		.ascii	"prescaler\000"
 3292      63616C65 
 3292      7200
 3293              	.LASF76:
 3294 02e2 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3294      4320342E 
 3294      382E3420 
 3294      32303134 
 3294      30353236 
 3295 0315 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3295      20726576 
 3295      6973696F 
 3295      6E203231 
 3295      31333538 
 3296 0348 30202D66 		.ascii	"0 -ffunction-sections\000"
 3296      66756E63 
 3296      74696F6E 
 3296      2D736563 
 3296      74696F6E 
 3297              	.LASF60:
 3298 035e 50574D5F 		.ascii	"PWM_B_ReadCaptureBuf\000"
 3298      425F5265 
 3298      61644361 
 3298      70747572 
 3298      65427566 
 3299              	.LASF78:
 3300 0373 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 3300      73657273 
 3300      5C6D6974 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 86


 3300      6368656C 
 3300      6C5C446F 
 3301 03a0 2D546872 		.ascii	"-Throttle\\ExampleProject1\\Lab Solutions\\Lab 4 AD"
 3301      6F74746C 
 3301      655C4578 
 3301      616D706C 
 3301      6550726F 
 3302 03d0 432E6379 		.ascii	"C.cydsn\000"
 3302      64736E00 
 3303              	.LASF19:
 3304 03d8 50574D5F 		.ascii	"PWM_B_Stop\000"
 3304      425F5374 
 3304      6F7000
 3305              	.LASF75:
 3306 03e3 50574D5F 		.ascii	"PWM_B_SetInterrupt\000"
 3306      425F5365 
 3306      74496E74 
 3306      65727275 
 3306      707400
 3307              	.LASF1:
 3308 03f6 756E7369 		.ascii	"unsigned char\000"
 3308      676E6564 
 3308      20636861 
 3308      7200
 3309              	.LASF34:
 3310 0404 73746F70 		.ascii	"stopOnKillEnable\000"
 3310      4F6E4B69 
 3310      6C6C456E 
 3310      61626C65 
 3310      00
 3311              	.LASF2:
 3312 0415 73686F72 		.ascii	"short int\000"
 3312      7420696E 
 3312      7400
 3313              	.LASF69:
 3314 041f 50574D5F 		.ascii	"PWM_B_ReadStatus\000"
 3314      425F5265 
 3314      61645374 
 3314      61747573 
 3314      00
 3315              	.LASF47:
 3316 0430 50574D5F 		.ascii	"PWM_B_SetCompareSwap\000"
 3316      425F5365 
 3316      74436F6D 
 3316      70617265 
 3316      53776170 
 3317              	.LASF74:
 3318 0445 50574D5F 		.ascii	"PWM_B_ClearInterrupt\000"
 3318      425F436C 
 3318      65617249 
 3318      6E746572 
 3318      72757074 
 3319              	.LASF72:
 3320 045a 50574D5F 		.ascii	"PWM_B_GetInterruptSourceMasked\000"
 3320      425F4765 
 3320      74496E74 
 3320      65727275 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 87


 3320      7074536F 
 3321              	.LASF66:
 3322 0479 50574D5F 		.ascii	"PWM_B_SetCountMode\000"
 3322      425F5365 
 3322      74436F75 
 3322      6E744D6F 
 3322      646500
 3323              	.LASF13:
 3324 048c 63686172 		.ascii	"char\000"
 3324      00
 3325              	.LASF23:
 3326 0491 6D6F6465 		.ascii	"mode\000"
 3326      00
 3327              	.LASF65:
 3328 0496 50574D5F 		.ascii	"PWM_B_SetStopMode\000"
 3328      425F5365 
 3328      7453746F 
 3328      704D6F64 
 3328      6500
 3329              	.LASF31:
 3330 04a8 50574D5F 		.ascii	"PWM_B_SetPWMSyncKill\000"
 3330      425F5365 
 3330      7450574D 
 3330      53796E63 
 3330      4B696C6C 
 3331              	.LASF42:
 3332 04bd 636F756E 		.ascii	"counterMode\000"
 3332      7465724D 
 3332      6F646500 
 3333              	.LASF64:
 3334 04c9 50574D5F 		.ascii	"PWM_B_SetStartMode\000"
 3334      425F5365 
 3334      74537461 
 3334      72744D6F 
 3334      646500
 3335              	.LASF57:
 3336 04dc 636F6D70 		.ascii	"compareBuf\000"
 3336      61726542 
 3336      756600
 3337              	.LASF53:
 3338 04e7 50574D5F 		.ascii	"PWM_B_WriteCompare\000"
 3338      425F5772 
 3338      69746543 
 3338      6F6D7061 
 3338      726500
 3339              	.LASF20:
 3340 04fa 656E6162 		.ascii	"enableInterrupts\000"
 3340      6C65496E 
 3340      74657272 
 3340      75707473 
 3340      00
 3341              	.LASF21:
 3342 050b 50574D5F 		.ascii	"PWM_B_SetMode\000"
 3342      425F5365 
 3342      744D6F64 
 3342      6500
 3343              	.LASF17:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc7yH0y5.s 			page 88


 3344 0519 50574D5F 		.ascii	"PWM_B_Start\000"
 3344      425F5374 
 3344      61727400 
 3345              	.LASF33:
 3346 0525 50574D5F 		.ascii	"PWM_B_SetPWMStopOnKill\000"
 3346      425F5365 
 3346      7450574D 
 3346      53746F70 
 3346      4F6E4B69 
 3347              	.LASF48:
 3348 053c 73776170 		.ascii	"swapEnable\000"
 3348      456E6162 
 3348      6C6500
 3349              	.LASF43:
 3350 0547 50574D5F 		.ascii	"PWM_B_WritePeriod\000"
 3350      425F5772 
 3350      69746550 
 3350      6572696F 
 3350      6400
 3351              	.LASF39:
 3352 0559 50574D5F 		.ascii	"PWM_B_WriteCounter\000"
 3352      425F5772 
 3352      69746543 
 3352      6F756E74 
 3352      657200
 3353              	.LASF50:
 3354 056c 70657269 		.ascii	"periodBuf\000"
 3354      6F644275 
 3354      6600
 3355              	.LASF58:
 3356 0576 50574D5F 		.ascii	"PWM_B_ReadCompareBuf\000"
 3356      425F5265 
 3356      6164436F 
 3356      6D706172 
 3356      65427566 
 3357              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
