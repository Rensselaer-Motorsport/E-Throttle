ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LED_RGB.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LED_RGB_Start,"ax",%progbits
  18              		.align	2
  19              		.global	LED_RGB_Start
  20              		.code	16
  21              		.thumb_func
  22              		.type	LED_RGB_Start, %function
  23              	LED_RGB_Start:
  24              	.LFB33:
  25              		.file 1 ".\\LED_RGB.c"
   1:.\LED_RGB.c   **** /* ========================================
   2:.\LED_RGB.c   ****  *
   3:.\LED_RGB.c   ****  * The following firmware was developed by Cypress Semiconductor
   4:.\LED_RGB.c   ****  * This work is licensed under a Creative Commons Attribution 3.0 Unported License.
   5:.\LED_RGB.c   ****  * 
   6:.\LED_RGB.c   ****  * http://creativecommons.org/licenses/by/3.0/deed.en_US
   7:.\LED_RGB.c   ****  * 
   8:.\LED_RGB.c   ****  * You are free to:
   9:.\LED_RGB.c   ****  * -To Share — to copy, distribute and transmit the work 
  10:.\LED_RGB.c   ****  * -To Remix — to adapt the work 
  11:.\LED_RGB.c   ****  * -To make commercial use of the work
  12:.\LED_RGB.c   ****  *
  13:.\LED_RGB.c   ****  * ========================================
  14:.\LED_RGB.c   ****  */
  15:.\LED_RGB.c   **** 
  16:.\LED_RGB.c   **** /* ========================================
  17:.\LED_RGB.c   ****  * CY8CKIT-042 LED RGB Driver Module
  18:.\LED_RGB.c   ****  * This module was designed to drive the RGB LEDs on the KIT-042 with pleasing
  19:.\LED_RGB.c   ****  * colors. This module requires that three 16- or 8-bit PWMs be placed and named
  20:.\LED_RGB.c   ****  * PWM_R, PWM_G, and PWM_B. Their outputs should be inverted because the LEDs on
  21:.\LED_RGB.c   ****  * the kit are sunk by the PSoC 4 GPIOs. LEDs are on P1[6], P0[2], P0[3] (RGB).
  22:.\LED_RGB.c   ****  * The PWMs should be clocked at a rate such that the output frequency is 45 Hz
  23:.\LED_RGB.c   ****  * or greater to avoid weird blinking.
  24:.\LED_RGB.c   ****  * ========================================
  25:.\LED_RGB.c   ****  */
  26:.\LED_RGB.c   **** 
  27:.\LED_RGB.c   **** #include <LED_RGB.h>
  28:.\LED_RGB.c   **** 
  29:.\LED_RGB.c   **** /*****************************************************************************
  30:.\LED_RGB.c   **** * Function Name: LED_RGB_Start()
  31:.\LED_RGB.c   **** ******************************************************************************
  32:.\LED_RGB.c   **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 2


  33:.\LED_RGB.c   **** *  Starts the LED PWM components.
  34:.\LED_RGB.c   **** *
  35:.\LED_RGB.c   **** *****************************************************************************/
  36:.\LED_RGB.c   **** void LED_RGB_Start(void)
  37:.\LED_RGB.c   **** {
  26              		.loc 1 37 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
  38:.\LED_RGB.c   ****     PWM_R_Start();
  34              		.loc 1 38 0
  35 0004 FFF7FEFF 		bl	PWM_R_Start
  39:.\LED_RGB.c   ****     PWM_G_Start();
  36              		.loc 1 39 0
  37 0008 FFF7FEFF 		bl	PWM_G_Start
  40:.\LED_RGB.c   ****     PWM_B_Start();
  38              		.loc 1 40 0
  39 000c FFF7FEFF 		bl	PWM_B_Start
  41:.\LED_RGB.c   **** }
  40              		.loc 1 41 0
  41 0010 BD46     		mov	sp, r7
  42              		@ sp needed
  43 0012 80BD     		pop	{r7, pc}
  44              		.cfi_endproc
  45              	.LFE33:
  46              		.size	LED_RGB_Start, .-LED_RGB_Start
  47              		.section	.text.LED_RGB_Stop,"ax",%progbits
  48              		.align	2
  49              		.global	LED_RGB_Stop
  50              		.code	16
  51              		.thumb_func
  52              		.type	LED_RGB_Stop, %function
  53              	LED_RGB_Stop:
  54              	.LFB34:
  42:.\LED_RGB.c   **** 
  43:.\LED_RGB.c   **** /*****************************************************************************
  44:.\LED_RGB.c   **** * Function Name: LED_RGB_Stop()
  45:.\LED_RGB.c   **** ******************************************************************************
  46:.\LED_RGB.c   **** * Summary:
  47:.\LED_RGB.c   **** *  Stops the LED PWM components.
  48:.\LED_RGB.c   **** *
  49:.\LED_RGB.c   **** *****************************************************************************/
  50:.\LED_RGB.c   **** void LED_RGB_Stop(void)
  51:.\LED_RGB.c   **** {
  55              		.loc 1 51 0
  56              		.cfi_startproc
  57 0000 80B5     		push	{r7, lr}
  58              		.cfi_def_cfa_offset 8
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 00AF     		add	r7, sp, #0
  62              		.cfi_def_cfa_register 7
  52:.\LED_RGB.c   ****     PWM_R_Stop();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 3


  63              		.loc 1 52 0
  64 0004 FFF7FEFF 		bl	PWM_R_Stop
  53:.\LED_RGB.c   ****     PWM_G_Stop();
  65              		.loc 1 53 0
  66 0008 FFF7FEFF 		bl	PWM_G_Stop
  54:.\LED_RGB.c   ****     PWM_B_Stop();
  67              		.loc 1 54 0
  68 000c FFF7FEFF 		bl	PWM_B_Stop
  55:.\LED_RGB.c   **** }
  69              		.loc 1 55 0
  70 0010 BD46     		mov	sp, r7
  71              		@ sp needed
  72 0012 80BD     		pop	{r7, pc}
  73              		.cfi_endproc
  74              	.LFE34:
  75              		.size	LED_RGB_Stop, .-LED_RGB_Stop
  76              		.section	.text.LED_RGB_DCWrite,"ax",%progbits
  77              		.align	2
  78              		.global	LED_RGB_DCWrite
  79              		.code	16
  80              		.thumb_func
  81              		.type	LED_RGB_DCWrite, %function
  82              	LED_RGB_DCWrite:
  83              	.LFB35:
  56:.\LED_RGB.c   **** 
  57:.\LED_RGB.c   **** /*****************************************************************************
  58:.\LED_RGB.c   **** * Function Name: LED_RGB_DCWrite()
  59:.\LED_RGB.c   **** ******************************************************************************
  60:.\LED_RGB.c   **** * Summary:
  61:.\LED_RGB.c   **** *  Writes one of the three LED color duty cycles
  62:.\LED_RGB.c   **** *
  63:.\LED_RGB.c   **** * Parameters:
  64:.\LED_RGB.c   **** *  LED_Color: Describes which LED color is to be written.
  65:.\LED_RGB.c   **** *  LED_NewDutyCycle: Describes the new duty cycle to be written to the PWM.
  66:.\LED_RGB.c   **** *   Tested with 16-bit values(0-65535 dark to bright), but should work with
  67:.\LED_RGB.c   **** *   8-bit values if the PWMs are 8-bit.
  68:.\LED_RGB.c   **** *
  69:.\LED_RGB.c   **** *****************************************************************************/
  70:.\LED_RGB.c   **** void LED_RGB_DCWrite(uint8 LED_Color, uint16 LED_NewDutyCycle)
  71:.\LED_RGB.c   **** {
  84              		.loc 1 71 0
  85              		.cfi_startproc
  86 0000 80B5     		push	{r7, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 82B0     		sub	sp, sp, #8
  91              		.cfi_def_cfa_offset 16
  92 0004 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
  94 0006 0A1C     		mov	r2, r1
  95 0008 FB1D     		add	r3, r7, #7
  96 000a 011C     		add	r1, r0, #0
  97 000c 1970     		strb	r1, [r3]
  98 000e 3B1D     		add	r3, r7, #4
  99 0010 1A80     		strh	r2, [r3]
  72:.\LED_RGB.c   ****     #if ( LED_RGB_PWM_RESOLUTION == 16 )
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 4


  73:.\LED_RGB.c   ****     
  74:.\LED_RGB.c   ****     switch(LED_Color)
 100              		.loc 1 74 0
 101 0012 FB1D     		add	r3, r7, #7
 102 0014 1B78     		ldrb	r3, [r3]
 103 0016 022B     		cmp	r3, #2
 104 0018 0AD0     		beq	.L5
 105 001a 032B     		cmp	r3, #3
 106 001c 0ED0     		beq	.L6
 107 001e 012B     		cmp	r3, #1
 108 0020 00D0     		beq	.L7
  75:.\LED_RGB.c   ****     {
  76:.\LED_RGB.c   ****     case LED_RED:
  77:.\LED_RGB.c   ****         PWM_R_WriteCompare(LED_NewDutyCycle);
  78:.\LED_RGB.c   ****         break;
  79:.\LED_RGB.c   ****     case LED_GREEN:
  80:.\LED_RGB.c   ****         PWM_G_WriteCompare(LED_NewDutyCycle);
  81:.\LED_RGB.c   ****         break;
  82:.\LED_RGB.c   ****     case LED_BLUE:
  83:.\LED_RGB.c   ****         PWM_B_WriteCompare(LED_NewDutyCycle);
  84:.\LED_RGB.c   ****         break;
  85:.\LED_RGB.c   ****     default:
  86:.\LED_RGB.c   ****         break;
 109              		.loc 1 86 0
 110 0022 11E0     		b	.L3
 111              	.L7:
  77:.\LED_RGB.c   ****         PWM_R_WriteCompare(LED_NewDutyCycle);
 112              		.loc 1 77 0
 113 0024 3B1D     		add	r3, r7, #4
 114 0026 1B88     		ldrh	r3, [r3]
 115 0028 181C     		mov	r0, r3
 116 002a FFF7FEFF 		bl	PWM_R_WriteCompare
  78:.\LED_RGB.c   ****         break;
 117              		.loc 1 78 0
 118 002e 0BE0     		b	.L3
 119              	.L5:
  80:.\LED_RGB.c   ****         PWM_G_WriteCompare(LED_NewDutyCycle);
 120              		.loc 1 80 0
 121 0030 3B1D     		add	r3, r7, #4
 122 0032 1B88     		ldrh	r3, [r3]
 123 0034 181C     		mov	r0, r3
 124 0036 FFF7FEFF 		bl	PWM_G_WriteCompare
  81:.\LED_RGB.c   ****         break;
 125              		.loc 1 81 0
 126 003a 05E0     		b	.L3
 127              	.L6:
  83:.\LED_RGB.c   ****         PWM_B_WriteCompare(LED_NewDutyCycle);
 128              		.loc 1 83 0
 129 003c 3B1D     		add	r3, r7, #4
 130 003e 1B88     		ldrh	r3, [r3]
 131 0040 181C     		mov	r0, r3
 132 0042 FFF7FEFF 		bl	PWM_B_WriteCompare
  84:.\LED_RGB.c   ****         break;
 133              		.loc 1 84 0
 134 0046 C046     		mov	r8, r8
 135              	.L3:
  87:.\LED_RGB.c   ****     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 5


  88:.\LED_RGB.c   ****     
  89:.\LED_RGB.c   ****     #elif ( LED_RGB_PWM_RESOLUTION == 8 )
  90:.\LED_RGB.c   ****     
  91:.\LED_RGB.c   ****     switch(LED_Color)
  92:.\LED_RGB.c   ****     {
  93:.\LED_RGB.c   ****     case LED_RED:
  94:.\LED_RGB.c   ****         PWM_RG_WriteCompare1(LED_NewDutyCycle>>8);
  95:.\LED_RGB.c   ****         break;
  96:.\LED_RGB.c   ****     case LED_GREEN:
  97:.\LED_RGB.c   ****         PWM_RG_WriteCompare2(LED_NewDutyCycle>>8);
  98:.\LED_RGB.c   ****         break;
  99:.\LED_RGB.c   ****     case LED_BLUE:
 100:.\LED_RGB.c   ****         PWM_B_WriteCompare(LED_NewDutyCycle>>8);
 101:.\LED_RGB.c   ****         break;
 102:.\LED_RGB.c   ****     default:
 103:.\LED_RGB.c   ****         break;
 104:.\LED_RGB.c   ****     }
 105:.\LED_RGB.c   ****     
 106:.\LED_RGB.c   ****     #else
 107:.\LED_RGB.c   ****     
 108:.\LED_RGB.c   ****     /* This should never happen so we force a compile error. Use 8 or 16 bit! */
 109:.\LED_RGB.c   ****     Use 8 or 16 bit only!
 110:.\LED_RGB.c   ****     
 111:.\LED_RGB.c   ****     #endif
 112:.\LED_RGB.c   **** }
 136              		.loc 1 112 0
 137 0048 BD46     		mov	sp, r7
 138 004a 02B0     		add	sp, sp, #8
 139              		@ sp needed
 140 004c 80BD     		pop	{r7, pc}
 141              		.cfi_endproc
 142              	.LFE35:
 143              		.size	LED_RGB_DCWrite, .-LED_RGB_DCWrite
 144 004e C046     		.section	.text.LED_RGB_SetColorRGB,"ax",%progbits
 145              		.align	2
 146              		.global	LED_RGB_SetColorRGB
 147              		.code	16
 148              		.thumb_func
 149              		.type	LED_RGB_SetColorRGB, %function
 150              	LED_RGB_SetColorRGB:
 151              	.LFB36:
 113:.\LED_RGB.c   **** 
 114:.\LED_RGB.c   **** /*****************************************************************************
 115:.\LED_RGB.c   **** * Function Name: LED_RGB_SetColorRGB()
 116:.\LED_RGB.c   **** ******************************************************************************
 117:.\LED_RGB.c   **** * Summary:
 118:.\LED_RGB.c   **** *  Writes all three of the LED duty cycles at once
 119:.\LED_RGB.c   **** *
 120:.\LED_RGB.c   **** * Parameters:
 121:.\LED_RGB.c   **** *  redIntensity: Describes the new red LED intensity
 122:.\LED_RGB.c   **** *  greenIntensity: Describes the new green LED intensity
 123:.\LED_RGB.c   **** *  blueIntensity: Describes the new blue LED intensity
 124:.\LED_RGB.c   **** *
 125:.\LED_RGB.c   **** *  Note: Each intensity value should be 0-65535 dark to bright full scale.
 126:.\LED_RGB.c   **** *
 127:.\LED_RGB.c   **** *****************************************************************************/
 128:.\LED_RGB.c   **** void LED_RGB_SetColorRGB(uint16 redIntensity, uint16 greenIntensity, uint16 blueIntensity)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 6


 129:.\LED_RGB.c   **** {     
 152              		.loc 1 129 0
 153              		.cfi_startproc
 154 0000 80B5     		push	{r7, lr}
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 82B0     		sub	sp, sp, #8
 159              		.cfi_def_cfa_offset 16
 160 0004 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 162 0006 BB1D     		add	r3, r7, #6
 163 0008 1880     		strh	r0, [r3]
 164 000a 3B1D     		add	r3, r7, #4
 165 000c 1980     		strh	r1, [r3]
 166 000e BB1C     		add	r3, r7, #2
 167 0010 1A80     		strh	r2, [r3]
 130:.\LED_RGB.c   ****     LED_RGB_DCWrite(LED_RED, (uint32) redIntensity);
 168              		.loc 1 130 0
 169 0012 BB1D     		add	r3, r7, #6
 170 0014 1B88     		ldrh	r3, [r3]
 171 0016 0120     		mov	r0, #1
 172 0018 191C     		mov	r1, r3
 173 001a FFF7FEFF 		bl	LED_RGB_DCWrite
 131:.\LED_RGB.c   ****     LED_RGB_DCWrite(LED_GREEN, (uint32) greenIntensity);
 174              		.loc 1 131 0
 175 001e 3B1D     		add	r3, r7, #4
 176 0020 1B88     		ldrh	r3, [r3]
 177 0022 0220     		mov	r0, #2
 178 0024 191C     		mov	r1, r3
 179 0026 FFF7FEFF 		bl	LED_RGB_DCWrite
 132:.\LED_RGB.c   ****     LED_RGB_DCWrite(LED_BLUE, (uint32) blueIntensity);
 180              		.loc 1 132 0
 181 002a BB1C     		add	r3, r7, #2
 182 002c 1B88     		ldrh	r3, [r3]
 183 002e 0320     		mov	r0, #3
 184 0030 191C     		mov	r1, r3
 185 0032 FFF7FEFF 		bl	LED_RGB_DCWrite
 133:.\LED_RGB.c   **** }
 186              		.loc 1 133 0
 187 0036 BD46     		mov	sp, r7
 188 0038 02B0     		add	sp, sp, #8
 189              		@ sp needed
 190 003a 80BD     		pop	{r7, pc}
 191              		.cfi_endproc
 192              	.LFE36:
 193              		.size	LED_RGB_SetColorRGB, .-LED_RGB_SetColorRGB
 194              		.section	.text.LED_RGB_SetColorCircle,"ax",%progbits
 195              		.align	2
 196              		.global	LED_RGB_SetColorCircle
 197              		.code	16
 198              		.thumb_func
 199              		.type	LED_RGB_SetColorCircle, %function
 200              	LED_RGB_SetColorCircle:
 201              	.LFB37:
 134:.\LED_RGB.c   **** 
 135:.\LED_RGB.c   **** /*****************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 7


 136:.\LED_RGB.c   **** * Function Name: LED_RGB_SetColorCircle()
 137:.\LED_RGB.c   **** ******************************************************************************
 138:.\LED_RGB.c   **** * Summary:
 139:.\LED_RGB.c   **** *  Sets the three LEDs to produce the specified hue at 100% saturation and
 140:.\LED_RGB.c   **** * value. This will produce the most saturated version of the color.
 141:.\LED_RGB.c   **** *
 142:.\LED_RGB.c   **** * Parameters:
 143:.\LED_RGB.c   **** *  hue: Describes the LED color hue 
 144:.\LED_RGB.c   **** *   (0-65535 full scale, red->green->blue->red)
 145:.\LED_RGB.c   **** *
 146:.\LED_RGB.c   **** *****************************************************************************/
 147:.\LED_RGB.c   **** void LED_RGB_SetColorCircle(uint16 hue)
 148:.\LED_RGB.c   **** {
 202              		.loc 1 148 0
 203              		.cfi_startproc
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 84B0     		sub	sp, sp, #16
 209              		.cfi_def_cfa_offset 24
 210 0004 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
 212 0006 021C     		mov	r2, r0
 213 0008 BB1D     		add	r3, r7, #6
 214 000a 1A80     		strh	r2, [r3]
 149:.\LED_RGB.c   ****     uint16 redIntensity, greenIntensity, blueIntensity;
 150:.\LED_RGB.c   **** 
 151:.\LED_RGB.c   ****     if(hue < UINT16_1_6TH_MAX)
 215              		.loc 1 151 0
 216 000c BB1D     		add	r3, r7, #6
 217 000e 1A88     		ldrh	r2, [r3]
 218 0010 534B     		ldr	r3, .L17
 219 0012 9A42     		cmp	r2, r3
 220 0014 12D8     		bhi	.L11
 152:.\LED_RGB.c   ****     {
 153:.\LED_RGB.c   ****         //red on, green increasing
 154:.\LED_RGB.c   ****         redIntensity = UINT16_MAX;
 221              		.loc 1 154 0
 222 0016 3B1C     		mov	r3, r7
 223 0018 0E33     		add	r3, r3, #14
 224 001a 0122     		mov	r2, #1
 225 001c 5242     		neg	r2, r2
 226 001e 1A80     		strh	r2, [r3]
 155:.\LED_RGB.c   ****         greenIntensity = hue * 6;
 227              		.loc 1 155 0
 228 0020 391C     		mov	r1, r7
 229 0022 0C31     		add	r1, r1, #12
 230 0024 BB1D     		add	r3, r7, #6
 231 0026 1B88     		ldrh	r3, [r3]
 232 0028 1A1C     		add	r2, r3, #0
 233 002a 9218     		add	r2, r2, r2
 234 002c D318     		add	r3, r2, r3
 235 002e DB18     		add	r3, r3, r3
 236 0030 0B80     		strh	r3, [r1]
 156:.\LED_RGB.c   ****         blueIntensity = 0;
 237              		.loc 1 156 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 8


 238 0032 3B1C     		mov	r3, r7
 239 0034 0A33     		add	r3, r3, #10
 240 0036 0022     		mov	r2, #0
 241 0038 1A80     		strh	r2, [r3]
 242 003a 80E0     		b	.L12
 243              	.L11:
 157:.\LED_RGB.c   ****     }
 158:.\LED_RGB.c   ****     else if(hue < UINT16_2_6TH_MAX)
 244              		.loc 1 158 0
 245 003c BB1D     		add	r3, r7, #6
 246 003e 1A88     		ldrh	r2, [r3]
 247 0040 484B     		ldr	r3, .L17+4
 248 0042 9A42     		cmp	r2, r3
 249 0044 15D8     		bhi	.L13
 159:.\LED_RGB.c   ****     {
 160:.\LED_RGB.c   ****         //green on, red decreasing
 161:.\LED_RGB.c   ****         redIntensity = (UINT16_2_6TH_MAX - hue) * 6;
 250              		.loc 1 161 0
 251 0046 BB1D     		add	r3, r7, #6
 252 0048 1B88     		ldrh	r3, [r3]
 253 004a 474A     		ldr	r2, .L17+8
 254 004c D31A     		sub	r3, r2, r3
 255 004e 9BB2     		uxth	r3, r3
 256 0050 391C     		mov	r1, r7
 257 0052 0E31     		add	r1, r1, #14
 258 0054 1A1C     		add	r2, r3, #0
 259 0056 9218     		add	r2, r2, r2
 260 0058 D318     		add	r3, r2, r3
 261 005a DB18     		add	r3, r3, r3
 262 005c 0B80     		strh	r3, [r1]
 162:.\LED_RGB.c   ****         greenIntensity = UINT16_MAX;
 263              		.loc 1 162 0
 264 005e 3B1C     		mov	r3, r7
 265 0060 0C33     		add	r3, r3, #12
 266 0062 0122     		mov	r2, #1
 267 0064 5242     		neg	r2, r2
 268 0066 1A80     		strh	r2, [r3]
 163:.\LED_RGB.c   ****         blueIntensity = 0;
 269              		.loc 1 163 0
 270 0068 3B1C     		mov	r3, r7
 271 006a 0A33     		add	r3, r3, #10
 272 006c 0022     		mov	r2, #0
 273 006e 1A80     		strh	r2, [r3]
 274 0070 65E0     		b	.L12
 275              	.L13:
 164:.\LED_RGB.c   ****     }
 165:.\LED_RGB.c   ****     else if(hue < UINT16_3_6TH_MAX)
 276              		.loc 1 165 0
 277 0072 BB1D     		add	r3, r7, #6
 278 0074 1A88     		ldrh	r2, [r3]
 279 0076 3D4B     		ldr	r3, .L17+12
 280 0078 9A42     		cmp	r2, r3
 281 007a 15D8     		bhi	.L14
 166:.\LED_RGB.c   ****     {
 167:.\LED_RGB.c   ****         //green on, blue increasing
 168:.\LED_RGB.c   ****         redIntensity = 0;
 282              		.loc 1 168 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 9


 283 007c 3B1C     		mov	r3, r7
 284 007e 0E33     		add	r3, r3, #14
 285 0080 0022     		mov	r2, #0
 286 0082 1A80     		strh	r2, [r3]
 169:.\LED_RGB.c   ****         greenIntensity = UINT16_MAX;
 287              		.loc 1 169 0
 288 0084 3B1C     		mov	r3, r7
 289 0086 0C33     		add	r3, r3, #12
 290 0088 0122     		mov	r2, #1
 291 008a 5242     		neg	r2, r2
 292 008c 1A80     		strh	r2, [r3]
 170:.\LED_RGB.c   ****         blueIntensity = (hue - UINT16_2_6TH_MAX) * 6;
 293              		.loc 1 170 0
 294 008e BB1D     		add	r3, r7, #6
 295 0090 1B88     		ldrh	r3, [r3]
 296 0092 374A     		ldr	r2, .L17+16
 297 0094 9B18     		add	r3, r3, r2
 298 0096 9BB2     		uxth	r3, r3
 299 0098 391C     		mov	r1, r7
 300 009a 0A31     		add	r1, r1, #10
 301 009c 1A1C     		add	r2, r3, #0
 302 009e 9218     		add	r2, r2, r2
 303 00a0 D318     		add	r3, r2, r3
 304 00a2 DB18     		add	r3, r3, r3
 305 00a4 0B80     		strh	r3, [r1]
 306 00a6 4AE0     		b	.L12
 307              	.L14:
 171:.\LED_RGB.c   ****     }
 172:.\LED_RGB.c   ****     else if(hue < UINT16_4_6TH_MAX)
 308              		.loc 1 172 0
 309 00a8 BB1D     		add	r3, r7, #6
 310 00aa 1A88     		ldrh	r2, [r3]
 311 00ac 314B     		ldr	r3, .L17+20
 312 00ae 9A42     		cmp	r2, r3
 313 00b0 15D8     		bhi	.L15
 173:.\LED_RGB.c   ****     {
 174:.\LED_RGB.c   ****         //blue on, green decreasing
 175:.\LED_RGB.c   ****         redIntensity = 0;
 314              		.loc 1 175 0
 315 00b2 3B1C     		mov	r3, r7
 316 00b4 0E33     		add	r3, r3, #14
 317 00b6 0022     		mov	r2, #0
 318 00b8 1A80     		strh	r2, [r3]
 176:.\LED_RGB.c   ****         greenIntensity = (UINT16_4_6TH_MAX - hue) * 6;
 319              		.loc 1 176 0
 320 00ba BB1D     		add	r3, r7, #6
 321 00bc 1B88     		ldrh	r3, [r3]
 322 00be 2E4A     		ldr	r2, .L17+24
 323 00c0 D31A     		sub	r3, r2, r3
 324 00c2 9BB2     		uxth	r3, r3
 325 00c4 391C     		mov	r1, r7
 326 00c6 0C31     		add	r1, r1, #12
 327 00c8 1A1C     		add	r2, r3, #0
 328 00ca 9218     		add	r2, r2, r2
 329 00cc D318     		add	r3, r2, r3
 330 00ce DB18     		add	r3, r3, r3
 331 00d0 0B80     		strh	r3, [r1]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 10


 177:.\LED_RGB.c   ****         blueIntensity = UINT16_MAX;
 332              		.loc 1 177 0
 333 00d2 3B1C     		mov	r3, r7
 334 00d4 0A33     		add	r3, r3, #10
 335 00d6 0122     		mov	r2, #1
 336 00d8 5242     		neg	r2, r2
 337 00da 1A80     		strh	r2, [r3]
 338 00dc 2FE0     		b	.L12
 339              	.L15:
 178:.\LED_RGB.c   ****     }
 179:.\LED_RGB.c   ****     else if(hue < UINT16_5_6TH_MAX)
 340              		.loc 1 179 0
 341 00de BB1D     		add	r3, r7, #6
 342 00e0 1A88     		ldrh	r2, [r3]
 343 00e2 264B     		ldr	r3, .L17+28
 344 00e4 9A42     		cmp	r2, r3
 345 00e6 15D8     		bhi	.L16
 180:.\LED_RGB.c   ****     {
 181:.\LED_RGB.c   ****         //blue on, red increasing
 182:.\LED_RGB.c   ****         redIntensity =  (hue - UINT16_4_6TH_MAX) * 6;
 346              		.loc 1 182 0
 347 00e8 BB1D     		add	r3, r7, #6
 348 00ea 1B88     		ldrh	r3, [r3]
 349 00ec 244A     		ldr	r2, .L17+32
 350 00ee 9B18     		add	r3, r3, r2
 351 00f0 9BB2     		uxth	r3, r3
 352 00f2 391C     		mov	r1, r7
 353 00f4 0E31     		add	r1, r1, #14
 354 00f6 1A1C     		add	r2, r3, #0
 355 00f8 9218     		add	r2, r2, r2
 356 00fa D318     		add	r3, r2, r3
 357 00fc DB18     		add	r3, r3, r3
 358 00fe 0B80     		strh	r3, [r1]
 183:.\LED_RGB.c   ****         greenIntensity = 0;
 359              		.loc 1 183 0
 360 0100 3B1C     		mov	r3, r7
 361 0102 0C33     		add	r3, r3, #12
 362 0104 0022     		mov	r2, #0
 363 0106 1A80     		strh	r2, [r3]
 184:.\LED_RGB.c   ****         blueIntensity = UINT16_MAX;
 364              		.loc 1 184 0
 365 0108 3B1C     		mov	r3, r7
 366 010a 0A33     		add	r3, r3, #10
 367 010c 0122     		mov	r2, #1
 368 010e 5242     		neg	r2, r2
 369 0110 1A80     		strh	r2, [r3]
 370 0112 14E0     		b	.L12
 371              	.L16:
 185:.\LED_RGB.c   ****     }
 186:.\LED_RGB.c   ****     else
 187:.\LED_RGB.c   ****     {
 188:.\LED_RGB.c   ****         //red on, blue decreasing
 189:.\LED_RGB.c   ****         redIntensity = UINT16_MAX;
 372              		.loc 1 189 0
 373 0114 3B1C     		mov	r3, r7
 374 0116 0E33     		add	r3, r3, #14
 375 0118 0122     		mov	r2, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 11


 376 011a 5242     		neg	r2, r2
 377 011c 1A80     		strh	r2, [r3]
 190:.\LED_RGB.c   ****         greenIntensity = 0;
 378              		.loc 1 190 0
 379 011e 3B1C     		mov	r3, r7
 380 0120 0C33     		add	r3, r3, #12
 381 0122 0022     		mov	r2, #0
 382 0124 1A80     		strh	r2, [r3]
 191:.\LED_RGB.c   ****         blueIntensity = (UINT16_MAX - hue) * 6;
 383              		.loc 1 191 0
 384 0126 BB1D     		add	r3, r7, #6
 385 0128 1B88     		ldrh	r3, [r3]
 386 012a 164A     		ldr	r2, .L17+36
 387 012c D31A     		sub	r3, r2, r3
 388 012e 9BB2     		uxth	r3, r3
 389 0130 391C     		mov	r1, r7
 390 0132 0A31     		add	r1, r1, #10
 391 0134 1A1C     		add	r2, r3, #0
 392 0136 9218     		add	r2, r2, r2
 393 0138 D318     		add	r3, r2, r3
 394 013a DB18     		add	r3, r3, r3
 395 013c 0B80     		strh	r3, [r1]
 396              	.L12:
 192:.\LED_RGB.c   ****     }
 193:.\LED_RGB.c   ****     
 194:.\LED_RGB.c   ****     LED_RGB_SetColorRGB(redIntensity, greenIntensity, blueIntensity);
 397              		.loc 1 194 0
 398 013e 3B1C     		mov	r3, r7
 399 0140 0E33     		add	r3, r3, #14
 400 0142 1988     		ldrh	r1, [r3]
 401 0144 3B1C     		mov	r3, r7
 402 0146 0C33     		add	r3, r3, #12
 403 0148 1A88     		ldrh	r2, [r3]
 404 014a 3B1C     		mov	r3, r7
 405 014c 0A33     		add	r3, r3, #10
 406 014e 1B88     		ldrh	r3, [r3]
 407 0150 081C     		mov	r0, r1
 408 0152 111C     		mov	r1, r2
 409 0154 1A1C     		mov	r2, r3
 410 0156 FFF7FEFF 		bl	LED_RGB_SetColorRGB
 195:.\LED_RGB.c   **** }
 411              		.loc 1 195 0
 412 015a BD46     		mov	sp, r7
 413 015c 04B0     		add	sp, sp, #16
 414              		@ sp needed
 415 015e 80BD     		pop	{r7, pc}
 416              	.L18:
 417              		.align	2
 418              	.L17:
 419 0160 A92A0000 		.word	10921
 420 0164 54550000 		.word	21844
 421 0168 55550000 		.word	21845
 422 016c FE7F0000 		.word	32766
 423 0170 ABAAFFFF 		.word	-21845
 424 0174 A9AA0000 		.word	43689
 425 0178 AAAA0000 		.word	43690
 426 017c 53D50000 		.word	54611
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 12


 427 0180 5655FFFF 		.word	-43690
 428 0184 FFFF0000 		.word	65535
 429              		.cfi_endproc
 430              	.LFE37:
 431              		.size	LED_RGB_SetColorCircle, .-LED_RGB_SetColorCircle
 432              		.global	__aeabi_uidiv
 433              		.section	.text.LED_RGB_SetColorCircleHSV,"ax",%progbits
 434              		.align	2
 435              		.global	LED_RGB_SetColorCircleHSV
 436              		.code	16
 437              		.thumb_func
 438              		.type	LED_RGB_SetColorCircleHSV, %function
 439              	LED_RGB_SetColorCircleHSV:
 440              	.LFB38:
 196:.\LED_RGB.c   **** 
 197:.\LED_RGB.c   **** /*****************************************************************************
 198:.\LED_RGB.c   **** * Function Name: LED_RGB_SetColorCircleHSV()
 199:.\LED_RGB.c   **** ******************************************************************************
 200:.\LED_RGB.c   **** * Summary:
 201:.\LED_RGB.c   **** *  Sets the three LEDs to produce the specified hue, saturation and value.
 202:.\LED_RGB.c   **** *
 203:.\LED_RGB.c   **** * Parameters:
 204:.\LED_RGB.c   **** *  hue: Describes the LED array hue (color)
 205:.\LED_RGB.c   **** *   (0-65535 full scale, red->green->blue->red)
 206:.\LED_RGB.c   **** *  saturation: Describes the LED array saturation (un-whiteness)
 207:.\LED_RGB.c   **** *   (0-65535 full scale, white->hue)
 208:.\LED_RGB.c   **** *  value: Describes the LED array value (un-blackness)
 209:.\LED_RGB.c   **** *   (0-65535 full scale, black->hue)
 210:.\LED_RGB.c   **** *
 211:.\LED_RGB.c   **** *****************************************************************************/
 212:.\LED_RGB.c   **** void LED_RGB_SetColorCircleHSV(uint16 hue, uint16 saturation, uint16 value)
 213:.\LED_RGB.c   **** {
 441              		.loc 1 213 0
 442              		.cfi_startproc
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 88B0     		sub	sp, sp, #32
 448              		.cfi_def_cfa_offset 40
 449 0004 00AF     		add	r7, sp, #0
 450              		.cfi_def_cfa_register 7
 451 0006 BB1D     		add	r3, r7, #6
 452 0008 1880     		strh	r0, [r3]
 453 000a 3B1D     		add	r3, r7, #4
 454 000c 1980     		strh	r1, [r3]
 455 000e BB1C     		add	r3, r7, #2
 456 0010 1A80     		strh	r2, [r3]
 214:.\LED_RGB.c   ****     int32 redIntensity, greenIntensity, blueIntensity;
 215:.\LED_RGB.c   ****     
 216:.\LED_RGB.c   ****     uint32 dominantIntensityC = ((uint32)saturation) * value / UINT16_MAX;
 457              		.loc 1 216 0
 458 0012 3B1D     		add	r3, r7, #4
 459 0014 1B88     		ldrh	r3, [r3]
 460 0016 BA1C     		add	r2, r7, #2
 461 0018 1288     		ldrh	r2, [r2]
 462 001a 5343     		mul	r3, r2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 13


 463 001c 181C     		mov	r0, r3
 464 001e 6449     		ldr	r1, .L32
 465 0020 FFF7FEFF 		bl	__aeabi_uidiv
 466 0024 031C     		mov	r3, r0
 467 0026 3B61     		str	r3, [r7, #16]
 217:.\LED_RGB.c   ****     
 218:.\LED_RGB.c   ****     int32 intensityShiftM = ((int32)value) - dominantIntensityC;
 468              		.loc 1 218 0
 469 0028 BB1C     		add	r3, r7, #2
 470 002a 1A88     		ldrh	r2, [r3]
 471 002c 3B69     		ldr	r3, [r7, #16]
 472 002e D31A     		sub	r3, r2, r3
 473 0030 FB60     		str	r3, [r7, #12]
 219:.\LED_RGB.c   ****     
 220:.\LED_RGB.c   ****     if(hue < UINT16_1_6TH_MAX)
 474              		.loc 1 220 0
 475 0032 BB1D     		add	r3, r7, #6
 476 0034 1A88     		ldrh	r2, [r3]
 477 0036 5F4B     		ldr	r3, .L32+4
 478 0038 9A42     		cmp	r2, r3
 479 003a 12D8     		bhi	.L20
 221:.\LED_RGB.c   ****     {
 222:.\LED_RGB.c   ****         //red on, green increasing
 223:.\LED_RGB.c   ****         redIntensity = dominantIntensityC;
 480              		.loc 1 223 0
 481 003c 3B69     		ldr	r3, [r7, #16]
 482 003e FB61     		str	r3, [r7, #28]
 224:.\LED_RGB.c   ****         greenIntensity = (hue * 6) * dominantIntensityC / UINT16_2_6TH_MAX ;
 483              		.loc 1 224 0
 484 0040 BB1D     		add	r3, r7, #6
 485 0042 1B88     		ldrh	r3, [r3]
 486 0044 3A69     		ldr	r2, [r7, #16]
 487 0046 5A43     		mul	r2, r3
 488 0048 131C     		mov	r3, r2
 489 004a 5B00     		lsl	r3, r3, #1
 490 004c 9B18     		add	r3, r3, r2
 491 004e 5B00     		lsl	r3, r3, #1
 492 0050 181C     		mov	r0, r3
 493 0052 5949     		ldr	r1, .L32+8
 494 0054 FFF7FEFF 		bl	__aeabi_uidiv
 495 0058 031C     		mov	r3, r0
 496 005a BB61     		str	r3, [r7, #24]
 225:.\LED_RGB.c   ****         blueIntensity = 0;
 497              		.loc 1 225 0
 498 005c 0023     		mov	r3, #0
 499 005e 7B61     		str	r3, [r7, #20]
 500 0060 67E0     		b	.L21
 501              	.L20:
 226:.\LED_RGB.c   ****     }
 227:.\LED_RGB.c   ****     else if(hue < UINT16_2_6TH_MAX)
 502              		.loc 1 227 0
 503 0062 BB1D     		add	r3, r7, #6
 504 0064 1A88     		ldrh	r2, [r3]
 505 0066 554B     		ldr	r3, .L32+12
 506 0068 9A42     		cmp	r2, r3
 507 006a 10D8     		bhi	.L22
 228:.\LED_RGB.c   ****     {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 14


 229:.\LED_RGB.c   ****         //green on, red decreasing
 230:.\LED_RGB.c   ****         redIntensity = (UINT16_2_6TH_MAX - hue) * dominantIntensityC / UINT16_1_6TH_MAX;
 508              		.loc 1 230 0
 509 006c BB1D     		add	r3, r7, #6
 510 006e 1B88     		ldrh	r3, [r3]
 511 0070 514A     		ldr	r2, .L32+8
 512 0072 D31A     		sub	r3, r2, r3
 513 0074 3A69     		ldr	r2, [r7, #16]
 514 0076 5343     		mul	r3, r2
 515 0078 181C     		mov	r0, r3
 516 007a 5149     		ldr	r1, .L32+16
 517 007c FFF7FEFF 		bl	__aeabi_uidiv
 518 0080 031C     		mov	r3, r0
 519 0082 FB61     		str	r3, [r7, #28]
 231:.\LED_RGB.c   ****         greenIntensity = dominantIntensityC;
 520              		.loc 1 231 0
 521 0084 3B69     		ldr	r3, [r7, #16]
 522 0086 BB61     		str	r3, [r7, #24]
 232:.\LED_RGB.c   ****         blueIntensity = 0;
 523              		.loc 1 232 0
 524 0088 0023     		mov	r3, #0
 525 008a 7B61     		str	r3, [r7, #20]
 526 008c 51E0     		b	.L21
 527              	.L22:
 233:.\LED_RGB.c   ****     }
 234:.\LED_RGB.c   ****     else if(hue < UINT16_3_6TH_MAX)
 528              		.loc 1 234 0
 529 008e BB1D     		add	r3, r7, #6
 530 0090 1A88     		ldrh	r2, [r3]
 531 0092 4C4B     		ldr	r3, .L32+20
 532 0094 9A42     		cmp	r2, r3
 533 0096 10D8     		bhi	.L23
 235:.\LED_RGB.c   ****     {
 236:.\LED_RGB.c   ****         //green on, blue increasing
 237:.\LED_RGB.c   ****         redIntensity = 0;
 534              		.loc 1 237 0
 535 0098 0023     		mov	r3, #0
 536 009a FB61     		str	r3, [r7, #28]
 238:.\LED_RGB.c   ****         greenIntensity = dominantIntensityC;
 537              		.loc 1 238 0
 538 009c 3B69     		ldr	r3, [r7, #16]
 539 009e BB61     		str	r3, [r7, #24]
 239:.\LED_RGB.c   ****         blueIntensity = (hue - UINT16_2_6TH_MAX) * dominantIntensityC / UINT16_1_6TH_MAX;
 540              		.loc 1 239 0
 541 00a0 BB1D     		add	r3, r7, #6
 542 00a2 1B88     		ldrh	r3, [r3]
 543 00a4 484A     		ldr	r2, .L32+24
 544 00a6 9B18     		add	r3, r3, r2
 545 00a8 3A69     		ldr	r2, [r7, #16]
 546 00aa 5343     		mul	r3, r2
 547 00ac 181C     		mov	r0, r3
 548 00ae 4449     		ldr	r1, .L32+16
 549 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 550 00b4 031C     		mov	r3, r0
 551 00b6 7B61     		str	r3, [r7, #20]
 552 00b8 3BE0     		b	.L21
 553              	.L23:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 15


 240:.\LED_RGB.c   ****     }
 241:.\LED_RGB.c   ****     else if(hue < UINT16_4_6TH_MAX)
 554              		.loc 1 241 0
 555 00ba BB1D     		add	r3, r7, #6
 556 00bc 1A88     		ldrh	r2, [r3]
 557 00be 434B     		ldr	r3, .L32+28
 558 00c0 9A42     		cmp	r2, r3
 559 00c2 10D8     		bhi	.L24
 242:.\LED_RGB.c   ****     {
 243:.\LED_RGB.c   ****         //blue on, green decreasing
 244:.\LED_RGB.c   ****         redIntensity = 0;
 560              		.loc 1 244 0
 561 00c4 0023     		mov	r3, #0
 562 00c6 FB61     		str	r3, [r7, #28]
 245:.\LED_RGB.c   ****         greenIntensity = (UINT16_4_6TH_MAX - hue) * dominantIntensityC / UINT16_1_6TH_MAX;
 563              		.loc 1 245 0
 564 00c8 BB1D     		add	r3, r7, #6
 565 00ca 1B88     		ldrh	r3, [r3]
 566 00cc 404A     		ldr	r2, .L32+32
 567 00ce D31A     		sub	r3, r2, r3
 568 00d0 3A69     		ldr	r2, [r7, #16]
 569 00d2 5343     		mul	r3, r2
 570 00d4 181C     		mov	r0, r3
 571 00d6 3A49     		ldr	r1, .L32+16
 572 00d8 FFF7FEFF 		bl	__aeabi_uidiv
 573 00dc 031C     		mov	r3, r0
 574 00de BB61     		str	r3, [r7, #24]
 246:.\LED_RGB.c   ****         blueIntensity = dominantIntensityC;
 575              		.loc 1 246 0
 576 00e0 3B69     		ldr	r3, [r7, #16]
 577 00e2 7B61     		str	r3, [r7, #20]
 578 00e4 25E0     		b	.L21
 579              	.L24:
 247:.\LED_RGB.c   ****     }
 248:.\LED_RGB.c   ****     else if(hue < UINT16_5_6TH_MAX)
 580              		.loc 1 248 0
 581 00e6 BB1D     		add	r3, r7, #6
 582 00e8 1A88     		ldrh	r2, [r3]
 583 00ea 3A4B     		ldr	r3, .L32+36
 584 00ec 9A42     		cmp	r2, r3
 585 00ee 10D8     		bhi	.L25
 249:.\LED_RGB.c   ****     {
 250:.\LED_RGB.c   ****         //blue on, red increasing
 251:.\LED_RGB.c   ****         redIntensity =  (hue - UINT16_4_6TH_MAX) * dominantIntensityC / UINT16_1_6TH_MAX;
 586              		.loc 1 251 0
 587 00f0 BB1D     		add	r3, r7, #6
 588 00f2 1B88     		ldrh	r3, [r3]
 589 00f4 384A     		ldr	r2, .L32+40
 590 00f6 9B18     		add	r3, r3, r2
 591 00f8 3A69     		ldr	r2, [r7, #16]
 592 00fa 5343     		mul	r3, r2
 593 00fc 181C     		mov	r0, r3
 594 00fe 3049     		ldr	r1, .L32+16
 595 0100 FFF7FEFF 		bl	__aeabi_uidiv
 596 0104 031C     		mov	r3, r0
 597 0106 FB61     		str	r3, [r7, #28]
 252:.\LED_RGB.c   ****         greenIntensity = 0;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 16


 598              		.loc 1 252 0
 599 0108 0023     		mov	r3, #0
 600 010a BB61     		str	r3, [r7, #24]
 253:.\LED_RGB.c   ****         blueIntensity = dominantIntensityC;
 601              		.loc 1 253 0
 602 010c 3B69     		ldr	r3, [r7, #16]
 603 010e 7B61     		str	r3, [r7, #20]
 604 0110 0FE0     		b	.L21
 605              	.L25:
 254:.\LED_RGB.c   ****     }
 255:.\LED_RGB.c   ****     else
 256:.\LED_RGB.c   ****     {
 257:.\LED_RGB.c   ****         //red on, blue decreasing
 258:.\LED_RGB.c   ****         redIntensity = dominantIntensityC;
 606              		.loc 1 258 0
 607 0112 3B69     		ldr	r3, [r7, #16]
 608 0114 FB61     		str	r3, [r7, #28]
 259:.\LED_RGB.c   ****         greenIntensity = 0;
 609              		.loc 1 259 0
 610 0116 0023     		mov	r3, #0
 611 0118 BB61     		str	r3, [r7, #24]
 260:.\LED_RGB.c   ****         blueIntensity = (UINT16_MAX - hue) * dominantIntensityC / UINT16_1_6TH_MAX;
 612              		.loc 1 260 0
 613 011a BB1D     		add	r3, r7, #6
 614 011c 1B88     		ldrh	r3, [r3]
 615 011e 244A     		ldr	r2, .L32
 616 0120 D31A     		sub	r3, r2, r3
 617 0122 3A69     		ldr	r2, [r7, #16]
 618 0124 5343     		mul	r3, r2
 619 0126 181C     		mov	r0, r3
 620 0128 2549     		ldr	r1, .L32+16
 621 012a FFF7FEFF 		bl	__aeabi_uidiv
 622 012e 031C     		mov	r3, r0
 623 0130 7B61     		str	r3, [r7, #20]
 624              	.L21:
 261:.\LED_RGB.c   ****     }
 262:.\LED_RGB.c   **** 
 263:.\LED_RGB.c   ****     /* Scale for Saturation and Value */
 264:.\LED_RGB.c   ****     redIntensity += intensityShiftM;
 625              		.loc 1 264 0
 626 0132 FA69     		ldr	r2, [r7, #28]
 627 0134 FB68     		ldr	r3, [r7, #12]
 628 0136 D318     		add	r3, r2, r3
 629 0138 FB61     		str	r3, [r7, #28]
 265:.\LED_RGB.c   ****     greenIntensity += intensityShiftM;
 630              		.loc 1 265 0
 631 013a BA69     		ldr	r2, [r7, #24]
 632 013c FB68     		ldr	r3, [r7, #12]
 633 013e D318     		add	r3, r2, r3
 634 0140 BB61     		str	r3, [r7, #24]
 266:.\LED_RGB.c   ****     blueIntensity += intensityShiftM;
 635              		.loc 1 266 0
 636 0142 7A69     		ldr	r2, [r7, #20]
 637 0144 FB68     		ldr	r3, [r7, #12]
 638 0146 D318     		add	r3, r2, r3
 639 0148 7B61     		str	r3, [r7, #20]
 267:.\LED_RGB.c   ****     
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 17


 268:.\LED_RGB.c   ****     /* fix the overflow and underflow cases */
 269:.\LED_RGB.c   ****     if(redIntensity>UINT16_MAX)
 640              		.loc 1 269 0
 641 014a FA69     		ldr	r2, [r7, #28]
 642 014c 184B     		ldr	r3, .L32
 643 014e 9A42     		cmp	r2, r3
 644 0150 02DD     		ble	.L26
 270:.\LED_RGB.c   ****     {
 271:.\LED_RGB.c   ****         redIntensity=UINT16_MAX;
 645              		.loc 1 271 0
 646 0152 174B     		ldr	r3, .L32
 647 0154 FB61     		str	r3, [r7, #28]
 648 0156 04E0     		b	.L27
 649              	.L26:
 272:.\LED_RGB.c   ****     }
 273:.\LED_RGB.c   ****     else if(redIntensity<0)
 650              		.loc 1 273 0
 651 0158 FB69     		ldr	r3, [r7, #28]
 652 015a 002B     		cmp	r3, #0
 653 015c 01DA     		bge	.L27
 274:.\LED_RGB.c   ****     {
 275:.\LED_RGB.c   ****         redIntensity=0;
 654              		.loc 1 275 0
 655 015e 0023     		mov	r3, #0
 656 0160 FB61     		str	r3, [r7, #28]
 657              	.L27:
 276:.\LED_RGB.c   ****     }
 277:.\LED_RGB.c   ****     
 278:.\LED_RGB.c   ****     if(greenIntensity>UINT16_MAX)
 658              		.loc 1 278 0
 659 0162 BA69     		ldr	r2, [r7, #24]
 660 0164 124B     		ldr	r3, .L32
 661 0166 9A42     		cmp	r2, r3
 662 0168 02DD     		ble	.L28
 279:.\LED_RGB.c   ****     {
 280:.\LED_RGB.c   ****         greenIntensity=UINT16_MAX;
 663              		.loc 1 280 0
 664 016a 114B     		ldr	r3, .L32
 665 016c BB61     		str	r3, [r7, #24]
 666 016e 04E0     		b	.L29
 667              	.L28:
 281:.\LED_RGB.c   ****     }
 282:.\LED_RGB.c   ****     else if(greenIntensity<0)
 668              		.loc 1 282 0
 669 0170 BB69     		ldr	r3, [r7, #24]
 670 0172 002B     		cmp	r3, #0
 671 0174 01DA     		bge	.L29
 283:.\LED_RGB.c   ****     {
 284:.\LED_RGB.c   ****         greenIntensity=0;
 672              		.loc 1 284 0
 673 0176 0023     		mov	r3, #0
 674 0178 BB61     		str	r3, [r7, #24]
 675              	.L29:
 285:.\LED_RGB.c   ****     }
 286:.\LED_RGB.c   ****     
 287:.\LED_RGB.c   ****     if(blueIntensity>UINT16_MAX)
 676              		.loc 1 287 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 18


 677 017a 7A69     		ldr	r2, [r7, #20]
 678 017c 0C4B     		ldr	r3, .L32
 679 017e 9A42     		cmp	r2, r3
 680 0180 02DD     		ble	.L30
 288:.\LED_RGB.c   ****     {
 289:.\LED_RGB.c   ****         blueIntensity=UINT16_MAX;
 681              		.loc 1 289 0
 682 0182 0B4B     		ldr	r3, .L32
 683 0184 7B61     		str	r3, [r7, #20]
 684 0186 04E0     		b	.L31
 685              	.L30:
 290:.\LED_RGB.c   ****     }
 291:.\LED_RGB.c   ****     else if(blueIntensity<0)
 686              		.loc 1 291 0
 687 0188 7B69     		ldr	r3, [r7, #20]
 688 018a 002B     		cmp	r3, #0
 689 018c 01DA     		bge	.L31
 292:.\LED_RGB.c   ****     {
 293:.\LED_RGB.c   ****         blueIntensity=0;
 690              		.loc 1 293 0
 691 018e 0023     		mov	r3, #0
 692 0190 7B61     		str	r3, [r7, #20]
 693              	.L31:
 294:.\LED_RGB.c   ****     }
 295:.\LED_RGB.c   ****     
 296:.\LED_RGB.c   ****     LED_RGB_SetColorRGB(redIntensity, greenIntensity, blueIntensity);
 694              		.loc 1 296 0
 695 0192 FB69     		ldr	r3, [r7, #28]
 696 0194 99B2     		uxth	r1, r3
 697 0196 BB69     		ldr	r3, [r7, #24]
 698 0198 9AB2     		uxth	r2, r3
 699 019a 7B69     		ldr	r3, [r7, #20]
 700 019c 9BB2     		uxth	r3, r3
 701 019e 081C     		mov	r0, r1
 702 01a0 111C     		mov	r1, r2
 703 01a2 1A1C     		mov	r2, r3
 704 01a4 FFF7FEFF 		bl	LED_RGB_SetColorRGB
 297:.\LED_RGB.c   **** }
 705              		.loc 1 297 0
 706 01a8 BD46     		mov	sp, r7
 707 01aa 08B0     		add	sp, sp, #32
 708              		@ sp needed
 709 01ac 80BD     		pop	{r7, pc}
 710              	.L33:
 711 01ae C046     		.align	2
 712              	.L32:
 713 01b0 FFFF0000 		.word	65535
 714 01b4 A92A0000 		.word	10921
 715 01b8 55550000 		.word	21845
 716 01bc 54550000 		.word	21844
 717 01c0 AA2A0000 		.word	10922
 718 01c4 FE7F0000 		.word	32766
 719 01c8 ABAAFFFF 		.word	-21845
 720 01cc A9AA0000 		.word	43689
 721 01d0 AAAA0000 		.word	43690
 722 01d4 53D50000 		.word	54611
 723 01d8 5655FFFF 		.word	-43690
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 19


 724              		.cfi_endproc
 725              	.LFE38:
 726              		.size	LED_RGB_SetColorCircleHSV, .-LED_RGB_SetColorCircleHSV
 727              		.text
 728              	.Letext0:
 729              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 730              		.section	.debug_info,"",%progbits
 731              	.Ldebug_info0:
 732 0000 14020000 		.4byte	0x214
 733 0004 0400     		.2byte	0x4
 734 0006 00000000 		.4byte	.Ldebug_abbrev0
 735 000a 04       		.byte	0x4
 736 000b 01       		.uleb128 0x1
 737 000c 52000000 		.4byte	.LASF31
 738 0010 01       		.byte	0x1
 739 0011 04020000 		.4byte	.LASF32
 740 0015 64010000 		.4byte	.LASF33
 741 0019 00000000 		.4byte	.Ldebug_ranges0+0
 742 001d 00000000 		.4byte	0
 743 0021 00000000 		.4byte	.Ldebug_line0
 744 0025 02       		.uleb128 0x2
 745 0026 01       		.byte	0x1
 746 0027 06       		.byte	0x6
 747 0028 66020000 		.4byte	.LASF0
 748 002c 02       		.uleb128 0x2
 749 002d 01       		.byte	0x1
 750 002e 08       		.byte	0x8
 751 002f DC000000 		.4byte	.LASF1
 752 0033 02       		.uleb128 0x2
 753 0034 02       		.byte	0x2
 754 0035 05       		.byte	0x5
 755 0036 26020000 		.4byte	.LASF2
 756 003a 02       		.uleb128 0x2
 757 003b 02       		.byte	0x2
 758 003c 07       		.byte	0x7
 759 003d 2B000000 		.4byte	.LASF3
 760 0041 02       		.uleb128 0x2
 761 0042 04       		.byte	0x4
 762 0043 05       		.byte	0x5
 763 0044 4A020000 		.4byte	.LASF4
 764 0048 02       		.uleb128 0x2
 765 0049 04       		.byte	0x4
 766 004a 07       		.byte	0x7
 767 004b F9000000 		.4byte	.LASF5
 768 004f 02       		.uleb128 0x2
 769 0050 08       		.byte	0x8
 770 0051 05       		.byte	0x5
 771 0052 00000000 		.4byte	.LASF6
 772 0056 02       		.uleb128 0x2
 773 0057 08       		.byte	0x8
 774 0058 07       		.byte	0x7
 775 0059 4D010000 		.4byte	.LASF7
 776 005d 03       		.uleb128 0x3
 777 005e 04       		.byte	0x4
 778 005f 05       		.byte	0x5
 779 0060 696E7400 		.ascii	"int\000"
 780 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 20


 781 0065 04       		.byte	0x4
 782 0066 07       		.byte	0x7
 783 0067 40010000 		.4byte	.LASF8
 784 006b 04       		.uleb128 0x4
 785 006c 30020000 		.4byte	.LASF9
 786 0070 02       		.byte	0x2
 787 0071 C1       		.byte	0xc1
 788 0072 2C000000 		.4byte	0x2c
 789 0076 04       		.uleb128 0x4
 790 0077 32010000 		.4byte	.LASF10
 791 007b 02       		.byte	0x2
 792 007c C2       		.byte	0xc2
 793 007d 3A000000 		.4byte	0x3a
 794 0081 04       		.uleb128 0x4
 795 0082 39010000 		.4byte	.LASF11
 796 0086 02       		.byte	0x2
 797 0087 C3       		.byte	0xc3
 798 0088 48000000 		.4byte	0x48
 799 008c 04       		.uleb128 0x4
 800 008d 0B010000 		.4byte	.LASF12
 801 0091 02       		.byte	0x2
 802 0092 C6       		.byte	0xc6
 803 0093 41000000 		.4byte	0x41
 804 0097 02       		.uleb128 0x2
 805 0098 04       		.byte	0x4
 806 0099 04       		.byte	0x4
 807 009a 4C000000 		.4byte	.LASF13
 808 009e 02       		.uleb128 0x2
 809 009f 08       		.byte	0x8
 810 00a0 04       		.byte	0x4
 811 00a1 2B010000 		.4byte	.LASF14
 812 00a5 02       		.uleb128 0x2
 813 00a6 01       		.byte	0x1
 814 00a7 08       		.byte	0x8
 815 00a8 10020000 		.4byte	.LASF15
 816 00ac 02       		.uleb128 0x2
 817 00ad 04       		.byte	0x4
 818 00ae 07       		.byte	0x7
 819 00af FB010000 		.4byte	.LASF16
 820 00b3 05       		.uleb128 0x5
 821 00b4 CE000000 		.4byte	.LASF17
 822 00b8 01       		.byte	0x1
 823 00b9 24       		.byte	0x24
 824 00ba 00000000 		.4byte	.LFB33
 825 00be 14000000 		.4byte	.LFE33-.LFB33
 826 00c2 01       		.uleb128 0x1
 827 00c3 9C       		.byte	0x9c
 828 00c4 05       		.uleb128 0x5
 829 00c5 72020000 		.4byte	.LASF18
 830 00c9 01       		.byte	0x1
 831 00ca 32       		.byte	0x32
 832 00cb 00000000 		.4byte	.LFB34
 833 00cf 14000000 		.4byte	.LFE34-.LFB34
 834 00d3 01       		.uleb128 0x1
 835 00d4 9C       		.byte	0x9c
 836 00d5 06       		.uleb128 0x6
 837 00d6 EB010000 		.4byte	.LASF21
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 21


 838 00da 01       		.byte	0x1
 839 00db 46       		.byte	0x46
 840 00dc 00000000 		.4byte	.LFB35
 841 00e0 4E000000 		.4byte	.LFE35-.LFB35
 842 00e4 01       		.uleb128 0x1
 843 00e5 9C       		.byte	0x9c
 844 00e6 07010000 		.4byte	0x107
 845 00ea 07       		.uleb128 0x7
 846 00eb 0E000000 		.4byte	.LASF19
 847 00ef 01       		.byte	0x1
 848 00f0 46       		.byte	0x46
 849 00f1 6B000000 		.4byte	0x6b
 850 00f5 02       		.uleb128 0x2
 851 00f6 91       		.byte	0x91
 852 00f7 77       		.sleb128 -9
 853 00f8 07       		.uleb128 0x7
 854 00f9 15020000 		.4byte	.LASF20
 855 00fd 01       		.byte	0x1
 856 00fe 46       		.byte	0x46
 857 00ff 76000000 		.4byte	0x76
 858 0103 02       		.uleb128 0x2
 859 0104 91       		.byte	0x91
 860 0105 74       		.sleb128 -12
 861 0106 00       		.byte	0
 862 0107 06       		.uleb128 0x6
 863 0108 36020000 		.4byte	.LASF22
 864 010c 01       		.byte	0x1
 865 010d 80       		.byte	0x80
 866 010e 00000000 		.4byte	.LFB36
 867 0112 3C000000 		.4byte	.LFE36-.LFB36
 868 0116 01       		.uleb128 0x1
 869 0117 9C       		.byte	0x9c
 870 0118 47010000 		.4byte	0x147
 871 011c 07       		.uleb128 0x7
 872 011d 1E000000 		.4byte	.LASF23
 873 0121 01       		.byte	0x1
 874 0122 80       		.byte	0x80
 875 0123 76000000 		.4byte	0x76
 876 0127 02       		.uleb128 0x2
 877 0128 91       		.byte	0x91
 878 0129 76       		.sleb128 -10
 879 012a 07       		.uleb128 0x7
 880 012b EA000000 		.4byte	.LASF24
 881 012f 01       		.byte	0x1
 882 0130 80       		.byte	0x80
 883 0131 76000000 		.4byte	0x76
 884 0135 02       		.uleb128 0x2
 885 0136 91       		.byte	0x91
 886 0137 74       		.sleb128 -12
 887 0138 07       		.uleb128 0x7
 888 0139 3E000000 		.4byte	.LASF25
 889 013d 01       		.byte	0x1
 890 013e 80       		.byte	0x80
 891 013f 76000000 		.4byte	0x76
 892 0143 02       		.uleb128 0x2
 893 0144 91       		.byte	0x91
 894 0145 72       		.sleb128 -14
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 22


 895 0146 00       		.byte	0
 896 0147 06       		.uleb128 0x6
 897 0148 D4010000 		.4byte	.LASF26
 898 014c 01       		.byte	0x1
 899 014d 93       		.byte	0x93
 900 014e 00000000 		.4byte	.LFB37
 901 0152 88010000 		.4byte	.LFE37-.LFB37
 902 0156 01       		.uleb128 0x1
 903 0157 9C       		.byte	0x9c
 904 0158 95010000 		.4byte	0x195
 905 015c 08       		.uleb128 0x8
 906 015d 68756500 		.ascii	"hue\000"
 907 0161 01       		.byte	0x1
 908 0162 93       		.byte	0x93
 909 0163 76000000 		.4byte	0x76
 910 0167 02       		.uleb128 0x2
 911 0168 91       		.byte	0x91
 912 0169 6E       		.sleb128 -18
 913 016a 09       		.uleb128 0x9
 914 016b 1E000000 		.4byte	.LASF23
 915 016f 01       		.byte	0x1
 916 0170 95       		.byte	0x95
 917 0171 76000000 		.4byte	0x76
 918 0175 02       		.uleb128 0x2
 919 0176 91       		.byte	0x91
 920 0177 76       		.sleb128 -10
 921 0178 09       		.uleb128 0x9
 922 0179 EA000000 		.4byte	.LASF24
 923 017d 01       		.byte	0x1
 924 017e 95       		.byte	0x95
 925 017f 76000000 		.4byte	0x76
 926 0183 02       		.uleb128 0x2
 927 0184 91       		.byte	0x91
 928 0185 74       		.sleb128 -12
 929 0186 09       		.uleb128 0x9
 930 0187 3E000000 		.4byte	.LASF25
 931 018b 01       		.byte	0x1
 932 018c 95       		.byte	0x95
 933 018d 76000000 		.4byte	0x76
 934 0191 02       		.uleb128 0x2
 935 0192 91       		.byte	0x91
 936 0193 72       		.sleb128 -14
 937 0194 00       		.byte	0
 938 0195 0A       		.uleb128 0xa
 939 0196 11010000 		.4byte	.LASF34
 940 019a 01       		.byte	0x1
 941 019b D4       		.byte	0xd4
 942 019c 00000000 		.4byte	.LFB38
 943 01a0 DC010000 		.4byte	.LFE38-.LFB38
 944 01a4 01       		.uleb128 0x1
 945 01a5 9C       		.byte	0x9c
 946 01a6 08       		.uleb128 0x8
 947 01a7 68756500 		.ascii	"hue\000"
 948 01ab 01       		.byte	0x1
 949 01ac D4       		.byte	0xd4
 950 01ad 76000000 		.4byte	0x76
 951 01b1 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 23


 952 01b2 91       		.byte	0x91
 953 01b3 5E       		.sleb128 -34
 954 01b4 07       		.uleb128 0x7
 955 01b5 C9010000 		.4byte	.LASF27
 956 01b9 01       		.byte	0x1
 957 01ba D4       		.byte	0xd4
 958 01bb 76000000 		.4byte	0x76
 959 01bf 02       		.uleb128 0x2
 960 01c0 91       		.byte	0x91
 961 01c1 5C       		.sleb128 -36
 962 01c2 07       		.uleb128 0x7
 963 01c3 18000000 		.4byte	.LASF28
 964 01c7 01       		.byte	0x1
 965 01c8 D4       		.byte	0xd4
 966 01c9 76000000 		.4byte	0x76
 967 01cd 02       		.uleb128 0x2
 968 01ce 91       		.byte	0x91
 969 01cf 5A       		.sleb128 -38
 970 01d0 09       		.uleb128 0x9
 971 01d1 1E000000 		.4byte	.LASF23
 972 01d5 01       		.byte	0x1
 973 01d6 D6       		.byte	0xd6
 974 01d7 8C000000 		.4byte	0x8c
 975 01db 02       		.uleb128 0x2
 976 01dc 91       		.byte	0x91
 977 01dd 74       		.sleb128 -12
 978 01de 09       		.uleb128 0x9
 979 01df EA000000 		.4byte	.LASF24
 980 01e3 01       		.byte	0x1
 981 01e4 D6       		.byte	0xd6
 982 01e5 8C000000 		.4byte	0x8c
 983 01e9 02       		.uleb128 0x2
 984 01ea 91       		.byte	0x91
 985 01eb 70       		.sleb128 -16
 986 01ec 09       		.uleb128 0x9
 987 01ed 3E000000 		.4byte	.LASF25
 988 01f1 01       		.byte	0x1
 989 01f2 D6       		.byte	0xd6
 990 01f3 8C000000 		.4byte	0x8c
 991 01f7 02       		.uleb128 0x2
 992 01f8 91       		.byte	0x91
 993 01f9 6C       		.sleb128 -20
 994 01fa 09       		.uleb128 0x9
 995 01fb 53020000 		.4byte	.LASF29
 996 01ff 01       		.byte	0x1
 997 0200 D8       		.byte	0xd8
 998 0201 81000000 		.4byte	0x81
 999 0205 02       		.uleb128 0x2
 1000 0206 91       		.byte	0x91
 1001 0207 68       		.sleb128 -24
 1002 0208 09       		.uleb128 0x9
 1003 0209 7F020000 		.4byte	.LASF30
 1004 020d 01       		.byte	0x1
 1005 020e DA       		.byte	0xda
 1006 020f 8C000000 		.4byte	0x8c
 1007 0213 02       		.uleb128 0x2
 1008 0214 91       		.byte	0x91
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 24


 1009 0215 64       		.sleb128 -28
 1010 0216 00       		.byte	0
 1011 0217 00       		.byte	0
 1012              		.section	.debug_abbrev,"",%progbits
 1013              	.Ldebug_abbrev0:
 1014 0000 01       		.uleb128 0x1
 1015 0001 11       		.uleb128 0x11
 1016 0002 01       		.byte	0x1
 1017 0003 25       		.uleb128 0x25
 1018 0004 0E       		.uleb128 0xe
 1019 0005 13       		.uleb128 0x13
 1020 0006 0B       		.uleb128 0xb
 1021 0007 03       		.uleb128 0x3
 1022 0008 0E       		.uleb128 0xe
 1023 0009 1B       		.uleb128 0x1b
 1024 000a 0E       		.uleb128 0xe
 1025 000b 55       		.uleb128 0x55
 1026 000c 17       		.uleb128 0x17
 1027 000d 11       		.uleb128 0x11
 1028 000e 01       		.uleb128 0x1
 1029 000f 10       		.uleb128 0x10
 1030 0010 17       		.uleb128 0x17
 1031 0011 00       		.byte	0
 1032 0012 00       		.byte	0
 1033 0013 02       		.uleb128 0x2
 1034 0014 24       		.uleb128 0x24
 1035 0015 00       		.byte	0
 1036 0016 0B       		.uleb128 0xb
 1037 0017 0B       		.uleb128 0xb
 1038 0018 3E       		.uleb128 0x3e
 1039 0019 0B       		.uleb128 0xb
 1040 001a 03       		.uleb128 0x3
 1041 001b 0E       		.uleb128 0xe
 1042 001c 00       		.byte	0
 1043 001d 00       		.byte	0
 1044 001e 03       		.uleb128 0x3
 1045 001f 24       		.uleb128 0x24
 1046 0020 00       		.byte	0
 1047 0021 0B       		.uleb128 0xb
 1048 0022 0B       		.uleb128 0xb
 1049 0023 3E       		.uleb128 0x3e
 1050 0024 0B       		.uleb128 0xb
 1051 0025 03       		.uleb128 0x3
 1052 0026 08       		.uleb128 0x8
 1053 0027 00       		.byte	0
 1054 0028 00       		.byte	0
 1055 0029 04       		.uleb128 0x4
 1056 002a 16       		.uleb128 0x16
 1057 002b 00       		.byte	0
 1058 002c 03       		.uleb128 0x3
 1059 002d 0E       		.uleb128 0xe
 1060 002e 3A       		.uleb128 0x3a
 1061 002f 0B       		.uleb128 0xb
 1062 0030 3B       		.uleb128 0x3b
 1063 0031 0B       		.uleb128 0xb
 1064 0032 49       		.uleb128 0x49
 1065 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 25


 1066 0034 00       		.byte	0
 1067 0035 00       		.byte	0
 1068 0036 05       		.uleb128 0x5
 1069 0037 2E       		.uleb128 0x2e
 1070 0038 00       		.byte	0
 1071 0039 3F       		.uleb128 0x3f
 1072 003a 19       		.uleb128 0x19
 1073 003b 03       		.uleb128 0x3
 1074 003c 0E       		.uleb128 0xe
 1075 003d 3A       		.uleb128 0x3a
 1076 003e 0B       		.uleb128 0xb
 1077 003f 3B       		.uleb128 0x3b
 1078 0040 0B       		.uleb128 0xb
 1079 0041 27       		.uleb128 0x27
 1080 0042 19       		.uleb128 0x19
 1081 0043 11       		.uleb128 0x11
 1082 0044 01       		.uleb128 0x1
 1083 0045 12       		.uleb128 0x12
 1084 0046 06       		.uleb128 0x6
 1085 0047 40       		.uleb128 0x40
 1086 0048 18       		.uleb128 0x18
 1087 0049 9642     		.uleb128 0x2116
 1088 004b 19       		.uleb128 0x19
 1089 004c 00       		.byte	0
 1090 004d 00       		.byte	0
 1091 004e 06       		.uleb128 0x6
 1092 004f 2E       		.uleb128 0x2e
 1093 0050 01       		.byte	0x1
 1094 0051 3F       		.uleb128 0x3f
 1095 0052 19       		.uleb128 0x19
 1096 0053 03       		.uleb128 0x3
 1097 0054 0E       		.uleb128 0xe
 1098 0055 3A       		.uleb128 0x3a
 1099 0056 0B       		.uleb128 0xb
 1100 0057 3B       		.uleb128 0x3b
 1101 0058 0B       		.uleb128 0xb
 1102 0059 27       		.uleb128 0x27
 1103 005a 19       		.uleb128 0x19
 1104 005b 11       		.uleb128 0x11
 1105 005c 01       		.uleb128 0x1
 1106 005d 12       		.uleb128 0x12
 1107 005e 06       		.uleb128 0x6
 1108 005f 40       		.uleb128 0x40
 1109 0060 18       		.uleb128 0x18
 1110 0061 9642     		.uleb128 0x2116
 1111 0063 19       		.uleb128 0x19
 1112 0064 01       		.uleb128 0x1
 1113 0065 13       		.uleb128 0x13
 1114 0066 00       		.byte	0
 1115 0067 00       		.byte	0
 1116 0068 07       		.uleb128 0x7
 1117 0069 05       		.uleb128 0x5
 1118 006a 00       		.byte	0
 1119 006b 03       		.uleb128 0x3
 1120 006c 0E       		.uleb128 0xe
 1121 006d 3A       		.uleb128 0x3a
 1122 006e 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 26


 1123 006f 3B       		.uleb128 0x3b
 1124 0070 0B       		.uleb128 0xb
 1125 0071 49       		.uleb128 0x49
 1126 0072 13       		.uleb128 0x13
 1127 0073 02       		.uleb128 0x2
 1128 0074 18       		.uleb128 0x18
 1129 0075 00       		.byte	0
 1130 0076 00       		.byte	0
 1131 0077 08       		.uleb128 0x8
 1132 0078 05       		.uleb128 0x5
 1133 0079 00       		.byte	0
 1134 007a 03       		.uleb128 0x3
 1135 007b 08       		.uleb128 0x8
 1136 007c 3A       		.uleb128 0x3a
 1137 007d 0B       		.uleb128 0xb
 1138 007e 3B       		.uleb128 0x3b
 1139 007f 0B       		.uleb128 0xb
 1140 0080 49       		.uleb128 0x49
 1141 0081 13       		.uleb128 0x13
 1142 0082 02       		.uleb128 0x2
 1143 0083 18       		.uleb128 0x18
 1144 0084 00       		.byte	0
 1145 0085 00       		.byte	0
 1146 0086 09       		.uleb128 0x9
 1147 0087 34       		.uleb128 0x34
 1148 0088 00       		.byte	0
 1149 0089 03       		.uleb128 0x3
 1150 008a 0E       		.uleb128 0xe
 1151 008b 3A       		.uleb128 0x3a
 1152 008c 0B       		.uleb128 0xb
 1153 008d 3B       		.uleb128 0x3b
 1154 008e 0B       		.uleb128 0xb
 1155 008f 49       		.uleb128 0x49
 1156 0090 13       		.uleb128 0x13
 1157 0091 02       		.uleb128 0x2
 1158 0092 18       		.uleb128 0x18
 1159 0093 00       		.byte	0
 1160 0094 00       		.byte	0
 1161 0095 0A       		.uleb128 0xa
 1162 0096 2E       		.uleb128 0x2e
 1163 0097 01       		.byte	0x1
 1164 0098 3F       		.uleb128 0x3f
 1165 0099 19       		.uleb128 0x19
 1166 009a 03       		.uleb128 0x3
 1167 009b 0E       		.uleb128 0xe
 1168 009c 3A       		.uleb128 0x3a
 1169 009d 0B       		.uleb128 0xb
 1170 009e 3B       		.uleb128 0x3b
 1171 009f 0B       		.uleb128 0xb
 1172 00a0 27       		.uleb128 0x27
 1173 00a1 19       		.uleb128 0x19
 1174 00a2 11       		.uleb128 0x11
 1175 00a3 01       		.uleb128 0x1
 1176 00a4 12       		.uleb128 0x12
 1177 00a5 06       		.uleb128 0x6
 1178 00a6 40       		.uleb128 0x40
 1179 00a7 18       		.uleb128 0x18
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 27


 1180 00a8 9642     		.uleb128 0x2116
 1181 00aa 19       		.uleb128 0x19
 1182 00ab 00       		.byte	0
 1183 00ac 00       		.byte	0
 1184 00ad 00       		.byte	0
 1185              		.section	.debug_aranges,"",%progbits
 1186 0000 44000000 		.4byte	0x44
 1187 0004 0200     		.2byte	0x2
 1188 0006 00000000 		.4byte	.Ldebug_info0
 1189 000a 04       		.byte	0x4
 1190 000b 00       		.byte	0
 1191 000c 0000     		.2byte	0
 1192 000e 0000     		.2byte	0
 1193 0010 00000000 		.4byte	.LFB33
 1194 0014 14000000 		.4byte	.LFE33-.LFB33
 1195 0018 00000000 		.4byte	.LFB34
 1196 001c 14000000 		.4byte	.LFE34-.LFB34
 1197 0020 00000000 		.4byte	.LFB35
 1198 0024 4E000000 		.4byte	.LFE35-.LFB35
 1199 0028 00000000 		.4byte	.LFB36
 1200 002c 3C000000 		.4byte	.LFE36-.LFB36
 1201 0030 00000000 		.4byte	.LFB37
 1202 0034 88010000 		.4byte	.LFE37-.LFB37
 1203 0038 00000000 		.4byte	.LFB38
 1204 003c DC010000 		.4byte	.LFE38-.LFB38
 1205 0040 00000000 		.4byte	0
 1206 0044 00000000 		.4byte	0
 1207              		.section	.debug_ranges,"",%progbits
 1208              	.Ldebug_ranges0:
 1209 0000 00000000 		.4byte	.LFB33
 1210 0004 14000000 		.4byte	.LFE33
 1211 0008 00000000 		.4byte	.LFB34
 1212 000c 14000000 		.4byte	.LFE34
 1213 0010 00000000 		.4byte	.LFB35
 1214 0014 4E000000 		.4byte	.LFE35
 1215 0018 00000000 		.4byte	.LFB36
 1216 001c 3C000000 		.4byte	.LFE36
 1217 0020 00000000 		.4byte	.LFB37
 1218 0024 88010000 		.4byte	.LFE37
 1219 0028 00000000 		.4byte	.LFB38
 1220 002c DC010000 		.4byte	.LFE38
 1221 0030 00000000 		.4byte	0
 1222 0034 00000000 		.4byte	0
 1223              		.section	.debug_line,"",%progbits
 1224              	.Ldebug_line0:
 1225 0000 08010000 		.section	.debug_str,"MS",%progbits,1
 1225      02004600 
 1225      00000201 
 1225      FB0E0D00 
 1225      01010101 
 1226              	.LASF6:
 1227 0000 6C6F6E67 		.ascii	"long long int\000"
 1227      206C6F6E 
 1227      6720696E 
 1227      7400
 1228              	.LASF19:
 1229 000e 4C45445F 		.ascii	"LED_Color\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 28


 1229      436F6C6F 
 1229      7200
 1230              	.LASF28:
 1231 0018 76616C75 		.ascii	"value\000"
 1231      6500
 1232              	.LASF23:
 1233 001e 72656449 		.ascii	"redIntensity\000"
 1233      6E74656E 
 1233      73697479 
 1233      00
 1234              	.LASF3:
 1235 002b 73686F72 		.ascii	"short unsigned int\000"
 1235      7420756E 
 1235      7369676E 
 1235      65642069 
 1235      6E7400
 1236              	.LASF25:
 1237 003e 626C7565 		.ascii	"blueIntensity\000"
 1237      496E7465 
 1237      6E736974 
 1237      7900
 1238              	.LASF13:
 1239 004c 666C6F61 		.ascii	"float\000"
 1239      7400
 1240              	.LASF31:
 1241 0052 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1241      4320342E 
 1241      382E3420 
 1241      32303134 
 1241      30353236 
 1242 0085 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1242      20726576 
 1242      6973696F 
 1242      6E203231 
 1242      31333538 
 1243 00b8 30202D66 		.ascii	"0 -ffunction-sections\000"
 1243      66756E63 
 1243      74696F6E 
 1243      2D736563 
 1243      74696F6E 
 1244              	.LASF17:
 1245 00ce 4C45445F 		.ascii	"LED_RGB_Start\000"
 1245      5247425F 
 1245      53746172 
 1245      7400
 1246              	.LASF1:
 1247 00dc 756E7369 		.ascii	"unsigned char\000"
 1247      676E6564 
 1247      20636861 
 1247      7200
 1248              	.LASF24:
 1249 00ea 67726565 		.ascii	"greenIntensity\000"
 1249      6E496E74 
 1249      656E7369 
 1249      747900
 1250              	.LASF5:
 1251 00f9 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 29


 1251      20756E73 
 1251      69676E65 
 1251      6420696E 
 1251      7400
 1252              	.LASF12:
 1253 010b 696E7433 		.ascii	"int32\000"
 1253      3200
 1254              	.LASF34:
 1255 0111 4C45445F 		.ascii	"LED_RGB_SetColorCircleHSV\000"
 1255      5247425F 
 1255      53657443 
 1255      6F6C6F72 
 1255      43697263 
 1256              	.LASF14:
 1257 012b 646F7562 		.ascii	"double\000"
 1257      6C6500
 1258              	.LASF10:
 1259 0132 75696E74 		.ascii	"uint16\000"
 1259      313600
 1260              	.LASF11:
 1261 0139 75696E74 		.ascii	"uint32\000"
 1261      333200
 1262              	.LASF8:
 1263 0140 756E7369 		.ascii	"unsigned int\000"
 1263      676E6564 
 1263      20696E74 
 1263      00
 1264              	.LASF7:
 1265 014d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1265      206C6F6E 
 1265      6720756E 
 1265      7369676E 
 1265      65642069 
 1266              	.LASF33:
 1267 0164 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 1267      73657273 
 1267      5C6D6974 
 1267      6368656C 
 1267      6C5C446F 
 1268 0191 2D546872 		.ascii	"-Throttle\\ExampleProject1\\Lab Solutions\\Lab 4 AD"
 1268      6F74746C 
 1268      655C4578 
 1268      616D706C 
 1268      6550726F 
 1269 01c1 432E6379 		.ascii	"C.cydsn\000"
 1269      64736E00 
 1270              	.LASF27:
 1271 01c9 73617475 		.ascii	"saturation\000"
 1271      72617469 
 1271      6F6E00
 1272              	.LASF26:
 1273 01d4 4C45445F 		.ascii	"LED_RGB_SetColorCircle\000"
 1273      5247425F 
 1273      53657443 
 1273      6F6C6F72 
 1273      43697263 
 1274              	.LASF21:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 30


 1275 01eb 4C45445F 		.ascii	"LED_RGB_DCWrite\000"
 1275      5247425F 
 1275      44435772 
 1275      69746500 
 1276              	.LASF16:
 1277 01fb 73697A65 		.ascii	"sizetype\000"
 1277      74797065 
 1277      00
 1278              	.LASF32:
 1279 0204 2E5C4C45 		.ascii	".\\LED_RGB.c\000"
 1279      445F5247 
 1279      422E6300 
 1280              	.LASF15:
 1281 0210 63686172 		.ascii	"char\000"
 1281      00
 1282              	.LASF20:
 1283 0215 4C45445F 		.ascii	"LED_NewDutyCycle\000"
 1283      4E657744 
 1283      75747943 
 1283      79636C65 
 1283      00
 1284              	.LASF2:
 1285 0226 73686F72 		.ascii	"short int\000"
 1285      7420696E 
 1285      7400
 1286              	.LASF9:
 1287 0230 75696E74 		.ascii	"uint8\000"
 1287      3800
 1288              	.LASF22:
 1289 0236 4C45445F 		.ascii	"LED_RGB_SetColorRGB\000"
 1289      5247425F 
 1289      53657443 
 1289      6F6C6F72 
 1289      52474200 
 1290              	.LASF4:
 1291 024a 6C6F6E67 		.ascii	"long int\000"
 1291      20696E74 
 1291      00
 1292              	.LASF29:
 1293 0253 646F6D69 		.ascii	"dominantIntensityC\000"
 1293      6E616E74 
 1293      496E7465 
 1293      6E736974 
 1293      794300
 1294              	.LASF0:
 1295 0266 7369676E 		.ascii	"signed char\000"
 1295      65642063 
 1295      68617200 
 1296              	.LASF18:
 1297 0272 4C45445F 		.ascii	"LED_RGB_Stop\000"
 1297      5247425F 
 1297      53746F70 
 1297      00
 1298              	.LASF30:
 1299 027f 696E7465 		.ascii	"intensityShiftM\000"
 1299      6E736974 
 1299      79536869 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSvm2gx.s 			page 31


 1299      66744D00 
 1300              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
