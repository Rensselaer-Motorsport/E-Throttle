ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"TPS_ADC_SAR.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.TPS_ADC_SAR_CalcGain,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	TPS_ADC_SAR_CalcGain, %function
  23              	TPS_ADC_SAR_CalcGain:
  24              	.LFB12:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\TPS_ADC_SAR.c"
   1:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * File Name: TPS_ADC_SAR.c
   3:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
   5:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Description:
   6:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
   9:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Note:
  10:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  11:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  18:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** #include "TPS_ADC_SAR.h"
  20:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  21:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** #if(TPS_ADC_SAR_DEFAULT_INTERNAL_CLK)
  22:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #include "TPS_ADC_SAR_theACLK.h"
  23:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** #endif /* End TPS_ADC_SAR_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  25:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  26:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /***************************************
  27:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Forward function references
  28:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ***************************************/
  29:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** static void TPS_ADC_SAR_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  31:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  32:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /***************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 2


  33:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ***************************************/
  35:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** uint8 TPS_ADC_SAR_initVar = 0u;
  36:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** volatile int16 TPS_ADC_SAR_offset;
  37:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** volatile int16 TPS_ADC_SAR_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** volatile int32 TPS_ADC_SAR_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** volatile int16 TPS_ADC_SAR_shift;
  40:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  41:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  42:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_Start
  44:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  46:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
  47:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_Enable() function.
  51:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  52:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
  53:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
  54:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  55:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
  56:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
  57:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  58:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global variables:
  59:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  The TPS_ADC_SAR_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_Start() routine.
  64:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  to zero before call of TPS_ADC_SAR_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_Init() and TPS_ADC_SAR_Enable() as done in the
  67:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_Start() routine.
  68:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  69:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_Enable() function.
  72:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  73:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** void TPS_ADC_SAR_Start(void)
  75:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
  76:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  77:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     if(TPS_ADC_SAR_initVar == 0u)
  79:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
  80:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_Init();
  81:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_initVar = 1u;
  82:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
  83:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_Enable();
  84:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
  85:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  86:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
  87:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_Init
  89:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 3


  90:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  91:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
  92:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_Start().
  95:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  96:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
  97:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
  98:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
  99:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 100:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 101:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 102:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global variables:
 103:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  The TPS_ADC_SAR_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 105:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** void TPS_ADC_SAR_Init(void)
 107:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 108:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 109:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(TPS_ADC_SAR_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_theACLK_SetMode(CYCLK_DUTY);
 112:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* End TPS_ADC_SAR_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 114:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(TPS_ADC_SAR_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         CyIntSetPriority(TPS_ADC_SAR_INTC_NUMBER, TPS_ADC_SAR_INTC_PRIOR_NUMBER);
 117:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         (void)CyIntSetVector(TPS_ADC_SAR_INTC_NUMBER, &TPS_ADC_SAR_ISR);
 118:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif   /* End TPS_ADC_SAR_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 120:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR1_REG |= TPS_ADC_SAR_SAR_IRQ_MASK_EN | TPS_ADC_SAR_SAR_IRQ_MODE_EDGE;
 122:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 123:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SetResolution(TPS_ADC_SAR_DEFAULT_RESOLUTION);
 125:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_offset = 0;
 126:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 127:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 128:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 129:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_Enable
 131:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 133:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 134:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 136:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 137:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 138:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 139:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 140:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 141:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 142:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** void TPS_ADC_SAR_Enable(void)
 144:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 145:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 4


 147:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 148:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 149:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_PWRMGR_SAR_REG |= TPS_ADC_SAR_ACT_PWR_SAR_EN;
 151:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 152:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_STBY_PWRMGR_SAR_REG |= TPS_ADC_SAR_STBY_PWR_SAR_EN;
 154:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 155:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(TPS_ADC_SAR_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_PWRMGR_CLK_REG |= TPS_ADC_SAR_ACT_PWR_CLK_EN;
 158:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_STBY_PWRMGR_CLK_REG |= TPS_ADC_SAR_STBY_PWR_CLK_EN;
 159:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* End TPS_ADC_SAR_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 161:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     tmpReg = TPS_ADC_SAR_SAR_CSR3_REG;
 163:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     tmpReg |= TPS_ADC_SAR_SAR_EN_BUF_VCM_EN;
 164:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if((TPS_ADC_SAR_DEFAULT_REFERENCE == TPS_ADC_SAR__EXT_REF) || \
 166:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         tmpReg &= (uint8)~TPS_ADC_SAR_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         tmpReg |= TPS_ADC_SAR_SAR_EN_BUF_VREF_EN;
 170:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* TPS_ADC_SAR_DEFAULT_REFERENCE == TPS_ADC_SAR__EXT_REF */
 171:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR3_REG = tmpReg;
 172:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 173:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VNEG_VDDA_DIFF)
 175:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #if(TPS_ADC_SAR_DEFAULT_REFERENCE == TPS_ADC_SAR__EXT_REF)
 176:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             TPS_ADC_SAR_SAR_CSR6_REG = TPS_ADC_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             TPS_ADC_SAR_SAR_CSR6_REG = TPS_ADC_SAR_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #endif /* TPS_ADC_SAR_DEFAULT_REFERENCE == TPS_ADC_SAR__EXT_REF */
 180:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #if(TPS_ADC_SAR_DEFAULT_REFERENCE == TPS_ADC_SAR__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             TPS_ADC_SAR_SAR_CSR6_REG = TPS_ADC_SAR_INT_VREF;            /* S3 + S4 */
 183:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             TPS_ADC_SAR_SAR_CSR6_REG = TPS_ADC_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #endif /* TPS_ADC_SAR_DEFAULT_REFERENCE == TPS_ADC_SAR__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 188:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(TPS_ADC_SAR_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR5_REG &= (uint8)~TPS_ADC_SAR_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR5_REG |= TPS_ADC_SAR_SAR_DLY_INC;
 193:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* TPS_ADC_SAR_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 195:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     */
 199:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(TPS_ADC_SAR_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR5_REG |= TPS_ADC_SAR_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR5_REG &= (uint8)~TPS_ADC_SAR_SAR_SEL_CSEL_DFT_CHAR;
 203:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* TPS_ADC_SAR_HIGH_POWER_PULSE == 0u */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 5


 204:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 205:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR0_REG = (uint8)((uint8)TPS_ADC_SAR_DEFAULT_POWER << TPS_ADC_SAR_SAR_POWER_SH
 207:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if ((CY_PSOC5LP) || (TPS_ADC_SAR_DEFAULT_REFERENCE != TPS_ADC_SAR__EXT_REF))
 209:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         | TPS_ADC_SAR_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(TPS_ADC_SAR_DEFAULT_CONV_MODE != TPS_ADC_SAR__FREE_RUNNING)      /* If triggered mode */
 213:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         | TPS_ADC_SAR_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         | TPS_ADC_SAR_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* TPS_ADC_SAR_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 218:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_TR0_REG = TPS_ADC_SAR_SAR_CAP_TRIM_2;
 219:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 220:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CLK_REG |= TPS_ADC_SAR_SAR_MX_CLK_EN;
 222:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 223:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 225:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(TPS_ADC_SAR_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         CyIntClearPending(TPS_ADC_SAR_INTC_NUMBER);
 228:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif   /* End TPS_ADC_SAR_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 230:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 231:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 232:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 233:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 234:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_Stop
 236:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 238:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 239:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 241:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 242:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 243:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 244:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 245:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 246:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 247:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** void TPS_ADC_SAR_Stop(void)
 249:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 250:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 252:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 253:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR0_REG &= (uint8)~TPS_ADC_SAR_SAR_SOF_START_CONV;
 255:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_PWRMGR_SAR_REG &= (uint8)~TPS_ADC_SAR_ACT_PWR_SAR_EN;
 257:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~TPS_ADC_SAR_STBY_PWR_SAR_EN;
 259:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 260:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* This is only valid if there is an internal clock */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 6


 261:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(TPS_ADC_SAR_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_PWRMGR_CLK_REG &= (uint8)~TPS_ADC_SAR_ACT_PWR_CLK_EN;
 263:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_STBY_PWRMGR_CLK_REG &= (uint8)~TPS_ADC_SAR_STBY_PWR_CLK_EN;
 264:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* End TPS_ADC_SAR_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 266:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 267:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 268:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 269:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 270:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 271:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_SetPower
 273:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 275:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 276:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 279:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 280:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 286:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 287:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 288:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 289:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** void TPS_ADC_SAR_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 292:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 294:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     power &= TPS_ADC_SAR_SAR_API_POWER_MASK;
 296:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 297:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     tmpReg = TPS_ADC_SAR_SAR_CSR0_REG & (uint8)~TPS_ADC_SAR_SAR_POWER_MASK;
 299:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     tmpReg |= (uint8)(power << TPS_ADC_SAR_SAR_POWER_SHIFT);
 300:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR0_REG = tmpReg;
 301:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 302:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 303:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 304:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_SetResolution
 306:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 308:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 309:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 311:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 312:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  resolution:
 313:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 317:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 7


 318:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 319:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 320:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Side Effects:
 321:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  conversions with ADC_StartConvert().
 325:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 339:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** void TPS_ADC_SAR_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 342:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 344:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     switch (resolution)
 346:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 347:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         case (uint8)TPS_ADC_SAR__BITS_12:
 348:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             tmpReg = TPS_ADC_SAR_SAR_RESOLUTION_12BIT | TPS_ADC_SAR_SAR_SAMPLE_WIDTH;
 349:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             break;
 350:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         case (uint8)TPS_ADC_SAR__BITS_10:
 351:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             tmpReg = TPS_ADC_SAR_SAR_RESOLUTION_10BIT | TPS_ADC_SAR_SAR_SAMPLE_WIDTH;
 352:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             break;
 353:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         case (uint8)TPS_ADC_SAR__BITS_8:
 354:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             tmpReg = TPS_ADC_SAR_SAR_RESOLUTION_8BIT | TPS_ADC_SAR_SAR_SAMPLE_WIDTH;
 355:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             break;
 356:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         default:
 357:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             tmpReg = TPS_ADC_SAR_SAR_RESOLUTION_12BIT | TPS_ADC_SAR_SAR_SAMPLE_WIDTH;
 358:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             CYASSERT(0u != 0u);
 360:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             break;
 361:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 362:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR2_REG = tmpReg;
 363:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 364:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_CalcGain(resolution);
 366:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 367:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 368:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 369:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** #if(TPS_ADC_SAR_DEFAULT_CONV_MODE != TPS_ADC_SAR__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 371:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 372:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Function Name: TPS_ADC_SAR_StartConvert
 374:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 8


 375:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 376:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Summary:
 377:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  TPS_ADC_SAR_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 383:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  None.
 385:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 386:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Return:
 387:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  None.
 388:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 389:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Theory:
 390:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 395:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 400:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     void TPS_ADC_SAR_StartConvert(void)
 402:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 403:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #if(TPS_ADC_SAR_DEFAULT_CONV_MODE != TPS_ADC_SAR__FREE_RUNNING)  /* If software triggered m
 404:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             TPS_ADC_SAR_SAR_CSR0_REG &= (uint8)~TPS_ADC_SAR_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #endif /* End TPS_ADC_SAR_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 407:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR0_REG |= TPS_ADC_SAR_SAR_SOF_START_CONV;
 409:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 410:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 411:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 412:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Function Name: TPS_ADC_SAR_StopConvert
 414:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 416:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Summary:
 417:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 421:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  None.
 423:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 424:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Return:
 425:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  None.
 426:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 427:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Theory:
 428:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 430:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  In Software Trigger sample mode, this function sets a software version of the
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 9


 432:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *
 434:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     void TPS_ADC_SAR_StopConvert(void)
 436:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 437:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR0_REG &= (uint8)~TPS_ADC_SAR_SAR_SOF_START_CONV;
 439:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 440:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #if(TPS_ADC_SAR_DEFAULT_CONV_MODE != TPS_ADC_SAR__FREE_RUNNING)  /* If software triggered m
 441:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             TPS_ADC_SAR_SAR_CSR0_REG |= TPS_ADC_SAR_SAR_MX_SOF_UDB;    /* source: UDB */
 443:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         #endif /* End TPS_ADC_SAR_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 445:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 446:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 447:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** #endif /* End TPS_ADC_SAR_DEFAULT_CONV_MODE != TPS_ADC_SAR__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 449:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 450:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_IsEndConversion
 452:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 454:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 455:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  parameter.
 458:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 459:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 460:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *   TPS_ADC_SAR_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *   TPS_ADC_SAR_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 467:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 468:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 471:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 474:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** uint8 TPS_ADC_SAR_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 477:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 479:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     do
 480:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 481:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         status = TPS_ADC_SAR_SAR_CSR1_REG & TPS_ADC_SAR_SAR_EOF_1;
 482:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     } while ((status != TPS_ADC_SAR_SAR_EOF_1) && (retMode == TPS_ADC_SAR_WAIT_FOR_RESULT));
 483:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     if(status == TPS_ADC_SAR_SAR_EOF_1)
 485:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 486:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         CyDelayUs(1u);
 488:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 10


 489:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         CY_GET_REG8(TPS_ADC_SAR_SAR_CSR1_PTR);
 490:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 491:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 492:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     return(status);
 493:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 494:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 495:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 496:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_GetResult8
 498:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 500:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 501:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 506:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 507:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 508:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 509:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 510:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 512:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 516:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 519:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** int8 TPS_ADC_SAR_GetResult8( void )
 521:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 522:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     return( (int8)TPS_ADC_SAR_SAR_WRK0_REG - (int8)TPS_ADC_SAR_shift);
 523:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 524:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 525:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 526:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_GetResult16
 528:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 530:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 531:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 536:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 537:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 538:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 539:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 540:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 542:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 11


 546:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 549:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** int16 TPS_ADC_SAR_GetResult16( void )
 551:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 552:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 554:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     res = CY_GET_REG16(TPS_ADC_SAR_SAR_WRK_PTR);
 555:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 556:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     return( (int16)res - TPS_ADC_SAR_shift );
 557:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 558:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 559:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 560:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_SetOffset
 562:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 564:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 565:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Sets the ADC offset, which is used by TPS_ADC_SAR_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_CountsTo_mVolts(), and TPS_ADC_SAR_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  conversion.
 569:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 570:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 571:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 574:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 575:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 576:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 577:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  The TPS_ADC_SAR_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Affects the TPS_ADC_SAR_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_CountsTo_mVolts, TPS_ADC_SAR_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 584:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** void TPS_ADC_SAR_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 587:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_offset = offset;
 588:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 589:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 590:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 591:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_CalcGain
 593:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 595:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 596:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 598:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 599:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 601:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 602:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 12


 603:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 604:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 610:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** static void TPS_ADC_SAR_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
  26              		.loc 1 612 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 613:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if(!((TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****          (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDDA) || \
 616:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****          (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* End TPS_ADC_SAR_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 620:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     switch (resolution)
  35              		.loc 1 620 0
  36 0002 0A28     		cmp	r0, #10
  37 0004 0FD0     		beq	.L7
  38 0006 0C28     		cmp	r0, #12
  39 0008 02D0     		beq	.L4
  40 000a 0828     		cmp	r0, #8
  41 000c 06D1     		bne	.L8
  42 000e 02E0     		b	.L5
  43              	.L4:
 621:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 622:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         case (uint8)TPS_ADC_SAR__BITS_12:
 623:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             counts = (int32)TPS_ADC_SAR_SAR_WRK_MAX_12BIT;
  44              		.loc 1 623 0
  45 0010 4FF48053 		mov	r3, #4096
  46 0014 09E0     		b	.L3
  47              	.L5:
  48              	.LVL1:
 624:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             #if(!((TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                  (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                  (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                 diff_zero = TPS_ADC_SAR_SAR_DIFF_SHIFT;
 628:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             #endif /* End TPS_ADC_SAR_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             break;
 630:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         case (uint8)TPS_ADC_SAR__BITS_10:
 631:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             counts = (int32)TPS_ADC_SAR_SAR_WRK_MAX_10BIT;
 632:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             #if(!((TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                  (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDDA) || \
 634:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                  (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                 diff_zero = TPS_ADC_SAR_SAR_DIFF_SHIFT >> 2u;
 636:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             #endif /* End TPS_ADC_SAR_DEFAULT_RANGE */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 13


 637:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             break;
 638:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         case (uint8)TPS_ADC_SAR__BITS_8:
 639:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             counts = (int32)TPS_ADC_SAR_SAR_WRK_MAX_8BIT;
  49              		.loc 1 639 0
  50 0016 4FF48073 		mov	r3, #256
 640:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             #if(!((TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                  (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDDA) || \
 642:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                  (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                 diff_zero = TPS_ADC_SAR_SAR_DIFF_SHIFT >> 4u;
 644:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             #endif /* End TPS_ADC_SAR_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             break;
  51              		.loc 1 645 0
  52 001a 06E0     		b	.L3
  53              	.LVL2:
  54              	.L8:
 646:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             counts = 0;
 648:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             #if(!((TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                  (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                  (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                 diff_zero = 0u;
 652:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             #endif /* End TPS_ADC_SAR_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             CYASSERT(0u != 0u);
  55              		.loc 1 653 0
  56 001c 0020     		movs	r0, #0
  57              	.LVL3:
  58 001e FFF7FEFF 		bl	CyHalt
  59              	.LVL4:
 647:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             counts = 0;
  60              		.loc 1 647 0
  61 0022 0023     		movs	r3, #0
  62 0024 01E0     		b	.L3
  63              	.LVL5:
  64              	.L7:
 631:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             counts = (int32)TPS_ADC_SAR_SAR_WRK_MAX_10BIT;
  65              		.loc 1 631 0
  66 0026 4FF48063 		mov	r3, #1024
  67              	.LVL6:
  68              	.L3:
 654:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             break;
 655:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 656:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_countsPerVolt = 0; /* Clear obsolete variable */
  69              		.loc 1 656 0
  70 002a 0021     		movs	r1, #0
  71 002c 084A     		ldr	r2, .L9
  72 002e 1180     		strh	r1, [r2]	@ movhi
 657:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_countsPer10Volt = (((counts * TPS_ADC_SAR_10MV_COUNTS) +
  73              		.loc 1 658 0
  74 0030 42F21072 		movw	r2, #10000
  75 0034 02FB03F3 		mul	r3, r2, r3
  76              	.LVL7:
 659:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                         TPS_ADC_SAR_DEFAULT_REF_VOLTAGE_MV) / (TPS_ADC_SAR_DEFAULT_REF_VOLTAGE_MV *
  77              		.loc 1 659 0
  78 0038 13F58063 		adds	r3, r3, #1024
  79 003c 01D5     		bpl	.L6
  80 003e 03F2FF73 		addw	r3, r3, #2047
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 14


  81              	.L6:
  82 0042 DB12     		asrs	r3, r3, #11
 658:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_countsPer10Volt = (((counts * TPS_ADC_SAR_10MV_COUNTS) +
  83              		.loc 1 658 0
  84 0044 034A     		ldr	r2, .L9+4
  85 0046 1360     		str	r3, [r2]
 660:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 661:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #if( (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****          (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****          (TPS_ADC_SAR_DEFAULT_RANGE == TPS_ADC_SAR__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_shift = 0;
  86              		.loc 1 664 0
  87 0048 0022     		movs	r2, #0
  88 004a 034B     		ldr	r3, .L9+8
  89 004c 1A80     		strh	r2, [r3]	@ movhi
  90 004e 08BD     		pop	{r3, pc}
  91              	.L10:
  92              		.align	2
  93              	.L9:
  94 0050 00000000 		.word	TPS_ADC_SAR_countsPerVolt
  95 0054 00000000 		.word	TPS_ADC_SAR_countsPer10Volt
  96 0058 00000000 		.word	TPS_ADC_SAR_shift
  97              		.cfi_endproc
  98              	.LFE12:
  99              		.size	TPS_ADC_SAR_CalcGain, .-TPS_ADC_SAR_CalcGain
 100              		.section	.text.TPS_ADC_SAR_Enable,"ax",%progbits
 101              		.align	2
 102              		.global	TPS_ADC_SAR_Enable
 103              		.thumb
 104              		.thumb_func
 105              		.type	TPS_ADC_SAR_Enable, %function
 106              	TPS_ADC_SAR_Enable:
 107              	.LFB2:
 144:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 108              		.loc 1 144 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 10B5     		push	{r4, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 147:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 116              		.loc 1 147 0
 117 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 118              	.LVL8:
 119 0006 0446     		mov	r4, r0
 120              	.LVL9:
 150:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_PWRMGR_SAR_REG |= TPS_ADC_SAR_ACT_PWR_SAR_EN;
 121              		.loc 1 150 0
 122 0008 194B     		ldr	r3, .L12
 123 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 124 000c 42F00202 		orr	r2, r2, #2
 125 0010 1A70     		strb	r2, [r3]
 153:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_STBY_PWRMGR_SAR_REG |= TPS_ADC_SAR_STBY_PWR_SAR_EN;
 126              		.loc 1 153 0
 127 0012 1033     		adds	r3, r3, #16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 15


 128 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 129 0016 42F00202 		orr	r2, r2, #2
 130 001a 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     tmpReg = TPS_ADC_SAR_SAR_CSR3_REG;
 131              		.loc 1 162 0
 132 001c 03F5AA53 		add	r3, r3, #5440
 133 0020 1033     		adds	r3, r3, #16
 134 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 135              	.LVL10:
 169:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         tmpReg |= TPS_ADC_SAR_SAR_EN_BUF_VREF_EN;
 136              		.loc 1 169 0
 137 0024 42F00302 		orr	r2, r2, #3
 138              	.LVL11:
 171:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR3_REG = tmpReg;
 139              		.loc 1 171 0
 140 0028 1A70     		strb	r2, [r3]
 182:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             TPS_ADC_SAR_SAR_CSR6_REG = TPS_ADC_SAR_INT_VREF;            /* S3 + S4 */
 141              		.loc 1 182 0
 142 002a 1822     		movs	r2, #24
 143              	.LVL12:
 144 002c 0333     		adds	r3, r3, #3
 145 002e 1A70     		strb	r2, [r3]
 192:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR5_REG |= TPS_ADC_SAR_SAR_DLY_INC;
 146              		.loc 1 192 0
 147 0030 013B     		subs	r3, r3, #1
 148 0032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 149 0034 42F04002 		orr	r2, r2, #64
 150 0038 1A70     		strb	r2, [r3]
 202:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR5_REG &= (uint8)~TPS_ADC_SAR_SAR_SEL_CSEL_DFT_CHAR;
 151              		.loc 1 202 0
 152 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 153 003c 02F0FC02 		and	r2, r2, #252
 154 0040 1A70     		strb	r2, [r3]
 206:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR0_REG = (uint8)((uint8)TPS_ADC_SAR_DEFAULT_POWER << TPS_ADC_SAR_SAR_POWER_SH
 155              		.loc 1 206 0
 156 0042 C822     		movs	r2, #200
 157 0044 053B     		subs	r3, r3, #5
 158 0046 1A70     		strb	r2, [r3]
 218:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_TR0_REG = TPS_ADC_SAR_SAR_CAP_TRIM_2;
 159              		.loc 1 218 0
 160 0048 0222     		movs	r2, #2
 161 004a A3F59753 		sub	r3, r3, #4832
 162 004e 123B     		subs	r3, r3, #18
 163 0050 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CLK_REG |= TPS_ADC_SAR_SAR_MX_CLK_EN;
 164              		.loc 1 221 0
 165 0052 03F5A853 		add	r3, r3, #5376
 166 0056 1933     		adds	r3, r3, #25
 167 0058 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 168 005a 42F00802 		orr	r2, r2, #8
 169 005e 1A70     		strb	r2, [r3]
 223:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 170              		.loc 1 223 0
 171 0060 0A20     		movs	r0, #10
 172              	.LVL13:
 173 0062 FFF7FEFF 		bl	CyDelayUs
 174              	.LVL14:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 16


 230:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 175              		.loc 1 230 0
 176 0066 2046     		mov	r0, r4
 177 0068 FFF7FEFF 		bl	CyExitCriticalSection
 178              	.LVL15:
 179 006c 10BD     		pop	{r4, pc}
 180              	.LVL16:
 181              	.L13:
 182 006e 00BF     		.align	2
 183              	.L12:
 184 0070 AB430040 		.word	1073759147
 185              		.cfi_endproc
 186              	.LFE2:
 187              		.size	TPS_ADC_SAR_Enable, .-TPS_ADC_SAR_Enable
 188              		.section	.text.TPS_ADC_SAR_Stop,"ax",%progbits
 189              		.align	2
 190              		.global	TPS_ADC_SAR_Stop
 191              		.thumb
 192              		.thumb_func
 193              		.type	TPS_ADC_SAR_Stop, %function
 194              	TPS_ADC_SAR_Stop:
 195              	.LFB3:
 249:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 196              		.loc 1 249 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200 0000 08B5     		push	{r3, lr}
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
 251:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 204              		.loc 1 251 0
 205 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 206              	.LVL17:
 254:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR0_REG &= (uint8)~TPS_ADC_SAR_SAR_SOF_START_CONV;
 207              		.loc 1 254 0
 208 0006 0A4B     		ldr	r3, .L15
 209 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 210 000a 02F0FE02 		and	r2, r2, #254
 211 000e 1A70     		strb	r2, [r3]
 256:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_PWRMGR_SAR_REG &= (uint8)~TPS_ADC_SAR_ACT_PWR_SAR_EN;
 212              		.loc 1 256 0
 213 0010 A3F5AA53 		sub	r3, r3, #5440
 214 0014 1D3B     		subs	r3, r3, #29
 215 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 216 0018 02F0FD02 		and	r2, r2, #253
 217 001c 1A70     		strb	r2, [r3]
 258:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~TPS_ADC_SAR_STBY_PWR_SAR_EN;
 218              		.loc 1 258 0
 219 001e 1033     		adds	r3, r3, #16
 220 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 221 0022 02F0FD02 		and	r2, r2, #253
 222 0026 1A70     		strb	r2, [r3]
 266:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 223              		.loc 1 266 0
 224 0028 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 17


 225              	.LVL18:
 226 002c 08BD     		pop	{r3, pc}
 227              	.L16:
 228 002e 00BF     		.align	2
 229              	.L15:
 230 0030 08590040 		.word	1073764616
 231              		.cfi_endproc
 232              	.LFE3:
 233              		.size	TPS_ADC_SAR_Stop, .-TPS_ADC_SAR_Stop
 234              		.section	.text.TPS_ADC_SAR_SetPower,"ax",%progbits
 235              		.align	2
 236              		.global	TPS_ADC_SAR_SetPower
 237              		.thumb
 238              		.thumb_func
 239              		.type	TPS_ADC_SAR_SetPower, %function
 240              	TPS_ADC_SAR_SetPower:
 241              	.LFB4:
 291:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 242              		.loc 1 291 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247              	.LVL19:
 295:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     power &= TPS_ADC_SAR_SAR_API_POWER_MASK;
 248              		.loc 1 295 0
 249 0000 00F00300 		and	r0, r0, #3
 250              	.LVL20:
 298:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     tmpReg = TPS_ADC_SAR_SAR_CSR0_REG & (uint8)~TPS_ADC_SAR_SAR_POWER_MASK;
 251              		.loc 1 298 0
 252 0004 034B     		ldr	r3, .L18
 253 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 254 0008 02F03F02 		and	r2, r2, #63
 255              	.LVL21:
 299:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     tmpReg |= (uint8)(power << TPS_ADC_SAR_SAR_POWER_SHIFT);
 256              		.loc 1 299 0
 257 000c 42EA8010 		orr	r0, r2, r0, lsl #6
 258              	.LVL22:
 300:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR0_REG = tmpReg;
 259              		.loc 1 300 0
 260 0010 1870     		strb	r0, [r3]
 261 0012 7047     		bx	lr
 262              	.L19:
 263              		.align	2
 264              	.L18:
 265 0014 08590040 		.word	1073764616
 266              		.cfi_endproc
 267              	.LFE4:
 268              		.size	TPS_ADC_SAR_SetPower, .-TPS_ADC_SAR_SetPower
 269              		.section	.text.TPS_ADC_SAR_SetResolution,"ax",%progbits
 270              		.align	2
 271              		.global	TPS_ADC_SAR_SetResolution
 272              		.thumb
 273              		.thumb_func
 274              		.type	TPS_ADC_SAR_SetResolution, %function
 275              	TPS_ADC_SAR_SetResolution:
 276              	.LFB5:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 18


 341:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 277              		.loc 1 341 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              	.LVL23:
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 286 0002 0446     		mov	r4, r0
 345:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     switch (resolution)
 287              		.loc 1 345 0
 288 0004 0A28     		cmp	r0, #10
 289 0006 0DD0     		beq	.L25
 290 0008 0C28     		cmp	r0, #12
 291 000a 02D0     		beq	.L23
 292 000c 0828     		cmp	r0, #8
 293 000e 04D1     		bne	.L26
 294 0010 01E0     		b	.L24
 295              	.L23:
 348:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             tmpReg = TPS_ADC_SAR_SAR_RESOLUTION_12BIT | TPS_ADC_SAR_SAR_SAMPLE_WIDTH;
 296              		.loc 1 348 0
 297 0012 C222     		movs	r2, #194
 298 0014 07E0     		b	.L22
 299              	.L24:
 300              	.LVL24:
 354:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             tmpReg = TPS_ADC_SAR_SAR_RESOLUTION_8BIT | TPS_ADC_SAR_SAR_SAMPLE_WIDTH;
 301              		.loc 1 354 0
 302 0016 4222     		movs	r2, #66
 355:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             break;
 303              		.loc 1 355 0
 304 0018 05E0     		b	.L22
 305              	.LVL25:
 306              	.L26:
 359:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             CYASSERT(0u != 0u);
 307              		.loc 1 359 0
 308 001a 0020     		movs	r0, #0
 309              	.LVL26:
 310 001c FFF7FEFF 		bl	CyHalt
 311              	.LVL27:
 357:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             tmpReg = TPS_ADC_SAR_SAR_RESOLUTION_12BIT | TPS_ADC_SAR_SAR_SAMPLE_WIDTH;
 312              		.loc 1 357 0
 313 0020 C222     		movs	r2, #194
 314 0022 00E0     		b	.L22
 315              	.LVL28:
 316              	.L25:
 351:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****             tmpReg = TPS_ADC_SAR_SAR_RESOLUTION_10BIT | TPS_ADC_SAR_SAR_SAMPLE_WIDTH;
 317              		.loc 1 351 0
 318 0024 8222     		movs	r2, #130
 319              	.LVL29:
 320              	.L22:
 362:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR2_REG = tmpReg;
 321              		.loc 1 362 0
 322 0026 034B     		ldr	r3, .L27
 323 0028 1A70     		strb	r2, [r3]
 365:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_CalcGain(resolution);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 19


 324              		.loc 1 365 0
 325 002a 2046     		mov	r0, r4
 326 002c FFF7FEFF 		bl	TPS_ADC_SAR_CalcGain
 327              	.LVL30:
 328 0030 10BD     		pop	{r4, pc}
 329              	.L28:
 330 0032 00BF     		.align	2
 331              	.L27:
 332 0034 0A590040 		.word	1073764618
 333              		.cfi_endproc
 334              	.LFE5:
 335              		.size	TPS_ADC_SAR_SetResolution, .-TPS_ADC_SAR_SetResolution
 336              		.section	.text.TPS_ADC_SAR_Init,"ax",%progbits
 337              		.align	2
 338              		.global	TPS_ADC_SAR_Init
 339              		.thumb
 340              		.thumb_func
 341              		.type	TPS_ADC_SAR_Init, %function
 342              	TPS_ADC_SAR_Init:
 343              	.LFB1:
 107:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 344              		.loc 1 107 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 08B5     		push	{r3, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 121:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SAR_CSR1_REG |= TPS_ADC_SAR_SAR_IRQ_MASK_EN | TPS_ADC_SAR_SAR_IRQ_MODE_EDGE;
 352              		.loc 1 121 0
 353 0002 064B     		ldr	r3, .L30
 354 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 355 0006 42F00602 		orr	r2, r2, #6
 356 000a 1A70     		strb	r2, [r3]
 124:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_SetResolution(TPS_ADC_SAR_DEFAULT_RESOLUTION);
 357              		.loc 1 124 0
 358 000c 0C20     		movs	r0, #12
 359 000e FFF7FEFF 		bl	TPS_ADC_SAR_SetResolution
 360              	.LVL31:
 125:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_offset = 0;
 361              		.loc 1 125 0
 362 0012 0022     		movs	r2, #0
 363 0014 024B     		ldr	r3, .L30+4
 364 0016 1A80     		strh	r2, [r3]	@ movhi
 365 0018 08BD     		pop	{r3, pc}
 366              	.L31:
 367 001a 00BF     		.align	2
 368              	.L30:
 369 001c 09590040 		.word	1073764617
 370 0020 00000000 		.word	TPS_ADC_SAR_offset
 371              		.cfi_endproc
 372              	.LFE1:
 373              		.size	TPS_ADC_SAR_Init, .-TPS_ADC_SAR_Init
 374              		.section	.text.TPS_ADC_SAR_Start,"ax",%progbits
 375              		.align	2
 376              		.global	TPS_ADC_SAR_Start
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 20


 377              		.thumb
 378              		.thumb_func
 379              		.type	TPS_ADC_SAR_Start, %function
 380              	TPS_ADC_SAR_Start:
 381              	.LFB0:
  75:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 382              		.loc 1 75 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386 0000 08B5     		push	{r3, lr}
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 3, -8
 389              		.cfi_offset 14, -4
  78:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     if(TPS_ADC_SAR_initVar == 0u)
 390              		.loc 1 78 0
 391 0002 054B     		ldr	r3, .L34
 392 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 393 0006 23B9     		cbnz	r3, .L33
  80:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_Init();
 394              		.loc 1 80 0
 395 0008 FFF7FEFF 		bl	TPS_ADC_SAR_Init
 396              	.LVL32:
  81:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_initVar = 1u;
 397              		.loc 1 81 0
 398 000c 0122     		movs	r2, #1
 399 000e 024B     		ldr	r3, .L34
 400 0010 1A70     		strb	r2, [r3]
 401              	.L33:
  83:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_Enable();
 402              		.loc 1 83 0
 403 0012 FFF7FEFF 		bl	TPS_ADC_SAR_Enable
 404              	.LVL33:
 405 0016 08BD     		pop	{r3, pc}
 406              	.L35:
 407              		.align	2
 408              	.L34:
 409 0018 00000000 		.word	.LANCHOR0
 410              		.cfi_endproc
 411              	.LFE0:
 412              		.size	TPS_ADC_SAR_Start, .-TPS_ADC_SAR_Start
 413              		.section	.text.TPS_ADC_SAR_StartConvert,"ax",%progbits
 414              		.align	2
 415              		.global	TPS_ADC_SAR_StartConvert
 416              		.thumb
 417              		.thumb_func
 418              		.type	TPS_ADC_SAR_StartConvert, %function
 419              	TPS_ADC_SAR_StartConvert:
 420              	.LFB6:
 402:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 421              		.loc 1 402 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 408:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR0_REG |= TPS_ADC_SAR_SAR_SOF_START_CONV;
 426              		.loc 1 408 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 21


 427 0000 024B     		ldr	r3, .L37
 428 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 429 0004 42F00102 		orr	r2, r2, #1
 430 0008 1A70     		strb	r2, [r3]
 431 000a 7047     		bx	lr
 432              	.L38:
 433              		.align	2
 434              	.L37:
 435 000c 08590040 		.word	1073764616
 436              		.cfi_endproc
 437              	.LFE6:
 438              		.size	TPS_ADC_SAR_StartConvert, .-TPS_ADC_SAR_StartConvert
 439              		.section	.text.TPS_ADC_SAR_StopConvert,"ax",%progbits
 440              		.align	2
 441              		.global	TPS_ADC_SAR_StopConvert
 442              		.thumb
 443              		.thumb_func
 444              		.type	TPS_ADC_SAR_StopConvert, %function
 445              	TPS_ADC_SAR_StopConvert:
 446              	.LFB7:
 436:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 447              		.loc 1 436 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 438:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_SAR_CSR0_REG &= (uint8)~TPS_ADC_SAR_SAR_SOF_START_CONV;
 452              		.loc 1 438 0
 453 0000 024B     		ldr	r3, .L40
 454 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 455 0004 02F0FE02 		and	r2, r2, #254
 456 0008 1A70     		strb	r2, [r3]
 457 000a 7047     		bx	lr
 458              	.L41:
 459              		.align	2
 460              	.L40:
 461 000c 08590040 		.word	1073764616
 462              		.cfi_endproc
 463              	.LFE7:
 464              		.size	TPS_ADC_SAR_StopConvert, .-TPS_ADC_SAR_StopConvert
 465              		.section	.text.TPS_ADC_SAR_IsEndConversion,"ax",%progbits
 466              		.align	2
 467              		.global	TPS_ADC_SAR_IsEndConversion
 468              		.thumb
 469              		.thumb_func
 470              		.type	TPS_ADC_SAR_IsEndConversion, %function
 471              	TPS_ADC_SAR_IsEndConversion:
 472              	.LFB8:
 476:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 473              		.loc 1 476 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              	.LVL34:
 478 0000 10B5     		push	{r4, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 4, -8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 22


 481              		.cfi_offset 14, -4
 481:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         status = TPS_ADC_SAR_SAR_CSR1_REG & TPS_ADC_SAR_SAR_EOF_1;
 482              		.loc 1 481 0
 483 0002 074A     		ldr	r2, .L47
 484              	.L44:
 481:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         status = TPS_ADC_SAR_SAR_CSR1_REG & TPS_ADC_SAR_SAR_EOF_1;
 485              		.loc 1 481 0 is_stmt 0 discriminator 1
 486 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 487              	.LVL35:
 482:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     } while ((status != TPS_ADC_SAR_SAR_EOF_1) && (retMode == TPS_ADC_SAR_WAIT_FOR_RESULT));
 488              		.loc 1 482 0 is_stmt 1 discriminator 1
 489 0006 13F00104 		ands	r4, r3, #1
 490 000a 01D1     		bne	.L43
 491 000c 0028     		cmp	r0, #0
 492 000e F9D0     		beq	.L44
 493              	.L43:
 484:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     if(status == TPS_ADC_SAR_SAR_EOF_1)
 494              		.loc 1 484 0
 495 0010 24B1     		cbz	r4, .L45
 487:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         CyDelayUs(1u);
 496              		.loc 1 487 0
 497 0012 0120     		movs	r0, #1
 498              	.LVL36:
 499 0014 FFF7FEFF 		bl	CyDelayUs
 500              	.LVL37:
 489:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         CY_GET_REG8(TPS_ADC_SAR_SAR_CSR1_PTR);
 501              		.loc 1 489 0
 502 0018 014B     		ldr	r3, .L47
 503 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 504              	.L45:
 493:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 505              		.loc 1 493 0
 506 001c 2046     		mov	r0, r4
 507 001e 10BD     		pop	{r4, pc}
 508              	.L48:
 509              		.align	2
 510              	.L47:
 511 0020 09590040 		.word	1073764617
 512              		.cfi_endproc
 513              	.LFE8:
 514              		.size	TPS_ADC_SAR_IsEndConversion, .-TPS_ADC_SAR_IsEndConversion
 515              		.section	.text.TPS_ADC_SAR_GetResult8,"ax",%progbits
 516              		.align	2
 517              		.global	TPS_ADC_SAR_GetResult8
 518              		.thumb
 519              		.thumb_func
 520              		.type	TPS_ADC_SAR_GetResult8, %function
 521              	TPS_ADC_SAR_GetResult8:
 522              	.LFB9:
 521:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 523              		.loc 1 521 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 522:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     return( (int8)TPS_ADC_SAR_SAR_WRK0_REG - (int8)TPS_ADC_SAR_shift);
 528              		.loc 1 522 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 23


 529 0000 034B     		ldr	r3, .L50
 530 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 531 0004 034B     		ldr	r3, .L50+4
 532 0006 1B88     		ldrh	r3, [r3]
 533 0008 C01A     		subs	r0, r0, r3
 523:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 534              		.loc 1 523 0
 535 000a 40B2     		sxtb	r0, r0
 536 000c 7047     		bx	lr
 537              	.L51:
 538 000e 00BF     		.align	2
 539              	.L50:
 540 0010 A25B0040 		.word	1073765282
 541 0014 00000000 		.word	TPS_ADC_SAR_shift
 542              		.cfi_endproc
 543              	.LFE9:
 544              		.size	TPS_ADC_SAR_GetResult8, .-TPS_ADC_SAR_GetResult8
 545              		.section	.text.TPS_ADC_SAR_GetResult16,"ax",%progbits
 546              		.align	2
 547              		.global	TPS_ADC_SAR_GetResult16
 548              		.thumb
 549              		.thumb_func
 550              		.type	TPS_ADC_SAR_GetResult16, %function
 551              	TPS_ADC_SAR_GetResult16:
 552              	.LFB10:
 551:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 553              		.loc 1 551 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 554:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     res = CY_GET_REG16(TPS_ADC_SAR_SAR_WRK_PTR);
 558              		.loc 1 554 0
 559 0000 034B     		ldr	r3, .L53
 560 0002 1888     		ldrh	r0, [r3]
 561              	.LVL38:
 556:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     return( (int16)res - TPS_ADC_SAR_shift );
 562              		.loc 1 556 0
 563 0004 034B     		ldr	r3, .L53+4
 564 0006 1B88     		ldrh	r3, [r3]
 565 0008 C01A     		subs	r0, r0, r3
 566              	.LVL39:
 557:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 567              		.loc 1 557 0
 568 000a 00B2     		sxth	r0, r0
 569 000c 7047     		bx	lr
 570              	.L54:
 571 000e 00BF     		.align	2
 572              	.L53:
 573 0010 A25B0040 		.word	1073765282
 574 0014 00000000 		.word	TPS_ADC_SAR_shift
 575              		.cfi_endproc
 576              	.LFE10:
 577              		.size	TPS_ADC_SAR_GetResult16, .-TPS_ADC_SAR_GetResult16
 578              		.section	.text.TPS_ADC_SAR_SetOffset,"ax",%progbits
 579              		.align	2
 580              		.global	TPS_ADC_SAR_SetOffset
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 24


 581              		.thumb
 582              		.thumb_func
 583              		.type	TPS_ADC_SAR_SetOffset, %function
 584              	TPS_ADC_SAR_SetOffset:
 585              	.LFB11:
 586:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 586              		.loc 1 586 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591              	.LVL40:
 587:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_offset = offset;
 592              		.loc 1 587 0
 593 0000 014B     		ldr	r3, .L56
 594 0002 1880     		strh	r0, [r3]	@ movhi
 595 0004 7047     		bx	lr
 596              	.L57:
 597 0006 00BF     		.align	2
 598              	.L56:
 599 0008 00000000 		.word	TPS_ADC_SAR_offset
 600              		.cfi_endproc
 601              	.LFE11:
 602              		.size	TPS_ADC_SAR_SetOffset, .-TPS_ADC_SAR_SetOffset
 603              		.section	.text.TPS_ADC_SAR_SetGain,"ax",%progbits
 604              		.align	2
 605              		.global	TPS_ADC_SAR_SetGain
 606              		.thumb
 607              		.thumb_func
 608              		.type	TPS_ADC_SAR_SetGain, %function
 609              	TPS_ADC_SAR_SetGain:
 610              	.LFB13:
 665:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #else
 666:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         TPS_ADC_SAR_shift = diff_zero;
 667:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     #endif /* End TPS_ADC_SAR_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 669:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 670:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 671:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_SetGain
 673:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 675:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 676:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 681:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 682:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 684:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 685:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 686:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 687:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global Variables:
 688:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_countsPer10Volt variable modified. This variable is used
 689:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  for gain calibration purpose.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 25


 690:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 691:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** void TPS_ADC_SAR_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 611              		.loc 1 693 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL41:
 694:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_countsPer10Volt = (int32)adcGain * 10;
 617              		.loc 1 694 0
 618 0000 00EB8000 		add	r0, r0, r0, lsl #2
 619              	.LVL42:
 620 0004 4000     		lsls	r0, r0, #1
 621 0006 014B     		ldr	r3, .L59
 622 0008 1860     		str	r0, [r3]
 623 000a 7047     		bx	lr
 624              	.L60:
 625              		.align	2
 626              	.L59:
 627 000c 00000000 		.word	TPS_ADC_SAR_countsPer10Volt
 628              		.cfi_endproc
 629              	.LFE13:
 630              		.size	TPS_ADC_SAR_SetGain, .-TPS_ADC_SAR_SetGain
 631              		.section	.text.TPS_ADC_SAR_SetScaledGain,"ax",%progbits
 632              		.align	2
 633              		.global	TPS_ADC_SAR_SetScaledGain
 634              		.thumb
 635              		.thumb_func
 636              		.type	TPS_ADC_SAR_SetScaledGain, %function
 637              	TPS_ADC_SAR_SetScaledGain:
 638              	.LFB14:
 695:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 696:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 697:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 698:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_SetScaledGain
 700:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 702:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 703:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 708:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 709:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  int32 adcGain  counts per 10 volt
 710:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 711:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 712:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  None.
 713:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 714:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global Variables:
 715:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  for gain calibration purpose.
 717:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 718:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 26


 719:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** void TPS_ADC_SAR_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 639              		.loc 1 720 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 644              	.LVL43:
 721:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     TPS_ADC_SAR_countsPer10Volt = adcGain;
 645              		.loc 1 721 0
 646 0000 014B     		ldr	r3, .L62
 647 0002 1860     		str	r0, [r3]
 648 0004 7047     		bx	lr
 649              	.L63:
 650 0006 00BF     		.align	2
 651              	.L62:
 652 0008 00000000 		.word	TPS_ADC_SAR_countsPer10Volt
 653              		.cfi_endproc
 654              	.LFE14:
 655              		.size	TPS_ADC_SAR_SetScaledGain, .-TPS_ADC_SAR_SetScaledGain
 656              		.section	.text.TPS_ADC_SAR_CountsTo_mVolts,"ax",%progbits
 657              		.align	2
 658              		.global	TPS_ADC_SAR_CountsTo_mVolts
 659              		.thumb
 660              		.thumb_func
 661              		.type	TPS_ADC_SAR_CountsTo_mVolts, %function
 662              	TPS_ADC_SAR_CountsTo_mVolts:
 663              	.LFB15:
 722:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 723:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 724:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 725:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 729:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 730:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 732:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 733:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 735:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 736:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 738:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_offset variable used.
 740:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 742:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** int16 TPS_ADC_SAR_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 664              		.loc 1 744 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669              	.LVL44:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 27


 745:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 748:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     if(TPS_ADC_SAR_countsPerVolt != 0)
 670              		.loc 1 748 0
 671 0000 114B     		ldr	r3, .L69
 672 0002 1B88     		ldrh	r3, [r3]
 673 0004 9BB2     		uxth	r3, r3
 674 0006 33B1     		cbz	r3, .L65
 749:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {   /* Support obsolete method */
 750:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         countsPer10Volt = (int32)TPS_ADC_SAR_countsPerVolt * 10;
 675              		.loc 1 750 0
 676 0008 0F4B     		ldr	r3, .L69
 677 000a 1B88     		ldrh	r3, [r3]
 678 000c 1BB2     		sxth	r3, r3
 679 000e 03EB8303 		add	r3, r3, r3, lsl #2
 680 0012 5B00     		lsls	r3, r3, #1
 681              	.LVL45:
 682 0014 01E0     		b	.L66
 683              	.LVL46:
 684              	.L65:
 751:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 752:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     else
 753:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 754:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         countsPer10Volt = TPS_ADC_SAR_countsPer10Volt;
 685              		.loc 1 754 0
 686 0016 0D4B     		ldr	r3, .L69+4
 687 0018 1B68     		ldr	r3, [r3]
 688              	.LVL47:
 689              	.L66:
 755:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 756:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 757:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     adcCounts -= TPS_ADC_SAR_offset;
 690              		.loc 1 758 0
 691 001a 0D4A     		ldr	r2, .L69+8
 692 001c 1288     		ldrh	r2, [r2]
 693 001e 801A     		subs	r0, r0, r2
 694              	.LVL48:
 695 0020 00B2     		sxth	r0, r0
 696              	.LVL49:
 759:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * TPS_ADC_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 697              		.loc 1 760 0
 698 0022 42F21071 		movw	r1, #10000
 699 0026 01FB00F1 		mul	r1, r1, r0
 761:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 700              		.loc 1 761 0
 701 002a 0028     		cmp	r0, #0
 702 002c 03DD     		ble	.L67
 703              		.loc 1 761 0 is_stmt 0 discriminator 1
 704 002e 03EBD372 		add	r2, r3, r3, lsr #31
 705 0032 5210     		asrs	r2, r2, #1
 706 0034 03E0     		b	.L68
 707              	.L67:
 708              		.loc 1 761 0 discriminator 2
 709 0036 03EBD372 		add	r2, r3, r3, lsr #31
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 28


 710 003a 5210     		asrs	r2, r2, #1
 711 003c 5242     		negs	r2, r2
 712              	.L68:
 760:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * TPS_ADC_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 713              		.loc 1 760 0 is_stmt 1
 714 003e 0A44     		add	r2, r2, r1
 715              		.loc 1 761 0
 716 0040 92FBF3F0 		sdiv	r0, r2, r3
 717              	.LVL50:
 762:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 763:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     return( mVolts );
 764:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 718              		.loc 1 764 0
 719 0044 00B2     		sxth	r0, r0
 720              	.LVL51:
 721 0046 7047     		bx	lr
 722              	.L70:
 723              		.align	2
 724              	.L69:
 725 0048 00000000 		.word	TPS_ADC_SAR_countsPerVolt
 726 004c 00000000 		.word	TPS_ADC_SAR_countsPer10Volt
 727 0050 00000000 		.word	TPS_ADC_SAR_offset
 728              		.cfi_endproc
 729              	.LFE15:
 730              		.size	TPS_ADC_SAR_CountsTo_mVolts, .-TPS_ADC_SAR_CountsTo_mVolts
 731              		.global	__aeabi_ldivmod
 732              		.section	.text.TPS_ADC_SAR_CountsTo_uVolts,"ax",%progbits
 733              		.align	2
 734              		.global	TPS_ADC_SAR_CountsTo_uVolts
 735              		.thumb
 736              		.thumb_func
 737              		.type	TPS_ADC_SAR_CountsTo_uVolts, %function
 738              	TPS_ADC_SAR_CountsTo_uVolts:
 739              	.LFB16:
 765:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 766:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 767:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 771:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 772:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 774:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 775:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 777:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 778:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 780:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_offset variable used.
 782:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 784:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** int32 TPS_ADC_SAR_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 740              		.loc 1 786 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 29


 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              	.LVL52:
 745 0000 38B5     		push	{r3, r4, r5, lr}
 746              		.cfi_def_cfa_offset 16
 747              		.cfi_offset 3, -16
 748              		.cfi_offset 4, -12
 749              		.cfi_offset 5, -8
 750              		.cfi_offset 14, -4
 787:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 788:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 791:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     if(TPS_ADC_SAR_countsPerVolt != 0)
 751              		.loc 1 791 0
 752 0002 0D4B     		ldr	r3, .L74
 753 0004 1B88     		ldrh	r3, [r3]
 754 0006 9BB2     		uxth	r3, r3
 755 0008 33B1     		cbz	r3, .L72
 792:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         countsPer10Volt = (int32)TPS_ADC_SAR_countsPerVolt * 10;
 756              		.loc 1 793 0
 757 000a 0B4B     		ldr	r3, .L74
 758 000c 1A88     		ldrh	r2, [r3]
 759 000e 12B2     		sxth	r2, r2
 760 0010 02EB8202 		add	r2, r2, r2, lsl #2
 761 0014 5200     		lsls	r2, r2, #1
 762              	.LVL53:
 763 0016 01E0     		b	.L73
 764              	.LVL54:
 765              	.L72:
 794:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 795:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     else
 796:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 797:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         countsPer10Volt = TPS_ADC_SAR_countsPer10Volt;
 766              		.loc 1 797 0
 767 0018 084B     		ldr	r3, .L74+4
 768 001a 1A68     		ldr	r2, [r3]
 769              	.LVL55:
 770              	.L73:
 798:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 799:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 800:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     adcCounts -= TPS_ADC_SAR_offset;
 771              		.loc 1 801 0
 772 001c 084B     		ldr	r3, .L74+8
 773 001e 1B88     		ldrh	r3, [r3]
 774              	.LVL56:
 802:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     */
 805:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     uVolts = (( (int64)adcCounts * TPS_ADC_SAR_10UV_COUNTS ) / countsPer10Volt);
 775              		.loc 1 805 0
 776 0020 C41A     		subs	r4, r0, r3
 777 0022 24B2     		sxth	r4, r4
 778 0024 E517     		asrs	r5, r4, #31
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 30


 779 0026 074B     		ldr	r3, .L74+12
 780              	.LVL57:
 781 0028 A4FB0301 		umull	r0, r1, r4, r3
 782 002c 03FB0511 		mla	r1, r3, r5, r1
 783 0030 D317     		asrs	r3, r2, #31
 784 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 785              	.LVL58:
 806:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 807:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     return( uVolts );
 808:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 786              		.loc 1 808 0
 787 0036 38BD     		pop	{r3, r4, r5, pc}
 788              	.L75:
 789              		.align	2
 790              	.L74:
 791 0038 00000000 		.word	TPS_ADC_SAR_countsPerVolt
 792 003c 00000000 		.word	TPS_ADC_SAR_countsPer10Volt
 793 0040 00000000 		.word	TPS_ADC_SAR_offset
 794 0044 80969800 		.word	10000000
 795              		.cfi_endproc
 796              	.LFE16:
 797              		.size	TPS_ADC_SAR_CountsTo_uVolts, .-TPS_ADC_SAR_CountsTo_uVolts
 798              		.global	__aeabi_i2f
 799              		.global	__aeabi_fmul
 800              		.global	__aeabi_fdiv
 801              		.section	.text.TPS_ADC_SAR_CountsTo_Volts,"ax",%progbits
 802              		.align	2
 803              		.global	TPS_ADC_SAR_CountsTo_Volts
 804              		.thumb
 805              		.thumb_func
 806              		.type	TPS_ADC_SAR_CountsTo_Volts, %function
 807              	TPS_ADC_SAR_CountsTo_Volts:
 808              	.LFB17:
 809:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 810:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 811:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Function Name: TPS_ADC_SAR_CountsTo_Volts
 813:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 815:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Summary:
 816:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 818:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Parameters:
 819:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 821:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Return:
 822:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 824:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_offset variable used.
 826:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *  TPS_ADC_SAR_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *
 828:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** float32 TPS_ADC_SAR_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** {
 809              		.loc 1 830 0
 810              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 31


 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              	.LVL59:
 814 0000 38B5     		push	{r3, r4, r5, lr}
 815              		.cfi_def_cfa_offset 16
 816              		.cfi_offset 3, -16
 817              		.cfi_offset 4, -12
 818              		.cfi_offset 5, -8
 819              		.cfi_offset 14, -4
 831:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 834:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     if(TPS_ADC_SAR_countsPerVolt != 0)
 820              		.loc 1 834 0
 821 0002 0F4B     		ldr	r3, .L79
 822 0004 1B88     		ldrh	r3, [r3]
 823 0006 9BB2     		uxth	r3, r3
 824 0008 33B1     		cbz	r3, .L77
 835:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         countsPer10Volt = (int32)TPS_ADC_SAR_countsPerVolt * 10;
 825              		.loc 1 836 0
 826 000a 0D4B     		ldr	r3, .L79
 827 000c 1D88     		ldrh	r5, [r3]
 828 000e 2DB2     		sxth	r5, r5
 829 0010 05EB8505 		add	r5, r5, r5, lsl #2
 830 0014 6D00     		lsls	r5, r5, #1
 831              	.LVL60:
 832 0016 01E0     		b	.L78
 833              	.LVL61:
 834              	.L77:
 837:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 838:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     else
 839:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     {
 840:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****         countsPer10Volt = TPS_ADC_SAR_countsPer10Volt;
 835              		.loc 1 840 0
 836 0018 0A4B     		ldr	r3, .L79+4
 837 001a 1D68     		ldr	r5, [r3]
 838              	.LVL62:
 839              	.L78:
 841:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     }
 842:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 843:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     adcCounts -= TPS_ADC_SAR_offset;
 840              		.loc 1 844 0
 841 001c 0A4B     		ldr	r3, .L79+8
 842 001e 1B88     		ldrh	r3, [r3]
 843 0020 C01A     		subs	r0, r0, r3
 844              	.LVL63:
 845:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 846:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     volts = ((float32)adcCounts * TPS_ADC_SAR_10V_COUNTS) / (float32)countsPer10Volt;
 845              		.loc 1 846 0
 846 0022 00B2     		sxth	r0, r0
 847              	.LVL64:
 848 0024 FFF7FEFF 		bl	__aeabi_i2f
 849              	.LVL65:
 850 0028 0849     		ldr	r1, .L79+12
 851 002a FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 32


 852              	.LVL66:
 853 002e 0446     		mov	r4, r0
 854 0030 2846     		mov	r0, r5
 855 0032 FFF7FEFF 		bl	__aeabi_i2f
 856              	.LVL67:
 857 0036 0146     		mov	r1, r0
 858 0038 2046     		mov	r0, r4
 859 003a FFF7FEFF 		bl	__aeabi_fdiv
 860              	.LVL68:
 847:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** 
 848:.\Generated_Source\PSoC5/TPS_ADC_SAR.c ****     return( volts );
 849:.\Generated_Source\PSoC5/TPS_ADC_SAR.c **** }
 861              		.loc 1 849 0
 862 003e 38BD     		pop	{r3, r4, r5, pc}
 863              	.LVL69:
 864              	.L80:
 865              		.align	2
 866              	.L79:
 867 0040 00000000 		.word	TPS_ADC_SAR_countsPerVolt
 868 0044 00000000 		.word	TPS_ADC_SAR_countsPer10Volt
 869 0048 00000000 		.word	TPS_ADC_SAR_offset
 870 004c 00002041 		.word	1092616192
 871              		.cfi_endproc
 872              	.LFE17:
 873              		.size	TPS_ADC_SAR_CountsTo_Volts, .-TPS_ADC_SAR_CountsTo_Volts
 874              		.comm	TPS_ADC_SAR_shift,2,2
 875              		.comm	TPS_ADC_SAR_countsPer10Volt,4,4
 876              		.comm	TPS_ADC_SAR_countsPerVolt,2,2
 877              		.comm	TPS_ADC_SAR_offset,2,2
 878              		.global	TPS_ADC_SAR_initVar
 879              		.bss
 880              		.set	.LANCHOR0,. + 0
 881              		.type	TPS_ADC_SAR_initVar, %object
 882              		.size	TPS_ADC_SAR_initVar, 1
 883              	TPS_ADC_SAR_initVar:
 884 0000 00       		.space	1
 885              		.text
 886              	.Letext0:
 887              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 888              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 889              		.section	.debug_info,"",%progbits
 890              	.Ldebug_info0:
 891 0000 42050000 		.4byte	0x542
 892 0004 0400     		.2byte	0x4
 893 0006 00000000 		.4byte	.Ldebug_abbrev0
 894 000a 04       		.byte	0x4
 895 000b 01       		.uleb128 0x1
 896 000c 25000000 		.4byte	.LASF58
 897 0010 01       		.byte	0x1
 898 0011 24020000 		.4byte	.LASF59
 899 0015 11030000 		.4byte	.LASF60
 900 0019 00000000 		.4byte	.Ldebug_ranges0+0
 901 001d 00000000 		.4byte	0
 902 0021 00000000 		.4byte	.Ldebug_line0
 903 0025 02       		.uleb128 0x2
 904 0026 04       		.byte	0x4
 905 0027 05       		.byte	0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 33


 906 0028 696E7400 		.ascii	"int\000"
 907 002c 03       		.uleb128 0x3
 908 002d 04       		.byte	0x4
 909 002e 07       		.byte	0x7
 910 002f 4B010000 		.4byte	.LASF0
 911 0033 03       		.uleb128 0x3
 912 0034 01       		.byte	0x1
 913 0035 06       		.byte	0x6
 914 0036 DF000000 		.4byte	.LASF1
 915 003a 03       		.uleb128 0x3
 916 003b 01       		.byte	0x1
 917 003c 08       		.byte	0x8
 918 003d E7020000 		.4byte	.LASF2
 919 0041 03       		.uleb128 0x3
 920 0042 02       		.byte	0x2
 921 0043 05       		.byte	0x5
 922 0044 07030000 		.4byte	.LASF3
 923 0048 03       		.uleb128 0x3
 924 0049 02       		.byte	0x2
 925 004a 07       		.byte	0x7
 926 004b CC010000 		.4byte	.LASF4
 927 004f 03       		.uleb128 0x3
 928 0050 04       		.byte	0x4
 929 0051 05       		.byte	0x5
 930 0052 F1000000 		.4byte	.LASF5
 931 0056 03       		.uleb128 0x3
 932 0057 04       		.byte	0x4
 933 0058 07       		.byte	0x7
 934 0059 76010000 		.4byte	.LASF6
 935 005d 03       		.uleb128 0x3
 936 005e 08       		.byte	0x8
 937 005f 05       		.byte	0x5
 938 0060 D1000000 		.4byte	.LASF7
 939 0064 03       		.uleb128 0x3
 940 0065 08       		.byte	0x8
 941 0066 07       		.byte	0x7
 942 0067 BA000000 		.4byte	.LASF8
 943 006b 03       		.uleb128 0x3
 944 006c 04       		.byte	0x4
 945 006d 07       		.byte	0x7
 946 006e 1B020000 		.4byte	.LASF9
 947 0072 03       		.uleb128 0x3
 948 0073 01       		.byte	0x1
 949 0074 08       		.byte	0x8
 950 0075 D4030000 		.4byte	.LASF10
 951 0079 04       		.uleb128 0x4
 952 007a 00010000 		.4byte	.LASF11
 953 007e 02       		.byte	0x2
 954 007f B4       		.byte	0xb4
 955 0080 3A000000 		.4byte	0x3a
 956 0084 04       		.uleb128 0x4
 957 0085 00000000 		.4byte	.LASF12
 958 0089 02       		.byte	0x2
 959 008a B5       		.byte	0xb5
 960 008b 48000000 		.4byte	0x48
 961 008f 04       		.uleb128 0x4
 962 0090 DF010000 		.4byte	.LASF13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 34


 963 0094 02       		.byte	0x2
 964 0095 B7       		.byte	0xb7
 965 0096 33000000 		.4byte	0x33
 966 009a 04       		.uleb128 0x4
 967 009b 38040000 		.4byte	.LASF14
 968 009f 02       		.byte	0x2
 969 00a0 B8       		.byte	0xb8
 970 00a1 41000000 		.4byte	0x41
 971 00a5 04       		.uleb128 0x4
 972 00a6 EB000000 		.4byte	.LASF15
 973 00aa 02       		.byte	0x2
 974 00ab B9       		.byte	0xb9
 975 00ac 4F000000 		.4byte	0x4f
 976 00b0 04       		.uleb128 0x4
 977 00b1 13020000 		.4byte	.LASF16
 978 00b5 02       		.byte	0x2
 979 00b6 BA       		.byte	0xba
 980 00b7 BB000000 		.4byte	0xbb
 981 00bb 03       		.uleb128 0x3
 982 00bc 04       		.byte	0x4
 983 00bd 04       		.byte	0x4
 984 00be 84020000 		.4byte	.LASF17
 985 00c2 03       		.uleb128 0x3
 986 00c3 08       		.byte	0x8
 987 00c4 04       		.byte	0x4
 988 00c5 10010000 		.4byte	.LASF18
 989 00c9 04       		.uleb128 0x4
 990 00ca 7E020000 		.4byte	.LASF19
 991 00ce 02       		.byte	0x2
 992 00cf BF       		.byte	0xbf
 993 00d0 5D000000 		.4byte	0x5d
 994 00d4 05       		.uleb128 0x5
 995 00d5 C1020000 		.4byte	.LASF20
 996 00d9 02       		.byte	0x2
 997 00da 5E01     		.2byte	0x15e
 998 00dc E0000000 		.4byte	0xe0
 999 00e0 06       		.uleb128 0x6
 1000 00e1 79000000 		.4byte	0x79
 1001 00e5 05       		.uleb128 0x5
 1002 00e6 FA000000 		.4byte	.LASF21
 1003 00ea 02       		.byte	0x2
 1004 00eb 5F01     		.2byte	0x15f
 1005 00ed F1000000 		.4byte	0xf1
 1006 00f1 06       		.uleb128 0x6
 1007 00f2 84000000 		.4byte	0x84
 1008 00f6 07       		.uleb128 0x7
 1009 00f7 8A020000 		.4byte	.LASF61
 1010 00fb 01       		.byte	0x1
 1011 00fc 6302     		.2byte	0x263
 1012 00fe 00000000 		.4byte	.LFB12
 1013 0102 5C000000 		.4byte	.LFE12-.LFB12
 1014 0106 01       		.uleb128 0x1
 1015 0107 9C       		.byte	0x9c
 1016 0108 3C010000 		.4byte	0x13c
 1017 010c 08       		.uleb128 0x8
 1018 010d A1030000 		.4byte	.LASF28
 1019 0111 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 35


 1020 0112 6302     		.2byte	0x263
 1021 0114 79000000 		.4byte	0x79
 1022 0118 00000000 		.4byte	.LLST0
 1023 011c 09       		.uleb128 0x9
 1024 011d A1000000 		.4byte	.LASF22
 1025 0121 01       		.byte	0x1
 1026 0122 6502     		.2byte	0x265
 1027 0124 A5000000 		.4byte	0xa5
 1028 0128 3A000000 		.4byte	.LLST1
 1029 012c 0A       		.uleb128 0xa
 1030 012d 22000000 		.4byte	.LVL4
 1031 0131 0B050000 		.4byte	0x50b
 1032 0135 0B       		.uleb128 0xb
 1033 0136 01       		.uleb128 0x1
 1034 0137 50       		.byte	0x50
 1035 0138 01       		.uleb128 0x1
 1036 0139 30       		.byte	0x30
 1037 013a 00       		.byte	0
 1038 013b 00       		.byte	0
 1039 013c 0C       		.uleb128 0xc
 1040 013d 6E040000 		.4byte	.LASF25
 1041 0141 01       		.byte	0x1
 1042 0142 8F       		.byte	0x8f
 1043 0143 00000000 		.4byte	.LFB2
 1044 0147 74000000 		.4byte	.LFE2-.LFB2
 1045 014b 01       		.uleb128 0x1
 1046 014c 9C       		.byte	0x9c
 1047 014d 9C010000 		.4byte	0x19c
 1048 0151 0D       		.uleb128 0xd
 1049 0152 67040000 		.4byte	.LASF23
 1050 0156 01       		.byte	0x1
 1051 0157 91       		.byte	0x91
 1052 0158 79000000 		.4byte	0x79
 1053 015c 67000000 		.4byte	.LLST2
 1054 0160 0D       		.uleb128 0xd
 1055 0161 04040000 		.4byte	.LASF24
 1056 0165 01       		.byte	0x1
 1057 0166 92       		.byte	0x92
 1058 0167 79000000 		.4byte	0x79
 1059 016b 89000000 		.4byte	.LLST3
 1060 016f 0E       		.uleb128 0xe
 1061 0170 06000000 		.4byte	.LVL8
 1062 0174 1C050000 		.4byte	0x51c
 1063 0178 0F       		.uleb128 0xf
 1064 0179 66000000 		.4byte	.LVL14
 1065 017d 27050000 		.4byte	0x527
 1066 0181 8B010000 		.4byte	0x18b
 1067 0185 0B       		.uleb128 0xb
 1068 0186 01       		.uleb128 0x1
 1069 0187 50       		.byte	0x50
 1070 0188 01       		.uleb128 0x1
 1071 0189 3A       		.byte	0x3a
 1072 018a 00       		.byte	0
 1073 018b 0A       		.uleb128 0xa
 1074 018c 6C000000 		.4byte	.LVL15
 1075 0190 38050000 		.4byte	0x538
 1076 0194 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 36


 1077 0195 01       		.uleb128 0x1
 1078 0196 50       		.byte	0x50
 1079 0197 02       		.uleb128 0x2
 1080 0198 74       		.byte	0x74
 1081 0199 00       		.sleb128 0
 1082 019a 00       		.byte	0
 1083 019b 00       		.byte	0
 1084 019c 0C       		.uleb128 0xc
 1085 019d 56040000 		.4byte	.LASF26
 1086 01a1 01       		.byte	0x1
 1087 01a2 F8       		.byte	0xf8
 1088 01a3 00000000 		.4byte	.LFB3
 1089 01a7 34000000 		.4byte	.LFE3-.LFB3
 1090 01ab 01       		.uleb128 0x1
 1091 01ac 9C       		.byte	0x9c
 1092 01ad D3010000 		.4byte	0x1d3
 1093 01b1 0D       		.uleb128 0xd
 1094 01b2 04040000 		.4byte	.LASF24
 1095 01b6 01       		.byte	0x1
 1096 01b7 FA       		.byte	0xfa
 1097 01b8 79000000 		.4byte	0x79
 1098 01bc A7000000 		.4byte	.LLST4
 1099 01c0 0E       		.uleb128 0xe
 1100 01c1 06000000 		.4byte	.LVL17
 1101 01c5 1C050000 		.4byte	0x51c
 1102 01c9 0E       		.uleb128 0xe
 1103 01ca 2C000000 		.4byte	.LVL18
 1104 01ce 38050000 		.4byte	0x538
 1105 01d2 00       		.byte	0
 1106 01d3 10       		.uleb128 0x10
 1107 01d4 EB010000 		.4byte	.LASF27
 1108 01d8 01       		.byte	0x1
 1109 01d9 2201     		.2byte	0x122
 1110 01db 00000000 		.4byte	.LFB4
 1111 01df 18000000 		.4byte	.LFE4-.LFB4
 1112 01e3 01       		.uleb128 0x1
 1113 01e4 9C       		.byte	0x9c
 1114 01e5 0A020000 		.4byte	0x20a
 1115 01e9 08       		.uleb128 0x8
 1116 01ea BB020000 		.4byte	.LASF29
 1117 01ee 01       		.byte	0x1
 1118 01ef 2201     		.2byte	0x122
 1119 01f1 79000000 		.4byte	0x79
 1120 01f5 BA000000 		.4byte	.LLST5
 1121 01f9 09       		.uleb128 0x9
 1122 01fa 67040000 		.4byte	.LASF23
 1123 01fe 01       		.byte	0x1
 1124 01ff 2401     		.2byte	0x124
 1125 0201 79000000 		.4byte	0x79
 1126 0205 D8000000 		.4byte	.LLST6
 1127 0209 00       		.byte	0
 1128 020a 10       		.uleb128 0x10
 1129 020b 6E030000 		.4byte	.LASF30
 1130 020f 01       		.byte	0x1
 1131 0210 5401     		.2byte	0x154
 1132 0212 00000000 		.4byte	.LFB5
 1133 0216 38000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 37


 1134 021a 01       		.uleb128 0x1
 1135 021b 9C       		.byte	0x9c
 1136 021c 64020000 		.4byte	0x264
 1137 0220 08       		.uleb128 0x8
 1138 0221 A1030000 		.4byte	.LASF28
 1139 0225 01       		.byte	0x1
 1140 0226 5401     		.2byte	0x154
 1141 0228 79000000 		.4byte	0x79
 1142 022c F6000000 		.4byte	.LLST7
 1143 0230 09       		.uleb128 0x9
 1144 0231 67040000 		.4byte	.LASF23
 1145 0235 01       		.byte	0x1
 1146 0236 5601     		.2byte	0x156
 1147 0238 79000000 		.4byte	0x79
 1148 023c 30010000 		.4byte	.LLST8
 1149 0240 0F       		.uleb128 0xf
 1150 0241 20000000 		.4byte	.LVL27
 1151 0245 0B050000 		.4byte	0x50b
 1152 0249 53020000 		.4byte	0x253
 1153 024d 0B       		.uleb128 0xb
 1154 024e 01       		.uleb128 0x1
 1155 024f 50       		.byte	0x50
 1156 0250 01       		.uleb128 0x1
 1157 0251 30       		.byte	0x30
 1158 0252 00       		.byte	0
 1159 0253 0A       		.uleb128 0xa
 1160 0254 30000000 		.4byte	.LVL30
 1161 0258 F6000000 		.4byte	0xf6
 1162 025c 0B       		.uleb128 0xb
 1163 025d 01       		.uleb128 0x1
 1164 025e 50       		.byte	0x50
 1165 025f 02       		.uleb128 0x2
 1166 0260 74       		.byte	0x74
 1167 0261 00       		.sleb128 0
 1168 0262 00       		.byte	0
 1169 0263 00       		.byte	0
 1170 0264 0C       		.uleb128 0xc
 1171 0265 8E010000 		.4byte	.LASF31
 1172 0269 01       		.byte	0x1
 1173 026a 6A       		.byte	0x6a
 1174 026b 00000000 		.4byte	.LFB1
 1175 026f 24000000 		.4byte	.LFE1-.LFB1
 1176 0273 01       		.uleb128 0x1
 1177 0274 9C       		.byte	0x9c
 1178 0275 89020000 		.4byte	0x289
 1179 0279 0A       		.uleb128 0xa
 1180 027a 12000000 		.4byte	.LVL31
 1181 027e 0A020000 		.4byte	0x20a
 1182 0282 0B       		.uleb128 0xb
 1183 0283 01       		.uleb128 0x1
 1184 0284 50       		.byte	0x50
 1185 0285 01       		.uleb128 0x1
 1186 0286 3C       		.byte	0x3c
 1187 0287 00       		.byte	0
 1188 0288 00       		.byte	0
 1189 0289 0C       		.uleb128 0xc
 1190 028a F5020000 		.4byte	.LASF32
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 38


 1191 028e 01       		.byte	0x1
 1192 028f 4A       		.byte	0x4a
 1193 0290 00000000 		.4byte	.LFB0
 1194 0294 1C000000 		.4byte	.LFE0-.LFB0
 1195 0298 01       		.uleb128 0x1
 1196 0299 9C       		.byte	0x9c
 1197 029a B1020000 		.4byte	0x2b1
 1198 029e 0E       		.uleb128 0xe
 1199 029f 0C000000 		.4byte	.LVL32
 1200 02a3 64020000 		.4byte	0x264
 1201 02a7 0E       		.uleb128 0xe
 1202 02a8 16000000 		.4byte	.LVL33
 1203 02ac 3C010000 		.4byte	0x13c
 1204 02b0 00       		.byte	0
 1205 02b1 11       		.uleb128 0x11
 1206 02b2 88030000 		.4byte	.LASF33
 1207 02b6 01       		.byte	0x1
 1208 02b7 9101     		.2byte	0x191
 1209 02b9 00000000 		.4byte	.LFB6
 1210 02bd 10000000 		.4byte	.LFE6-.LFB6
 1211 02c1 01       		.uleb128 0x1
 1212 02c2 9C       		.byte	0x9c
 1213 02c3 11       		.uleb128 0x11
 1214 02c4 3E040000 		.4byte	.LASF34
 1215 02c8 01       		.byte	0x1
 1216 02c9 B301     		.2byte	0x1b3
 1217 02cb 00000000 		.4byte	.LFB7
 1218 02cf 10000000 		.4byte	.LFE7-.LFB7
 1219 02d3 01       		.uleb128 0x1
 1220 02d4 9C       		.byte	0x9c
 1221 02d5 12       		.uleb128 0x12
 1222 02d6 9F020000 		.4byte	.LASF37
 1223 02da 01       		.byte	0x1
 1224 02db DB01     		.2byte	0x1db
 1225 02dd 79000000 		.4byte	0x79
 1226 02e1 00000000 		.4byte	.LFB8
 1227 02e5 24000000 		.4byte	.LFE8-.LFB8
 1228 02e9 01       		.uleb128 0x1
 1229 02ea 9C       		.byte	0x9c
 1230 02eb 1F030000 		.4byte	0x31f
 1231 02ef 08       		.uleb128 0x8
 1232 02f0 43010000 		.4byte	.LASF35
 1233 02f4 01       		.byte	0x1
 1234 02f5 DB01     		.2byte	0x1db
 1235 02f7 79000000 		.4byte	0x79
 1236 02fb 5D010000 		.4byte	.LLST9
 1237 02ff 09       		.uleb128 0x9
 1238 0300 31040000 		.4byte	.LASF36
 1239 0304 01       		.byte	0x1
 1240 0305 DD01     		.2byte	0x1dd
 1241 0307 79000000 		.4byte	0x79
 1242 030b 7E010000 		.4byte	.LLST10
 1243 030f 0A       		.uleb128 0xa
 1244 0310 18000000 		.4byte	.LVL37
 1245 0314 27050000 		.4byte	0x527
 1246 0318 0B       		.uleb128 0xb
 1247 0319 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 39


 1248 031a 50       		.byte	0x50
 1249 031b 01       		.uleb128 0x1
 1250 031c 31       		.byte	0x31
 1251 031d 00       		.byte	0
 1252 031e 00       		.byte	0
 1253 031f 13       		.uleb128 0x13
 1254 0320 5F010000 		.4byte	.LASF62
 1255 0324 01       		.byte	0x1
 1256 0325 0802     		.2byte	0x208
 1257 0327 8F000000 		.4byte	0x8f
 1258 032b 00000000 		.4byte	.LFB9
 1259 032f 18000000 		.4byte	.LFE9-.LFB9
 1260 0333 01       		.uleb128 0x1
 1261 0334 9C       		.byte	0x9c
 1262 0335 12       		.uleb128 0x12
 1263 0336 66020000 		.4byte	.LASF38
 1264 033a 01       		.byte	0x1
 1265 033b 2602     		.2byte	0x226
 1266 033d 9A000000 		.4byte	0x9a
 1267 0341 00000000 		.4byte	.LFB10
 1268 0345 18000000 		.4byte	.LFE10-.LFB10
 1269 0349 01       		.uleb128 0x1
 1270 034a 9C       		.byte	0x9c
 1271 034b 60030000 		.4byte	0x360
 1272 034f 14       		.uleb128 0x14
 1273 0350 72657300 		.ascii	"res\000"
 1274 0354 01       		.byte	0x1
 1275 0355 2802     		.2byte	0x228
 1276 0357 84000000 		.4byte	0x84
 1277 035b 95010000 		.4byte	.LLST11
 1278 035f 00       		.byte	0
 1279 0360 10       		.uleb128 0x10
 1280 0361 9F010000 		.4byte	.LASF39
 1281 0365 01       		.byte	0x1
 1282 0366 4902     		.2byte	0x249
 1283 0368 00000000 		.4byte	.LFB11
 1284 036c 0C000000 		.4byte	.LFE11-.LFB11
 1285 0370 01       		.uleb128 0x1
 1286 0371 9C       		.byte	0x9c
 1287 0372 85030000 		.4byte	0x385
 1288 0376 15       		.uleb128 0x15
 1289 0377 D9030000 		.4byte	.LASF40
 1290 037b 01       		.byte	0x1
 1291 037c 4902     		.2byte	0x249
 1292 037e 9A000000 		.4byte	0x9a
 1293 0382 01       		.uleb128 0x1
 1294 0383 50       		.byte	0x50
 1295 0384 00       		.byte	0
 1296 0385 10       		.uleb128 0x10
 1297 0386 AC030000 		.4byte	.LASF41
 1298 038a 01       		.byte	0x1
 1299 038b B402     		.2byte	0x2b4
 1300 038d 00000000 		.4byte	.LFB13
 1301 0391 10000000 		.4byte	.LFE13-.LFB13
 1302 0395 01       		.uleb128 0x1
 1303 0396 9C       		.byte	0x9c
 1304 0397 AC030000 		.4byte	0x3ac
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 40


 1305 039b 08       		.uleb128 0x8
 1306 039c 07000000 		.4byte	.LASF42
 1307 03a0 01       		.byte	0x1
 1308 03a1 B402     		.2byte	0x2b4
 1309 03a3 9A000000 		.4byte	0x9a
 1310 03a7 A8010000 		.4byte	.LLST12
 1311 03ab 00       		.byte	0
 1312 03ac 10       		.uleb128 0x10
 1313 03ad EA030000 		.4byte	.LASF43
 1314 03b1 01       		.byte	0x1
 1315 03b2 CF02     		.2byte	0x2cf
 1316 03b4 00000000 		.4byte	.LFB14
 1317 03b8 0C000000 		.4byte	.LFE14-.LFB14
 1318 03bc 01       		.uleb128 0x1
 1319 03bd 9C       		.byte	0x9c
 1320 03be D1030000 		.4byte	0x3d1
 1321 03c2 15       		.uleb128 0x15
 1322 03c3 07000000 		.4byte	.LASF42
 1323 03c7 01       		.byte	0x1
 1324 03c8 CF02     		.2byte	0x2cf
 1325 03ca A5000000 		.4byte	0xa5
 1326 03ce 01       		.uleb128 0x1
 1327 03cf 50       		.byte	0x50
 1328 03d0 00       		.byte	0
 1329 03d1 12       		.uleb128 0x12
 1330 03d2 81040000 		.4byte	.LASF44
 1331 03d6 01       		.byte	0x1
 1332 03d7 E702     		.2byte	0x2e7
 1333 03d9 9A000000 		.4byte	0x9a
 1334 03dd 00000000 		.4byte	.LFB15
 1335 03e1 54000000 		.4byte	.LFE15-.LFB15
 1336 03e5 01       		.uleb128 0x1
 1337 03e6 9C       		.byte	0x9c
 1338 03e7 1C040000 		.4byte	0x41c
 1339 03eb 08       		.uleb128 0x8
 1340 03ec E0030000 		.4byte	.LASF45
 1341 03f0 01       		.byte	0x1
 1342 03f1 E702     		.2byte	0x2e7
 1343 03f3 9A000000 		.4byte	0x9a
 1344 03f7 C9010000 		.4byte	.LLST13
 1345 03fb 09       		.uleb128 0x9
 1346 03fc E4010000 		.4byte	.LASF46
 1347 0400 01       		.byte	0x1
 1348 0401 E902     		.2byte	0x2e9
 1349 0403 9A000000 		.4byte	0x9a
 1350 0407 F5010000 		.4byte	.LLST14
 1351 040b 09       		.uleb128 0x9
 1352 040c 33010000 		.4byte	.LASF47
 1353 0410 01       		.byte	0x1
 1354 0411 EA02     		.2byte	0x2ea
 1355 0413 A5000000 		.4byte	0xa5
 1356 0417 18020000 		.4byte	.LLST15
 1357 041b 00       		.byte	0
 1358 041c 16       		.uleb128 0x16
 1359 041d 15040000 		.4byte	.LASF48
 1360 0421 01       		.byte	0x1
 1361 0422 1103     		.2byte	0x311
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 41


 1362 0424 A5000000 		.4byte	0xa5
 1363 0428 00000000 		.4byte	.LFB16
 1364 042c 48000000 		.4byte	.LFE16-.LFB16
 1365 0430 01       		.uleb128 0x1
 1366 0431 9C       		.byte	0x9c
 1367 0432 63040000 		.4byte	0x463
 1368 0436 08       		.uleb128 0x8
 1369 0437 E0030000 		.4byte	.LASF45
 1370 043b 01       		.byte	0x1
 1371 043c 1103     		.2byte	0x311
 1372 043e 9A000000 		.4byte	0x9a
 1373 0442 36020000 		.4byte	.LLST16
 1374 0446 17       		.uleb128 0x17
 1375 0447 58010000 		.4byte	.LASF63
 1376 044b 01       		.byte	0x1
 1377 044c 1403     		.2byte	0x314
 1378 044e C9000000 		.4byte	0xc9
 1379 0452 09       		.uleb128 0x9
 1380 0453 33010000 		.4byte	.LASF47
 1381 0457 01       		.byte	0x1
 1382 0458 1503     		.2byte	0x315
 1383 045a A5000000 		.4byte	0xa5
 1384 045e 59020000 		.4byte	.LLST17
 1385 0462 00       		.byte	0
 1386 0463 16       		.uleb128 0x16
 1387 0464 4B020000 		.4byte	.LASF49
 1388 0468 01       		.byte	0x1
 1389 0469 3D03     		.2byte	0x33d
 1390 046b B0000000 		.4byte	0xb0
 1391 046f 00000000 		.4byte	.LFB17
 1392 0473 50000000 		.4byte	.LFE17-.LFB17
 1393 0477 01       		.uleb128 0x1
 1394 0478 9C       		.byte	0x9c
 1395 0479 AC040000 		.4byte	0x4ac
 1396 047d 08       		.uleb128 0x8
 1397 047e E0030000 		.4byte	.LASF45
 1398 0482 01       		.byte	0x1
 1399 0483 3D03     		.2byte	0x33d
 1400 0485 9A000000 		.4byte	0x9a
 1401 0489 77020000 		.4byte	.LLST18
 1402 048d 18       		.uleb128 0x18
 1403 048e 88010000 		.4byte	.LASF50
 1404 0492 01       		.byte	0x1
 1405 0493 3F03     		.2byte	0x33f
 1406 0495 B0000000 		.4byte	0xb0
 1407 0499 01       		.uleb128 0x1
 1408 049a 50       		.byte	0x50
 1409 049b 09       		.uleb128 0x9
 1410 049c 33010000 		.4byte	.LASF47
 1411 04a0 01       		.byte	0x1
 1412 04a1 4003     		.2byte	0x340
 1413 04a3 A5000000 		.4byte	0xa5
 1414 04a7 95020000 		.4byte	.LLST19
 1415 04ab 00       		.byte	0
 1416 04ac 19       		.uleb128 0x19
 1417 04ad C0030000 		.4byte	.LASF51
 1418 04b1 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 42


 1419 04b2 23       		.byte	0x23
 1420 04b3 79000000 		.4byte	0x79
 1421 04b7 05       		.uleb128 0x5
 1422 04b8 03       		.byte	0x3
 1423 04b9 00000000 		.4byte	TPS_ADC_SAR_initVar
 1424 04bd 19       		.uleb128 0x19
 1425 04be 00020000 		.4byte	.LASF52
 1426 04c2 01       		.byte	0x1
 1427 04c3 24       		.byte	0x24
 1428 04c4 CE040000 		.4byte	0x4ce
 1429 04c8 05       		.uleb128 0x5
 1430 04c9 03       		.byte	0x3
 1431 04ca 00000000 		.4byte	TPS_ADC_SAR_offset
 1432 04ce 06       		.uleb128 0x6
 1433 04cf 9A000000 		.4byte	0x9a
 1434 04d3 19       		.uleb128 0x19
 1435 04d4 C6020000 		.4byte	.LASF53
 1436 04d8 01       		.byte	0x1
 1437 04d9 25       		.byte	0x25
 1438 04da CE040000 		.4byte	0x4ce
 1439 04de 05       		.uleb128 0x5
 1440 04df 03       		.byte	0x3
 1441 04e0 00000000 		.4byte	TPS_ADC_SAR_countsPerVolt
 1442 04e4 19       		.uleb128 0x19
 1443 04e5 17010000 		.4byte	.LASF54
 1444 04e9 01       		.byte	0x1
 1445 04ea 26       		.byte	0x26
 1446 04eb F5040000 		.4byte	0x4f5
 1447 04ef 05       		.uleb128 0x5
 1448 04f0 03       		.byte	0x3
 1449 04f1 00000000 		.4byte	TPS_ADC_SAR_countsPer10Volt
 1450 04f5 06       		.uleb128 0x6
 1451 04f6 A5000000 		.4byte	0xa5
 1452 04fa 19       		.uleb128 0x19
 1453 04fb A8000000 		.4byte	.LASF55
 1454 04ff 01       		.byte	0x1
 1455 0500 27       		.byte	0x27
 1456 0501 CE040000 		.4byte	0x4ce
 1457 0505 05       		.uleb128 0x5
 1458 0506 03       		.byte	0x3
 1459 0507 00000000 		.4byte	TPS_ADC_SAR_shift
 1460 050b 1A       		.uleb128 0x1a
 1461 050c E0020000 		.4byte	.LASF56
 1462 0510 03       		.byte	0x3
 1463 0511 80       		.byte	0x80
 1464 0512 1C050000 		.4byte	0x51c
 1465 0516 1B       		.uleb128 0x1b
 1466 0517 79000000 		.4byte	0x79
 1467 051b 00       		.byte	0
 1468 051c 1C       		.uleb128 0x1c
 1469 051d B5010000 		.4byte	.LASF64
 1470 0521 03       		.byte	0x3
 1471 0522 7E       		.byte	0x7e
 1472 0523 79000000 		.4byte	0x79
 1473 0527 1A       		.uleb128 0x1a
 1474 0528 06010000 		.4byte	.LASF57
 1475 052c 03       		.byte	0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 43


 1476 052d 78       		.byte	0x78
 1477 052e 38050000 		.4byte	0x538
 1478 0532 1B       		.uleb128 0x1b
 1479 0533 84000000 		.4byte	0x84
 1480 0537 00       		.byte	0
 1481 0538 1D       		.uleb128 0x1d
 1482 0539 0F000000 		.4byte	.LASF65
 1483 053d 03       		.byte	0x3
 1484 053e 7F       		.byte	0x7f
 1485 053f 1B       		.uleb128 0x1b
 1486 0540 79000000 		.4byte	0x79
 1487 0544 00       		.byte	0
 1488 0545 00       		.byte	0
 1489              		.section	.debug_abbrev,"",%progbits
 1490              	.Ldebug_abbrev0:
 1491 0000 01       		.uleb128 0x1
 1492 0001 11       		.uleb128 0x11
 1493 0002 01       		.byte	0x1
 1494 0003 25       		.uleb128 0x25
 1495 0004 0E       		.uleb128 0xe
 1496 0005 13       		.uleb128 0x13
 1497 0006 0B       		.uleb128 0xb
 1498 0007 03       		.uleb128 0x3
 1499 0008 0E       		.uleb128 0xe
 1500 0009 1B       		.uleb128 0x1b
 1501 000a 0E       		.uleb128 0xe
 1502 000b 55       		.uleb128 0x55
 1503 000c 17       		.uleb128 0x17
 1504 000d 11       		.uleb128 0x11
 1505 000e 01       		.uleb128 0x1
 1506 000f 10       		.uleb128 0x10
 1507 0010 17       		.uleb128 0x17
 1508 0011 00       		.byte	0
 1509 0012 00       		.byte	0
 1510 0013 02       		.uleb128 0x2
 1511 0014 24       		.uleb128 0x24
 1512 0015 00       		.byte	0
 1513 0016 0B       		.uleb128 0xb
 1514 0017 0B       		.uleb128 0xb
 1515 0018 3E       		.uleb128 0x3e
 1516 0019 0B       		.uleb128 0xb
 1517 001a 03       		.uleb128 0x3
 1518 001b 08       		.uleb128 0x8
 1519 001c 00       		.byte	0
 1520 001d 00       		.byte	0
 1521 001e 03       		.uleb128 0x3
 1522 001f 24       		.uleb128 0x24
 1523 0020 00       		.byte	0
 1524 0021 0B       		.uleb128 0xb
 1525 0022 0B       		.uleb128 0xb
 1526 0023 3E       		.uleb128 0x3e
 1527 0024 0B       		.uleb128 0xb
 1528 0025 03       		.uleb128 0x3
 1529 0026 0E       		.uleb128 0xe
 1530 0027 00       		.byte	0
 1531 0028 00       		.byte	0
 1532 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 44


 1533 002a 16       		.uleb128 0x16
 1534 002b 00       		.byte	0
 1535 002c 03       		.uleb128 0x3
 1536 002d 0E       		.uleb128 0xe
 1537 002e 3A       		.uleb128 0x3a
 1538 002f 0B       		.uleb128 0xb
 1539 0030 3B       		.uleb128 0x3b
 1540 0031 0B       		.uleb128 0xb
 1541 0032 49       		.uleb128 0x49
 1542 0033 13       		.uleb128 0x13
 1543 0034 00       		.byte	0
 1544 0035 00       		.byte	0
 1545 0036 05       		.uleb128 0x5
 1546 0037 16       		.uleb128 0x16
 1547 0038 00       		.byte	0
 1548 0039 03       		.uleb128 0x3
 1549 003a 0E       		.uleb128 0xe
 1550 003b 3A       		.uleb128 0x3a
 1551 003c 0B       		.uleb128 0xb
 1552 003d 3B       		.uleb128 0x3b
 1553 003e 05       		.uleb128 0x5
 1554 003f 49       		.uleb128 0x49
 1555 0040 13       		.uleb128 0x13
 1556 0041 00       		.byte	0
 1557 0042 00       		.byte	0
 1558 0043 06       		.uleb128 0x6
 1559 0044 35       		.uleb128 0x35
 1560 0045 00       		.byte	0
 1561 0046 49       		.uleb128 0x49
 1562 0047 13       		.uleb128 0x13
 1563 0048 00       		.byte	0
 1564 0049 00       		.byte	0
 1565 004a 07       		.uleb128 0x7
 1566 004b 2E       		.uleb128 0x2e
 1567 004c 01       		.byte	0x1
 1568 004d 03       		.uleb128 0x3
 1569 004e 0E       		.uleb128 0xe
 1570 004f 3A       		.uleb128 0x3a
 1571 0050 0B       		.uleb128 0xb
 1572 0051 3B       		.uleb128 0x3b
 1573 0052 05       		.uleb128 0x5
 1574 0053 27       		.uleb128 0x27
 1575 0054 19       		.uleb128 0x19
 1576 0055 11       		.uleb128 0x11
 1577 0056 01       		.uleb128 0x1
 1578 0057 12       		.uleb128 0x12
 1579 0058 06       		.uleb128 0x6
 1580 0059 40       		.uleb128 0x40
 1581 005a 18       		.uleb128 0x18
 1582 005b 9742     		.uleb128 0x2117
 1583 005d 19       		.uleb128 0x19
 1584 005e 01       		.uleb128 0x1
 1585 005f 13       		.uleb128 0x13
 1586 0060 00       		.byte	0
 1587 0061 00       		.byte	0
 1588 0062 08       		.uleb128 0x8
 1589 0063 05       		.uleb128 0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 45


 1590 0064 00       		.byte	0
 1591 0065 03       		.uleb128 0x3
 1592 0066 0E       		.uleb128 0xe
 1593 0067 3A       		.uleb128 0x3a
 1594 0068 0B       		.uleb128 0xb
 1595 0069 3B       		.uleb128 0x3b
 1596 006a 05       		.uleb128 0x5
 1597 006b 49       		.uleb128 0x49
 1598 006c 13       		.uleb128 0x13
 1599 006d 02       		.uleb128 0x2
 1600 006e 17       		.uleb128 0x17
 1601 006f 00       		.byte	0
 1602 0070 00       		.byte	0
 1603 0071 09       		.uleb128 0x9
 1604 0072 34       		.uleb128 0x34
 1605 0073 00       		.byte	0
 1606 0074 03       		.uleb128 0x3
 1607 0075 0E       		.uleb128 0xe
 1608 0076 3A       		.uleb128 0x3a
 1609 0077 0B       		.uleb128 0xb
 1610 0078 3B       		.uleb128 0x3b
 1611 0079 05       		.uleb128 0x5
 1612 007a 49       		.uleb128 0x49
 1613 007b 13       		.uleb128 0x13
 1614 007c 02       		.uleb128 0x2
 1615 007d 17       		.uleb128 0x17
 1616 007e 00       		.byte	0
 1617 007f 00       		.byte	0
 1618 0080 0A       		.uleb128 0xa
 1619 0081 898201   		.uleb128 0x4109
 1620 0084 01       		.byte	0x1
 1621 0085 11       		.uleb128 0x11
 1622 0086 01       		.uleb128 0x1
 1623 0087 31       		.uleb128 0x31
 1624 0088 13       		.uleb128 0x13
 1625 0089 00       		.byte	0
 1626 008a 00       		.byte	0
 1627 008b 0B       		.uleb128 0xb
 1628 008c 8A8201   		.uleb128 0x410a
 1629 008f 00       		.byte	0
 1630 0090 02       		.uleb128 0x2
 1631 0091 18       		.uleb128 0x18
 1632 0092 9142     		.uleb128 0x2111
 1633 0094 18       		.uleb128 0x18
 1634 0095 00       		.byte	0
 1635 0096 00       		.byte	0
 1636 0097 0C       		.uleb128 0xc
 1637 0098 2E       		.uleb128 0x2e
 1638 0099 01       		.byte	0x1
 1639 009a 3F       		.uleb128 0x3f
 1640 009b 19       		.uleb128 0x19
 1641 009c 03       		.uleb128 0x3
 1642 009d 0E       		.uleb128 0xe
 1643 009e 3A       		.uleb128 0x3a
 1644 009f 0B       		.uleb128 0xb
 1645 00a0 3B       		.uleb128 0x3b
 1646 00a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 46


 1647 00a2 27       		.uleb128 0x27
 1648 00a3 19       		.uleb128 0x19
 1649 00a4 11       		.uleb128 0x11
 1650 00a5 01       		.uleb128 0x1
 1651 00a6 12       		.uleb128 0x12
 1652 00a7 06       		.uleb128 0x6
 1653 00a8 40       		.uleb128 0x40
 1654 00a9 18       		.uleb128 0x18
 1655 00aa 9742     		.uleb128 0x2117
 1656 00ac 19       		.uleb128 0x19
 1657 00ad 01       		.uleb128 0x1
 1658 00ae 13       		.uleb128 0x13
 1659 00af 00       		.byte	0
 1660 00b0 00       		.byte	0
 1661 00b1 0D       		.uleb128 0xd
 1662 00b2 34       		.uleb128 0x34
 1663 00b3 00       		.byte	0
 1664 00b4 03       		.uleb128 0x3
 1665 00b5 0E       		.uleb128 0xe
 1666 00b6 3A       		.uleb128 0x3a
 1667 00b7 0B       		.uleb128 0xb
 1668 00b8 3B       		.uleb128 0x3b
 1669 00b9 0B       		.uleb128 0xb
 1670 00ba 49       		.uleb128 0x49
 1671 00bb 13       		.uleb128 0x13
 1672 00bc 02       		.uleb128 0x2
 1673 00bd 17       		.uleb128 0x17
 1674 00be 00       		.byte	0
 1675 00bf 00       		.byte	0
 1676 00c0 0E       		.uleb128 0xe
 1677 00c1 898201   		.uleb128 0x4109
 1678 00c4 00       		.byte	0
 1679 00c5 11       		.uleb128 0x11
 1680 00c6 01       		.uleb128 0x1
 1681 00c7 31       		.uleb128 0x31
 1682 00c8 13       		.uleb128 0x13
 1683 00c9 00       		.byte	0
 1684 00ca 00       		.byte	0
 1685 00cb 0F       		.uleb128 0xf
 1686 00cc 898201   		.uleb128 0x4109
 1687 00cf 01       		.byte	0x1
 1688 00d0 11       		.uleb128 0x11
 1689 00d1 01       		.uleb128 0x1
 1690 00d2 31       		.uleb128 0x31
 1691 00d3 13       		.uleb128 0x13
 1692 00d4 01       		.uleb128 0x1
 1693 00d5 13       		.uleb128 0x13
 1694 00d6 00       		.byte	0
 1695 00d7 00       		.byte	0
 1696 00d8 10       		.uleb128 0x10
 1697 00d9 2E       		.uleb128 0x2e
 1698 00da 01       		.byte	0x1
 1699 00db 3F       		.uleb128 0x3f
 1700 00dc 19       		.uleb128 0x19
 1701 00dd 03       		.uleb128 0x3
 1702 00de 0E       		.uleb128 0xe
 1703 00df 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 47


 1704 00e0 0B       		.uleb128 0xb
 1705 00e1 3B       		.uleb128 0x3b
 1706 00e2 05       		.uleb128 0x5
 1707 00e3 27       		.uleb128 0x27
 1708 00e4 19       		.uleb128 0x19
 1709 00e5 11       		.uleb128 0x11
 1710 00e6 01       		.uleb128 0x1
 1711 00e7 12       		.uleb128 0x12
 1712 00e8 06       		.uleb128 0x6
 1713 00e9 40       		.uleb128 0x40
 1714 00ea 18       		.uleb128 0x18
 1715 00eb 9742     		.uleb128 0x2117
 1716 00ed 19       		.uleb128 0x19
 1717 00ee 01       		.uleb128 0x1
 1718 00ef 13       		.uleb128 0x13
 1719 00f0 00       		.byte	0
 1720 00f1 00       		.byte	0
 1721 00f2 11       		.uleb128 0x11
 1722 00f3 2E       		.uleb128 0x2e
 1723 00f4 00       		.byte	0
 1724 00f5 3F       		.uleb128 0x3f
 1725 00f6 19       		.uleb128 0x19
 1726 00f7 03       		.uleb128 0x3
 1727 00f8 0E       		.uleb128 0xe
 1728 00f9 3A       		.uleb128 0x3a
 1729 00fa 0B       		.uleb128 0xb
 1730 00fb 3B       		.uleb128 0x3b
 1731 00fc 05       		.uleb128 0x5
 1732 00fd 27       		.uleb128 0x27
 1733 00fe 19       		.uleb128 0x19
 1734 00ff 11       		.uleb128 0x11
 1735 0100 01       		.uleb128 0x1
 1736 0101 12       		.uleb128 0x12
 1737 0102 06       		.uleb128 0x6
 1738 0103 40       		.uleb128 0x40
 1739 0104 18       		.uleb128 0x18
 1740 0105 9742     		.uleb128 0x2117
 1741 0107 19       		.uleb128 0x19
 1742 0108 00       		.byte	0
 1743 0109 00       		.byte	0
 1744 010a 12       		.uleb128 0x12
 1745 010b 2E       		.uleb128 0x2e
 1746 010c 01       		.byte	0x1
 1747 010d 3F       		.uleb128 0x3f
 1748 010e 19       		.uleb128 0x19
 1749 010f 03       		.uleb128 0x3
 1750 0110 0E       		.uleb128 0xe
 1751 0111 3A       		.uleb128 0x3a
 1752 0112 0B       		.uleb128 0xb
 1753 0113 3B       		.uleb128 0x3b
 1754 0114 05       		.uleb128 0x5
 1755 0115 27       		.uleb128 0x27
 1756 0116 19       		.uleb128 0x19
 1757 0117 49       		.uleb128 0x49
 1758 0118 13       		.uleb128 0x13
 1759 0119 11       		.uleb128 0x11
 1760 011a 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 48


 1761 011b 12       		.uleb128 0x12
 1762 011c 06       		.uleb128 0x6
 1763 011d 40       		.uleb128 0x40
 1764 011e 18       		.uleb128 0x18
 1765 011f 9742     		.uleb128 0x2117
 1766 0121 19       		.uleb128 0x19
 1767 0122 01       		.uleb128 0x1
 1768 0123 13       		.uleb128 0x13
 1769 0124 00       		.byte	0
 1770 0125 00       		.byte	0
 1771 0126 13       		.uleb128 0x13
 1772 0127 2E       		.uleb128 0x2e
 1773 0128 00       		.byte	0
 1774 0129 3F       		.uleb128 0x3f
 1775 012a 19       		.uleb128 0x19
 1776 012b 03       		.uleb128 0x3
 1777 012c 0E       		.uleb128 0xe
 1778 012d 3A       		.uleb128 0x3a
 1779 012e 0B       		.uleb128 0xb
 1780 012f 3B       		.uleb128 0x3b
 1781 0130 05       		.uleb128 0x5
 1782 0131 27       		.uleb128 0x27
 1783 0132 19       		.uleb128 0x19
 1784 0133 49       		.uleb128 0x49
 1785 0134 13       		.uleb128 0x13
 1786 0135 11       		.uleb128 0x11
 1787 0136 01       		.uleb128 0x1
 1788 0137 12       		.uleb128 0x12
 1789 0138 06       		.uleb128 0x6
 1790 0139 40       		.uleb128 0x40
 1791 013a 18       		.uleb128 0x18
 1792 013b 9742     		.uleb128 0x2117
 1793 013d 19       		.uleb128 0x19
 1794 013e 00       		.byte	0
 1795 013f 00       		.byte	0
 1796 0140 14       		.uleb128 0x14
 1797 0141 34       		.uleb128 0x34
 1798 0142 00       		.byte	0
 1799 0143 03       		.uleb128 0x3
 1800 0144 08       		.uleb128 0x8
 1801 0145 3A       		.uleb128 0x3a
 1802 0146 0B       		.uleb128 0xb
 1803 0147 3B       		.uleb128 0x3b
 1804 0148 05       		.uleb128 0x5
 1805 0149 49       		.uleb128 0x49
 1806 014a 13       		.uleb128 0x13
 1807 014b 02       		.uleb128 0x2
 1808 014c 17       		.uleb128 0x17
 1809 014d 00       		.byte	0
 1810 014e 00       		.byte	0
 1811 014f 15       		.uleb128 0x15
 1812 0150 05       		.uleb128 0x5
 1813 0151 00       		.byte	0
 1814 0152 03       		.uleb128 0x3
 1815 0153 0E       		.uleb128 0xe
 1816 0154 3A       		.uleb128 0x3a
 1817 0155 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 49


 1818 0156 3B       		.uleb128 0x3b
 1819 0157 05       		.uleb128 0x5
 1820 0158 49       		.uleb128 0x49
 1821 0159 13       		.uleb128 0x13
 1822 015a 02       		.uleb128 0x2
 1823 015b 18       		.uleb128 0x18
 1824 015c 00       		.byte	0
 1825 015d 00       		.byte	0
 1826 015e 16       		.uleb128 0x16
 1827 015f 2E       		.uleb128 0x2e
 1828 0160 01       		.byte	0x1
 1829 0161 3F       		.uleb128 0x3f
 1830 0162 19       		.uleb128 0x19
 1831 0163 03       		.uleb128 0x3
 1832 0164 0E       		.uleb128 0xe
 1833 0165 3A       		.uleb128 0x3a
 1834 0166 0B       		.uleb128 0xb
 1835 0167 3B       		.uleb128 0x3b
 1836 0168 05       		.uleb128 0x5
 1837 0169 27       		.uleb128 0x27
 1838 016a 19       		.uleb128 0x19
 1839 016b 49       		.uleb128 0x49
 1840 016c 13       		.uleb128 0x13
 1841 016d 11       		.uleb128 0x11
 1842 016e 01       		.uleb128 0x1
 1843 016f 12       		.uleb128 0x12
 1844 0170 06       		.uleb128 0x6
 1845 0171 40       		.uleb128 0x40
 1846 0172 18       		.uleb128 0x18
 1847 0173 9642     		.uleb128 0x2116
 1848 0175 19       		.uleb128 0x19
 1849 0176 01       		.uleb128 0x1
 1850 0177 13       		.uleb128 0x13
 1851 0178 00       		.byte	0
 1852 0179 00       		.byte	0
 1853 017a 17       		.uleb128 0x17
 1854 017b 34       		.uleb128 0x34
 1855 017c 00       		.byte	0
 1856 017d 03       		.uleb128 0x3
 1857 017e 0E       		.uleb128 0xe
 1858 017f 3A       		.uleb128 0x3a
 1859 0180 0B       		.uleb128 0xb
 1860 0181 3B       		.uleb128 0x3b
 1861 0182 05       		.uleb128 0x5
 1862 0183 49       		.uleb128 0x49
 1863 0184 13       		.uleb128 0x13
 1864 0185 00       		.byte	0
 1865 0186 00       		.byte	0
 1866 0187 18       		.uleb128 0x18
 1867 0188 34       		.uleb128 0x34
 1868 0189 00       		.byte	0
 1869 018a 03       		.uleb128 0x3
 1870 018b 0E       		.uleb128 0xe
 1871 018c 3A       		.uleb128 0x3a
 1872 018d 0B       		.uleb128 0xb
 1873 018e 3B       		.uleb128 0x3b
 1874 018f 05       		.uleb128 0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 50


 1875 0190 49       		.uleb128 0x49
 1876 0191 13       		.uleb128 0x13
 1877 0192 02       		.uleb128 0x2
 1878 0193 18       		.uleb128 0x18
 1879 0194 00       		.byte	0
 1880 0195 00       		.byte	0
 1881 0196 19       		.uleb128 0x19
 1882 0197 34       		.uleb128 0x34
 1883 0198 00       		.byte	0
 1884 0199 03       		.uleb128 0x3
 1885 019a 0E       		.uleb128 0xe
 1886 019b 3A       		.uleb128 0x3a
 1887 019c 0B       		.uleb128 0xb
 1888 019d 3B       		.uleb128 0x3b
 1889 019e 0B       		.uleb128 0xb
 1890 019f 49       		.uleb128 0x49
 1891 01a0 13       		.uleb128 0x13
 1892 01a1 3F       		.uleb128 0x3f
 1893 01a2 19       		.uleb128 0x19
 1894 01a3 02       		.uleb128 0x2
 1895 01a4 18       		.uleb128 0x18
 1896 01a5 00       		.byte	0
 1897 01a6 00       		.byte	0
 1898 01a7 1A       		.uleb128 0x1a
 1899 01a8 2E       		.uleb128 0x2e
 1900 01a9 01       		.byte	0x1
 1901 01aa 3F       		.uleb128 0x3f
 1902 01ab 19       		.uleb128 0x19
 1903 01ac 03       		.uleb128 0x3
 1904 01ad 0E       		.uleb128 0xe
 1905 01ae 3A       		.uleb128 0x3a
 1906 01af 0B       		.uleb128 0xb
 1907 01b0 3B       		.uleb128 0x3b
 1908 01b1 0B       		.uleb128 0xb
 1909 01b2 27       		.uleb128 0x27
 1910 01b3 19       		.uleb128 0x19
 1911 01b4 3C       		.uleb128 0x3c
 1912 01b5 19       		.uleb128 0x19
 1913 01b6 01       		.uleb128 0x1
 1914 01b7 13       		.uleb128 0x13
 1915 01b8 00       		.byte	0
 1916 01b9 00       		.byte	0
 1917 01ba 1B       		.uleb128 0x1b
 1918 01bb 05       		.uleb128 0x5
 1919 01bc 00       		.byte	0
 1920 01bd 49       		.uleb128 0x49
 1921 01be 13       		.uleb128 0x13
 1922 01bf 00       		.byte	0
 1923 01c0 00       		.byte	0
 1924 01c1 1C       		.uleb128 0x1c
 1925 01c2 2E       		.uleb128 0x2e
 1926 01c3 00       		.byte	0
 1927 01c4 3F       		.uleb128 0x3f
 1928 01c5 19       		.uleb128 0x19
 1929 01c6 03       		.uleb128 0x3
 1930 01c7 0E       		.uleb128 0xe
 1931 01c8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 51


 1932 01c9 0B       		.uleb128 0xb
 1933 01ca 3B       		.uleb128 0x3b
 1934 01cb 0B       		.uleb128 0xb
 1935 01cc 27       		.uleb128 0x27
 1936 01cd 19       		.uleb128 0x19
 1937 01ce 49       		.uleb128 0x49
 1938 01cf 13       		.uleb128 0x13
 1939 01d0 3C       		.uleb128 0x3c
 1940 01d1 19       		.uleb128 0x19
 1941 01d2 00       		.byte	0
 1942 01d3 00       		.byte	0
 1943 01d4 1D       		.uleb128 0x1d
 1944 01d5 2E       		.uleb128 0x2e
 1945 01d6 01       		.byte	0x1
 1946 01d7 3F       		.uleb128 0x3f
 1947 01d8 19       		.uleb128 0x19
 1948 01d9 03       		.uleb128 0x3
 1949 01da 0E       		.uleb128 0xe
 1950 01db 3A       		.uleb128 0x3a
 1951 01dc 0B       		.uleb128 0xb
 1952 01dd 3B       		.uleb128 0x3b
 1953 01de 0B       		.uleb128 0xb
 1954 01df 27       		.uleb128 0x27
 1955 01e0 19       		.uleb128 0x19
 1956 01e1 3C       		.uleb128 0x3c
 1957 01e2 19       		.uleb128 0x19
 1958 01e3 00       		.byte	0
 1959 01e4 00       		.byte	0
 1960 01e5 00       		.byte	0
 1961              		.section	.debug_loc,"",%progbits
 1962              	.Ldebug_loc0:
 1963              	.LLST0:
 1964 0000 00000000 		.4byte	.LVL0
 1965 0004 1E000000 		.4byte	.LVL3
 1966 0008 0100     		.2byte	0x1
 1967 000a 50       		.byte	0x50
 1968 000b 1E000000 		.4byte	.LVL3
 1969 000f 26000000 		.4byte	.LVL5
 1970 0013 0400     		.2byte	0x4
 1971 0015 F3       		.byte	0xf3
 1972 0016 01       		.uleb128 0x1
 1973 0017 50       		.byte	0x50
 1974 0018 9F       		.byte	0x9f
 1975 0019 26000000 		.4byte	.LVL5
 1976 001d 2A000000 		.4byte	.LVL6
 1977 0021 0100     		.2byte	0x1
 1978 0023 50       		.byte	0x50
 1979 0024 2A000000 		.4byte	.LVL6
 1980 0028 5C000000 		.4byte	.LFE12
 1981 002c 0400     		.2byte	0x4
 1982 002e F3       		.byte	0xf3
 1983 002f 01       		.uleb128 0x1
 1984 0030 50       		.byte	0x50
 1985 0031 9F       		.byte	0x9f
 1986 0032 00000000 		.4byte	0
 1987 0036 00000000 		.4byte	0
 1988              	.LLST1:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 52


 1989 003a 16000000 		.4byte	.LVL1
 1990 003e 1C000000 		.4byte	.LVL2
 1991 0042 0400     		.2byte	0x4
 1992 0044 0A       		.byte	0xa
 1993 0045 0001     		.2byte	0x100
 1994 0047 9F       		.byte	0x9f
 1995 0048 1C000000 		.4byte	.LVL2
 1996 004c 26000000 		.4byte	.LVL5
 1997 0050 0200     		.2byte	0x2
 1998 0052 30       		.byte	0x30
 1999 0053 9F       		.byte	0x9f
 2000 0054 2A000000 		.4byte	.LVL6
 2001 0058 38000000 		.4byte	.LVL7
 2002 005c 0100     		.2byte	0x1
 2003 005e 53       		.byte	0x53
 2004 005f 00000000 		.4byte	0
 2005 0063 00000000 		.4byte	0
 2006              	.LLST2:
 2007 0067 24000000 		.4byte	.LVL10
 2008 006b 28000000 		.4byte	.LVL11
 2009 006f 0500     		.2byte	0x5
 2010 0071 72       		.byte	0x72
 2011 0072 00       		.sleb128 0
 2012 0073 32       		.byte	0x32
 2013 0074 21       		.byte	0x21
 2014 0075 9F       		.byte	0x9f
 2015 0076 28000000 		.4byte	.LVL11
 2016 007a 2C000000 		.4byte	.LVL12
 2017 007e 0100     		.2byte	0x1
 2018 0080 52       		.byte	0x52
 2019 0081 00000000 		.4byte	0
 2020 0085 00000000 		.4byte	0
 2021              	.LLST3:
 2022 0089 08000000 		.4byte	.LVL9
 2023 008d 62000000 		.4byte	.LVL13
 2024 0091 0100     		.2byte	0x1
 2025 0093 50       		.byte	0x50
 2026 0094 62000000 		.4byte	.LVL13
 2027 0098 6E000000 		.4byte	.LVL16
 2028 009c 0100     		.2byte	0x1
 2029 009e 54       		.byte	0x54
 2030 009f 00000000 		.4byte	0
 2031 00a3 00000000 		.4byte	0
 2032              	.LLST4:
 2033 00a7 06000000 		.4byte	.LVL17
 2034 00ab 2B000000 		.4byte	.LVL18-1
 2035 00af 0100     		.2byte	0x1
 2036 00b1 50       		.byte	0x50
 2037 00b2 00000000 		.4byte	0
 2038 00b6 00000000 		.4byte	0
 2039              	.LLST5:
 2040 00ba 00000000 		.4byte	.LVL19
 2041 00be 04000000 		.4byte	.LVL20
 2042 00c2 0100     		.2byte	0x1
 2043 00c4 50       		.byte	0x50
 2044 00c5 04000000 		.4byte	.LVL20
 2045 00c9 10000000 		.4byte	.LVL22
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 53


 2046 00cd 0100     		.2byte	0x1
 2047 00cf 50       		.byte	0x50
 2048 00d0 00000000 		.4byte	0
 2049 00d4 00000000 		.4byte	0
 2050              	.LLST6:
 2051 00d8 0C000000 		.4byte	.LVL21
 2052 00dc 10000000 		.4byte	.LVL22
 2053 00e0 0100     		.2byte	0x1
 2054 00e2 52       		.byte	0x52
 2055 00e3 10000000 		.4byte	.LVL22
 2056 00e7 18000000 		.4byte	.LFE4
 2057 00eb 0100     		.2byte	0x1
 2058 00ed 50       		.byte	0x50
 2059 00ee 00000000 		.4byte	0
 2060 00f2 00000000 		.4byte	0
 2061              	.LLST7:
 2062 00f6 00000000 		.4byte	.LVL23
 2063 00fa 1C000000 		.4byte	.LVL26
 2064 00fe 0100     		.2byte	0x1
 2065 0100 50       		.byte	0x50
 2066 0101 1C000000 		.4byte	.LVL26
 2067 0105 24000000 		.4byte	.LVL28
 2068 0109 0400     		.2byte	0x4
 2069 010b F3       		.byte	0xf3
 2070 010c 01       		.uleb128 0x1
 2071 010d 50       		.byte	0x50
 2072 010e 9F       		.byte	0x9f
 2073 010f 24000000 		.4byte	.LVL28
 2074 0113 26000000 		.4byte	.LVL29
 2075 0117 0100     		.2byte	0x1
 2076 0119 50       		.byte	0x50
 2077 011a 26000000 		.4byte	.LVL29
 2078 011e 38000000 		.4byte	.LFE5
 2079 0122 0400     		.2byte	0x4
 2080 0124 F3       		.byte	0xf3
 2081 0125 01       		.uleb128 0x1
 2082 0126 50       		.byte	0x50
 2083 0127 9F       		.byte	0x9f
 2084 0128 00000000 		.4byte	0
 2085 012c 00000000 		.4byte	0
 2086              	.LLST8:
 2087 0130 16000000 		.4byte	.LVL24
 2088 0134 1A000000 		.4byte	.LVL25
 2089 0138 0300     		.2byte	0x3
 2090 013a 08       		.byte	0x8
 2091 013b 42       		.byte	0x42
 2092 013c 9F       		.byte	0x9f
 2093 013d 1A000000 		.4byte	.LVL25
 2094 0141 24000000 		.4byte	.LVL28
 2095 0145 0300     		.2byte	0x3
 2096 0147 09       		.byte	0x9
 2097 0148 C2       		.byte	0xc2
 2098 0149 9F       		.byte	0x9f
 2099 014a 26000000 		.4byte	.LVL29
 2100 014e 2F000000 		.4byte	.LVL30-1
 2101 0152 0100     		.2byte	0x1
 2102 0154 52       		.byte	0x52
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 54


 2103 0155 00000000 		.4byte	0
 2104 0159 00000000 		.4byte	0
 2105              	.LLST9:
 2106 015d 00000000 		.4byte	.LVL34
 2107 0161 14000000 		.4byte	.LVL36
 2108 0165 0100     		.2byte	0x1
 2109 0167 50       		.byte	0x50
 2110 0168 14000000 		.4byte	.LVL36
 2111 016c 24000000 		.4byte	.LFE8
 2112 0170 0400     		.2byte	0x4
 2113 0172 F3       		.byte	0xf3
 2114 0173 01       		.uleb128 0x1
 2115 0174 50       		.byte	0x50
 2116 0175 9F       		.byte	0x9f
 2117 0176 00000000 		.4byte	0
 2118 017a 00000000 		.4byte	0
 2119              	.LLST10:
 2120 017e 06000000 		.4byte	.LVL35
 2121 0182 17000000 		.4byte	.LVL37-1
 2122 0186 0500     		.2byte	0x5
 2123 0188 73       		.byte	0x73
 2124 0189 00       		.sleb128 0
 2125 018a 31       		.byte	0x31
 2126 018b 1A       		.byte	0x1a
 2127 018c 9F       		.byte	0x9f
 2128 018d 00000000 		.4byte	0
 2129 0191 00000000 		.4byte	0
 2130              	.LLST11:
 2131 0195 04000000 		.4byte	.LVL38
 2132 0199 0A000000 		.4byte	.LVL39
 2133 019d 0100     		.2byte	0x1
 2134 019f 50       		.byte	0x50
 2135 01a0 00000000 		.4byte	0
 2136 01a4 00000000 		.4byte	0
 2137              	.LLST12:
 2138 01a8 00000000 		.4byte	.LVL41
 2139 01ac 04000000 		.4byte	.LVL42
 2140 01b0 0100     		.2byte	0x1
 2141 01b2 50       		.byte	0x50
 2142 01b3 04000000 		.4byte	.LVL42
 2143 01b7 10000000 		.4byte	.LFE13
 2144 01bb 0400     		.2byte	0x4
 2145 01bd F3       		.byte	0xf3
 2146 01be 01       		.uleb128 0x1
 2147 01bf 50       		.byte	0x50
 2148 01c0 9F       		.byte	0x9f
 2149 01c1 00000000 		.4byte	0
 2150 01c5 00000000 		.4byte	0
 2151              	.LLST13:
 2152 01c9 00000000 		.4byte	.LVL44
 2153 01cd 20000000 		.4byte	.LVL48
 2154 01d1 0100     		.2byte	0x1
 2155 01d3 50       		.byte	0x50
 2156 01d4 20000000 		.4byte	.LVL48
 2157 01d8 22000000 		.4byte	.LVL49
 2158 01dc 0400     		.2byte	0x4
 2159 01de F3       		.byte	0xf3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 55


 2160 01df 01       		.uleb128 0x1
 2161 01e0 50       		.byte	0x50
 2162 01e1 9F       		.byte	0x9f
 2163 01e2 22000000 		.4byte	.LVL49
 2164 01e6 44000000 		.4byte	.LVL50
 2165 01ea 0100     		.2byte	0x1
 2166 01ec 50       		.byte	0x50
 2167 01ed 00000000 		.4byte	0
 2168 01f1 00000000 		.4byte	0
 2169              	.LLST14:
 2170 01f5 44000000 		.4byte	.LVL50
 2171 01f9 46000000 		.4byte	.LVL51
 2172 01fd 0100     		.2byte	0x1
 2173 01ff 50       		.byte	0x50
 2174 0200 46000000 		.4byte	.LVL51
 2175 0204 54000000 		.4byte	.LFE15
 2176 0208 0600     		.2byte	0x6
 2177 020a 72       		.byte	0x72
 2178 020b 00       		.sleb128 0
 2179 020c 73       		.byte	0x73
 2180 020d 00       		.sleb128 0
 2181 020e 1B       		.byte	0x1b
 2182 020f 9F       		.byte	0x9f
 2183 0210 00000000 		.4byte	0
 2184 0214 00000000 		.4byte	0
 2185              	.LLST15:
 2186 0218 14000000 		.4byte	.LVL45
 2187 021c 16000000 		.4byte	.LVL46
 2188 0220 0100     		.2byte	0x1
 2189 0222 53       		.byte	0x53
 2190 0223 1A000000 		.4byte	.LVL47
 2191 0227 54000000 		.4byte	.LFE15
 2192 022b 0100     		.2byte	0x1
 2193 022d 53       		.byte	0x53
 2194 022e 00000000 		.4byte	0
 2195 0232 00000000 		.4byte	0
 2196              	.LLST16:
 2197 0236 00000000 		.4byte	.LVL52
 2198 023a 20000000 		.4byte	.LVL56
 2199 023e 0100     		.2byte	0x1
 2200 0240 50       		.byte	0x50
 2201 0241 20000000 		.4byte	.LVL56
 2202 0245 28000000 		.4byte	.LVL57
 2203 0249 0600     		.2byte	0x6
 2204 024b 70       		.byte	0x70
 2205 024c 00       		.sleb128 0
 2206 024d 73       		.byte	0x73
 2207 024e 00       		.sleb128 0
 2208 024f 1C       		.byte	0x1c
 2209 0250 9F       		.byte	0x9f
 2210 0251 00000000 		.4byte	0
 2211 0255 00000000 		.4byte	0
 2212              	.LLST17:
 2213 0259 16000000 		.4byte	.LVL53
 2214 025d 18000000 		.4byte	.LVL54
 2215 0261 0100     		.2byte	0x1
 2216 0263 52       		.byte	0x52
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 56


 2217 0264 1C000000 		.4byte	.LVL55
 2218 0268 35000000 		.4byte	.LVL58-1
 2219 026c 0100     		.2byte	0x1
 2220 026e 52       		.byte	0x52
 2221 026f 00000000 		.4byte	0
 2222 0273 00000000 		.4byte	0
 2223              	.LLST18:
 2224 0277 00000000 		.4byte	.LVL59
 2225 027b 22000000 		.4byte	.LVL63
 2226 027f 0100     		.2byte	0x1
 2227 0281 50       		.byte	0x50
 2228 0282 22000000 		.4byte	.LVL63
 2229 0286 24000000 		.4byte	.LVL64
 2230 028a 0100     		.2byte	0x1
 2231 028c 50       		.byte	0x50
 2232 028d 00000000 		.4byte	0
 2233 0291 00000000 		.4byte	0
 2234              	.LLST19:
 2235 0295 16000000 		.4byte	.LVL60
 2236 0299 18000000 		.4byte	.LVL61
 2237 029d 0100     		.2byte	0x1
 2238 029f 55       		.byte	0x55
 2239 02a0 1C000000 		.4byte	.LVL62
 2240 02a4 40000000 		.4byte	.LVL69
 2241 02a8 0100     		.2byte	0x1
 2242 02aa 55       		.byte	0x55
 2243 02ab 00000000 		.4byte	0
 2244 02af 00000000 		.4byte	0
 2245              		.section	.debug_aranges,"",%progbits
 2246 0000 A4000000 		.4byte	0xa4
 2247 0004 0200     		.2byte	0x2
 2248 0006 00000000 		.4byte	.Ldebug_info0
 2249 000a 04       		.byte	0x4
 2250 000b 00       		.byte	0
 2251 000c 0000     		.2byte	0
 2252 000e 0000     		.2byte	0
 2253 0010 00000000 		.4byte	.LFB12
 2254 0014 5C000000 		.4byte	.LFE12-.LFB12
 2255 0018 00000000 		.4byte	.LFB2
 2256 001c 74000000 		.4byte	.LFE2-.LFB2
 2257 0020 00000000 		.4byte	.LFB3
 2258 0024 34000000 		.4byte	.LFE3-.LFB3
 2259 0028 00000000 		.4byte	.LFB4
 2260 002c 18000000 		.4byte	.LFE4-.LFB4
 2261 0030 00000000 		.4byte	.LFB5
 2262 0034 38000000 		.4byte	.LFE5-.LFB5
 2263 0038 00000000 		.4byte	.LFB1
 2264 003c 24000000 		.4byte	.LFE1-.LFB1
 2265 0040 00000000 		.4byte	.LFB0
 2266 0044 1C000000 		.4byte	.LFE0-.LFB0
 2267 0048 00000000 		.4byte	.LFB6
 2268 004c 10000000 		.4byte	.LFE6-.LFB6
 2269 0050 00000000 		.4byte	.LFB7
 2270 0054 10000000 		.4byte	.LFE7-.LFB7
 2271 0058 00000000 		.4byte	.LFB8
 2272 005c 24000000 		.4byte	.LFE8-.LFB8
 2273 0060 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 57


 2274 0064 18000000 		.4byte	.LFE9-.LFB9
 2275 0068 00000000 		.4byte	.LFB10
 2276 006c 18000000 		.4byte	.LFE10-.LFB10
 2277 0070 00000000 		.4byte	.LFB11
 2278 0074 0C000000 		.4byte	.LFE11-.LFB11
 2279 0078 00000000 		.4byte	.LFB13
 2280 007c 10000000 		.4byte	.LFE13-.LFB13
 2281 0080 00000000 		.4byte	.LFB14
 2282 0084 0C000000 		.4byte	.LFE14-.LFB14
 2283 0088 00000000 		.4byte	.LFB15
 2284 008c 54000000 		.4byte	.LFE15-.LFB15
 2285 0090 00000000 		.4byte	.LFB16
 2286 0094 48000000 		.4byte	.LFE16-.LFB16
 2287 0098 00000000 		.4byte	.LFB17
 2288 009c 50000000 		.4byte	.LFE17-.LFB17
 2289 00a0 00000000 		.4byte	0
 2290 00a4 00000000 		.4byte	0
 2291              		.section	.debug_ranges,"",%progbits
 2292              	.Ldebug_ranges0:
 2293 0000 00000000 		.4byte	.LFB12
 2294 0004 5C000000 		.4byte	.LFE12
 2295 0008 00000000 		.4byte	.LFB2
 2296 000c 74000000 		.4byte	.LFE2
 2297 0010 00000000 		.4byte	.LFB3
 2298 0014 34000000 		.4byte	.LFE3
 2299 0018 00000000 		.4byte	.LFB4
 2300 001c 18000000 		.4byte	.LFE4
 2301 0020 00000000 		.4byte	.LFB5
 2302 0024 38000000 		.4byte	.LFE5
 2303 0028 00000000 		.4byte	.LFB1
 2304 002c 24000000 		.4byte	.LFE1
 2305 0030 00000000 		.4byte	.LFB0
 2306 0034 1C000000 		.4byte	.LFE0
 2307 0038 00000000 		.4byte	.LFB6
 2308 003c 10000000 		.4byte	.LFE6
 2309 0040 00000000 		.4byte	.LFB7
 2310 0044 10000000 		.4byte	.LFE7
 2311 0048 00000000 		.4byte	.LFB8
 2312 004c 24000000 		.4byte	.LFE8
 2313 0050 00000000 		.4byte	.LFB9
 2314 0054 18000000 		.4byte	.LFE9
 2315 0058 00000000 		.4byte	.LFB10
 2316 005c 18000000 		.4byte	.LFE10
 2317 0060 00000000 		.4byte	.LFB11
 2318 0064 0C000000 		.4byte	.LFE11
 2319 0068 00000000 		.4byte	.LFB13
 2320 006c 10000000 		.4byte	.LFE13
 2321 0070 00000000 		.4byte	.LFB14
 2322 0074 0C000000 		.4byte	.LFE14
 2323 0078 00000000 		.4byte	.LFB15
 2324 007c 54000000 		.4byte	.LFE15
 2325 0080 00000000 		.4byte	.LFB16
 2326 0084 48000000 		.4byte	.LFE16
 2327 0088 00000000 		.4byte	.LFB17
 2328 008c 50000000 		.4byte	.LFE17
 2329 0090 00000000 		.4byte	0
 2330 0094 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 58


 2331              		.section	.debug_line,"",%progbits
 2332              	.Ldebug_line0:
 2333 0000 02020000 		.section	.debug_str,"MS",%progbits,1
 2333      02005500 
 2333      00000201 
 2333      FB0E0D00 
 2333      01010101 
 2334              	.LASF12:
 2335 0000 75696E74 		.ascii	"uint16\000"
 2335      313600
 2336              	.LASF42:
 2337 0007 61646347 		.ascii	"adcGain\000"
 2337      61696E00 
 2338              	.LASF65:
 2339 000f 43794578 		.ascii	"CyExitCriticalSection\000"
 2339      69744372 
 2339      69746963 
 2339      616C5365 
 2339      6374696F 
 2340              	.LASF58:
 2341 0025 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2341      4320342E 
 2341      382E3420 
 2341      32303134 
 2341      30353236 
 2342 0058 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2342      20726576 
 2342      6973696F 
 2342      6E203231 
 2342      31333538 
 2343 008b 67202D66 		.ascii	"g -ffunction-sections\000"
 2343      66756E63 
 2343      74696F6E 
 2343      2D736563 
 2343      74696F6E 
 2344              	.LASF22:
 2345 00a1 636F756E 		.ascii	"counts\000"
 2345      747300
 2346              	.LASF55:
 2347 00a8 5450535F 		.ascii	"TPS_ADC_SAR_shift\000"
 2347      4144435F 
 2347      5341525F 
 2347      73686966 
 2347      7400
 2348              	.LASF8:
 2349 00ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 2349      206C6F6E 
 2349      6720756E 
 2349      7369676E 
 2349      65642069 
 2350              	.LASF7:
 2351 00d1 6C6F6E67 		.ascii	"long long int\000"
 2351      206C6F6E 
 2351      6720696E 
 2351      7400
 2352              	.LASF1:
 2353 00df 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 59


 2353      65642063 
 2353      68617200 
 2354              	.LASF15:
 2355 00eb 696E7433 		.ascii	"int32\000"
 2355      3200
 2356              	.LASF5:
 2357 00f1 6C6F6E67 		.ascii	"long int\000"
 2357      20696E74 
 2357      00
 2358              	.LASF21:
 2359 00fa 72656731 		.ascii	"reg16\000"
 2359      3600
 2360              	.LASF11:
 2361 0100 75696E74 		.ascii	"uint8\000"
 2361      3800
 2362              	.LASF57:
 2363 0106 43794465 		.ascii	"CyDelayUs\000"
 2363      6C617955 
 2363      7300
 2364              	.LASF18:
 2365 0110 646F7562 		.ascii	"double\000"
 2365      6C6500
 2366              	.LASF54:
 2367 0117 5450535F 		.ascii	"TPS_ADC_SAR_countsPer10Volt\000"
 2367      4144435F 
 2367      5341525F 
 2367      636F756E 
 2367      74735065 
 2368              	.LASF47:
 2369 0133 636F756E 		.ascii	"countsPer10Volt\000"
 2369      74735065 
 2369      72313056 
 2369      6F6C7400 
 2370              	.LASF35:
 2371 0143 7265744D 		.ascii	"retMode\000"
 2371      6F646500 
 2372              	.LASF0:
 2373 014b 756E7369 		.ascii	"unsigned int\000"
 2373      676E6564 
 2373      20696E74 
 2373      00
 2374              	.LASF63:
 2375 0158 75566F6C 		.ascii	"uVolts\000"
 2375      747300
 2376              	.LASF62:
 2377 015f 5450535F 		.ascii	"TPS_ADC_SAR_GetResult8\000"
 2377      4144435F 
 2377      5341525F 
 2377      47657452 
 2377      6573756C 
 2378              	.LASF6:
 2379 0176 6C6F6E67 		.ascii	"long unsigned int\000"
 2379      20756E73 
 2379      69676E65 
 2379      6420696E 
 2379      7400
 2380              	.LASF50:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 60


 2381 0188 766F6C74 		.ascii	"volts\000"
 2381      7300
 2382              	.LASF31:
 2383 018e 5450535F 		.ascii	"TPS_ADC_SAR_Init\000"
 2383      4144435F 
 2383      5341525F 
 2383      496E6974 
 2383      00
 2384              	.LASF39:
 2385 019f 5450535F 		.ascii	"TPS_ADC_SAR_SetOffset\000"
 2385      4144435F 
 2385      5341525F 
 2385      5365744F 
 2385      66667365 
 2386              	.LASF64:
 2387 01b5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2387      74657243 
 2387      72697469 
 2387      63616C53 
 2387      65637469 
 2388              	.LASF4:
 2389 01cc 73686F72 		.ascii	"short unsigned int\000"
 2389      7420756E 
 2389      7369676E 
 2389      65642069 
 2389      6E7400
 2390              	.LASF13:
 2391 01df 696E7438 		.ascii	"int8\000"
 2391      00
 2392              	.LASF46:
 2393 01e4 6D566F6C 		.ascii	"mVolts\000"
 2393      747300
 2394              	.LASF27:
 2395 01eb 5450535F 		.ascii	"TPS_ADC_SAR_SetPower\000"
 2395      4144435F 
 2395      5341525F 
 2395      53657450 
 2395      6F776572 
 2396              	.LASF52:
 2397 0200 5450535F 		.ascii	"TPS_ADC_SAR_offset\000"
 2397      4144435F 
 2397      5341525F 
 2397      6F666673 
 2397      657400
 2398              	.LASF16:
 2399 0213 666C6F61 		.ascii	"float32\000"
 2399      74333200 
 2400              	.LASF9:
 2401 021b 73697A65 		.ascii	"sizetype\000"
 2401      74797065 
 2401      00
 2402              	.LASF59:
 2403 0224 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\TPS_ADC_SAR.c\000"
 2403      6E657261 
 2403      7465645F 
 2403      536F7572 
 2403      63655C50 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 61


 2404              	.LASF49:
 2405 024b 5450535F 		.ascii	"TPS_ADC_SAR_CountsTo_Volts\000"
 2405      4144435F 
 2405      5341525F 
 2405      436F756E 
 2405      7473546F 
 2406              	.LASF38:
 2407 0266 5450535F 		.ascii	"TPS_ADC_SAR_GetResult16\000"
 2407      4144435F 
 2407      5341525F 
 2407      47657452 
 2407      6573756C 
 2408              	.LASF19:
 2409 027e 696E7436 		.ascii	"int64\000"
 2409      3400
 2410              	.LASF17:
 2411 0284 666C6F61 		.ascii	"float\000"
 2411      7400
 2412              	.LASF61:
 2413 028a 5450535F 		.ascii	"TPS_ADC_SAR_CalcGain\000"
 2413      4144435F 
 2413      5341525F 
 2413      43616C63 
 2413      4761696E 
 2414              	.LASF37:
 2415 029f 5450535F 		.ascii	"TPS_ADC_SAR_IsEndConversion\000"
 2415      4144435F 
 2415      5341525F 
 2415      4973456E 
 2415      64436F6E 
 2416              	.LASF29:
 2417 02bb 706F7765 		.ascii	"power\000"
 2417      7200
 2418              	.LASF20:
 2419 02c1 72656738 		.ascii	"reg8\000"
 2419      00
 2420              	.LASF53:
 2421 02c6 5450535F 		.ascii	"TPS_ADC_SAR_countsPerVolt\000"
 2421      4144435F 
 2421      5341525F 
 2421      636F756E 
 2421      74735065 
 2422              	.LASF56:
 2423 02e0 43794861 		.ascii	"CyHalt\000"
 2423      6C7400
 2424              	.LASF2:
 2425 02e7 756E7369 		.ascii	"unsigned char\000"
 2425      676E6564 
 2425      20636861 
 2425      7200
 2426              	.LASF32:
 2427 02f5 5450535F 		.ascii	"TPS_ADC_SAR_Start\000"
 2427      4144435F 
 2427      5341525F 
 2427      53746172 
 2427      7400
 2428              	.LASF3:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 62


 2429 0307 73686F72 		.ascii	"short int\000"
 2429      7420696E 
 2429      7400
 2430              	.LASF60:
 2431 0311 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 2431      73657273 
 2431      5C6D6974 
 2431      6368656C 
 2431      6C5C446F 
 2432 033e 2D546872 		.ascii	"-Throttle\\E-Throttle-Mainboard-Deprecated.cydsn\000"
 2432      6F74746C 
 2432      655C452D 
 2432      5468726F 
 2432      74746C65 
 2433              	.LASF30:
 2434 036e 5450535F 		.ascii	"TPS_ADC_SAR_SetResolution\000"
 2434      4144435F 
 2434      5341525F 
 2434      53657452 
 2434      65736F6C 
 2435              	.LASF33:
 2436 0388 5450535F 		.ascii	"TPS_ADC_SAR_StartConvert\000"
 2436      4144435F 
 2436      5341525F 
 2436      53746172 
 2436      74436F6E 
 2437              	.LASF28:
 2438 03a1 7265736F 		.ascii	"resolution\000"
 2438      6C757469 
 2438      6F6E00
 2439              	.LASF41:
 2440 03ac 5450535F 		.ascii	"TPS_ADC_SAR_SetGain\000"
 2440      4144435F 
 2440      5341525F 
 2440      53657447 
 2440      61696E00 
 2441              	.LASF51:
 2442 03c0 5450535F 		.ascii	"TPS_ADC_SAR_initVar\000"
 2442      4144435F 
 2442      5341525F 
 2442      696E6974 
 2442      56617200 
 2443              	.LASF10:
 2444 03d4 63686172 		.ascii	"char\000"
 2444      00
 2445              	.LASF40:
 2446 03d9 6F666673 		.ascii	"offset\000"
 2446      657400
 2447              	.LASF45:
 2448 03e0 61646343 		.ascii	"adcCounts\000"
 2448      6F756E74 
 2448      7300
 2449              	.LASF43:
 2450 03ea 5450535F 		.ascii	"TPS_ADC_SAR_SetScaledGain\000"
 2450      4144435F 
 2450      5341525F 
 2450      53657453 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccejfoB5.s 			page 63


 2450      63616C65 
 2451              	.LASF24:
 2452 0404 656E6162 		.ascii	"enableInterrupts\000"
 2452      6C65496E 
 2452      74657272 
 2452      75707473 
 2452      00
 2453              	.LASF48:
 2454 0415 5450535F 		.ascii	"TPS_ADC_SAR_CountsTo_uVolts\000"
 2454      4144435F 
 2454      5341525F 
 2454      436F756E 
 2454      7473546F 
 2455              	.LASF36:
 2456 0431 73746174 		.ascii	"status\000"
 2456      757300
 2457              	.LASF14:
 2458 0438 696E7431 		.ascii	"int16\000"
 2458      3600
 2459              	.LASF34:
 2460 043e 5450535F 		.ascii	"TPS_ADC_SAR_StopConvert\000"
 2460      4144435F 
 2460      5341525F 
 2460      53746F70 
 2460      436F6E76 
 2461              	.LASF26:
 2462 0456 5450535F 		.ascii	"TPS_ADC_SAR_Stop\000"
 2462      4144435F 
 2462      5341525F 
 2462      53746F70 
 2462      00
 2463              	.LASF23:
 2464 0467 746D7052 		.ascii	"tmpReg\000"
 2464      656700
 2465              	.LASF25:
 2466 046e 5450535F 		.ascii	"TPS_ADC_SAR_Enable\000"
 2466      4144435F 
 2466      5341525F 
 2466      456E6162 
 2466      6C6500
 2467              	.LASF44:
 2468 0481 5450535F 		.ascii	"TPS_ADC_SAR_CountsTo_mVolts\000"
 2468      4144435F 
 2468      5341525F 
 2468      436F756E 
 2468      7473546F 
 2469              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
