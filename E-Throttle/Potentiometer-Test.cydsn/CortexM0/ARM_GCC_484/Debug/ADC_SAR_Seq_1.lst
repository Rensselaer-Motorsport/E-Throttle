ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_SAR_Seq_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_SAR_Seq_1_Init, %function
  23              	ADC_SAR_Seq_1_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 2


  33:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000100u };
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 3


  90:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 70B5     		push	{r4, r5, r6, lr}
  29              		.cfi_def_cfa_offset 16
  30              		.cfi_offset 4, -16
  31              		.cfi_offset 5, -12
  32              		.cfi_offset 6, -8
  33              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 4


 139:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  34              		.loc 1 172 0
  35 0002 0E20     		mov	r0, #14
  36 0004 0321     		mov	r1, #3
  37 0006 FFF7FEFF 		bl	CyIntSetPriority
  38              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  39              		.loc 1 173 0
  40 000a 0E20     		mov	r0, #14
  41 000c 2149     		ldr	r1, .L6
  42 000e FFF7FEFF 		bl	CyIntSetVector
  43              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  44              		.loc 1 177 0
  45 0012 0122     		mov	r2, #1
  46 0014 204B     		ldr	r3, .L6+4
  47 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  48              		.loc 1 178 0
  49 0018 204B     		ldr	r3, .L6+8
  50 001a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 5


 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  51              		.loc 1 180 0
  52 001c 204B     		ldr	r3, .L6+12
  53 001e 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  54              		.loc 1 178 0
  55 0020 002B     		cmp	r3, #0
  56 0022 01DA     		bge	.L5
  57 0024 1F4B     		ldr	r3, .L6+16
  58 0026 00E0     		b	.L2
  59              	.L5:
  60 0028 1F4B     		ldr	r3, .L6+20
  61              	.L2:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  62              		.loc 1 178 0 is_stmt 0 discriminator 3
  63 002a 1A43     		orr	r2, r3
  64 002c 1B4B     		ldr	r3, .L6+8
  65 002e 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 3
  67 0030 1E4A     		ldr	r2, .L6+24
  68 0032 1F4B     		ldr	r3, .L6+28
  69 0034 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 3
  71 0036 1F4A     		ldr	r2, .L6+32
  72 0038 1F4B     		ldr	r3, .L6+36
  73 003a 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 3
  75 003c 0023     		mov	r3, #0
  76 003e 1F4A     		ldr	r2, .L6+40
  77 0040 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 3
  79 0042 1F4A     		ldr	r2, .L6+44
  80 0044 1F49     		ldr	r1, .L6+48
  81 0046 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 3
  83 0048 1F49     		ldr	r1, .L6+52
  84 004a 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  85              		.loc 1 197 0 discriminator 3
  86 004c 1F4A     		ldr	r2, .L6+56
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 6


  87 004e 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  88              		.loc 1 198 0 discriminator 3
  89 0050 1F4A     		ldr	r2, .L6+60
  90 0052 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  91              		.loc 1 199 0 discriminator 3
  92 0054 0122     		mov	r2, #1
  93 0056 1F4B     		ldr	r3, .L6+64
  94 0058 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
  95              		.loc 1 202 0 discriminator 3
  96 005a 0221     		mov	r1, #2
  97 005c 1E4B     		ldr	r3, .L6+68
  98 005e 1960     		str	r1, [r3]
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
  99              		.loc 1 206 0 discriminator 3
 100 0060 1E4B     		ldr	r3, .L6+72
 101 0062 1868     		ldr	r0, [r3]
 102              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 103              		.loc 1 207 0 discriminator 3
 104 0064 1E49     		ldr	r1, .L6+76
 105 0066 0140     		and	r1, r0
 106              	.LVL3:
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 107              		.loc 1 213 0 discriminator 3
 108 0068 0A43     		orr	r2, r1
 109              	.LVL4:
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 110              		.loc 1 226 0 discriminator 3
 111 006a 1A60     		str	r2, [r3]
 112              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 7


 229:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 113              		.loc 1 232 0 discriminator 3
 114 006c 0023     		mov	r3, #0
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 115              		.loc 1 253 0 discriminator 3
 116 006e 8024     		mov	r4, #128
 117 0070 6400     		lsl	r4, r4, #1
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 8


 281:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 118              		.loc 1 307 0 discriminator 3
 119 0072 0020     		mov	r0, #0
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 120              		.loc 1 311 0 discriminator 3
 121 0074 1B49     		ldr	r1, .L6+80
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 122              		.loc 1 232 0 discriminator 3
 123 0076 09E0     		b	.L3
 124              	.LVL6:
 125              	.L4:
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 126              		.loc 1 253 0
 127 0078 9A00     		lsl	r2, r3, #2
 128 007a 1B4E     		ldr	r6, .L6+84
 129 007c 9519     		add	r5, r2, r6
 130 007e 2C60     		str	r4, [r5]
 131              	.LVL7:
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 132              		.loc 1 307 0
 133 0080 5D00     		lsl	r5, r3, #1
 134 0082 1A4E     		ldr	r6, .L6+88
 135 0084 A853     		strh	r0, [r5, r6]
 136              		.loc 1 311 0
 137 0086 1A4D     		ldr	r5, .L6+92
 138 0088 5151     		str	r1, [r2, r5]
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 139              		.loc 1 232 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 9


 140 008a 0133     		add	r3, r3, #1
 141              	.LVL8:
 142              	.L3:
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 143              		.loc 1 232 0 is_stmt 0 discriminator 1
 144 008c 002B     		cmp	r3, #0
 145 008e F3D0     		beq	.L4
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 146              		.loc 1 314 0 is_stmt 1
 147              		@ sp needed
 148 0090 70BD     		pop	{r4, r5, r6, pc}
 149              	.L7:
 150 0092 C046     		.align	2
 151              	.L6:
 152 0094 00000000 		.word	ADC_SAR_Seq_1_ISR
 153 0098 20001A40 		.word	1075445792
 154 009c 00001A40 		.word	1075445760
 155 00a0 80031A40 		.word	1075446656
 156 00a4 C0021051 		.word	1360003776
 157 00a8 C0020051 		.word	1358955200
 158 00ac 8C000080 		.word	-2147483508
 159 00b0 04001A40 		.word	1075445764
 160 00b4 0000FF07 		.word	134152192
 161 00b8 18001A40 		.word	1075445784
 162 00bc 1C001A40 		.word	1075445788
 163 00c0 04000400 		.word	262148
 164 00c4 10001A40 		.word	1075445776
 165 00c8 14001A40 		.word	1075445780
 166 00cc 28021A40 		.word	1075446312
 167 00d0 38021A40 		.word	1075446328
 168 00d4 18021A40 		.word	1075446296
 169 00d8 000F1A40 		.word	1075449600
 170 00dc 30001A40 		.word	1075445808
 171 00e0 FFFFFFDF 		.word	-536870913
 172 00e4 204E0000 		.word	20000
 173 00e8 80001A40 		.word	1075445888
 174 00ec 00000000 		.word	ADC_SAR_Seq_1_offset
 175 00f0 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 176              		.cfi_endproc
 177              	.LFE1:
 178              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 179              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 180              		.align	2
 181              		.global	ADC_SAR_Seq_1_Enable
 182              		.code	16
 183              		.thumb_func
 184              		.type	ADC_SAR_Seq_1_Enable, %function
 185              	ADC_SAR_Seq_1_Enable:
 186              	.LFB2:
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 10


 321:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 187              		.loc 1 331 0
 188              		.cfi_startproc
 189 0000 08B5     		push	{r3, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 193              		.loc 1 332 0
 194 0002 074B     		ldr	r3, .L10
 195 0004 1B68     		ldr	r3, [r3]
 196 0006 002B     		cmp	r3, #0
 197 0008 08DB     		blt	.L8
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 198              		.loc 1 342 0
 199 000a 054B     		ldr	r3, .L10
 200 000c 1968     		ldr	r1, [r3]
 201 000e 8022     		mov	r2, #128
 202 0010 1206     		lsl	r2, r2, #24
 203 0012 0A43     		orr	r2, r1
 204 0014 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 205              		.loc 1 345 0
 206 0016 0A20     		mov	r0, #10
 207 0018 FFF7FEFF 		bl	CyDelayUs
 208              	.LVL9:
 209              	.L8:
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 210              		.loc 1 347 0
 211              		@ sp needed
 212 001c 08BD     		pop	{r3, pc}
 213              	.L11:
 214 001e C046     		.align	2
 215              	.L10:
 216 0020 00001A40 		.word	1075445760
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 11


 217              		.cfi_endproc
 218              	.LFE2:
 219              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 220              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 221              		.align	2
 222              		.global	ADC_SAR_Seq_1_Start
 223              		.code	16
 224              		.thumb_func
 225              		.type	ADC_SAR_Seq_1_Start, %function
 226              	ADC_SAR_Seq_1_Start:
 227              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 228              		.loc 1 64 0
 229              		.cfi_startproc
 230 0000 08B5     		push	{r3, lr}
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
 234              		.loc 1 66 0
 235 0002 064B     		ldr	r3, .L14
 236 0004 1B78     		ldrb	r3, [r3]
 237 0006 002B     		cmp	r3, #0
 238 0008 04D1     		bne	.L13
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
 239              		.loc 1 68 0
 240 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 241              	.LVL10:
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 242              		.loc 1 69 0
 243 000e 0122     		mov	r2, #1
 244 0010 024B     		ldr	r3, .L14
 245 0012 1A70     		strb	r2, [r3]
 246              	.L13:
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
 247              		.loc 1 71 0
 248 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 249              	.LVL11:
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 250              		.loc 1 72 0
 251              		@ sp needed
 252 0018 08BD     		pop	{r3, pc}
 253              	.L15:
 254 001a C046     		.align	2
 255              	.L14:
 256 001c 00000000 		.word	.LANCHOR0
 257              		.cfi_endproc
 258              	.LFE0:
 259              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 260              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 261              		.align	2
 262              		.global	ADC_SAR_Seq_1_Stop
 263              		.code	16
 264              		.thumb_func
 265              		.type	ADC_SAR_Seq_1_Stop, %function
 266              	ADC_SAR_Seq_1_Stop:
 267              	.LFB3:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 12


 348:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 268              		.loc 1 366 0
 269              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 270              		.loc 1 367 0
 271 0000 024B     		ldr	r3, .L17
 272 0002 1A68     		ldr	r2, [r3]
 273 0004 5200     		lsl	r2, r2, #1
 274 0006 5208     		lsr	r2, r2, #1
 275 0008 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 276              		.loc 1 368 0
 277              		@ sp needed
 278 000a 7047     		bx	lr
 279              	.L18:
 280              		.align	2
 281              	.L17:
 282 000c 00001A40 		.word	1075445760
 283              		.cfi_endproc
 284              	.LFE3:
 285              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 286              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 287              		.align	2
 288              		.global	ADC_SAR_Seq_1_StartConvert
 289              		.code	16
 290              		.thumb_func
 291              		.type	ADC_SAR_Seq_1_StartConvert, %function
 292              	ADC_SAR_Seq_1_StartConvert:
 293              	.LFB4:
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 13


 379:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 294              		.loc 1 392 0
 295              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 296              		.loc 1 394 0
 297 0000 034B     		ldr	r3, .L20
 298 0002 1968     		ldr	r1, [r3]
 299 0004 8022     		mov	r2, #128
 300 0006 5202     		lsl	r2, r2, #9
 301 0008 0A43     		orr	r2, r1
 302 000a 1A60     		str	r2, [r3]
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 303              		.loc 1 399 0
 304              		@ sp needed
 305 000c 7047     		bx	lr
 306              	.L21:
 307 000e C046     		.align	2
 308              	.L20:
 309 0010 04001A40 		.word	1075445764
 310              		.cfi_endproc
 311              	.LFE4:
 312              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 313              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 314              		.align	2
 315              		.global	ADC_SAR_Seq_1_StopConvert
 316              		.code	16
 317              		.thumb_func
 318              		.type	ADC_SAR_Seq_1_StopConvert, %function
 319              	ADC_SAR_Seq_1_StopConvert:
 320              	.LFB5:
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 14


 409:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 321              		.loc 1 417 0
 322              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 323              		.loc 1 419 0
 324 0000 024B     		ldr	r3, .L23
 325 0002 1968     		ldr	r1, [r3]
 326 0004 024A     		ldr	r2, .L23+4
 327 0006 0A40     		and	r2, r1
 328 0008 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 329              		.loc 1 421 0
 330              		@ sp needed
 331 000a 7047     		bx	lr
 332              	.L24:
 333              		.align	2
 334              	.L23:
 335 000c 04001A40 		.word	1075445764
 336 0010 FFFFFEFF 		.word	-65537
 337              		.cfi_endproc
 338              	.LFE5:
 339              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 340              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 341              		.align	2
 342              		.global	ADC_SAR_Seq_1_IsEndConversion
 343              		.code	16
 344              		.thumb_func
 345              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 346              	ADC_SAR_Seq_1_IsEndConversion:
 347              	.LFB6:
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 15


 439:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 348              		.loc 1 451 0
 349              		.cfi_startproc
 350              	.LVL12:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 351              		.loc 1 454 0
 352 0000 8307     		lsl	r3, r0, #30
 353 0002 0ED0     		beq	.L29
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 354              		.loc 1 458 0 discriminator 1
 355 0004 084A     		ldr	r2, .L32
 356 0006 0123     		mov	r3, #1
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 357              		.loc 1 459 0 discriminator 1
 358 0008 0221     		mov	r1, #2
 359 000a 0140     		and	r1, r0
 360              	.LVL13:
 361              	.L30:
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 362              		.loc 1 458 0 discriminator 1
 363 000c 1068     		ldr	r0, [r2]
 364 000e 1840     		and	r0, r3
 365              	.LVL14:
 366              		.loc 1 459 0 discriminator 1
 367 0010 01D1     		bne	.L27
 368 0012 0029     		cmp	r1, #0
 369 0014 FAD1     		bne	.L30
 370              	.L27:
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 371              		.loc 1 461 0
 372 0016 0028     		cmp	r0, #0
 373 0018 04D0     		beq	.L26
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 374              		.loc 1 464 0
 375 001a 0122     		mov	r2, #1
 376 001c 024B     		ldr	r3, .L32
 377 001e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 16


 378 0020 00E0     		b	.L26
 379              	.LVL15:
 380              	.L29:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 381              		.loc 1 452 0
 382 0022 0020     		mov	r0, #0
 383              	.LVL16:
 384              	.L26:
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 385              		.loc 1 486 0
 386              		@ sp needed
 387 0024 7047     		bx	lr
 388              	.L33:
 389 0026 C046     		.align	2
 390              	.L32:
 391 0028 10021A40 		.word	1075446288
 392              		.cfi_endproc
 393              	.LFE6:
 394              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 395              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 396              		.align	2
 397              		.global	ADC_SAR_Seq_1_GetResult16
 398              		.code	16
 399              		.thumb_func
 400              		.type	ADC_SAR_Seq_1_GetResult16, %function
 401              	ADC_SAR_Seq_1_GetResult16:
 402              	.LFB7:
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 17


 496:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 403              		.loc 1 505 0
 404              		.cfi_startproc
 405              	.LVL17:
 406 0000 10B5     		push	{r4, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 4, -8
 409              		.cfi_offset 14, -4
 410 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 411              		.loc 1 509 0
 412 0004 02D0     		beq	.L35
 413              		.loc 1 509 0 is_stmt 0 discriminator 1
 414 0006 0020     		mov	r0, #0
 415              	.LVL18:
 416 0008 FFF7FEFF 		bl	CyHalt
 417              	.LVL19:
 418              	.L35:
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 419              		.loc 1 511 0 is_stmt 1
 420 000c 002C     		cmp	r4, #0
 421 000e 06D1     		bne	.L37
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 422              		.loc 1 513 0
 423 0010 A400     		lsl	r4, r4, #2
 424              	.LVL20:
 425 0012 044B     		ldr	r3, .L38
 426 0014 E418     		add	r4, r4, r3
 427 0016 2068     		ldr	r0, [r4]
 428 0018 0004     		lsl	r0, r0, #16
 429 001a 000C     		lsr	r0, r0, #16
 430              	.LVL21:
 431 001c 00E0     		b	.L36
 432              	.LVL22:
 433              	.L37:
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 18


 434              		.loc 1 521 0
 435 001e 0020     		mov	r0, #0
 436              	.LVL23:
 437              	.L36:
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 438              		.loc 1 525 0
 439 0020 00B2     		sxth	r0, r0
 440              	.LVL24:
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 441              		.loc 1 526 0
 442              		@ sp needed
 443 0022 10BD     		pop	{r4, pc}
 444              	.L39:
 445              		.align	2
 446              	.L38:
 447 0024 80011A40 		.word	1075446144
 448              		.cfi_endproc
 449              	.LFE7:
 450              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 451              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 452              		.align	2
 453              		.global	ADC_SAR_Seq_1_SetChanMask
 454              		.code	16
 455              		.thumb_func
 456              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 457              	ADC_SAR_Seq_1_SetChanMask:
 458              	.LFB8:
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 459              		.loc 1 550 0
 460              		.cfi_startproc
 461              	.LVL25:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 19


 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 462              		.loc 1 551 0
 463 0000 0123     		mov	r3, #1
 464 0002 1840     		and	r0, r3
 465              	.LVL26:
 466 0004 014B     		ldr	r3, .L41
 467 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 468              		.loc 1 552 0
 469              		@ sp needed
 470 0008 7047     		bx	lr
 471              	.L42:
 472 000a C046     		.align	2
 473              	.L41:
 474 000c 20001A40 		.word	1075445792
 475              		.cfi_endproc
 476              	.LFE8:
 477              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 478              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 479              		.align	2
 480              		.global	ADC_SAR_Seq_1_SetLowLimit
 481              		.code	16
 482              		.thumb_func
 483              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 484              	ADC_SAR_Seq_1_SetLowLimit:
 485              	.LFB9:
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 20


 584:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 486              		.loc 1 594 0
 487              		.cfi_startproc
 488              	.LVL27:
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 489              		.loc 1 595 0
 490 0000 054B     		ldr	r3, .L44
 491 0002 1A68     		ldr	r2, [r3]
 492 0004 120C     		lsr	r2, r2, #16
 493 0006 1204     		lsl	r2, r2, #16
 494 0008 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 495              		.loc 1 596 0
 496 000a 1A68     		ldr	r2, [r3]
 497 000c 0004     		lsl	r0, r0, #16
 498              	.LVL28:
 499 000e 000C     		lsr	r0, r0, #16
 500 0010 1043     		orr	r0, r2
 501 0012 1860     		str	r0, [r3]
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 502              		.loc 1 597 0
 503              		@ sp needed
 504 0014 7047     		bx	lr
 505              	.L45:
 506 0016 C046     		.align	2
 507              	.L44:
 508 0018 18001A40 		.word	1075445784
 509              		.cfi_endproc
 510              	.LFE9:
 511              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 512              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 513              		.align	2
 514              		.global	ADC_SAR_Seq_1_SetHighLimit
 515              		.code	16
 516              		.thumb_func
 517              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 518              	ADC_SAR_Seq_1_SetHighLimit:
 519              	.LFB10:
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 21


 607:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 520              		.loc 1 615 0
 521              		.cfi_startproc
 522              	.LVL29:
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 523              		.loc 1 616 0
 524 0000 044B     		ldr	r3, .L47
 525 0002 1A68     		ldr	r2, [r3]
 526 0004 1204     		lsl	r2, r2, #16
 527 0006 120C     		lsr	r2, r2, #16
 528 0008 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 529              		.loc 1 617 0
 530 000a 1A68     		ldr	r2, [r3]
 531 000c 0004     		lsl	r0, r0, #16
 532              	.LVL30:
 533 000e 1043     		orr	r0, r2
 534 0010 1860     		str	r0, [r3]
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 535              		.loc 1 618 0
 536              		@ sp needed
 537 0012 7047     		bx	lr
 538              	.L48:
 539              		.align	2
 540              	.L47:
 541 0014 18001A40 		.word	1075445784
 542              		.cfi_endproc
 543              	.LFE10:
 544              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 545              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 546              		.align	2
 547              		.global	ADC_SAR_Seq_1_SetLimitMask
 548              		.code	16
 549              		.thumb_func
 550              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 551              	ADC_SAR_Seq_1_SetLimitMask:
 552              	.LFB11:
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 22


 631:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 553              		.loc 1 639 0
 554              		.cfi_startproc
 555              	.LVL31:
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 556              		.loc 1 640 0
 557 0000 0123     		mov	r3, #1
 558 0002 1840     		and	r0, r3
 559              	.LVL32:
 560 0004 014B     		ldr	r3, .L50
 561 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 562              		.loc 1 641 0
 563              		@ sp needed
 564 0008 7047     		bx	lr
 565              	.L51:
 566 000a C046     		.align	2
 567              	.L50:
 568 000c 38021A40 		.word	1075446328
 569              		.cfi_endproc
 570              	.LFE11:
 571              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 572              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 573              		.align	2
 574              		.global	ADC_SAR_Seq_1_SetSatMask
 575              		.code	16
 576              		.thumb_func
 577              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 578              	ADC_SAR_Seq_1_SetSatMask:
 579              	.LFB12:
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 23


 661:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 580              		.loc 1 662 0
 581              		.cfi_startproc
 582              	.LVL33:
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 583              		.loc 1 663 0
 584 0000 0123     		mov	r3, #1
 585 0002 1840     		and	r0, r3
 586              	.LVL34:
 587 0004 014B     		ldr	r3, .L53
 588 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 589              		.loc 1 664 0
 590              		@ sp needed
 591 0008 7047     		bx	lr
 592              	.L54:
 593 000a C046     		.align	2
 594              	.L53:
 595 000c 28021A40 		.word	1075446312
 596              		.cfi_endproc
 597              	.LFE12:
 598              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 599              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 600              		.align	2
 601              		.global	ADC_SAR_Seq_1_SetOffset
 602              		.code	16
 603              		.thumb_func
 604              		.type	ADC_SAR_Seq_1_SetOffset, %function
 605              	ADC_SAR_Seq_1_SetOffset:
 606              	.LFB13:
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 24


 607              		.loc 1 690 0
 608              		.cfi_startproc
 609              	.LVL35:
 610 0000 38B5     		push	{r3, r4, r5, lr}
 611              		.cfi_def_cfa_offset 16
 612              		.cfi_offset 3, -16
 613              		.cfi_offset 4, -12
 614              		.cfi_offset 5, -8
 615              		.cfi_offset 14, -4
 616 0002 041C     		mov	r4, r0
 617 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 618              		.loc 1 692 0
 619 0006 0028     		cmp	r0, #0
 620 0008 02D0     		beq	.L56
 621              		.loc 1 692 0 is_stmt 0 discriminator 1
 622 000a 0020     		mov	r0, #0
 623              	.LVL36:
 624 000c FFF7FEFF 		bl	CyHalt
 625              	.LVL37:
 626              	.L56:
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 627              		.loc 1 694 0 is_stmt 1
 628 0010 6400     		lsl	r4, r4, #1
 629              	.LVL38:
 630 0012 014B     		ldr	r3, .L57
 631 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 632              		.loc 1 695 0
 633              		@ sp needed
 634 0016 38BD     		pop	{r3, r4, r5, pc}
 635              	.L58:
 636              		.align	2
 637              	.L57:
 638 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 639              		.cfi_endproc
 640              	.LFE13:
 641              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 642              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 643              		.align	2
 644              		.global	ADC_SAR_Seq_1_SetGain
 645              		.code	16
 646              		.thumb_func
 647              		.type	ADC_SAR_Seq_1_SetGain, %function
 648              	ADC_SAR_Seq_1_SetGain:
 649              	.LFB14:
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 25


 705:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 650              		.loc 1 724 0
 651              		.cfi_startproc
 652              	.LVL39:
 653 0000 38B5     		push	{r3, r4, r5, lr}
 654              		.cfi_def_cfa_offset 16
 655              		.cfi_offset 3, -16
 656              		.cfi_offset 4, -12
 657              		.cfi_offset 5, -8
 658              		.cfi_offset 14, -4
 659 0002 041C     		mov	r4, r0
 660 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 661              		.loc 1 726 0
 662 0006 0028     		cmp	r0, #0
 663 0008 02D0     		beq	.L60
 664              		.loc 1 726 0 is_stmt 0 discriminator 1
 665 000a 0020     		mov	r0, #0
 666              	.LVL40:
 667 000c FFF7FEFF 		bl	CyHalt
 668              	.LVL41:
 669              	.L60:
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 670              		.loc 1 728 0 is_stmt 1
 671 0010 A400     		lsl	r4, r4, #2
 672              	.LVL42:
 673 0012 014B     		ldr	r3, .L61
 674 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 675              		.loc 1 729 0
 676              		@ sp needed
 677              	.LVL43:
 678 0016 38BD     		pop	{r3, r4, r5, pc}
 679              	.L62:
 680              		.align	2
 681              	.L61:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 26


 682 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 683              		.cfi_endproc
 684              	.LFE14:
 685              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 686              		.global	__aeabi_idiv
 687              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 688              		.align	2
 689              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 690              		.code	16
 691              		.thumb_func
 692              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 693              	ADC_SAR_Seq_1_CountsTo_mVolts:
 694              	.LFB15:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 695              		.loc 1 757 0
 696              		.cfi_startproc
 697              	.LVL44:
 698 0000 38B5     		push	{r3, r4, r5, lr}
 699              		.cfi_def_cfa_offset 16
 700              		.cfi_offset 3, -16
 701              		.cfi_offset 4, -12
 702              		.cfi_offset 5, -8
 703              		.cfi_offset 14, -4
 704 0002 041C     		mov	r4, r0
 705 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 706              		.loc 1 761 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 27


 707 0006 0028     		cmp	r0, #0
 708 0008 02D0     		beq	.L64
 709              		.loc 1 761 0 is_stmt 0 discriminator 1
 710 000a 0020     		mov	r0, #0
 711              	.LVL45:
 712 000c FFF7FEFF 		bl	CyHalt
 713              	.LVL46:
 714              	.L64:
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 715              		.loc 1 772 0 is_stmt 1
 716 0010 6300     		lsl	r3, r4, #1
 717 0012 0F4A     		ldr	r2, .L67
 718 0014 995A     		ldrh	r1, [r3, r2]
 719 0016 691A     		sub	r1, r5, r1
 720 0018 09B2     		sxth	r1, r1
 721              	.LVL47:
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 722              		.loc 1 774 0
 723 001a 0E4B     		ldr	r3, .L67+4
 724 001c 4B43     		mul	r3, r1
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 725              		.loc 1 775 0
 726 001e 0029     		cmp	r1, #0
 727 0020 06DD     		ble	.L65
 728              		.loc 1 775 0 is_stmt 0 discriminator 1
 729 0022 A200     		lsl	r2, r4, #2
 730 0024 0C49     		ldr	r1, .L67+8
 731              	.LVL48:
 732 0026 5258     		ldr	r2, [r2, r1]
 733 0028 D00F     		lsr	r0, r2, #31
 734 002a 8018     		add	r0, r0, r2
 735 002c 4010     		asr	r0, r0, #1
 736 002e 06E0     		b	.L66
 737              	.LVL49:
 738              	.L65:
 739              		.loc 1 775 0 discriminator 2
 740 0030 A200     		lsl	r2, r4, #2
 741 0032 0949     		ldr	r1, .L67+8
 742              	.LVL50:
 743 0034 5258     		ldr	r2, [r2, r1]
 744 0036 D00F     		lsr	r0, r2, #31
 745 0038 8018     		add	r0, r0, r2
 746 003a 4010     		asr	r0, r0, #1
 747 003c 4042     		neg	r0, r0
 748              	.L66:
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 28


 749              		.loc 1 774 0 is_stmt 1
 750 003e 1818     		add	r0, r3, r0
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 751              		.loc 1 776 0
 752 0040 A400     		lsl	r4, r4, #2
 753              	.LVL51:
 754 0042 054B     		ldr	r3, .L67+8
 755 0044 E158     		ldr	r1, [r4, r3]
 756 0046 FFF7FEFF 		bl	__aeabi_idiv
 757              	.LVL52:
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 758              		.loc 1 778 0
 759 004a 00B2     		sxth	r0, r0
 760              	.LVL53:
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 761              		.loc 1 779 0
 762              		@ sp needed
 763 004c 38BD     		pop	{r3, r4, r5, pc}
 764              	.L68:
 765 004e C046     		.align	2
 766              	.L67:
 767 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 768 0054 10270000 		.word	10000
 769 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 770              		.cfi_endproc
 771              	.LFE15:
 772              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 773              		.global	__aeabi_lmul
 774              		.global	__aeabi_ldivmod
 775              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 776              		.align	2
 777              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 778              		.code	16
 779              		.thumb_func
 780              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 781              	ADC_SAR_Seq_1_CountsTo_uVolts:
 782              	.LFB16:
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 29


 799:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 783              		.loc 1 811 0
 784              		.cfi_startproc
 785              	.LVL54:
 786 0000 58B5     		push	{r3, r4, r6, lr}
 787              		.cfi_def_cfa_offset 16
 788              		.cfi_offset 3, -16
 789              		.cfi_offset 4, -12
 790              		.cfi_offset 6, -8
 791              		.cfi_offset 14, -4
 792 0002 061C     		mov	r6, r0
 793 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 794              		.loc 1 815 0
 795 0006 0028     		cmp	r0, #0
 796 0008 02D0     		beq	.L70
 797              		.loc 1 815 0 is_stmt 0 discriminator 1
 798 000a 0020     		mov	r0, #0
 799              	.LVL55:
 800 000c FFF7FEFF 		bl	CyHalt
 801              	.LVL56:
 802              	.L70:
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 803              		.loc 1 826 0 is_stmt 1
 804 0010 7200     		lsl	r2, r6, #1
 805 0012 0B4B     		ldr	r3, .L71+8
 806 0014 D05A     		ldrh	r0, [r2, r3]
 807 0016 201A     		sub	r0, r4, r0
 808 0018 00B2     		sxth	r0, r0
 809              	.LVL57:
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 30


 810              		.loc 1 828 0
 811 001a C117     		asr	r1, r0, #31
 812 001c 074B     		ldr	r3, .L71+4
 813 001e 064A     		ldr	r2, .L71
 814 0020 FFF7FEFF 		bl	__aeabi_lmul
 815              	.LVL58:
 816 0024 B600     		lsl	r6, r6, #2
 817              	.LVL59:
 818 0026 074B     		ldr	r3, .L71+12
 819 0028 F258     		ldr	r2, [r6, r3]
 820 002a D317     		asr	r3, r2, #31
 821 002c FFF7FEFF 		bl	__aeabi_ldivmod
 822              	.LVL60:
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 823              		.loc 1 831 0
 824              		@ sp needed
 825 0030 58BD     		pop	{r3, r4, r6, pc}
 826              	.L72:
 827 0032 C046C046 		.align	3
 827      C046
 828              	.L71:
 829 0038 80969800 		.word	10000000
 830 003c 00000000 		.word	0
 831 0040 00000000 		.word	ADC_SAR_Seq_1_offset
 832 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 833              		.cfi_endproc
 834              	.LFE16:
 835              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 836              		.global	__aeabi_i2f
 837              		.global	__aeabi_fmul
 838              		.global	__aeabi_fdiv
 839              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 840              		.align	2
 841              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 842              		.code	16
 843              		.thumb_func
 844              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 845              	ADC_SAR_Seq_1_CountsTo_Volts:
 846              	.LFB17:
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 31


 848:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 847              		.loc 1 856 0
 848              		.cfi_startproc
 849              	.LVL61:
 850 0000 38B5     		push	{r3, r4, r5, lr}
 851              		.cfi_def_cfa_offset 16
 852              		.cfi_offset 3, -16
 853              		.cfi_offset 4, -12
 854              		.cfi_offset 5, -8
 855              		.cfi_offset 14, -4
 856 0002 041C     		mov	r4, r0
 857 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 858              		.loc 1 860 0
 859 0006 0028     		cmp	r0, #0
 860 0008 02D0     		beq	.L74
 861              		.loc 1 860 0 is_stmt 0 discriminator 1
 862 000a 0020     		mov	r0, #0
 863              	.LVL62:
 864 000c FFF7FEFF 		bl	CyHalt
 865              	.LVL63:
 866              	.L74:
 861:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 867              		.loc 1 871 0 is_stmt 1
 868 0010 6200     		lsl	r2, r4, #1
 869 0012 0A4B     		ldr	r3, .L75
 870 0014 D05A     		ldrh	r0, [r2, r3]
 871 0016 2D1A     		sub	r5, r5, r0
 872 0018 28B2     		sxth	r0, r5
 873              	.LVL64:
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 874              		.loc 1 873 0
 875 001a FFF7FEFF 		bl	__aeabi_i2f
 876              	.LVL65:
 877 001e 0849     		ldr	r1, .L75+4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 32


 878 0020 FFF7FEFF 		bl	__aeabi_fmul
 879              	.LVL66:
 880 0024 051C     		add	r5, r0, #0
 881              	.LVL67:
 882 0026 A400     		lsl	r4, r4, #2
 883              	.LVL68:
 884 0028 064B     		ldr	r3, .L75+8
 885 002a E058     		ldr	r0, [r4, r3]
 886 002c FFF7FEFF 		bl	__aeabi_i2f
 887              	.LVL69:
 888 0030 011C     		add	r1, r0, #0
 889 0032 281C     		add	r0, r5, #0
 890 0034 FFF7FEFF 		bl	__aeabi_fdiv
 891              	.LVL70:
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 892              		.loc 1 876 0
 893              		@ sp needed
 894 0038 38BD     		pop	{r3, r4, r5, pc}
 895              	.L76:
 896 003a C046     		.align	2
 897              	.L75:
 898 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 899 0040 00002041 		.word	1092616192
 900 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 901              		.cfi_endproc
 902              	.LFE17:
 903              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 904              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 905              		.comm	ADC_SAR_Seq_1_offset,2,4
 906              		.global	ADC_SAR_Seq_1_initVar
 907              		.bss
 908              		.set	.LANCHOR0,. + 0
 909              		.type	ADC_SAR_Seq_1_initVar, %object
 910              		.size	ADC_SAR_Seq_1_initVar, 1
 911              	ADC_SAR_Seq_1_initVar:
 912 0000 00       		.space	1
 913              		.text
 914              	.Letext0:
 915              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 916              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 917              		.section	.debug_info,"",%progbits
 918              	.Ldebug_info0:
 919 0000 8A050000 		.4byte	0x58a
 920 0004 0400     		.2byte	0x4
 921 0006 00000000 		.4byte	.Ldebug_abbrev0
 922 000a 04       		.byte	0x4
 923 000b 01       		.uleb128 0x1
 924 000c 72000000 		.4byte	.LASF62
 925 0010 01       		.byte	0x1
 926 0011 DB020000 		.4byte	.LASF63
 927 0015 69010000 		.4byte	.LASF64
 928 0019 00000000 		.4byte	.Ldebug_ranges0+0
 929 001d 00000000 		.4byte	0
 930 0021 00000000 		.4byte	.Ldebug_line0
 931 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 33


 932 0026 01       		.byte	0x1
 933 0027 06       		.byte	0x6
 934 0028 42010000 		.4byte	.LASF0
 935 002c 02       		.uleb128 0x2
 936 002d 01       		.byte	0x1
 937 002e 08       		.byte	0x8
 938 002f AD030000 		.4byte	.LASF1
 939 0033 02       		.uleb128 0x2
 940 0034 02       		.byte	0x2
 941 0035 05       		.byte	0x5
 942 0036 BB030000 		.4byte	.LASF2
 943 003a 02       		.uleb128 0x2
 944 003b 02       		.byte	0x2
 945 003c 07       		.byte	0x7
 946 003d 8F020000 		.4byte	.LASF3
 947 0041 02       		.uleb128 0x2
 948 0042 04       		.byte	0x4
 949 0043 05       		.byte	0x5
 950 0044 F1010000 		.4byte	.LASF4
 951 0048 02       		.uleb128 0x2
 952 0049 04       		.byte	0x4
 953 004a 07       		.byte	0x7
 954 004b 6D020000 		.4byte	.LASF5
 955 004f 02       		.uleb128 0x2
 956 0050 08       		.byte	0x8
 957 0051 05       		.byte	0x5
 958 0052 34010000 		.4byte	.LASF6
 959 0056 02       		.uleb128 0x2
 960 0057 08       		.byte	0x8
 961 0058 07       		.byte	0x7
 962 0059 EE000000 		.4byte	.LASF7
 963 005d 03       		.uleb128 0x3
 964 005e 04       		.byte	0x4
 965 005f 05       		.byte	0x5
 966 0060 696E7400 		.ascii	"int\000"
 967 0064 02       		.uleb128 0x2
 968 0065 04       		.byte	0x4
 969 0066 07       		.byte	0x7
 970 0067 59020000 		.4byte	.LASF8
 971 006b 04       		.uleb128 0x4
 972 006c FA010000 		.4byte	.LASF9
 973 0070 02       		.byte	0x2
 974 0071 C1       		.byte	0xc1
 975 0072 2C000000 		.4byte	0x2c
 976 0076 04       		.uleb128 0x4
 977 0077 15000000 		.4byte	.LASF10
 978 007b 02       		.byte	0x2
 979 007c C2       		.byte	0xc2
 980 007d 3A000000 		.4byte	0x3a
 981 0081 04       		.uleb128 0x4
 982 0082 11020000 		.4byte	.LASF11
 983 0086 02       		.byte	0x2
 984 0087 C3       		.byte	0xc3
 985 0088 48000000 		.4byte	0x48
 986 008c 04       		.uleb128 0x4
 987 008d 81040000 		.4byte	.LASF12
 988 0091 02       		.byte	0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 34


 989 0092 C5       		.byte	0xc5
 990 0093 33000000 		.4byte	0x33
 991 0097 04       		.uleb128 0x4
 992 0098 B9010000 		.4byte	.LASF13
 993 009c 02       		.byte	0x2
 994 009d C6       		.byte	0xc6
 995 009e 41000000 		.4byte	0x41
 996 00a2 04       		.uleb128 0x4
 997 00a3 04030000 		.4byte	.LASF14
 998 00a7 02       		.byte	0x2
 999 00a8 C7       		.byte	0xc7
 1000 00a9 AD000000 		.4byte	0xad
 1001 00ad 02       		.uleb128 0x2
 1002 00ae 04       		.byte	0x4
 1003 00af 04       		.byte	0x4
 1004 00b0 6D030000 		.4byte	.LASF15
 1005 00b4 02       		.uleb128 0x2
 1006 00b5 08       		.byte	0x8
 1007 00b6 04       		.byte	0x4
 1008 00b7 0A020000 		.4byte	.LASF16
 1009 00bb 04       		.uleb128 0x4
 1010 00bc 56030000 		.4byte	.LASF17
 1011 00c0 02       		.byte	0x2
 1012 00c1 CC       		.byte	0xcc
 1013 00c2 4F000000 		.4byte	0x4f
 1014 00c6 02       		.uleb128 0x2
 1015 00c7 01       		.byte	0x1
 1016 00c8 08       		.byte	0x8
 1017 00c9 07040000 		.4byte	.LASF18
 1018 00cd 05       		.uleb128 0x5
 1019 00ce D5020000 		.4byte	.LASF19
 1020 00d2 02       		.byte	0x2
 1021 00d3 6D01     		.2byte	0x16d
 1022 00d5 D9000000 		.4byte	0xd9
 1023 00d9 06       		.uleb128 0x6
 1024 00da 81000000 		.4byte	0x81
 1025 00de 05       		.uleb128 0x5
 1026 00df 0C040000 		.4byte	.LASF20
 1027 00e3 02       		.byte	0x2
 1028 00e4 7D01     		.2byte	0x17d
 1029 00e6 EA000000 		.4byte	0xea
 1030 00ea 07       		.uleb128 0x7
 1031 00eb 04       		.byte	0x4
 1032 00ec F0000000 		.4byte	0xf0
 1033 00f0 08       		.uleb128 0x8
 1034 00f1 02       		.uleb128 0x2
 1035 00f2 04       		.byte	0x4
 1036 00f3 07       		.byte	0x7
 1037 00f4 0C030000 		.4byte	.LASF21
 1038 00f8 09       		.uleb128 0x9
 1039 00f9 1C000000 		.4byte	.LASF25
 1040 00fd 01       		.byte	0x1
 1041 00fe 5E       		.byte	0x5e
 1042 00ff 00000000 		.4byte	.LFB1
 1043 0103 F4000000 		.4byte	.LFE1-.LFB1
 1044 0107 01       		.uleb128 0x1
 1045 0108 9C       		.byte	0x9c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 35


 1046 0109 62010000 		.4byte	0x162
 1047 010d 0A       		.uleb128 0xa
 1048 010e FC030000 		.4byte	.LASF22
 1049 0112 01       		.byte	0x1
 1050 0113 60       		.byte	0x60
 1051 0114 81000000 		.4byte	0x81
 1052 0118 00000000 		.4byte	.LLST0
 1053 011c 0A       		.uleb128 0xa
 1054 011d 85020000 		.4byte	.LASF23
 1055 0121 01       		.byte	0x1
 1056 0122 61       		.byte	0x61
 1057 0123 81000000 		.4byte	0x81
 1058 0127 1F000000 		.4byte	.LLST1
 1059 012b 0A       		.uleb128 0xa
 1060 012c 37000000 		.4byte	.LASF24
 1061 0130 01       		.byte	0x1
 1062 0131 62       		.byte	0x62
 1063 0132 97000000 		.4byte	0x97
 1064 0136 56000000 		.4byte	.LLST2
 1065 013a 0B       		.uleb128 0xb
 1066 013b 0A000000 		.4byte	.LVL0
 1067 013f 3F050000 		.4byte	0x53f
 1068 0143 52010000 		.4byte	0x152
 1069 0147 0C       		.uleb128 0xc
 1070 0148 01       		.uleb128 0x1
 1071 0149 51       		.byte	0x51
 1072 014a 01       		.uleb128 0x1
 1073 014b 33       		.byte	0x33
 1074 014c 0C       		.uleb128 0xc
 1075 014d 01       		.uleb128 0x1
 1076 014e 50       		.byte	0x50
 1077 014f 01       		.uleb128 0x1
 1078 0150 3E       		.byte	0x3e
 1079 0151 00       		.byte	0
 1080 0152 0D       		.uleb128 0xd
 1081 0153 12000000 		.4byte	.LVL1
 1082 0157 55050000 		.4byte	0x555
 1083 015b 0C       		.uleb128 0xc
 1084 015c 01       		.uleb128 0x1
 1085 015d 50       		.byte	0x50
 1086 015e 01       		.uleb128 0x1
 1087 015f 3E       		.byte	0x3e
 1088 0160 00       		.byte	0
 1089 0161 00       		.byte	0
 1090 0162 0E       		.uleb128 0xe
 1091 0163 05010000 		.4byte	.LASF26
 1092 0167 01       		.byte	0x1
 1093 0168 4A01     		.2byte	0x14a
 1094 016a 00000000 		.4byte	.LFB2
 1095 016e 24000000 		.4byte	.LFE2-.LFB2
 1096 0172 01       		.uleb128 0x1
 1097 0173 9C       		.byte	0x9c
 1098 0174 88010000 		.4byte	0x188
 1099 0178 0D       		.uleb128 0xd
 1100 0179 1C000000 		.4byte	.LVL9
 1101 017d 6F050000 		.4byte	0x56f
 1102 0181 0C       		.uleb128 0xc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 36


 1103 0182 01       		.uleb128 0x1
 1104 0183 50       		.byte	0x50
 1105 0184 01       		.uleb128 0x1
 1106 0185 3A       		.byte	0x3a
 1107 0186 00       		.byte	0
 1108 0187 00       		.byte	0
 1109 0188 09       		.uleb128 0x9
 1110 0189 DD010000 		.4byte	.LASF27
 1111 018d 01       		.byte	0x1
 1112 018e 3F       		.byte	0x3f
 1113 018f 00000000 		.4byte	.LFB0
 1114 0193 20000000 		.4byte	.LFE0-.LFB0
 1115 0197 01       		.uleb128 0x1
 1116 0198 9C       		.byte	0x9c
 1117 0199 B0010000 		.4byte	0x1b0
 1118 019d 0F       		.uleb128 0xf
 1119 019e 0E000000 		.4byte	.LVL10
 1120 01a2 F8000000 		.4byte	0xf8
 1121 01a6 0F       		.uleb128 0xf
 1122 01a7 18000000 		.4byte	.LVL11
 1123 01ab 62010000 		.4byte	0x162
 1124 01af 00       		.byte	0
 1125 01b0 10       		.uleb128 0x10
 1126 01b1 89030000 		.4byte	.LASF28
 1127 01b5 01       		.byte	0x1
 1128 01b6 6D01     		.2byte	0x16d
 1129 01b8 00000000 		.4byte	.LFB3
 1130 01bc 10000000 		.4byte	.LFE3-.LFB3
 1131 01c0 01       		.uleb128 0x1
 1132 01c1 9C       		.byte	0x9c
 1133 01c2 10       		.uleb128 0x10
 1134 01c3 3E000000 		.4byte	.LASF29
 1135 01c7 01       		.byte	0x1
 1136 01c8 8701     		.2byte	0x187
 1137 01ca 00000000 		.4byte	.LFB4
 1138 01ce 14000000 		.4byte	.LFE4-.LFB4
 1139 01d2 01       		.uleb128 0x1
 1140 01d3 9C       		.byte	0x9c
 1141 01d4 10       		.uleb128 0x10
 1142 01d5 3C030000 		.4byte	.LASF30
 1143 01d9 01       		.byte	0x1
 1144 01da A001     		.2byte	0x1a0
 1145 01dc 00000000 		.4byte	.LFB5
 1146 01e0 14000000 		.4byte	.LFE5-.LFB5
 1147 01e4 01       		.uleb128 0x1
 1148 01e5 9C       		.byte	0x9c
 1149 01e6 11       		.uleb128 0x11
 1150 01e7 1E030000 		.4byte	.LASF32
 1151 01eb 01       		.byte	0x1
 1152 01ec C201     		.2byte	0x1c2
 1153 01ee 81000000 		.4byte	0x81
 1154 01f2 00000000 		.4byte	.LFB6
 1155 01f6 2C000000 		.4byte	.LFE6-.LFB6
 1156 01fa 01       		.uleb128 0x1
 1157 01fb 9C       		.byte	0x9c
 1158 01fc 21020000 		.4byte	0x221
 1159 0200 12       		.uleb128 0x12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 37


 1160 0201 3B020000 		.4byte	.LASF34
 1161 0205 01       		.byte	0x1
 1162 0206 C201     		.2byte	0x1c2
 1163 0208 81000000 		.4byte	0x81
 1164 020c 6C000000 		.4byte	.LLST3
 1165 0210 13       		.uleb128 0x13
 1166 0211 62040000 		.4byte	.LASF31
 1167 0215 01       		.byte	0x1
 1168 0216 C401     		.2byte	0x1c4
 1169 0218 81000000 		.4byte	0x81
 1170 021c A6000000 		.4byte	.LLST4
 1171 0220 00       		.byte	0
 1172 0221 11       		.uleb128 0x11
 1173 0222 1A010000 		.4byte	.LASF33
 1174 0226 01       		.byte	0x1
 1175 0227 F801     		.2byte	0x1f8
 1176 0229 8C000000 		.4byte	0x8c
 1177 022d 00000000 		.4byte	.LFB7
 1178 0231 28000000 		.4byte	.LFE7-.LFB7
 1179 0235 01       		.uleb128 0x1
 1180 0236 9C       		.byte	0x9c
 1181 0237 6B020000 		.4byte	0x26b
 1182 023b 12       		.uleb128 0x12
 1183 023c 02040000 		.4byte	.LASF35
 1184 0240 01       		.byte	0x1
 1185 0241 F801     		.2byte	0x1f8
 1186 0243 81000000 		.4byte	0x81
 1187 0247 DC000000 		.4byte	.LLST5
 1188 024b 13       		.uleb128 0x13
 1189 024c A2040000 		.4byte	.LASF36
 1190 0250 01       		.byte	0x1
 1191 0251 FA01     		.2byte	0x1fa
 1192 0253 81000000 		.4byte	0x81
 1193 0257 21010000 		.4byte	.LLST6
 1194 025b 0D       		.uleb128 0xd
 1195 025c 0C000000 		.4byte	.LVL19
 1196 0260 80050000 		.4byte	0x580
 1197 0264 0C       		.uleb128 0xc
 1198 0265 01       		.uleb128 0x1
 1199 0266 50       		.byte	0x50
 1200 0267 01       		.uleb128 0x1
 1201 0268 30       		.byte	0x30
 1202 0269 00       		.byte	0
 1203 026a 00       		.byte	0
 1204 026b 0E       		.uleb128 0xe
 1205 026c E2030000 		.4byte	.LASF37
 1206 0270 01       		.byte	0x1
 1207 0271 2502     		.2byte	0x225
 1208 0273 00000000 		.4byte	.LFB8
 1209 0277 10000000 		.4byte	.LFE8-.LFB8
 1210 027b 01       		.uleb128 0x1
 1211 027c 9C       		.byte	0x9c
 1212 027d 92020000 		.4byte	0x292
 1213 0281 12       		.uleb128 0x12
 1214 0282 18020000 		.4byte	.LASF38
 1215 0286 01       		.byte	0x1
 1216 0287 2502     		.2byte	0x225
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 38


 1217 0289 81000000 		.4byte	0x81
 1218 028d 3F010000 		.4byte	.LLST7
 1219 0291 00       		.byte	0
 1220 0292 0E       		.uleb128 0xe
 1221 0293 19040000 		.4byte	.LASF39
 1222 0297 01       		.byte	0x1
 1223 0298 5102     		.2byte	0x251
 1224 029a 00000000 		.4byte	.LFB9
 1225 029e 1C000000 		.4byte	.LFE9-.LFB9
 1226 02a2 01       		.uleb128 0x1
 1227 02a3 9C       		.byte	0x9c
 1228 02a4 B9020000 		.4byte	0x2b9
 1229 02a8 12       		.uleb128 0x12
 1230 02a9 15030000 		.4byte	.LASF40
 1231 02ad 01       		.byte	0x1
 1232 02ae 5102     		.2byte	0x251
 1233 02b0 81000000 		.4byte	0x81
 1234 02b4 60010000 		.4byte	.LLST8
 1235 02b8 00       		.byte	0
 1236 02b9 0E       		.uleb128 0xe
 1237 02ba 4E010000 		.4byte	.LASF41
 1238 02be 01       		.byte	0x1
 1239 02bf 6602     		.2byte	0x266
 1240 02c1 00000000 		.4byte	.LFB10
 1241 02c5 18000000 		.4byte	.LFE10-.LFB10
 1242 02c9 01       		.uleb128 0x1
 1243 02ca 9C       		.byte	0x9c
 1244 02cb E0020000 		.4byte	0x2e0
 1245 02cf 12       		.uleb128 0x12
 1246 02d0 9C030000 		.4byte	.LASF42
 1247 02d4 01       		.byte	0x1
 1248 02d5 6602     		.2byte	0x266
 1249 02d7 81000000 		.4byte	0x81
 1250 02db 81010000 		.4byte	.LLST9
 1251 02df 00       		.byte	0
 1252 02e0 0E       		.uleb128 0xe
 1253 02e1 87040000 		.4byte	.LASF43
 1254 02e5 01       		.byte	0x1
 1255 02e6 7E02     		.2byte	0x27e
 1256 02e8 00000000 		.4byte	.LFB11
 1257 02ec 10000000 		.4byte	.LFE11-.LFB11
 1258 02f0 01       		.uleb128 0x1
 1259 02f1 9C       		.byte	0x9c
 1260 02f2 07030000 		.4byte	0x307
 1261 02f6 12       		.uleb128 0x12
 1262 02f7 18020000 		.4byte	.LASF38
 1263 02fb 01       		.byte	0x1
 1264 02fc 7E02     		.2byte	0x27e
 1265 02fe 81000000 		.4byte	0x81
 1266 0302 A2010000 		.4byte	.LLST10
 1267 0306 00       		.byte	0
 1268 0307 0E       		.uleb128 0xe
 1269 0308 59000000 		.4byte	.LASF44
 1270 030c 01       		.byte	0x1
 1271 030d 9502     		.2byte	0x295
 1272 030f 00000000 		.4byte	.LFB12
 1273 0313 10000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 39


 1274 0317 01       		.uleb128 0x1
 1275 0318 9C       		.byte	0x9c
 1276 0319 2E030000 		.4byte	0x32e
 1277 031d 12       		.uleb128 0x12
 1278 031e 18020000 		.4byte	.LASF38
 1279 0322 01       		.byte	0x1
 1280 0323 9502     		.2byte	0x295
 1281 0325 81000000 		.4byte	0x81
 1282 0329 C3010000 		.4byte	.LLST11
 1283 032d 00       		.byte	0
 1284 032e 0E       		.uleb128 0xe
 1285 032f 69040000 		.4byte	.LASF45
 1286 0333 01       		.byte	0x1
 1287 0334 B102     		.2byte	0x2b1
 1288 0336 00000000 		.4byte	.LFB13
 1289 033a 1C000000 		.4byte	.LFE13-.LFB13
 1290 033e 01       		.uleb128 0x1
 1291 033f 9C       		.byte	0x9c
 1292 0340 74030000 		.4byte	0x374
 1293 0344 12       		.uleb128 0x12
 1294 0345 02040000 		.4byte	.LASF35
 1295 0349 01       		.byte	0x1
 1296 034a B102     		.2byte	0x2b1
 1297 034c 81000000 		.4byte	0x81
 1298 0350 E4010000 		.4byte	.LLST12
 1299 0354 12       		.uleb128 0x12
 1300 0355 33040000 		.4byte	.LASF46
 1301 0359 01       		.byte	0x1
 1302 035a B102     		.2byte	0x2b1
 1303 035c 8C000000 		.4byte	0x8c
 1304 0360 10020000 		.4byte	.LLST13
 1305 0364 0D       		.uleb128 0xd
 1306 0365 10000000 		.4byte	.LVL37
 1307 0369 80050000 		.4byte	0x580
 1308 036d 0C       		.uleb128 0xc
 1309 036e 01       		.uleb128 0x1
 1310 036f 50       		.byte	0x50
 1311 0370 01       		.uleb128 0x1
 1312 0371 30       		.byte	0x30
 1313 0372 00       		.byte	0
 1314 0373 00       		.byte	0
 1315 0374 0E       		.uleb128 0xe
 1316 0375 73030000 		.4byte	.LASF47
 1317 0379 01       		.byte	0x1
 1318 037a D302     		.2byte	0x2d3
 1319 037c 00000000 		.4byte	.LFB14
 1320 0380 1C000000 		.4byte	.LFE14-.LFB14
 1321 0384 01       		.uleb128 0x1
 1322 0385 9C       		.byte	0x9c
 1323 0386 BA030000 		.4byte	0x3ba
 1324 038a 12       		.uleb128 0x12
 1325 038b 02040000 		.4byte	.LASF35
 1326 038f 01       		.byte	0x1
 1327 0390 D302     		.2byte	0x2d3
 1328 0392 81000000 		.4byte	0x81
 1329 0396 31020000 		.4byte	.LLST14
 1330 039a 12       		.uleb128 0x12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 40


 1331 039b 2F000000 		.4byte	.LASF48
 1332 039f 01       		.byte	0x1
 1333 03a0 D302     		.2byte	0x2d3
 1334 03a2 97000000 		.4byte	0x97
 1335 03a6 5D020000 		.4byte	.LLST15
 1336 03aa 0D       		.uleb128 0xd
 1337 03ab 10000000 		.4byte	.LVL41
 1338 03af 80050000 		.4byte	0x580
 1339 03b3 0C       		.uleb128 0xc
 1340 03b4 01       		.uleb128 0x1
 1341 03b5 50       		.byte	0x50
 1342 03b6 01       		.uleb128 0x1
 1343 03b7 30       		.byte	0x30
 1344 03b8 00       		.byte	0
 1345 03b9 00       		.byte	0
 1346 03ba 14       		.uleb128 0x14
 1347 03bb 1D020000 		.4byte	.LASF49
 1348 03bf 01       		.byte	0x1
 1349 03c0 F402     		.2byte	0x2f4
 1350 03c2 8C000000 		.4byte	0x8c
 1351 03c6 00000000 		.4byte	.LFB15
 1352 03ca 5C000000 		.4byte	.LFE15-.LFB15
 1353 03ce 01       		.uleb128 0x1
 1354 03cf 9C       		.byte	0x9c
 1355 03d0 14040000 		.4byte	0x414
 1356 03d4 12       		.uleb128 0x12
 1357 03d5 02040000 		.4byte	.LASF35
 1358 03d9 01       		.byte	0x1
 1359 03da F402     		.2byte	0x2f4
 1360 03dc 81000000 		.4byte	0x81
 1361 03e0 8D020000 		.4byte	.LLST16
 1362 03e4 12       		.uleb128 0x12
 1363 03e5 3A040000 		.4byte	.LASF50
 1364 03e9 01       		.byte	0x1
 1365 03ea F402     		.2byte	0x2f4
 1366 03ec 8C000000 		.4byte	0x8c
 1367 03f0 B9020000 		.4byte	.LLST17
 1368 03f4 13       		.uleb128 0x13
 1369 03f5 CE020000 		.4byte	.LASF51
 1370 03f9 01       		.byte	0x1
 1371 03fa F602     		.2byte	0x2f6
 1372 03fc 8C000000 		.4byte	0x8c
 1373 0400 F0020000 		.4byte	.LLST18
 1374 0404 0D       		.uleb128 0xd
 1375 0405 10000000 		.4byte	.LVL46
 1376 0409 80050000 		.4byte	0x580
 1377 040d 0C       		.uleb128 0xc
 1378 040e 01       		.uleb128 0x1
 1379 040f 50       		.byte	0x50
 1380 0410 01       		.uleb128 0x1
 1381 0411 30       		.byte	0x30
 1382 0412 00       		.byte	0
 1383 0413 00       		.byte	0
 1384 0414 14       		.uleb128 0x14
 1385 0415 BF010000 		.4byte	.LASF52
 1386 0419 01       		.byte	0x1
 1387 041a 2A03     		.2byte	0x32a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 41


 1388 041c 97000000 		.4byte	0x97
 1389 0420 00000000 		.4byte	.LFB16
 1390 0424 48000000 		.4byte	.LFE16-.LFB16
 1391 0428 01       		.uleb128 0x1
 1392 0429 9C       		.byte	0x9c
 1393 042a 6A040000 		.4byte	0x46a
 1394 042e 12       		.uleb128 0x12
 1395 042f 02040000 		.4byte	.LASF35
 1396 0433 01       		.byte	0x1
 1397 0434 2A03     		.2byte	0x32a
 1398 0436 81000000 		.4byte	0x81
 1399 043a 03030000 		.4byte	.LLST19
 1400 043e 12       		.uleb128 0x12
 1401 043f 3A040000 		.4byte	.LASF50
 1402 0443 01       		.byte	0x1
 1403 0444 2A03     		.2byte	0x32a
 1404 0446 8C000000 		.4byte	0x8c
 1405 044a 2F030000 		.4byte	.LLST20
 1406 044e 15       		.uleb128 0x15
 1407 044f 66020000 		.4byte	.LASF55
 1408 0453 01       		.byte	0x1
 1409 0454 2C03     		.2byte	0x32c
 1410 0456 BB000000 		.4byte	0xbb
 1411 045a 0D       		.uleb128 0xd
 1412 045b 10000000 		.4byte	.LVL56
 1413 045f 80050000 		.4byte	0x580
 1414 0463 0C       		.uleb128 0xc
 1415 0464 01       		.uleb128 0x1
 1416 0465 50       		.byte	0x50
 1417 0466 01       		.uleb128 0x1
 1418 0467 30       		.byte	0x30
 1419 0468 00       		.byte	0
 1420 0469 00       		.byte	0
 1421 046a 14       		.uleb128 0x14
 1422 046b C5030000 		.4byte	.LASF53
 1423 046f 01       		.byte	0x1
 1424 0470 5703     		.2byte	0x357
 1425 0472 A2000000 		.4byte	0xa2
 1426 0476 00000000 		.4byte	.LFB17
 1427 047a 48000000 		.4byte	.LFE17-.LFB17
 1428 047e 01       		.uleb128 0x1
 1429 047f 9C       		.byte	0x9c
 1430 0480 C2040000 		.4byte	0x4c2
 1431 0484 12       		.uleb128 0x12
 1432 0485 02040000 		.4byte	.LASF35
 1433 0489 01       		.byte	0x1
 1434 048a 5703     		.2byte	0x357
 1435 048c 81000000 		.4byte	0x81
 1436 0490 5B030000 		.4byte	.LLST21
 1437 0494 12       		.uleb128 0x12
 1438 0495 3A040000 		.4byte	.LASF50
 1439 0499 01       		.byte	0x1
 1440 049a 5703     		.2byte	0x357
 1441 049c 8C000000 		.4byte	0x8c
 1442 04a0 87030000 		.4byte	.LLST22
 1443 04a4 16       		.uleb128 0x16
 1444 04a5 7F020000 		.4byte	.LASF54
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 42


 1445 04a9 01       		.byte	0x1
 1446 04aa 5903     		.2byte	0x359
 1447 04ac A2000000 		.4byte	0xa2
 1448 04b0 01       		.uleb128 0x1
 1449 04b1 50       		.byte	0x50
 1450 04b2 0D       		.uleb128 0xd
 1451 04b3 10000000 		.4byte	.LVL63
 1452 04b7 80050000 		.4byte	0x580
 1453 04bb 0C       		.uleb128 0xc
 1454 04bc 01       		.uleb128 0x1
 1455 04bd 50       		.byte	0x50
 1456 04be 01       		.uleb128 0x1
 1457 04bf 30       		.byte	0x30
 1458 04c0 00       		.byte	0
 1459 04c1 00       		.byte	0
 1460 04c2 17       		.uleb128 0x17
 1461 04c3 81000000 		.4byte	0x81
 1462 04c7 D2040000 		.4byte	0x4d2
 1463 04cb 18       		.uleb128 0x18
 1464 04cc F1000000 		.4byte	0xf1
 1465 04d0 00       		.byte	0
 1466 04d1 00       		.byte	0
 1467 04d2 19       		.uleb128 0x19
 1468 04d3 B1020000 		.4byte	.LASF56
 1469 04d7 01       		.byte	0x1
 1470 04d8 21       		.byte	0x21
 1471 04d9 DD040000 		.4byte	0x4dd
 1472 04dd 1A       		.uleb128 0x1a
 1473 04de C2040000 		.4byte	0x4c2
 1474 04e2 1B       		.uleb128 0x1b
 1475 04e3 43020000 		.4byte	.LASF57
 1476 04e7 01       		.byte	0x1
 1477 04e8 18       		.byte	0x18
 1478 04e9 6B000000 		.4byte	0x6b
 1479 04ed 05       		.uleb128 0x5
 1480 04ee 03       		.byte	0x3
 1481 04ef 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1482 04f3 17       		.uleb128 0x17
 1483 04f4 8C000000 		.4byte	0x8c
 1484 04f8 03050000 		.4byte	0x503
 1485 04fc 18       		.uleb128 0x18
 1486 04fd F1000000 		.4byte	0xf1
 1487 0501 00       		.byte	0
 1488 0502 00       		.byte	0
 1489 0503 1B       		.uleb128 0x1b
 1490 0504 00000000 		.4byte	.LASF58
 1491 0508 01       		.byte	0x1
 1492 0509 19       		.byte	0x19
 1493 050a 14050000 		.4byte	0x514
 1494 050e 05       		.uleb128 0x5
 1495 050f 03       		.byte	0x3
 1496 0510 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1497 0514 06       		.uleb128 0x6
 1498 0515 F3040000 		.4byte	0x4f3
 1499 0519 17       		.uleb128 0x17
 1500 051a 97000000 		.4byte	0x97
 1501 051e 29050000 		.4byte	0x529
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 43


 1502 0522 18       		.uleb128 0x18
 1503 0523 F1000000 		.4byte	0xf1
 1504 0527 00       		.byte	0
 1505 0528 00       		.byte	0
 1506 0529 1B       		.uleb128 0x1b
 1507 052a 44040000 		.4byte	.LASF59
 1508 052e 01       		.byte	0x1
 1509 052f 1A       		.byte	0x1a
 1510 0530 3A050000 		.4byte	0x53a
 1511 0534 05       		.uleb128 0x5
 1512 0535 03       		.byte	0x3
 1513 0536 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1514 053a 06       		.uleb128 0x6
 1515 053b 19050000 		.4byte	0x519
 1516 053f 1C       		.uleb128 0x1c
 1517 0540 5C030000 		.4byte	.LASF60
 1518 0544 03       		.byte	0x3
 1519 0545 49       		.byte	0x49
 1520 0546 55050000 		.4byte	0x555
 1521 054a 1D       		.uleb128 0x1d
 1522 054b 6B000000 		.4byte	0x6b
 1523 054f 1D       		.uleb128 0x1d
 1524 0550 6B000000 		.4byte	0x6b
 1525 0554 00       		.byte	0
 1526 0555 1E       		.uleb128 0x1e
 1527 0556 A2020000 		.4byte	.LASF65
 1528 055a 03       		.byte	0x3
 1529 055b 46       		.byte	0x46
 1530 055c DE000000 		.4byte	0xde
 1531 0560 6F050000 		.4byte	0x56f
 1532 0564 1D       		.uleb128 0x1d
 1533 0565 6B000000 		.4byte	0x6b
 1534 0569 1D       		.uleb128 0x1d
 1535 056a DE000000 		.4byte	0xde
 1536 056e 00       		.byte	0
 1537 056f 1C       		.uleb128 0x1c
 1538 0570 00020000 		.4byte	.LASF61
 1539 0574 03       		.byte	0x3
 1540 0575 58       		.byte	0x58
 1541 0576 80050000 		.4byte	0x580
 1542 057a 1D       		.uleb128 0x1d
 1543 057b 76000000 		.4byte	0x76
 1544 057f 00       		.byte	0
 1545 0580 1F       		.uleb128 0x1f
 1546 0581 A6030000 		.4byte	.LASF66
 1547 0585 03       		.byte	0x3
 1548 0586 60       		.byte	0x60
 1549 0587 1D       		.uleb128 0x1d
 1550 0588 6B000000 		.4byte	0x6b
 1551 058c 00       		.byte	0
 1552 058d 00       		.byte	0
 1553              		.section	.debug_abbrev,"",%progbits
 1554              	.Ldebug_abbrev0:
 1555 0000 01       		.uleb128 0x1
 1556 0001 11       		.uleb128 0x11
 1557 0002 01       		.byte	0x1
 1558 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 44


 1559 0004 0E       		.uleb128 0xe
 1560 0005 13       		.uleb128 0x13
 1561 0006 0B       		.uleb128 0xb
 1562 0007 03       		.uleb128 0x3
 1563 0008 0E       		.uleb128 0xe
 1564 0009 1B       		.uleb128 0x1b
 1565 000a 0E       		.uleb128 0xe
 1566 000b 55       		.uleb128 0x55
 1567 000c 17       		.uleb128 0x17
 1568 000d 11       		.uleb128 0x11
 1569 000e 01       		.uleb128 0x1
 1570 000f 10       		.uleb128 0x10
 1571 0010 17       		.uleb128 0x17
 1572 0011 00       		.byte	0
 1573 0012 00       		.byte	0
 1574 0013 02       		.uleb128 0x2
 1575 0014 24       		.uleb128 0x24
 1576 0015 00       		.byte	0
 1577 0016 0B       		.uleb128 0xb
 1578 0017 0B       		.uleb128 0xb
 1579 0018 3E       		.uleb128 0x3e
 1580 0019 0B       		.uleb128 0xb
 1581 001a 03       		.uleb128 0x3
 1582 001b 0E       		.uleb128 0xe
 1583 001c 00       		.byte	0
 1584 001d 00       		.byte	0
 1585 001e 03       		.uleb128 0x3
 1586 001f 24       		.uleb128 0x24
 1587 0020 00       		.byte	0
 1588 0021 0B       		.uleb128 0xb
 1589 0022 0B       		.uleb128 0xb
 1590 0023 3E       		.uleb128 0x3e
 1591 0024 0B       		.uleb128 0xb
 1592 0025 03       		.uleb128 0x3
 1593 0026 08       		.uleb128 0x8
 1594 0027 00       		.byte	0
 1595 0028 00       		.byte	0
 1596 0029 04       		.uleb128 0x4
 1597 002a 16       		.uleb128 0x16
 1598 002b 00       		.byte	0
 1599 002c 03       		.uleb128 0x3
 1600 002d 0E       		.uleb128 0xe
 1601 002e 3A       		.uleb128 0x3a
 1602 002f 0B       		.uleb128 0xb
 1603 0030 3B       		.uleb128 0x3b
 1604 0031 0B       		.uleb128 0xb
 1605 0032 49       		.uleb128 0x49
 1606 0033 13       		.uleb128 0x13
 1607 0034 00       		.byte	0
 1608 0035 00       		.byte	0
 1609 0036 05       		.uleb128 0x5
 1610 0037 16       		.uleb128 0x16
 1611 0038 00       		.byte	0
 1612 0039 03       		.uleb128 0x3
 1613 003a 0E       		.uleb128 0xe
 1614 003b 3A       		.uleb128 0x3a
 1615 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 45


 1616 003d 3B       		.uleb128 0x3b
 1617 003e 05       		.uleb128 0x5
 1618 003f 49       		.uleb128 0x49
 1619 0040 13       		.uleb128 0x13
 1620 0041 00       		.byte	0
 1621 0042 00       		.byte	0
 1622 0043 06       		.uleb128 0x6
 1623 0044 35       		.uleb128 0x35
 1624 0045 00       		.byte	0
 1625 0046 49       		.uleb128 0x49
 1626 0047 13       		.uleb128 0x13
 1627 0048 00       		.byte	0
 1628 0049 00       		.byte	0
 1629 004a 07       		.uleb128 0x7
 1630 004b 0F       		.uleb128 0xf
 1631 004c 00       		.byte	0
 1632 004d 0B       		.uleb128 0xb
 1633 004e 0B       		.uleb128 0xb
 1634 004f 49       		.uleb128 0x49
 1635 0050 13       		.uleb128 0x13
 1636 0051 00       		.byte	0
 1637 0052 00       		.byte	0
 1638 0053 08       		.uleb128 0x8
 1639 0054 15       		.uleb128 0x15
 1640 0055 00       		.byte	0
 1641 0056 27       		.uleb128 0x27
 1642 0057 19       		.uleb128 0x19
 1643 0058 00       		.byte	0
 1644 0059 00       		.byte	0
 1645 005a 09       		.uleb128 0x9
 1646 005b 2E       		.uleb128 0x2e
 1647 005c 01       		.byte	0x1
 1648 005d 3F       		.uleb128 0x3f
 1649 005e 19       		.uleb128 0x19
 1650 005f 03       		.uleb128 0x3
 1651 0060 0E       		.uleb128 0xe
 1652 0061 3A       		.uleb128 0x3a
 1653 0062 0B       		.uleb128 0xb
 1654 0063 3B       		.uleb128 0x3b
 1655 0064 0B       		.uleb128 0xb
 1656 0065 27       		.uleb128 0x27
 1657 0066 19       		.uleb128 0x19
 1658 0067 11       		.uleb128 0x11
 1659 0068 01       		.uleb128 0x1
 1660 0069 12       		.uleb128 0x12
 1661 006a 06       		.uleb128 0x6
 1662 006b 40       		.uleb128 0x40
 1663 006c 18       		.uleb128 0x18
 1664 006d 9742     		.uleb128 0x2117
 1665 006f 19       		.uleb128 0x19
 1666 0070 01       		.uleb128 0x1
 1667 0071 13       		.uleb128 0x13
 1668 0072 00       		.byte	0
 1669 0073 00       		.byte	0
 1670 0074 0A       		.uleb128 0xa
 1671 0075 34       		.uleb128 0x34
 1672 0076 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 46


 1673 0077 03       		.uleb128 0x3
 1674 0078 0E       		.uleb128 0xe
 1675 0079 3A       		.uleb128 0x3a
 1676 007a 0B       		.uleb128 0xb
 1677 007b 3B       		.uleb128 0x3b
 1678 007c 0B       		.uleb128 0xb
 1679 007d 49       		.uleb128 0x49
 1680 007e 13       		.uleb128 0x13
 1681 007f 02       		.uleb128 0x2
 1682 0080 17       		.uleb128 0x17
 1683 0081 00       		.byte	0
 1684 0082 00       		.byte	0
 1685 0083 0B       		.uleb128 0xb
 1686 0084 898201   		.uleb128 0x4109
 1687 0087 01       		.byte	0x1
 1688 0088 11       		.uleb128 0x11
 1689 0089 01       		.uleb128 0x1
 1690 008a 31       		.uleb128 0x31
 1691 008b 13       		.uleb128 0x13
 1692 008c 01       		.uleb128 0x1
 1693 008d 13       		.uleb128 0x13
 1694 008e 00       		.byte	0
 1695 008f 00       		.byte	0
 1696 0090 0C       		.uleb128 0xc
 1697 0091 8A8201   		.uleb128 0x410a
 1698 0094 00       		.byte	0
 1699 0095 02       		.uleb128 0x2
 1700 0096 18       		.uleb128 0x18
 1701 0097 9142     		.uleb128 0x2111
 1702 0099 18       		.uleb128 0x18
 1703 009a 00       		.byte	0
 1704 009b 00       		.byte	0
 1705 009c 0D       		.uleb128 0xd
 1706 009d 898201   		.uleb128 0x4109
 1707 00a0 01       		.byte	0x1
 1708 00a1 11       		.uleb128 0x11
 1709 00a2 01       		.uleb128 0x1
 1710 00a3 31       		.uleb128 0x31
 1711 00a4 13       		.uleb128 0x13
 1712 00a5 00       		.byte	0
 1713 00a6 00       		.byte	0
 1714 00a7 0E       		.uleb128 0xe
 1715 00a8 2E       		.uleb128 0x2e
 1716 00a9 01       		.byte	0x1
 1717 00aa 3F       		.uleb128 0x3f
 1718 00ab 19       		.uleb128 0x19
 1719 00ac 03       		.uleb128 0x3
 1720 00ad 0E       		.uleb128 0xe
 1721 00ae 3A       		.uleb128 0x3a
 1722 00af 0B       		.uleb128 0xb
 1723 00b0 3B       		.uleb128 0x3b
 1724 00b1 05       		.uleb128 0x5
 1725 00b2 27       		.uleb128 0x27
 1726 00b3 19       		.uleb128 0x19
 1727 00b4 11       		.uleb128 0x11
 1728 00b5 01       		.uleb128 0x1
 1729 00b6 12       		.uleb128 0x12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 47


 1730 00b7 06       		.uleb128 0x6
 1731 00b8 40       		.uleb128 0x40
 1732 00b9 18       		.uleb128 0x18
 1733 00ba 9742     		.uleb128 0x2117
 1734 00bc 19       		.uleb128 0x19
 1735 00bd 01       		.uleb128 0x1
 1736 00be 13       		.uleb128 0x13
 1737 00bf 00       		.byte	0
 1738 00c0 00       		.byte	0
 1739 00c1 0F       		.uleb128 0xf
 1740 00c2 898201   		.uleb128 0x4109
 1741 00c5 00       		.byte	0
 1742 00c6 11       		.uleb128 0x11
 1743 00c7 01       		.uleb128 0x1
 1744 00c8 31       		.uleb128 0x31
 1745 00c9 13       		.uleb128 0x13
 1746 00ca 00       		.byte	0
 1747 00cb 00       		.byte	0
 1748 00cc 10       		.uleb128 0x10
 1749 00cd 2E       		.uleb128 0x2e
 1750 00ce 00       		.byte	0
 1751 00cf 3F       		.uleb128 0x3f
 1752 00d0 19       		.uleb128 0x19
 1753 00d1 03       		.uleb128 0x3
 1754 00d2 0E       		.uleb128 0xe
 1755 00d3 3A       		.uleb128 0x3a
 1756 00d4 0B       		.uleb128 0xb
 1757 00d5 3B       		.uleb128 0x3b
 1758 00d6 05       		.uleb128 0x5
 1759 00d7 27       		.uleb128 0x27
 1760 00d8 19       		.uleb128 0x19
 1761 00d9 11       		.uleb128 0x11
 1762 00da 01       		.uleb128 0x1
 1763 00db 12       		.uleb128 0x12
 1764 00dc 06       		.uleb128 0x6
 1765 00dd 40       		.uleb128 0x40
 1766 00de 18       		.uleb128 0x18
 1767 00df 9742     		.uleb128 0x2117
 1768 00e1 19       		.uleb128 0x19
 1769 00e2 00       		.byte	0
 1770 00e3 00       		.byte	0
 1771 00e4 11       		.uleb128 0x11
 1772 00e5 2E       		.uleb128 0x2e
 1773 00e6 01       		.byte	0x1
 1774 00e7 3F       		.uleb128 0x3f
 1775 00e8 19       		.uleb128 0x19
 1776 00e9 03       		.uleb128 0x3
 1777 00ea 0E       		.uleb128 0xe
 1778 00eb 3A       		.uleb128 0x3a
 1779 00ec 0B       		.uleb128 0xb
 1780 00ed 3B       		.uleb128 0x3b
 1781 00ee 05       		.uleb128 0x5
 1782 00ef 27       		.uleb128 0x27
 1783 00f0 19       		.uleb128 0x19
 1784 00f1 49       		.uleb128 0x49
 1785 00f2 13       		.uleb128 0x13
 1786 00f3 11       		.uleb128 0x11
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 48


 1787 00f4 01       		.uleb128 0x1
 1788 00f5 12       		.uleb128 0x12
 1789 00f6 06       		.uleb128 0x6
 1790 00f7 40       		.uleb128 0x40
 1791 00f8 18       		.uleb128 0x18
 1792 00f9 9742     		.uleb128 0x2117
 1793 00fb 19       		.uleb128 0x19
 1794 00fc 01       		.uleb128 0x1
 1795 00fd 13       		.uleb128 0x13
 1796 00fe 00       		.byte	0
 1797 00ff 00       		.byte	0
 1798 0100 12       		.uleb128 0x12
 1799 0101 05       		.uleb128 0x5
 1800 0102 00       		.byte	0
 1801 0103 03       		.uleb128 0x3
 1802 0104 0E       		.uleb128 0xe
 1803 0105 3A       		.uleb128 0x3a
 1804 0106 0B       		.uleb128 0xb
 1805 0107 3B       		.uleb128 0x3b
 1806 0108 05       		.uleb128 0x5
 1807 0109 49       		.uleb128 0x49
 1808 010a 13       		.uleb128 0x13
 1809 010b 02       		.uleb128 0x2
 1810 010c 17       		.uleb128 0x17
 1811 010d 00       		.byte	0
 1812 010e 00       		.byte	0
 1813 010f 13       		.uleb128 0x13
 1814 0110 34       		.uleb128 0x34
 1815 0111 00       		.byte	0
 1816 0112 03       		.uleb128 0x3
 1817 0113 0E       		.uleb128 0xe
 1818 0114 3A       		.uleb128 0x3a
 1819 0115 0B       		.uleb128 0xb
 1820 0116 3B       		.uleb128 0x3b
 1821 0117 05       		.uleb128 0x5
 1822 0118 49       		.uleb128 0x49
 1823 0119 13       		.uleb128 0x13
 1824 011a 02       		.uleb128 0x2
 1825 011b 17       		.uleb128 0x17
 1826 011c 00       		.byte	0
 1827 011d 00       		.byte	0
 1828 011e 14       		.uleb128 0x14
 1829 011f 2E       		.uleb128 0x2e
 1830 0120 01       		.byte	0x1
 1831 0121 3F       		.uleb128 0x3f
 1832 0122 19       		.uleb128 0x19
 1833 0123 03       		.uleb128 0x3
 1834 0124 0E       		.uleb128 0xe
 1835 0125 3A       		.uleb128 0x3a
 1836 0126 0B       		.uleb128 0xb
 1837 0127 3B       		.uleb128 0x3b
 1838 0128 05       		.uleb128 0x5
 1839 0129 27       		.uleb128 0x27
 1840 012a 19       		.uleb128 0x19
 1841 012b 49       		.uleb128 0x49
 1842 012c 13       		.uleb128 0x13
 1843 012d 11       		.uleb128 0x11
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 49


 1844 012e 01       		.uleb128 0x1
 1845 012f 12       		.uleb128 0x12
 1846 0130 06       		.uleb128 0x6
 1847 0131 40       		.uleb128 0x40
 1848 0132 18       		.uleb128 0x18
 1849 0133 9642     		.uleb128 0x2116
 1850 0135 19       		.uleb128 0x19
 1851 0136 01       		.uleb128 0x1
 1852 0137 13       		.uleb128 0x13
 1853 0138 00       		.byte	0
 1854 0139 00       		.byte	0
 1855 013a 15       		.uleb128 0x15
 1856 013b 34       		.uleb128 0x34
 1857 013c 00       		.byte	0
 1858 013d 03       		.uleb128 0x3
 1859 013e 0E       		.uleb128 0xe
 1860 013f 3A       		.uleb128 0x3a
 1861 0140 0B       		.uleb128 0xb
 1862 0141 3B       		.uleb128 0x3b
 1863 0142 05       		.uleb128 0x5
 1864 0143 49       		.uleb128 0x49
 1865 0144 13       		.uleb128 0x13
 1866 0145 00       		.byte	0
 1867 0146 00       		.byte	0
 1868 0147 16       		.uleb128 0x16
 1869 0148 34       		.uleb128 0x34
 1870 0149 00       		.byte	0
 1871 014a 03       		.uleb128 0x3
 1872 014b 0E       		.uleb128 0xe
 1873 014c 3A       		.uleb128 0x3a
 1874 014d 0B       		.uleb128 0xb
 1875 014e 3B       		.uleb128 0x3b
 1876 014f 05       		.uleb128 0x5
 1877 0150 49       		.uleb128 0x49
 1878 0151 13       		.uleb128 0x13
 1879 0152 02       		.uleb128 0x2
 1880 0153 18       		.uleb128 0x18
 1881 0154 00       		.byte	0
 1882 0155 00       		.byte	0
 1883 0156 17       		.uleb128 0x17
 1884 0157 01       		.uleb128 0x1
 1885 0158 01       		.byte	0x1
 1886 0159 49       		.uleb128 0x49
 1887 015a 13       		.uleb128 0x13
 1888 015b 01       		.uleb128 0x1
 1889 015c 13       		.uleb128 0x13
 1890 015d 00       		.byte	0
 1891 015e 00       		.byte	0
 1892 015f 18       		.uleb128 0x18
 1893 0160 21       		.uleb128 0x21
 1894 0161 00       		.byte	0
 1895 0162 49       		.uleb128 0x49
 1896 0163 13       		.uleb128 0x13
 1897 0164 2F       		.uleb128 0x2f
 1898 0165 0B       		.uleb128 0xb
 1899 0166 00       		.byte	0
 1900 0167 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 50


 1901 0168 19       		.uleb128 0x19
 1902 0169 34       		.uleb128 0x34
 1903 016a 00       		.byte	0
 1904 016b 03       		.uleb128 0x3
 1905 016c 0E       		.uleb128 0xe
 1906 016d 3A       		.uleb128 0x3a
 1907 016e 0B       		.uleb128 0xb
 1908 016f 3B       		.uleb128 0x3b
 1909 0170 0B       		.uleb128 0xb
 1910 0171 49       		.uleb128 0x49
 1911 0172 13       		.uleb128 0x13
 1912 0173 00       		.byte	0
 1913 0174 00       		.byte	0
 1914 0175 1A       		.uleb128 0x1a
 1915 0176 26       		.uleb128 0x26
 1916 0177 00       		.byte	0
 1917 0178 49       		.uleb128 0x49
 1918 0179 13       		.uleb128 0x13
 1919 017a 00       		.byte	0
 1920 017b 00       		.byte	0
 1921 017c 1B       		.uleb128 0x1b
 1922 017d 34       		.uleb128 0x34
 1923 017e 00       		.byte	0
 1924 017f 03       		.uleb128 0x3
 1925 0180 0E       		.uleb128 0xe
 1926 0181 3A       		.uleb128 0x3a
 1927 0182 0B       		.uleb128 0xb
 1928 0183 3B       		.uleb128 0x3b
 1929 0184 0B       		.uleb128 0xb
 1930 0185 49       		.uleb128 0x49
 1931 0186 13       		.uleb128 0x13
 1932 0187 3F       		.uleb128 0x3f
 1933 0188 19       		.uleb128 0x19
 1934 0189 02       		.uleb128 0x2
 1935 018a 18       		.uleb128 0x18
 1936 018b 00       		.byte	0
 1937 018c 00       		.byte	0
 1938 018d 1C       		.uleb128 0x1c
 1939 018e 2E       		.uleb128 0x2e
 1940 018f 01       		.byte	0x1
 1941 0190 3F       		.uleb128 0x3f
 1942 0191 19       		.uleb128 0x19
 1943 0192 03       		.uleb128 0x3
 1944 0193 0E       		.uleb128 0xe
 1945 0194 3A       		.uleb128 0x3a
 1946 0195 0B       		.uleb128 0xb
 1947 0196 3B       		.uleb128 0x3b
 1948 0197 0B       		.uleb128 0xb
 1949 0198 27       		.uleb128 0x27
 1950 0199 19       		.uleb128 0x19
 1951 019a 3C       		.uleb128 0x3c
 1952 019b 19       		.uleb128 0x19
 1953 019c 01       		.uleb128 0x1
 1954 019d 13       		.uleb128 0x13
 1955 019e 00       		.byte	0
 1956 019f 00       		.byte	0
 1957 01a0 1D       		.uleb128 0x1d
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 51


 1958 01a1 05       		.uleb128 0x5
 1959 01a2 00       		.byte	0
 1960 01a3 49       		.uleb128 0x49
 1961 01a4 13       		.uleb128 0x13
 1962 01a5 00       		.byte	0
 1963 01a6 00       		.byte	0
 1964 01a7 1E       		.uleb128 0x1e
 1965 01a8 2E       		.uleb128 0x2e
 1966 01a9 01       		.byte	0x1
 1967 01aa 3F       		.uleb128 0x3f
 1968 01ab 19       		.uleb128 0x19
 1969 01ac 03       		.uleb128 0x3
 1970 01ad 0E       		.uleb128 0xe
 1971 01ae 3A       		.uleb128 0x3a
 1972 01af 0B       		.uleb128 0xb
 1973 01b0 3B       		.uleb128 0x3b
 1974 01b1 0B       		.uleb128 0xb
 1975 01b2 27       		.uleb128 0x27
 1976 01b3 19       		.uleb128 0x19
 1977 01b4 49       		.uleb128 0x49
 1978 01b5 13       		.uleb128 0x13
 1979 01b6 3C       		.uleb128 0x3c
 1980 01b7 19       		.uleb128 0x19
 1981 01b8 01       		.uleb128 0x1
 1982 01b9 13       		.uleb128 0x13
 1983 01ba 00       		.byte	0
 1984 01bb 00       		.byte	0
 1985 01bc 1F       		.uleb128 0x1f
 1986 01bd 2E       		.uleb128 0x2e
 1987 01be 01       		.byte	0x1
 1988 01bf 3F       		.uleb128 0x3f
 1989 01c0 19       		.uleb128 0x19
 1990 01c1 03       		.uleb128 0x3
 1991 01c2 0E       		.uleb128 0xe
 1992 01c3 3A       		.uleb128 0x3a
 1993 01c4 0B       		.uleb128 0xb
 1994 01c5 3B       		.uleb128 0x3b
 1995 01c6 0B       		.uleb128 0xb
 1996 01c7 27       		.uleb128 0x27
 1997 01c8 19       		.uleb128 0x19
 1998 01c9 3C       		.uleb128 0x3c
 1999 01ca 19       		.uleb128 0x19
 2000 01cb 00       		.byte	0
 2001 01cc 00       		.byte	0
 2002 01cd 00       		.byte	0
 2003              		.section	.debug_loc,"",%progbits
 2004              	.Ldebug_loc0:
 2005              	.LLST0:
 2006 0000 6C000000 		.4byte	.LVL5
 2007 0004 78000000 		.4byte	.LVL6
 2008 0008 0200     		.2byte	0x2
 2009 000a 30       		.byte	0x30
 2010 000b 9F       		.byte	0x9f
 2011 000c 78000000 		.4byte	.LVL6
 2012 0010 F4000000 		.4byte	.LFE1
 2013 0014 0100     		.2byte	0x1
 2014 0016 53       		.byte	0x53
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 52


 2015 0017 00000000 		.4byte	0
 2016 001b 00000000 		.4byte	0
 2017              	.LLST1:
 2018 001f 64000000 		.4byte	.LVL2
 2019 0023 68000000 		.4byte	.LVL3
 2020 0027 0100     		.2byte	0x1
 2021 0029 50       		.byte	0x50
 2022 002a 68000000 		.4byte	.LVL3
 2023 002e 6A000000 		.4byte	.LVL4
 2024 0032 0100     		.2byte	0x1
 2025 0034 51       		.byte	0x51
 2026 0035 6A000000 		.4byte	.LVL4
 2027 0039 78000000 		.4byte	.LVL6
 2028 003d 0100     		.2byte	0x1
 2029 003f 52       		.byte	0x52
 2030 0040 78000000 		.4byte	.LVL6
 2031 0044 8C000000 		.4byte	.LVL8
 2032 0048 0400     		.2byte	0x4
 2033 004a 0A       		.byte	0xa
 2034 004b 0001     		.2byte	0x100
 2035 004d 9F       		.byte	0x9f
 2036 004e 00000000 		.4byte	0
 2037 0052 00000000 		.4byte	0
 2038              	.LLST2:
 2039 0056 80000000 		.4byte	.LVL7
 2040 005a 8C000000 		.4byte	.LVL8
 2041 005e 0400     		.2byte	0x4
 2042 0060 0A       		.byte	0xa
 2043 0061 0010     		.2byte	0x1000
 2044 0063 9F       		.byte	0x9f
 2045 0064 00000000 		.4byte	0
 2046 0068 00000000 		.4byte	0
 2047              	.LLST3:
 2048 006c 00000000 		.4byte	.LVL12
 2049 0070 0C000000 		.4byte	.LVL13
 2050 0074 0100     		.2byte	0x1
 2051 0076 50       		.byte	0x50
 2052 0077 0C000000 		.4byte	.LVL13
 2053 007b 22000000 		.4byte	.LVL15
 2054 007f 0400     		.2byte	0x4
 2055 0081 F3       		.byte	0xf3
 2056 0082 01       		.uleb128 0x1
 2057 0083 50       		.byte	0x50
 2058 0084 9F       		.byte	0x9f
 2059 0085 22000000 		.4byte	.LVL15
 2060 0089 24000000 		.4byte	.LVL16
 2061 008d 0100     		.2byte	0x1
 2062 008f 50       		.byte	0x50
 2063 0090 24000000 		.4byte	.LVL16
 2064 0094 2C000000 		.4byte	.LFE6
 2065 0098 0400     		.2byte	0x4
 2066 009a F3       		.byte	0xf3
 2067 009b 01       		.uleb128 0x1
 2068 009c 50       		.byte	0x50
 2069 009d 9F       		.byte	0x9f
 2070 009e 00000000 		.4byte	0
 2071 00a2 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 53


 2072              	.LLST4:
 2073 00a6 00000000 		.4byte	.LVL12
 2074 00aa 0C000000 		.4byte	.LVL13
 2075 00ae 0200     		.2byte	0x2
 2076 00b0 30       		.byte	0x30
 2077 00b1 9F       		.byte	0x9f
 2078 00b2 10000000 		.4byte	.LVL14
 2079 00b6 22000000 		.4byte	.LVL15
 2080 00ba 0100     		.2byte	0x1
 2081 00bc 50       		.byte	0x50
 2082 00bd 22000000 		.4byte	.LVL15
 2083 00c1 24000000 		.4byte	.LVL16
 2084 00c5 0200     		.2byte	0x2
 2085 00c7 30       		.byte	0x30
 2086 00c8 9F       		.byte	0x9f
 2087 00c9 24000000 		.4byte	.LVL16
 2088 00cd 2C000000 		.4byte	.LFE6
 2089 00d1 0100     		.2byte	0x1
 2090 00d3 50       		.byte	0x50
 2091 00d4 00000000 		.4byte	0
 2092 00d8 00000000 		.4byte	0
 2093              	.LLST5:
 2094 00dc 00000000 		.4byte	.LVL17
 2095 00e0 08000000 		.4byte	.LVL18
 2096 00e4 0100     		.2byte	0x1
 2097 00e6 50       		.byte	0x50
 2098 00e7 08000000 		.4byte	.LVL18
 2099 00eb 12000000 		.4byte	.LVL20
 2100 00ef 0100     		.2byte	0x1
 2101 00f1 54       		.byte	0x54
 2102 00f2 12000000 		.4byte	.LVL20
 2103 00f6 1E000000 		.4byte	.LVL22
 2104 00fa 0400     		.2byte	0x4
 2105 00fc F3       		.byte	0xf3
 2106 00fd 01       		.uleb128 0x1
 2107 00fe 50       		.byte	0x50
 2108 00ff 9F       		.byte	0x9f
 2109 0100 1E000000 		.4byte	.LVL22
 2110 0104 20000000 		.4byte	.LVL23
 2111 0108 0100     		.2byte	0x1
 2112 010a 54       		.byte	0x54
 2113 010b 20000000 		.4byte	.LVL23
 2114 010f 28000000 		.4byte	.LFE7
 2115 0113 0400     		.2byte	0x4
 2116 0115 F3       		.byte	0xf3
 2117 0116 01       		.uleb128 0x1
 2118 0117 50       		.byte	0x50
 2119 0118 9F       		.byte	0x9f
 2120 0119 00000000 		.4byte	0
 2121 011d 00000000 		.4byte	0
 2122              	.LLST6:
 2123 0121 1C000000 		.4byte	.LVL21
 2124 0125 1E000000 		.4byte	.LVL22
 2125 0129 0100     		.2byte	0x1
 2126 012b 50       		.byte	0x50
 2127 012c 20000000 		.4byte	.LVL23
 2128 0130 22000000 		.4byte	.LVL24
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 54


 2129 0134 0100     		.2byte	0x1
 2130 0136 50       		.byte	0x50
 2131 0137 00000000 		.4byte	0
 2132 013b 00000000 		.4byte	0
 2133              	.LLST7:
 2134 013f 00000000 		.4byte	.LVL25
 2135 0143 04000000 		.4byte	.LVL26
 2136 0147 0100     		.2byte	0x1
 2137 0149 50       		.byte	0x50
 2138 014a 04000000 		.4byte	.LVL26
 2139 014e 10000000 		.4byte	.LFE8
 2140 0152 0400     		.2byte	0x4
 2141 0154 F3       		.byte	0xf3
 2142 0155 01       		.uleb128 0x1
 2143 0156 50       		.byte	0x50
 2144 0157 9F       		.byte	0x9f
 2145 0158 00000000 		.4byte	0
 2146 015c 00000000 		.4byte	0
 2147              	.LLST8:
 2148 0160 00000000 		.4byte	.LVL27
 2149 0164 0E000000 		.4byte	.LVL28
 2150 0168 0100     		.2byte	0x1
 2151 016a 50       		.byte	0x50
 2152 016b 0E000000 		.4byte	.LVL28
 2153 016f 1C000000 		.4byte	.LFE9
 2154 0173 0400     		.2byte	0x4
 2155 0175 F3       		.byte	0xf3
 2156 0176 01       		.uleb128 0x1
 2157 0177 50       		.byte	0x50
 2158 0178 9F       		.byte	0x9f
 2159 0179 00000000 		.4byte	0
 2160 017d 00000000 		.4byte	0
 2161              	.LLST9:
 2162 0181 00000000 		.4byte	.LVL29
 2163 0185 0E000000 		.4byte	.LVL30
 2164 0189 0100     		.2byte	0x1
 2165 018b 50       		.byte	0x50
 2166 018c 0E000000 		.4byte	.LVL30
 2167 0190 18000000 		.4byte	.LFE10
 2168 0194 0400     		.2byte	0x4
 2169 0196 F3       		.byte	0xf3
 2170 0197 01       		.uleb128 0x1
 2171 0198 50       		.byte	0x50
 2172 0199 9F       		.byte	0x9f
 2173 019a 00000000 		.4byte	0
 2174 019e 00000000 		.4byte	0
 2175              	.LLST10:
 2176 01a2 00000000 		.4byte	.LVL31
 2177 01a6 04000000 		.4byte	.LVL32
 2178 01aa 0100     		.2byte	0x1
 2179 01ac 50       		.byte	0x50
 2180 01ad 04000000 		.4byte	.LVL32
 2181 01b1 10000000 		.4byte	.LFE11
 2182 01b5 0400     		.2byte	0x4
 2183 01b7 F3       		.byte	0xf3
 2184 01b8 01       		.uleb128 0x1
 2185 01b9 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 55


 2186 01ba 9F       		.byte	0x9f
 2187 01bb 00000000 		.4byte	0
 2188 01bf 00000000 		.4byte	0
 2189              	.LLST11:
 2190 01c3 00000000 		.4byte	.LVL33
 2191 01c7 04000000 		.4byte	.LVL34
 2192 01cb 0100     		.2byte	0x1
 2193 01cd 50       		.byte	0x50
 2194 01ce 04000000 		.4byte	.LVL34
 2195 01d2 10000000 		.4byte	.LFE12
 2196 01d6 0400     		.2byte	0x4
 2197 01d8 F3       		.byte	0xf3
 2198 01d9 01       		.uleb128 0x1
 2199 01da 50       		.byte	0x50
 2200 01db 9F       		.byte	0x9f
 2201 01dc 00000000 		.4byte	0
 2202 01e0 00000000 		.4byte	0
 2203              	.LLST12:
 2204 01e4 00000000 		.4byte	.LVL35
 2205 01e8 0C000000 		.4byte	.LVL36
 2206 01ec 0100     		.2byte	0x1
 2207 01ee 50       		.byte	0x50
 2208 01ef 0C000000 		.4byte	.LVL36
 2209 01f3 12000000 		.4byte	.LVL38
 2210 01f7 0100     		.2byte	0x1
 2211 01f9 54       		.byte	0x54
 2212 01fa 12000000 		.4byte	.LVL38
 2213 01fe 1C000000 		.4byte	.LFE13
 2214 0202 0400     		.2byte	0x4
 2215 0204 F3       		.byte	0xf3
 2216 0205 01       		.uleb128 0x1
 2217 0206 50       		.byte	0x50
 2218 0207 9F       		.byte	0x9f
 2219 0208 00000000 		.4byte	0
 2220 020c 00000000 		.4byte	0
 2221              	.LLST13:
 2222 0210 00000000 		.4byte	.LVL35
 2223 0214 0F000000 		.4byte	.LVL37-1
 2224 0218 0100     		.2byte	0x1
 2225 021a 51       		.byte	0x51
 2226 021b 0F000000 		.4byte	.LVL37-1
 2227 021f 1C000000 		.4byte	.LFE13
 2228 0223 0400     		.2byte	0x4
 2229 0225 F3       		.byte	0xf3
 2230 0226 01       		.uleb128 0x1
 2231 0227 51       		.byte	0x51
 2232 0228 9F       		.byte	0x9f
 2233 0229 00000000 		.4byte	0
 2234 022d 00000000 		.4byte	0
 2235              	.LLST14:
 2236 0231 00000000 		.4byte	.LVL39
 2237 0235 0C000000 		.4byte	.LVL40
 2238 0239 0100     		.2byte	0x1
 2239 023b 50       		.byte	0x50
 2240 023c 0C000000 		.4byte	.LVL40
 2241 0240 12000000 		.4byte	.LVL42
 2242 0244 0100     		.2byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 56


 2243 0246 54       		.byte	0x54
 2244 0247 12000000 		.4byte	.LVL42
 2245 024b 1C000000 		.4byte	.LFE14
 2246 024f 0400     		.2byte	0x4
 2247 0251 F3       		.byte	0xf3
 2248 0252 01       		.uleb128 0x1
 2249 0253 50       		.byte	0x50
 2250 0254 9F       		.byte	0x9f
 2251 0255 00000000 		.4byte	0
 2252 0259 00000000 		.4byte	0
 2253              	.LLST15:
 2254 025d 00000000 		.4byte	.LVL39
 2255 0261 0F000000 		.4byte	.LVL41-1
 2256 0265 0100     		.2byte	0x1
 2257 0267 51       		.byte	0x51
 2258 0268 0F000000 		.4byte	.LVL41-1
 2259 026c 16000000 		.4byte	.LVL43
 2260 0270 0100     		.2byte	0x1
 2261 0272 55       		.byte	0x55
 2262 0273 16000000 		.4byte	.LVL43
 2263 0277 1C000000 		.4byte	.LFE14
 2264 027b 0800     		.2byte	0x8
 2265 027d F3       		.byte	0xf3
 2266 027e 01       		.uleb128 0x1
 2267 027f 50       		.byte	0x50
 2268 0280 32       		.byte	0x32
 2269 0281 24       		.byte	0x24
 2270 0282 73       		.byte	0x73
 2271 0283 00       		.sleb128 0
 2272 0284 22       		.byte	0x22
 2273 0285 00000000 		.4byte	0
 2274 0289 00000000 		.4byte	0
 2275              	.LLST16:
 2276 028d 00000000 		.4byte	.LVL44
 2277 0291 0C000000 		.4byte	.LVL45
 2278 0295 0100     		.2byte	0x1
 2279 0297 50       		.byte	0x50
 2280 0298 0C000000 		.4byte	.LVL45
 2281 029c 42000000 		.4byte	.LVL51
 2282 02a0 0100     		.2byte	0x1
 2283 02a2 54       		.byte	0x54
 2284 02a3 42000000 		.4byte	.LVL51
 2285 02a7 5C000000 		.4byte	.LFE15
 2286 02ab 0400     		.2byte	0x4
 2287 02ad F3       		.byte	0xf3
 2288 02ae 01       		.uleb128 0x1
 2289 02af 50       		.byte	0x50
 2290 02b0 9F       		.byte	0x9f
 2291 02b1 00000000 		.4byte	0
 2292 02b5 00000000 		.4byte	0
 2293              	.LLST17:
 2294 02b9 00000000 		.4byte	.LVL44
 2295 02bd 0F000000 		.4byte	.LVL46-1
 2296 02c1 0100     		.2byte	0x1
 2297 02c3 51       		.byte	0x51
 2298 02c4 0F000000 		.4byte	.LVL46-1
 2299 02c8 1A000000 		.4byte	.LVL47
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 57


 2300 02cc 0400     		.2byte	0x4
 2301 02ce F3       		.byte	0xf3
 2302 02cf 01       		.uleb128 0x1
 2303 02d0 51       		.byte	0x51
 2304 02d1 9F       		.byte	0x9f
 2305 02d2 1A000000 		.4byte	.LVL47
 2306 02d6 26000000 		.4byte	.LVL48
 2307 02da 0100     		.2byte	0x1
 2308 02dc 51       		.byte	0x51
 2309 02dd 30000000 		.4byte	.LVL49
 2310 02e1 34000000 		.4byte	.LVL50
 2311 02e5 0100     		.2byte	0x1
 2312 02e7 51       		.byte	0x51
 2313 02e8 00000000 		.4byte	0
 2314 02ec 00000000 		.4byte	0
 2315              	.LLST18:
 2316 02f0 4A000000 		.4byte	.LVL52
 2317 02f4 4C000000 		.4byte	.LVL53
 2318 02f8 0100     		.2byte	0x1
 2319 02fa 50       		.byte	0x50
 2320 02fb 00000000 		.4byte	0
 2321 02ff 00000000 		.4byte	0
 2322              	.LLST19:
 2323 0303 00000000 		.4byte	.LVL54
 2324 0307 0C000000 		.4byte	.LVL55
 2325 030b 0100     		.2byte	0x1
 2326 030d 50       		.byte	0x50
 2327 030e 0C000000 		.4byte	.LVL55
 2328 0312 26000000 		.4byte	.LVL59
 2329 0316 0100     		.2byte	0x1
 2330 0318 56       		.byte	0x56
 2331 0319 26000000 		.4byte	.LVL59
 2332 031d 48000000 		.4byte	.LFE16
 2333 0321 0400     		.2byte	0x4
 2334 0323 F3       		.byte	0xf3
 2335 0324 01       		.uleb128 0x1
 2336 0325 50       		.byte	0x50
 2337 0326 9F       		.byte	0x9f
 2338 0327 00000000 		.4byte	0
 2339 032b 00000000 		.4byte	0
 2340              	.LLST20:
 2341 032f 00000000 		.4byte	.LVL54
 2342 0333 0F000000 		.4byte	.LVL56-1
 2343 0337 0100     		.2byte	0x1
 2344 0339 51       		.byte	0x51
 2345 033a 0F000000 		.4byte	.LVL56-1
 2346 033e 1A000000 		.4byte	.LVL57
 2347 0342 0400     		.2byte	0x4
 2348 0344 F3       		.byte	0xf3
 2349 0345 01       		.uleb128 0x1
 2350 0346 51       		.byte	0x51
 2351 0347 9F       		.byte	0x9f
 2352 0348 1A000000 		.4byte	.LVL57
 2353 034c 23000000 		.4byte	.LVL58-1
 2354 0350 0100     		.2byte	0x1
 2355 0352 50       		.byte	0x50
 2356 0353 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 58


 2357 0357 00000000 		.4byte	0
 2358              	.LLST21:
 2359 035b 00000000 		.4byte	.LVL61
 2360 035f 0C000000 		.4byte	.LVL62
 2361 0363 0100     		.2byte	0x1
 2362 0365 50       		.byte	0x50
 2363 0366 0C000000 		.4byte	.LVL62
 2364 036a 28000000 		.4byte	.LVL68
 2365 036e 0100     		.2byte	0x1
 2366 0370 54       		.byte	0x54
 2367 0371 28000000 		.4byte	.LVL68
 2368 0375 48000000 		.4byte	.LFE17
 2369 0379 0400     		.2byte	0x4
 2370 037b F3       		.byte	0xf3
 2371 037c 01       		.uleb128 0x1
 2372 037d 50       		.byte	0x50
 2373 037e 9F       		.byte	0x9f
 2374 037f 00000000 		.4byte	0
 2375 0383 00000000 		.4byte	0
 2376              	.LLST22:
 2377 0387 00000000 		.4byte	.LVL61
 2378 038b 0F000000 		.4byte	.LVL63-1
 2379 038f 0100     		.2byte	0x1
 2380 0391 51       		.byte	0x51
 2381 0392 0F000000 		.4byte	.LVL63-1
 2382 0396 1A000000 		.4byte	.LVL64
 2383 039a 0400     		.2byte	0x4
 2384 039c F3       		.byte	0xf3
 2385 039d 01       		.uleb128 0x1
 2386 039e 51       		.byte	0x51
 2387 039f 9F       		.byte	0x9f
 2388 03a0 1A000000 		.4byte	.LVL64
 2389 03a4 26000000 		.4byte	.LVL67
 2390 03a8 0100     		.2byte	0x1
 2391 03aa 55       		.byte	0x55
 2392 03ab 00000000 		.4byte	0
 2393 03af 00000000 		.4byte	0
 2394              		.section	.debug_aranges,"",%progbits
 2395 0000 A4000000 		.4byte	0xa4
 2396 0004 0200     		.2byte	0x2
 2397 0006 00000000 		.4byte	.Ldebug_info0
 2398 000a 04       		.byte	0x4
 2399 000b 00       		.byte	0
 2400 000c 0000     		.2byte	0
 2401 000e 0000     		.2byte	0
 2402 0010 00000000 		.4byte	.LFB1
 2403 0014 F4000000 		.4byte	.LFE1-.LFB1
 2404 0018 00000000 		.4byte	.LFB2
 2405 001c 24000000 		.4byte	.LFE2-.LFB2
 2406 0020 00000000 		.4byte	.LFB0
 2407 0024 20000000 		.4byte	.LFE0-.LFB0
 2408 0028 00000000 		.4byte	.LFB3
 2409 002c 10000000 		.4byte	.LFE3-.LFB3
 2410 0030 00000000 		.4byte	.LFB4
 2411 0034 14000000 		.4byte	.LFE4-.LFB4
 2412 0038 00000000 		.4byte	.LFB5
 2413 003c 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 59


 2414 0040 00000000 		.4byte	.LFB6
 2415 0044 2C000000 		.4byte	.LFE6-.LFB6
 2416 0048 00000000 		.4byte	.LFB7
 2417 004c 28000000 		.4byte	.LFE7-.LFB7
 2418 0050 00000000 		.4byte	.LFB8
 2419 0054 10000000 		.4byte	.LFE8-.LFB8
 2420 0058 00000000 		.4byte	.LFB9
 2421 005c 1C000000 		.4byte	.LFE9-.LFB9
 2422 0060 00000000 		.4byte	.LFB10
 2423 0064 18000000 		.4byte	.LFE10-.LFB10
 2424 0068 00000000 		.4byte	.LFB11
 2425 006c 10000000 		.4byte	.LFE11-.LFB11
 2426 0070 00000000 		.4byte	.LFB12
 2427 0074 10000000 		.4byte	.LFE12-.LFB12
 2428 0078 00000000 		.4byte	.LFB13
 2429 007c 1C000000 		.4byte	.LFE13-.LFB13
 2430 0080 00000000 		.4byte	.LFB14
 2431 0084 1C000000 		.4byte	.LFE14-.LFB14
 2432 0088 00000000 		.4byte	.LFB15
 2433 008c 5C000000 		.4byte	.LFE15-.LFB15
 2434 0090 00000000 		.4byte	.LFB16
 2435 0094 48000000 		.4byte	.LFE16-.LFB16
 2436 0098 00000000 		.4byte	.LFB17
 2437 009c 48000000 		.4byte	.LFE17-.LFB17
 2438 00a0 00000000 		.4byte	0
 2439 00a4 00000000 		.4byte	0
 2440              		.section	.debug_ranges,"",%progbits
 2441              	.Ldebug_ranges0:
 2442 0000 00000000 		.4byte	.LFB1
 2443 0004 F4000000 		.4byte	.LFE1
 2444 0008 00000000 		.4byte	.LFB2
 2445 000c 24000000 		.4byte	.LFE2
 2446 0010 00000000 		.4byte	.LFB0
 2447 0014 20000000 		.4byte	.LFE0
 2448 0018 00000000 		.4byte	.LFB3
 2449 001c 10000000 		.4byte	.LFE3
 2450 0020 00000000 		.4byte	.LFB4
 2451 0024 14000000 		.4byte	.LFE4
 2452 0028 00000000 		.4byte	.LFB5
 2453 002c 14000000 		.4byte	.LFE5
 2454 0030 00000000 		.4byte	.LFB6
 2455 0034 2C000000 		.4byte	.LFE6
 2456 0038 00000000 		.4byte	.LFB7
 2457 003c 28000000 		.4byte	.LFE7
 2458 0040 00000000 		.4byte	.LFB8
 2459 0044 10000000 		.4byte	.LFE8
 2460 0048 00000000 		.4byte	.LFB9
 2461 004c 1C000000 		.4byte	.LFE9
 2462 0050 00000000 		.4byte	.LFB10
 2463 0054 18000000 		.4byte	.LFE10
 2464 0058 00000000 		.4byte	.LFB11
 2465 005c 10000000 		.4byte	.LFE11
 2466 0060 00000000 		.4byte	.LFB12
 2467 0064 10000000 		.4byte	.LFE12
 2468 0068 00000000 		.4byte	.LFB13
 2469 006c 1C000000 		.4byte	.LFE13
 2470 0070 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 60


 2471 0074 1C000000 		.4byte	.LFE14
 2472 0078 00000000 		.4byte	.LFB15
 2473 007c 5C000000 		.4byte	.LFE15
 2474 0080 00000000 		.4byte	.LFB16
 2475 0084 48000000 		.4byte	.LFE16
 2476 0088 00000000 		.4byte	.LFB17
 2477 008c 48000000 		.4byte	.LFE17
 2478 0090 00000000 		.4byte	0
 2479 0094 00000000 		.4byte	0
 2480              		.section	.debug_line,"",%progbits
 2481              	.Ldebug_line0:
 2482 0000 99020000 		.section	.debug_str,"MS",%progbits,1
 2482      02005700 
 2482      00000201 
 2482      FB0E0D00 
 2482      01010101 
 2483              	.LASF58:
 2484 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2484      5341525F 
 2484      5365715F 
 2484      315F6F66 
 2484      66736574 
 2485              	.LASF10:
 2486 0015 75696E74 		.ascii	"uint16\000"
 2486      313600
 2487              	.LASF25:
 2488 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2488      5341525F 
 2488      5365715F 
 2488      315F496E 
 2488      697400
 2489              	.LASF48:
 2490 002f 61646347 		.ascii	"adcGain\000"
 2490      61696E00 
 2491              	.LASF24:
 2492 0037 636F756E 		.ascii	"counts\000"
 2492      747300
 2493              	.LASF29:
 2494 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2494      5341525F 
 2494      5365715F 
 2494      315F5374 
 2494      61727443 
 2495              	.LASF44:
 2496 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2496      5341525F 
 2496      5365715F 
 2496      315F5365 
 2496      74536174 
 2497              	.LASF62:
 2498 0072 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2498      4320342E 
 2498      382E3420 
 2498      32303134 
 2498      30353236 
 2499 00a5 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2499      20726576 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 61


 2499      6973696F 
 2499      6E203231 
 2499      31333538 
 2500 00d8 67202D66 		.ascii	"g -ffunction-sections\000"
 2500      66756E63 
 2500      74696F6E 
 2500      2D736563 
 2500      74696F6E 
 2501              	.LASF7:
 2502 00ee 6C6F6E67 		.ascii	"long long unsigned int\000"
 2502      206C6F6E 
 2502      6720756E 
 2502      7369676E 
 2502      65642069 
 2503              	.LASF26:
 2504 0105 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2504      5341525F 
 2504      5365715F 
 2504      315F456E 
 2504      61626C65 
 2505              	.LASF33:
 2506 011a 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2506      5341525F 
 2506      5365715F 
 2506      315F4765 
 2506      74526573 
 2507              	.LASF6:
 2508 0134 6C6F6E67 		.ascii	"long long int\000"
 2508      206C6F6E 
 2508      6720696E 
 2508      7400
 2509              	.LASF0:
 2510 0142 7369676E 		.ascii	"signed char\000"
 2510      65642063 
 2510      68617200 
 2511              	.LASF41:
 2512 014e 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2512      5341525F 
 2512      5365715F 
 2512      315F5365 
 2512      74486967 
 2513              	.LASF64:
 2514 0169 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 2514      73657273 
 2514      5C6D6974 
 2514      6368656C 
 2514      6C5C446F 
 2515 0196 2D546872 		.ascii	"-Throttle\\Potentiometer-Test.cydsn\000"
 2515      6F74746C 
 2515      655C506F 
 2515      74656E74 
 2515      696F6D65 
 2516              	.LASF13:
 2517 01b9 696E7433 		.ascii	"int32\000"
 2517      3200
 2518              	.LASF52:
 2519 01bf 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 62


 2519      5341525F 
 2519      5365715F 
 2519      315F436F 
 2519      756E7473 
 2520              	.LASF27:
 2521 01dd 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2521      5341525F 
 2521      5365715F 
 2521      315F5374 
 2521      61727400 
 2522              	.LASF4:
 2523 01f1 6C6F6E67 		.ascii	"long int\000"
 2523      20696E74 
 2523      00
 2524              	.LASF9:
 2525 01fa 75696E74 		.ascii	"uint8\000"
 2525      3800
 2526              	.LASF61:
 2527 0200 43794465 		.ascii	"CyDelayUs\000"
 2527      6C617955 
 2527      7300
 2528              	.LASF16:
 2529 020a 646F7562 		.ascii	"double\000"
 2529      6C6500
 2530              	.LASF11:
 2531 0211 75696E74 		.ascii	"uint32\000"
 2531      333200
 2532              	.LASF38:
 2533 0218 6D61736B 		.ascii	"mask\000"
 2533      00
 2534              	.LASF49:
 2535 021d 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2535      5341525F 
 2535      5365715F 
 2535      315F436F 
 2535      756E7473 
 2536              	.LASF34:
 2537 023b 7265744D 		.ascii	"retMode\000"
 2537      6F646500 
 2538              	.LASF57:
 2539 0243 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2539      5341525F 
 2539      5365715F 
 2539      315F696E 
 2539      69745661 
 2540              	.LASF8:
 2541 0259 756E7369 		.ascii	"unsigned int\000"
 2541      676E6564 
 2541      20696E74 
 2541      00
 2542              	.LASF55:
 2543 0266 75566F6C 		.ascii	"uVolts\000"
 2543      747300
 2544              	.LASF5:
 2545 026d 6C6F6E67 		.ascii	"long unsigned int\000"
 2545      20756E73 
 2545      69676E65 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 63


 2545      6420696E 
 2545      7400
 2546              	.LASF54:
 2547 027f 766F6C74 		.ascii	"volts\000"
 2547      7300
 2548              	.LASF23:
 2549 0285 746D7052 		.ascii	"tmpRegVal\000"
 2549      65675661 
 2549      6C00
 2550              	.LASF3:
 2551 028f 73686F72 		.ascii	"short unsigned int\000"
 2551      7420756E 
 2551      7369676E 
 2551      65642069 
 2551      6E7400
 2552              	.LASF65:
 2553 02a2 4379496E 		.ascii	"CyIntSetVector\000"
 2553      74536574 
 2553      56656374 
 2553      6F7200
 2554              	.LASF56:
 2555 02b1 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2555      5341525F 
 2555      5365715F 
 2555      315F6368 
 2555      616E6E65 
 2556              	.LASF51:
 2557 02ce 6D566F6C 		.ascii	"mVolts\000"
 2557      747300
 2558              	.LASF19:
 2559 02d5 72656733 		.ascii	"reg32\000"
 2559      3200
 2560              	.LASF63:
 2561 02db 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2561      6E657261 
 2561      7465645F 
 2561      536F7572 
 2561      63655C50 
 2562              	.LASF14:
 2563 0304 666C6F61 		.ascii	"float32\000"
 2563      74333200 
 2564              	.LASF21:
 2565 030c 73697A65 		.ascii	"sizetype\000"
 2565      74797065 
 2565      00
 2566              	.LASF40:
 2567 0315 6C6F774C 		.ascii	"lowLimit\000"
 2567      696D6974 
 2567      00
 2568              	.LASF32:
 2569 031e 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2569      5341525F 
 2569      5365715F 
 2569      315F4973 
 2569      456E6443 
 2570              	.LASF30:
 2571 033c 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 64


 2571      5341525F 
 2571      5365715F 
 2571      315F5374 
 2571      6F70436F 
 2572              	.LASF17:
 2573 0356 696E7436 		.ascii	"int64\000"
 2573      3400
 2574              	.LASF60:
 2575 035c 4379496E 		.ascii	"CyIntSetPriority\000"
 2575      74536574 
 2575      5072696F 
 2575      72697479 
 2575      00
 2576              	.LASF15:
 2577 036d 666C6F61 		.ascii	"float\000"
 2577      7400
 2578              	.LASF47:
 2579 0373 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2579      5341525F 
 2579      5365715F 
 2579      315F5365 
 2579      74476169 
 2580              	.LASF28:
 2581 0389 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2581      5341525F 
 2581      5365715F 
 2581      315F5374 
 2581      6F7000
 2582              	.LASF42:
 2583 039c 68696768 		.ascii	"highLimit\000"
 2583      4C696D69 
 2583      7400
 2584              	.LASF66:
 2585 03a6 43794861 		.ascii	"CyHalt\000"
 2585      6C7400
 2586              	.LASF1:
 2587 03ad 756E7369 		.ascii	"unsigned char\000"
 2587      676E6564 
 2587      20636861 
 2587      7200
 2588              	.LASF2:
 2589 03bb 73686F72 		.ascii	"short int\000"
 2589      7420696E 
 2589      7400
 2590              	.LASF53:
 2591 03c5 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2591      5341525F 
 2591      5365715F 
 2591      315F436F 
 2591      756E7473 
 2592              	.LASF37:
 2593 03e2 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2593      5341525F 
 2593      5365715F 
 2593      315F5365 
 2593      74436861 
 2594              	.LASF22:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccw789jO.s 			page 65


 2595 03fc 63684E75 		.ascii	"chNum\000"
 2595      6D00
 2596              	.LASF35:
 2597 0402 6368616E 		.ascii	"chan\000"
 2597      00
 2598              	.LASF18:
 2599 0407 63686172 		.ascii	"char\000"
 2599      00
 2600              	.LASF20:
 2601 040c 63796973 		.ascii	"cyisraddress\000"
 2601      72616464 
 2601      72657373 
 2601      00
 2602              	.LASF39:
 2603 0419 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2603      5341525F 
 2603      5365715F 
 2603      315F5365 
 2603      744C6F77 
 2604              	.LASF46:
 2605 0433 6F666673 		.ascii	"offset\000"
 2605      657400
 2606              	.LASF50:
 2607 043a 61646343 		.ascii	"adcCounts\000"
 2607      6F756E74 
 2607      7300
 2608              	.LASF59:
 2609 0444 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2609      5341525F 
 2609      5365715F 
 2609      315F636F 
 2609      756E7473 
 2610              	.LASF31:
 2611 0462 73746174 		.ascii	"status\000"
 2611      757300
 2612              	.LASF45:
 2613 0469 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2613      5341525F 
 2613      5365715F 
 2613      315F5365 
 2613      744F6666 
 2614              	.LASF12:
 2615 0481 696E7431 		.ascii	"int16\000"
 2615      3600
 2616              	.LASF43:
 2617 0487 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2617      5341525F 
 2617      5365715F 
 2617      315F5365 
 2617      744C696D 
 2618              	.LASF36:
 2619 04a2 72657375 		.ascii	"result\000"
 2619      6C7400
 2620              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
