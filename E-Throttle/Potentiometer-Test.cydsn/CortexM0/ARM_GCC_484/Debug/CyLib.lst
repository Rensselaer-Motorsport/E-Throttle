ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.10
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the clocking, interrupts, and watchdog timer.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
   9:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/CyLib.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/CyLib.c **** *
  12:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2 && CY_IP_FMLT)
  22:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  23:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  24:.\Generated_Source\PSoC4/CyLib.c **** 
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void);
  38:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  39:.\Generated_Source\PSoC4/CyLib.c **** 
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  42:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  43:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  44:.\Generated_Source\PSoC4/CyLib.c **** *
  45:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  46:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  47:.\Generated_Source\PSoC4/CyLib.c **** *
  48:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  49:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  51:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  52:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  53:.\Generated_Source\PSoC4/CyLib.c **** 
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  56:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  57:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  58:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  70:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  71:.\Generated_Source\PSoC4/CyLib.c **** 
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  74:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  75:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  76:.\Generated_Source\PSoC4/CyLib.c **** *
  77:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  78:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  79:.\Generated_Source\PSoC4/CyLib.c **** *
  80:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  81:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
  82:.\Generated_Source\PSoC4/CyLib.c **** *
  83:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
  84:.\Generated_Source\PSoC4/CyLib.c **** *  None
  85:.\Generated_Source\PSoC4/CyLib.c **** *
  86:.\Generated_Source\PSoC4/CyLib.c **** * Return:
  87:.\Generated_Source\PSoC4/CyLib.c **** *  None
  88:.\Generated_Source\PSoC4/CyLib.c **** *
  89:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  91:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 91 0
  27              		.cfi_startproc
  92:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 92 0
  29 0000 034B     		ldr	r3, .L2
  30 0002 1968     		ldr	r1, [r3]
  31 0004 8022     		mov	r2, #128
  32 0006 1206     		lsl	r2, r2, #24
  33 0008 0A43     		orr	r2, r1
  34 000a 1A60     		str	r2, [r3]
  93:.\Generated_Source\PSoC4/CyLib.c **** 
  94:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  95:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
  96:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
  97:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
  98:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  99:.\Generated_Source\PSoC4/CyLib.c **** 
 100:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 100 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE0:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoStop
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
  51              	CySysClkImoStop:
  52              	.LFB1:
 101:.\Generated_Source\PSoC4/CyLib.c **** 
 102:.\Generated_Source\PSoC4/CyLib.c **** 
 103:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 104:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 105:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices , this function will also disable WCO lock
 111:.\Generated_Source\PSoC4/CyLib.c **** *  if already enabled.
 112:.\Generated_Source\PSoC4/CyLib.c **** *
 113:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 114:.\Generated_Source\PSoC4/CyLib.c **** *  None
 115:.\Generated_Source\PSoC4/CyLib.c **** *
 116:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 117:.\Generated_Source\PSoC4/CyLib.c **** *  None
 118:.\Generated_Source\PSoC4/CyLib.c **** *
 119:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 4


 120:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 121:.\Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 121 0
  54              		.cfi_startproc
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 123:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 124:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 125:.\Generated_Source\PSoC4/CyLib.c **** 
 126:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 126 0
  56 0000 024B     		ldr	r3, .L5
  57 0002 1A68     		ldr	r2, [r3]
  58 0004 5200     		lsl	r2, r2, #1
  59 0006 5208     		lsr	r2, r2, #1
  60 0008 1A60     		str	r2, [r3]
 127:.\Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 127 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 08010B40 		.word	1074462984
  68              		.cfi_endproc
  69              	.LFE1:
  70              		.size	CySysClkImoStop, .-CySysClkImoStop
  71              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkWriteHfclkDirect
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkWriteHfclkDirect, %function
  77              	CySysClkWriteHfclkDirect:
  78              	.LFB2:
 128:.\Generated_Source\PSoC4/CyLib.c **** 
 129:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 133:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c ****     *
 135:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 136:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 137:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 138:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 139:.\Generated_Source\PSoC4/CyLib.c ****     *
 140:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 141:.\Generated_Source\PSoC4/CyLib.c ****     *
 142:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 144:.\Generated_Source\PSoC4/CyLib.c ****     *
 145:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 146:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 147:.\Generated_Source\PSoC4/CyLib.c ****     *
 148:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 150:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 5


 151:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 152:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 153:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 154:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 155:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 156:.\Generated_Source\PSoC4/CyLib.c **** 
 157:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 158:.\Generated_Source\PSoC4/CyLib.c ****         {
 159:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 160:.\Generated_Source\PSoC4/CyLib.c **** 
 161:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 163:.\Generated_Source\PSoC4/CyLib.c ****             {
 164:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 165:.\Generated_Source\PSoC4/CyLib.c ****                 {
 166:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 167:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 168:.\Generated_Source\PSoC4/CyLib.c ****                 }
 169:.\Generated_Source\PSoC4/CyLib.c ****             }
 170:.\Generated_Source\PSoC4/CyLib.c **** 
 171:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 172:.\Generated_Source\PSoC4/CyLib.c ****             {
 173:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 174:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_GAIN;
 175:.\Generated_Source\PSoC4/CyLib.c ****             }
 176:.\Generated_Source\PSoC4/CyLib.c **** 
 177:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 178:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 179:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK);
 180:.\Generated_Source\PSoC4/CyLib.c **** 
 181:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 182:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 185:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 186:.\Generated_Source\PSoC4/CyLib.c **** 
 187:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 188:.\Generated_Source\PSoC4/CyLib.c **** 
 189:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 190:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 191:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 192:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(320u);
 193:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 196:.\Generated_Source\PSoC4/CyLib.c ****         }
 197:.\Generated_Source\PSoC4/CyLib.c ****     }
 198:.\Generated_Source\PSoC4/CyLib.c **** 
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 201:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 202:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 203:.\Generated_Source\PSoC4/CyLib.c ****     *
 204:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 205:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 206:.\Generated_Source\PSoC4/CyLib.c ****     *
 207:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 6


 208:.\Generated_Source\PSoC4/CyLib.c ****     *
 209:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 210:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 211:.\Generated_Source\PSoC4/CyLib.c ****     *
 212:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 213:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 214:.\Generated_Source\PSoC4/CyLib.c ****     *
 215:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 216:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 217:.\Generated_Source\PSoC4/CyLib.c ****     {
 218:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 219:.\Generated_Source\PSoC4/CyLib.c ****     }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c **** 
 222:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 224:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/CyLib.c ****     *
 226:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 227:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 228:.\Generated_Source\PSoC4/CyLib.c ****     *
 229:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 230:.\Generated_Source\PSoC4/CyLib.c ****     *
 231:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 232:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 233:.\Generated_Source\PSoC4/CyLib.c ****     *
 234:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 235:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 236:.\Generated_Source\PSoC4/CyLib.c ****     *
 237:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 238:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void)
 239:.\Generated_Source\PSoC4/CyLib.c ****     {
 240:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 241:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 242:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 243:.\Generated_Source\PSoC4/CyLib.c ****     }
 244:.\Generated_Source\PSoC4/CyLib.c **** 
 245:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 246:.\Generated_Source\PSoC4/CyLib.c **** 
 247:.\Generated_Source\PSoC4/CyLib.c **** 
 248:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 250:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/CyLib.c **** *
 252:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 253:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 254:.\Generated_Source\PSoC4/CyLib.c **** *
 255:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 256:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 257:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 258:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 259:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 260:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 261:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 262:.\Generated_Source\PSoC4/CyLib.c **** *
 263:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 264:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 7


 265:.\Generated_Source\PSoC4/CyLib.c **** *
 266:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 267:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 268:.\Generated_Source\PSoC4/CyLib.c **** *
 269:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 270:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 271:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 272:.\Generated_Source\PSoC4/CyLib.c **** *
 273:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 274:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 275:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 276:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 277:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 278:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 279:.\Generated_Source\PSoC4/CyLib.c **** *
 280:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 282:.\Generated_Source\PSoC4/CyLib.c **** {
  79              		.loc 1 282 0
  80              		.cfi_startproc
  81              	.LVL0:
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		mov	r4, r0
 283:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 284:.\Generated_Source\PSoC4/CyLib.c **** 
 285:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  87              		.loc 1 285 0
  88 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL1:
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
  90              		.loc 1 287 0
  91 0008 054B     		ldr	r3, .L8
  92 000a 1A68     		ldr	r2, [r3]
  93 000c 0721     		mov	r1, #7
  94 000e 8A43     		bic	r2, r1
 288:.\Generated_Source\PSoC4/CyLib.c ****                         (( uint32 ) (clkSelect & ( uint32 )CY_SYS_CLK_SELECT_DIRECT_SEL_PARAM_MASK)
  95              		.loc 1 288 0
  96 0010 0121     		mov	r1, #1
  97 0012 0C40     		and	r4, r1
  98              	.LVL2:
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
  99              		.loc 1 287 0
 100 0014 1443     		orr	r4, r2
 101 0016 1C60     		str	r4, [r3]
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 102              		.loc 1 290 0
 103 0018 FFF7FEFF 		bl	CyExitCriticalSection
 104              	.LVL3:
 291:.\Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 291 0
 106              		@ sp needed
 107 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 8


 108              	.L9:
 109 001e C046     		.align	2
 110              	.L8:
 111 0020 00010B40 		.word	1074462976
 112              		.cfi_endproc
 113              	.LFE2:
 114              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 115              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 116              		.align	2
 117              		.global	CySysClkWriteSysclkDiv
 118              		.code	16
 119              		.thumb_func
 120              		.type	CySysClkWriteSysclkDiv, %function
 121              	CySysClkWriteSysclkDiv:
 122              	.LFB3:
 292:.\Generated_Source\PSoC4/CyLib.c **** 
 293:.\Generated_Source\PSoC4/CyLib.c **** 
 294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 296:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 297:.\Generated_Source\PSoC4/CyLib.c **** *
 298:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 299:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 300:.\Generated_Source\PSoC4/CyLib.c **** *
 301:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 302:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 303:.\Generated_Source\PSoC4/CyLib.c **** *
 304:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 305:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 306:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 307:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 308:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 309:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 310:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 311:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 312:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 313:.\Generated_Source\PSoC4/CyLib.c **** *
 314:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 315:.\Generated_Source\PSoC4/CyLib.c **** *  None
 316:.\Generated_Source\PSoC4/CyLib.c **** *
 317:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 318:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 319:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 320:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 321:.\Generated_Source\PSoC4/CyLib.c **** *
 322:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 323:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 324:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 325:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 326:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 327:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 328:.\Generated_Source\PSoC4/CyLib.c **** *
 329:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 331:.\Generated_Source\PSoC4/CyLib.c **** {
 123              		.loc 1 331 0
 124              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 9


 125              	.LVL4:
 126 0000 10B5     		push	{r4, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 130 0002 041C     		mov	r4, r0
 332:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 333:.\Generated_Source\PSoC4/CyLib.c **** 
 334:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 131              		.loc 1 334 0
 132 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 133              	.LVL5:
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 134              		.loc 1 336 0
 135 0008 0722     		mov	r2, #7
 136 000a 1440     		and	r4, r2
 137              	.LVL6:
 138 000c E204     		lsl	r2, r4, #19
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 338:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 139              		.loc 1 338 0
 140 000e 044B     		ldr	r3, .L11
 141 0010 1C68     		ldr	r4, [r3]
 142 0012 0449     		ldr	r1, .L11+4
 143 0014 0C40     		and	r4, r1
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 144              		.loc 1 337 0
 145 0016 1443     		orr	r4, r2
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 146              		.loc 1 336 0
 147 0018 1C60     		str	r4, [r3]
 339:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 340:.\Generated_Source\PSoC4/CyLib.c **** 
 341:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 148              		.loc 1 341 0
 149 001a FFF7FEFF 		bl	CyExitCriticalSection
 150              	.LVL7:
 342:.\Generated_Source\PSoC4/CyLib.c **** }
 151              		.loc 1 342 0
 152              		@ sp needed
 153 001e 10BD     		pop	{r4, pc}
 154              	.L12:
 155              		.align	2
 156              	.L11:
 157 0020 00010B40 		.word	1074462976
 158 0024 FFFFC7FF 		.word	-3670017
 159              		.cfi_endproc
 160              	.LFE3:
 161              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 162              		.section	.text.CySysLvdDisable,"ax",%progbits
 163              		.align	2
 164              		.global	CySysLvdDisable
 165              		.code	16
 166              		.thumb_func
 167              		.type	CySysLvdDisable, %function
 168              	CySysLvdDisable:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 10


 169              	.LFB6:
 343:.\Generated_Source\PSoC4/CyLib.c **** 
 344:.\Generated_Source\PSoC4/CyLib.c **** 
 345:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 346:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 347:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c **** *
 349:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 350:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 351:.\Generated_Source\PSoC4/CyLib.c **** *
 352:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 353:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 354:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 355:.\Generated_Source\PSoC4/CyLib.c **** *
 356:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 357:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 358:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 359:.\Generated_Source\PSoC4/CyLib.c **** *
 360:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, if WCO lock feature is enabled then this
 361:.\Generated_Source\PSoC4/CyLib.c **** *  API will disable the lock, write the new IMO frequency and then re-enable the
 362:.\Generated_Source\PSoC4/CyLib.c **** *  lock.
 363:.\Generated_Source\PSoC4/CyLib.c **** *
 364:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 365:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 366:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 367:.\Generated_Source\PSoC4/CyLib.c **** *
 368:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 369:.\Generated_Source\PSoC4/CyLib.c **** *
 370:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 371:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 372:.\Generated_Source\PSoC4/CyLib.c **** *
 373:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 374:.\Generated_Source\PSoC4/CyLib.c **** *  None
 375:.\Generated_Source\PSoC4/CyLib.c **** *
 376:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 377:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 378:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 379:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 380:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 381:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 382:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 383:.\Generated_Source\PSoC4/CyLib.c **** *
 384:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 385:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 386:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 387:.\Generated_Source\PSoC4/CyLib.c **** *
 388:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 390:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 392:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 393:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 394:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 395:.\Generated_Source\PSoC4/CyLib.c ****         #else
 396:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 397:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 398:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 11


 399:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 400:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 401:.\Generated_Source\PSoC4/CyLib.c **** 
 402:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 403:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 404:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 405:.\Generated_Source\PSoC4/CyLib.c **** 
 406:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 407:.\Generated_Source\PSoC4/CyLib.c **** 
 408:.\Generated_Source\PSoC4/CyLib.c **** 
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 412:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 413:.\Generated_Source\PSoC4/CyLib.c ****             {
 414:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 415:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 416:.\Generated_Source\PSoC4/CyLib.c ****             }
 417:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 418:.\Generated_Source\PSoC4/CyLib.c **** 
 419:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 420:.\Generated_Source\PSoC4/CyLib.c **** 
 421:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 422:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 423:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 424:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 425:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 426:.\Generated_Source\PSoC4/CyLib.c **** 
 427:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 428:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 429:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 430:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 431:.\Generated_Source\PSoC4/CyLib.c **** 
 432:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 433:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 434:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 435:.\Generated_Source\PSoC4/CyLib.c **** 
 436:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 437:.\Generated_Source\PSoC4/CyLib.c **** 
 438:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 439:.\Generated_Source\PSoC4/CyLib.c ****         {
 440:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 441:.\Generated_Source\PSoC4/CyLib.c ****             {
 442:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 443:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 444:.\Generated_Source\PSoC4/CyLib.c ****             }
 445:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 446:.\Generated_Source\PSoC4/CyLib.c ****             {
 447:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 448:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 449:.\Generated_Source\PSoC4/CyLib.c ****             }
 450:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 451:.\Generated_Source\PSoC4/CyLib.c ****             {
 452:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 453:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 454:.\Generated_Source\PSoC4/CyLib.c ****             }
 455:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 12


 456:.\Generated_Source\PSoC4/CyLib.c ****             {
 457:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 458:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 459:.\Generated_Source\PSoC4/CyLib.c ****             }
 460:.\Generated_Source\PSoC4/CyLib.c ****             else
 461:.\Generated_Source\PSoC4/CyLib.c ****             {
 462:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 464:.\Generated_Source\PSoC4/CyLib.c ****             }
 465:.\Generated_Source\PSoC4/CyLib.c **** 
 466:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 467:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 468:.\Generated_Source\PSoC4/CyLib.c **** 
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c ****             /**********************************************`*****************************
 471:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 472:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 473:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 474:.\Generated_Source\PSoC4/CyLib.c ****             *
 475:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 476:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 477:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 478:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 480:.\Generated_Source\PSoC4/CyLib.c ****             {
 481:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 482:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 483:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 484:.\Generated_Source\PSoC4/CyLib.c **** 
 485:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 488:.\Generated_Source\PSoC4/CyLib.c ****             }
 489:.\Generated_Source\PSoC4/CyLib.c ****             else
 490:.\Generated_Source\PSoC4/CyLib.c ****             {
 491:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 492:.\Generated_Source\PSoC4/CyLib.c ****             }
 493:.\Generated_Source\PSoC4/CyLib.c **** 
 494:.\Generated_Source\PSoC4/CyLib.c **** 
 495:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 496:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 497:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 498:.\Generated_Source\PSoC4/CyLib.c ****             *
 499:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 500:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 501:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 502:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 503:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 504:.\Generated_Source\PSoC4/CyLib.c ****             {
 505:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 506:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 507:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 508:.\Generated_Source\PSoC4/CyLib.c ****             }
 509:.\Generated_Source\PSoC4/CyLib.c **** 
 510:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 511:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 512:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 13


 513:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 514:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 515:.\Generated_Source\PSoC4/CyLib.c **** 
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 517:.\Generated_Source\PSoC4/CyLib.c ****             {
 518:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 519:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 520:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 521:.\Generated_Source\PSoC4/CyLib.c ****             }
 522:.\Generated_Source\PSoC4/CyLib.c ****         }
 523:.\Generated_Source\PSoC4/CyLib.c ****         else
 524:.\Generated_Source\PSoC4/CyLib.c ****         {
 525:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 526:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 527:.\Generated_Source\PSoC4/CyLib.c ****         }
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 530:.\Generated_Source\PSoC4/CyLib.c **** 
 531:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 532:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 533:.\Generated_Source\PSoC4/CyLib.c ****             {
 534:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 535:.\Generated_Source\PSoC4/CyLib.c ****             }
 536:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 537:.\Generated_Source\PSoC4/CyLib.c **** 
 538:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 539:.\Generated_Source\PSoC4/CyLib.c ****     }
 540:.\Generated_Source\PSoC4/CyLib.c **** 
 541:.\Generated_Source\PSoC4/CyLib.c **** #else
 542:.\Generated_Source\PSoC4/CyLib.c **** 
 543:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 544:.\Generated_Source\PSoC4/CyLib.c ****     {
 545:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 546:.\Generated_Source\PSoC4/CyLib.c **** 
 547:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 548:.\Generated_Source\PSoC4/CyLib.c ****         {
 549:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 550:.\Generated_Source\PSoC4/CyLib.c **** 
 551:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 552:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 553:.\Generated_Source\PSoC4/CyLib.c **** 
 554:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 555:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 556:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 559:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 560:.\Generated_Source\PSoC4/CyLib.c **** 
 561:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 562:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 563:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 566:.\Generated_Source\PSoC4/CyLib.c **** 
 567:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 568:.\Generated_Source\PSoC4/CyLib.c ****             {
 569:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 14


 570:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 571:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 572:.\Generated_Source\PSoC4/CyLib.c **** 
 573:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 574:.\Generated_Source\PSoC4/CyLib.c **** 
 575:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 576:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 577:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 578:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 579:.\Generated_Source\PSoC4/CyLib.c ****             }
 580:.\Generated_Source\PSoC4/CyLib.c **** 
 581:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 582:.\Generated_Source\PSoC4/CyLib.c ****         }
 583:.\Generated_Source\PSoC4/CyLib.c ****         else
 584:.\Generated_Source\PSoC4/CyLib.c ****         {
 585:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 586:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 587:.\Generated_Source\PSoC4/CyLib.c ****         }
 588:.\Generated_Source\PSoC4/CyLib.c ****     }
 589:.\Generated_Source\PSoC4/CyLib.c **** 
 590:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 591:.\Generated_Source\PSoC4/CyLib.c **** 
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 594:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 595:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 596:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 597:.\Generated_Source\PSoC4/CyLib.c ****     *
 598:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 599:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 600:.\Generated_Source\PSoC4/CyLib.c ****     *
 601:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 602:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 603:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 604:.\Generated_Source\PSoC4/CyLib.c ****     *
 605:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 606:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 607:.\Generated_Source\PSoC4/CyLib.c ****     *
 608:.\Generated_Source\PSoC4/CyLib.c ****     *
 609:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 610:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 611:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 612:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 613:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 614:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 615:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 616:.\Generated_Source\PSoC4/CyLib.c ****     *
 617:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 618:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 619:.\Generated_Source\PSoC4/CyLib.c ****     *
 620:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 621:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 622:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 623:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 624:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 625:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 626:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 15


 627:.\Generated_Source\PSoC4/CyLib.c ****     *
 628:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 629:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 630:.\Generated_Source\PSoC4/CyLib.c ****     {
 631:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 636:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 637:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 640:.\Generated_Source\PSoC4/CyLib.c ****     }
 641:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 647:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 648:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 649:.\Generated_Source\PSoC4/CyLib.c ****     *
 650:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 651:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 652:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 653:.\Generated_Source\PSoC4/CyLib.c ****     *
 654:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 655:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 656:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 657:.\Generated_Source\PSoC4/CyLib.c ****     *
 658:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 659:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 660:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 661:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 662:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 663:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 664:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 665:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 666:.\Generated_Source\PSoC4/CyLib.c ****     *
 667:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 668:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 669:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 670:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 671:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 672:.\Generated_Source\PSoC4/CyLib.c ****     *
 673:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 674:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 675:.\Generated_Source\PSoC4/CyLib.c ****     {
 676:.\Generated_Source\PSoC4/CyLib.c ****         cystatus status = CYRET_SUCCESS;
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the RF oscillator band gap */
 679:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c ****         /* Update trimming register */
 682:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 683:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 16


 684:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the Crystal */
 685:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 686:.\Generated_Source\PSoC4/CyLib.c **** 
 687:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 688:.\Generated_Source\PSoC4/CyLib.c ****         {
 689:.\Generated_Source\PSoC4/CyLib.c ****             status = CYRET_TIMEOUT;
 690:.\Generated_Source\PSoC4/CyLib.c **** 
 691:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 694:.\Generated_Source\PSoC4/CyLib.c **** 
 695:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 696:.\Generated_Source\PSoC4/CyLib.c ****                 {
 697:.\Generated_Source\PSoC4/CyLib.c ****                     status = CYRET_SUCCESS;
 698:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 699:.\Generated_Source\PSoC4/CyLib.c ****                 }
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c **** 
 702:.\Generated_Source\PSoC4/CyLib.c ****         }
 703:.\Generated_Source\PSoC4/CyLib.c **** 
 704:.\Generated_Source\PSoC4/CyLib.c ****         return(status);
 705:.\Generated_Source\PSoC4/CyLib.c ****     }
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c **** 
 708:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 709:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
 710:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 711:.\Generated_Source\PSoC4/CyLib.c ****     *
 712:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 713:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
 714:.\Generated_Source\PSoC4/CyLib.c ****     *
 715:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 716:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 717:.\Generated_Source\PSoC4/CyLib.c ****     *
 718:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 719:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 720:.\Generated_Source\PSoC4/CyLib.c ****     *
 721:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 722:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
 723:.\Generated_Source\PSoC4/CyLib.c ****     {
 724:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the RF oscillator band gap */
 725:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the Crystal */
 728:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 729:.\Generated_Source\PSoC4/CyLib.c ****     }
 730:.\Generated_Source\PSoC4/CyLib.c **** 
 731:.\Generated_Source\PSoC4/CyLib.c **** 
 732:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 733:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
 734:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 735:.\Generated_Source\PSoC4/CyLib.c ****     *
 736:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 737:.\Generated_Source\PSoC4/CyLib.c ****     *  Read status bit (50 ppm reached) for the megahertz crystal.
 738:.\Generated_Source\PSoC4/CyLib.c ****     *
 739:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 740:.\Generated_Source\PSoC4/CyLib.c ****     *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 17


 741:.\Generated_Source\PSoC4/CyLib.c ****     *
 742:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 743:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that XTAL output reached 50 ppm.
 744:.\Generated_Source\PSoC4/CyLib.c ****     *
 745:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 746:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
 747:.\Generated_Source\PSoC4/CyLib.c ****     {
 748:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT);
 749:.\Generated_Source\PSoC4/CyLib.c ****     }
 750:.\Generated_Source\PSoC4/CyLib.c **** 
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 753:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteEcoDiv
 754:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 755:.\Generated_Source\PSoC4/CyLib.c ****     *
 756:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 757:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects value for the ECO divider.
 758:.\Generated_Source\PSoC4/CyLib.c ****     *
 759:.\Generated_Source\PSoC4/CyLib.c ****     *  The ECO must not be the HFCLK clock source when this function is called.
 760:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK source can be changed to the other clock source by call to the
 761:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
 762:.\Generated_Source\PSoC4/CyLib.c ****     *  function will not have any effect if compiler in release mode, and halt the
 763:.\Generated_Source\PSoC4/CyLib.c ****     *  CPU when compiler in debug mode.
 764:.\Generated_Source\PSoC4/CyLib.c ****     *
 765:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 766:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: Power of 2 divider selection.
 767:.\Generated_Source\PSoC4/CyLib.c ****     *
 768:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 769:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
 770:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
 771:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
 772:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
 773:.\Generated_Source\PSoC4/CyLib.c ****     *
 774:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 775:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 776:.\Generated_Source\PSoC4/CyLib.c ****     *
 777:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 778:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 779:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 780:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 781:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 782:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 783:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 784:.\Generated_Source\PSoC4/CyLib.c ****     *
 785:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 786:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteEcoDiv(uint32 divider)
 787:.\Generated_Source\PSoC4/CyLib.c ****     {
 788:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:.\Generated_Source\PSoC4/CyLib.c **** 
 790:.\Generated_Source\PSoC4/CyLib.c ****         if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK))
 791:.\Generated_Source\PSoC4/CyLib.c ****         {
 792:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 795:.\Generated_Source\PSoC4/CyLib.c ****                                                   (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint32) ~
 796:.\Generated_Source\PSoC4/CyLib.c **** 
 797:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 18


 798:.\Generated_Source\PSoC4/CyLib.c ****         }
 799:.\Generated_Source\PSoC4/CyLib.c ****         else
 800:.\Generated_Source\PSoC4/CyLib.c ****         {
 801:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if ECO sources HFCLK */
 802:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 803:.\Generated_Source\PSoC4/CyLib.c ****         }
 804:.\Generated_Source\PSoC4/CyLib.c ****     }
 805:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 806:.\Generated_Source\PSoC4/CyLib.c **** 
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c **** 
 809:.\Generated_Source\PSoC4/CyLib.c **** 
 810:.\Generated_Source\PSoC4/CyLib.c **** 
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 815:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
 816:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 817:.\Generated_Source\PSoC4/CyLib.c ****     *
 818:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 819:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
 820:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
 821:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
 822:.\Generated_Source\PSoC4/CyLib.c ****     *
 823:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 824:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
 825:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
 826:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
 827:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
 828:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
 829:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
 830:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
 831:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
 832:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
 833:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
 834:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
 835:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
 836:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
 837:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
 838:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
 839:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
 840:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
 841:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
 842:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
 843:.\Generated_Source\PSoC4/CyLib.c ****     *
 844:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 845:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 846:.\Generated_Source\PSoC4/CyLib.c ****     *
 847:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 848:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
 849:.\Generated_Source\PSoC4/CyLib.c ****     {
 850:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 852:.\Generated_Source\PSoC4/CyLib.c **** 
 853:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 19


 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 859:.\Generated_Source\PSoC4/CyLib.c **** 
 860:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 862:.\Generated_Source\PSoC4/CyLib.c **** 
 863:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
 864:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 865:.\Generated_Source\PSoC4/CyLib.c **** 
 866:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
 867:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c **** 
 871:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 872:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
 873:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 874:.\Generated_Source\PSoC4/CyLib.c ****     *
 875:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 876:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
 877:.\Generated_Source\PSoC4/CyLib.c ****     *
 878:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 879:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 880:.\Generated_Source\PSoC4/CyLib.c ****     *
 881:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 882:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 883:.\Generated_Source\PSoC4/CyLib.c ****     *
 884:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 885:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
 886:.\Generated_Source\PSoC4/CyLib.c ****     {
 170              		.loc 1 886 0
 171              		.cfi_startproc
 887:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 172              		.loc 1 887 0
 173 0000 054B     		ldr	r3, .L14
 174 0002 1A68     		ldr	r2, [r3]
 175 0004 0221     		mov	r1, #2
 176 0006 8A43     		bic	r2, r1
 177 0008 1A60     		str	r2, [r3]
 888:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 178              		.loc 1 888 0
 179 000a 044B     		ldr	r3, .L14+4
 180 000c 1A68     		ldr	r2, [r3]
 181 000e 0121     		mov	r1, #1
 182 0010 8A43     		bic	r2, r1
 183 0012 1A60     		str	r2, [r3]
 889:.\Generated_Source\PSoC4/CyLib.c ****     }
 184              		.loc 1 889 0
 185              		@ sp needed
 186 0014 7047     		bx	lr
 187              	.L15:
 188 0016 C046     		.align	2
 189              	.L14:
 190 0018 08000B40 		.word	1074462728
 191 001c 18000B40 		.word	1074462744
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 20


 192              		.cfi_endproc
 193              	.LFE6:
 194              		.size	CySysLvdDisable, .-CySysLvdDisable
 195              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 196              		.align	2
 197              		.global	CySysLvdGetInterruptSource
 198              		.code	16
 199              		.thumb_func
 200              		.type	CySysLvdGetInterruptSource, %function
 201              	CySysLvdGetInterruptSource:
 202              	.LFB7:
 890:.\Generated_Source\PSoC4/CyLib.c **** 
 891:.\Generated_Source\PSoC4/CyLib.c **** 
 892:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
 894:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 895:.\Generated_Source\PSoC4/CyLib.c ****     *
 896:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 897:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
 898:.\Generated_Source\PSoC4/CyLib.c ****     *
 899:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 900:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 901:.\Generated_Source\PSoC4/CyLib.c ****     *
 902:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 903:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
 904:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
 905:.\Generated_Source\PSoC4/CyLib.c ****     *
 906:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 907:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
 908:.\Generated_Source\PSoC4/CyLib.c ****     {
 203              		.loc 1 908 0
 204              		.cfi_startproc
 909:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 205              		.loc 1 909 0
 206 0000 024B     		ldr	r3, .L17
 207 0002 1B68     		ldr	r3, [r3]
 208 0004 0220     		mov	r0, #2
 209 0006 1840     		and	r0, r3
 910:.\Generated_Source\PSoC4/CyLib.c ****     }
 210              		.loc 1 910 0
 211              		@ sp needed
 212 0008 7047     		bx	lr
 213              	.L18:
 214 000a C046     		.align	2
 215              	.L17:
 216 000c 04000B40 		.word	1074462724
 217              		.cfi_endproc
 218              	.LFE7:
 219              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 220              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 221              		.align	2
 222              		.global	CySysLvdClearInterrupt
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysLvdClearInterrupt, %function
 226              	CySysLvdClearInterrupt:
 227              	.LFB8:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 21


 911:.\Generated_Source\PSoC4/CyLib.c **** 
 912:.\Generated_Source\PSoC4/CyLib.c **** 
 913:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 914:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
 915:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 916:.\Generated_Source\PSoC4/CyLib.c ****     *
 917:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 918:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
 919:.\Generated_Source\PSoC4/CyLib.c ****     *
 920:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 921:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 922:.\Generated_Source\PSoC4/CyLib.c ****     *
 923:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 924:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 927:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
 928:.\Generated_Source\PSoC4/CyLib.c ****     {
 228              		.loc 1 928 0
 229              		.cfi_startproc
 929:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 230              		.loc 1 929 0
 231 0000 0222     		mov	r2, #2
 232 0002 014B     		ldr	r3, .L20
 233 0004 1A60     		str	r2, [r3]
 930:.\Generated_Source\PSoC4/CyLib.c ****     }
 234              		.loc 1 930 0
 235              		@ sp needed
 236 0006 7047     		bx	lr
 237              	.L21:
 238              		.align	2
 239              	.L20:
 240 0008 04000B40 		.word	1074462724
 241              		.cfi_endproc
 242              	.LFE8:
 243              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 244              		.section	.text.CySysGetResetReason,"ax",%progbits
 245              		.align	2
 246              		.global	CySysGetResetReason
 247              		.code	16
 248              		.thumb_func
 249              		.type	CySysGetResetReason, %function
 250              	CySysGetResetReason:
 251              	.LFB9:
 931:.\Generated_Source\PSoC4/CyLib.c **** 
 932:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 933:.\Generated_Source\PSoC4/CyLib.c **** 
 934:.\Generated_Source\PSoC4/CyLib.c **** 
 935:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 936:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
 937:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 938:.\Generated_Source\PSoC4/CyLib.c **** *
 939:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 940:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
 941:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
 942:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
 943:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 22


 944:.\Generated_Source\PSoC4/CyLib.c **** *
 945:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 946:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
 947:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
 948:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
 949:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
 950:.\Generated_Source\PSoC4/CyLib.c **** *
 951:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 952:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
 953:.\Generated_Source\PSoC4/CyLib.c **** *
 954:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 955:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
 956:.\Generated_Source\PSoC4/CyLib.c **** {
 252              		.loc 1 956 0
 253              		.cfi_startproc
 254              	.LVL8:
 957:.\Generated_Source\PSoC4/CyLib.c ****     uint32 status;
 958:.\Generated_Source\PSoC4/CyLib.c **** 
 959:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 255              		.loc 1 959 0
 256 0000 1922     		mov	r2, #25
 257 0002 111C     		mov	r1, r2
 258 0004 0140     		and	r1, r0
 259              	.LVL9:
 960:.\Generated_Source\PSoC4/CyLib.c ****     status = CY_SYS_RES_CAUSE_REG &
 260              		.loc 1 960 0
 261 0006 024B     		ldr	r3, .L23
 262 0008 1868     		ldr	r0, [r3]
 263 000a 1040     		and	r0, r2
 264              	.LVL10:
 961:.\Generated_Source\PSoC4/CyLib.c ****              (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 962:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 265              		.loc 1 962 0
 266 000c 1960     		str	r1, [r3]
 963:.\Generated_Source\PSoC4/CyLib.c **** 
 964:.\Generated_Source\PSoC4/CyLib.c ****     return (status);
 965:.\Generated_Source\PSoC4/CyLib.c **** }
 267              		.loc 1 965 0
 268              		@ sp needed
 269 000e 7047     		bx	lr
 270              	.L24:
 271              		.align	2
 272              	.L23:
 273 0010 00030B40 		.word	1074463488
 274              		.cfi_endproc
 275              	.LFE9:
 276              		.size	CySysGetResetReason, .-CySysGetResetReason
 277              		.section	.text.CyDisableInts,"ax",%progbits
 278              		.align	2
 279              		.global	CyDisableInts
 280              		.code	16
 281              		.thumb_func
 282              		.type	CyDisableInts, %function
 283              	CyDisableInts:
 284              	.LFB10:
 966:.\Generated_Source\PSoC4/CyLib.c **** 
 967:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 23


 968:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 969:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
 970:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 971:.\Generated_Source\PSoC4/CyLib.c **** *
 972:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 973:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
 974:.\Generated_Source\PSoC4/CyLib.c **** *
 975:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 976:.\Generated_Source\PSoC4/CyLib.c **** *  None
 977:.\Generated_Source\PSoC4/CyLib.c **** *
 978:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 979:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
 980:.\Generated_Source\PSoC4/CyLib.c **** *
 981:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 982:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
 983:.\Generated_Source\PSoC4/CyLib.c **** {
 285              		.loc 1 983 0
 286              		.cfi_startproc
 984:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
 987:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 287              		.loc 1 987 0
 288 0000 024B     		ldr	r3, .L26
 289 0002 1868     		ldr	r0, [r3]
 290              	.LVL11:
 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
 990:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 291              		.loc 1 990 0
 292 0004 0122     		mov	r2, #1
 293 0006 5242     		neg	r2, r2
 294 0008 1A60     		str	r2, [r3]
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
 993:.\Generated_Source\PSoC4/CyLib.c **** }
 295              		.loc 1 993 0
 296              		@ sp needed
 297 000a 7047     		bx	lr
 298              	.L27:
 299              		.align	2
 300              	.L26:
 301 000c 80E100E0 		.word	-536813184
 302              		.cfi_endproc
 303              	.LFE10:
 304              		.size	CyDisableInts, .-CyDisableInts
 305              		.section	.text.CyEnableInts,"ax",%progbits
 306              		.align	2
 307              		.global	CyEnableInts
 308              		.code	16
 309              		.thumb_func
 310              		.type	CyEnableInts, %function
 311              	CyEnableInts:
 312              	.LFB11:
 994:.\Generated_Source\PSoC4/CyLib.c **** 
 995:.\Generated_Source\PSoC4/CyLib.c **** 
 996:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 24


 997:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
 998:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c **** *
1000:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1001:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
1002:.\Generated_Source\PSoC4/CyLib.c **** *
1003:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1004:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
1005:.\Generated_Source\PSoC4/CyLib.c **** *
1006:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1007:.\Generated_Source\PSoC4/CyLib.c **** *  None
1008:.\Generated_Source\PSoC4/CyLib.c **** *
1009:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1010:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
1011:.\Generated_Source\PSoC4/CyLib.c **** {
 313              		.loc 1 1011 0
 314              		.cfi_startproc
 315              	.LVL12:
1012:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 316              		.loc 1 1012 0
 317 0000 014B     		ldr	r3, .L29
 318 0002 1860     		str	r0, [r3]
1013:.\Generated_Source\PSoC4/CyLib.c **** }
 319              		.loc 1 1013 0
 320              		@ sp needed
 321 0004 7047     		bx	lr
 322              	.L30:
 323 0006 C046     		.align	2
 324              	.L29:
 325 0008 00E100E0 		.word	-536813312
 326              		.cfi_endproc
 327              	.LFE11:
 328              		.size	CyEnableInts, .-CyEnableInts
 329              		.section	.text.CyIntEnable,"ax",%progbits
 330              		.align	2
 331              		.global	CyIntEnable
 332              		.code	16
 333              		.thumb_func
 334              		.type	CyIntEnable, %function
 335              	CyIntEnable:
 336              	.LFB18:
1014:.\Generated_Source\PSoC4/CyLib.c **** 
1015:.\Generated_Source\PSoC4/CyLib.c **** 
1016:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1017:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
1018:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c **** *
1020:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1021:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
1022:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
1023:.\Generated_Source\PSoC4/CyLib.c **** *
1024:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1025:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1026:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1027:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1028:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1029:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 25


1030:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1031:.\Generated_Source\PSoC4/CyLib.c **** *
1032:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
1033:.\Generated_Source\PSoC4/CyLib.c **** *
1034:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1035:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
1036:.\Generated_Source\PSoC4/CyLib.c **** *
1037:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1038:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
1039:.\Generated_Source\PSoC4/CyLib.c **** {
1040:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1041:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
1044:.\Generated_Source\PSoC4/CyLib.c **** 
1045:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1046:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
1047:.\Generated_Source\PSoC4/CyLib.c **** 
1048:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
1050:.\Generated_Source\PSoC4/CyLib.c **** 
1051:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
1052:.\Generated_Source\PSoC4/CyLib.c **** }
1053:.\Generated_Source\PSoC4/CyLib.c **** 
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1056:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
1057:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1058:.\Generated_Source\PSoC4/CyLib.c **** *
1059:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1060:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
1061:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
1062:.\Generated_Source\PSoC4/CyLib.c **** *
1063:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1064:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1065:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1066:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1067:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1068:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1069:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1070:.\Generated_Source\PSoC4/CyLib.c **** *
1071:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1072:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
1073:.\Generated_Source\PSoC4/CyLib.c **** *
1074:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1075:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
1076:.\Generated_Source\PSoC4/CyLib.c **** {
1077:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1078:.\Generated_Source\PSoC4/CyLib.c **** 
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
1080:.\Generated_Source\PSoC4/CyLib.c **** 
1081:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
1082:.\Generated_Source\PSoC4/CyLib.c **** }
1083:.\Generated_Source\PSoC4/CyLib.c **** 
1084:.\Generated_Source\PSoC4/CyLib.c **** 
1085:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1086:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 26


1087:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1088:.\Generated_Source\PSoC4/CyLib.c **** *
1089:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1090:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
1091:.\Generated_Source\PSoC4/CyLib.c **** *
1092:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1093:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1094:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
1095:.\Generated_Source\PSoC4/CyLib.c **** *
1096:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1097:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
1098:.\Generated_Source\PSoC4/CyLib.c **** *
1099:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1100:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
1101:.\Generated_Source\PSoC4/CyLib.c **** {
1102:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1103:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1108:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1111:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
1112:.\Generated_Source\PSoC4/CyLib.c **** 
1113:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
1114:.\Generated_Source\PSoC4/CyLib.c **** }
1115:.\Generated_Source\PSoC4/CyLib.c **** 
1116:.\Generated_Source\PSoC4/CyLib.c **** 
1117:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1118:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
1119:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1120:.\Generated_Source\PSoC4/CyLib.c **** *
1121:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1122:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
1123:.\Generated_Source\PSoC4/CyLib.c **** *
1124:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1125:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1126:.\Generated_Source\PSoC4/CyLib.c **** *
1127:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1128:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
1129:.\Generated_Source\PSoC4/CyLib.c **** *
1130:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1131:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
1132:.\Generated_Source\PSoC4/CyLib.c **** {
1133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
1134:.\Generated_Source\PSoC4/CyLib.c **** 
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1136:.\Generated_Source\PSoC4/CyLib.c **** 
1137:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
1138:.\Generated_Source\PSoC4/CyLib.c **** }
1139:.\Generated_Source\PSoC4/CyLib.c **** 
1140:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
1142:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 27


1144:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1145:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
1146:.\Generated_Source\PSoC4/CyLib.c **** *
1147:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1148:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
1149:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1150:.\Generated_Source\PSoC4/CyLib.c **** *
1151:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1152:.\Generated_Source\PSoC4/CyLib.c **** *  None
1153:.\Generated_Source\PSoC4/CyLib.c **** *
1154:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1155:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
1156:.\Generated_Source\PSoC4/CyLib.c **** {
1157:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
1158:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
1159:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
1160:.\Generated_Source\PSoC4/CyLib.c **** 
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1163:.\Generated_Source\PSoC4/CyLib.c **** 
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
1165:.\Generated_Source\PSoC4/CyLib.c **** 
1166:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
1167:.\Generated_Source\PSoC4/CyLib.c **** 
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
1169:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
1170:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
1171:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
1172:.\Generated_Source\PSoC4/CyLib.c **** 
1173:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
1174:.\Generated_Source\PSoC4/CyLib.c **** }
1175:.\Generated_Source\PSoC4/CyLib.c **** 
1176:.\Generated_Source\PSoC4/CyLib.c **** 
1177:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1178:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
1179:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1180:.\Generated_Source\PSoC4/CyLib.c **** *
1181:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1182:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
1183:.\Generated_Source\PSoC4/CyLib.c **** *
1184:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1185:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1186:.\Generated_Source\PSoC4/CyLib.c **** *
1187:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1188:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
1189:.\Generated_Source\PSoC4/CyLib.c **** *
1190:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
1192:.\Generated_Source\PSoC4/CyLib.c **** {
1193:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
1198:.\Generated_Source\PSoC4/CyLib.c **** 
1199:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
1200:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 28


1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
1205:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/CyLib.c **** *
1207:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1208:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
1209:.\Generated_Source\PSoC4/CyLib.c **** *
1210:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1211:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1212:.\Generated_Source\PSoC4/CyLib.c **** *
1213:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1214:.\Generated_Source\PSoC4/CyLib.c **** *  None
1215:.\Generated_Source\PSoC4/CyLib.c **** *
1216:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1217:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
1218:.\Generated_Source\PSoC4/CyLib.c **** {
 337              		.loc 1 1218 0
 338              		.cfi_startproc
 339              	.LVL13:
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 340              		.loc 1 1219 0
 341 0000 1F23     		mov	r3, #31
 342 0002 1840     		and	r0, r3
 343              	.LVL14:
 344 0004 0123     		mov	r3, #1
 345 0006 8340     		lsl	r3, r3, r0
 346 0008 181C     		mov	r0, r3
 347 000a 014B     		ldr	r3, .L32
 348 000c 1860     		str	r0, [r3]
1220:.\Generated_Source\PSoC4/CyLib.c **** }
 349              		.loc 1 1220 0
 350              		@ sp needed
 351 000e 7047     		bx	lr
 352              	.L33:
 353              		.align	2
 354              	.L32:
 355 0010 00E100E0 		.word	-536813312
 356              		.cfi_endproc
 357              	.LFE18:
 358              		.size	CyIntEnable, .-CyIntEnable
 359              		.section	.text.CyIntGetState,"ax",%progbits
 360              		.align	2
 361              		.global	CyIntGetState
 362              		.code	16
 363              		.thumb_func
 364              		.type	CyIntGetState, %function
 365              	CyIntGetState:
 366              	.LFB19:
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
1225:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c **** *
1227:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 29


1228:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
1229:.\Generated_Source\PSoC4/CyLib.c **** *
1230:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1231:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1232:.\Generated_Source\PSoC4/CyLib.c **** *
1233:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1234:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
1235:.\Generated_Source\PSoC4/CyLib.c **** *
1236:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
1238:.\Generated_Source\PSoC4/CyLib.c **** {
 367              		.loc 1 1238 0
 368              		.cfi_startproc
 369              	.LVL15:
1239:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
1240:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 370              		.loc 1 1240 0
 371 0000 044B     		ldr	r3, .L35
 372 0002 1B68     		ldr	r3, [r3]
 373 0004 1F22     		mov	r2, #31
 374 0006 1040     		and	r0, r2
 375              	.LVL16:
 376 0008 C340     		lsr	r3, r3, r0
 377 000a 181C     		mov	r0, r3
 378 000c 0123     		mov	r3, #1
 379 000e 1840     		and	r0, r3
1241:.\Generated_Source\PSoC4/CyLib.c **** }
 380              		.loc 1 1241 0
 381              		@ sp needed
 382 0010 7047     		bx	lr
 383              	.L36:
 384 0012 C046     		.align	2
 385              	.L35:
 386 0014 00E100E0 		.word	-536813312
 387              		.cfi_endproc
 388              	.LFE19:
 389              		.size	CyIntGetState, .-CyIntGetState
 390              		.section	.text.CyIntDisable,"ax",%progbits
 391              		.align	2
 392              		.global	CyIntDisable
 393              		.code	16
 394              		.thumb_func
 395              		.type	CyIntDisable, %function
 396              	CyIntDisable:
 397              	.LFB20:
1242:.\Generated_Source\PSoC4/CyLib.c **** 
1243:.\Generated_Source\PSoC4/CyLib.c **** 
1244:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1245:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
1246:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1247:.\Generated_Source\PSoC4/CyLib.c **** *
1248:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1249:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
1250:.\Generated_Source\PSoC4/CyLib.c **** *
1251:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1252:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
1253:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 30


1254:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1255:.\Generated_Source\PSoC4/CyLib.c **** *  None
1256:.\Generated_Source\PSoC4/CyLib.c **** *
1257:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1258:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
1259:.\Generated_Source\PSoC4/CyLib.c **** {
 398              		.loc 1 1259 0
 399              		.cfi_startproc
 400              	.LVL17:
1260:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 401              		.loc 1 1260 0
 402 0000 1F23     		mov	r3, #31
 403 0002 1840     		and	r0, r3
 404              	.LVL18:
 405 0004 0123     		mov	r3, #1
 406 0006 8340     		lsl	r3, r3, r0
 407 0008 181C     		mov	r0, r3
 408 000a 014B     		ldr	r3, .L38
 409 000c 1860     		str	r0, [r3]
1261:.\Generated_Source\PSoC4/CyLib.c **** }
 410              		.loc 1 1261 0
 411              		@ sp needed
 412 000e 7047     		bx	lr
 413              	.L39:
 414              		.align	2
 415              	.L38:
 416 0010 80E100E0 		.word	-536813184
 417              		.cfi_endproc
 418              	.LFE20:
 419              		.size	CyIntDisable, .-CyIntDisable
 420              		.section	.text.CyIntSetPending,"ax",%progbits
 421              		.align	2
 422              		.global	CyIntSetPending
 423              		.code	16
 424              		.thumb_func
 425              		.type	CyIntSetPending, %function
 426              	CyIntSetPending:
 427              	.LFB21:
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
1265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1266:.\Generated_Source\PSoC4/CyLib.c **** *
1267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1268:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
1269:.\Generated_Source\PSoC4/CyLib.c **** *
1270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1272:.\Generated_Source\PSoC4/CyLib.c **** *
1273:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1274:.\Generated_Source\PSoC4/CyLib.c **** *  None
1275:.\Generated_Source\PSoC4/CyLib.c **** *
1276:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1277:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
1278:.\Generated_Source\PSoC4/CyLib.c **** {
 428              		.loc 1 1278 0
 429              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 31


 430              	.LVL19:
1279:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 431              		.loc 1 1279 0
 432 0000 1F23     		mov	r3, #31
 433 0002 1840     		and	r0, r3
 434              	.LVL20:
 435 0004 0123     		mov	r3, #1
 436 0006 8340     		lsl	r3, r3, r0
 437 0008 181C     		mov	r0, r3
 438 000a 014B     		ldr	r3, .L41
 439 000c 1860     		str	r0, [r3]
1280:.\Generated_Source\PSoC4/CyLib.c **** }
 440              		.loc 1 1280 0
 441              		@ sp needed
 442 000e 7047     		bx	lr
 443              	.L42:
 444              		.align	2
 445              	.L41:
 446 0010 00E200E0 		.word	-536813056
 447              		.cfi_endproc
 448              	.LFE21:
 449              		.size	CyIntSetPending, .-CyIntSetPending
 450              		.section	.text.CyIntClearPending,"ax",%progbits
 451              		.align	2
 452              		.global	CyIntClearPending
 453              		.code	16
 454              		.thumb_func
 455              		.type	CyIntClearPending, %function
 456              	CyIntClearPending:
 457              	.LFB22:
1281:.\Generated_Source\PSoC4/CyLib.c **** 
1282:.\Generated_Source\PSoC4/CyLib.c **** 
1283:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1284:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
1285:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1286:.\Generated_Source\PSoC4/CyLib.c **** *
1287:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1288:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
1289:.\Generated_Source\PSoC4/CyLib.c **** *
1290:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1291:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1292:.\Generated_Source\PSoC4/CyLib.c **** *
1293:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1294:.\Generated_Source\PSoC4/CyLib.c **** *  None
1295:.\Generated_Source\PSoC4/CyLib.c **** *
1296:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1297:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
1298:.\Generated_Source\PSoC4/CyLib.c **** {
 458              		.loc 1 1298 0
 459              		.cfi_startproc
 460              	.LVL21:
1299:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 461              		.loc 1 1299 0
 462 0000 1F23     		mov	r3, #31
 463 0002 1840     		and	r0, r3
 464              	.LVL22:
 465 0004 0123     		mov	r3, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 32


 466 0006 8340     		lsl	r3, r3, r0
 467 0008 181C     		mov	r0, r3
 468 000a 014B     		ldr	r3, .L44
 469 000c 1860     		str	r0, [r3]
1300:.\Generated_Source\PSoC4/CyLib.c **** }
 470              		.loc 1 1300 0
 471              		@ sp needed
 472 000e 7047     		bx	lr
 473              	.L45:
 474              		.align	2
 475              	.L44:
 476 0010 80E200E0 		.word	-536812928
 477              		.cfi_endproc
 478              	.LFE22:
 479              		.size	CyIntClearPending, .-CyIntClearPending
 480              		.section	.text.CyHalt,"ax",%progbits
 481              		.align	2
 482              		.global	CyHalt
 483              		.code	16
 484              		.thumb_func
 485              		.type	CyHalt, %function
 486              	CyHalt:
 487              	.LFB23:
1301:.\Generated_Source\PSoC4/CyLib.c **** 
1302:.\Generated_Source\PSoC4/CyLib.c **** 
1303:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1304:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
1305:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1306:.\Generated_Source\PSoC4/CyLib.c **** *
1307:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1308:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
1309:.\Generated_Source\PSoC4/CyLib.c **** *
1310:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1311:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
1312:.\Generated_Source\PSoC4/CyLib.c **** *
1313:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1314:.\Generated_Source\PSoC4/CyLib.c **** *  None
1315:.\Generated_Source\PSoC4/CyLib.c **** *
1316:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
1318:.\Generated_Source\PSoC4/CyLib.c **** {
 488              		.loc 1 1318 0
 489              		.cfi_startproc
 490              	.LVL23:
1319:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
1320:.\Generated_Source\PSoC4/CyLib.c ****     {
1321:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
1322:.\Generated_Source\PSoC4/CyLib.c ****     }
1323:.\Generated_Source\PSoC4/CyLib.c **** 
1324:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
1325:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
1326:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
1327:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 491              		.loc 1 1327 0
 492              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 493 0000 01BE     		    bkpt    1
 494              	@ 0 "" 2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 33


1328:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
1329:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
1330:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
1331:.\Generated_Source\PSoC4/CyLib.c **** }
 495              		.loc 1 1331 0
 496              		.code	16
 497              		@ sp needed
 498 0002 7047     		bx	lr
 499              		.cfi_endproc
 500              	.LFE23:
 501              		.size	CyHalt, .-CyHalt
 502              		.section	.text.CyIntSetSysVector,"ax",%progbits
 503              		.align	2
 504              		.global	CyIntSetSysVector
 505              		.code	16
 506              		.thumb_func
 507              		.type	CyIntSetSysVector, %function
 508              	CyIntSetSysVector:
 509              	.LFB12:
1039:.\Generated_Source\PSoC4/CyLib.c **** {
 510              		.loc 1 1039 0
 511              		.cfi_startproc
 512              	.LVL24:
 513 0000 38B5     		push	{r3, r4, r5, lr}
 514              		.cfi_def_cfa_offset 16
 515              		.cfi_offset 3, -16
 516              		.cfi_offset 4, -12
 517              		.cfi_offset 5, -8
 518              		.cfi_offset 14, -4
 519 0002 041C     		mov	r4, r0
 520 0004 0D1C     		mov	r5, r1
 521              	.LVL25:
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 522              		.loc 1 1043 0
 523 0006 0F28     		cmp	r0, #15
 524 0008 02D9     		bls	.L48
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 525              		.loc 1 1043 0 is_stmt 0 discriminator 1
 526 000a 0020     		mov	r0, #0
 527              	.LVL26:
 528 000c FFF7FEFF 		bl	CyHalt
 529              	.LVL27:
 530              	.L48:
1046:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 531              		.loc 1 1046 0 is_stmt 1
 532 0010 A400     		lsl	r4, r4, #2
 533 0012 8023     		mov	r3, #128
 534 0014 9B05     		lsl	r3, r3, #22
 535 0016 E418     		add	r4, r4, r3
 536 0018 2068     		ldr	r0, [r4]
 537              	.LVL28:
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 538              		.loc 1 1049 0
 539 001a 2560     		str	r5, [r4]
1052:.\Generated_Source\PSoC4/CyLib.c **** }
 540              		.loc 1 1052 0
 541              		@ sp needed
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 34


 542              	.LVL29:
 543 001c 38BD     		pop	{r3, r4, r5, pc}
 544              		.cfi_endproc
 545              	.LFE12:
 546              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 547 001e C046     		.section	.text.CyIntGetSysVector,"ax",%progbits
 548              		.align	2
 549              		.global	CyIntGetSysVector
 550              		.code	16
 551              		.thumb_func
 552              		.type	CyIntGetSysVector, %function
 553              	CyIntGetSysVector:
 554              	.LFB13:
1076:.\Generated_Source\PSoC4/CyLib.c **** {
 555              		.loc 1 1076 0
 556              		.cfi_startproc
 557              	.LVL30:
 558 0000 10B5     		push	{r4, lr}
 559              		.cfi_def_cfa_offset 8
 560              		.cfi_offset 4, -8
 561              		.cfi_offset 14, -4
 562 0002 041E     		sub	r4, r0, #0
 563              	.LVL31:
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 564              		.loc 1 1079 0
 565 0004 0F2C     		cmp	r4, #15
 566 0006 02D9     		bls	.L50
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 567              		.loc 1 1079 0 is_stmt 0 discriminator 1
 568 0008 0020     		mov	r0, #0
 569              	.LVL32:
 570 000a FFF7FEFF 		bl	CyHalt
 571              	.LVL33:
 572              	.L50:
1081:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 573              		.loc 1 1081 0 is_stmt 1
 574 000e A400     		lsl	r4, r4, #2
 575 0010 8023     		mov	r3, #128
 576 0012 9B05     		lsl	r3, r3, #22
 577 0014 E418     		add	r4, r4, r3
 578 0016 2068     		ldr	r0, [r4]
1082:.\Generated_Source\PSoC4/CyLib.c **** }
 579              		.loc 1 1082 0
 580              		@ sp needed
 581 0018 10BD     		pop	{r4, pc}
 582              		.cfi_endproc
 583              	.LFE13:
 584              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 585 001a C046     		.section	.text.CyIntSetVector,"ax",%progbits
 586              		.align	2
 587              		.global	CyIntSetVector
 588              		.code	16
 589              		.thumb_func
 590              		.type	CyIntSetVector, %function
 591              	CyIntSetVector:
 592              	.LFB14:
1101:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 35


 593              		.loc 1 1101 0
 594              		.cfi_startproc
 595              	.LVL34:
 596 0000 38B5     		push	{r3, r4, r5, lr}
 597              		.cfi_def_cfa_offset 16
 598              		.cfi_offset 3, -16
 599              		.cfi_offset 4, -12
 600              		.cfi_offset 5, -8
 601              		.cfi_offset 14, -4
 602 0002 041C     		mov	r4, r0
 603 0004 0D1C     		mov	r5, r1
 604              	.LVL35:
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 605              		.loc 1 1105 0
 606 0006 1F28     		cmp	r0, #31
 607 0008 02D9     		bls	.L52
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 608              		.loc 1 1105 0 is_stmt 0 discriminator 1
 609 000a 0020     		mov	r0, #0
 610              	.LVL36:
 611 000c FFF7FEFF 		bl	CyHalt
 612              	.LVL37:
 613              	.L52:
1108:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 614              		.loc 1 1108 0 is_stmt 1
 615 0010 A400     		lsl	r4, r4, #2
 616 0012 024B     		ldr	r3, .L53
 617 0014 E418     		add	r4, r4, r3
 618 0016 2068     		ldr	r0, [r4]
 619              	.LVL38:
1111:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 620              		.loc 1 1111 0
 621 0018 2560     		str	r5, [r4]
1114:.\Generated_Source\PSoC4/CyLib.c **** }
 622              		.loc 1 1114 0
 623              		@ sp needed
 624              	.LVL39:
 625 001a 38BD     		pop	{r3, r4, r5, pc}
 626              	.L54:
 627              		.align	2
 628              	.L53:
 629 001c 40000020 		.word	536870976
 630              		.cfi_endproc
 631              	.LFE14:
 632              		.size	CyIntSetVector, .-CyIntSetVector
 633              		.section	.text.CyIntGetVector,"ax",%progbits
 634              		.align	2
 635              		.global	CyIntGetVector
 636              		.code	16
 637              		.thumb_func
 638              		.type	CyIntGetVector, %function
 639              	CyIntGetVector:
 640              	.LFB15:
1132:.\Generated_Source\PSoC4/CyLib.c **** {
 641              		.loc 1 1132 0
 642              		.cfi_startproc
 643              	.LVL40:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 36


 644 0000 10B5     		push	{r4, lr}
 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 4, -8
 647              		.cfi_offset 14, -4
 648 0002 041E     		sub	r4, r0, #0
 649              	.LVL41:
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 650              		.loc 1 1135 0
 651 0004 1F2C     		cmp	r4, #31
 652 0006 02D9     		bls	.L56
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 653              		.loc 1 1135 0 is_stmt 0 discriminator 1
 654 0008 0020     		mov	r0, #0
 655              	.LVL42:
 656 000a FFF7FEFF 		bl	CyHalt
 657              	.LVL43:
 658              	.L56:
1137:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 659              		.loc 1 1137 0 is_stmt 1
 660 000e A400     		lsl	r4, r4, #2
 661 0010 014B     		ldr	r3, .L57
 662 0012 E418     		add	r4, r4, r3
 663 0014 2068     		ldr	r0, [r4]
1138:.\Generated_Source\PSoC4/CyLib.c **** }
 664              		.loc 1 1138 0
 665              		@ sp needed
 666 0016 10BD     		pop	{r4, pc}
 667              	.L58:
 668              		.align	2
 669              	.L57:
 670 0018 40000020 		.word	536870976
 671              		.cfi_endproc
 672              	.LFE15:
 673              		.size	CyIntGetVector, .-CyIntGetVector
 674              		.section	.text.CyIntSetPriority,"ax",%progbits
 675              		.align	2
 676              		.global	CyIntSetPriority
 677              		.code	16
 678              		.thumb_func
 679              		.type	CyIntSetPriority, %function
 680              	CyIntSetPriority:
 681              	.LFB16:
1156:.\Generated_Source\PSoC4/CyLib.c **** {
 682              		.loc 1 1156 0
 683              		.cfi_startproc
 684              	.LVL44:
 685 0000 70B5     		push	{r4, r5, r6, lr}
 686              		.cfi_def_cfa_offset 16
 687              		.cfi_offset 4, -16
 688              		.cfi_offset 5, -12
 689              		.cfi_offset 6, -8
 690              		.cfi_offset 14, -4
 691 0002 041C     		mov	r4, r0
 692 0004 0E1E     		sub	r6, r1, #0
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 693              		.loc 1 1161 0
 694 0006 032E     		cmp	r6, #3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 37


 695 0008 02D9     		bls	.L60
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 696              		.loc 1 1161 0 is_stmt 0 discriminator 1
 697 000a 0020     		mov	r0, #0
 698              	.LVL45:
 699 000c FFF7FEFF 		bl	CyHalt
 700              	.LVL46:
 701              	.L60:
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 702              		.loc 1 1162 0 is_stmt 1
 703 0010 1F2C     		cmp	r4, #31
 704 0012 02D9     		bls	.L61
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 705              		.loc 1 1162 0 is_stmt 0 discriminator 1
 706 0014 0020     		mov	r0, #0
 707 0016 FFF7FEFF 		bl	CyHalt
 708              	.LVL47:
 709              	.L61:
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 710              		.loc 1 1164 0 is_stmt 1
 711 001a 0325     		mov	r5, #3
 712 001c 2540     		and	r5, r4
 713 001e ED00     		lsl	r5, r5, #3
 714 0020 0635     		add	r5, r5, #6
 715              	.LVL48:
1166:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 716              		.loc 1 1166 0
 717 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 718              	.LVL49:
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 719              		.loc 1 1168 0
 720 0026 A408     		lsr	r4, r4, #2
 721 0028 A400     		lsl	r4, r4, #2
 722 002a 064B     		ldr	r3, .L62
 723 002c E418     		add	r4, r4, r3
 724 002e 2368     		ldr	r3, [r4]
 725              	.LVL50:
1169:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 726              		.loc 1 1169 0
 727 0030 0322     		mov	r2, #3
 728 0032 AA40     		lsl	r2, r2, r5
 729 0034 9343     		bic	r3, r2
 730              	.LVL51:
1170:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 731              		.loc 1 1170 0
 732 0036 AE40     		lsl	r6, r6, r5
 733 0038 351C     		mov	r5, r6
 734              	.LVL52:
 735 003a 1D43     		orr	r5, r3
 736              	.LVL53:
1171:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 737              		.loc 1 1171 0
 738 003c 2560     		str	r5, [r4]
1173:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 739              		.loc 1 1173 0
 740 003e FFF7FEFF 		bl	CyExitCriticalSection
 741              	.LVL54:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 38


1174:.\Generated_Source\PSoC4/CyLib.c **** }
 742              		.loc 1 1174 0
 743              		@ sp needed
 744              	.LVL55:
 745 0042 70BD     		pop	{r4, r5, r6, pc}
 746              	.L63:
 747              		.align	2
 748              	.L62:
 749 0044 00E400E0 		.word	-536812544
 750              		.cfi_endproc
 751              	.LFE16:
 752              		.size	CyIntSetPriority, .-CyIntSetPriority
 753              		.section	.text.CyIntGetPriority,"ax",%progbits
 754              		.align	2
 755              		.global	CyIntGetPriority
 756              		.code	16
 757              		.thumb_func
 758              		.type	CyIntGetPriority, %function
 759              	CyIntGetPriority:
 760              	.LFB17:
1192:.\Generated_Source\PSoC4/CyLib.c **** {
 761              		.loc 1 1192 0
 762              		.cfi_startproc
 763              	.LVL56:
 764 0000 10B5     		push	{r4, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 4, -8
 767              		.cfi_offset 14, -4
 768 0002 041E     		sub	r4, r0, #0
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 769              		.loc 1 1195 0
 770 0004 1F2C     		cmp	r4, #31
 771 0006 02D9     		bls	.L65
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 772              		.loc 1 1195 0 is_stmt 0 discriminator 1
 773 0008 0020     		mov	r0, #0
 774              	.LVL57:
 775 000a FFF7FEFF 		bl	CyHalt
 776              	.LVL58:
 777              	.L65:
1197:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 778              		.loc 1 1197 0 is_stmt 1
 779 000e A308     		lsr	r3, r4, #2
 780 0010 9B00     		lsl	r3, r3, #2
 781 0012 054A     		ldr	r2, .L66
 782 0014 9B18     		add	r3, r3, r2
 783 0016 1868     		ldr	r0, [r3]
 784 0018 0323     		mov	r3, #3
 785 001a 1C40     		and	r4, r3
 786 001c E400     		lsl	r4, r4, #3
 787 001e 0634     		add	r4, r4, #6
 788 0020 E040     		lsr	r0, r0, r4
 789              	.LVL59:
1199:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 790              		.loc 1 1199 0
 791 0022 1840     		and	r0, r3
 792              	.LVL60:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 39


1200:.\Generated_Source\PSoC4/CyLib.c **** }
 793              		.loc 1 1200 0
 794              		@ sp needed
 795 0024 10BD     		pop	{r4, pc}
 796              	.L67:
 797 0026 C046     		.align	2
 798              	.L66:
 799 0028 00E400E0 		.word	-536812544
 800              		.cfi_endproc
 801              	.LFE17:
 802              		.size	CyIntGetPriority, .-CyIntGetPriority
 803              		.section	.text.CySoftwareReset,"ax",%progbits
 804              		.align	2
 805              		.global	CySoftwareReset
 806              		.code	16
 807              		.thumb_func
 808              		.type	CySoftwareReset, %function
 809              	CySoftwareReset:
 810              	.LFB24:
1332:.\Generated_Source\PSoC4/CyLib.c **** 
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1335:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
1336:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1337:.\Generated_Source\PSoC4/CyLib.c **** *
1338:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1339:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
1340:.\Generated_Source\PSoC4/CyLib.c **** *
1341:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1342:.\Generated_Source\PSoC4/CyLib.c **** *  None
1343:.\Generated_Source\PSoC4/CyLib.c **** *
1344:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1345:.\Generated_Source\PSoC4/CyLib.c **** *  None
1346:.\Generated_Source\PSoC4/CyLib.c **** *
1347:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1348:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
1349:.\Generated_Source\PSoC4/CyLib.c **** {
 811              		.loc 1 1349 0
 812              		.cfi_startproc
1350:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
1351:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
1352:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
1353:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 813              		.loc 1 1354 0
 814 0000 034B     		ldr	r3, .L69
 815 0002 1A68     		ldr	r2, [r3]
 816 0004 1204     		lsl	r2, r2, #16
 817 0006 120C     		lsr	r2, r2, #16
1355:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 818              		.loc 1 1355 0
 819 0008 0249     		ldr	r1, .L69+4
 820 000a 0A43     		orr	r2, r1
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 821              		.loc 1 1354 0
 822 000c 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 40


 823              		.loc 1 1356 0
 824              		@ sp needed
 825 000e 7047     		bx	lr
 826              	.L70:
 827              		.align	2
 828              	.L69:
 829 0010 0CED00E0 		.word	-536810228
 830 0014 0400FA05 		.word	100270084
 831              		.cfi_endproc
 832              	.LFE24:
 833              		.size	CySoftwareReset, .-CySoftwareReset
 834              		.section	.text.CyDelay,"ax",%progbits
 835              		.align	2
 836              		.global	CyDelay
 837              		.code	16
 838              		.thumb_func
 839              		.type	CyDelay, %function
 840              	CyDelay:
 841              	.LFB25:
1357:.\Generated_Source\PSoC4/CyLib.c **** 
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
1361:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/CyLib.c **** *
1363:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1364:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
1365:.\Generated_Source\PSoC4/CyLib.c **** *
1366:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1367:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
1368:.\Generated_Source\PSoC4/CyLib.c **** *
1369:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1370:.\Generated_Source\PSoC4/CyLib.c **** *  None
1371:.\Generated_Source\PSoC4/CyLib.c **** *
1372:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1373:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
1374:.\Generated_Source\PSoC4/CyLib.c **** {
 842              		.loc 1 1374 0
 843              		.cfi_startproc
 844              	.LVL61:
 845 0000 70B5     		push	{r4, r5, r6, lr}
 846              		.cfi_def_cfa_offset 16
 847              		.cfi_offset 4, -16
 848              		.cfi_offset 5, -12
 849              		.cfi_offset 6, -8
 850              		.cfi_offset 14, -4
 851 0002 041C     		mov	r4, r0
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 852              		.loc 1 1375 0
 853 0004 8025     		mov	r5, #128
 854 0006 2D02     		lsl	r5, r5, #8
1376:.\Generated_Source\PSoC4/CyLib.c ****     {
1377:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
1378:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
1379:.\Generated_Source\PSoC4/CyLib.c ****          */
1380:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 855              		.loc 1 1380 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 41


 856 0008 074E     		ldr	r6, .L74
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 857              		.loc 1 1375 0
 858 000a 04E0     		b	.L72
 859              	.LVL62:
 860              	.L73:
 861              		.loc 1 1380 0
 862 000c 3068     		ldr	r0, [r6]
 863 000e FFF7FEFF 		bl	CyDelayCycles
 864              	.LVL63:
1381:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 865              		.loc 1 1381 0
 866 0012 064B     		ldr	r3, .L74+4
 867 0014 E418     		add	r4, r4, r3
 868              	.LVL64:
 869              	.L72:
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 870              		.loc 1 1375 0 discriminator 1
 871 0016 AC42     		cmp	r4, r5
 872 0018 F8D8     		bhi	.L73
1382:.\Generated_Source\PSoC4/CyLib.c ****     }
1383:.\Generated_Source\PSoC4/CyLib.c **** 
1384:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 873              		.loc 1 1384 0
 874 001a 034B     		ldr	r3, .L74
 875 001c 5868     		ldr	r0, [r3, #4]
 876 001e 6043     		mul	r0, r4
 877 0020 FFF7FEFF 		bl	CyDelayCycles
 878              	.LVL65:
1385:.\Generated_Source\PSoC4/CyLib.c **** }
 879              		.loc 1 1385 0
 880              		@ sp needed
 881              	.LVL66:
 882 0024 70BD     		pop	{r4, r5, r6, pc}
 883              	.L75:
 884 0026 C046     		.align	2
 885              	.L74:
 886 0028 00000000 		.word	.LANCHOR0
 887 002c 0080FFFF 		.word	-32768
 888              		.cfi_endproc
 889              	.LFE25:
 890              		.size	CyDelay, .-CyDelay
 891              		.section	.text.CyDelayUs,"ax",%progbits
 892              		.align	2
 893              		.global	CyDelayUs
 894              		.code	16
 895              		.thumb_func
 896              		.type	CyDelayUs, %function
 897              	CyDelayUs:
 898              	.LFB26:
1386:.\Generated_Source\PSoC4/CyLib.c **** 
1387:.\Generated_Source\PSoC4/CyLib.c **** 
1388:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1389:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
1390:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1391:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1392:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 42


1393:.\Generated_Source\PSoC4/CyLib.c **** *
1394:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1395:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
1396:.\Generated_Source\PSoC4/CyLib.c **** *
1397:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1398:.\Generated_Source\PSoC4/CyLib.c **** *  None
1399:.\Generated_Source\PSoC4/CyLib.c **** *
1400:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1401:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
1402:.\Generated_Source\PSoC4/CyLib.c **** {
 899              		.loc 1 1402 0
 900              		.cfi_startproc
 901              	.LVL67:
 902 0000 08B5     		push	{r3, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 3, -8
 905              		.cfi_offset 14, -4
1403:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 906              		.loc 1 1403 0
 907 0002 034B     		ldr	r3, .L77
 908 0004 1B7A     		ldrb	r3, [r3, #8]
 909 0006 5843     		mul	r0, r3
 910              	.LVL68:
 911 0008 FFF7FEFF 		bl	CyDelayCycles
 912              	.LVL69:
1404:.\Generated_Source\PSoC4/CyLib.c **** }
 913              		.loc 1 1404 0
 914              		@ sp needed
 915 000c 08BD     		pop	{r3, pc}
 916              	.L78:
 917 000e C046     		.align	2
 918              	.L77:
 919 0010 00000000 		.word	.LANCHOR0
 920              		.cfi_endproc
 921              	.LFE26:
 922              		.size	CyDelayUs, .-CyDelayUs
 923              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 924              		.align	2
 925              		.global	CySysClkWriteImoFreq
 926              		.code	16
 927              		.thumb_func
 928              		.type	CySysClkWriteImoFreq, %function
 929              	CySysClkWriteImoFreq:
 930              	.LFB4:
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 931              		.loc 1 391 0
 932              		.cfi_startproc
 933              	.LVL70:
 934 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 935              		.cfi_def_cfa_offset 20
 936              		.cfi_offset 4, -20
 937              		.cfi_offset 5, -16
 938              		.cfi_offset 6, -12
 939              		.cfi_offset 7, -8
 940              		.cfi_offset 14, -4
 941 0002 5746     		mov	r7, r10
 942 0004 4E46     		mov	r6, r9
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 43


 943 0006 4546     		mov	r5, r8
 944 0008 E0B4     		push	{r5, r6, r7}
 945              		.cfi_def_cfa_offset 32
 946              		.cfi_offset 8, -32
 947              		.cfi_offset 9, -28
 948              		.cfi_offset 10, -24
 949 000a 041C     		mov	r4, r0
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 950              		.loc 1 409 0
 951 000c FFF7FEFF 		bl	CyEnterCriticalSection
 952              	.LVL71:
 953 0010 8046     		mov	r8, r0
 954              	.LVL72:
 438:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 955              		.loc 1 438 0
 956 0012 E51E     		sub	r5, r4, #3
 957 0014 2D2D     		cmp	r5, #45
 958 0016 73D8     		bhi	.L80
 440:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 959              		.loc 1 440 0
 960 0018 3F4B     		ldr	r3, .L90
 961 001a 1B78     		ldrb	r3, [r3]
 962 001c DBB2     		uxtb	r3, r3
 963 001e A342     		cmp	r3, r4
 964 0020 08D3     		bcc	.L81
 442:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 965              		.loc 1 442 0
 966 0022 3E4B     		ldr	r3, .L90+4
 967 0024 1B78     		ldrb	r3, [r3]
 968 0026 DBB2     		uxtb	r3, r3
 969 0028 9A46     		mov	r10, r3
 970              	.LVL73:
 443:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 971              		.loc 1 443 0
 972 002a 3D4B     		ldr	r3, .L90+8
 973              	.LVL74:
 974 002c 1B78     		ldrb	r3, [r3]
 975 002e DBB2     		uxtb	r3, r3
 976 0030 9946     		mov	r9, r3
 977              	.LVL75:
 978 0032 31E0     		b	.L82
 979              	.LVL76:
 980              	.L81:
 445:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 981              		.loc 1 445 0
 982 0034 3B4B     		ldr	r3, .L90+12
 983 0036 1B78     		ldrb	r3, [r3]
 984 0038 DBB2     		uxtb	r3, r3
 985 003a A342     		cmp	r3, r4
 986 003c 08D3     		bcc	.L83
 447:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 987              		.loc 1 447 0
 988 003e 3A4B     		ldr	r3, .L90+16
 989 0040 1B78     		ldrb	r3, [r3]
 990 0042 DBB2     		uxtb	r3, r3
 991 0044 9A46     		mov	r10, r3
 992              	.LVL77:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 44


 448:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 993              		.loc 1 448 0
 994 0046 394B     		ldr	r3, .L90+20
 995              	.LVL78:
 996 0048 1B78     		ldrb	r3, [r3]
 997 004a DBB2     		uxtb	r3, r3
 998 004c 9946     		mov	r9, r3
 999              	.LVL79:
 1000 004e 23E0     		b	.L82
 1001              	.LVL80:
 1002              	.L83:
 450:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 1003              		.loc 1 450 0
 1004 0050 374B     		ldr	r3, .L90+24
 1005 0052 1B78     		ldrb	r3, [r3]
 1006 0054 DBB2     		uxtb	r3, r3
 1007 0056 A342     		cmp	r3, r4
 1008 0058 08D3     		bcc	.L84
 452:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 1009              		.loc 1 452 0
 1010 005a 364B     		ldr	r3, .L90+28
 1011 005c 1B78     		ldrb	r3, [r3]
 1012 005e DBB2     		uxtb	r3, r3
 1013 0060 9A46     		mov	r10, r3
 1014              	.LVL81:
 453:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1015              		.loc 1 453 0
 1016 0062 354B     		ldr	r3, .L90+32
 1017              	.LVL82:
 1018 0064 1B78     		ldrb	r3, [r3]
 1019 0066 DBB2     		uxtb	r3, r3
 1020 0068 9946     		mov	r9, r3
 1021              	.LVL83:
 1022 006a 15E0     		b	.L82
 1023              	.LVL84:
 1024              	.L84:
 455:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 1025              		.loc 1 455 0
 1026 006c 334B     		ldr	r3, .L90+36
 1027 006e 1B78     		ldrb	r3, [r3]
 1028 0070 DBB2     		uxtb	r3, r3
 1029 0072 A342     		cmp	r3, r4
 1030 0074 08D3     		bcc	.L85
 457:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 1031              		.loc 1 457 0
 1032 0076 324B     		ldr	r3, .L90+40
 1033 0078 1B78     		ldrb	r3, [r3]
 1034 007a DBB2     		uxtb	r3, r3
 1035 007c 9A46     		mov	r10, r3
 1036              	.LVL85:
 458:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1037              		.loc 1 458 0
 1038 007e 314B     		ldr	r3, .L90+44
 1039              	.LVL86:
 1040 0080 1B78     		ldrb	r3, [r3]
 1041 0082 DBB2     		uxtb	r3, r3
 1042 0084 9946     		mov	r9, r3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 45


 1043              	.LVL87:
 1044 0086 07E0     		b	.L82
 1045              	.LVL88:
 1046              	.L85:
 462:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 1047              		.loc 1 462 0
 1048 0088 2F4B     		ldr	r3, .L90+48
 1049 008a 1B78     		ldrb	r3, [r3]
 1050 008c DBB2     		uxtb	r3, r3
 1051 008e 9A46     		mov	r10, r3
 1052              	.LVL89:
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1053              		.loc 1 463 0
 1054 0090 2E4B     		ldr	r3, .L90+52
 1055              	.LVL90:
 1056 0092 1B78     		ldrb	r3, [r3]
 1057 0094 DBB2     		uxtb	r3, r3
 1058 0096 9946     		mov	r9, r3
 1059              	.LVL91:
 1060              	.L82:
 467:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1061              		.loc 1 467 0
 1062 0098 2D4B     		ldr	r3, .L90+56
 1063 009a 5E5D     		ldrb	r6, [r3, r5]
 1064              	.LVL92:
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 1065              		.loc 1 479 0
 1066 009c 2F2E     		cmp	r6, #47
 1067 009e 09D9     		bls	.L86
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 1068              		.loc 1 479 0 is_stmt 0 discriminator 1
 1069 00a0 2A2C     		cmp	r4, #42
 1070 00a2 07D9     		bls	.L86
 482:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 1071              		.loc 1 482 0 is_stmt 1
 1072 00a4 1922     		mov	r2, #25
 1073 00a6 2B4B     		ldr	r3, .L90+60
 1074              	.LVL93:
 1075 00a8 1A60     		str	r2, [r3]
 485:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1076              		.loc 1 485 0
 1077 00aa 0520     		mov	r0, #5
 1078              	.LVL94:
 1079 00ac FFF7FEFF 		bl	CyDelayCycles
 1080              	.LVL95:
 487:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 1081              		.loc 1 487 0
 1082 00b0 1927     		mov	r7, #25
 1083 00b2 03E0     		b	.L87
 1084              	.LVL96:
 1085              	.L86:
 491:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 1086              		.loc 1 491 0
 1087 00b4 274B     		ldr	r3, .L90+60
 1088              	.LVL97:
 1089 00b6 1F68     		ldr	r7, [r3]
 1090 00b8 3F23     		mov	r3, #63
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 46


 1091 00ba 1F40     		and	r7, r3
 1092              	.LVL98:
 1093              	.L87:
 503:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 1094              		.loc 1 503 0
 1095 00bc BE42     		cmp	r6, r7
 1096 00be 06D2     		bcs	.L88
 506:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1097              		.loc 1 506 0
 1098 00c0 234B     		ldr	r3, .L90+56
 1099              	.LVL99:
 1100 00c2 5A5D     		ldrb	r2, [r3, r5]
 1101 00c4 234B     		ldr	r3, .L90+60
 1102              	.LVL100:
 1103 00c6 1A60     		str	r2, [r3]
 507:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1104              		.loc 1 507 0
 1105 00c8 0520     		mov	r0, #5
 1106 00ca FFF7FEFF 		bl	CyDelayCycles
 1107              	.LVL101:
 1108              	.L88:
 511:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 1109              		.loc 1 511 0
 1110 00ce 1F4A     		ldr	r2, .L90+52
 1111 00d0 A418     		add	r4, r4, r2
 1112              	.LVL102:
 1113 00d2 2278     		ldrb	r2, [r4]
 1114 00d4 D2B2     		uxtb	r2, r2
 1115 00d6 204B     		ldr	r3, .L90+64
 1116 00d8 1A60     		str	r2, [r3]
 512:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1117              		.loc 1 512 0
 1118 00da 204B     		ldr	r3, .L90+68
 1119 00dc 5246     		mov	r2, r10
 1120 00de 1A60     		str	r2, [r3]
 513:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1121              		.loc 1 513 0
 1122 00e0 1F4B     		ldr	r3, .L90+72
 1123 00e2 4A46     		mov	r2, r9
 1124 00e4 1A60     		str	r2, [r3]
 514:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1125              		.loc 1 514 0
 1126 00e6 0520     		mov	r0, #5
 1127 00e8 FFF7FEFF 		bl	CyDelayUs
 1128              	.LVL103:
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 1129              		.loc 1 516 0
 1130 00ec BE42     		cmp	r6, r7
 1131 00ee 0AD9     		bls	.L89
 519:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1132              		.loc 1 519 0
 1133 00f0 174B     		ldr	r3, .L90+56
 1134              	.LVL104:
 1135 00f2 5A5D     		ldrb	r2, [r3, r5]
 1136 00f4 174B     		ldr	r3, .L90+60
 1137              	.LVL105:
 1138 00f6 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 47


 520:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1139              		.loc 1 520 0
 1140 00f8 0520     		mov	r0, #5
 1141 00fa FFF7FEFF 		bl	CyDelayCycles
 1142              	.LVL106:
 1143 00fe 02E0     		b	.L89
 1144              	.LVL107:
 1145              	.L80:
 526:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 1146              		.loc 1 526 0 discriminator 1
 1147 0100 0020     		mov	r0, #0
 1148              	.LVL108:
 1149 0102 FFF7FEFF 		bl	CyHalt
 1150              	.LVL109:
 1151              	.L89:
 538:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1152              		.loc 1 538 0
 1153 0106 4046     		mov	r0, r8
 1154 0108 FFF7FEFF 		bl	CyExitCriticalSection
 1155              	.LVL110:
 539:.\Generated_Source\PSoC4/CyLib.c ****     }
 1156              		.loc 1 539 0
 1157              		@ sp needed
 1158              	.LVL111:
 1159              	.LVL112:
 1160 010c 1CBC     		pop	{r2, r3, r4}
 1161 010e 9046     		mov	r8, r2
 1162 0110 9946     		mov	r9, r3
 1163 0112 A246     		mov	r10, r4
 1164 0114 F0BD     		pop	{r4, r5, r6, r7, pc}
 1165              	.L91:
 1166 0116 C046     		.align	2
 1167              	.L90:
 1168 0118 C0F1FF0F 		.word	268431808
 1169 011c C1F1FF0F 		.word	268431809
 1170 0120 C2F1FF0F 		.word	268431810
 1171 0124 C3F1FF0F 		.word	268431811
 1172 0128 C4F1FF0F 		.word	268431812
 1173 012c C5F1FF0F 		.word	268431813
 1174 0130 C6F1FF0F 		.word	268431814
 1175 0134 C7F1FF0F 		.word	268431815
 1176 0138 C8F1FF0F 		.word	268431816
 1177 013c C9F1FF0F 		.word	268431817
 1178 0140 CAF1FF0F 		.word	268431818
 1179 0144 CBF1FF0F 		.word	268431819
 1180 0148 CCF1FF0F 		.word	268431820
 1181 014c CDF1FF0F 		.word	268431821
 1182 0150 00000000 		.word	.LANCHOR1
 1183 0154 2CFF0B40 		.word	1074528044
 1184 0158 28FF0B40 		.word	1074528040
 1185 015c 1CFF0B40 		.word	1074528028
 1186 0160 20FF0B40 		.word	1074528032
 1187              		.cfi_endproc
 1188              	.LFE4:
 1189              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1190              		.section	.text.CySysLvdEnable,"ax",%progbits
 1191              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 48


 1192              		.global	CySysLvdEnable
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	CySysLvdEnable, %function
 1196              	CySysLvdEnable:
 1197              	.LFB5:
 849:.\Generated_Source\PSoC4/CyLib.c ****     {
 1198              		.loc 1 849 0
 1199              		.cfi_startproc
 1200              	.LVL113:
 1201 0000 38B5     		push	{r3, r4, r5, lr}
 1202              		.cfi_def_cfa_offset 16
 1203              		.cfi_offset 3, -16
 1204              		.cfi_offset 4, -12
 1205              		.cfi_offset 5, -8
 1206              		.cfi_offset 14, -4
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 1207              		.loc 1 851 0
 1208 0002 0D4C     		ldr	r4, .L93
 1209 0004 2368     		ldr	r3, [r4]
 1210 0006 0225     		mov	r5, #2
 1211 0008 AB43     		bic	r3, r5
 1212 000a 2360     		str	r3, [r4]
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1213              		.loc 1 854 0
 1214 000c 0B4B     		ldr	r3, .L93+4
 1215 000e 1968     		ldr	r1, [r3]
 1216 0010 1E22     		mov	r2, #30
 1217 0012 9143     		bic	r1, r2
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1218              		.loc 1 855 0
 1219 0014 4000     		lsl	r0, r0, #1
 1220              	.LVL114:
 1221 0016 0240     		and	r2, r0
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 1222              		.loc 1 854 0
 1223 0018 0A43     		orr	r2, r1
 1224 001a 1A60     		str	r2, [r3]
 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 1225              		.loc 1 858 0
 1226 001c 1968     		ldr	r1, [r3]
 1227 001e 0122     		mov	r2, #1
 1228 0020 0A43     		orr	r2, r1
 1229 0022 1A60     		str	r2, [r3]
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 1230              		.loc 1 861 0
 1231 0024 FA20     		mov	r0, #250
 1232 0026 8000     		lsl	r0, r0, #2
 1233 0028 FFF7FEFF 		bl	CyDelayUs
 1234              	.LVL115:
 864:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 1235              		.loc 1 864 0
 1236 002c FFF7FEFF 		bl	CySysLvdClearInterrupt
 1237              	.LVL116:
 867:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 1238              		.loc 1 867 0
 1239 0030 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 49


 1240 0032 1D43     		orr	r5, r3
 1241 0034 2560     		str	r5, [r4]
 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 1242              		.loc 1 868 0
 1243              		@ sp needed
 1244 0036 38BD     		pop	{r3, r4, r5, pc}
 1245              	.L94:
 1246              		.align	2
 1247              	.L93:
 1248 0038 08000B40 		.word	1074462728
 1249 003c 18000B40 		.word	1074462744
 1250              		.cfi_endproc
 1251              	.LFE5:
 1252              		.size	CySysLvdEnable, .-CySysLvdEnable
 1253              		.global	__aeabi_uidiv
 1254              		.section	.text.CyDelayFreq,"ax",%progbits
 1255              		.align	2
 1256              		.global	CyDelayFreq
 1257              		.code	16
 1258              		.thumb_func
 1259              		.type	CyDelayFreq, %function
 1260              	CyDelayFreq:
 1261              	.LFB27:
1405:.\Generated_Source\PSoC4/CyLib.c **** 
1406:.\Generated_Source\PSoC4/CyLib.c **** 
1407:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1408:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
1409:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1410:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1411:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
1412:.\Generated_Source\PSoC4/CyLib.c **** *
1413:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1414:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
1415:.\Generated_Source\PSoC4/CyLib.c **** *
1416:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1417:.\Generated_Source\PSoC4/CyLib.c **** *  None
1418:.\Generated_Source\PSoC4/CyLib.c **** *
1419:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1420:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
1421:.\Generated_Source\PSoC4/CyLib.c **** {
 1262              		.loc 1 1421 0
 1263              		.cfi_startproc
 1264              	.LVL117:
 1265 0000 38B5     		push	{r3, r4, r5, lr}
 1266              		.cfi_def_cfa_offset 16
 1267              		.cfi_offset 3, -16
 1268              		.cfi_offset 4, -12
 1269              		.cfi_offset 5, -8
 1270              		.cfi_offset 14, -4
1422:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1271              		.loc 1 1422 0
 1272 0002 0028     		cmp	r0, #0
 1273 0004 02D0     		beq	.L96
1423:.\Generated_Source\PSoC4/CyLib.c ****     {
1424:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1274              		.loc 1 1424 0
 1275 0006 0C4B     		ldr	r3, .L98
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 50


 1276 0008 D860     		str	r0, [r3, #12]
 1277 000a 02E0     		b	.L97
 1278              	.L96:
1425:.\Generated_Source\PSoC4/CyLib.c ****     }
1426:.\Generated_Source\PSoC4/CyLib.c ****     else
1427:.\Generated_Source\PSoC4/CyLib.c ****     {
1428:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1279              		.loc 1 1428 0
 1280 000c 0B4A     		ldr	r2, .L98+4
 1281 000e 0A4B     		ldr	r3, .L98
 1282 0010 DA60     		str	r2, [r3, #12]
 1283              	.L97:
1429:.\Generated_Source\PSoC4/CyLib.c ****     }
1430:.\Generated_Source\PSoC4/CyLib.c **** 
1431:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1284              		.loc 1 1431 0
 1285 0012 094C     		ldr	r4, .L98
 1286 0014 E568     		ldr	r5, [r4, #12]
 1287 0016 0A4B     		ldr	r3, .L98+8
 1288 0018 E818     		add	r0, r5, r3
 1289              	.LVL118:
 1290 001a 0A49     		ldr	r1, .L98+12
 1291 001c FFF7FEFF 		bl	__aeabi_uidiv
 1292              	.LVL119:
 1293 0020 2072     		strb	r0, [r4, #8]
1432:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1294              		.loc 1 1432 0
 1295 0022 094B     		ldr	r3, .L98+16
 1296 0024 E818     		add	r0, r5, r3
 1297 0026 FA21     		mov	r1, #250
 1298 0028 8900     		lsl	r1, r1, #2
 1299 002a FFF7FEFF 		bl	__aeabi_uidiv
 1300              	.LVL120:
 1301 002e 6060     		str	r0, [r4, #4]
1433:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1302              		.loc 1 1433 0
 1303 0030 C003     		lsl	r0, r0, #15
 1304 0032 2060     		str	r0, [r4]
1434:.\Generated_Source\PSoC4/CyLib.c **** }
 1305              		.loc 1 1434 0
 1306              		@ sp needed
 1307 0034 38BD     		pop	{r3, r4, r5, pc}
 1308              	.L99:
 1309 0036 C046     		.align	2
 1310              	.L98:
 1311 0038 00000000 		.word	.LANCHOR0
 1312 003c 00366E01 		.word	24000000
 1313 0040 3F420F00 		.word	999999
 1314 0044 40420F00 		.word	1000000
 1315 0048 E7030000 		.word	999
 1316              		.cfi_endproc
 1317              	.LFE27:
 1318              		.size	CyDelayFreq, .-CyDelayFreq
 1319              		.section	.text.CySysTickStop,"ax",%progbits
 1320              		.align	2
 1321              		.global	CySysTickStop
 1322              		.code	16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 51


 1323              		.thumb_func
 1324              		.type	CySysTickStop, %function
 1325              	CySysTickStop:
 1326              	.LFB31:
1435:.\Generated_Source\PSoC4/CyLib.c **** 
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1438:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
1439:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1440:.\Generated_Source\PSoC4/CyLib.c **** *
1441:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1442:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
1443:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
1444:.\Generated_Source\PSoC4/CyLib.c **** *
1445:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1446:.\Generated_Source\PSoC4/CyLib.c **** *  None
1447:.\Generated_Source\PSoC4/CyLib.c **** *
1448:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1449:.\Generated_Source\PSoC4/CyLib.c **** *  None
1450:.\Generated_Source\PSoC4/CyLib.c **** *
1451:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1452:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1453:.\Generated_Source\PSoC4/CyLib.c **** *
1454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1455:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
1456:.\Generated_Source\PSoC4/CyLib.c **** {
1457:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
1458:.\Generated_Source\PSoC4/CyLib.c ****     {
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
1460:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
1461:.\Generated_Source\PSoC4/CyLib.c ****     }
1462:.\Generated_Source\PSoC4/CyLib.c **** 
1463:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
1464:.\Generated_Source\PSoC4/CyLib.c **** }
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c **** 
1467:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1468:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
1469:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1470:.\Generated_Source\PSoC4/CyLib.c **** *
1471:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1472:.\Generated_Source\PSoC4/CyLib.c **** *  Sets CySysTickServiceCallbacks() as an ISR for the SysTick exception.
1473:.\Generated_Source\PSoC4/CyLib.c **** *  The clock source for the SysTick counter is set to the System Clock.
1474:.\Generated_Source\PSoC4/CyLib.c **** *  The SysTick reload value is configured for the timer to generate interrupt
1475:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms. The System clock value is on the global variables cydelayFreqHz.
1476:.\Generated_Source\PSoC4/CyLib.c **** *  User is responsible for calling CyDelayFreq() function.
1477:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes CySysTickCallbacks array.
1478:.\Generated_Source\PSoC4/CyLib.c **** *
1479:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1480:.\Generated_Source\PSoC4/CyLib.c **** *  None
1481:.\Generated_Source\PSoC4/CyLib.c **** *
1482:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1483:.\Generated_Source\PSoC4/CyLib.c **** *  None
1484:.\Generated_Source\PSoC4/CyLib.c **** *
1485:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1486:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1487:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 52


1488:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1489:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
1490:.\Generated_Source\PSoC4/CyLib.c **** {
1491:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1492:.\Generated_Source\PSoC4/CyLib.c **** 
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
1494:.\Generated_Source\PSoC4/CyLib.c ****     {
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
1496:.\Generated_Source\PSoC4/CyLib.c ****     }
1497:.\Generated_Source\PSoC4/CyLib.c **** 
1498:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****     #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1501:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
1502:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1503:.\Generated_Source\PSoC4/CyLib.c **** 
1504:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
1505:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
1506:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
1507:.\Generated_Source\PSoC4/CyLib.c **** }
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c **** 
1510:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1511:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
1512:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1513:.\Generated_Source\PSoC4/CyLib.c **** *
1514:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1515:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
1516:.\Generated_Source\PSoC4/CyLib.c **** *
1517:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1518:.\Generated_Source\PSoC4/CyLib.c **** *  None
1519:.\Generated_Source\PSoC4/CyLib.c **** *
1520:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1521:.\Generated_Source\PSoC4/CyLib.c **** *  None
1522:.\Generated_Source\PSoC4/CyLib.c **** *
1523:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1524:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1525:.\Generated_Source\PSoC4/CyLib.c **** *
1526:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1527:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
1528:.\Generated_Source\PSoC4/CyLib.c **** {
1529:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
1531:.\Generated_Source\PSoC4/CyLib.c **** }
1532:.\Generated_Source\PSoC4/CyLib.c **** 
1533:.\Generated_Source\PSoC4/CyLib.c **** 
1534:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
1536:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1537:.\Generated_Source\PSoC4/CyLib.c **** *
1538:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1539:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
1540:.\Generated_Source\PSoC4/CyLib.c **** *
1541:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1542:.\Generated_Source\PSoC4/CyLib.c **** *  None
1543:.\Generated_Source\PSoC4/CyLib.c **** *
1544:.\Generated_Source\PSoC4/CyLib.c **** * Return:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 53


1545:.\Generated_Source\PSoC4/CyLib.c **** *  None
1546:.\Generated_Source\PSoC4/CyLib.c **** *
1547:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1548:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1549:.\Generated_Source\PSoC4/CyLib.c **** *
1550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1551:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
1552:.\Generated_Source\PSoC4/CyLib.c **** {
 1327              		.loc 1 1552 0
 1328              		.cfi_startproc
1553:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1329              		.loc 1 1553 0
 1330 0000 024B     		ldr	r3, .L101
 1331 0002 1A68     		ldr	r2, [r3]
 1332 0004 0121     		mov	r1, #1
 1333 0006 8A43     		bic	r2, r1
 1334 0008 1A60     		str	r2, [r3]
1554:.\Generated_Source\PSoC4/CyLib.c **** }
 1335              		.loc 1 1554 0
 1336              		@ sp needed
 1337 000a 7047     		bx	lr
 1338              	.L102:
 1339              		.align	2
 1340              	.L101:
 1341 000c 10E000E0 		.word	-536813552
 1342              		.cfi_endproc
 1343              	.LFE31:
 1344              		.size	CySysTickStop, .-CySysTickStop
 1345              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1346              		.align	2
 1347              		.global	CySysTickEnableInterrupt
 1348              		.code	16
 1349              		.thumb_func
 1350              		.type	CySysTickEnableInterrupt, %function
 1351              	CySysTickEnableInterrupt:
 1352              	.LFB32:
1555:.\Generated_Source\PSoC4/CyLib.c **** 
1556:.\Generated_Source\PSoC4/CyLib.c **** 
1557:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1558:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
1559:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1560:.\Generated_Source\PSoC4/CyLib.c **** *
1561:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1562:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
1563:.\Generated_Source\PSoC4/CyLib.c **** *
1564:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1565:.\Generated_Source\PSoC4/CyLib.c **** *  None
1566:.\Generated_Source\PSoC4/CyLib.c **** *
1567:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1568:.\Generated_Source\PSoC4/CyLib.c **** *  None
1569:.\Generated_Source\PSoC4/CyLib.c **** *
1570:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1571:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1572:.\Generated_Source\PSoC4/CyLib.c **** *
1573:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1574:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
1575:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 54


 1353              		.loc 1 1575 0
 1354              		.cfi_startproc
1576:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1355              		.loc 1 1576 0
 1356 0000 024B     		ldr	r3, .L104
 1357 0002 1968     		ldr	r1, [r3]
 1358 0004 0222     		mov	r2, #2
 1359 0006 0A43     		orr	r2, r1
 1360 0008 1A60     		str	r2, [r3]
1577:.\Generated_Source\PSoC4/CyLib.c **** }
 1361              		.loc 1 1577 0
 1362              		@ sp needed
 1363 000a 7047     		bx	lr
 1364              	.L105:
 1365              		.align	2
 1366              	.L104:
 1367 000c 10E000E0 		.word	-536813552
 1368              		.cfi_endproc
 1369              	.LFE32:
 1370              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1371              		.section	.text.CySysTickEnable,"ax",%progbits
 1372              		.align	2
 1373              		.global	CySysTickEnable
 1374              		.code	16
 1375              		.thumb_func
 1376              		.type	CySysTickEnable, %function
 1377              	CySysTickEnable:
 1378              	.LFB30:
1528:.\Generated_Source\PSoC4/CyLib.c **** {
 1379              		.loc 1 1528 0
 1380              		.cfi_startproc
 1381 0000 08B5     		push	{r3, lr}
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 3, -8
 1384              		.cfi_offset 14, -4
1529:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1385              		.loc 1 1529 0
 1386 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1387              	.LVL121:
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1388              		.loc 1 1530 0
 1389 0006 034B     		ldr	r3, .L107
 1390 0008 1968     		ldr	r1, [r3]
 1391 000a 0122     		mov	r2, #1
 1392 000c 0A43     		orr	r2, r1
 1393 000e 1A60     		str	r2, [r3]
1531:.\Generated_Source\PSoC4/CyLib.c **** }
 1394              		.loc 1 1531 0
 1395              		@ sp needed
 1396 0010 08BD     		pop	{r3, pc}
 1397              	.L108:
 1398 0012 C046     		.align	2
 1399              	.L107:
 1400 0014 10E000E0 		.word	-536813552
 1401              		.cfi_endproc
 1402              	.LFE30:
 1403              		.size	CySysTickEnable, .-CySysTickEnable
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 55


 1404              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1405              		.align	2
 1406              		.global	CySysTickDisableInterrupt
 1407              		.code	16
 1408              		.thumb_func
 1409              		.type	CySysTickDisableInterrupt, %function
 1410              	CySysTickDisableInterrupt:
 1411              	.LFB33:
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c **** 
1580:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1581:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
1582:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1583:.\Generated_Source\PSoC4/CyLib.c **** *
1584:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1585:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
1586:.\Generated_Source\PSoC4/CyLib.c **** *
1587:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1588:.\Generated_Source\PSoC4/CyLib.c **** *  None
1589:.\Generated_Source\PSoC4/CyLib.c **** *
1590:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1591:.\Generated_Source\PSoC4/CyLib.c **** *  None
1592:.\Generated_Source\PSoC4/CyLib.c **** *
1593:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1594:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1595:.\Generated_Source\PSoC4/CyLib.c **** *
1596:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1597:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
1598:.\Generated_Source\PSoC4/CyLib.c **** {
 1412              		.loc 1 1598 0
 1413              		.cfi_startproc
1599:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1414              		.loc 1 1599 0
 1415 0000 024B     		ldr	r3, .L110
 1416 0002 1A68     		ldr	r2, [r3]
 1417 0004 0221     		mov	r1, #2
 1418 0006 8A43     		bic	r2, r1
 1419 0008 1A60     		str	r2, [r3]
1600:.\Generated_Source\PSoC4/CyLib.c **** }
 1420              		.loc 1 1600 0
 1421              		@ sp needed
 1422 000a 7047     		bx	lr
 1423              	.L111:
 1424              		.align	2
 1425              	.L110:
 1426 000c 10E000E0 		.word	-536813552
 1427              		.cfi_endproc
 1428              	.LFE33:
 1429              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1430              		.section	.text.CySysTickSetReload,"ax",%progbits
 1431              		.align	2
 1432              		.global	CySysTickSetReload
 1433              		.code	16
 1434              		.thumb_func
 1435              		.type	CySysTickSetReload, %function
 1436              	CySysTickSetReload:
 1437              	.LFB34:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 56


1601:.\Generated_Source\PSoC4/CyLib.c **** 
1602:.\Generated_Source\PSoC4/CyLib.c **** 
1603:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1604:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
1605:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c **** *
1607:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1608:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
1609:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
1610:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
1611:.\Generated_Source\PSoC4/CyLib.c **** *
1612:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1613:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
1614:.\Generated_Source\PSoC4/CyLib.c **** *
1615:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1616:.\Generated_Source\PSoC4/CyLib.c **** *  None
1617:.\Generated_Source\PSoC4/CyLib.c **** *
1618:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1619:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
1620:.\Generated_Source\PSoC4/CyLib.c **** {
 1438              		.loc 1 1620 0
 1439              		.cfi_startproc
 1440              	.LVL122:
1621:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1441              		.loc 1 1621 0
 1442 0000 0002     		lsl	r0, r0, #8
 1443              	.LVL123:
 1444 0002 000A     		lsr	r0, r0, #8
 1445 0004 014B     		ldr	r3, .L113
 1446 0006 1860     		str	r0, [r3]
1622:.\Generated_Source\PSoC4/CyLib.c **** }
 1447              		.loc 1 1622 0
 1448              		@ sp needed
 1449 0008 7047     		bx	lr
 1450              	.L114:
 1451 000a C046     		.align	2
 1452              	.L113:
 1453 000c 14E000E0 		.word	-536813548
 1454              		.cfi_endproc
 1455              	.LFE34:
 1456              		.size	CySysTickSetReload, .-CySysTickSetReload
 1457              		.section	.text.CySysTickGetReload,"ax",%progbits
 1458              		.align	2
 1459              		.global	CySysTickGetReload
 1460              		.code	16
 1461              		.thumb_func
 1462              		.type	CySysTickGetReload, %function
 1463              	CySysTickGetReload:
 1464              	.LFB35:
1623:.\Generated_Source\PSoC4/CyLib.c **** 
1624:.\Generated_Source\PSoC4/CyLib.c **** 
1625:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1626:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
1627:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c **** *
1629:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1630:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 57


1631:.\Generated_Source\PSoC4/CyLib.c **** *
1632:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1633:.\Generated_Source\PSoC4/CyLib.c **** *  None
1634:.\Generated_Source\PSoC4/CyLib.c **** *
1635:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1636:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
1637:.\Generated_Source\PSoC4/CyLib.c **** *
1638:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1639:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
1640:.\Generated_Source\PSoC4/CyLib.c **** {
 1465              		.loc 1 1640 0
 1466              		.cfi_startproc
1641:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1467              		.loc 1 1641 0
 1468 0000 024B     		ldr	r3, .L116
 1469 0002 1868     		ldr	r0, [r3]
 1470 0004 0002     		lsl	r0, r0, #8
 1471 0006 000A     		lsr	r0, r0, #8
1642:.\Generated_Source\PSoC4/CyLib.c **** }
 1472              		.loc 1 1642 0
 1473              		@ sp needed
 1474 0008 7047     		bx	lr
 1475              	.L117:
 1476 000a C046     		.align	2
 1477              	.L116:
 1478 000c 14E000E0 		.word	-536813548
 1479              		.cfi_endproc
 1480              	.LFE35:
 1481              		.size	CySysTickGetReload, .-CySysTickGetReload
 1482              		.section	.text.CySysTickGetValue,"ax",%progbits
 1483              		.align	2
 1484              		.global	CySysTickGetValue
 1485              		.code	16
 1486              		.thumb_func
 1487              		.type	CySysTickGetValue, %function
 1488              	CySysTickGetValue:
 1489              	.LFB36:
1643:.\Generated_Source\PSoC4/CyLib.c **** 
1644:.\Generated_Source\PSoC4/CyLib.c **** 
1645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
1647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1648:.\Generated_Source\PSoC4/CyLib.c **** *
1649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1650:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
1651:.\Generated_Source\PSoC4/CyLib.c **** *
1652:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1653:.\Generated_Source\PSoC4/CyLib.c **** *  None
1654:.\Generated_Source\PSoC4/CyLib.c **** *
1655:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1656:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
1657:.\Generated_Source\PSoC4/CyLib.c **** *
1658:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1659:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
1660:.\Generated_Source\PSoC4/CyLib.c **** {
 1490              		.loc 1 1660 0
 1491              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 58


1661:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1492              		.loc 1 1661 0
 1493 0000 024B     		ldr	r3, .L119
 1494 0002 1868     		ldr	r0, [r3]
 1495 0004 0002     		lsl	r0, r0, #8
 1496 0006 000A     		lsr	r0, r0, #8
1662:.\Generated_Source\PSoC4/CyLib.c **** }
 1497              		.loc 1 1662 0
 1498              		@ sp needed
 1499 0008 7047     		bx	lr
 1500              	.L120:
 1501 000a C046     		.align	2
 1502              	.L119:
 1503 000c 18E000E0 		.word	-536813544
 1504              		.cfi_endproc
 1505              	.LFE36:
 1506              		.size	CySysTickGetValue, .-CySysTickGetValue
 1507              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1508              		.align	2
 1509              		.global	CySysTickGetCountFlag
 1510              		.code	16
 1511              		.thumb_func
 1512              		.type	CySysTickGetCountFlag, %function
 1513              	CySysTickGetCountFlag:
 1514              	.LFB37:
1663:.\Generated_Source\PSoC4/CyLib.c **** 
1664:.\Generated_Source\PSoC4/CyLib.c **** 
1665:.\Generated_Source\PSoC4/CyLib.c **** #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1666:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1667:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
1668:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1669:.\Generated_Source\PSoC4/CyLib.c ****     *
1670:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1671:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1674:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
1675:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
1676:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
1677:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
1678:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
1679:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
1680:.\Generated_Source\PSoC4/CyLib.c ****     *
1681:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1682:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1683:.\Generated_Source\PSoC4/CyLib.c ****     *
1684:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1685:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
1686:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
1687:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
1688:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly bigger and vice versa.
1689:.\Generated_Source\PSoC4/CyLib.c ****     *
1690:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1691:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
1692:.\Generated_Source\PSoC4/CyLib.c ****     {
1693:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
1694:.\Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 59


1695:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
1696:.\Generated_Source\PSoC4/CyLib.c ****         }
1697:.\Generated_Source\PSoC4/CyLib.c ****         else
1698:.\Generated_Source\PSoC4/CyLib.c ****         {
1699:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
1700:.\Generated_Source\PSoC4/CyLib.c ****         }
1701:.\Generated_Source\PSoC4/CyLib.c ****     }
1702:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1703:.\Generated_Source\PSoC4/CyLib.c **** 
1704:.\Generated_Source\PSoC4/CyLib.c **** 
1705:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1706:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
1707:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1708:.\Generated_Source\PSoC4/CyLib.c **** *
1709:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1710:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
1711:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
1712:.\Generated_Source\PSoC4/CyLib.c **** *
1713:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1714:.\Generated_Source\PSoC4/CyLib.c **** *  None
1715:.\Generated_Source\PSoC4/CyLib.c **** *
1716:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1717:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
1718:.\Generated_Source\PSoC4/CyLib.c **** *
1719:.\Generated_Source\PSoC4/CyLib.c **** *
1720:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1721:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1722:.\Generated_Source\PSoC4/CyLib.c **** *
1723:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1724:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
1725:.\Generated_Source\PSoC4/CyLib.c **** {
 1515              		.loc 1 1725 0
 1516              		.cfi_startproc
1726:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1517              		.loc 1 1726 0
 1518 0000 024B     		ldr	r3, .L122
 1519 0002 1868     		ldr	r0, [r3]
 1520 0004 C003     		lsl	r0, r0, #15
 1521 0006 C00F     		lsr	r0, r0, #31
1727:.\Generated_Source\PSoC4/CyLib.c **** }
 1522              		.loc 1 1727 0
 1523              		@ sp needed
 1524 0008 7047     		bx	lr
 1525              	.L123:
 1526 000a C046     		.align	2
 1527              	.L122:
 1528 000c 10E000E0 		.word	-536813552
 1529              		.cfi_endproc
 1530              	.LFE37:
 1531              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1532              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1533              		.align	2
 1534              		.code	16
 1535              		.thumb_func
 1536              		.type	CySysTickServiceCallbacks, %function
 1537              	CySysTickServiceCallbacks:
 1538              	.LFB41:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 60


1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
1732:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c **** *
1734:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
1736:.\Generated_Source\PSoC4/CyLib.c **** *
1737:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1738:.\Generated_Source\PSoC4/CyLib.c **** *  None
1739:.\Generated_Source\PSoC4/CyLib.c **** *
1740:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1741:.\Generated_Source\PSoC4/CyLib.c **** *  None
1742:.\Generated_Source\PSoC4/CyLib.c **** *
1743:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1744:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
1745:.\Generated_Source\PSoC4/CyLib.c **** {
1746:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
1747:.\Generated_Source\PSoC4/CyLib.c **** }
1748:.\Generated_Source\PSoC4/CyLib.c **** 
1749:.\Generated_Source\PSoC4/CyLib.c **** 
1750:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1751:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
1752:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1753:.\Generated_Source\PSoC4/CyLib.c **** *
1754:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1755:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
1756:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
1757:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
1758:.\Generated_Source\PSoC4/CyLib.c **** *
1759:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
1760:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
1761:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
1762:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
1763:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
1764:.\Generated_Source\PSoC4/CyLib.c **** *
1765:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1766:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
1767:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1768:.\Generated_Source\PSoC4/CyLib.c **** *
1769:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
1770:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
1771:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
1772:.\Generated_Source\PSoC4/CyLib.c **** *
1773:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1774:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
1775:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
1776:.\Generated_Source\PSoC4/CyLib.c **** *
1777:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1778:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
1779:.\Generated_Source\PSoC4/CyLib.c **** *
1780:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1781:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
1782:.\Generated_Source\PSoC4/CyLib.c **** {
1783:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
1784:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 61


1785:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
1786:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
1787:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
1788:.\Generated_Source\PSoC4/CyLib.c **** }
1789:.\Generated_Source\PSoC4/CyLib.c **** 
1790:.\Generated_Source\PSoC4/CyLib.c **** 
1791:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1792:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
1793:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1794:.\Generated_Source\PSoC4/CyLib.c **** *
1795:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1796:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
1797:.\Generated_Source\PSoC4/CyLib.c **** *
1798:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1799:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
1800:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1801:.\Generated_Source\PSoC4/CyLib.c **** *
1802:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1803:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
1804:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
1805:.\Generated_Source\PSoC4/CyLib.c **** *
1806:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1807:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
1808:.\Generated_Source\PSoC4/CyLib.c **** {
1809:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
1810:.\Generated_Source\PSoC4/CyLib.c **** }
1811:.\Generated_Source\PSoC4/CyLib.c **** 
1812:.\Generated_Source\PSoC4/CyLib.c **** 
1813:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1814:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
1815:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1816:.\Generated_Source\PSoC4/CyLib.c **** *
1817:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1818:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
1819:.\Generated_Source\PSoC4/CyLib.c **** *
1820:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1821:.\Generated_Source\PSoC4/CyLib.c **** *  None
1822:.\Generated_Source\PSoC4/CyLib.c **** *
1823:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1824:.\Generated_Source\PSoC4/CyLib.c **** *  None
1825:.\Generated_Source\PSoC4/CyLib.c **** *
1826:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1827:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
1828:.\Generated_Source\PSoC4/CyLib.c **** {
 1539              		.loc 1 1828 0
 1540              		.cfi_startproc
 1541 0000 38B5     		push	{r3, r4, r5, lr}
 1542              		.cfi_def_cfa_offset 16
 1543              		.cfi_offset 3, -16
 1544              		.cfi_offset 4, -12
 1545              		.cfi_offset 5, -8
 1546              		.cfi_offset 14, -4
1829:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1830:.\Generated_Source\PSoC4/CyLib.c **** 
1831:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
1832:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1547              		.loc 1 1832 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 62


 1548 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1549              	.LVL124:
 1550 0006 0128     		cmp	r0, #1
 1551 0008 0BD1     		bne	.L124
 1552 000a 06E0     		b	.L129
 1553              	.LVL125:
 1554              	.L128:
1833:.\Generated_Source\PSoC4/CyLib.c ****     {
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1555              		.loc 1 1836 0
 1556 000c A300     		lsl	r3, r4, #2
 1557 000e 5B59     		ldr	r3, [r3, r5]
 1558 0010 002B     		cmp	r3, #0
 1559 0012 00D0     		beq	.L127
1837:.\Generated_Source\PSoC4/CyLib.c ****             {
1838:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1560              		.loc 1 1838 0
 1561 0014 9847     		blx	r3
 1562              	.LVL126:
 1563              	.L127:
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1564              		.loc 1 1834 0
 1565 0016 0134     		add	r4, r4, #1
 1566              	.LVL127:
 1567 0018 01E0     		b	.L125
 1568              	.LVL128:
 1569              	.L129:
 1570 001a 0024     		mov	r4, #0
1836:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1571              		.loc 1 1836 0
 1572 001c 014D     		ldr	r5, .L130
 1573              	.L125:
 1574              	.LVL129:
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1575              		.loc 1 1834 0 discriminator 1
 1576 001e 042C     		cmp	r4, #4
 1577 0020 F4D9     		bls	.L128
 1578              	.LVL130:
 1579              	.L124:
1839:.\Generated_Source\PSoC4/CyLib.c ****             }
1840:.\Generated_Source\PSoC4/CyLib.c ****         }
1841:.\Generated_Source\PSoC4/CyLib.c ****     }
1842:.\Generated_Source\PSoC4/CyLib.c **** }
 1580              		.loc 1 1842 0
 1581              		@ sp needed
 1582 0022 38BD     		pop	{r3, r4, r5, pc}
 1583              	.L131:
 1584              		.align	2
 1585              	.L130:
 1586 0024 00000000 		.word	.LANCHOR2
 1587              		.cfi_endproc
 1588              	.LFE41:
 1589              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1590              		.section	.text.CySysTickClear,"ax",%progbits
 1591              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 63


 1592              		.global	CySysTickClear
 1593              		.code	16
 1594              		.thumb_func
 1595              		.type	CySysTickClear, %function
 1596              	CySysTickClear:
 1597              	.LFB38:
1745:.\Generated_Source\PSoC4/CyLib.c **** {
 1598              		.loc 1 1745 0
 1599              		.cfi_startproc
1746:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1600              		.loc 1 1746 0
 1601 0000 0022     		mov	r2, #0
 1602 0002 014B     		ldr	r3, .L133
 1603 0004 1A60     		str	r2, [r3]
1747:.\Generated_Source\PSoC4/CyLib.c **** }
 1604              		.loc 1 1747 0
 1605              		@ sp needed
 1606 0006 7047     		bx	lr
 1607              	.L134:
 1608              		.align	2
 1609              	.L133:
 1610 0008 18E000E0 		.word	-536813544
 1611              		.cfi_endproc
 1612              	.LFE38:
 1613              		.size	CySysTickClear, .-CySysTickClear
 1614              		.section	.text.CySysTickInit,"ax",%progbits
 1615              		.align	2
 1616              		.global	CySysTickInit
 1617              		.code	16
 1618              		.thumb_func
 1619              		.type	CySysTickInit, %function
 1620              	CySysTickInit:
 1621              	.LFB29:
1490:.\Generated_Source\PSoC4/CyLib.c **** {
 1622              		.loc 1 1490 0
 1623              		.cfi_startproc
 1624 0000 08B5     		push	{r3, lr}
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 3, -8
 1627              		.cfi_offset 14, -4
 1628              	.LVL131:
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1629              		.loc 1 1493 0
 1630 0002 0023     		mov	r3, #0
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1631              		.loc 1 1495 0
 1632 0004 0C48     		ldr	r0, .L138
 1633 0006 0021     		mov	r1, #0
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1634              		.loc 1 1493 0
 1635 0008 02E0     		b	.L136
 1636              	.LVL132:
 1637              	.L137:
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1638              		.loc 1 1495 0 discriminator 2
 1639 000a 9A00     		lsl	r2, r3, #2
 1640 000c 1150     		str	r1, [r2, r0]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 64


1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1641              		.loc 1 1493 0 discriminator 2
 1642 000e 0133     		add	r3, r3, #1
 1643              	.LVL133:
 1644              	.L136:
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1645              		.loc 1 1493 0 is_stmt 0 discriminator 1
 1646 0010 042B     		cmp	r3, #4
 1647 0012 FAD9     		bls	.L137
1498:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 1648              		.loc 1 1498 0 is_stmt 1
 1649 0014 0F20     		mov	r0, #15
 1650 0016 0949     		ldr	r1, .L138+4
 1651 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1652              	.LVL134:
1504:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1653              		.loc 1 1504 0
 1654 001c 084B     		ldr	r3, .L138+8
 1655 001e D868     		ldr	r0, [r3, #12]
 1656 0020 FA21     		mov	r1, #250
 1657 0022 8900     		lsl	r1, r1, #2
 1658 0024 FFF7FEFF 		bl	__aeabi_uidiv
 1659              	.LVL135:
 1660 0028 FFF7FEFF 		bl	CySysTickSetReload
 1661              	.LVL136:
1505:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1662              		.loc 1 1505 0
 1663 002c FFF7FEFF 		bl	CySysTickClear
 1664              	.LVL137:
1506:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1665              		.loc 1 1506 0
 1666 0030 0F20     		mov	r0, #15
 1667 0032 FFF7FEFF 		bl	CyIntEnable
 1668              	.LVL138:
1507:.\Generated_Source\PSoC4/CyLib.c **** }
 1669              		.loc 1 1507 0
 1670              		@ sp needed
 1671 0036 08BD     		pop	{r3, pc}
 1672              	.L139:
 1673              		.align	2
 1674              	.L138:
 1675 0038 00000000 		.word	.LANCHOR2
 1676 003c 00000000 		.word	CySysTickServiceCallbacks
 1677 0040 00000000 		.word	.LANCHOR0
 1678              		.cfi_endproc
 1679              	.LFE29:
 1680              		.size	CySysTickInit, .-CySysTickInit
 1681              		.section	.text.CySysTickStart,"ax",%progbits
 1682              		.align	2
 1683              		.global	CySysTickStart
 1684              		.code	16
 1685              		.thumb_func
 1686              		.type	CySysTickStart, %function
 1687              	CySysTickStart:
 1688              	.LFB28:
1456:.\Generated_Source\PSoC4/CyLib.c **** {
 1689              		.loc 1 1456 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 65


 1690              		.cfi_startproc
 1691 0000 08B5     		push	{r3, lr}
 1692              		.cfi_def_cfa_offset 8
 1693              		.cfi_offset 3, -8
 1694              		.cfi_offset 14, -4
1457:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1695              		.loc 1 1457 0
 1696 0002 064B     		ldr	r3, .L142
 1697 0004 5B69     		ldr	r3, [r3, #20]
 1698 0006 002B     		cmp	r3, #0
 1699 0008 04D1     		bne	.L141
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1700              		.loc 1 1459 0
 1701 000a FFF7FEFF 		bl	CySysTickInit
 1702              	.LVL139:
1460:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1703              		.loc 1 1460 0
 1704 000e 0122     		mov	r2, #1
 1705 0010 024B     		ldr	r3, .L142
 1706 0012 5A61     		str	r2, [r3, #20]
 1707              	.L141:
1463:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1708              		.loc 1 1463 0
 1709 0014 FFF7FEFF 		bl	CySysTickEnable
 1710              	.LVL140:
1464:.\Generated_Source\PSoC4/CyLib.c **** }
 1711              		.loc 1 1464 0
 1712              		@ sp needed
 1713 0018 08BD     		pop	{r3, pc}
 1714              	.L143:
 1715 001a C046     		.align	2
 1716              	.L142:
 1717 001c 00000000 		.word	.LANCHOR2
 1718              		.cfi_endproc
 1719              	.LFE28:
 1720              		.size	CySysTickStart, .-CySysTickStart
 1721              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1722              		.align	2
 1723              		.global	CySysTickSetCallback
 1724              		.code	16
 1725              		.thumb_func
 1726              		.type	CySysTickSetCallback, %function
 1727              	CySysTickSetCallback:
 1728              	.LFB39:
1782:.\Generated_Source\PSoC4/CyLib.c **** {
 1729              		.loc 1 1782 0
 1730              		.cfi_startproc
 1731              	.LVL141:
1785:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 1732              		.loc 1 1785 0
 1733 0000 024B     		ldr	r3, .L145
 1734 0002 8200     		lsl	r2, r0, #2
 1735 0004 D058     		ldr	r0, [r2, r3]
 1736              	.LVL142:
1786:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1737              		.loc 1 1786 0
 1738 0006 D150     		str	r1, [r2, r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 66


1788:.\Generated_Source\PSoC4/CyLib.c **** }
 1739              		.loc 1 1788 0
 1740              		@ sp needed
 1741 0008 7047     		bx	lr
 1742              	.L146:
 1743 000a C046     		.align	2
 1744              	.L145:
 1745 000c 00000000 		.word	.LANCHOR2
 1746              		.cfi_endproc
 1747              	.LFE39:
 1748              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1749              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1750              		.align	2
 1751              		.global	CySysTickGetCallback
 1752              		.code	16
 1753              		.thumb_func
 1754              		.type	CySysTickGetCallback, %function
 1755              	CySysTickGetCallback:
 1756              	.LFB40:
1808:.\Generated_Source\PSoC4/CyLib.c **** {
 1757              		.loc 1 1808 0
 1758              		.cfi_startproc
 1759              	.LVL143:
1809:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1760              		.loc 1 1809 0
 1761 0000 8000     		lsl	r0, r0, #2
 1762              	.LVL144:
 1763 0002 014B     		ldr	r3, .L148
 1764 0004 C058     		ldr	r0, [r0, r3]
1810:.\Generated_Source\PSoC4/CyLib.c **** }
 1765              		.loc 1 1810 0
 1766              		@ sp needed
 1767 0006 7047     		bx	lr
 1768              	.L149:
 1769              		.align	2
 1770              	.L148:
 1771 0008 00000000 		.word	.LANCHOR2
 1772              		.cfi_endproc
 1773              	.LFE40:
 1774              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1775              		.section	.text.CyGetUniqueId,"ax",%progbits
 1776              		.align	2
 1777              		.global	CyGetUniqueId
 1778              		.code	16
 1779              		.thumb_func
 1780              		.type	CyGetUniqueId, %function
 1781              	CyGetUniqueId:
 1782              	.LFB42:
1843:.\Generated_Source\PSoC4/CyLib.c **** 
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1846:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
1847:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1848:.\Generated_Source\PSoC4/CyLib.c **** *
1849:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1850:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
1851:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 67


1852:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
1853:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
1854:.\Generated_Source\PSoC4/CyLib.c **** *
1855:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1856:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
1857:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
1858:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
1859:.\Generated_Source\PSoC4/CyLib.c **** *
1860:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1861:.\Generated_Source\PSoC4/CyLib.c **** *  None
1862:.\Generated_Source\PSoC4/CyLib.c **** *
1863:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1864:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
1865:.\Generated_Source\PSoC4/CyLib.c **** {
 1783              		.loc 1 1865 0
 1784              		.cfi_startproc
 1785              	.LVL145:
1866:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
1867:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1786              		.loc 1 1867 0
 1787 0000 134B     		ldr	r3, .L151
 1788 0002 1A78     		ldrb	r2, [r3]
 1789 0004 D2B2     		uxtb	r2, r2
 1790 0006 0260     		str	r2, [r0]
1868:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1791              		.loc 1 1868 0
 1792 0008 124B     		ldr	r3, .L151+4
 1793 000a 1B78     		ldrb	r3, [r3]
 1794 000c 1B02     		lsl	r3, r3, #8
 1795 000e 1343     		orr	r3, r2
 1796 0010 0360     		str	r3, [r0]
1869:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 1797              		.loc 1 1869 0
 1798 0012 114A     		ldr	r2, .L151+8
 1799 0014 1278     		ldrb	r2, [r2]
 1800 0016 1204     		lsl	r2, r2, #16
 1801 0018 1343     		orr	r3, r2
 1802 001a 0360     		str	r3, [r0]
1870:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1803              		.loc 1 1870 0
 1804 001c 0F4A     		ldr	r2, .L151+12
 1805 001e 1278     		ldrb	r2, [r2]
 1806 0020 1206     		lsl	r2, r2, #24
 1807 0022 1343     		orr	r3, r2
 1808 0024 0360     		str	r3, [r0]
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 1809              		.loc 1 1872 0
 1810 0026 0E4B     		ldr	r3, .L151+16
 1811 0028 1A78     		ldrb	r2, [r3]
 1812 002a D2B2     		uxtb	r2, r2
 1813 002c 4260     		str	r2, [r0, #4]
1873:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1814              		.loc 1 1873 0
 1815 002e 0D4B     		ldr	r3, .L151+20
 1816 0030 1B78     		ldrb	r3, [r3]
 1817 0032 1B02     		lsl	r3, r3, #8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 68


 1818 0034 1343     		orr	r3, r2
 1819 0036 4360     		str	r3, [r0, #4]
1874:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1820              		.loc 1 1874 0
 1821 0038 0B4A     		ldr	r2, .L151+24
 1822 003a 1278     		ldrb	r2, [r2]
 1823 003c 1204     		lsl	r2, r2, #16
 1824 003e 1343     		orr	r3, r2
 1825 0040 4360     		str	r3, [r0, #4]
1875:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1826              		.loc 1 1875 0
 1827 0042 0A4A     		ldr	r2, .L151+28
 1828 0044 1278     		ldrb	r2, [r2]
 1829 0046 1206     		lsl	r2, r2, #24
 1830 0048 1343     		orr	r3, r2
 1831 004a 4360     		str	r3, [r0, #4]
1876:.\Generated_Source\PSoC4/CyLib.c **** #else
1877:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
1878:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
1879:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
1880:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
1883:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
1884:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
1885:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
1886:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
1887:.\Generated_Source\PSoC4/CyLib.c **** }
 1832              		.loc 1 1887 0
 1833              		@ sp needed
 1834 004c 7047     		bx	lr
 1835              	.L152:
 1836 004e C046     		.align	2
 1837              	.L151:
 1838 0050 78F1FF0F 		.word	268431736
 1839 0054 79F1FF0F 		.word	268431737
 1840 0058 7AF1FF0F 		.word	268431738
 1841 005c 7BF1FF0F 		.word	268431739
 1842 0060 7CF1FF0F 		.word	268431740
 1843 0064 7DF1FF0F 		.word	268431741
 1844 0068 7EF1FF0F 		.word	268431742
 1845 006c 7FF1FF0F 		.word	268431743
 1846              		.cfi_endproc
 1847              	.LFE42:
 1848              		.size	CyGetUniqueId, .-CyGetUniqueId
 1849              		.global	cyImoFreqMhz2Reg
 1850              		.global	CySysTickInitVar
 1851              		.global	cydelay32kMs
 1852              		.global	cydelayFreqMhz
 1853              		.global	cydelayFreqKhz
 1854              		.global	cydelayFreqHz
 1855              		.section	.rodata
 1856              		.align	2
 1857              		.set	.LANCHOR1,. + 0
 1858              		.type	cyImoFreqMhz2Reg, %object
 1859              		.size	cyImoFreqMhz2Reg, 46
 1860              	cyImoFreqMhz2Reg:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 69


 1861 0000 03       		.byte	3
 1862 0001 04       		.byte	4
 1863 0002 05       		.byte	5
 1864 0003 06       		.byte	6
 1865 0004 07       		.byte	7
 1866 0005 08       		.byte	8
 1867 0006 09       		.byte	9
 1868 0007 0A       		.byte	10
 1869 0008 0B       		.byte	11
 1870 0009 0C       		.byte	12
 1871 000a 0E       		.byte	14
 1872 000b 0F       		.byte	15
 1873 000c 10       		.byte	16
 1874 000d 11       		.byte	17
 1875 000e 12       		.byte	18
 1876 000f 13       		.byte	19
 1877 0010 14       		.byte	20
 1878 0011 15       		.byte	21
 1879 0012 16       		.byte	22
 1880 0013 17       		.byte	23
 1881 0014 18       		.byte	24
 1882 0015 19       		.byte	25
 1883 0016 1B       		.byte	27
 1884 0017 1C       		.byte	28
 1885 0018 1D       		.byte	29
 1886 0019 1E       		.byte	30
 1887 001a 1F       		.byte	31
 1888 001b 20       		.byte	32
 1889 001c 21       		.byte	33
 1890 001d 22       		.byte	34
 1891 001e 23       		.byte	35
 1892 001f 25       		.byte	37
 1893 0020 26       		.byte	38
 1894 0021 27       		.byte	39
 1895 0022 28       		.byte	40
 1896 0023 29       		.byte	41
 1897 0024 2A       		.byte	42
 1898 0025 2B       		.byte	43
 1899 0026 2E       		.byte	46
 1900 0027 2F       		.byte	47
 1901 0028 30       		.byte	48
 1902 0029 31       		.byte	49
 1903 002a 32       		.byte	50
 1904 002b 33       		.byte	51
 1905 002c 34       		.byte	52
 1906 002d 35       		.byte	53
 1907 002e 0000     		.data
 1908              		.align	2
 1909              		.set	.LANCHOR0,. + 0
 1910              		.type	cydelay32kMs, %object
 1911              		.size	cydelay32kMs, 4
 1912              	cydelay32kMs:
 1913 0000 0000E02E 		.word	786432000
 1914              		.type	cydelayFreqKhz, %object
 1915              		.size	cydelayFreqKhz, 4
 1916              	cydelayFreqKhz:
 1917 0004 C05D0000 		.word	24000
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 70


 1918              		.type	cydelayFreqMhz, %object
 1919              		.size	cydelayFreqMhz, 1
 1920              	cydelayFreqMhz:
 1921 0008 18       		.byte	24
 1922 0009 000000   		.space	3
 1923              		.type	cydelayFreqHz, %object
 1924              		.size	cydelayFreqHz, 4
 1925              	cydelayFreqHz:
 1926 000c 00366E01 		.word	24000000
 1927              		.bss
 1928              		.align	2
 1929              		.set	.LANCHOR2,. + 0
 1930              		.type	CySysTickCallbacks, %object
 1931              		.size	CySysTickCallbacks, 20
 1932              	CySysTickCallbacks:
 1933 0000 00000000 		.space	20
 1933      00000000 
 1933      00000000 
 1933      00000000 
 1933      00000000 
 1934              		.type	CySysTickInitVar, %object
 1935              		.size	CySysTickInitVar, 4
 1936              	CySysTickInitVar:
 1937 0014 00000000 		.space	4
 1938              		.text
 1939              	.Letext0:
 1940              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1941              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1942              		.section	.debug_info,"",%progbits
 1943              	.Ldebug_info0:
 1944 0000 5B0A0000 		.4byte	0xa5b
 1945 0004 0400     		.2byte	0x4
 1946 0006 00000000 		.4byte	.Ldebug_abbrev0
 1947 000a 04       		.byte	0x4
 1948 000b 01       		.uleb128 0x1
 1949 000c 6A000000 		.4byte	.LASF94
 1950 0010 01       		.byte	0x1
 1951 0011 8B030000 		.4byte	.LASF95
 1952 0015 8C010000 		.4byte	.LASF96
 1953 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1954 001d 00000000 		.4byte	0
 1955 0021 00000000 		.4byte	.Ldebug_line0
 1956 0025 02       		.uleb128 0x2
 1957 0026 01       		.byte	0x1
 1958 0027 06       		.byte	0x6
 1959 0028 60010000 		.4byte	.LASF0
 1960 002c 02       		.uleb128 0x2
 1961 002d 01       		.byte	0x1
 1962 002e 08       		.byte	0x8
 1963 002f DC040000 		.4byte	.LASF1
 1964 0033 02       		.uleb128 0x2
 1965 0034 02       		.byte	0x2
 1966 0035 05       		.byte	0x5
 1967 0036 EA040000 		.4byte	.LASF2
 1968 003a 02       		.uleb128 0x2
 1969 003b 02       		.byte	0x2
 1970 003c 07       		.byte	0x7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 71


 1971 003d 69030000 		.4byte	.LASF3
 1972 0041 02       		.uleb128 0x2
 1973 0042 04       		.byte	0x4
 1974 0043 05       		.byte	0x5
 1975 0044 EF010000 		.4byte	.LASF4
 1976 0048 02       		.uleb128 0x2
 1977 0049 04       		.byte	0x4
 1978 004a 07       		.byte	0x7
 1979 004b F1020000 		.4byte	.LASF5
 1980 004f 02       		.uleb128 0x2
 1981 0050 08       		.byte	0x8
 1982 0051 05       		.byte	0x5
 1983 0052 52010000 		.4byte	.LASF6
 1984 0056 02       		.uleb128 0x2
 1985 0057 08       		.byte	0x8
 1986 0058 07       		.byte	0x7
 1987 0059 E6000000 		.4byte	.LASF7
 1988 005d 03       		.uleb128 0x3
 1989 005e 04       		.byte	0x4
 1990 005f 05       		.byte	0x5
 1991 0060 696E7400 		.ascii	"int\000"
 1992 0064 02       		.uleb128 0x2
 1993 0065 04       		.byte	0x4
 1994 0066 07       		.byte	0x7
 1995 0067 D5020000 		.4byte	.LASF8
 1996 006b 04       		.uleb128 0x4
 1997 006c 1A020000 		.4byte	.LASF9
 1998 0070 02       		.byte	0x2
 1999 0071 C1       		.byte	0xc1
 2000 0072 2C000000 		.4byte	0x2c
 2001 0076 04       		.uleb128 0x4
 2002 0077 17000000 		.4byte	.LASF10
 2003 007b 02       		.byte	0x2
 2004 007c C2       		.byte	0xc2
 2005 007d 3A000000 		.4byte	0x3a
 2006 0081 04       		.uleb128 0x4
 2007 0082 5D020000 		.4byte	.LASF11
 2008 0086 02       		.byte	0x2
 2009 0087 C3       		.byte	0xc3
 2010 0088 48000000 		.4byte	0x48
 2011 008c 02       		.uleb128 0x2
 2012 008d 04       		.byte	0x4
 2013 008e 04       		.byte	0x4
 2014 008f 6E040000 		.4byte	.LASF12
 2015 0093 02       		.uleb128 0x2
 2016 0094 08       		.byte	0x8
 2017 0095 04       		.byte	0x4
 2018 0096 39020000 		.4byte	.LASF13
 2019 009a 02       		.uleb128 0x2
 2020 009b 01       		.byte	0x1
 2021 009c 08       		.byte	0x8
 2022 009d 23050000 		.4byte	.LASF14
 2023 00a1 05       		.uleb128 0x5
 2024 00a2 C6040000 		.4byte	.LASF15
 2025 00a6 02       		.byte	0x2
 2026 00a7 6B01     		.2byte	0x16b
 2027 00a9 AD000000 		.4byte	0xad
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 72


 2028 00ad 06       		.uleb128 0x6
 2029 00ae 6B000000 		.4byte	0x6b
 2030 00b2 05       		.uleb128 0x5
 2031 00b3 DC030000 		.4byte	.LASF16
 2032 00b7 02       		.byte	0x2
 2033 00b8 6D01     		.2byte	0x16d
 2034 00ba BE000000 		.4byte	0xbe
 2035 00be 06       		.uleb128 0x6
 2036 00bf 81000000 		.4byte	0x81
 2037 00c3 05       		.uleb128 0x5
 2038 00c4 28050000 		.4byte	.LASF17
 2039 00c8 02       		.byte	0x2
 2040 00c9 7D01     		.2byte	0x17d
 2041 00cb CF000000 		.4byte	0xcf
 2042 00cf 07       		.uleb128 0x7
 2043 00d0 04       		.byte	0x4
 2044 00d1 D5000000 		.4byte	0xd5
 2045 00d5 08       		.uleb128 0x8
 2046 00d6 02       		.uleb128 0x2
 2047 00d7 04       		.byte	0x4
 2048 00d8 07       		.byte	0x7
 2049 00d9 F1030000 		.4byte	.LASF18
 2050 00dd 04       		.uleb128 0x4
 2051 00de 8A040000 		.4byte	.LASF19
 2052 00e2 03       		.byte	0x3
 2053 00e3 67       		.byte	0x67
 2054 00e4 CF000000 		.4byte	0xcf
 2055 00e8 09       		.uleb128 0x9
 2056 00e9 EB050000 		.4byte	.LASF20
 2057 00ed 01       		.byte	0x1
 2058 00ee 5A       		.byte	0x5a
 2059 00ef 00000000 		.4byte	.LFB0
 2060 00f3 14000000 		.4byte	.LFE0-.LFB0
 2061 00f7 01       		.uleb128 0x1
 2062 00f8 9C       		.byte	0x9c
 2063 00f9 09       		.uleb128 0x9
 2064 00fa 1E030000 		.4byte	.LASF21
 2065 00fe 01       		.byte	0x1
 2066 00ff 78       		.byte	0x78
 2067 0100 00000000 		.4byte	.LFB1
 2068 0104 10000000 		.4byte	.LFE1-.LFB1
 2069 0108 01       		.uleb128 0x1
 2070 0109 9C       		.byte	0x9c
 2071 010a 0A       		.uleb128 0xa
 2072 010b 27000000 		.4byte	.LASF22
 2073 010f 01       		.byte	0x1
 2074 0110 1901     		.2byte	0x119
 2075 0112 00000000 		.4byte	.LFB2
 2076 0116 24000000 		.4byte	.LFE2-.LFB2
 2077 011a 01       		.uleb128 0x1
 2078 011b 9C       		.byte	0x9c
 2079 011c 53010000 		.4byte	0x153
 2080 0120 0B       		.uleb128 0xb
 2081 0121 12050000 		.4byte	.LASF24
 2082 0125 01       		.byte	0x1
 2083 0126 1901     		.2byte	0x119
 2084 0128 81000000 		.4byte	0x81
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 73


 2085 012c 00000000 		.4byte	.LLST0
 2086 0130 0C       		.uleb128 0xc
 2087 0131 7D010000 		.4byte	.LASF26
 2088 0135 01       		.byte	0x1
 2089 0136 1B01     		.2byte	0x11b
 2090 0138 6B000000 		.4byte	0x6b
 2091 013c 2C000000 		.4byte	.LLST1
 2092 0140 0D       		.uleb128 0xd
 2093 0141 08000000 		.4byte	.LVL1
 2094 0145 350A0000 		.4byte	0xa35
 2095 0149 0D       		.uleb128 0xd
 2096 014a 1C000000 		.4byte	.LVL3
 2097 014e 400A0000 		.4byte	0xa40
 2098 0152 00       		.byte	0
 2099 0153 0A       		.uleb128 0xa
 2100 0154 45050000 		.4byte	.LASF23
 2101 0158 01       		.byte	0x1
 2102 0159 4A01     		.2byte	0x14a
 2103 015b 00000000 		.4byte	.LFB3
 2104 015f 28000000 		.4byte	.LFE3-.LFB3
 2105 0163 01       		.uleb128 0x1
 2106 0164 9C       		.byte	0x9c
 2107 0165 9C010000 		.4byte	0x19c
 2108 0169 0B       		.uleb128 0xb
 2109 016a E3050000 		.4byte	.LASF25
 2110 016e 01       		.byte	0x1
 2111 016f 4A01     		.2byte	0x14a
 2112 0171 81000000 		.4byte	0x81
 2113 0175 3F000000 		.4byte	.LLST2
 2114 0179 0C       		.uleb128 0xc
 2115 017a 7D010000 		.4byte	.LASF26
 2116 017e 01       		.byte	0x1
 2117 017f 4C01     		.2byte	0x14c
 2118 0181 6B000000 		.4byte	0x6b
 2119 0185 6B000000 		.4byte	.LLST3
 2120 0189 0D       		.uleb128 0xd
 2121 018a 08000000 		.4byte	.LVL5
 2122 018e 350A0000 		.4byte	0xa35
 2123 0192 0D       		.uleb128 0xd
 2124 0193 1E000000 		.4byte	.LVL7
 2125 0197 400A0000 		.4byte	0xa40
 2126 019b 00       		.byte	0
 2127 019c 0E       		.uleb128 0xe
 2128 019d AF050000 		.4byte	.LASF27
 2129 01a1 01       		.byte	0x1
 2130 01a2 7503     		.2byte	0x375
 2131 01a4 00000000 		.4byte	.LFB6
 2132 01a8 20000000 		.4byte	.LFE6-.LFB6
 2133 01ac 01       		.uleb128 0x1
 2134 01ad 9C       		.byte	0x9c
 2135 01ae 0F       		.uleb128 0xf
 2136 01af 03030000 		.4byte	.LASF74
 2137 01b3 01       		.byte	0x1
 2138 01b4 8B03     		.2byte	0x38b
 2139 01b6 81000000 		.4byte	0x81
 2140 01ba 00000000 		.4byte	.LFB7
 2141 01be 10000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 74


 2142 01c2 01       		.uleb128 0x1
 2143 01c3 9C       		.byte	0x9c
 2144 01c4 0E       		.uleb128 0xe
 2145 01c5 46020000 		.4byte	.LASF28
 2146 01c9 01       		.byte	0x1
 2147 01ca 9F03     		.2byte	0x39f
 2148 01cc 00000000 		.4byte	.LFB8
 2149 01d0 0C000000 		.4byte	.LFE8-.LFB8
 2150 01d4 01       		.uleb128 0x1
 2151 01d5 9C       		.byte	0x9c
 2152 01d6 10       		.uleb128 0x10
 2153 01d7 55030000 		.4byte	.LASF31
 2154 01db 01       		.byte	0x1
 2155 01dc BB03     		.2byte	0x3bb
 2156 01de 81000000 		.4byte	0x81
 2157 01e2 00000000 		.4byte	.LFB9
 2158 01e6 14000000 		.4byte	.LFE9-.LFB9
 2159 01ea 01       		.uleb128 0x1
 2160 01eb 9C       		.byte	0x9c
 2161 01ec 0F020000 		.4byte	0x20f
 2162 01f0 0B       		.uleb128 0xb
 2163 01f1 1C050000 		.4byte	.LASF29
 2164 01f5 01       		.byte	0x1
 2165 01f6 BB03     		.2byte	0x3bb
 2166 01f8 81000000 		.4byte	0x81
 2167 01fc 7E000000 		.4byte	.LLST4
 2168 0200 11       		.uleb128 0x11
 2169 0201 CE050000 		.4byte	.LASF30
 2170 0205 01       		.byte	0x1
 2171 0206 BD03     		.2byte	0x3bd
 2172 0208 81000000 		.4byte	0x81
 2173 020c 01       		.uleb128 0x1
 2174 020d 50       		.byte	0x50
 2175 020e 00       		.byte	0
 2176 020f 10       		.uleb128 0x10
 2177 0210 47000000 		.4byte	.LASF32
 2178 0214 01       		.byte	0x1
 2179 0215 D603     		.2byte	0x3d6
 2180 0217 81000000 		.4byte	0x81
 2181 021b 00000000 		.4byte	.LFB10
 2182 021f 10000000 		.4byte	.LFE10-.LFB10
 2183 0223 01       		.uleb128 0x1
 2184 0224 9C       		.byte	0x9c
 2185 0225 38020000 		.4byte	0x238
 2186 0229 11       		.uleb128 0x11
 2187 022a 1E000000 		.4byte	.LASF33
 2188 022e 01       		.byte	0x1
 2189 022f D803     		.2byte	0x3d8
 2190 0231 81000000 		.4byte	0x81
 2191 0235 01       		.uleb128 0x1
 2192 0236 50       		.byte	0x50
 2193 0237 00       		.byte	0
 2194 0238 0A       		.uleb128 0xa
 2195 0239 0E010000 		.4byte	.LASF34
 2196 023d 01       		.byte	0x1
 2197 023e F203     		.2byte	0x3f2
 2198 0240 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 75


 2199 0244 0C000000 		.4byte	.LFE11-.LFB11
 2200 0248 01       		.uleb128 0x1
 2201 0249 9C       		.byte	0x9c
 2202 024a 5D020000 		.4byte	0x25d
 2203 024e 12       		.uleb128 0x12
 2204 024f 6B020000 		.4byte	.LASF35
 2205 0253 01       		.byte	0x1
 2206 0254 F203     		.2byte	0x3f2
 2207 0256 81000000 		.4byte	0x81
 2208 025a 01       		.uleb128 0x1
 2209 025b 50       		.byte	0x50
 2210 025c 00       		.byte	0
 2211 025d 0A       		.uleb128 0xa
 2212 025e F4040000 		.4byte	.LASF36
 2213 0262 01       		.byte	0x1
 2214 0263 C104     		.2byte	0x4c1
 2215 0265 00000000 		.4byte	.LFB18
 2216 0269 14000000 		.4byte	.LFE18-.LFB18
 2217 026d 01       		.uleb128 0x1
 2218 026e 9C       		.byte	0x9c
 2219 026f 84020000 		.4byte	0x284
 2220 0273 0B       		.uleb128 0xb
 2221 0274 64020000 		.4byte	.LASF37
 2222 0278 01       		.byte	0x1
 2223 0279 C104     		.2byte	0x4c1
 2224 027b 6B000000 		.4byte	0x6b
 2225 027f 9C000000 		.4byte	.LLST5
 2226 0283 00       		.byte	0
 2227 0284 10       		.uleb128 0x10
 2228 0285 44010000 		.4byte	.LASF38
 2229 0289 01       		.byte	0x1
 2230 028a D504     		.2byte	0x4d5
 2231 028c 6B000000 		.4byte	0x6b
 2232 0290 00000000 		.4byte	.LFB19
 2233 0294 18000000 		.4byte	.LFE19-.LFB19
 2234 0298 01       		.uleb128 0x1
 2235 0299 9C       		.byte	0x9c
 2236 029a AF020000 		.4byte	0x2af
 2237 029e 0B       		.uleb128 0xb
 2238 029f 64020000 		.4byte	.LASF37
 2239 02a3 01       		.byte	0x1
 2240 02a4 D504     		.2byte	0x4d5
 2241 02a6 6B000000 		.4byte	0x6b
 2242 02aa BD000000 		.4byte	.LLST6
 2243 02ae 00       		.byte	0
 2244 02af 0A       		.uleb128 0xa
 2245 02b0 F8010000 		.4byte	.LASF39
 2246 02b4 01       		.byte	0x1
 2247 02b5 EA04     		.2byte	0x4ea
 2248 02b7 00000000 		.4byte	.LFB20
 2249 02bb 14000000 		.4byte	.LFE20-.LFB20
 2250 02bf 01       		.uleb128 0x1
 2251 02c0 9C       		.byte	0x9c
 2252 02c1 D6020000 		.4byte	0x2d6
 2253 02c5 0B       		.uleb128 0xb
 2254 02c6 64020000 		.4byte	.LASF37
 2255 02ca 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 76


 2256 02cb EA04     		.2byte	0x4ea
 2257 02cd 6B000000 		.4byte	0x6b
 2258 02d1 DE000000 		.4byte	.LLST7
 2259 02d5 00       		.byte	0
 2260 02d6 0A       		.uleb128 0xa
 2261 02d7 45030000 		.4byte	.LASF40
 2262 02db 01       		.byte	0x1
 2263 02dc FD04     		.2byte	0x4fd
 2264 02de 00000000 		.4byte	.LFB21
 2265 02e2 14000000 		.4byte	.LFE21-.LFB21
 2266 02e6 01       		.uleb128 0x1
 2267 02e7 9C       		.byte	0x9c
 2268 02e8 FD020000 		.4byte	0x2fd
 2269 02ec 0B       		.uleb128 0xb
 2270 02ed 64020000 		.4byte	.LASF37
 2271 02f1 01       		.byte	0x1
 2272 02f2 FD04     		.2byte	0x4fd
 2273 02f4 6B000000 		.4byte	0x6b
 2274 02f8 FF000000 		.4byte	.LLST8
 2275 02fc 00       		.byte	0
 2276 02fd 0A       		.uleb128 0xa
 2277 02fe FA030000 		.4byte	.LASF41
 2278 0302 01       		.byte	0x1
 2279 0303 1105     		.2byte	0x511
 2280 0305 00000000 		.4byte	.LFB22
 2281 0309 14000000 		.4byte	.LFE22-.LFB22
 2282 030d 01       		.uleb128 0x1
 2283 030e 9C       		.byte	0x9c
 2284 030f 24030000 		.4byte	0x324
 2285 0313 0B       		.uleb128 0xb
 2286 0314 64020000 		.4byte	.LASF37
 2287 0318 01       		.byte	0x1
 2288 0319 1105     		.2byte	0x511
 2289 031b 6B000000 		.4byte	0x6b
 2290 031f 20010000 		.4byte	.LLST9
 2291 0323 00       		.byte	0
 2292 0324 0A       		.uleb128 0xa
 2293 0325 D5040000 		.4byte	.LASF42
 2294 0329 01       		.byte	0x1
 2295 032a 2505     		.2byte	0x525
 2296 032c 00000000 		.4byte	.LFB23
 2297 0330 04000000 		.4byte	.LFE23-.LFB23
 2298 0334 01       		.uleb128 0x1
 2299 0335 9C       		.byte	0x9c
 2300 0336 49030000 		.4byte	0x349
 2301 033a 12       		.uleb128 0x12
 2302 033b 1C050000 		.4byte	.LASF29
 2303 033f 01       		.byte	0x1
 2304 0340 2505     		.2byte	0x525
 2305 0342 6B000000 		.4byte	0x6b
 2306 0346 01       		.uleb128 0x1
 2307 0347 50       		.byte	0x50
 2308 0348 00       		.byte	0
 2309 0349 10       		.uleb128 0x10
 2310 034a CA030000 		.4byte	.LASF43
 2311 034e 01       		.byte	0x1
 2312 034f 0E04     		.2byte	0x40e
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 77


 2313 0351 C3000000 		.4byte	0xc3
 2314 0355 00000000 		.4byte	.LFB12
 2315 0359 1E000000 		.4byte	.LFE12-.LFB12
 2316 035d 01       		.uleb128 0x1
 2317 035e 9C       		.byte	0x9c
 2318 035f B1030000 		.4byte	0x3b1
 2319 0363 0B       		.uleb128 0xb
 2320 0364 64020000 		.4byte	.LASF37
 2321 0368 01       		.byte	0x1
 2322 0369 0E04     		.2byte	0x40e
 2323 036b 6B000000 		.4byte	0x6b
 2324 036f 41010000 		.4byte	.LLST10
 2325 0373 0B       		.uleb128 0xb
 2326 0374 0C040000 		.4byte	.LASF44
 2327 0378 01       		.byte	0x1
 2328 0379 0E04     		.2byte	0x40e
 2329 037b C3000000 		.4byte	0xc3
 2330 037f 62010000 		.4byte	.LLST11
 2331 0383 11       		.uleb128 0x11
 2332 0384 40000000 		.4byte	.LASF45
 2333 0388 01       		.byte	0x1
 2334 0389 1004     		.2byte	0x410
 2335 038b C3000000 		.4byte	0xc3
 2336 038f 01       		.uleb128 0x1
 2337 0390 50       		.byte	0x50
 2338 0391 13       		.uleb128 0x13
 2339 0392 00000000 		.4byte	.LASF46
 2340 0396 01       		.byte	0x1
 2341 0397 1104     		.2byte	0x411
 2342 0399 B1030000 		.4byte	0x3b1
 2343 039d 00000020 		.4byte	0x20000000
 2344 03a1 14       		.uleb128 0x14
 2345 03a2 10000000 		.4byte	.LVL27
 2346 03a6 24030000 		.4byte	0x324
 2347 03aa 15       		.uleb128 0x15
 2348 03ab 01       		.uleb128 0x1
 2349 03ac 50       		.byte	0x50
 2350 03ad 01       		.uleb128 0x1
 2351 03ae 30       		.byte	0x30
 2352 03af 00       		.byte	0
 2353 03b0 00       		.byte	0
 2354 03b1 07       		.uleb128 0x7
 2355 03b2 04       		.byte	0x4
 2356 03b3 C3000000 		.4byte	0xc3
 2357 03b7 10       		.uleb128 0x10
 2358 03b8 00050000 		.4byte	.LASF47
 2359 03bc 01       		.byte	0x1
 2360 03bd 3304     		.2byte	0x433
 2361 03bf C3000000 		.4byte	0xc3
 2362 03c3 00000000 		.4byte	.LFB13
 2363 03c7 1A000000 		.4byte	.LFE13-.LFB13
 2364 03cb 01       		.uleb128 0x1
 2365 03cc 9C       		.byte	0x9c
 2366 03cd 01040000 		.4byte	0x401
 2367 03d1 0B       		.uleb128 0xb
 2368 03d2 64020000 		.4byte	.LASF37
 2369 03d6 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 78


 2370 03d7 3304     		.2byte	0x433
 2371 03d9 6B000000 		.4byte	0x6b
 2372 03dd 8E010000 		.4byte	.LLST12
 2373 03e1 13       		.uleb128 0x13
 2374 03e2 00000000 		.4byte	.LASF46
 2375 03e6 01       		.byte	0x1
 2376 03e7 3504     		.2byte	0x435
 2377 03e9 B1030000 		.4byte	0x3b1
 2378 03ed 00000020 		.4byte	0x20000000
 2379 03f1 14       		.uleb128 0x14
 2380 03f2 0E000000 		.4byte	.LVL33
 2381 03f6 24030000 		.4byte	0x324
 2382 03fa 15       		.uleb128 0x15
 2383 03fb 01       		.uleb128 0x1
 2384 03fc 50       		.byte	0x50
 2385 03fd 01       		.uleb128 0x1
 2386 03fe 30       		.byte	0x30
 2387 03ff 00       		.byte	0
 2388 0400 00       		.byte	0
 2389 0401 10       		.uleb128 0x10
 2390 0402 7C030000 		.4byte	.LASF48
 2391 0406 01       		.byte	0x1
 2392 0407 4C04     		.2byte	0x44c
 2393 0409 C3000000 		.4byte	0xc3
 2394 040d 00000000 		.4byte	.LFB14
 2395 0411 20000000 		.4byte	.LFE14-.LFB14
 2396 0415 01       		.uleb128 0x1
 2397 0416 9C       		.byte	0x9c
 2398 0417 69040000 		.4byte	0x469
 2399 041b 0B       		.uleb128 0xb
 2400 041c 64020000 		.4byte	.LASF37
 2401 0420 01       		.byte	0x1
 2402 0421 4C04     		.2byte	0x44c
 2403 0423 6B000000 		.4byte	0x6b
 2404 0427 AF010000 		.4byte	.LLST13
 2405 042b 0B       		.uleb128 0xb
 2406 042c 0C040000 		.4byte	.LASF44
 2407 0430 01       		.byte	0x1
 2408 0431 4C04     		.2byte	0x44c
 2409 0433 C3000000 		.4byte	0xc3
 2410 0437 D0010000 		.4byte	.LLST14
 2411 043b 11       		.uleb128 0x11
 2412 043c 40000000 		.4byte	.LASF45
 2413 0440 01       		.byte	0x1
 2414 0441 4E04     		.2byte	0x44e
 2415 0443 C3000000 		.4byte	0xc3
 2416 0447 01       		.uleb128 0x1
 2417 0448 50       		.byte	0x50
 2418 0449 13       		.uleb128 0x13
 2419 044a 00000000 		.4byte	.LASF46
 2420 044e 01       		.byte	0x1
 2421 044f 4F04     		.2byte	0x44f
 2422 0451 B1030000 		.4byte	0x3b1
 2423 0455 00000020 		.4byte	0x20000000
 2424 0459 14       		.uleb128 0x14
 2425 045a 10000000 		.4byte	.LVL37
 2426 045e 24030000 		.4byte	0x324
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 79


 2427 0462 15       		.uleb128 0x15
 2428 0463 01       		.uleb128 0x1
 2429 0464 50       		.byte	0x50
 2430 0465 01       		.uleb128 0x1
 2431 0466 30       		.byte	0x30
 2432 0467 00       		.byte	0
 2433 0468 00       		.byte	0
 2434 0469 10       		.uleb128 0x10
 2435 046a 9C040000 		.4byte	.LASF49
 2436 046e 01       		.byte	0x1
 2437 046f 6B04     		.2byte	0x46b
 2438 0471 C3000000 		.4byte	0xc3
 2439 0475 00000000 		.4byte	.LFB15
 2440 0479 1C000000 		.4byte	.LFE15-.LFB15
 2441 047d 01       		.uleb128 0x1
 2442 047e 9C       		.byte	0x9c
 2443 047f B3040000 		.4byte	0x4b3
 2444 0483 0B       		.uleb128 0xb
 2445 0484 64020000 		.4byte	.LASF37
 2446 0488 01       		.byte	0x1
 2447 0489 6B04     		.2byte	0x46b
 2448 048b 6B000000 		.4byte	0x6b
 2449 048f FC010000 		.4byte	.LLST15
 2450 0493 13       		.uleb128 0x13
 2451 0494 00000000 		.4byte	.LASF46
 2452 0498 01       		.byte	0x1
 2453 0499 6D04     		.2byte	0x46d
 2454 049b B1030000 		.4byte	0x3b1
 2455 049f 00000020 		.4byte	0x20000000
 2456 04a3 14       		.uleb128 0x14
 2457 04a4 0E000000 		.4byte	.LVL43
 2458 04a8 24030000 		.4byte	0x324
 2459 04ac 15       		.uleb128 0x15
 2460 04ad 01       		.uleb128 0x1
 2461 04ae 50       		.byte	0x50
 2462 04af 01       		.uleb128 0x1
 2463 04b0 30       		.byte	0x30
 2464 04b1 00       		.byte	0
 2465 04b2 00       		.byte	0
 2466 04b3 0A       		.uleb128 0xa
 2467 04b4 5D040000 		.4byte	.LASF50
 2468 04b8 01       		.byte	0x1
 2469 04b9 8304     		.2byte	0x483
 2470 04bb 00000000 		.4byte	.LFB16
 2471 04bf 48000000 		.4byte	.LFE16-.LFB16
 2472 04c3 01       		.uleb128 0x1
 2473 04c4 9C       		.byte	0x9c
 2474 04c5 52050000 		.4byte	0x552
 2475 04c9 0B       		.uleb128 0xb
 2476 04ca 64020000 		.4byte	.LASF37
 2477 04ce 01       		.byte	0x1
 2478 04cf 8304     		.2byte	0x483
 2479 04d1 6B000000 		.4byte	0x6b
 2480 04d5 1D020000 		.4byte	.LLST16
 2481 04d9 0B       		.uleb128 0xb
 2482 04da AC030000 		.4byte	.LASF51
 2483 04de 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 80


 2484 04df 8304     		.2byte	0x483
 2485 04e1 6B000000 		.4byte	0x6b
 2486 04e5 3E020000 		.4byte	.LLST17
 2487 04e9 0C       		.uleb128 0xc
 2488 04ea 7D010000 		.4byte	.LASF26
 2489 04ee 01       		.byte	0x1
 2490 04ef 8504     		.2byte	0x485
 2491 04f1 6B000000 		.4byte	0x6b
 2492 04f5 5F020000 		.4byte	.LLST18
 2493 04f9 0C       		.uleb128 0xc
 2494 04fa 40020000 		.4byte	.LASF52
 2495 04fe 01       		.byte	0x1
 2496 04ff 8604     		.2byte	0x486
 2497 0501 81000000 		.4byte	0x81
 2498 0505 72020000 		.4byte	.LLST19
 2499 0509 0C       		.uleb128 0xc
 2500 050a AB020000 		.4byte	.LASF53
 2501 050e 01       		.byte	0x1
 2502 050f 8704     		.2byte	0x487
 2503 0511 81000000 		.4byte	0x81
 2504 0515 85020000 		.4byte	.LLST20
 2505 0519 16       		.uleb128 0x16
 2506 051a 10000000 		.4byte	.LVL46
 2507 051e 24030000 		.4byte	0x324
 2508 0522 2C050000 		.4byte	0x52c
 2509 0526 15       		.uleb128 0x15
 2510 0527 01       		.uleb128 0x1
 2511 0528 50       		.byte	0x50
 2512 0529 01       		.uleb128 0x1
 2513 052a 30       		.byte	0x30
 2514 052b 00       		.byte	0
 2515 052c 16       		.uleb128 0x16
 2516 052d 1A000000 		.4byte	.LVL47
 2517 0531 24030000 		.4byte	0x324
 2518 0535 3F050000 		.4byte	0x53f
 2519 0539 15       		.uleb128 0x15
 2520 053a 01       		.uleb128 0x1
 2521 053b 50       		.byte	0x50
 2522 053c 01       		.uleb128 0x1
 2523 053d 30       		.byte	0x30
 2524 053e 00       		.byte	0
 2525 053f 0D       		.uleb128 0xd
 2526 0540 26000000 		.4byte	.LVL49
 2527 0544 350A0000 		.4byte	0xa35
 2528 0548 0D       		.uleb128 0xd
 2529 0549 42000000 		.4byte	.LVL54
 2530 054d 400A0000 		.4byte	0xa40
 2531 0551 00       		.byte	0
 2532 0552 10       		.uleb128 0x10
 2533 0553 7F020000 		.4byte	.LASF54
 2534 0557 01       		.byte	0x1
 2535 0558 A704     		.2byte	0x4a7
 2536 055a 6B000000 		.4byte	0x6b
 2537 055e 00000000 		.4byte	.LFB17
 2538 0562 2C000000 		.4byte	.LFE17-.LFB17
 2539 0566 01       		.uleb128 0x1
 2540 0567 9C       		.byte	0x9c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 81


 2541 0568 9C050000 		.4byte	0x59c
 2542 056c 0B       		.uleb128 0xb
 2543 056d 64020000 		.4byte	.LASF37
 2544 0571 01       		.byte	0x1
 2545 0572 A704     		.2byte	0x4a7
 2546 0574 6B000000 		.4byte	0x6b
 2547 0578 A3020000 		.4byte	.LLST21
 2548 057c 0C       		.uleb128 0xc
 2549 057d AC030000 		.4byte	.LASF51
 2550 0581 01       		.byte	0x1
 2551 0582 A904     		.2byte	0x4a9
 2552 0584 6B000000 		.4byte	0x6b
 2553 0588 C4020000 		.4byte	.LLST22
 2554 058c 14       		.uleb128 0x14
 2555 058d 0E000000 		.4byte	.LVL58
 2556 0591 24030000 		.4byte	0x324
 2557 0595 15       		.uleb128 0x15
 2558 0596 01       		.uleb128 0x1
 2559 0597 50       		.byte	0x50
 2560 0598 01       		.uleb128 0x1
 2561 0599 30       		.byte	0x30
 2562 059a 00       		.byte	0
 2563 059b 00       		.byte	0
 2564 059c 0E       		.uleb128 0xe
 2565 059d 1B010000 		.4byte	.LASF55
 2566 05a1 01       		.byte	0x1
 2567 05a2 4405     		.2byte	0x544
 2568 05a4 00000000 		.4byte	.LFB24
 2569 05a8 18000000 		.4byte	.LFE24-.LFB24
 2570 05ac 01       		.uleb128 0x1
 2571 05ad 9C       		.byte	0x9c
 2572 05ae 0A       		.uleb128 0xa
 2573 05af 8D050000 		.4byte	.LASF56
 2574 05b3 01       		.byte	0x1
 2575 05b4 5D05     		.2byte	0x55d
 2576 05b6 00000000 		.4byte	.LFB25
 2577 05ba 30000000 		.4byte	.LFE25-.LFB25
 2578 05be 01       		.uleb128 0x1
 2579 05bf 9C       		.byte	0x9c
 2580 05c0 E7050000 		.4byte	0x5e7
 2581 05c4 0B       		.uleb128 0xb
 2582 05c5 AB040000 		.4byte	.LASF57
 2583 05c9 01       		.byte	0x1
 2584 05ca 5D05     		.2byte	0x55d
 2585 05cc 81000000 		.4byte	0x81
 2586 05d0 D7020000 		.4byte	.LLST23
 2587 05d4 0D       		.uleb128 0xd
 2588 05d5 12000000 		.4byte	.LVL63
 2589 05d9 510A0000 		.4byte	0xa51
 2590 05dd 0D       		.uleb128 0xd
 2591 05de 24000000 		.4byte	.LVL65
 2592 05e2 510A0000 		.4byte	0xa51
 2593 05e6 00       		.byte	0
 2594 05e7 0A       		.uleb128 0xa
 2595 05e8 2F020000 		.4byte	.LASF58
 2596 05ec 01       		.byte	0x1
 2597 05ed 7905     		.2byte	0x579
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 82


 2598 05ef 00000000 		.4byte	.LFB26
 2599 05f3 14000000 		.4byte	.LFE26-.LFB26
 2600 05f7 01       		.uleb128 0x1
 2601 05f8 9C       		.byte	0x9c
 2602 05f9 17060000 		.4byte	0x617
 2603 05fd 0B       		.uleb128 0xb
 2604 05fe 0D060000 		.4byte	.LASF59
 2605 0602 01       		.byte	0x1
 2606 0603 7905     		.2byte	0x579
 2607 0605 76000000 		.4byte	0x76
 2608 0609 F5020000 		.4byte	.LLST24
 2609 060d 0D       		.uleb128 0xd
 2610 060e 0C000000 		.4byte	.LVL69
 2611 0612 510A0000 		.4byte	0xa51
 2612 0616 00       		.byte	0
 2613 0617 0A       		.uleb128 0xa
 2614 0618 B5030000 		.4byte	.LASF60
 2615 061c 01       		.byte	0x1
 2616 061d 8601     		.2byte	0x186
 2617 061f 00000000 		.4byte	.LFB4
 2618 0623 64010000 		.4byte	.LFE4-.LFB4
 2619 0627 01       		.uleb128 0x1
 2620 0628 9C       		.byte	0x9c
 2621 0629 06070000 		.4byte	0x706
 2622 062d 0B       		.uleb128 0xb
 2623 062e 6C010000 		.4byte	.LASF61
 2624 0632 01       		.byte	0x1
 2625 0633 8601     		.2byte	0x186
 2626 0635 81000000 		.4byte	0x81
 2627 0639 16030000 		.4byte	.LLST25
 2628 063d 0C       		.uleb128 0xc
 2629 063e 0F000000 		.4byte	.LASF62
 2630 0642 01       		.byte	0x1
 2631 0643 8C01     		.2byte	0x18c
 2632 0645 6B000000 		.4byte	0x6b
 2633 0649 6B030000 		.4byte	.LLST26
 2634 064d 0C       		.uleb128 0xc
 2635 064e 14040000 		.4byte	.LASF63
 2636 0652 01       		.byte	0x1
 2637 0653 8D01     		.2byte	0x18d
 2638 0655 6B000000 		.4byte	0x6b
 2639 0659 E1030000 		.4byte	.LLST27
 2640 065d 0C       		.uleb128 0xc
 2641 065e FC050000 		.4byte	.LASF64
 2642 0662 01       		.byte	0x1
 2643 0663 8E01     		.2byte	0x18e
 2644 0665 6B000000 		.4byte	0x6b
 2645 0669 20040000 		.4byte	.LLST28
 2646 066d 0C       		.uleb128 0xc
 2647 066e 55000000 		.4byte	.LASF65
 2648 0672 01       		.byte	0x1
 2649 0673 8F01     		.2byte	0x18f
 2650 0675 6B000000 		.4byte	0x6b
 2651 0679 AC040000 		.4byte	.LLST29
 2652 067d 0C       		.uleb128 0xc
 2653 067e 7D010000 		.4byte	.LASF26
 2654 0682 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 83


 2655 0683 9601     		.2byte	0x196
 2656 0685 6B000000 		.4byte	0x6b
 2657 0689 CB040000 		.4byte	.LLST30
 2658 068d 0D       		.uleb128 0xd
 2659 068e 10000000 		.4byte	.LVL71
 2660 0692 350A0000 		.4byte	0xa35
 2661 0696 16       		.uleb128 0x16
 2662 0697 B0000000 		.4byte	.LVL95
 2663 069b 510A0000 		.4byte	0xa51
 2664 069f A9060000 		.4byte	0x6a9
 2665 06a3 15       		.uleb128 0x15
 2666 06a4 01       		.uleb128 0x1
 2667 06a5 50       		.byte	0x50
 2668 06a6 01       		.uleb128 0x1
 2669 06a7 35       		.byte	0x35
 2670 06a8 00       		.byte	0
 2671 06a9 16       		.uleb128 0x16
 2672 06aa CE000000 		.4byte	.LVL101
 2673 06ae 510A0000 		.4byte	0xa51
 2674 06b2 BC060000 		.4byte	0x6bc
 2675 06b6 15       		.uleb128 0x15
 2676 06b7 01       		.uleb128 0x1
 2677 06b8 50       		.byte	0x50
 2678 06b9 01       		.uleb128 0x1
 2679 06ba 35       		.byte	0x35
 2680 06bb 00       		.byte	0
 2681 06bc 16       		.uleb128 0x16
 2682 06bd EC000000 		.4byte	.LVL103
 2683 06c1 E7050000 		.4byte	0x5e7
 2684 06c5 CF060000 		.4byte	0x6cf
 2685 06c9 15       		.uleb128 0x15
 2686 06ca 01       		.uleb128 0x1
 2687 06cb 50       		.byte	0x50
 2688 06cc 01       		.uleb128 0x1
 2689 06cd 35       		.byte	0x35
 2690 06ce 00       		.byte	0
 2691 06cf 16       		.uleb128 0x16
 2692 06d0 FE000000 		.4byte	.LVL106
 2693 06d4 510A0000 		.4byte	0xa51
 2694 06d8 E2060000 		.4byte	0x6e2
 2695 06dc 15       		.uleb128 0x15
 2696 06dd 01       		.uleb128 0x1
 2697 06de 50       		.byte	0x50
 2698 06df 01       		.uleb128 0x1
 2699 06e0 35       		.byte	0x35
 2700 06e1 00       		.byte	0
 2701 06e2 16       		.uleb128 0x16
 2702 06e3 06010000 		.4byte	.LVL109
 2703 06e7 24030000 		.4byte	0x324
 2704 06eb F5060000 		.4byte	0x6f5
 2705 06ef 15       		.uleb128 0x15
 2706 06f0 01       		.uleb128 0x1
 2707 06f1 50       		.byte	0x50
 2708 06f2 01       		.uleb128 0x1
 2709 06f3 30       		.byte	0x30
 2710 06f4 00       		.byte	0
 2711 06f5 14       		.uleb128 0x14
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 84


 2712 06f6 0C010000 		.4byte	.LVL110
 2713 06fa 400A0000 		.4byte	0xa40
 2714 06fe 15       		.uleb128 0x15
 2715 06ff 01       		.uleb128 0x1
 2716 0700 50       		.byte	0x50
 2717 0701 02       		.uleb128 0x2
 2718 0702 78       		.byte	0x78
 2719 0703 00       		.sleb128 0
 2720 0704 00       		.byte	0
 2721 0705 00       		.byte	0
 2722 0706 0A       		.uleb128 0xa
 2723 0707 70020000 		.4byte	.LASF66
 2724 070b 01       		.byte	0x1
 2725 070c 5003     		.2byte	0x350
 2726 070e 00000000 		.4byte	.LFB5
 2727 0712 40000000 		.4byte	.LFE5-.LFB5
 2728 0716 01       		.uleb128 0x1
 2729 0717 9C       		.byte	0x9c
 2730 0718 4B070000 		.4byte	0x74b
 2731 071c 0B       		.uleb128 0xb
 2732 071d CB040000 		.4byte	.LASF67
 2733 0721 01       		.byte	0x1
 2734 0722 5003     		.2byte	0x350
 2735 0724 81000000 		.4byte	0x81
 2736 0728 15050000 		.4byte	.LLST31
 2737 072c 16       		.uleb128 0x16
 2738 072d 2C000000 		.4byte	.LVL115
 2739 0731 E7050000 		.4byte	0x5e7
 2740 0735 41070000 		.4byte	0x741
 2741 0739 15       		.uleb128 0x15
 2742 073a 01       		.uleb128 0x1
 2743 073b 50       		.byte	0x50
 2744 073c 03       		.uleb128 0x3
 2745 073d 0A       		.byte	0xa
 2746 073e E803     		.2byte	0x3e8
 2747 0740 00       		.byte	0
 2748 0741 0D       		.uleb128 0xd
 2749 0742 30000000 		.4byte	.LVL116
 2750 0746 C4010000 		.4byte	0x1c4
 2751 074a 00       		.byte	0
 2752 074b 17       		.uleb128 0x17
 2753 074c 71010000 		.4byte	.LASF68
 2754 0750 01       		.byte	0x1
 2755 0751 8C05     		.2byte	0x58c
 2756 0753 00000000 		.4byte	.LFB27
 2757 0757 4C000000 		.4byte	.LFE27-.LFB27
 2758 075b 01       		.uleb128 0x1
 2759 075c 9C       		.byte	0x9c
 2760 075d 72070000 		.4byte	0x772
 2761 0761 0B       		.uleb128 0xb
 2762 0762 6C010000 		.4byte	.LASF61
 2763 0766 01       		.byte	0x1
 2764 0767 8C05     		.2byte	0x58c
 2765 0769 81000000 		.4byte	0x81
 2766 076d 36050000 		.4byte	.LLST32
 2767 0771 00       		.byte	0
 2768 0772 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 85


 2769 0773 D5050000 		.4byte	.LASF69
 2770 0777 01       		.byte	0x1
 2771 0778 0F06     		.2byte	0x60f
 2772 077a 00000000 		.4byte	.LFB31
 2773 077e 10000000 		.4byte	.LFE31-.LFB31
 2774 0782 01       		.uleb128 0x1
 2775 0783 9C       		.byte	0x9c
 2776 0784 0E       		.uleb128 0xe
 2777 0785 2B010000 		.4byte	.LASF70
 2778 0789 01       		.byte	0x1
 2779 078a 2606     		.2byte	0x626
 2780 078c 00000000 		.4byte	.LFB32
 2781 0790 10000000 		.4byte	.LFE32-.LFB32
 2782 0794 01       		.uleb128 0x1
 2783 0795 9C       		.byte	0x9c
 2784 0796 0A       		.uleb128 0xa
 2785 0797 35050000 		.4byte	.LASF71
 2786 079b 01       		.byte	0x1
 2787 079c F705     		.2byte	0x5f7
 2788 079e 00000000 		.4byte	.LFB30
 2789 07a2 18000000 		.4byte	.LFE30-.LFB30
 2790 07a6 01       		.uleb128 0x1
 2791 07a7 9C       		.byte	0x9c
 2792 07a8 B6070000 		.4byte	0x7b6
 2793 07ac 0D       		.uleb128 0xd
 2794 07ad 06000000 		.4byte	.LVL121
 2795 07b1 84070000 		.4byte	0x784
 2796 07b5 00       		.byte	0
 2797 07b6 0E       		.uleb128 0xe
 2798 07b7 95050000 		.4byte	.LASF72
 2799 07bb 01       		.byte	0x1
 2800 07bc 3D06     		.2byte	0x63d
 2801 07be 00000000 		.4byte	.LFB33
 2802 07c2 10000000 		.4byte	.LFE33-.LFB33
 2803 07c6 01       		.uleb128 0x1
 2804 07c7 9C       		.byte	0x9c
 2805 07c8 0A       		.uleb128 0xa
 2806 07c9 1A060000 		.4byte	.LASF73
 2807 07cd 01       		.byte	0x1
 2808 07ce 5306     		.2byte	0x653
 2809 07d0 00000000 		.4byte	.LFB34
 2810 07d4 10000000 		.4byte	.LFE34-.LFB34
 2811 07d8 01       		.uleb128 0x1
 2812 07d9 9C       		.byte	0x9c
 2813 07da EF070000 		.4byte	0x7ef
 2814 07de 0B       		.uleb128 0xb
 2815 07df AB020000 		.4byte	.LASF53
 2816 07e3 01       		.byte	0x1
 2817 07e4 5306     		.2byte	0x653
 2818 07e6 81000000 		.4byte	0x81
 2819 07ea 57050000 		.4byte	.LLST33
 2820 07ee 00       		.byte	0
 2821 07ef 0F       		.uleb128 0xf
 2822 07f0 DC010000 		.4byte	.LASF75
 2823 07f4 01       		.byte	0x1
 2824 07f5 6706     		.2byte	0x667
 2825 07f7 81000000 		.4byte	0x81
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 86


 2826 07fb 00000000 		.4byte	.LFB35
 2827 07ff 10000000 		.4byte	.LFE35-.LFB35
 2828 0803 01       		.uleb128 0x1
 2829 0804 9C       		.byte	0x9c
 2830 0805 0F       		.uleb128 0xf
 2831 0806 3D040000 		.4byte	.LASF76
 2832 080a 01       		.byte	0x1
 2833 080b 7B06     		.2byte	0x67b
 2834 080d 81000000 		.4byte	0x81
 2835 0811 00000000 		.4byte	.LFB36
 2836 0815 10000000 		.4byte	.LFE36-.LFB36
 2837 0819 01       		.uleb128 0x1
 2838 081a 9C       		.byte	0x9c
 2839 081b 0F       		.uleb128 0xf
 2840 081c BF020000 		.4byte	.LASF77
 2841 0820 01       		.byte	0x1
 2842 0821 BC06     		.2byte	0x6bc
 2843 0823 81000000 		.4byte	0x81
 2844 0827 00000000 		.4byte	.LFB37
 2845 082b 10000000 		.4byte	.LFE37-.LFB37
 2846 082f 01       		.uleb128 0x1
 2847 0830 9C       		.byte	0x9c
 2848 0831 18       		.uleb128 0x18
 2849 0832 2D060000 		.4byte	.LASF97
 2850 0836 01       		.byte	0x1
 2851 0837 2307     		.2byte	0x723
 2852 0839 00000000 		.4byte	.LFB41
 2853 083d 28000000 		.4byte	.LFE41-.LFB41
 2854 0841 01       		.uleb128 0x1
 2855 0842 9C       		.byte	0x9c
 2856 0843 5F080000 		.4byte	0x85f
 2857 0847 19       		.uleb128 0x19
 2858 0848 6900     		.ascii	"i\000"
 2859 084a 01       		.byte	0x1
 2860 084b 2507     		.2byte	0x725
 2861 084d 81000000 		.4byte	0x81
 2862 0851 78050000 		.4byte	.LLST34
 2863 0855 0D       		.uleb128 0xd
 2864 0856 06000000 		.4byte	.LVL124
 2865 085a 1B080000 		.4byte	0x81b
 2866 085e 00       		.byte	0
 2867 085f 0E       		.uleb128 0xe
 2868 0860 E2020000 		.4byte	.LASF78
 2869 0864 01       		.byte	0x1
 2870 0865 D006     		.2byte	0x6d0
 2871 0867 00000000 		.4byte	.LFB38
 2872 086b 0C000000 		.4byte	.LFE38-.LFB38
 2873 086f 01       		.uleb128 0x1
 2874 0870 9C       		.byte	0x9c
 2875 0871 17       		.uleb128 0x17
 2876 0872 9D020000 		.4byte	.LASF79
 2877 0876 01       		.byte	0x1
 2878 0877 D105     		.2byte	0x5d1
 2879 0879 00000000 		.4byte	.LFB29
 2880 087d 44000000 		.4byte	.LFE29-.LFB29
 2881 0881 01       		.uleb128 0x1
 2882 0882 9C       		.byte	0x9c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 87


 2883 0883 D3080000 		.4byte	0x8d3
 2884 0887 19       		.uleb128 0x19
 2885 0888 6900     		.ascii	"i\000"
 2886 088a 01       		.byte	0x1
 2887 088b D305     		.2byte	0x5d3
 2888 088d 81000000 		.4byte	0x81
 2889 0891 96050000 		.4byte	.LLST35
 2890 0895 16       		.uleb128 0x16
 2891 0896 1C000000 		.4byte	.LVL134
 2892 089a 49030000 		.4byte	0x349
 2893 089e B1080000 		.4byte	0x8b1
 2894 08a2 15       		.uleb128 0x15
 2895 08a3 01       		.uleb128 0x1
 2896 08a4 51       		.byte	0x51
 2897 08a5 05       		.uleb128 0x5
 2898 08a6 03       		.byte	0x3
 2899 08a7 00000000 		.4byte	CySysTickServiceCallbacks
 2900 08ab 15       		.uleb128 0x15
 2901 08ac 01       		.uleb128 0x1
 2902 08ad 50       		.byte	0x50
 2903 08ae 01       		.uleb128 0x1
 2904 08af 3F       		.byte	0x3f
 2905 08b0 00       		.byte	0
 2906 08b1 0D       		.uleb128 0xd
 2907 08b2 2C000000 		.4byte	.LVL136
 2908 08b6 C8070000 		.4byte	0x7c8
 2909 08ba 0D       		.uleb128 0xd
 2910 08bb 30000000 		.4byte	.LVL137
 2911 08bf 5F080000 		.4byte	0x85f
 2912 08c3 14       		.uleb128 0x14
 2913 08c4 36000000 		.4byte	.LVL138
 2914 08c8 5D020000 		.4byte	0x25d
 2915 08cc 15       		.uleb128 0x15
 2916 08cd 01       		.uleb128 0x1
 2917 08ce 50       		.byte	0x50
 2918 08cf 01       		.uleb128 0x1
 2919 08d0 3F       		.byte	0x3f
 2920 08d1 00       		.byte	0
 2921 08d2 00       		.byte	0
 2922 08d3 0A       		.uleb128 0xa
 2923 08d4 E2030000 		.4byte	.LASF80
 2924 08d8 01       		.byte	0x1
 2925 08d9 AF05     		.2byte	0x5af
 2926 08db 00000000 		.4byte	.LFB28
 2927 08df 20000000 		.4byte	.LFE28-.LFB28
 2928 08e3 01       		.uleb128 0x1
 2929 08e4 9C       		.byte	0x9c
 2930 08e5 FC080000 		.4byte	0x8fc
 2931 08e9 0D       		.uleb128 0xd
 2932 08ea 0E000000 		.4byte	.LVL139
 2933 08ee 71080000 		.4byte	0x871
 2934 08f2 0D       		.uleb128 0xd
 2935 08f3 18000000 		.4byte	.LVL140
 2936 08f7 96070000 		.4byte	0x796
 2937 08fb 00       		.byte	0
 2938 08fc 10       		.uleb128 0x10
 2939 08fd 5C050000 		.4byte	.LASF81
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 88


 2940 0901 01       		.byte	0x1
 2941 0902 F506     		.2byte	0x6f5
 2942 0904 DD000000 		.4byte	0xdd
 2943 0908 00000000 		.4byte	.LFB39
 2944 090c 10000000 		.4byte	.LFE39-.LFB39
 2945 0910 01       		.uleb128 0x1
 2946 0911 9C       		.byte	0x9c
 2947 0912 43090000 		.4byte	0x943
 2948 0916 0B       		.uleb128 0xb
 2949 0917 64020000 		.4byte	.LASF37
 2950 091b 01       		.byte	0x1
 2951 091c F506     		.2byte	0x6f5
 2952 091e 81000000 		.4byte	0x81
 2953 0922 B5050000 		.4byte	.LLST36
 2954 0926 12       		.uleb128 0x12
 2955 0927 23040000 		.4byte	.LASF82
 2956 092b 01       		.byte	0x1
 2957 092c F506     		.2byte	0x6f5
 2958 092e DD000000 		.4byte	0xdd
 2959 0932 01       		.uleb128 0x1
 2960 0933 51       		.byte	0x51
 2961 0934 11       		.uleb128 0x11
 2962 0935 1C040000 		.4byte	.LASF83
 2963 0939 01       		.byte	0x1
 2964 093a F706     		.2byte	0x6f7
 2965 093c DD000000 		.4byte	0xdd
 2966 0940 01       		.uleb128 0x1
 2967 0941 50       		.byte	0x50
 2968 0942 00       		.byte	0
 2969 0943 10       		.uleb128 0x10
 2970 0944 05020000 		.4byte	.LASF84
 2971 0948 01       		.byte	0x1
 2972 0949 0F07     		.2byte	0x70f
 2973 094b DD000000 		.4byte	0xdd
 2974 094f 00000000 		.4byte	.LFB40
 2975 0953 0C000000 		.4byte	.LFE40-.LFB40
 2976 0957 01       		.uleb128 0x1
 2977 0958 9C       		.byte	0x9c
 2978 0959 6E090000 		.4byte	0x96e
 2979 095d 0B       		.uleb128 0xb
 2980 095e 64020000 		.4byte	.LASF37
 2981 0962 01       		.byte	0x1
 2982 0963 0F07     		.2byte	0x70f
 2983 0965 81000000 		.4byte	0x81
 2984 0969 D6050000 		.4byte	.LLST37
 2985 096d 00       		.byte	0
 2986 096e 0A       		.uleb128 0xa
 2987 096f B1020000 		.4byte	.LASF85
 2988 0973 01       		.byte	0x1
 2989 0974 4807     		.2byte	0x748
 2990 0976 00000000 		.4byte	.LFB42
 2991 097a 70000000 		.4byte	.LFE42-.LFB42
 2992 097e 01       		.uleb128 0x1
 2993 097f 9C       		.byte	0x9c
 2994 0980 93090000 		.4byte	0x993
 2995 0984 12       		.uleb128 0x12
 2996 0985 84050000 		.4byte	.LASF86
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 89


 2997 0989 01       		.byte	0x1
 2998 098a 4807     		.2byte	0x748
 2999 098c 93090000 		.4byte	0x993
 3000 0990 01       		.uleb128 0x1
 3001 0991 50       		.byte	0x50
 3002 0992 00       		.byte	0
 3003 0993 07       		.uleb128 0x7
 3004 0994 04       		.byte	0x4
 3005 0995 81000000 		.4byte	0x81
 3006 0999 1A       		.uleb128 0x1a
 3007 099a DD000000 		.4byte	0xdd
 3008 099e A9090000 		.4byte	0x9a9
 3009 09a2 1B       		.uleb128 0x1b
 3010 09a3 D6000000 		.4byte	0xd6
 3011 09a7 04       		.byte	0x4
 3012 09a8 00       		.byte	0
 3013 09a9 1C       		.uleb128 0x1c
 3014 09aa 71050000 		.4byte	.LASF87
 3015 09ae 01       		.byte	0x1
 3016 09af 22       		.byte	0x22
 3017 09b0 99090000 		.4byte	0x999
 3018 09b4 05       		.uleb128 0x5
 3019 09b5 03       		.byte	0x3
 3020 09b6 00000000 		.4byte	CySysTickCallbacks
 3021 09ba 1D       		.uleb128 0x1d
 3022 09bb FD000000 		.4byte	.LASF88
 3023 09bf 01       		.byte	0x1
 3024 09c0 34       		.byte	0x34
 3025 09c1 81000000 		.4byte	0x81
 3026 09c5 05       		.uleb128 0x5
 3027 09c6 03       		.byte	0x3
 3028 09c7 00000000 		.4byte	CySysTickInitVar
 3029 09cb 1D       		.uleb128 0x1d
 3030 09cc 4F040000 		.4byte	.LASF89
 3031 09d0 01       		.byte	0x1
 3032 09d1 1B       		.byte	0x1b
 3033 09d2 81000000 		.4byte	0x81
 3034 09d6 05       		.uleb128 0x5
 3035 09d7 03       		.byte	0x3
 3036 09d8 00000000 		.4byte	cydelayFreqHz
 3037 09dc 1D       		.uleb128 0x1d
 3038 09dd 20020000 		.4byte	.LASF90
 3039 09e1 01       		.byte	0x1
 3040 09e2 1C       		.byte	0x1c
 3041 09e3 81000000 		.4byte	0x81
 3042 09e7 05       		.uleb128 0x5
 3043 09e8 03       		.byte	0x3
 3044 09e9 00000000 		.4byte	cydelayFreqKhz
 3045 09ed 1D       		.uleb128 0x1d
 3046 09ee BF050000 		.4byte	.LASF91
 3047 09f2 01       		.byte	0x1
 3048 09f3 1D       		.byte	0x1d
 3049 09f4 6B000000 		.4byte	0x6b
 3050 09f8 05       		.uleb128 0x5
 3051 09f9 03       		.byte	0x3
 3052 09fa 00000000 		.4byte	cydelayFreqMhz
 3053 09fe 1D       		.uleb128 0x1d
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 90


 3054 09ff 90020000 		.4byte	.LASF92
 3055 0a03 01       		.byte	0x1
 3056 0a04 1E       		.byte	0x1e
 3057 0a05 81000000 		.4byte	0x81
 3058 0a09 05       		.uleb128 0x5
 3059 0a0a 03       		.byte	0x3
 3060 0a0b 00000000 		.4byte	cydelay32kMs
 3061 0a0f 1A       		.uleb128 0x1a
 3062 0a10 6B000000 		.4byte	0x6b
 3063 0a14 1F0A0000 		.4byte	0xa1f
 3064 0a18 1B       		.uleb128 0x1b
 3065 0a19 D6000000 		.4byte	0xd6
 3066 0a1d 2D       		.byte	0x2d
 3067 0a1e 00       		.byte	0
 3068 0a1f 1D       		.uleb128 0x1d
 3069 0a20 2C040000 		.4byte	.LASF93
 3070 0a24 01       		.byte	0x1
 3071 0a25 39       		.byte	0x39
 3072 0a26 300A0000 		.4byte	0xa30
 3073 0a2a 05       		.uleb128 0x5
 3074 0a2b 03       		.byte	0x3
 3075 0a2c 00000000 		.4byte	cyImoFreqMhz2Reg
 3076 0a30 1E       		.uleb128 0x1e
 3077 0a31 0F0A0000 		.4byte	0xa0f
 3078 0a35 1F       		.uleb128 0x1f
 3079 0a36 2E030000 		.4byte	.LASF98
 3080 0a3a 03       		.byte	0x3
 3081 0a3b 5E       		.byte	0x5e
 3082 0a3c 6B000000 		.4byte	0x6b
 3083 0a40 20       		.uleb128 0x20
 3084 0a41 74040000 		.4byte	.LASF99
 3085 0a45 03       		.byte	0x3
 3086 0a46 5F       		.byte	0x5f
 3087 0a47 510A0000 		.4byte	0xa51
 3088 0a4b 21       		.uleb128 0x21
 3089 0a4c 6B000000 		.4byte	0x6b
 3090 0a50 00       		.byte	0
 3091 0a51 22       		.uleb128 0x22
 3092 0a52 B8040000 		.4byte	.LASF100
 3093 0a56 03       		.byte	0x3
 3094 0a57 5A       		.byte	0x5a
 3095 0a58 21       		.uleb128 0x21
 3096 0a59 81000000 		.4byte	0x81
 3097 0a5d 00       		.byte	0
 3098 0a5e 00       		.byte	0
 3099              		.section	.debug_abbrev,"",%progbits
 3100              	.Ldebug_abbrev0:
 3101 0000 01       		.uleb128 0x1
 3102 0001 11       		.uleb128 0x11
 3103 0002 01       		.byte	0x1
 3104 0003 25       		.uleb128 0x25
 3105 0004 0E       		.uleb128 0xe
 3106 0005 13       		.uleb128 0x13
 3107 0006 0B       		.uleb128 0xb
 3108 0007 03       		.uleb128 0x3
 3109 0008 0E       		.uleb128 0xe
 3110 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 91


 3111 000a 0E       		.uleb128 0xe
 3112 000b 55       		.uleb128 0x55
 3113 000c 17       		.uleb128 0x17
 3114 000d 11       		.uleb128 0x11
 3115 000e 01       		.uleb128 0x1
 3116 000f 10       		.uleb128 0x10
 3117 0010 17       		.uleb128 0x17
 3118 0011 00       		.byte	0
 3119 0012 00       		.byte	0
 3120 0013 02       		.uleb128 0x2
 3121 0014 24       		.uleb128 0x24
 3122 0015 00       		.byte	0
 3123 0016 0B       		.uleb128 0xb
 3124 0017 0B       		.uleb128 0xb
 3125 0018 3E       		.uleb128 0x3e
 3126 0019 0B       		.uleb128 0xb
 3127 001a 03       		.uleb128 0x3
 3128 001b 0E       		.uleb128 0xe
 3129 001c 00       		.byte	0
 3130 001d 00       		.byte	0
 3131 001e 03       		.uleb128 0x3
 3132 001f 24       		.uleb128 0x24
 3133 0020 00       		.byte	0
 3134 0021 0B       		.uleb128 0xb
 3135 0022 0B       		.uleb128 0xb
 3136 0023 3E       		.uleb128 0x3e
 3137 0024 0B       		.uleb128 0xb
 3138 0025 03       		.uleb128 0x3
 3139 0026 08       		.uleb128 0x8
 3140 0027 00       		.byte	0
 3141 0028 00       		.byte	0
 3142 0029 04       		.uleb128 0x4
 3143 002a 16       		.uleb128 0x16
 3144 002b 00       		.byte	0
 3145 002c 03       		.uleb128 0x3
 3146 002d 0E       		.uleb128 0xe
 3147 002e 3A       		.uleb128 0x3a
 3148 002f 0B       		.uleb128 0xb
 3149 0030 3B       		.uleb128 0x3b
 3150 0031 0B       		.uleb128 0xb
 3151 0032 49       		.uleb128 0x49
 3152 0033 13       		.uleb128 0x13
 3153 0034 00       		.byte	0
 3154 0035 00       		.byte	0
 3155 0036 05       		.uleb128 0x5
 3156 0037 16       		.uleb128 0x16
 3157 0038 00       		.byte	0
 3158 0039 03       		.uleb128 0x3
 3159 003a 0E       		.uleb128 0xe
 3160 003b 3A       		.uleb128 0x3a
 3161 003c 0B       		.uleb128 0xb
 3162 003d 3B       		.uleb128 0x3b
 3163 003e 05       		.uleb128 0x5
 3164 003f 49       		.uleb128 0x49
 3165 0040 13       		.uleb128 0x13
 3166 0041 00       		.byte	0
 3167 0042 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 92


 3168 0043 06       		.uleb128 0x6
 3169 0044 35       		.uleb128 0x35
 3170 0045 00       		.byte	0
 3171 0046 49       		.uleb128 0x49
 3172 0047 13       		.uleb128 0x13
 3173 0048 00       		.byte	0
 3174 0049 00       		.byte	0
 3175 004a 07       		.uleb128 0x7
 3176 004b 0F       		.uleb128 0xf
 3177 004c 00       		.byte	0
 3178 004d 0B       		.uleb128 0xb
 3179 004e 0B       		.uleb128 0xb
 3180 004f 49       		.uleb128 0x49
 3181 0050 13       		.uleb128 0x13
 3182 0051 00       		.byte	0
 3183 0052 00       		.byte	0
 3184 0053 08       		.uleb128 0x8
 3185 0054 15       		.uleb128 0x15
 3186 0055 00       		.byte	0
 3187 0056 27       		.uleb128 0x27
 3188 0057 19       		.uleb128 0x19
 3189 0058 00       		.byte	0
 3190 0059 00       		.byte	0
 3191 005a 09       		.uleb128 0x9
 3192 005b 2E       		.uleb128 0x2e
 3193 005c 00       		.byte	0
 3194 005d 3F       		.uleb128 0x3f
 3195 005e 19       		.uleb128 0x19
 3196 005f 03       		.uleb128 0x3
 3197 0060 0E       		.uleb128 0xe
 3198 0061 3A       		.uleb128 0x3a
 3199 0062 0B       		.uleb128 0xb
 3200 0063 3B       		.uleb128 0x3b
 3201 0064 0B       		.uleb128 0xb
 3202 0065 27       		.uleb128 0x27
 3203 0066 19       		.uleb128 0x19
 3204 0067 11       		.uleb128 0x11
 3205 0068 01       		.uleb128 0x1
 3206 0069 12       		.uleb128 0x12
 3207 006a 06       		.uleb128 0x6
 3208 006b 40       		.uleb128 0x40
 3209 006c 18       		.uleb128 0x18
 3210 006d 9742     		.uleb128 0x2117
 3211 006f 19       		.uleb128 0x19
 3212 0070 00       		.byte	0
 3213 0071 00       		.byte	0
 3214 0072 0A       		.uleb128 0xa
 3215 0073 2E       		.uleb128 0x2e
 3216 0074 01       		.byte	0x1
 3217 0075 3F       		.uleb128 0x3f
 3218 0076 19       		.uleb128 0x19
 3219 0077 03       		.uleb128 0x3
 3220 0078 0E       		.uleb128 0xe
 3221 0079 3A       		.uleb128 0x3a
 3222 007a 0B       		.uleb128 0xb
 3223 007b 3B       		.uleb128 0x3b
 3224 007c 05       		.uleb128 0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 93


 3225 007d 27       		.uleb128 0x27
 3226 007e 19       		.uleb128 0x19
 3227 007f 11       		.uleb128 0x11
 3228 0080 01       		.uleb128 0x1
 3229 0081 12       		.uleb128 0x12
 3230 0082 06       		.uleb128 0x6
 3231 0083 40       		.uleb128 0x40
 3232 0084 18       		.uleb128 0x18
 3233 0085 9742     		.uleb128 0x2117
 3234 0087 19       		.uleb128 0x19
 3235 0088 01       		.uleb128 0x1
 3236 0089 13       		.uleb128 0x13
 3237 008a 00       		.byte	0
 3238 008b 00       		.byte	0
 3239 008c 0B       		.uleb128 0xb
 3240 008d 05       		.uleb128 0x5
 3241 008e 00       		.byte	0
 3242 008f 03       		.uleb128 0x3
 3243 0090 0E       		.uleb128 0xe
 3244 0091 3A       		.uleb128 0x3a
 3245 0092 0B       		.uleb128 0xb
 3246 0093 3B       		.uleb128 0x3b
 3247 0094 05       		.uleb128 0x5
 3248 0095 49       		.uleb128 0x49
 3249 0096 13       		.uleb128 0x13
 3250 0097 02       		.uleb128 0x2
 3251 0098 17       		.uleb128 0x17
 3252 0099 00       		.byte	0
 3253 009a 00       		.byte	0
 3254 009b 0C       		.uleb128 0xc
 3255 009c 34       		.uleb128 0x34
 3256 009d 00       		.byte	0
 3257 009e 03       		.uleb128 0x3
 3258 009f 0E       		.uleb128 0xe
 3259 00a0 3A       		.uleb128 0x3a
 3260 00a1 0B       		.uleb128 0xb
 3261 00a2 3B       		.uleb128 0x3b
 3262 00a3 05       		.uleb128 0x5
 3263 00a4 49       		.uleb128 0x49
 3264 00a5 13       		.uleb128 0x13
 3265 00a6 02       		.uleb128 0x2
 3266 00a7 17       		.uleb128 0x17
 3267 00a8 00       		.byte	0
 3268 00a9 00       		.byte	0
 3269 00aa 0D       		.uleb128 0xd
 3270 00ab 898201   		.uleb128 0x4109
 3271 00ae 00       		.byte	0
 3272 00af 11       		.uleb128 0x11
 3273 00b0 01       		.uleb128 0x1
 3274 00b1 31       		.uleb128 0x31
 3275 00b2 13       		.uleb128 0x13
 3276 00b3 00       		.byte	0
 3277 00b4 00       		.byte	0
 3278 00b5 0E       		.uleb128 0xe
 3279 00b6 2E       		.uleb128 0x2e
 3280 00b7 00       		.byte	0
 3281 00b8 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 94


 3282 00b9 19       		.uleb128 0x19
 3283 00ba 03       		.uleb128 0x3
 3284 00bb 0E       		.uleb128 0xe
 3285 00bc 3A       		.uleb128 0x3a
 3286 00bd 0B       		.uleb128 0xb
 3287 00be 3B       		.uleb128 0x3b
 3288 00bf 05       		.uleb128 0x5
 3289 00c0 27       		.uleb128 0x27
 3290 00c1 19       		.uleb128 0x19
 3291 00c2 11       		.uleb128 0x11
 3292 00c3 01       		.uleb128 0x1
 3293 00c4 12       		.uleb128 0x12
 3294 00c5 06       		.uleb128 0x6
 3295 00c6 40       		.uleb128 0x40
 3296 00c7 18       		.uleb128 0x18
 3297 00c8 9742     		.uleb128 0x2117
 3298 00ca 19       		.uleb128 0x19
 3299 00cb 00       		.byte	0
 3300 00cc 00       		.byte	0
 3301 00cd 0F       		.uleb128 0xf
 3302 00ce 2E       		.uleb128 0x2e
 3303 00cf 00       		.byte	0
 3304 00d0 3F       		.uleb128 0x3f
 3305 00d1 19       		.uleb128 0x19
 3306 00d2 03       		.uleb128 0x3
 3307 00d3 0E       		.uleb128 0xe
 3308 00d4 3A       		.uleb128 0x3a
 3309 00d5 0B       		.uleb128 0xb
 3310 00d6 3B       		.uleb128 0x3b
 3311 00d7 05       		.uleb128 0x5
 3312 00d8 27       		.uleb128 0x27
 3313 00d9 19       		.uleb128 0x19
 3314 00da 49       		.uleb128 0x49
 3315 00db 13       		.uleb128 0x13
 3316 00dc 11       		.uleb128 0x11
 3317 00dd 01       		.uleb128 0x1
 3318 00de 12       		.uleb128 0x12
 3319 00df 06       		.uleb128 0x6
 3320 00e0 40       		.uleb128 0x40
 3321 00e1 18       		.uleb128 0x18
 3322 00e2 9742     		.uleb128 0x2117
 3323 00e4 19       		.uleb128 0x19
 3324 00e5 00       		.byte	0
 3325 00e6 00       		.byte	0
 3326 00e7 10       		.uleb128 0x10
 3327 00e8 2E       		.uleb128 0x2e
 3328 00e9 01       		.byte	0x1
 3329 00ea 3F       		.uleb128 0x3f
 3330 00eb 19       		.uleb128 0x19
 3331 00ec 03       		.uleb128 0x3
 3332 00ed 0E       		.uleb128 0xe
 3333 00ee 3A       		.uleb128 0x3a
 3334 00ef 0B       		.uleb128 0xb
 3335 00f0 3B       		.uleb128 0x3b
 3336 00f1 05       		.uleb128 0x5
 3337 00f2 27       		.uleb128 0x27
 3338 00f3 19       		.uleb128 0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 95


 3339 00f4 49       		.uleb128 0x49
 3340 00f5 13       		.uleb128 0x13
 3341 00f6 11       		.uleb128 0x11
 3342 00f7 01       		.uleb128 0x1
 3343 00f8 12       		.uleb128 0x12
 3344 00f9 06       		.uleb128 0x6
 3345 00fa 40       		.uleb128 0x40
 3346 00fb 18       		.uleb128 0x18
 3347 00fc 9742     		.uleb128 0x2117
 3348 00fe 19       		.uleb128 0x19
 3349 00ff 01       		.uleb128 0x1
 3350 0100 13       		.uleb128 0x13
 3351 0101 00       		.byte	0
 3352 0102 00       		.byte	0
 3353 0103 11       		.uleb128 0x11
 3354 0104 34       		.uleb128 0x34
 3355 0105 00       		.byte	0
 3356 0106 03       		.uleb128 0x3
 3357 0107 0E       		.uleb128 0xe
 3358 0108 3A       		.uleb128 0x3a
 3359 0109 0B       		.uleb128 0xb
 3360 010a 3B       		.uleb128 0x3b
 3361 010b 05       		.uleb128 0x5
 3362 010c 49       		.uleb128 0x49
 3363 010d 13       		.uleb128 0x13
 3364 010e 02       		.uleb128 0x2
 3365 010f 18       		.uleb128 0x18
 3366 0110 00       		.byte	0
 3367 0111 00       		.byte	0
 3368 0112 12       		.uleb128 0x12
 3369 0113 05       		.uleb128 0x5
 3370 0114 00       		.byte	0
 3371 0115 03       		.uleb128 0x3
 3372 0116 0E       		.uleb128 0xe
 3373 0117 3A       		.uleb128 0x3a
 3374 0118 0B       		.uleb128 0xb
 3375 0119 3B       		.uleb128 0x3b
 3376 011a 05       		.uleb128 0x5
 3377 011b 49       		.uleb128 0x49
 3378 011c 13       		.uleb128 0x13
 3379 011d 02       		.uleb128 0x2
 3380 011e 18       		.uleb128 0x18
 3381 011f 00       		.byte	0
 3382 0120 00       		.byte	0
 3383 0121 13       		.uleb128 0x13
 3384 0122 34       		.uleb128 0x34
 3385 0123 00       		.byte	0
 3386 0124 03       		.uleb128 0x3
 3387 0125 0E       		.uleb128 0xe
 3388 0126 3A       		.uleb128 0x3a
 3389 0127 0B       		.uleb128 0xb
 3390 0128 3B       		.uleb128 0x3b
 3391 0129 05       		.uleb128 0x5
 3392 012a 49       		.uleb128 0x49
 3393 012b 13       		.uleb128 0x13
 3394 012c 1C       		.uleb128 0x1c
 3395 012d 06       		.uleb128 0x6
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 96


 3396 012e 00       		.byte	0
 3397 012f 00       		.byte	0
 3398 0130 14       		.uleb128 0x14
 3399 0131 898201   		.uleb128 0x4109
 3400 0134 01       		.byte	0x1
 3401 0135 11       		.uleb128 0x11
 3402 0136 01       		.uleb128 0x1
 3403 0137 31       		.uleb128 0x31
 3404 0138 13       		.uleb128 0x13
 3405 0139 00       		.byte	0
 3406 013a 00       		.byte	0
 3407 013b 15       		.uleb128 0x15
 3408 013c 8A8201   		.uleb128 0x410a
 3409 013f 00       		.byte	0
 3410 0140 02       		.uleb128 0x2
 3411 0141 18       		.uleb128 0x18
 3412 0142 9142     		.uleb128 0x2111
 3413 0144 18       		.uleb128 0x18
 3414 0145 00       		.byte	0
 3415 0146 00       		.byte	0
 3416 0147 16       		.uleb128 0x16
 3417 0148 898201   		.uleb128 0x4109
 3418 014b 01       		.byte	0x1
 3419 014c 11       		.uleb128 0x11
 3420 014d 01       		.uleb128 0x1
 3421 014e 31       		.uleb128 0x31
 3422 014f 13       		.uleb128 0x13
 3423 0150 01       		.uleb128 0x1
 3424 0151 13       		.uleb128 0x13
 3425 0152 00       		.byte	0
 3426 0153 00       		.byte	0
 3427 0154 17       		.uleb128 0x17
 3428 0155 2E       		.uleb128 0x2e
 3429 0156 01       		.byte	0x1
 3430 0157 3F       		.uleb128 0x3f
 3431 0158 19       		.uleb128 0x19
 3432 0159 03       		.uleb128 0x3
 3433 015a 0E       		.uleb128 0xe
 3434 015b 3A       		.uleb128 0x3a
 3435 015c 0B       		.uleb128 0xb
 3436 015d 3B       		.uleb128 0x3b
 3437 015e 05       		.uleb128 0x5
 3438 015f 27       		.uleb128 0x27
 3439 0160 19       		.uleb128 0x19
 3440 0161 11       		.uleb128 0x11
 3441 0162 01       		.uleb128 0x1
 3442 0163 12       		.uleb128 0x12
 3443 0164 06       		.uleb128 0x6
 3444 0165 40       		.uleb128 0x40
 3445 0166 18       		.uleb128 0x18
 3446 0167 9642     		.uleb128 0x2116
 3447 0169 19       		.uleb128 0x19
 3448 016a 01       		.uleb128 0x1
 3449 016b 13       		.uleb128 0x13
 3450 016c 00       		.byte	0
 3451 016d 00       		.byte	0
 3452 016e 18       		.uleb128 0x18
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 97


 3453 016f 2E       		.uleb128 0x2e
 3454 0170 01       		.byte	0x1
 3455 0171 03       		.uleb128 0x3
 3456 0172 0E       		.uleb128 0xe
 3457 0173 3A       		.uleb128 0x3a
 3458 0174 0B       		.uleb128 0xb
 3459 0175 3B       		.uleb128 0x3b
 3460 0176 05       		.uleb128 0x5
 3461 0177 27       		.uleb128 0x27
 3462 0178 19       		.uleb128 0x19
 3463 0179 11       		.uleb128 0x11
 3464 017a 01       		.uleb128 0x1
 3465 017b 12       		.uleb128 0x12
 3466 017c 06       		.uleb128 0x6
 3467 017d 40       		.uleb128 0x40
 3468 017e 18       		.uleb128 0x18
 3469 017f 9642     		.uleb128 0x2116
 3470 0181 19       		.uleb128 0x19
 3471 0182 01       		.uleb128 0x1
 3472 0183 13       		.uleb128 0x13
 3473 0184 00       		.byte	0
 3474 0185 00       		.byte	0
 3475 0186 19       		.uleb128 0x19
 3476 0187 34       		.uleb128 0x34
 3477 0188 00       		.byte	0
 3478 0189 03       		.uleb128 0x3
 3479 018a 08       		.uleb128 0x8
 3480 018b 3A       		.uleb128 0x3a
 3481 018c 0B       		.uleb128 0xb
 3482 018d 3B       		.uleb128 0x3b
 3483 018e 05       		.uleb128 0x5
 3484 018f 49       		.uleb128 0x49
 3485 0190 13       		.uleb128 0x13
 3486 0191 02       		.uleb128 0x2
 3487 0192 17       		.uleb128 0x17
 3488 0193 00       		.byte	0
 3489 0194 00       		.byte	0
 3490 0195 1A       		.uleb128 0x1a
 3491 0196 01       		.uleb128 0x1
 3492 0197 01       		.byte	0x1
 3493 0198 49       		.uleb128 0x49
 3494 0199 13       		.uleb128 0x13
 3495 019a 01       		.uleb128 0x1
 3496 019b 13       		.uleb128 0x13
 3497 019c 00       		.byte	0
 3498 019d 00       		.byte	0
 3499 019e 1B       		.uleb128 0x1b
 3500 019f 21       		.uleb128 0x21
 3501 01a0 00       		.byte	0
 3502 01a1 49       		.uleb128 0x49
 3503 01a2 13       		.uleb128 0x13
 3504 01a3 2F       		.uleb128 0x2f
 3505 01a4 0B       		.uleb128 0xb
 3506 01a5 00       		.byte	0
 3507 01a6 00       		.byte	0
 3508 01a7 1C       		.uleb128 0x1c
 3509 01a8 34       		.uleb128 0x34
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 98


 3510 01a9 00       		.byte	0
 3511 01aa 03       		.uleb128 0x3
 3512 01ab 0E       		.uleb128 0xe
 3513 01ac 3A       		.uleb128 0x3a
 3514 01ad 0B       		.uleb128 0xb
 3515 01ae 3B       		.uleb128 0x3b
 3516 01af 0B       		.uleb128 0xb
 3517 01b0 49       		.uleb128 0x49
 3518 01b1 13       		.uleb128 0x13
 3519 01b2 02       		.uleb128 0x2
 3520 01b3 18       		.uleb128 0x18
 3521 01b4 00       		.byte	0
 3522 01b5 00       		.byte	0
 3523 01b6 1D       		.uleb128 0x1d
 3524 01b7 34       		.uleb128 0x34
 3525 01b8 00       		.byte	0
 3526 01b9 03       		.uleb128 0x3
 3527 01ba 0E       		.uleb128 0xe
 3528 01bb 3A       		.uleb128 0x3a
 3529 01bc 0B       		.uleb128 0xb
 3530 01bd 3B       		.uleb128 0x3b
 3531 01be 0B       		.uleb128 0xb
 3532 01bf 49       		.uleb128 0x49
 3533 01c0 13       		.uleb128 0x13
 3534 01c1 3F       		.uleb128 0x3f
 3535 01c2 19       		.uleb128 0x19
 3536 01c3 02       		.uleb128 0x2
 3537 01c4 18       		.uleb128 0x18
 3538 01c5 00       		.byte	0
 3539 01c6 00       		.byte	0
 3540 01c7 1E       		.uleb128 0x1e
 3541 01c8 26       		.uleb128 0x26
 3542 01c9 00       		.byte	0
 3543 01ca 49       		.uleb128 0x49
 3544 01cb 13       		.uleb128 0x13
 3545 01cc 00       		.byte	0
 3546 01cd 00       		.byte	0
 3547 01ce 1F       		.uleb128 0x1f
 3548 01cf 2E       		.uleb128 0x2e
 3549 01d0 00       		.byte	0
 3550 01d1 3F       		.uleb128 0x3f
 3551 01d2 19       		.uleb128 0x19
 3552 01d3 03       		.uleb128 0x3
 3553 01d4 0E       		.uleb128 0xe
 3554 01d5 3A       		.uleb128 0x3a
 3555 01d6 0B       		.uleb128 0xb
 3556 01d7 3B       		.uleb128 0x3b
 3557 01d8 0B       		.uleb128 0xb
 3558 01d9 27       		.uleb128 0x27
 3559 01da 19       		.uleb128 0x19
 3560 01db 49       		.uleb128 0x49
 3561 01dc 13       		.uleb128 0x13
 3562 01dd 3C       		.uleb128 0x3c
 3563 01de 19       		.uleb128 0x19
 3564 01df 00       		.byte	0
 3565 01e0 00       		.byte	0
 3566 01e1 20       		.uleb128 0x20
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 99


 3567 01e2 2E       		.uleb128 0x2e
 3568 01e3 01       		.byte	0x1
 3569 01e4 3F       		.uleb128 0x3f
 3570 01e5 19       		.uleb128 0x19
 3571 01e6 03       		.uleb128 0x3
 3572 01e7 0E       		.uleb128 0xe
 3573 01e8 3A       		.uleb128 0x3a
 3574 01e9 0B       		.uleb128 0xb
 3575 01ea 3B       		.uleb128 0x3b
 3576 01eb 0B       		.uleb128 0xb
 3577 01ec 27       		.uleb128 0x27
 3578 01ed 19       		.uleb128 0x19
 3579 01ee 3C       		.uleb128 0x3c
 3580 01ef 19       		.uleb128 0x19
 3581 01f0 01       		.uleb128 0x1
 3582 01f1 13       		.uleb128 0x13
 3583 01f2 00       		.byte	0
 3584 01f3 00       		.byte	0
 3585 01f4 21       		.uleb128 0x21
 3586 01f5 05       		.uleb128 0x5
 3587 01f6 00       		.byte	0
 3588 01f7 49       		.uleb128 0x49
 3589 01f8 13       		.uleb128 0x13
 3590 01f9 00       		.byte	0
 3591 01fa 00       		.byte	0
 3592 01fb 22       		.uleb128 0x22
 3593 01fc 2E       		.uleb128 0x2e
 3594 01fd 01       		.byte	0x1
 3595 01fe 3F       		.uleb128 0x3f
 3596 01ff 19       		.uleb128 0x19
 3597 0200 03       		.uleb128 0x3
 3598 0201 0E       		.uleb128 0xe
 3599 0202 3A       		.uleb128 0x3a
 3600 0203 0B       		.uleb128 0xb
 3601 0204 3B       		.uleb128 0x3b
 3602 0205 0B       		.uleb128 0xb
 3603 0206 27       		.uleb128 0x27
 3604 0207 19       		.uleb128 0x19
 3605 0208 3C       		.uleb128 0x3c
 3606 0209 19       		.uleb128 0x19
 3607 020a 00       		.byte	0
 3608 020b 00       		.byte	0
 3609 020c 00       		.byte	0
 3610              		.section	.debug_loc,"",%progbits
 3611              	.Ldebug_loc0:
 3612              	.LLST0:
 3613 0000 00000000 		.4byte	.LVL0
 3614 0004 07000000 		.4byte	.LVL1-1
 3615 0008 0100     		.2byte	0x1
 3616 000a 50       		.byte	0x50
 3617 000b 07000000 		.4byte	.LVL1-1
 3618 000f 14000000 		.4byte	.LVL2
 3619 0013 0100     		.2byte	0x1
 3620 0015 54       		.byte	0x54
 3621 0016 14000000 		.4byte	.LVL2
 3622 001a 24000000 		.4byte	.LFE2
 3623 001e 0400     		.2byte	0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 100


 3624 0020 F3       		.byte	0xf3
 3625 0021 01       		.uleb128 0x1
 3626 0022 50       		.byte	0x50
 3627 0023 9F       		.byte	0x9f
 3628 0024 00000000 		.4byte	0
 3629 0028 00000000 		.4byte	0
 3630              	.LLST1:
 3631 002c 08000000 		.4byte	.LVL1
 3632 0030 1B000000 		.4byte	.LVL3-1
 3633 0034 0100     		.2byte	0x1
 3634 0036 50       		.byte	0x50
 3635 0037 00000000 		.4byte	0
 3636 003b 00000000 		.4byte	0
 3637              	.LLST2:
 3638 003f 00000000 		.4byte	.LVL4
 3639 0043 07000000 		.4byte	.LVL5-1
 3640 0047 0100     		.2byte	0x1
 3641 0049 50       		.byte	0x50
 3642 004a 07000000 		.4byte	.LVL5-1
 3643 004e 0C000000 		.4byte	.LVL6
 3644 0052 0100     		.2byte	0x1
 3645 0054 54       		.byte	0x54
 3646 0055 0C000000 		.4byte	.LVL6
 3647 0059 28000000 		.4byte	.LFE3
 3648 005d 0400     		.2byte	0x4
 3649 005f F3       		.byte	0xf3
 3650 0060 01       		.uleb128 0x1
 3651 0061 50       		.byte	0x50
 3652 0062 9F       		.byte	0x9f
 3653 0063 00000000 		.4byte	0
 3654 0067 00000000 		.4byte	0
 3655              	.LLST3:
 3656 006b 08000000 		.4byte	.LVL5
 3657 006f 1D000000 		.4byte	.LVL7-1
 3658 0073 0100     		.2byte	0x1
 3659 0075 50       		.byte	0x50
 3660 0076 00000000 		.4byte	0
 3661 007a 00000000 		.4byte	0
 3662              	.LLST4:
 3663 007e 00000000 		.4byte	.LVL8
 3664 0082 06000000 		.4byte	.LVL9
 3665 0086 0100     		.2byte	0x1
 3666 0088 50       		.byte	0x50
 3667 0089 06000000 		.4byte	.LVL9
 3668 008d 14000000 		.4byte	.LFE9
 3669 0091 0100     		.2byte	0x1
 3670 0093 51       		.byte	0x51
 3671 0094 00000000 		.4byte	0
 3672 0098 00000000 		.4byte	0
 3673              	.LLST5:
 3674 009c 00000000 		.4byte	.LVL13
 3675 00a0 04000000 		.4byte	.LVL14
 3676 00a4 0100     		.2byte	0x1
 3677 00a6 50       		.byte	0x50
 3678 00a7 04000000 		.4byte	.LVL14
 3679 00ab 14000000 		.4byte	.LFE18
 3680 00af 0400     		.2byte	0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 101


 3681 00b1 F3       		.byte	0xf3
 3682 00b2 01       		.uleb128 0x1
 3683 00b3 50       		.byte	0x50
 3684 00b4 9F       		.byte	0x9f
 3685 00b5 00000000 		.4byte	0
 3686 00b9 00000000 		.4byte	0
 3687              	.LLST6:
 3688 00bd 00000000 		.4byte	.LVL15
 3689 00c1 08000000 		.4byte	.LVL16
 3690 00c5 0100     		.2byte	0x1
 3691 00c7 50       		.byte	0x50
 3692 00c8 08000000 		.4byte	.LVL16
 3693 00cc 18000000 		.4byte	.LFE19
 3694 00d0 0400     		.2byte	0x4
 3695 00d2 F3       		.byte	0xf3
 3696 00d3 01       		.uleb128 0x1
 3697 00d4 50       		.byte	0x50
 3698 00d5 9F       		.byte	0x9f
 3699 00d6 00000000 		.4byte	0
 3700 00da 00000000 		.4byte	0
 3701              	.LLST7:
 3702 00de 00000000 		.4byte	.LVL17
 3703 00e2 04000000 		.4byte	.LVL18
 3704 00e6 0100     		.2byte	0x1
 3705 00e8 50       		.byte	0x50
 3706 00e9 04000000 		.4byte	.LVL18
 3707 00ed 14000000 		.4byte	.LFE20
 3708 00f1 0400     		.2byte	0x4
 3709 00f3 F3       		.byte	0xf3
 3710 00f4 01       		.uleb128 0x1
 3711 00f5 50       		.byte	0x50
 3712 00f6 9F       		.byte	0x9f
 3713 00f7 00000000 		.4byte	0
 3714 00fb 00000000 		.4byte	0
 3715              	.LLST8:
 3716 00ff 00000000 		.4byte	.LVL19
 3717 0103 04000000 		.4byte	.LVL20
 3718 0107 0100     		.2byte	0x1
 3719 0109 50       		.byte	0x50
 3720 010a 04000000 		.4byte	.LVL20
 3721 010e 14000000 		.4byte	.LFE21
 3722 0112 0400     		.2byte	0x4
 3723 0114 F3       		.byte	0xf3
 3724 0115 01       		.uleb128 0x1
 3725 0116 50       		.byte	0x50
 3726 0117 9F       		.byte	0x9f
 3727 0118 00000000 		.4byte	0
 3728 011c 00000000 		.4byte	0
 3729              	.LLST9:
 3730 0120 00000000 		.4byte	.LVL21
 3731 0124 04000000 		.4byte	.LVL22
 3732 0128 0100     		.2byte	0x1
 3733 012a 50       		.byte	0x50
 3734 012b 04000000 		.4byte	.LVL22
 3735 012f 14000000 		.4byte	.LFE22
 3736 0133 0400     		.2byte	0x4
 3737 0135 F3       		.byte	0xf3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 102


 3738 0136 01       		.uleb128 0x1
 3739 0137 50       		.byte	0x50
 3740 0138 9F       		.byte	0x9f
 3741 0139 00000000 		.4byte	0
 3742 013d 00000000 		.4byte	0
 3743              	.LLST10:
 3744 0141 00000000 		.4byte	.LVL24
 3745 0145 0C000000 		.4byte	.LVL26
 3746 0149 0100     		.2byte	0x1
 3747 014b 50       		.byte	0x50
 3748 014c 0C000000 		.4byte	.LVL26
 3749 0150 1E000000 		.4byte	.LFE12
 3750 0154 0400     		.2byte	0x4
 3751 0156 F3       		.byte	0xf3
 3752 0157 01       		.uleb128 0x1
 3753 0158 50       		.byte	0x50
 3754 0159 9F       		.byte	0x9f
 3755 015a 00000000 		.4byte	0
 3756 015e 00000000 		.4byte	0
 3757              	.LLST11:
 3758 0162 00000000 		.4byte	.LVL24
 3759 0166 0F000000 		.4byte	.LVL27-1
 3760 016a 0100     		.2byte	0x1
 3761 016c 51       		.byte	0x51
 3762 016d 0F000000 		.4byte	.LVL27-1
 3763 0171 1C000000 		.4byte	.LVL29
 3764 0175 0100     		.2byte	0x1
 3765 0177 55       		.byte	0x55
 3766 0178 1C000000 		.4byte	.LVL29
 3767 017c 1E000000 		.4byte	.LFE12
 3768 0180 0400     		.2byte	0x4
 3769 0182 F3       		.byte	0xf3
 3770 0183 01       		.uleb128 0x1
 3771 0184 51       		.byte	0x51
 3772 0185 9F       		.byte	0x9f
 3773 0186 00000000 		.4byte	0
 3774 018a 00000000 		.4byte	0
 3775              	.LLST12:
 3776 018e 00000000 		.4byte	.LVL30
 3777 0192 0A000000 		.4byte	.LVL32
 3778 0196 0100     		.2byte	0x1
 3779 0198 50       		.byte	0x50
 3780 0199 0A000000 		.4byte	.LVL32
 3781 019d 1A000000 		.4byte	.LFE13
 3782 01a1 0400     		.2byte	0x4
 3783 01a3 F3       		.byte	0xf3
 3784 01a4 01       		.uleb128 0x1
 3785 01a5 50       		.byte	0x50
 3786 01a6 9F       		.byte	0x9f
 3787 01a7 00000000 		.4byte	0
 3788 01ab 00000000 		.4byte	0
 3789              	.LLST13:
 3790 01af 00000000 		.4byte	.LVL34
 3791 01b3 0C000000 		.4byte	.LVL36
 3792 01b7 0100     		.2byte	0x1
 3793 01b9 50       		.byte	0x50
 3794 01ba 0C000000 		.4byte	.LVL36
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 103


 3795 01be 20000000 		.4byte	.LFE14
 3796 01c2 0400     		.2byte	0x4
 3797 01c4 F3       		.byte	0xf3
 3798 01c5 01       		.uleb128 0x1
 3799 01c6 50       		.byte	0x50
 3800 01c7 9F       		.byte	0x9f
 3801 01c8 00000000 		.4byte	0
 3802 01cc 00000000 		.4byte	0
 3803              	.LLST14:
 3804 01d0 00000000 		.4byte	.LVL34
 3805 01d4 0F000000 		.4byte	.LVL37-1
 3806 01d8 0100     		.2byte	0x1
 3807 01da 51       		.byte	0x51
 3808 01db 0F000000 		.4byte	.LVL37-1
 3809 01df 1A000000 		.4byte	.LVL39
 3810 01e3 0100     		.2byte	0x1
 3811 01e5 55       		.byte	0x55
 3812 01e6 1A000000 		.4byte	.LVL39
 3813 01ea 20000000 		.4byte	.LFE14
 3814 01ee 0400     		.2byte	0x4
 3815 01f0 F3       		.byte	0xf3
 3816 01f1 01       		.uleb128 0x1
 3817 01f2 51       		.byte	0x51
 3818 01f3 9F       		.byte	0x9f
 3819 01f4 00000000 		.4byte	0
 3820 01f8 00000000 		.4byte	0
 3821              	.LLST15:
 3822 01fc 00000000 		.4byte	.LVL40
 3823 0200 0A000000 		.4byte	.LVL42
 3824 0204 0100     		.2byte	0x1
 3825 0206 50       		.byte	0x50
 3826 0207 0A000000 		.4byte	.LVL42
 3827 020b 1C000000 		.4byte	.LFE15
 3828 020f 0400     		.2byte	0x4
 3829 0211 F3       		.byte	0xf3
 3830 0212 01       		.uleb128 0x1
 3831 0213 50       		.byte	0x50
 3832 0214 9F       		.byte	0x9f
 3833 0215 00000000 		.4byte	0
 3834 0219 00000000 		.4byte	0
 3835              	.LLST16:
 3836 021d 00000000 		.4byte	.LVL44
 3837 0221 0C000000 		.4byte	.LVL45
 3838 0225 0100     		.2byte	0x1
 3839 0227 50       		.byte	0x50
 3840 0228 0C000000 		.4byte	.LVL45
 3841 022c 48000000 		.4byte	.LFE16
 3842 0230 0400     		.2byte	0x4
 3843 0232 F3       		.byte	0xf3
 3844 0233 01       		.uleb128 0x1
 3845 0234 50       		.byte	0x50
 3846 0235 9F       		.byte	0x9f
 3847 0236 00000000 		.4byte	0
 3848 023a 00000000 		.4byte	0
 3849              	.LLST17:
 3850 023e 00000000 		.4byte	.LVL44
 3851 0242 0F000000 		.4byte	.LVL46-1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 104


 3852 0246 0100     		.2byte	0x1
 3853 0248 51       		.byte	0x51
 3854 0249 0F000000 		.4byte	.LVL46-1
 3855 024d 48000000 		.4byte	.LFE16
 3856 0251 0400     		.2byte	0x4
 3857 0253 F3       		.byte	0xf3
 3858 0254 01       		.uleb128 0x1
 3859 0255 51       		.byte	0x51
 3860 0256 9F       		.byte	0x9f
 3861 0257 00000000 		.4byte	0
 3862 025b 00000000 		.4byte	0
 3863              	.LLST18:
 3864 025f 26000000 		.4byte	.LVL49
 3865 0263 41000000 		.4byte	.LVL54-1
 3866 0267 0100     		.2byte	0x1
 3867 0269 50       		.byte	0x50
 3868 026a 00000000 		.4byte	0
 3869 026e 00000000 		.4byte	0
 3870              	.LLST19:
 3871 0272 22000000 		.4byte	.LVL48
 3872 0276 3A000000 		.4byte	.LVL52
 3873 027a 0100     		.2byte	0x1
 3874 027c 55       		.byte	0x55
 3875 027d 00000000 		.4byte	0
 3876 0281 00000000 		.4byte	0
 3877              	.LLST20:
 3878 0285 30000000 		.4byte	.LVL50
 3879 0289 3C000000 		.4byte	.LVL53
 3880 028d 0100     		.2byte	0x1
 3881 028f 53       		.byte	0x53
 3882 0290 3C000000 		.4byte	.LVL53
 3883 0294 42000000 		.4byte	.LVL55
 3884 0298 0100     		.2byte	0x1
 3885 029a 55       		.byte	0x55
 3886 029b 00000000 		.4byte	0
 3887 029f 00000000 		.4byte	0
 3888              	.LLST21:
 3889 02a3 00000000 		.4byte	.LVL56
 3890 02a7 0A000000 		.4byte	.LVL57
 3891 02ab 0100     		.2byte	0x1
 3892 02ad 50       		.byte	0x50
 3893 02ae 0A000000 		.4byte	.LVL57
 3894 02b2 2C000000 		.4byte	.LFE17
 3895 02b6 0400     		.2byte	0x4
 3896 02b8 F3       		.byte	0xf3
 3897 02b9 01       		.uleb128 0x1
 3898 02ba 50       		.byte	0x50
 3899 02bb 9F       		.byte	0x9f
 3900 02bc 00000000 		.4byte	0
 3901 02c0 00000000 		.4byte	0
 3902              	.LLST22:
 3903 02c4 22000000 		.4byte	.LVL59
 3904 02c8 24000000 		.4byte	.LVL60
 3905 02cc 0100     		.2byte	0x1
 3906 02ce 50       		.byte	0x50
 3907 02cf 00000000 		.4byte	0
 3908 02d3 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 105


 3909              	.LLST23:
 3910 02d7 00000000 		.4byte	.LVL61
 3911 02db 0C000000 		.4byte	.LVL62
 3912 02df 0100     		.2byte	0x1
 3913 02e1 50       		.byte	0x50
 3914 02e2 0C000000 		.4byte	.LVL62
 3915 02e6 24000000 		.4byte	.LVL66
 3916 02ea 0100     		.2byte	0x1
 3917 02ec 54       		.byte	0x54
 3918 02ed 00000000 		.4byte	0
 3919 02f1 00000000 		.4byte	0
 3920              	.LLST24:
 3921 02f5 00000000 		.4byte	.LVL67
 3922 02f9 08000000 		.4byte	.LVL68
 3923 02fd 0100     		.2byte	0x1
 3924 02ff 50       		.byte	0x50
 3925 0300 08000000 		.4byte	.LVL68
 3926 0304 14000000 		.4byte	.LFE26
 3927 0308 0400     		.2byte	0x4
 3928 030a F3       		.byte	0xf3
 3929 030b 01       		.uleb128 0x1
 3930 030c 50       		.byte	0x50
 3931 030d 9F       		.byte	0x9f
 3932 030e 00000000 		.4byte	0
 3933 0312 00000000 		.4byte	0
 3934              	.LLST25:
 3935 0316 00000000 		.4byte	.LVL70
 3936 031a 0F000000 		.4byte	.LVL71-1
 3937 031e 0100     		.2byte	0x1
 3938 0320 50       		.byte	0x50
 3939 0321 0F000000 		.4byte	.LVL71-1
 3940 0325 D2000000 		.4byte	.LVL102
 3941 0329 0100     		.2byte	0x1
 3942 032b 54       		.byte	0x54
 3943 032c D2000000 		.4byte	.LVL102
 3944 0330 00010000 		.4byte	.LVL107
 3945 0334 0700     		.2byte	0x7
 3946 0336 74       		.byte	0x74
 3947 0337 B39C8080 		.sleb128 -268431821
 3947      7F
 3948 033c 9F       		.byte	0x9f
 3949 033d 00010000 		.4byte	.LVL107
 3950 0341 06010000 		.4byte	.LVL109
 3951 0345 0100     		.2byte	0x1
 3952 0347 54       		.byte	0x54
 3953 0348 06010000 		.4byte	.LVL109
 3954 034c 0C010000 		.4byte	.LVL111
 3955 0350 0300     		.2byte	0x3
 3956 0352 75       		.byte	0x75
 3957 0353 03       		.sleb128 3
 3958 0354 9F       		.byte	0x9f
 3959 0355 0C010000 		.4byte	.LVL111
 3960 0359 64010000 		.4byte	.LFE4
 3961 035d 0400     		.2byte	0x4
 3962 035f F3       		.byte	0xf3
 3963 0360 01       		.uleb128 0x1
 3964 0361 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 106


 3965 0362 9F       		.byte	0x9f
 3966 0363 00000000 		.4byte	0
 3967 0367 00000000 		.4byte	0
 3968              	.LLST26:
 3969 036b 2A000000 		.4byte	.LVL73
 3970 036f 2C000000 		.4byte	.LVL74
 3971 0373 0100     		.2byte	0x1
 3972 0375 53       		.byte	0x53
 3973 0376 2C000000 		.4byte	.LVL74
 3974 037a 34000000 		.4byte	.LVL76
 3975 037e 0100     		.2byte	0x1
 3976 0380 5A       		.byte	0x5a
 3977 0381 46000000 		.4byte	.LVL77
 3978 0385 48000000 		.4byte	.LVL78
 3979 0389 0100     		.2byte	0x1
 3980 038b 53       		.byte	0x53
 3981 038c 48000000 		.4byte	.LVL78
 3982 0390 50000000 		.4byte	.LVL80
 3983 0394 0100     		.2byte	0x1
 3984 0396 5A       		.byte	0x5a
 3985 0397 62000000 		.4byte	.LVL81
 3986 039b 64000000 		.4byte	.LVL82
 3987 039f 0100     		.2byte	0x1
 3988 03a1 53       		.byte	0x53
 3989 03a2 64000000 		.4byte	.LVL82
 3990 03a6 6C000000 		.4byte	.LVL84
 3991 03aa 0100     		.2byte	0x1
 3992 03ac 5A       		.byte	0x5a
 3993 03ad 7E000000 		.4byte	.LVL85
 3994 03b1 80000000 		.4byte	.LVL86
 3995 03b5 0100     		.2byte	0x1
 3996 03b7 53       		.byte	0x53
 3997 03b8 80000000 		.4byte	.LVL86
 3998 03bc 88000000 		.4byte	.LVL88
 3999 03c0 0100     		.2byte	0x1
 4000 03c2 5A       		.byte	0x5a
 4001 03c3 90000000 		.4byte	.LVL89
 4002 03c7 92000000 		.4byte	.LVL90
 4003 03cb 0100     		.2byte	0x1
 4004 03cd 53       		.byte	0x53
 4005 03ce 92000000 		.4byte	.LVL90
 4006 03d2 00010000 		.4byte	.LVL107
 4007 03d6 0100     		.2byte	0x1
 4008 03d8 5A       		.byte	0x5a
 4009 03d9 00000000 		.4byte	0
 4010 03dd 00000000 		.4byte	0
 4011              	.LLST27:
 4012 03e1 32000000 		.4byte	.LVL75
 4013 03e5 34000000 		.4byte	.LVL76
 4014 03e9 0100     		.2byte	0x1
 4015 03eb 53       		.byte	0x53
 4016 03ec 4E000000 		.4byte	.LVL79
 4017 03f0 50000000 		.4byte	.LVL80
 4018 03f4 0100     		.2byte	0x1
 4019 03f6 53       		.byte	0x53
 4020 03f7 6A000000 		.4byte	.LVL83
 4021 03fb 6C000000 		.4byte	.LVL84
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 107


 4022 03ff 0100     		.2byte	0x1
 4023 0401 53       		.byte	0x53
 4024 0402 86000000 		.4byte	.LVL87
 4025 0406 88000000 		.4byte	.LVL88
 4026 040a 0100     		.2byte	0x1
 4027 040c 53       		.byte	0x53
 4028 040d 98000000 		.4byte	.LVL91
 4029 0411 00010000 		.4byte	.LVL107
 4030 0415 0100     		.2byte	0x1
 4031 0417 59       		.byte	0x59
 4032 0418 00000000 		.4byte	0
 4033 041c 00000000 		.4byte	0
 4034              	.LLST28:
 4035 0420 9C000000 		.4byte	.LVL92
 4036 0424 A8000000 		.4byte	.LVL93
 4037 0428 0500     		.2byte	0x5
 4038 042a 73       		.byte	0x73
 4039 042b 00       		.sleb128 0
 4040 042c 75       		.byte	0x75
 4041 042d 00       		.sleb128 0
 4042 042e 22       		.byte	0x22
 4043 042f A8000000 		.4byte	.LVL93
 4044 0433 B4000000 		.4byte	.LVL96
 4045 0437 0800     		.2byte	0x8
 4046 0439 75       		.byte	0x75
 4047 043a 00       		.sleb128 0
 4048 043b 03       		.byte	0x3
 4049 043c 00000000 		.4byte	.LANCHOR1
 4050 0440 22       		.byte	0x22
 4051 0441 B4000000 		.4byte	.LVL96
 4052 0445 B6000000 		.4byte	.LVL97
 4053 0449 0500     		.2byte	0x5
 4054 044b 73       		.byte	0x73
 4055 044c 00       		.sleb128 0
 4056 044d 75       		.byte	0x75
 4057 044e 00       		.sleb128 0
 4058 044f 22       		.byte	0x22
 4059 0450 B6000000 		.4byte	.LVL97
 4060 0454 C2000000 		.4byte	.LVL99
 4061 0458 0800     		.2byte	0x8
 4062 045a 75       		.byte	0x75
 4063 045b 00       		.sleb128 0
 4064 045c 03       		.byte	0x3
 4065 045d 00000000 		.4byte	.LANCHOR1
 4066 0461 22       		.byte	0x22
 4067 0462 C2000000 		.4byte	.LVL99
 4068 0466 C6000000 		.4byte	.LVL100
 4069 046a 0500     		.2byte	0x5
 4070 046c 73       		.byte	0x73
 4071 046d 00       		.sleb128 0
 4072 046e 75       		.byte	0x75
 4073 046f 00       		.sleb128 0
 4074 0470 22       		.byte	0x22
 4075 0471 C6000000 		.4byte	.LVL100
 4076 0475 F2000000 		.4byte	.LVL104
 4077 0479 0800     		.2byte	0x8
 4078 047b 75       		.byte	0x75
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 108


 4079 047c 00       		.sleb128 0
 4080 047d 03       		.byte	0x3
 4081 047e 00000000 		.4byte	.LANCHOR1
 4082 0482 22       		.byte	0x22
 4083 0483 F2000000 		.4byte	.LVL104
 4084 0487 F6000000 		.4byte	.LVL105
 4085 048b 0500     		.2byte	0x5
 4086 048d 73       		.byte	0x73
 4087 048e 00       		.sleb128 0
 4088 048f 75       		.byte	0x75
 4089 0490 00       		.sleb128 0
 4090 0491 22       		.byte	0x22
 4091 0492 F6000000 		.4byte	.LVL105
 4092 0496 00010000 		.4byte	.LVL107
 4093 049a 0800     		.2byte	0x8
 4094 049c 75       		.byte	0x75
 4095 049d 00       		.sleb128 0
 4096 049e 03       		.byte	0x3
 4097 049f 00000000 		.4byte	.LANCHOR1
 4098 04a3 22       		.byte	0x22
 4099 04a4 00000000 		.4byte	0
 4100 04a8 00000000 		.4byte	0
 4101              	.LLST29:
 4102 04ac B0000000 		.4byte	.LVL95
 4103 04b0 B4000000 		.4byte	.LVL96
 4104 04b4 0200     		.2byte	0x2
 4105 04b6 49       		.byte	0x49
 4106 04b7 9F       		.byte	0x9f
 4107 04b8 BC000000 		.4byte	.LVL98
 4108 04bc 00010000 		.4byte	.LVL107
 4109 04c0 0100     		.2byte	0x1
 4110 04c2 57       		.byte	0x57
 4111 04c3 00000000 		.4byte	0
 4112 04c7 00000000 		.4byte	0
 4113              	.LLST30:
 4114 04cb 12000000 		.4byte	.LVL72
 4115 04cf AC000000 		.4byte	.LVL94
 4116 04d3 0100     		.2byte	0x1
 4117 04d5 50       		.byte	0x50
 4118 04d6 AC000000 		.4byte	.LVL94
 4119 04da B4000000 		.4byte	.LVL96
 4120 04de 0100     		.2byte	0x1
 4121 04e0 58       		.byte	0x58
 4122 04e1 B4000000 		.4byte	.LVL96
 4123 04e5 BC000000 		.4byte	.LVL98
 4124 04e9 0100     		.2byte	0x1
 4125 04eb 50       		.byte	0x50
 4126 04ec BC000000 		.4byte	.LVL98
 4127 04f0 00010000 		.4byte	.LVL107
 4128 04f4 0100     		.2byte	0x1
 4129 04f6 58       		.byte	0x58
 4130 04f7 00010000 		.4byte	.LVL107
 4131 04fb 02010000 		.4byte	.LVL108
 4132 04ff 0100     		.2byte	0x1
 4133 0501 50       		.byte	0x50
 4134 0502 02010000 		.4byte	.LVL108
 4135 0506 0C010000 		.4byte	.LVL112
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 109


 4136 050a 0100     		.2byte	0x1
 4137 050c 58       		.byte	0x58
 4138 050d 00000000 		.4byte	0
 4139 0511 00000000 		.4byte	0
 4140              	.LLST31:
 4141 0515 00000000 		.4byte	.LVL113
 4142 0519 16000000 		.4byte	.LVL114
 4143 051d 0100     		.2byte	0x1
 4144 051f 50       		.byte	0x50
 4145 0520 16000000 		.4byte	.LVL114
 4146 0524 40000000 		.4byte	.LFE5
 4147 0528 0400     		.2byte	0x4
 4148 052a F3       		.byte	0xf3
 4149 052b 01       		.uleb128 0x1
 4150 052c 50       		.byte	0x50
 4151 052d 9F       		.byte	0x9f
 4152 052e 00000000 		.4byte	0
 4153 0532 00000000 		.4byte	0
 4154              	.LLST32:
 4155 0536 00000000 		.4byte	.LVL117
 4156 053a 1A000000 		.4byte	.LVL118
 4157 053e 0100     		.2byte	0x1
 4158 0540 50       		.byte	0x50
 4159 0541 1A000000 		.4byte	.LVL118
 4160 0545 4C000000 		.4byte	.LFE27
 4161 0549 0400     		.2byte	0x4
 4162 054b F3       		.byte	0xf3
 4163 054c 01       		.uleb128 0x1
 4164 054d 50       		.byte	0x50
 4165 054e 9F       		.byte	0x9f
 4166 054f 00000000 		.4byte	0
 4167 0553 00000000 		.4byte	0
 4168              	.LLST33:
 4169 0557 00000000 		.4byte	.LVL122
 4170 055b 02000000 		.4byte	.LVL123
 4171 055f 0100     		.2byte	0x1
 4172 0561 50       		.byte	0x50
 4173 0562 02000000 		.4byte	.LVL123
 4174 0566 10000000 		.4byte	.LFE34
 4175 056a 0400     		.2byte	0x4
 4176 056c F3       		.byte	0xf3
 4177 056d 01       		.uleb128 0x1
 4178 056e 50       		.byte	0x50
 4179 056f 9F       		.byte	0x9f
 4180 0570 00000000 		.4byte	0
 4181 0574 00000000 		.4byte	0
 4182              	.LLST34:
 4183 0578 0C000000 		.4byte	.LVL125
 4184 057c 1A000000 		.4byte	.LVL128
 4185 0580 0100     		.2byte	0x1
 4186 0582 54       		.byte	0x54
 4187 0583 1E000000 		.4byte	.LVL129
 4188 0587 22000000 		.4byte	.LVL130
 4189 058b 0100     		.2byte	0x1
 4190 058d 54       		.byte	0x54
 4191 058e 00000000 		.4byte	0
 4192 0592 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 110


 4193              	.LLST35:
 4194 0596 02000000 		.4byte	.LVL131
 4195 059a 0A000000 		.4byte	.LVL132
 4196 059e 0200     		.2byte	0x2
 4197 05a0 30       		.byte	0x30
 4198 05a1 9F       		.byte	0x9f
 4199 05a2 0A000000 		.4byte	.LVL132
 4200 05a6 1B000000 		.4byte	.LVL134-1
 4201 05aa 0100     		.2byte	0x1
 4202 05ac 53       		.byte	0x53
 4203 05ad 00000000 		.4byte	0
 4204 05b1 00000000 		.4byte	0
 4205              	.LLST36:
 4206 05b5 00000000 		.4byte	.LVL141
 4207 05b9 06000000 		.4byte	.LVL142
 4208 05bd 0100     		.2byte	0x1
 4209 05bf 50       		.byte	0x50
 4210 05c0 06000000 		.4byte	.LVL142
 4211 05c4 10000000 		.4byte	.LFE39
 4212 05c8 0400     		.2byte	0x4
 4213 05ca F3       		.byte	0xf3
 4214 05cb 01       		.uleb128 0x1
 4215 05cc 50       		.byte	0x50
 4216 05cd 9F       		.byte	0x9f
 4217 05ce 00000000 		.4byte	0
 4218 05d2 00000000 		.4byte	0
 4219              	.LLST37:
 4220 05d6 00000000 		.4byte	.LVL143
 4221 05da 02000000 		.4byte	.LVL144
 4222 05de 0100     		.2byte	0x1
 4223 05e0 50       		.byte	0x50
 4224 05e1 02000000 		.4byte	.LVL144
 4225 05e5 0C000000 		.4byte	.LFE40
 4226 05e9 0400     		.2byte	0x4
 4227 05eb F3       		.byte	0xf3
 4228 05ec 01       		.uleb128 0x1
 4229 05ed 50       		.byte	0x50
 4230 05ee 9F       		.byte	0x9f
 4231 05ef 00000000 		.4byte	0
 4232 05f3 00000000 		.4byte	0
 4233              		.section	.debug_aranges,"",%progbits
 4234 0000 6C010000 		.4byte	0x16c
 4235 0004 0200     		.2byte	0x2
 4236 0006 00000000 		.4byte	.Ldebug_info0
 4237 000a 04       		.byte	0x4
 4238 000b 00       		.byte	0
 4239 000c 0000     		.2byte	0
 4240 000e 0000     		.2byte	0
 4241 0010 00000000 		.4byte	.LFB0
 4242 0014 14000000 		.4byte	.LFE0-.LFB0
 4243 0018 00000000 		.4byte	.LFB1
 4244 001c 10000000 		.4byte	.LFE1-.LFB1
 4245 0020 00000000 		.4byte	.LFB2
 4246 0024 24000000 		.4byte	.LFE2-.LFB2
 4247 0028 00000000 		.4byte	.LFB3
 4248 002c 28000000 		.4byte	.LFE3-.LFB3
 4249 0030 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 111


 4250 0034 20000000 		.4byte	.LFE6-.LFB6
 4251 0038 00000000 		.4byte	.LFB7
 4252 003c 10000000 		.4byte	.LFE7-.LFB7
 4253 0040 00000000 		.4byte	.LFB8
 4254 0044 0C000000 		.4byte	.LFE8-.LFB8
 4255 0048 00000000 		.4byte	.LFB9
 4256 004c 14000000 		.4byte	.LFE9-.LFB9
 4257 0050 00000000 		.4byte	.LFB10
 4258 0054 10000000 		.4byte	.LFE10-.LFB10
 4259 0058 00000000 		.4byte	.LFB11
 4260 005c 0C000000 		.4byte	.LFE11-.LFB11
 4261 0060 00000000 		.4byte	.LFB18
 4262 0064 14000000 		.4byte	.LFE18-.LFB18
 4263 0068 00000000 		.4byte	.LFB19
 4264 006c 18000000 		.4byte	.LFE19-.LFB19
 4265 0070 00000000 		.4byte	.LFB20
 4266 0074 14000000 		.4byte	.LFE20-.LFB20
 4267 0078 00000000 		.4byte	.LFB21
 4268 007c 14000000 		.4byte	.LFE21-.LFB21
 4269 0080 00000000 		.4byte	.LFB22
 4270 0084 14000000 		.4byte	.LFE22-.LFB22
 4271 0088 00000000 		.4byte	.LFB23
 4272 008c 04000000 		.4byte	.LFE23-.LFB23
 4273 0090 00000000 		.4byte	.LFB12
 4274 0094 1E000000 		.4byte	.LFE12-.LFB12
 4275 0098 00000000 		.4byte	.LFB13
 4276 009c 1A000000 		.4byte	.LFE13-.LFB13
 4277 00a0 00000000 		.4byte	.LFB14
 4278 00a4 20000000 		.4byte	.LFE14-.LFB14
 4279 00a8 00000000 		.4byte	.LFB15
 4280 00ac 1C000000 		.4byte	.LFE15-.LFB15
 4281 00b0 00000000 		.4byte	.LFB16
 4282 00b4 48000000 		.4byte	.LFE16-.LFB16
 4283 00b8 00000000 		.4byte	.LFB17
 4284 00bc 2C000000 		.4byte	.LFE17-.LFB17
 4285 00c0 00000000 		.4byte	.LFB24
 4286 00c4 18000000 		.4byte	.LFE24-.LFB24
 4287 00c8 00000000 		.4byte	.LFB25
 4288 00cc 30000000 		.4byte	.LFE25-.LFB25
 4289 00d0 00000000 		.4byte	.LFB26
 4290 00d4 14000000 		.4byte	.LFE26-.LFB26
 4291 00d8 00000000 		.4byte	.LFB4
 4292 00dc 64010000 		.4byte	.LFE4-.LFB4
 4293 00e0 00000000 		.4byte	.LFB5
 4294 00e4 40000000 		.4byte	.LFE5-.LFB5
 4295 00e8 00000000 		.4byte	.LFB27
 4296 00ec 4C000000 		.4byte	.LFE27-.LFB27
 4297 00f0 00000000 		.4byte	.LFB31
 4298 00f4 10000000 		.4byte	.LFE31-.LFB31
 4299 00f8 00000000 		.4byte	.LFB32
 4300 00fc 10000000 		.4byte	.LFE32-.LFB32
 4301 0100 00000000 		.4byte	.LFB30
 4302 0104 18000000 		.4byte	.LFE30-.LFB30
 4303 0108 00000000 		.4byte	.LFB33
 4304 010c 10000000 		.4byte	.LFE33-.LFB33
 4305 0110 00000000 		.4byte	.LFB34
 4306 0114 10000000 		.4byte	.LFE34-.LFB34
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 112


 4307 0118 00000000 		.4byte	.LFB35
 4308 011c 10000000 		.4byte	.LFE35-.LFB35
 4309 0120 00000000 		.4byte	.LFB36
 4310 0124 10000000 		.4byte	.LFE36-.LFB36
 4311 0128 00000000 		.4byte	.LFB37
 4312 012c 10000000 		.4byte	.LFE37-.LFB37
 4313 0130 00000000 		.4byte	.LFB41
 4314 0134 28000000 		.4byte	.LFE41-.LFB41
 4315 0138 00000000 		.4byte	.LFB38
 4316 013c 0C000000 		.4byte	.LFE38-.LFB38
 4317 0140 00000000 		.4byte	.LFB29
 4318 0144 44000000 		.4byte	.LFE29-.LFB29
 4319 0148 00000000 		.4byte	.LFB28
 4320 014c 20000000 		.4byte	.LFE28-.LFB28
 4321 0150 00000000 		.4byte	.LFB39
 4322 0154 10000000 		.4byte	.LFE39-.LFB39
 4323 0158 00000000 		.4byte	.LFB40
 4324 015c 0C000000 		.4byte	.LFE40-.LFB40
 4325 0160 00000000 		.4byte	.LFB42
 4326 0164 70000000 		.4byte	.LFE42-.LFB42
 4327 0168 00000000 		.4byte	0
 4328 016c 00000000 		.4byte	0
 4329              		.section	.debug_ranges,"",%progbits
 4330              	.Ldebug_ranges0:
 4331 0000 00000000 		.4byte	.LFB0
 4332 0004 14000000 		.4byte	.LFE0
 4333 0008 00000000 		.4byte	.LFB1
 4334 000c 10000000 		.4byte	.LFE1
 4335 0010 00000000 		.4byte	.LFB2
 4336 0014 24000000 		.4byte	.LFE2
 4337 0018 00000000 		.4byte	.LFB3
 4338 001c 28000000 		.4byte	.LFE3
 4339 0020 00000000 		.4byte	.LFB6
 4340 0024 20000000 		.4byte	.LFE6
 4341 0028 00000000 		.4byte	.LFB7
 4342 002c 10000000 		.4byte	.LFE7
 4343 0030 00000000 		.4byte	.LFB8
 4344 0034 0C000000 		.4byte	.LFE8
 4345 0038 00000000 		.4byte	.LFB9
 4346 003c 14000000 		.4byte	.LFE9
 4347 0040 00000000 		.4byte	.LFB10
 4348 0044 10000000 		.4byte	.LFE10
 4349 0048 00000000 		.4byte	.LFB11
 4350 004c 0C000000 		.4byte	.LFE11
 4351 0050 00000000 		.4byte	.LFB18
 4352 0054 14000000 		.4byte	.LFE18
 4353 0058 00000000 		.4byte	.LFB19
 4354 005c 18000000 		.4byte	.LFE19
 4355 0060 00000000 		.4byte	.LFB20
 4356 0064 14000000 		.4byte	.LFE20
 4357 0068 00000000 		.4byte	.LFB21
 4358 006c 14000000 		.4byte	.LFE21
 4359 0070 00000000 		.4byte	.LFB22
 4360 0074 14000000 		.4byte	.LFE22
 4361 0078 00000000 		.4byte	.LFB23
 4362 007c 04000000 		.4byte	.LFE23
 4363 0080 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 113


 4364 0084 1E000000 		.4byte	.LFE12
 4365 0088 00000000 		.4byte	.LFB13
 4366 008c 1A000000 		.4byte	.LFE13
 4367 0090 00000000 		.4byte	.LFB14
 4368 0094 20000000 		.4byte	.LFE14
 4369 0098 00000000 		.4byte	.LFB15
 4370 009c 1C000000 		.4byte	.LFE15
 4371 00a0 00000000 		.4byte	.LFB16
 4372 00a4 48000000 		.4byte	.LFE16
 4373 00a8 00000000 		.4byte	.LFB17
 4374 00ac 2C000000 		.4byte	.LFE17
 4375 00b0 00000000 		.4byte	.LFB24
 4376 00b4 18000000 		.4byte	.LFE24
 4377 00b8 00000000 		.4byte	.LFB25
 4378 00bc 30000000 		.4byte	.LFE25
 4379 00c0 00000000 		.4byte	.LFB26
 4380 00c4 14000000 		.4byte	.LFE26
 4381 00c8 00000000 		.4byte	.LFB4
 4382 00cc 64010000 		.4byte	.LFE4
 4383 00d0 00000000 		.4byte	.LFB5
 4384 00d4 40000000 		.4byte	.LFE5
 4385 00d8 00000000 		.4byte	.LFB27
 4386 00dc 4C000000 		.4byte	.LFE27
 4387 00e0 00000000 		.4byte	.LFB31
 4388 00e4 10000000 		.4byte	.LFE31
 4389 00e8 00000000 		.4byte	.LFB32
 4390 00ec 10000000 		.4byte	.LFE32
 4391 00f0 00000000 		.4byte	.LFB30
 4392 00f4 18000000 		.4byte	.LFE30
 4393 00f8 00000000 		.4byte	.LFB33
 4394 00fc 10000000 		.4byte	.LFE33
 4395 0100 00000000 		.4byte	.LFB34
 4396 0104 10000000 		.4byte	.LFE34
 4397 0108 00000000 		.4byte	.LFB35
 4398 010c 10000000 		.4byte	.LFE35
 4399 0110 00000000 		.4byte	.LFB36
 4400 0114 10000000 		.4byte	.LFE36
 4401 0118 00000000 		.4byte	.LFB37
 4402 011c 10000000 		.4byte	.LFE37
 4403 0120 00000000 		.4byte	.LFB41
 4404 0124 28000000 		.4byte	.LFE41
 4405 0128 00000000 		.4byte	.LFB38
 4406 012c 0C000000 		.4byte	.LFE38
 4407 0130 00000000 		.4byte	.LFB29
 4408 0134 44000000 		.4byte	.LFE29
 4409 0138 00000000 		.4byte	.LFB28
 4410 013c 20000000 		.4byte	.LFE28
 4411 0140 00000000 		.4byte	.LFB39
 4412 0144 10000000 		.4byte	.LFE39
 4413 0148 00000000 		.4byte	.LFB40
 4414 014c 0C000000 		.4byte	.LFE40
 4415 0150 00000000 		.4byte	.LFB42
 4416 0154 70000000 		.4byte	.LFE42
 4417 0158 00000000 		.4byte	0
 4418 015c 00000000 		.4byte	0
 4419              		.section	.debug_line,"",%progbits
 4420              	.Ldebug_line0:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 114


 4421 0000 2B040000 		.section	.debug_str,"MS",%progbits,1
 4421      02004F00 
 4421      00000201 
 4421      FB0E0D00 
 4421      01010101 
 4422              	.LASF46:
 4423 0000 72616D56 		.ascii	"ramVectorTable\000"
 4423      6563746F 
 4423      72546162 
 4423      6C6500
 4424              	.LASF62:
 4425 000f 62675472 		.ascii	"bgTrim4\000"
 4425      696D3400 
 4426              	.LASF10:
 4427 0017 75696E74 		.ascii	"uint16\000"
 4427      313600
 4428              	.LASF33:
 4429 001e 696E7453 		.ascii	"intState\000"
 4429      74617465 
 4429      00
 4430              	.LASF22:
 4431 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4431      73436C6B 
 4431      57726974 
 4431      65486663 
 4431      6C6B4469 
 4432              	.LASF45:
 4433 0040 6F6C6449 		.ascii	"oldIsr\000"
 4433      737200
 4434              	.LASF32:
 4435 0047 43794469 		.ascii	"CyDisableInts\000"
 4435      7361626C 
 4435      65496E74 
 4435      7300
 4436              	.LASF65:
 4437 0055 63757272 		.ascii	"currentImoTrim2Value\000"
 4437      656E7449 
 4437      6D6F5472 
 4437      696D3256 
 4437      616C7565 
 4438              	.LASF94:
 4439 006a 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4439      4320342E 
 4439      382E3420 
 4439      32303134 
 4439      30353236 
 4440 009d 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4440      20726576 
 4440      6973696F 
 4440      6E203231 
 4440      31333538 
 4441 00d0 67202D66 		.ascii	"g -ffunction-sections\000"
 4441      66756E63 
 4441      74696F6E 
 4441      2D736563 
 4441      74696F6E 
 4442              	.LASF7:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 115


 4443 00e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 4443      206C6F6E 
 4443      6720756E 
 4443      7369676E 
 4443      65642069 
 4444              	.LASF88:
 4445 00fd 43795379 		.ascii	"CySysTickInitVar\000"
 4445      73546963 
 4445      6B496E69 
 4445      74566172 
 4445      00
 4446              	.LASF34:
 4447 010e 4379456E 		.ascii	"CyEnableInts\000"
 4447      61626C65 
 4447      496E7473 
 4447      00
 4448              	.LASF55:
 4449 011b 4379536F 		.ascii	"CySoftwareReset\000"
 4449      66747761 
 4449      72655265 
 4449      73657400 
 4450              	.LASF70:
 4451 012b 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4451      73546963 
 4451      6B456E61 
 4451      626C6549 
 4451      6E746572 
 4452              	.LASF38:
 4453 0144 4379496E 		.ascii	"CyIntGetState\000"
 4453      74476574 
 4453      53746174 
 4453      6500
 4454              	.LASF6:
 4455 0152 6C6F6E67 		.ascii	"long long int\000"
 4455      206C6F6E 
 4455      6720696E 
 4455      7400
 4456              	.LASF0:
 4457 0160 7369676E 		.ascii	"signed char\000"
 4457      65642063 
 4457      68617200 
 4458              	.LASF61:
 4459 016c 66726571 		.ascii	"freq\000"
 4459      00
 4460              	.LASF68:
 4461 0171 43794465 		.ascii	"CyDelayFreq\000"
 4461      6C617946 
 4461      72657100 
 4462              	.LASF26:
 4463 017d 696E7465 		.ascii	"interruptState\000"
 4463      72727570 
 4463      74537461 
 4463      746500
 4464              	.LASF96:
 4465 018c 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 4465      73657273 
 4465      5C6D6974 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 116


 4465      6368656C 
 4465      6C5C446F 
 4466 01b9 2D546872 		.ascii	"-Throttle\\Potentiometer-Test.cydsn\000"
 4466      6F74746C 
 4466      655C506F 
 4466      74656E74 
 4466      696F6D65 
 4467              	.LASF75:
 4468 01dc 43795379 		.ascii	"CySysTickGetReload\000"
 4468      73546963 
 4468      6B476574 
 4468      52656C6F 
 4468      616400
 4469              	.LASF4:
 4470 01ef 6C6F6E67 		.ascii	"long int\000"
 4470      20696E74 
 4470      00
 4471              	.LASF39:
 4472 01f8 4379496E 		.ascii	"CyIntDisable\000"
 4472      74446973 
 4472      61626C65 
 4472      00
 4473              	.LASF84:
 4474 0205 43795379 		.ascii	"CySysTickGetCallback\000"
 4474      73546963 
 4474      6B476574 
 4474      43616C6C 
 4474      6261636B 
 4475              	.LASF9:
 4476 021a 75696E74 		.ascii	"uint8\000"
 4476      3800
 4477              	.LASF90:
 4478 0220 63796465 		.ascii	"cydelayFreqKhz\000"
 4478      6C617946 
 4478      7265714B 
 4478      687A00
 4479              	.LASF58:
 4480 022f 43794465 		.ascii	"CyDelayUs\000"
 4480      6C617955 
 4480      7300
 4481              	.LASF13:
 4482 0239 646F7562 		.ascii	"double\000"
 4482      6C6500
 4483              	.LASF52:
 4484 0240 73686966 		.ascii	"shift\000"
 4484      7400
 4485              	.LASF28:
 4486 0246 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4486      734C7664 
 4486      436C6561 
 4486      72496E74 
 4486      65727275 
 4487              	.LASF11:
 4488 025d 75696E74 		.ascii	"uint32\000"
 4488      333200
 4489              	.LASF37:
 4490 0264 6E756D62 		.ascii	"number\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 117


 4490      657200
 4491              	.LASF35:
 4492 026b 6D61736B 		.ascii	"mask\000"
 4492      00
 4493              	.LASF66:
 4494 0270 43795379 		.ascii	"CySysLvdEnable\000"
 4494      734C7664 
 4494      456E6162 
 4494      6C6500
 4495              	.LASF54:
 4496 027f 4379496E 		.ascii	"CyIntGetPriority\000"
 4496      74476574 
 4496      5072696F 
 4496      72697479 
 4496      00
 4497              	.LASF92:
 4498 0290 63796465 		.ascii	"cydelay32kMs\000"
 4498      6C617933 
 4498      326B4D73 
 4498      00
 4499              	.LASF79:
 4500 029d 43795379 		.ascii	"CySysTickInit\000"
 4500      73546963 
 4500      6B496E69 
 4500      7400
 4501              	.LASF53:
 4502 02ab 76616C75 		.ascii	"value\000"
 4502      6500
 4503              	.LASF85:
 4504 02b1 43794765 		.ascii	"CyGetUniqueId\000"
 4504      74556E69 
 4504      71756549 
 4504      6400
 4505              	.LASF77:
 4506 02bf 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4506      73546963 
 4506      6B476574 
 4506      436F756E 
 4506      74466C61 
 4507              	.LASF8:
 4508 02d5 756E7369 		.ascii	"unsigned int\000"
 4508      676E6564 
 4508      20696E74 
 4508      00
 4509              	.LASF78:
 4510 02e2 43795379 		.ascii	"CySysTickClear\000"
 4510      73546963 
 4510      6B436C65 
 4510      617200
 4511              	.LASF5:
 4512 02f1 6C6F6E67 		.ascii	"long unsigned int\000"
 4512      20756E73 
 4512      69676E65 
 4512      6420696E 
 4512      7400
 4513              	.LASF74:
 4514 0303 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 118


 4514      734C7664 
 4514      47657449 
 4514      6E746572 
 4514      72757074 
 4515              	.LASF21:
 4516 031e 43795379 		.ascii	"CySysClkImoStop\000"
 4516      73436C6B 
 4516      496D6F53 
 4516      746F7000 
 4517              	.LASF98:
 4518 032e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4518      74657243 
 4518      72697469 
 4518      63616C53 
 4518      65637469 
 4519              	.LASF40:
 4520 0345 4379496E 		.ascii	"CyIntSetPending\000"
 4520      74536574 
 4520      50656E64 
 4520      696E6700 
 4521              	.LASF31:
 4522 0355 43795379 		.ascii	"CySysGetResetReason\000"
 4522      73476574 
 4522      52657365 
 4522      74526561 
 4522      736F6E00 
 4523              	.LASF3:
 4524 0369 73686F72 		.ascii	"short unsigned int\000"
 4524      7420756E 
 4524      7369676E 
 4524      65642069 
 4524      6E7400
 4525              	.LASF48:
 4526 037c 4379496E 		.ascii	"CyIntSetVector\000"
 4526      74536574 
 4526      56656374 
 4526      6F7200
 4527              	.LASF95:
 4528 038b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4528      6E657261 
 4528      7465645F 
 4528      536F7572 
 4528      63655C50 
 4529              	.LASF51:
 4530 03ac 7072696F 		.ascii	"priority\000"
 4530      72697479 
 4530      00
 4531              	.LASF60:
 4532 03b5 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4532      73436C6B 
 4532      57726974 
 4532      65496D6F 
 4532      46726571 
 4533              	.LASF43:
 4534 03ca 4379496E 		.ascii	"CyIntSetSysVector\000"
 4534      74536574 
 4534      53797356 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 119


 4534      6563746F 
 4534      7200
 4535              	.LASF16:
 4536 03dc 72656733 		.ascii	"reg32\000"
 4536      3200
 4537              	.LASF80:
 4538 03e2 43795379 		.ascii	"CySysTickStart\000"
 4538      73546963 
 4538      6B537461 
 4538      727400
 4539              	.LASF18:
 4540 03f1 73697A65 		.ascii	"sizetype\000"
 4540      74797065 
 4540      00
 4541              	.LASF41:
 4542 03fa 4379496E 		.ascii	"CyIntClearPending\000"
 4542      74436C65 
 4542      61725065 
 4542      6E64696E 
 4542      6700
 4543              	.LASF44:
 4544 040c 61646472 		.ascii	"address\000"
 4544      65737300 
 4545              	.LASF63:
 4546 0414 62675472 		.ascii	"bgTrim5\000"
 4546      696D3500 
 4547              	.LASF83:
 4548 041c 72657456 		.ascii	"retVal\000"
 4548      616C00
 4549              	.LASF82:
 4550 0423 66756E63 		.ascii	"function\000"
 4550      74696F6E 
 4550      00
 4551              	.LASF93:
 4552 042c 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4552      6F467265 
 4552      714D687A 
 4552      32526567 
 4552      00
 4553              	.LASF76:
 4554 043d 43795379 		.ascii	"CySysTickGetValue\000"
 4554      73546963 
 4554      6B476574 
 4554      56616C75 
 4554      6500
 4555              	.LASF89:
 4556 044f 63796465 		.ascii	"cydelayFreqHz\000"
 4556      6C617946 
 4556      72657148 
 4556      7A00
 4557              	.LASF50:
 4558 045d 4379496E 		.ascii	"CyIntSetPriority\000"
 4558      74536574 
 4558      5072696F 
 4558      72697479 
 4558      00
 4559              	.LASF12:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 120


 4560 046e 666C6F61 		.ascii	"float\000"
 4560      7400
 4561              	.LASF99:
 4562 0474 43794578 		.ascii	"CyExitCriticalSection\000"
 4562      69744372 
 4562      69746963 
 4562      616C5365 
 4562      6374696F 
 4563              	.LASF19:
 4564 048a 63795379 		.ascii	"cySysTickCallback\000"
 4564      73546963 
 4564      6B43616C 
 4564      6C626163 
 4564      6B00
 4565              	.LASF49:
 4566 049c 4379496E 		.ascii	"CyIntGetVector\000"
 4566      74476574 
 4566      56656374 
 4566      6F7200
 4567              	.LASF57:
 4568 04ab 6D696C6C 		.ascii	"milliseconds\000"
 4568      69736563 
 4568      6F6E6473 
 4568      00
 4569              	.LASF100:
 4570 04b8 43794465 		.ascii	"CyDelayCycles\000"
 4570      6C617943 
 4570      79636C65 
 4570      7300
 4571              	.LASF15:
 4572 04c6 72656738 		.ascii	"reg8\000"
 4572      00
 4573              	.LASF67:
 4574 04cb 74687265 		.ascii	"threshold\000"
 4574      73686F6C 
 4574      6400
 4575              	.LASF42:
 4576 04d5 43794861 		.ascii	"CyHalt\000"
 4576      6C7400
 4577              	.LASF1:
 4578 04dc 756E7369 		.ascii	"unsigned char\000"
 4578      676E6564 
 4578      20636861 
 4578      7200
 4579              	.LASF2:
 4580 04ea 73686F72 		.ascii	"short int\000"
 4580      7420696E 
 4580      7400
 4581              	.LASF36:
 4582 04f4 4379496E 		.ascii	"CyIntEnable\000"
 4582      74456E61 
 4582      626C6500 
 4583              	.LASF47:
 4584 0500 4379496E 		.ascii	"CyIntGetSysVector\000"
 4584      74476574 
 4584      53797356 
 4584      6563746F 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 121


 4584      7200
 4585              	.LASF24:
 4586 0512 636C6B53 		.ascii	"clkSelect\000"
 4586      656C6563 
 4586      7400
 4587              	.LASF29:
 4588 051c 72656173 		.ascii	"reason\000"
 4588      6F6E00
 4589              	.LASF14:
 4590 0523 63686172 		.ascii	"char\000"
 4590      00
 4591              	.LASF17:
 4592 0528 63796973 		.ascii	"cyisraddress\000"
 4592      72616464 
 4592      72657373 
 4592      00
 4593              	.LASF71:
 4594 0535 43795379 		.ascii	"CySysTickEnable\000"
 4594      73546963 
 4594      6B456E61 
 4594      626C6500 
 4595              	.LASF23:
 4596 0545 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4596      73436C6B 
 4596      57726974 
 4596      65537973 
 4596      636C6B44 
 4597              	.LASF81:
 4598 055c 43795379 		.ascii	"CySysTickSetCallback\000"
 4598      73546963 
 4598      6B536574 
 4598      43616C6C 
 4598      6261636B 
 4599              	.LASF87:
 4600 0571 43795379 		.ascii	"CySysTickCallbacks\000"
 4600      73546963 
 4600      6B43616C 
 4600      6C626163 
 4600      6B7300
 4601              	.LASF86:
 4602 0584 756E6971 		.ascii	"uniqueId\000"
 4602      75654964 
 4602      00
 4603              	.LASF56:
 4604 058d 43794465 		.ascii	"CyDelay\000"
 4604      6C617900 
 4605              	.LASF72:
 4606 0595 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4606      73546963 
 4606      6B446973 
 4606      61626C65 
 4606      496E7465 
 4607              	.LASF27:
 4608 05af 43795379 		.ascii	"CySysLvdDisable\000"
 4608      734C7664 
 4608      44697361 
 4608      626C6500 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccI3mHaZ.s 			page 122


 4609              	.LASF91:
 4610 05bf 63796465 		.ascii	"cydelayFreqMhz\000"
 4610      6C617946 
 4610      7265714D 
 4610      687A00
 4611              	.LASF30:
 4612 05ce 73746174 		.ascii	"status\000"
 4612      757300
 4613              	.LASF69:
 4614 05d5 43795379 		.ascii	"CySysTickStop\000"
 4614      73546963 
 4614      6B53746F 
 4614      7000
 4615              	.LASF25:
 4616 05e3 64697669 		.ascii	"divider\000"
 4616      64657200 
 4617              	.LASF20:
 4618 05eb 43795379 		.ascii	"CySysClkImoStart\000"
 4618      73436C6B 
 4618      496D6F53 
 4618      74617274 
 4618      00
 4619              	.LASF64:
 4620 05fc 6E657749 		.ascii	"newImoTrim2Value\000"
 4620      6D6F5472 
 4620      696D3256 
 4620      616C7565 
 4620      00
 4621              	.LASF59:
 4622 060d 6D696372 		.ascii	"microseconds\000"
 4622      6F736563 
 4622      6F6E6473 
 4622      00
 4623              	.LASF73:
 4624 061a 43795379 		.ascii	"CySysTickSetReload\000"
 4624      73546963 
 4624      6B536574 
 4624      52656C6F 
 4624      616400
 4625              	.LASF97:
 4626 062d 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4626      73546963 
 4626      6B536572 
 4626      76696365 
 4626      43616C6C 
 4627              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
