ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 C0C62D00 		.word	3000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 B80B0000 		.word	3000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 03       		.byte	3
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000DC05 		.word	98304000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103 002e 0000     		.section	.text.CySysClkImoStart,"ax",%progbits
 104              		.align	2
 105              		.global	CySysClkImoStart
 106              		.code	16
 107              		.thumb_func
 108              		.type	CySysClkImoStart, %function
 109              	CySysClkImoStart:
 110              	.LFB0:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 3


 111              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.10
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the clocking, interrupts, and watchdog timer.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
   9:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/CyLib.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/CyLib.c **** *
  12:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2 && CY_IP_FMLT)
  22:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  23:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  24:.\Generated_Source\PSoC4/CyLib.c **** 
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void);
  38:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  39:.\Generated_Source\PSoC4/CyLib.c **** 
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  42:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  43:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  44:.\Generated_Source\PSoC4/CyLib.c **** *
  45:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  46:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  47:.\Generated_Source\PSoC4/CyLib.c **** *
  48:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  49:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  51:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  52:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  53:.\Generated_Source\PSoC4/CyLib.c **** 
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  56:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 4


  57:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  58:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  70:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  71:.\Generated_Source\PSoC4/CyLib.c **** 
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  74:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  75:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  76:.\Generated_Source\PSoC4/CyLib.c **** *
  77:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  78:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  79:.\Generated_Source\PSoC4/CyLib.c **** *
  80:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  81:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
  82:.\Generated_Source\PSoC4/CyLib.c **** *
  83:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
  84:.\Generated_Source\PSoC4/CyLib.c **** *  None
  85:.\Generated_Source\PSoC4/CyLib.c **** *
  86:.\Generated_Source\PSoC4/CyLib.c **** * Return:
  87:.\Generated_Source\PSoC4/CyLib.c **** *  None
  88:.\Generated_Source\PSoC4/CyLib.c **** *
  89:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  90:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  91:.\Generated_Source\PSoC4/CyLib.c **** {
 112              		.loc 1 91 0
 113              		.cfi_startproc
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
  92:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 120              		.loc 1 92 0
 121 0004 044B     		ldr	r3, .L2
 122 0006 044A     		ldr	r2, .L2
 123 0008 1268     		ldr	r2, [r2]
 124 000a 8021     		mov	r1, #128
 125 000c 0906     		lsl	r1, r1, #24
 126 000e 0A43     		orr	r2, r1
 127 0010 1A60     		str	r2, [r3]
  93:.\Generated_Source\PSoC4/CyLib.c **** 
  94:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
  95:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
  96:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
  97:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 5


  98:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
  99:.\Generated_Source\PSoC4/CyLib.c **** 
 100:.\Generated_Source\PSoC4/CyLib.c **** }
 128              		.loc 1 100 0
 129 0012 BD46     		mov	sp, r7
 130              		@ sp needed
 131 0014 80BD     		pop	{r7, pc}
 132              	.L3:
 133 0016 C046     		.align	2
 134              	.L2:
 135 0018 08010B40 		.word	1074462984
 136              		.cfi_endproc
 137              	.LFE0:
 138              		.size	CySysClkImoStart, .-CySysClkImoStart
 139              		.section	.text.CySysClkImoStop,"ax",%progbits
 140              		.align	2
 141              		.global	CySysClkImoStop
 142              		.code	16
 143              		.thumb_func
 144              		.type	CySysClkImoStop, %function
 145              	CySysClkImoStop:
 146              	.LFB1:
 101:.\Generated_Source\PSoC4/CyLib.c **** 
 102:.\Generated_Source\PSoC4/CyLib.c **** 
 103:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 104:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 105:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices , this function will also disable WCO lock
 111:.\Generated_Source\PSoC4/CyLib.c **** *  if already enabled.
 112:.\Generated_Source\PSoC4/CyLib.c **** *
 113:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 114:.\Generated_Source\PSoC4/CyLib.c **** *  None
 115:.\Generated_Source\PSoC4/CyLib.c **** *
 116:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 117:.\Generated_Source\PSoC4/CyLib.c **** *  None
 118:.\Generated_Source\PSoC4/CyLib.c **** *
 119:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 120:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 121:.\Generated_Source\PSoC4/CyLib.c **** {
 147              		.loc 1 121 0
 148              		.cfi_startproc
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 123:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 124:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 125:.\Generated_Source\PSoC4/CyLib.c **** 
 126:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 155              		.loc 1 126 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 6


 156 0004 034B     		ldr	r3, .L5
 157 0006 034A     		ldr	r2, .L5
 158 0008 1268     		ldr	r2, [r2]
 159 000a 5200     		lsl	r2, r2, #1
 160 000c 5208     		lsr	r2, r2, #1
 161 000e 1A60     		str	r2, [r3]
 127:.\Generated_Source\PSoC4/CyLib.c **** }
 162              		.loc 1 127 0
 163 0010 BD46     		mov	sp, r7
 164              		@ sp needed
 165 0012 80BD     		pop	{r7, pc}
 166              	.L6:
 167              		.align	2
 168              	.L5:
 169 0014 08010B40 		.word	1074462984
 170              		.cfi_endproc
 171              	.LFE1:
 172              		.size	CySysClkImoStop, .-CySysClkImoStop
 173              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 174              		.align	2
 175              		.global	CySysClkWriteHfclkDirect
 176              		.code	16
 177              		.thumb_func
 178              		.type	CySysClkWriteHfclkDirect, %function
 179              	CySysClkWriteHfclkDirect:
 180              	.LFB2:
 128:.\Generated_Source\PSoC4/CyLib.c **** 
 129:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 133:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c ****     *
 135:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 136:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 137:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 138:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 139:.\Generated_Source\PSoC4/CyLib.c ****     *
 140:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 141:.\Generated_Source\PSoC4/CyLib.c ****     *
 142:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 144:.\Generated_Source\PSoC4/CyLib.c ****     *
 145:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 146:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 147:.\Generated_Source\PSoC4/CyLib.c ****     *
 148:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 150:.\Generated_Source\PSoC4/CyLib.c ****     {
 151:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 152:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 153:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 154:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 155:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 156:.\Generated_Source\PSoC4/CyLib.c **** 
 157:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 158:.\Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 7


 159:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 160:.\Generated_Source\PSoC4/CyLib.c **** 
 161:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 162:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 163:.\Generated_Source\PSoC4/CyLib.c ****             {
 164:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 165:.\Generated_Source\PSoC4/CyLib.c ****                 {
 166:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 167:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 168:.\Generated_Source\PSoC4/CyLib.c ****                 }
 169:.\Generated_Source\PSoC4/CyLib.c ****             }
 170:.\Generated_Source\PSoC4/CyLib.c **** 
 171:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 172:.\Generated_Source\PSoC4/CyLib.c ****             {
 173:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 174:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_GAIN;
 175:.\Generated_Source\PSoC4/CyLib.c ****             }
 176:.\Generated_Source\PSoC4/CyLib.c **** 
 177:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 178:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 179:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK);
 180:.\Generated_Source\PSoC4/CyLib.c **** 
 181:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 182:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 185:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 186:.\Generated_Source\PSoC4/CyLib.c **** 
 187:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 188:.\Generated_Source\PSoC4/CyLib.c **** 
 189:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 190:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 191:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 192:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(320u);
 193:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 196:.\Generated_Source\PSoC4/CyLib.c ****         }
 197:.\Generated_Source\PSoC4/CyLib.c ****     }
 198:.\Generated_Source\PSoC4/CyLib.c **** 
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 201:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 202:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 203:.\Generated_Source\PSoC4/CyLib.c ****     *
 204:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 205:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 206:.\Generated_Source\PSoC4/CyLib.c ****     *
 207:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 208:.\Generated_Source\PSoC4/CyLib.c ****     *
 209:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 210:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 211:.\Generated_Source\PSoC4/CyLib.c ****     *
 212:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 213:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 214:.\Generated_Source\PSoC4/CyLib.c ****     *
 215:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 8


 216:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 217:.\Generated_Source\PSoC4/CyLib.c ****     {
 218:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 219:.\Generated_Source\PSoC4/CyLib.c ****     }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c **** 
 222:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 224:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/CyLib.c ****     *
 226:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 227:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 228:.\Generated_Source\PSoC4/CyLib.c ****     *
 229:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M/PSoC 4200M devices only.
 230:.\Generated_Source\PSoC4/CyLib.c ****     *
 231:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 232:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 233:.\Generated_Source\PSoC4/CyLib.c ****     *
 234:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 235:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 236:.\Generated_Source\PSoC4/CyLib.c ****     *
 237:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 238:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkImoGetWcoLock(void)
 239:.\Generated_Source\PSoC4/CyLib.c ****     {
 240:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 241:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 242:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 243:.\Generated_Source\PSoC4/CyLib.c ****     }
 244:.\Generated_Source\PSoC4/CyLib.c **** 
 245:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 246:.\Generated_Source\PSoC4/CyLib.c **** 
 247:.\Generated_Source\PSoC4/CyLib.c **** 
 248:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 249:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 250:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 251:.\Generated_Source\PSoC4/CyLib.c **** *
 252:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 253:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 254:.\Generated_Source\PSoC4/CyLib.c **** *
 255:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 256:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 257:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 258:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 259:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 260:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 261:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 262:.\Generated_Source\PSoC4/CyLib.c **** *
 263:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 264:.\Generated_Source\PSoC4/CyLib.c **** *  None
 265:.\Generated_Source\PSoC4/CyLib.c **** *
 266:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 267:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 268:.\Generated_Source\PSoC4/CyLib.c **** *
 269:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 270:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 271:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 272:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 9


 273:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 274:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 275:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 276:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 277:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 278:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 279:.\Generated_Source\PSoC4/CyLib.c **** *
 280:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 282:.\Generated_Source\PSoC4/CyLib.c **** {
 181              		.loc 1 282 0
 182              		.cfi_startproc
 183 0000 90B5     		push	{r4, r7, lr}
 184              		.cfi_def_cfa_offset 12
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 85B0     		sub	sp, sp, #20
 189              		.cfi_def_cfa_offset 32
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 283:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 284:.\Generated_Source\PSoC4/CyLib.c **** 
 285:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 193              		.loc 1 285 0
 194 0008 3C1C     		mov	r4, r7
 195 000a 0F34     		add	r4, r4, #15
 196 000c FFF7FEFF 		bl	CyEnterCriticalSection
 197 0010 031C     		mov	r3, r0
 198 0012 2370     		strb	r3, [r4]
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
 199              		.loc 1 287 0
 200 0014 0A4B     		ldr	r3, .L8
 201 0016 0A4A     		ldr	r2, .L8
 202 0018 1268     		ldr	r2, [r2]
 203 001a 0721     		mov	r1, #7
 204 001c 101C     		mov	r0, r2
 205 001e 8843     		bic	r0, r1
 206 0020 011C     		mov	r1, r0
 288:.\Generated_Source\PSoC4/CyLib.c ****                         (( uint32 ) (clkSelect & ( uint32 )CY_SYS_CLK_SELECT_DIRECT_SEL_PARAM_MASK)
 207              		.loc 1 288 0
 208 0022 7868     		ldr	r0, [r7, #4]
 209 0024 0122     		mov	r2, #1
 210 0026 0240     		and	r2, r0
 287:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (( uint32 ) ~(( uint32 )CY_SYS_CLK_SELECT_DIR
 211              		.loc 1 287 0
 212 0028 0A43     		orr	r2, r1
 213 002a 1A60     		str	r2, [r3]
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 214              		.loc 1 290 0
 215 002c 3B1C     		mov	r3, r7
 216 002e 0F33     		add	r3, r3, #15
 217 0030 1B78     		ldrb	r3, [r3]
 218 0032 181C     		mov	r0, r3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 10


 219 0034 FFF7FEFF 		bl	CyExitCriticalSection
 291:.\Generated_Source\PSoC4/CyLib.c **** }
 220              		.loc 1 291 0
 221 0038 BD46     		mov	sp, r7
 222 003a 05B0     		add	sp, sp, #20
 223              		@ sp needed
 224 003c 90BD     		pop	{r4, r7, pc}
 225              	.L9:
 226 003e C046     		.align	2
 227              	.L8:
 228 0040 00010B40 		.word	1074462976
 229              		.cfi_endproc
 230              	.LFE2:
 231              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 232              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 233              		.align	2
 234              		.global	CySysClkWriteSysclkDiv
 235              		.code	16
 236              		.thumb_func
 237              		.type	CySysClkWriteSysclkDiv, %function
 238              	CySysClkWriteSysclkDiv:
 239              	.LFB3:
 292:.\Generated_Source\PSoC4/CyLib.c **** 
 293:.\Generated_Source\PSoC4/CyLib.c **** 
 294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 296:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 297:.\Generated_Source\PSoC4/CyLib.c **** *
 298:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 299:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 300:.\Generated_Source\PSoC4/CyLib.c **** *
 301:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 302:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 303:.\Generated_Source\PSoC4/CyLib.c **** *
 304:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 305:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 306:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 307:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 308:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 309:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 310:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 311:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 312:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 313:.\Generated_Source\PSoC4/CyLib.c **** *
 314:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 315:.\Generated_Source\PSoC4/CyLib.c **** *  None
 316:.\Generated_Source\PSoC4/CyLib.c **** *
 317:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 318:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 319:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 320:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 321:.\Generated_Source\PSoC4/CyLib.c **** *
 322:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 323:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 324:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 325:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 326:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 11


 327:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 328:.\Generated_Source\PSoC4/CyLib.c **** *
 329:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 331:.\Generated_Source\PSoC4/CyLib.c **** {
 240              		.loc 1 331 0
 241              		.cfi_startproc
 242 0000 90B5     		push	{r4, r7, lr}
 243              		.cfi_def_cfa_offset 12
 244              		.cfi_offset 4, -12
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 85B0     		sub	sp, sp, #20
 248              		.cfi_def_cfa_offset 32
 249 0004 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 251 0006 7860     		str	r0, [r7, #4]
 332:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 333:.\Generated_Source\PSoC4/CyLib.c **** 
 334:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 252              		.loc 1 334 0
 253 0008 3C1C     		mov	r4, r7
 254 000a 0F34     		add	r4, r4, #15
 255 000c FFF7FEFF 		bl	CyEnterCriticalSection
 256 0010 031C     		mov	r3, r0
 257 0012 2370     		strb	r3, [r4]
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 258              		.loc 1 336 0
 259 0014 094B     		ldr	r3, .L11
 260 0016 7968     		ldr	r1, [r7, #4]
 261 0018 0722     		mov	r2, #7
 262 001a 0A40     		and	r2, r1
 263 001c D104     		lsl	r1, r2, #19
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 338:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 264              		.loc 1 338 0
 265 001e 074A     		ldr	r2, .L11
 266 0020 1068     		ldr	r0, [r2]
 267 0022 074A     		ldr	r2, .L11+4
 268 0024 0240     		and	r2, r0
 337:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 269              		.loc 1 337 0
 270 0026 0A43     		orr	r2, r1
 336:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 271              		.loc 1 336 0
 272 0028 1A60     		str	r2, [r3]
 339:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 340:.\Generated_Source\PSoC4/CyLib.c **** 
 341:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 273              		.loc 1 341 0
 274 002a 3B1C     		mov	r3, r7
 275 002c 0F33     		add	r3, r3, #15
 276 002e 1B78     		ldrb	r3, [r3]
 277 0030 181C     		mov	r0, r3
 278 0032 FFF7FEFF 		bl	CyExitCriticalSection
 342:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 12


 279              		.loc 1 342 0
 280 0036 BD46     		mov	sp, r7
 281 0038 05B0     		add	sp, sp, #20
 282              		@ sp needed
 283 003a 90BD     		pop	{r4, r7, pc}
 284              	.L12:
 285              		.align	2
 286              	.L11:
 287 003c 00010B40 		.word	1074462976
 288 0040 FFFFC7FF 		.word	-3670017
 289              		.cfi_endproc
 290              	.LFE3:
 291              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 292              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 293              		.align	2
 294              		.global	CySysClkWriteImoFreq
 295              		.code	16
 296              		.thumb_func
 297              		.type	CySysClkWriteImoFreq, %function
 298              	CySysClkWriteImoFreq:
 299              	.LFB4:
 343:.\Generated_Source\PSoC4/CyLib.c **** 
 344:.\Generated_Source\PSoC4/CyLib.c **** 
 345:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 346:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 347:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c **** *
 349:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 350:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 351:.\Generated_Source\PSoC4/CyLib.c **** *
 352:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 353:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 354:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 355:.\Generated_Source\PSoC4/CyLib.c **** *
 356:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 357:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 358:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 359:.\Generated_Source\PSoC4/CyLib.c **** *
 360:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, if WCO lock feature is enabled then this
 361:.\Generated_Source\PSoC4/CyLib.c **** *  API will disable the lock, write the new IMO frequency and then re-enable the
 362:.\Generated_Source\PSoC4/CyLib.c **** *  lock.
 363:.\Generated_Source\PSoC4/CyLib.c **** *
 364:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 365:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 366:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 367:.\Generated_Source\PSoC4/CyLib.c **** *
 368:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 369:.\Generated_Source\PSoC4/CyLib.c **** *
 370:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 371:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 372:.\Generated_Source\PSoC4/CyLib.c **** *
 373:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 374:.\Generated_Source\PSoC4/CyLib.c **** *  None
 375:.\Generated_Source\PSoC4/CyLib.c **** *
 376:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 377:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 378:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 13


 379:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 380:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 381:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 382:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 383:.\Generated_Source\PSoC4/CyLib.c **** *
 384:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 385:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 386:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 387:.\Generated_Source\PSoC4/CyLib.c **** *
 388:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 390:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 391:.\Generated_Source\PSoC4/CyLib.c ****     {
 300              		.loc 1 391 0
 301              		.cfi_startproc
 302 0000 90B5     		push	{r4, r7, lr}
 303              		.cfi_def_cfa_offset 12
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 85B0     		sub	sp, sp, #20
 308              		.cfi_def_cfa_offset 32
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
 311 0006 7860     		str	r0, [r7, #4]
 392:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 393:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 394:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 395:.\Generated_Source\PSoC4/CyLib.c ****         #else
 396:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 397:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 398:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 399:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 400:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 401:.\Generated_Source\PSoC4/CyLib.c **** 
 402:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 403:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 404:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 405:.\Generated_Source\PSoC4/CyLib.c **** 
 406:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 407:.\Generated_Source\PSoC4/CyLib.c **** 
 408:.\Generated_Source\PSoC4/CyLib.c **** 
 409:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 312              		.loc 1 409 0
 313 0008 3C1C     		mov	r4, r7
 314 000a 0C34     		add	r4, r4, #12
 315 000c FFF7FEFF 		bl	CyEnterCriticalSection
 316 0010 031C     		mov	r3, r0
 317 0012 2370     		strb	r3, [r4]
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 412:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 413:.\Generated_Source\PSoC4/CyLib.c ****             {
 414:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 415:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 416:.\Generated_Source\PSoC4/CyLib.c ****             }
 417:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 14


 418:.\Generated_Source\PSoC4/CyLib.c **** 
 419:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 420:.\Generated_Source\PSoC4/CyLib.c **** 
 421:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 422:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 423:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 424:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 425:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 426:.\Generated_Source\PSoC4/CyLib.c **** 
 427:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 428:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 429:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 430:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 431:.\Generated_Source\PSoC4/CyLib.c **** 
 432:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 433:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 434:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 435:.\Generated_Source\PSoC4/CyLib.c **** 
 436:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 437:.\Generated_Source\PSoC4/CyLib.c **** 
 438:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 318              		.loc 1 438 0
 319 0014 7B68     		ldr	r3, [r7, #4]
 320 0016 022B     		cmp	r3, #2
 321 0018 00D8     		bhi	.LCB186
 322 001a AFE0     		b	.L14	@long jump
 323              	.LCB186:
 324              		.loc 1 438 0 is_stmt 0 discriminator 1
 325 001c 7B68     		ldr	r3, [r7, #4]
 326 001e 302B     		cmp	r3, #48
 327 0020 00D9     		bls	.LCB189
 328 0022 ABE0     		b	.L14	@long jump
 329              	.LCB189:
 439:.\Generated_Source\PSoC4/CyLib.c ****         {
 440:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 330              		.loc 1 440 0 is_stmt 1
 331 0024 5B4B     		ldr	r3, .L25
 332 0026 1B78     		ldrb	r3, [r3]
 333 0028 DBB2     		uxtb	r3, r3
 334 002a 1A1C     		mov	r2, r3
 335 002c 7B68     		ldr	r3, [r7, #4]
 336 002e 9A42     		cmp	r2, r3
 337 0030 0AD3     		bcc	.L15
 441:.\Generated_Source\PSoC4/CyLib.c ****             {
 442:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 338              		.loc 1 442 0
 339 0032 594A     		ldr	r2, .L25+4
 340 0034 3B1C     		mov	r3, r7
 341 0036 0F33     		add	r3, r3, #15
 342 0038 1278     		ldrb	r2, [r2]
 343 003a 1A70     		strb	r2, [r3]
 443:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 344              		.loc 1 443 0
 345 003c 574A     		ldr	r2, .L25+8
 346 003e 3B1C     		mov	r3, r7
 347 0040 0E33     		add	r3, r3, #14
 348 0042 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 15


 349 0044 1A70     		strb	r2, [r3]
 350 0046 3FE0     		b	.L16
 351              	.L15:
 444:.\Generated_Source\PSoC4/CyLib.c ****             }
 445:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 352              		.loc 1 445 0
 353 0048 554B     		ldr	r3, .L25+12
 354 004a 1B78     		ldrb	r3, [r3]
 355 004c DBB2     		uxtb	r3, r3
 356 004e 1A1C     		mov	r2, r3
 357 0050 7B68     		ldr	r3, [r7, #4]
 358 0052 9A42     		cmp	r2, r3
 359 0054 0AD3     		bcc	.L17
 446:.\Generated_Source\PSoC4/CyLib.c ****             {
 447:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 360              		.loc 1 447 0
 361 0056 534A     		ldr	r2, .L25+16
 362 0058 3B1C     		mov	r3, r7
 363 005a 0F33     		add	r3, r3, #15
 364 005c 1278     		ldrb	r2, [r2]
 365 005e 1A70     		strb	r2, [r3]
 448:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 366              		.loc 1 448 0
 367 0060 514A     		ldr	r2, .L25+20
 368 0062 3B1C     		mov	r3, r7
 369 0064 0E33     		add	r3, r3, #14
 370 0066 1278     		ldrb	r2, [r2]
 371 0068 1A70     		strb	r2, [r3]
 372 006a 2DE0     		b	.L16
 373              	.L17:
 449:.\Generated_Source\PSoC4/CyLib.c ****             }
 450:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 374              		.loc 1 450 0
 375 006c 4F4B     		ldr	r3, .L25+24
 376 006e 1B78     		ldrb	r3, [r3]
 377 0070 DBB2     		uxtb	r3, r3
 378 0072 1A1C     		mov	r2, r3
 379 0074 7B68     		ldr	r3, [r7, #4]
 380 0076 9A42     		cmp	r2, r3
 381 0078 0AD3     		bcc	.L18
 451:.\Generated_Source\PSoC4/CyLib.c ****             {
 452:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 382              		.loc 1 452 0
 383 007a 4D4A     		ldr	r2, .L25+28
 384 007c 3B1C     		mov	r3, r7
 385 007e 0F33     		add	r3, r3, #15
 386 0080 1278     		ldrb	r2, [r2]
 387 0082 1A70     		strb	r2, [r3]
 453:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 388              		.loc 1 453 0
 389 0084 4B4A     		ldr	r2, .L25+32
 390 0086 3B1C     		mov	r3, r7
 391 0088 0E33     		add	r3, r3, #14
 392 008a 1278     		ldrb	r2, [r2]
 393 008c 1A70     		strb	r2, [r3]
 394 008e 1BE0     		b	.L16
 395              	.L18:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 16


 454:.\Generated_Source\PSoC4/CyLib.c ****             }
 455:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 396              		.loc 1 455 0
 397 0090 494B     		ldr	r3, .L25+36
 398 0092 1B78     		ldrb	r3, [r3]
 399 0094 DBB2     		uxtb	r3, r3
 400 0096 1A1C     		mov	r2, r3
 401 0098 7B68     		ldr	r3, [r7, #4]
 402 009a 9A42     		cmp	r2, r3
 403 009c 0AD3     		bcc	.L19
 456:.\Generated_Source\PSoC4/CyLib.c ****             {
 457:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 404              		.loc 1 457 0
 405 009e 474A     		ldr	r2, .L25+40
 406 00a0 3B1C     		mov	r3, r7
 407 00a2 0F33     		add	r3, r3, #15
 408 00a4 1278     		ldrb	r2, [r2]
 409 00a6 1A70     		strb	r2, [r3]
 458:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 410              		.loc 1 458 0
 411 00a8 454A     		ldr	r2, .L25+44
 412 00aa 3B1C     		mov	r3, r7
 413 00ac 0E33     		add	r3, r3, #14
 414 00ae 1278     		ldrb	r2, [r2]
 415 00b0 1A70     		strb	r2, [r3]
 416 00b2 09E0     		b	.L16
 417              	.L19:
 459:.\Generated_Source\PSoC4/CyLib.c ****             }
 460:.\Generated_Source\PSoC4/CyLib.c ****             else
 461:.\Generated_Source\PSoC4/CyLib.c ****             {
 462:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 418              		.loc 1 462 0
 419 00b4 434A     		ldr	r2, .L25+48
 420 00b6 3B1C     		mov	r3, r7
 421 00b8 0F33     		add	r3, r3, #15
 422 00ba 1278     		ldrb	r2, [r2]
 423 00bc 1A70     		strb	r2, [r3]
 463:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 424              		.loc 1 463 0
 425 00be 424A     		ldr	r2, .L25+52
 426 00c0 3B1C     		mov	r3, r7
 427 00c2 0E33     		add	r3, r3, #14
 428 00c4 1278     		ldrb	r2, [r2]
 429 00c6 1A70     		strb	r2, [r3]
 430              	.L16:
 464:.\Generated_Source\PSoC4/CyLib.c ****             }
 465:.\Generated_Source\PSoC4/CyLib.c **** 
 466:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 467:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 431              		.loc 1 467 0
 432 00c8 7B68     		ldr	r3, [r7, #4]
 433 00ca DA1E     		sub	r2, r3, #3
 434 00cc 3B1C     		mov	r3, r7
 435 00ce 0B33     		add	r3, r3, #11
 436 00d0 3E49     		ldr	r1, .L25+56
 437 00d2 8A5C     		ldrb	r2, [r1, r2]
 438 00d4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 17


 468:.\Generated_Source\PSoC4/CyLib.c **** 
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c ****             /**********************************************`*****************************
 471:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 472:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 473:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 474:.\Generated_Source\PSoC4/CyLib.c ****             *
 475:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 476:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 477:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 478:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 479:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 439              		.loc 1 479 0
 440 00d6 3B1C     		mov	r3, r7
 441 00d8 0B33     		add	r3, r3, #11
 442 00da 1B78     		ldrb	r3, [r3]
 443 00dc 2F2B     		cmp	r3, #47
 444 00de 0DD9     		bls	.L20
 445              		.loc 1 479 0 is_stmt 0 discriminator 1
 446 00e0 7B68     		ldr	r3, [r7, #4]
 447 00e2 2A2B     		cmp	r3, #42
 448 00e4 0AD9     		bls	.L20
 480:.\Generated_Source\PSoC4/CyLib.c ****             {
 481:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 482:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 449              		.loc 1 482 0 is_stmt 1
 450 00e6 3A4B     		ldr	r3, .L25+60
 451 00e8 1922     		mov	r2, #25
 452 00ea 1A60     		str	r2, [r3]
 483:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 484:.\Generated_Source\PSoC4/CyLib.c **** 
 485:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 453              		.loc 1 485 0
 454 00ec 0520     		mov	r0, #5
 455 00ee FFF7FEFF 		bl	CyDelayCycles
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 456              		.loc 1 487 0
 457 00f2 3B1C     		mov	r3, r7
 458 00f4 0D33     		add	r3, r3, #13
 459 00f6 1922     		mov	r2, #25
 460 00f8 1A70     		strb	r2, [r3]
 461 00fa 07E0     		b	.L21
 462              	.L20:
 488:.\Generated_Source\PSoC4/CyLib.c ****             }
 489:.\Generated_Source\PSoC4/CyLib.c ****             else
 490:.\Generated_Source\PSoC4/CyLib.c ****             {
 491:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 463              		.loc 1 491 0
 464 00fc 344B     		ldr	r3, .L25+60
 465 00fe 1B68     		ldr	r3, [r3]
 466 0100 D9B2     		uxtb	r1, r3
 467 0102 3B1C     		mov	r3, r7
 468 0104 0D33     		add	r3, r3, #13
 469 0106 3F22     		mov	r2, #63
 470 0108 0A40     		and	r2, r1
 471 010a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 18


 472              	.L21:
 492:.\Generated_Source\PSoC4/CyLib.c ****             }
 493:.\Generated_Source\PSoC4/CyLib.c **** 
 494:.\Generated_Source\PSoC4/CyLib.c **** 
 495:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 496:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 497:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 498:.\Generated_Source\PSoC4/CyLib.c ****             *
 499:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 500:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 501:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 502:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 503:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 473              		.loc 1 503 0
 474 010c 3A1C     		mov	r2, r7
 475 010e 0B32     		add	r2, r2, #11
 476 0110 3B1C     		mov	r3, r7
 477 0112 0D33     		add	r3, r3, #13
 478 0114 1278     		ldrb	r2, [r2]
 479 0116 1B78     		ldrb	r3, [r3]
 480 0118 9A42     		cmp	r2, r3
 481 011a 08D2     		bcs	.L22
 504:.\Generated_Source\PSoC4/CyLib.c ****             {
 505:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 506:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 482              		.loc 1 506 0
 483 011c 2C4B     		ldr	r3, .L25+60
 484 011e 7A68     		ldr	r2, [r7, #4]
 485 0120 033A     		sub	r2, r2, #3
 486 0122 2A49     		ldr	r1, .L25+56
 487 0124 8A5C     		ldrb	r2, [r1, r2]
 488 0126 1A60     		str	r2, [r3]
 507:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 489              		.loc 1 507 0
 490 0128 0520     		mov	r0, #5
 491 012a FFF7FEFF 		bl	CyDelayCycles
 492              	.L22:
 508:.\Generated_Source\PSoC4/CyLib.c ****             }
 509:.\Generated_Source\PSoC4/CyLib.c **** 
 510:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 511:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 493              		.loc 1 511 0
 494 012e 294B     		ldr	r3, .L25+64
 495 0130 7A68     		ldr	r2, [r7, #4]
 496 0132 2549     		ldr	r1, .L25+52
 497 0134 5218     		add	r2, r2, r1
 498 0136 1278     		ldrb	r2, [r2]
 499 0138 D2B2     		uxtb	r2, r2
 500 013a 1A60     		str	r2, [r3]
 512:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 501              		.loc 1 512 0
 502 013c 264B     		ldr	r3, .L25+68
 503 013e 3A1C     		mov	r2, r7
 504 0140 0F32     		add	r2, r2, #15
 505 0142 1278     		ldrb	r2, [r2]
 506 0144 1A60     		str	r2, [r3]
 513:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 19


 507              		.loc 1 513 0
 508 0146 254B     		ldr	r3, .L25+72
 509 0148 3A1C     		mov	r2, r7
 510 014a 0E32     		add	r2, r2, #14
 511 014c 1278     		ldrb	r2, [r2]
 512 014e 1A60     		str	r2, [r3]
 514:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 513              		.loc 1 514 0
 514 0150 0520     		mov	r0, #5
 515 0152 FFF7FEFF 		bl	CyDelayUs
 515:.\Generated_Source\PSoC4/CyLib.c **** 
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 516              		.loc 1 516 0
 517 0156 3A1C     		mov	r2, r7
 518 0158 0B32     		add	r2, r2, #11
 519 015a 3B1C     		mov	r3, r7
 520 015c 0D33     		add	r3, r3, #13
 521 015e 1278     		ldrb	r2, [r2]
 522 0160 1B78     		ldrb	r3, [r3]
 523 0162 9A42     		cmp	r2, r3
 524 0164 09D9     		bls	.L23
 517:.\Generated_Source\PSoC4/CyLib.c ****             {
 518:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 519:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 525              		.loc 1 519 0
 526 0166 1A4B     		ldr	r3, .L25+60
 527 0168 7A68     		ldr	r2, [r7, #4]
 528 016a 033A     		sub	r2, r2, #3
 529 016c 1749     		ldr	r1, .L25+56
 530 016e 8A5C     		ldrb	r2, [r1, r2]
 531 0170 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 532              		.loc 1 520 0
 533 0172 0520     		mov	r0, #5
 534 0174 FFF7FEFF 		bl	CyDelayCycles
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 535              		.loc 1 516 0
 536 0178 03E0     		b	.L24
 537              	.L23:
 516:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 538              		.loc 1 516 0 is_stmt 0 discriminator 1
 539 017a 02E0     		b	.L24
 540              	.L14:
 521:.\Generated_Source\PSoC4/CyLib.c ****             }
 522:.\Generated_Source\PSoC4/CyLib.c ****         }
 523:.\Generated_Source\PSoC4/CyLib.c ****         else
 524:.\Generated_Source\PSoC4/CyLib.c ****         {
 525:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 526:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 541              		.loc 1 526 0 is_stmt 1 discriminator 1
 542 017c 0020     		mov	r0, #0
 543 017e FFF7FEFF 		bl	CyHalt
 544              	.L24:
 527:.\Generated_Source\PSoC4/CyLib.c ****         }
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 530:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 20


 531:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4100M || CY_PSOC4_4200M)
 532:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 533:.\Generated_Source\PSoC4/CyLib.c ****             {
 534:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 535:.\Generated_Source\PSoC4/CyLib.c ****             }
 536:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* #if (CY_PSOC4_4100M || CY_PSOC4_4200M) */
 537:.\Generated_Source\PSoC4/CyLib.c **** 
 538:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 545              		.loc 1 538 0
 546 0182 3B1C     		mov	r3, r7
 547 0184 0C33     		add	r3, r3, #12
 548 0186 1B78     		ldrb	r3, [r3]
 549 0188 181C     		mov	r0, r3
 550 018a FFF7FEFF 		bl	CyExitCriticalSection
 539:.\Generated_Source\PSoC4/CyLib.c ****     }
 551              		.loc 1 539 0
 552 018e BD46     		mov	sp, r7
 553 0190 05B0     		add	sp, sp, #20
 554              		@ sp needed
 555 0192 90BD     		pop	{r4, r7, pc}
 556              	.L26:
 557              		.align	2
 558              	.L25:
 559 0194 C0F1FF0F 		.word	268431808
 560 0198 C1F1FF0F 		.word	268431809
 561 019c C2F1FF0F 		.word	268431810
 562 01a0 C3F1FF0F 		.word	268431811
 563 01a4 C4F1FF0F 		.word	268431812
 564 01a8 C5F1FF0F 		.word	268431813
 565 01ac C6F1FF0F 		.word	268431814
 566 01b0 C7F1FF0F 		.word	268431815
 567 01b4 C8F1FF0F 		.word	268431816
 568 01b8 C9F1FF0F 		.word	268431817
 569 01bc CAF1FF0F 		.word	268431818
 570 01c0 CBF1FF0F 		.word	268431819
 571 01c4 CCF1FF0F 		.word	268431820
 572 01c8 CDF1FF0F 		.word	268431821
 573 01cc 00000000 		.word	cyImoFreqMhz2Reg
 574 01d0 2CFF0B40 		.word	1074528044
 575 01d4 28FF0B40 		.word	1074528040
 576 01d8 1CFF0B40 		.word	1074528028
 577 01dc 20FF0B40 		.word	1074528032
 578              		.cfi_endproc
 579              	.LFE4:
 580              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 581              		.section	.text.CySysLvdEnable,"ax",%progbits
 582              		.align	2
 583              		.global	CySysLvdEnable
 584              		.code	16
 585              		.thumb_func
 586              		.type	CySysLvdEnable, %function
 587              	CySysLvdEnable:
 588              	.LFB5:
 540:.\Generated_Source\PSoC4/CyLib.c **** 
 541:.\Generated_Source\PSoC4/CyLib.c **** #else
 542:.\Generated_Source\PSoC4/CyLib.c **** 
 543:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 21


 544:.\Generated_Source\PSoC4/CyLib.c ****     {
 545:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 546:.\Generated_Source\PSoC4/CyLib.c **** 
 547:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 548:.\Generated_Source\PSoC4/CyLib.c ****         {
 549:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 550:.\Generated_Source\PSoC4/CyLib.c **** 
 551:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 552:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 553:.\Generated_Source\PSoC4/CyLib.c **** 
 554:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 555:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 556:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 559:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 560:.\Generated_Source\PSoC4/CyLib.c **** 
 561:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 562:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 563:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 566:.\Generated_Source\PSoC4/CyLib.c **** 
 567:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 568:.\Generated_Source\PSoC4/CyLib.c ****             {
 569:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 570:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 571:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 572:.\Generated_Source\PSoC4/CyLib.c **** 
 573:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 574:.\Generated_Source\PSoC4/CyLib.c **** 
 575:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 576:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 577:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 578:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 579:.\Generated_Source\PSoC4/CyLib.c ****             }
 580:.\Generated_Source\PSoC4/CyLib.c **** 
 581:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 582:.\Generated_Source\PSoC4/CyLib.c ****         }
 583:.\Generated_Source\PSoC4/CyLib.c ****         else
 584:.\Generated_Source\PSoC4/CyLib.c ****         {
 585:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 586:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 587:.\Generated_Source\PSoC4/CyLib.c ****         }
 588:.\Generated_Source\PSoC4/CyLib.c ****     }
 589:.\Generated_Source\PSoC4/CyLib.c **** 
 590:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 591:.\Generated_Source\PSoC4/CyLib.c **** 
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 594:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 595:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 596:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 597:.\Generated_Source\PSoC4/CyLib.c ****     *
 598:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 599:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 600:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 22


 601:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 602:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 603:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 604:.\Generated_Source\PSoC4/CyLib.c ****     *
 605:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 606:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 607:.\Generated_Source\PSoC4/CyLib.c ****     *
 608:.\Generated_Source\PSoC4/CyLib.c ****     *
 609:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 610:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 611:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 612:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 613:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 614:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 615:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 616:.\Generated_Source\PSoC4/CyLib.c ****     *
 617:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 618:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 619:.\Generated_Source\PSoC4/CyLib.c ****     *
 620:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 621:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 622:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 623:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 624:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 625:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 626:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 627:.\Generated_Source\PSoC4/CyLib.c ****     *
 628:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 629:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 630:.\Generated_Source\PSoC4/CyLib.c ****     {
 631:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 636:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 637:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 640:.\Generated_Source\PSoC4/CyLib.c ****     }
 641:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 647:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 648:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 649:.\Generated_Source\PSoC4/CyLib.c ****     *
 650:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 651:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 652:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 653:.\Generated_Source\PSoC4/CyLib.c ****     *
 654:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 655:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 656:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 657:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 23


 658:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 659:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 660:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 661:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 662:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 663:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 664:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 665:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 666:.\Generated_Source\PSoC4/CyLib.c ****     *
 667:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 668:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 669:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 670:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 671:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 672:.\Generated_Source\PSoC4/CyLib.c ****     *
 673:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 674:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 675:.\Generated_Source\PSoC4/CyLib.c ****     {
 676:.\Generated_Source\PSoC4/CyLib.c ****         cystatus status = CYRET_SUCCESS;
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the RF oscillator band gap */
 679:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c ****         /* Update trimming register */
 682:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 683:.\Generated_Source\PSoC4/CyLib.c **** 
 684:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the Crystal */
 685:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 686:.\Generated_Source\PSoC4/CyLib.c **** 
 687:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 688:.\Generated_Source\PSoC4/CyLib.c ****         {
 689:.\Generated_Source\PSoC4/CyLib.c ****             status = CYRET_TIMEOUT;
 690:.\Generated_Source\PSoC4/CyLib.c **** 
 691:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 694:.\Generated_Source\PSoC4/CyLib.c **** 
 695:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 696:.\Generated_Source\PSoC4/CyLib.c ****                 {
 697:.\Generated_Source\PSoC4/CyLib.c ****                     status = CYRET_SUCCESS;
 698:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 699:.\Generated_Source\PSoC4/CyLib.c ****                 }
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c **** 
 702:.\Generated_Source\PSoC4/CyLib.c ****         }
 703:.\Generated_Source\PSoC4/CyLib.c **** 
 704:.\Generated_Source\PSoC4/CyLib.c ****         return(status);
 705:.\Generated_Source\PSoC4/CyLib.c ****     }
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c **** 
 708:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 709:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
 710:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 711:.\Generated_Source\PSoC4/CyLib.c ****     *
 712:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 713:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
 714:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 24


 715:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 716:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 717:.\Generated_Source\PSoC4/CyLib.c ****     *
 718:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 719:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 720:.\Generated_Source\PSoC4/CyLib.c ****     *
 721:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 722:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
 723:.\Generated_Source\PSoC4/CyLib.c ****     {
 724:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the RF oscillator band gap */
 725:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c ****         /* Disable the Crystal */
 728:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 729:.\Generated_Source\PSoC4/CyLib.c ****     }
 730:.\Generated_Source\PSoC4/CyLib.c **** 
 731:.\Generated_Source\PSoC4/CyLib.c **** 
 732:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 733:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
 734:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 735:.\Generated_Source\PSoC4/CyLib.c ****     *
 736:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 737:.\Generated_Source\PSoC4/CyLib.c ****     *  Read status bit (50 ppm reached) for the megahertz crystal.
 738:.\Generated_Source\PSoC4/CyLib.c ****     *
 739:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 740:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 741:.\Generated_Source\PSoC4/CyLib.c ****     *
 742:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 743:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that XTAL output reached 50 ppm.
 744:.\Generated_Source\PSoC4/CyLib.c ****     *
 745:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 746:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
 747:.\Generated_Source\PSoC4/CyLib.c ****     {
 748:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT);
 749:.\Generated_Source\PSoC4/CyLib.c ****     }
 750:.\Generated_Source\PSoC4/CyLib.c **** 
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 753:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteEcoDiv
 754:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 755:.\Generated_Source\PSoC4/CyLib.c ****     *
 756:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 757:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects value for the ECO divider.
 758:.\Generated_Source\PSoC4/CyLib.c ****     *
 759:.\Generated_Source\PSoC4/CyLib.c ****     *  The ECO must not be the HFCLK clock source when this function is called.
 760:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK source can be changed to the other clock source by call to the
 761:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
 762:.\Generated_Source\PSoC4/CyLib.c ****     *  function will not have any effect if compiler in release mode, and halt the
 763:.\Generated_Source\PSoC4/CyLib.c ****     *  CPU when compiler in debug mode.
 764:.\Generated_Source\PSoC4/CyLib.c ****     *
 765:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 766:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: Power of 2 divider selection.
 767:.\Generated_Source\PSoC4/CyLib.c ****     *
 768:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 769:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
 770:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
 771:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 25


 772:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
 773:.\Generated_Source\PSoC4/CyLib.c ****     *
 774:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 775:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 776:.\Generated_Source\PSoC4/CyLib.c ****     *
 777:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 778:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 779:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 780:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 781:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 782:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 783:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 784:.\Generated_Source\PSoC4/CyLib.c ****     *
 785:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 786:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteEcoDiv(uint32 divider)
 787:.\Generated_Source\PSoC4/CyLib.c ****     {
 788:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 789:.\Generated_Source\PSoC4/CyLib.c **** 
 790:.\Generated_Source\PSoC4/CyLib.c ****         if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK))
 791:.\Generated_Source\PSoC4/CyLib.c ****         {
 792:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 795:.\Generated_Source\PSoC4/CyLib.c ****                                                   (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint32) ~
 796:.\Generated_Source\PSoC4/CyLib.c **** 
 797:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 798:.\Generated_Source\PSoC4/CyLib.c ****         }
 799:.\Generated_Source\PSoC4/CyLib.c ****         else
 800:.\Generated_Source\PSoC4/CyLib.c ****         {
 801:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if ECO sources HFCLK */
 802:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 803:.\Generated_Source\PSoC4/CyLib.c ****         }
 804:.\Generated_Source\PSoC4/CyLib.c ****     }
 805:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 806:.\Generated_Source\PSoC4/CyLib.c **** 
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c **** 
 809:.\Generated_Source\PSoC4/CyLib.c **** 
 810:.\Generated_Source\PSoC4/CyLib.c **** 
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 815:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
 816:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 817:.\Generated_Source\PSoC4/CyLib.c ****     *
 818:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 819:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
 820:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
 821:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
 822:.\Generated_Source\PSoC4/CyLib.c ****     *
 823:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 824:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
 825:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
 826:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
 827:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
 828:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 26


 829:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
 830:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
 831:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
 832:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
 833:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
 834:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
 835:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
 836:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
 837:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
 838:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
 839:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
 840:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
 841:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
 842:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
 843:.\Generated_Source\PSoC4/CyLib.c ****     *
 844:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 845:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 846:.\Generated_Source\PSoC4/CyLib.c ****     *
 847:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 848:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
 849:.\Generated_Source\PSoC4/CyLib.c ****     {
 589              		.loc 1 849 0
 590              		.cfi_startproc
 591 0000 80B5     		push	{r7, lr}
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 7, -8
 594              		.cfi_offset 14, -4
 595 0002 82B0     		sub	sp, sp, #8
 596              		.cfi_def_cfa_offset 16
 597 0004 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 599 0006 7860     		str	r0, [r7, #4]
 850:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 851:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 600              		.loc 1 851 0
 601 0008 144B     		ldr	r3, .L28
 602 000a 144A     		ldr	r2, .L28
 603 000c 1268     		ldr	r2, [r2]
 604 000e 0221     		mov	r1, #2
 605 0010 8A43     		bic	r2, r1
 606 0012 1A60     		str	r2, [r3]
 852:.\Generated_Source\PSoC4/CyLib.c **** 
 853:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 607              		.loc 1 854 0
 608 0014 124B     		ldr	r3, .L28+4
 609 0016 124A     		ldr	r2, .L28+4
 610 0018 1268     		ldr	r2, [r2]
 611 001a 1E21     		mov	r1, #30
 612 001c 101C     		mov	r0, r2
 613 001e 8843     		bic	r0, r1
 614 0020 011C     		mov	r1, r0
 855:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 615              		.loc 1 855 0
 616 0022 7A68     		ldr	r2, [r7, #4]
 617 0024 5000     		lsl	r0, r2, #1
 618 0026 1E22     		mov	r2, #30
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 27


 619 0028 0240     		and	r2, r0
 854:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 620              		.loc 1 854 0
 621 002a 0A43     		orr	r2, r1
 622 002c 1A60     		str	r2, [r3]
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
 858:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 623              		.loc 1 858 0
 624 002e 0C4B     		ldr	r3, .L28+4
 625 0030 0B4A     		ldr	r2, .L28+4
 626 0032 1268     		ldr	r2, [r2]
 627 0034 0121     		mov	r1, #1
 628 0036 0A43     		orr	r2, r1
 629 0038 1A60     		str	r2, [r3]
 859:.\Generated_Source\PSoC4/CyLib.c **** 
 860:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
 861:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 630              		.loc 1 861 0
 631 003a FA23     		mov	r3, #250
 632 003c 9B00     		lsl	r3, r3, #2
 633 003e 181C     		mov	r0, r3
 634 0040 FFF7FEFF 		bl	CyDelayUs
 862:.\Generated_Source\PSoC4/CyLib.c **** 
 863:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
 864:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 635              		.loc 1 864 0
 636 0044 FFF7FEFF 		bl	CySysLvdClearInterrupt
 865:.\Generated_Source\PSoC4/CyLib.c **** 
 866:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
 867:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 637              		.loc 1 867 0
 638 0048 044B     		ldr	r3, .L28
 639 004a 044A     		ldr	r2, .L28
 640 004c 1268     		ldr	r2, [r2]
 641 004e 0221     		mov	r1, #2
 642 0050 0A43     		orr	r2, r1
 643 0052 1A60     		str	r2, [r3]
 868:.\Generated_Source\PSoC4/CyLib.c ****     }
 644              		.loc 1 868 0
 645 0054 BD46     		mov	sp, r7
 646 0056 02B0     		add	sp, sp, #8
 647              		@ sp needed
 648 0058 80BD     		pop	{r7, pc}
 649              	.L29:
 650 005a C046     		.align	2
 651              	.L28:
 652 005c 08000B40 		.word	1074462728
 653 0060 18000B40 		.word	1074462744
 654              		.cfi_endproc
 655              	.LFE5:
 656              		.size	CySysLvdEnable, .-CySysLvdEnable
 657              		.section	.text.CySysLvdDisable,"ax",%progbits
 658              		.align	2
 659              		.global	CySysLvdDisable
 660              		.code	16
 661              		.thumb_func
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 28


 662              		.type	CySysLvdDisable, %function
 663              	CySysLvdDisable:
 664              	.LFB6:
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c **** 
 871:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 872:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
 873:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 874:.\Generated_Source\PSoC4/CyLib.c ****     *
 875:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 876:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
 877:.\Generated_Source\PSoC4/CyLib.c ****     *
 878:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 879:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 880:.\Generated_Source\PSoC4/CyLib.c ****     *
 881:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 882:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 883:.\Generated_Source\PSoC4/CyLib.c ****     *
 884:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 885:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
 886:.\Generated_Source\PSoC4/CyLib.c ****     {
 665              		.loc 1 886 0
 666              		.cfi_startproc
 667 0000 80B5     		push	{r7, lr}
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 7, -8
 670              		.cfi_offset 14, -4
 671 0002 00AF     		add	r7, sp, #0
 672              		.cfi_def_cfa_register 7
 887:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 673              		.loc 1 887 0
 674 0004 064B     		ldr	r3, .L31
 675 0006 064A     		ldr	r2, .L31
 676 0008 1268     		ldr	r2, [r2]
 677 000a 0221     		mov	r1, #2
 678 000c 8A43     		bic	r2, r1
 679 000e 1A60     		str	r2, [r3]
 888:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 680              		.loc 1 888 0
 681 0010 044B     		ldr	r3, .L31+4
 682 0012 044A     		ldr	r2, .L31+4
 683 0014 1268     		ldr	r2, [r2]
 684 0016 0121     		mov	r1, #1
 685 0018 8A43     		bic	r2, r1
 686 001a 1A60     		str	r2, [r3]
 889:.\Generated_Source\PSoC4/CyLib.c ****     }
 687              		.loc 1 889 0
 688 001c BD46     		mov	sp, r7
 689              		@ sp needed
 690 001e 80BD     		pop	{r7, pc}
 691              	.L32:
 692              		.align	2
 693              	.L31:
 694 0020 08000B40 		.word	1074462728
 695 0024 18000B40 		.word	1074462744
 696              		.cfi_endproc
 697              	.LFE6:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 29


 698              		.size	CySysLvdDisable, .-CySysLvdDisable
 699              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 700              		.align	2
 701              		.global	CySysLvdGetInterruptSource
 702              		.code	16
 703              		.thumb_func
 704              		.type	CySysLvdGetInterruptSource, %function
 705              	CySysLvdGetInterruptSource:
 706              	.LFB7:
 890:.\Generated_Source\PSoC4/CyLib.c **** 
 891:.\Generated_Source\PSoC4/CyLib.c **** 
 892:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
 894:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 895:.\Generated_Source\PSoC4/CyLib.c ****     *
 896:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 897:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
 898:.\Generated_Source\PSoC4/CyLib.c ****     *
 899:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 900:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 901:.\Generated_Source\PSoC4/CyLib.c ****     *
 902:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 903:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
 904:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
 905:.\Generated_Source\PSoC4/CyLib.c ****     *
 906:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 907:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
 908:.\Generated_Source\PSoC4/CyLib.c ****     {
 707              		.loc 1 908 0
 708              		.cfi_startproc
 709 0000 80B5     		push	{r7, lr}
 710              		.cfi_def_cfa_offset 8
 711              		.cfi_offset 7, -8
 712              		.cfi_offset 14, -4
 713 0002 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 909:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 715              		.loc 1 909 0
 716 0004 034B     		ldr	r3, .L35
 717 0006 1A68     		ldr	r2, [r3]
 718 0008 0223     		mov	r3, #2
 719 000a 1340     		and	r3, r2
 910:.\Generated_Source\PSoC4/CyLib.c ****     }
 720              		.loc 1 910 0
 721 000c 181C     		mov	r0, r3
 722 000e BD46     		mov	sp, r7
 723              		@ sp needed
 724 0010 80BD     		pop	{r7, pc}
 725              	.L36:
 726 0012 C046     		.align	2
 727              	.L35:
 728 0014 04000B40 		.word	1074462724
 729              		.cfi_endproc
 730              	.LFE7:
 731              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 732              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 733              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 30


 734              		.global	CySysLvdClearInterrupt
 735              		.code	16
 736              		.thumb_func
 737              		.type	CySysLvdClearInterrupt, %function
 738              	CySysLvdClearInterrupt:
 739              	.LFB8:
 911:.\Generated_Source\PSoC4/CyLib.c **** 
 912:.\Generated_Source\PSoC4/CyLib.c **** 
 913:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 914:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
 915:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 916:.\Generated_Source\PSoC4/CyLib.c ****     *
 917:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 918:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
 919:.\Generated_Source\PSoC4/CyLib.c ****     *
 920:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 921:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 922:.\Generated_Source\PSoC4/CyLib.c ****     *
 923:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 924:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 927:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
 928:.\Generated_Source\PSoC4/CyLib.c ****     {
 740              		.loc 1 928 0
 741              		.cfi_startproc
 742 0000 80B5     		push	{r7, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 00AF     		add	r7, sp, #0
 747              		.cfi_def_cfa_register 7
 929:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 748              		.loc 1 929 0
 749 0004 024B     		ldr	r3, .L38
 750 0006 0222     		mov	r2, #2
 751 0008 1A60     		str	r2, [r3]
 930:.\Generated_Source\PSoC4/CyLib.c ****     }
 752              		.loc 1 930 0
 753 000a BD46     		mov	sp, r7
 754              		@ sp needed
 755 000c 80BD     		pop	{r7, pc}
 756              	.L39:
 757 000e C046     		.align	2
 758              	.L38:
 759 0010 04000B40 		.word	1074462724
 760              		.cfi_endproc
 761              	.LFE8:
 762              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 763              		.section	.text.CySysGetResetReason,"ax",%progbits
 764              		.align	2
 765              		.global	CySysGetResetReason
 766              		.code	16
 767              		.thumb_func
 768              		.type	CySysGetResetReason, %function
 769              	CySysGetResetReason:
 770              	.LFB9:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 31


 931:.\Generated_Source\PSoC4/CyLib.c **** 
 932:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 933:.\Generated_Source\PSoC4/CyLib.c **** 
 934:.\Generated_Source\PSoC4/CyLib.c **** 
 935:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 936:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
 937:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 938:.\Generated_Source\PSoC4/CyLib.c **** *
 939:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 940:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
 941:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
 942:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
 943:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
 944:.\Generated_Source\PSoC4/CyLib.c **** *
 945:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 946:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
 947:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
 948:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
 949:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
 950:.\Generated_Source\PSoC4/CyLib.c **** *
 951:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 952:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
 953:.\Generated_Source\PSoC4/CyLib.c **** *
 954:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 955:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
 956:.\Generated_Source\PSoC4/CyLib.c **** {
 771              		.loc 1 956 0
 772              		.cfi_startproc
 773 0000 80B5     		push	{r7, lr}
 774              		.cfi_def_cfa_offset 8
 775              		.cfi_offset 7, -8
 776              		.cfi_offset 14, -4
 777 0002 84B0     		sub	sp, sp, #16
 778              		.cfi_def_cfa_offset 24
 779 0004 00AF     		add	r7, sp, #0
 780              		.cfi_def_cfa_register 7
 781 0006 7860     		str	r0, [r7, #4]
 957:.\Generated_Source\PSoC4/CyLib.c ****     uint32 status;
 958:.\Generated_Source\PSoC4/CyLib.c **** 
 959:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 782              		.loc 1 959 0
 783 0008 7A68     		ldr	r2, [r7, #4]
 784 000a 1923     		mov	r3, #25
 785 000c 1340     		and	r3, r2
 786 000e 7B60     		str	r3, [r7, #4]
 960:.\Generated_Source\PSoC4/CyLib.c ****     status = CY_SYS_RES_CAUSE_REG &
 787              		.loc 1 960 0
 788 0010 064B     		ldr	r3, .L42
 789 0012 1A68     		ldr	r2, [r3]
 790 0014 1923     		mov	r3, #25
 791 0016 1340     		and	r3, r2
 792 0018 FB60     		str	r3, [r7, #12]
 961:.\Generated_Source\PSoC4/CyLib.c ****              (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 962:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 793              		.loc 1 962 0
 794 001a 044B     		ldr	r3, .L42
 795 001c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 32


 796 001e 1A60     		str	r2, [r3]
 963:.\Generated_Source\PSoC4/CyLib.c **** 
 964:.\Generated_Source\PSoC4/CyLib.c ****     return (status);
 797              		.loc 1 964 0
 798 0020 FB68     		ldr	r3, [r7, #12]
 965:.\Generated_Source\PSoC4/CyLib.c **** }
 799              		.loc 1 965 0
 800 0022 181C     		mov	r0, r3
 801 0024 BD46     		mov	sp, r7
 802 0026 04B0     		add	sp, sp, #16
 803              		@ sp needed
 804 0028 80BD     		pop	{r7, pc}
 805              	.L43:
 806 002a C046     		.align	2
 807              	.L42:
 808 002c 00030B40 		.word	1074463488
 809              		.cfi_endproc
 810              	.LFE9:
 811              		.size	CySysGetResetReason, .-CySysGetResetReason
 812              		.section	.text.CyDisableInts,"ax",%progbits
 813              		.align	2
 814              		.global	CyDisableInts
 815              		.code	16
 816              		.thumb_func
 817              		.type	CyDisableInts, %function
 818              	CyDisableInts:
 819              	.LFB10:
 966:.\Generated_Source\PSoC4/CyLib.c **** 
 967:.\Generated_Source\PSoC4/CyLib.c **** 
 968:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 969:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
 970:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 971:.\Generated_Source\PSoC4/CyLib.c **** *
 972:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 973:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
 974:.\Generated_Source\PSoC4/CyLib.c **** *
 975:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 976:.\Generated_Source\PSoC4/CyLib.c **** *  None
 977:.\Generated_Source\PSoC4/CyLib.c **** *
 978:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 979:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
 980:.\Generated_Source\PSoC4/CyLib.c **** *
 981:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 982:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
 983:.\Generated_Source\PSoC4/CyLib.c **** {
 820              		.loc 1 983 0
 821              		.cfi_startproc
 822 0000 80B5     		push	{r7, lr}
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 82B0     		sub	sp, sp, #8
 827              		.cfi_def_cfa_offset 16
 828 0004 00AF     		add	r7, sp, #0
 829              		.cfi_def_cfa_register 7
 984:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 33


 986:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
 987:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 830              		.loc 1 987 0
 831 0006 064B     		ldr	r3, .L46
 832 0008 1B68     		ldr	r3, [r3]
 833 000a 7B60     		str	r3, [r7, #4]
 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
 990:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 834              		.loc 1 990 0
 835 000c 044B     		ldr	r3, .L46
 836 000e 0122     		mov	r2, #1
 837 0010 5242     		neg	r2, r2
 838 0012 1A60     		str	r2, [r3]
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
 839              		.loc 1 992 0
 840 0014 7B68     		ldr	r3, [r7, #4]
 993:.\Generated_Source\PSoC4/CyLib.c **** }
 841              		.loc 1 993 0
 842 0016 181C     		mov	r0, r3
 843 0018 BD46     		mov	sp, r7
 844 001a 02B0     		add	sp, sp, #8
 845              		@ sp needed
 846 001c 80BD     		pop	{r7, pc}
 847              	.L47:
 848 001e C046     		.align	2
 849              	.L46:
 850 0020 80E100E0 		.word	-536813184
 851              		.cfi_endproc
 852              	.LFE10:
 853              		.size	CyDisableInts, .-CyDisableInts
 854              		.section	.text.CyEnableInts,"ax",%progbits
 855              		.align	2
 856              		.global	CyEnableInts
 857              		.code	16
 858              		.thumb_func
 859              		.type	CyEnableInts, %function
 860              	CyEnableInts:
 861              	.LFB11:
 994:.\Generated_Source\PSoC4/CyLib.c **** 
 995:.\Generated_Source\PSoC4/CyLib.c **** 
 996:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
 998:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c **** *
1000:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1001:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
1002:.\Generated_Source\PSoC4/CyLib.c **** *
1003:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1004:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
1005:.\Generated_Source\PSoC4/CyLib.c **** *
1006:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1007:.\Generated_Source\PSoC4/CyLib.c **** *  None
1008:.\Generated_Source\PSoC4/CyLib.c **** *
1009:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1010:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 34


1011:.\Generated_Source\PSoC4/CyLib.c **** {
 862              		.loc 1 1011 0
 863              		.cfi_startproc
 864 0000 80B5     		push	{r7, lr}
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 7, -8
 867              		.cfi_offset 14, -4
 868 0002 82B0     		sub	sp, sp, #8
 869              		.cfi_def_cfa_offset 16
 870 0004 00AF     		add	r7, sp, #0
 871              		.cfi_def_cfa_register 7
 872 0006 7860     		str	r0, [r7, #4]
1012:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 873              		.loc 1 1012 0
 874 0008 024B     		ldr	r3, .L49
 875 000a 7A68     		ldr	r2, [r7, #4]
 876 000c 1A60     		str	r2, [r3]
1013:.\Generated_Source\PSoC4/CyLib.c **** }
 877              		.loc 1 1013 0
 878 000e BD46     		mov	sp, r7
 879 0010 02B0     		add	sp, sp, #8
 880              		@ sp needed
 881 0012 80BD     		pop	{r7, pc}
 882              	.L50:
 883              		.align	2
 884              	.L49:
 885 0014 00E100E0 		.word	-536813312
 886              		.cfi_endproc
 887              	.LFE11:
 888              		.size	CyEnableInts, .-CyEnableInts
 889              		.section	.text.CyIntSetSysVector,"ax",%progbits
 890              		.align	2
 891              		.global	CyIntSetSysVector
 892              		.code	16
 893              		.thumb_func
 894              		.type	CyIntSetSysVector, %function
 895              	CyIntSetSysVector:
 896              	.LFB12:
1014:.\Generated_Source\PSoC4/CyLib.c **** 
1015:.\Generated_Source\PSoC4/CyLib.c **** 
1016:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1017:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
1018:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c **** *
1020:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1021:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
1022:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
1023:.\Generated_Source\PSoC4/CyLib.c **** *
1024:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1025:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1026:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1027:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1028:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1029:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1030:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1031:.\Generated_Source\PSoC4/CyLib.c **** *
1032:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 35


1033:.\Generated_Source\PSoC4/CyLib.c **** *
1034:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1035:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
1036:.\Generated_Source\PSoC4/CyLib.c **** *
1037:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1038:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
1039:.\Generated_Source\PSoC4/CyLib.c **** {
 897              		.loc 1 1039 0
 898              		.cfi_startproc
 899 0000 80B5     		push	{r7, lr}
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 84B0     		sub	sp, sp, #16
 904              		.cfi_def_cfa_offset 24
 905 0004 00AF     		add	r7, sp, #0
 906              		.cfi_def_cfa_register 7
 907 0006 021C     		mov	r2, r0
 908 0008 3960     		str	r1, [r7]
 909 000a FB1D     		add	r3, r7, #7
 910 000c 1A70     		strb	r2, [r3]
1040:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1041:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 911              		.loc 1 1041 0
 912 000e 8023     		mov	r3, #128
 913 0010 9B05     		lsl	r3, r3, #22
 914 0012 FB60     		str	r3, [r7, #12]
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 915              		.loc 1 1043 0
 916 0014 FB1D     		add	r3, r7, #7
 917 0016 1B78     		ldrb	r3, [r3]
 918 0018 0F2B     		cmp	r3, #15
 919 001a 02D9     		bls	.L52
 920              		.loc 1 1043 0 is_stmt 0 discriminator 1
 921 001c 0020     		mov	r0, #0
 922 001e FFF7FEFF 		bl	CyHalt
 923              	.L52:
1044:.\Generated_Source\PSoC4/CyLib.c **** 
1045:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1046:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 924              		.loc 1 1046 0 is_stmt 1
 925 0022 FB1D     		add	r3, r7, #7
 926 0024 1B78     		ldrb	r3, [r3]
 927 0026 9B00     		lsl	r3, r3, #2
 928 0028 FA68     		ldr	r2, [r7, #12]
 929 002a D318     		add	r3, r2, r3
 930 002c 1B68     		ldr	r3, [r3]
 931 002e BB60     		str	r3, [r7, #8]
1047:.\Generated_Source\PSoC4/CyLib.c **** 
1048:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1049:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 932              		.loc 1 1049 0
 933 0030 FB1D     		add	r3, r7, #7
 934 0032 1B78     		ldrb	r3, [r3]
 935 0034 9B00     		lsl	r3, r3, #2
 936 0036 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 36


 937 0038 D318     		add	r3, r2, r3
 938 003a 3A68     		ldr	r2, [r7]
 939 003c 1A60     		str	r2, [r3]
1050:.\Generated_Source\PSoC4/CyLib.c **** 
1051:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 940              		.loc 1 1051 0
 941 003e BB68     		ldr	r3, [r7, #8]
1052:.\Generated_Source\PSoC4/CyLib.c **** }
 942              		.loc 1 1052 0
 943 0040 181C     		mov	r0, r3
 944 0042 BD46     		mov	sp, r7
 945 0044 04B0     		add	sp, sp, #16
 946              		@ sp needed
 947 0046 80BD     		pop	{r7, pc}
 948              		.cfi_endproc
 949              	.LFE12:
 950              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 951              		.section	.text.CyIntGetSysVector,"ax",%progbits
 952              		.align	2
 953              		.global	CyIntGetSysVector
 954              		.code	16
 955              		.thumb_func
 956              		.type	CyIntGetSysVector, %function
 957              	CyIntGetSysVector:
 958              	.LFB13:
1053:.\Generated_Source\PSoC4/CyLib.c **** 
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1056:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
1057:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1058:.\Generated_Source\PSoC4/CyLib.c **** *
1059:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1060:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
1061:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
1062:.\Generated_Source\PSoC4/CyLib.c **** *
1063:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1064:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
1065:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
1066:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
1067:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
1068:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
1069:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
1070:.\Generated_Source\PSoC4/CyLib.c **** *
1071:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1072:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
1073:.\Generated_Source\PSoC4/CyLib.c **** *
1074:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1075:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
1076:.\Generated_Source\PSoC4/CyLib.c **** {
 959              		.loc 1 1076 0
 960              		.cfi_startproc
 961 0000 80B5     		push	{r7, lr}
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 84B0     		sub	sp, sp, #16
 966              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 37


 967 0004 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
 969 0006 021C     		mov	r2, r0
 970 0008 FB1D     		add	r3, r7, #7
 971 000a 1A70     		strb	r2, [r3]
1077:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 972              		.loc 1 1077 0
 973 000c 8023     		mov	r3, #128
 974 000e 9B05     		lsl	r3, r3, #22
 975 0010 FB60     		str	r3, [r7, #12]
1078:.\Generated_Source\PSoC4/CyLib.c **** 
1079:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 976              		.loc 1 1079 0
 977 0012 FB1D     		add	r3, r7, #7
 978 0014 1B78     		ldrb	r3, [r3]
 979 0016 0F2B     		cmp	r3, #15
 980 0018 02D9     		bls	.L55
 981              		.loc 1 1079 0 is_stmt 0 discriminator 1
 982 001a 0020     		mov	r0, #0
 983 001c FFF7FEFF 		bl	CyHalt
 984              	.L55:
1080:.\Generated_Source\PSoC4/CyLib.c **** 
1081:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 985              		.loc 1 1081 0 is_stmt 1
 986 0020 FB1D     		add	r3, r7, #7
 987 0022 1B78     		ldrb	r3, [r3]
 988 0024 9B00     		lsl	r3, r3, #2
 989 0026 FA68     		ldr	r2, [r7, #12]
 990 0028 D318     		add	r3, r2, r3
 991 002a 1B68     		ldr	r3, [r3]
1082:.\Generated_Source\PSoC4/CyLib.c **** }
 992              		.loc 1 1082 0
 993 002c 181C     		mov	r0, r3
 994 002e BD46     		mov	sp, r7
 995 0030 04B0     		add	sp, sp, #16
 996              		@ sp needed
 997 0032 80BD     		pop	{r7, pc}
 998              		.cfi_endproc
 999              	.LFE13:
 1000              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1001              		.section	.text.CyIntSetVector,"ax",%progbits
 1002              		.align	2
 1003              		.global	CyIntSetVector
 1004              		.code	16
 1005              		.thumb_func
 1006              		.type	CyIntSetVector, %function
 1007              	CyIntSetVector:
 1008              	.LFB14:
1083:.\Generated_Source\PSoC4/CyLib.c **** 
1084:.\Generated_Source\PSoC4/CyLib.c **** 
1085:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1086:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
1087:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1088:.\Generated_Source\PSoC4/CyLib.c **** *
1089:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1090:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
1091:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 38


1092:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1093:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1094:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
1095:.\Generated_Source\PSoC4/CyLib.c **** *
1096:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1097:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
1098:.\Generated_Source\PSoC4/CyLib.c **** *
1099:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1100:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
1101:.\Generated_Source\PSoC4/CyLib.c **** {
 1009              		.loc 1 1101 0
 1010              		.cfi_startproc
 1011 0000 80B5     		push	{r7, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 0002 84B0     		sub	sp, sp, #16
 1016              		.cfi_def_cfa_offset 24
 1017 0004 00AF     		add	r7, sp, #0
 1018              		.cfi_def_cfa_register 7
 1019 0006 021C     		mov	r2, r0
 1020 0008 3960     		str	r1, [r7]
 1021 000a FB1D     		add	r3, r7, #7
 1022 000c 1A70     		strb	r2, [r3]
1102:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
1103:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1023              		.loc 1 1103 0
 1024 000e 8023     		mov	r3, #128
 1025 0010 9B05     		lsl	r3, r3, #22
 1026 0012 FB60     		str	r3, [r7, #12]
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1027              		.loc 1 1105 0
 1028 0014 FB1D     		add	r3, r7, #7
 1029 0016 1B78     		ldrb	r3, [r3]
 1030 0018 1F2B     		cmp	r3, #31
 1031 001a 02D9     		bls	.L58
 1032              		.loc 1 1105 0 is_stmt 0 discriminator 1
 1033 001c 0020     		mov	r0, #0
 1034 001e FFF7FEFF 		bl	CyHalt
 1035              	.L58:
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
1108:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1036              		.loc 1 1108 0 is_stmt 1
 1037 0022 FB1D     		add	r3, r7, #7
 1038 0024 1B78     		ldrb	r3, [r3]
 1039 0026 1033     		add	r3, r3, #16
 1040 0028 9B00     		lsl	r3, r3, #2
 1041 002a FA68     		ldr	r2, [r7, #12]
 1042 002c D318     		add	r3, r2, r3
 1043 002e 1B68     		ldr	r3, [r3]
 1044 0030 BB60     		str	r3, [r7, #8]
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
1111:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1045              		.loc 1 1111 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 39


 1046 0032 FB1D     		add	r3, r7, #7
 1047 0034 1B78     		ldrb	r3, [r3]
 1048 0036 1033     		add	r3, r3, #16
 1049 0038 9B00     		lsl	r3, r3, #2
 1050 003a FA68     		ldr	r2, [r7, #12]
 1051 003c D318     		add	r3, r2, r3
 1052 003e 3A68     		ldr	r2, [r7]
 1053 0040 1A60     		str	r2, [r3]
1112:.\Generated_Source\PSoC4/CyLib.c **** 
1113:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1054              		.loc 1 1113 0
 1055 0042 BB68     		ldr	r3, [r7, #8]
1114:.\Generated_Source\PSoC4/CyLib.c **** }
 1056              		.loc 1 1114 0
 1057 0044 181C     		mov	r0, r3
 1058 0046 BD46     		mov	sp, r7
 1059 0048 04B0     		add	sp, sp, #16
 1060              		@ sp needed
 1061 004a 80BD     		pop	{r7, pc}
 1062              		.cfi_endproc
 1063              	.LFE14:
 1064              		.size	CyIntSetVector, .-CyIntSetVector
 1065              		.section	.text.CyIntGetVector,"ax",%progbits
 1066              		.align	2
 1067              		.global	CyIntGetVector
 1068              		.code	16
 1069              		.thumb_func
 1070              		.type	CyIntGetVector, %function
 1071              	CyIntGetVector:
 1072              	.LFB15:
1115:.\Generated_Source\PSoC4/CyLib.c **** 
1116:.\Generated_Source\PSoC4/CyLib.c **** 
1117:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1118:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
1119:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1120:.\Generated_Source\PSoC4/CyLib.c **** *
1121:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1122:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
1123:.\Generated_Source\PSoC4/CyLib.c **** *
1124:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1125:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1126:.\Generated_Source\PSoC4/CyLib.c **** *
1127:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1128:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
1129:.\Generated_Source\PSoC4/CyLib.c **** *
1130:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1131:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
1132:.\Generated_Source\PSoC4/CyLib.c **** {
 1073              		.loc 1 1132 0
 1074              		.cfi_startproc
 1075 0000 80B5     		push	{r7, lr}
 1076              		.cfi_def_cfa_offset 8
 1077              		.cfi_offset 7, -8
 1078              		.cfi_offset 14, -4
 1079 0002 84B0     		sub	sp, sp, #16
 1080              		.cfi_def_cfa_offset 24
 1081 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 40


 1082              		.cfi_def_cfa_register 7
 1083 0006 021C     		mov	r2, r0
 1084 0008 FB1D     		add	r3, r7, #7
 1085 000a 1A70     		strb	r2, [r3]
1133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1086              		.loc 1 1133 0
 1087 000c 8023     		mov	r3, #128
 1088 000e 9B05     		lsl	r3, r3, #22
 1089 0010 FB60     		str	r3, [r7, #12]
1134:.\Generated_Source\PSoC4/CyLib.c **** 
1135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1090              		.loc 1 1135 0
 1091 0012 FB1D     		add	r3, r7, #7
 1092 0014 1B78     		ldrb	r3, [r3]
 1093 0016 1F2B     		cmp	r3, #31
 1094 0018 02D9     		bls	.L61
 1095              		.loc 1 1135 0 is_stmt 0 discriminator 1
 1096 001a 0020     		mov	r0, #0
 1097 001c FFF7FEFF 		bl	CyHalt
 1098              	.L61:
1136:.\Generated_Source\PSoC4/CyLib.c **** 
1137:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1099              		.loc 1 1137 0 is_stmt 1
 1100 0020 FB1D     		add	r3, r7, #7
 1101 0022 1B78     		ldrb	r3, [r3]
 1102 0024 1033     		add	r3, r3, #16
 1103 0026 9B00     		lsl	r3, r3, #2
 1104 0028 FA68     		ldr	r2, [r7, #12]
 1105 002a D318     		add	r3, r2, r3
 1106 002c 1B68     		ldr	r3, [r3]
1138:.\Generated_Source\PSoC4/CyLib.c **** }
 1107              		.loc 1 1138 0
 1108 002e 181C     		mov	r0, r3
 1109 0030 BD46     		mov	sp, r7
 1110 0032 04B0     		add	sp, sp, #16
 1111              		@ sp needed
 1112 0034 80BD     		pop	{r7, pc}
 1113              		.cfi_endproc
 1114              	.LFE15:
 1115              		.size	CyIntGetVector, .-CyIntGetVector
 1116              		.section	.text.CyIntSetPriority,"ax",%progbits
 1117              		.align	2
 1118              		.global	CyIntSetPriority
 1119              		.code	16
 1120              		.thumb_func
 1121              		.type	CyIntSetPriority, %function
 1122              	CyIntSetPriority:
 1123              	.LFB16:
1139:.\Generated_Source\PSoC4/CyLib.c **** 
1140:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
1142:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/CyLib.c **** *
1144:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1145:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
1146:.\Generated_Source\PSoC4/CyLib.c **** *
1147:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 41


1148:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
1149:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1150:.\Generated_Source\PSoC4/CyLib.c **** *
1151:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1152:.\Generated_Source\PSoC4/CyLib.c **** *  None
1153:.\Generated_Source\PSoC4/CyLib.c **** *
1154:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1155:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
1156:.\Generated_Source\PSoC4/CyLib.c **** {
 1124              		.loc 1 1156 0
 1125              		.cfi_startproc
 1126 0000 90B5     		push	{r4, r7, lr}
 1127              		.cfi_def_cfa_offset 12
 1128              		.cfi_offset 4, -12
 1129              		.cfi_offset 7, -8
 1130              		.cfi_offset 14, -4
 1131 0002 87B0     		sub	sp, sp, #28
 1132              		.cfi_def_cfa_offset 40
 1133 0004 00AF     		add	r7, sp, #0
 1134              		.cfi_def_cfa_register 7
 1135 0006 0A1C     		mov	r2, r1
 1136 0008 FB1D     		add	r3, r7, #7
 1137 000a 011C     		add	r1, r0, #0
 1138 000c 1970     		strb	r1, [r3]
 1139 000e BB1D     		add	r3, r7, #6
 1140 0010 1A70     		strb	r2, [r3]
1157:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
1158:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
1159:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
1160:.\Generated_Source\PSoC4/CyLib.c **** 
1161:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1141              		.loc 1 1161 0
 1142 0012 BB1D     		add	r3, r7, #6
 1143 0014 1B78     		ldrb	r3, [r3]
 1144 0016 032B     		cmp	r3, #3
 1145 0018 02D9     		bls	.L64
 1146              		.loc 1 1161 0 is_stmt 0 discriminator 1
 1147 001a 0020     		mov	r0, #0
 1148 001c FFF7FEFF 		bl	CyHalt
 1149              	.L64:
1162:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1150              		.loc 1 1162 0 is_stmt 1
 1151 0020 FB1D     		add	r3, r7, #7
 1152 0022 1B78     		ldrb	r3, [r3]
 1153 0024 1F2B     		cmp	r3, #31
 1154 0026 02D9     		bls	.L65
 1155              		.loc 1 1162 0 is_stmt 0 discriminator 1
 1156 0028 0020     		mov	r0, #0
 1157 002a FFF7FEFF 		bl	CyHalt
 1158              	.L65:
1163:.\Generated_Source\PSoC4/CyLib.c **** 
1164:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1159              		.loc 1 1164 0 is_stmt 1
 1160 002e FB1D     		add	r3, r7, #7
 1161 0030 1A78     		ldrb	r2, [r3]
 1162 0032 0323     		mov	r3, #3
 1163 0034 1340     		and	r3, r2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 42


 1164 0036 DB00     		lsl	r3, r3, #3
 1165 0038 0633     		add	r3, r3, #6
 1166 003a 7B61     		str	r3, [r7, #20]
1165:.\Generated_Source\PSoC4/CyLib.c **** 
1166:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1167              		.loc 1 1166 0
 1168 003c 3C1C     		mov	r4, r7
 1169 003e 1334     		add	r4, r4, #19
 1170 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1171 0044 031C     		mov	r3, r0
 1172 0046 2370     		strb	r3, [r4]
1167:.\Generated_Source\PSoC4/CyLib.c **** 
1168:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1173              		.loc 1 1168 0
 1174 0048 FB1D     		add	r3, r7, #7
 1175 004a 1B78     		ldrb	r3, [r3]
 1176 004c 9B08     		lsr	r3, r3, #2
 1177 004e DBB2     		uxtb	r3, r3
 1178 0050 9B00     		lsl	r3, r3, #2
 1179 0052 1449     		ldr	r1, .L66
 1180 0054 5B18     		add	r3, r3, r1
 1181 0056 1B68     		ldr	r3, [r3]
 1182 0058 FB60     		str	r3, [r7, #12]
1169:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1183              		.loc 1 1169 0
 1184 005a 7B69     		ldr	r3, [r7, #20]
 1185 005c 0322     		mov	r2, #3
 1186 005e 111C     		mov	r1, r2
 1187 0060 9940     		lsl	r1, r1, r3
 1188 0062 0B1C     		mov	r3, r1
 1189 0064 DA43     		mvn	r2, r3
 1190 0066 FB68     		ldr	r3, [r7, #12]
 1191 0068 1340     		and	r3, r2
 1192 006a FB60     		str	r3, [r7, #12]
1170:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1193              		.loc 1 1170 0
 1194 006c BB1D     		add	r3, r7, #6
 1195 006e 1A78     		ldrb	r2, [r3]
 1196 0070 7B69     		ldr	r3, [r7, #20]
 1197 0072 111C     		mov	r1, r2
 1198 0074 9940     		lsl	r1, r1, r3
 1199 0076 0B1C     		mov	r3, r1
 1200 0078 FA68     		ldr	r2, [r7, #12]
 1201 007a 1343     		orr	r3, r2
 1202 007c FB60     		str	r3, [r7, #12]
1171:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1203              		.loc 1 1171 0
 1204 007e FB1D     		add	r3, r7, #7
 1205 0080 1B78     		ldrb	r3, [r3]
 1206 0082 9B08     		lsr	r3, r3, #2
 1207 0084 DBB2     		uxtb	r3, r3
 1208 0086 9B00     		lsl	r3, r3, #2
 1209 0088 064A     		ldr	r2, .L66
 1210 008a 9B18     		add	r3, r3, r2
 1211 008c FA68     		ldr	r2, [r7, #12]
 1212 008e 1A60     		str	r2, [r3]
1172:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 43


1173:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1213              		.loc 1 1173 0
 1214 0090 3B1C     		mov	r3, r7
 1215 0092 1333     		add	r3, r3, #19
 1216 0094 1B78     		ldrb	r3, [r3]
 1217 0096 181C     		mov	r0, r3
 1218 0098 FFF7FEFF 		bl	CyExitCriticalSection
1174:.\Generated_Source\PSoC4/CyLib.c **** }
 1219              		.loc 1 1174 0
 1220 009c BD46     		mov	sp, r7
 1221 009e 07B0     		add	sp, sp, #28
 1222              		@ sp needed
 1223 00a0 90BD     		pop	{r4, r7, pc}
 1224              	.L67:
 1225 00a2 C046     		.align	2
 1226              	.L66:
 1227 00a4 00E400E0 		.word	-536812544
 1228              		.cfi_endproc
 1229              	.LFE16:
 1230              		.size	CyIntSetPriority, .-CyIntSetPriority
 1231              		.section	.text.CyIntGetPriority,"ax",%progbits
 1232              		.align	2
 1233              		.global	CyIntGetPriority
 1234              		.code	16
 1235              		.thumb_func
 1236              		.type	CyIntGetPriority, %function
 1237              	CyIntGetPriority:
 1238              	.LFB17:
1175:.\Generated_Source\PSoC4/CyLib.c **** 
1176:.\Generated_Source\PSoC4/CyLib.c **** 
1177:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1178:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
1179:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1180:.\Generated_Source\PSoC4/CyLib.c **** *
1181:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1182:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
1183:.\Generated_Source\PSoC4/CyLib.c **** *
1184:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1185:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
1186:.\Generated_Source\PSoC4/CyLib.c **** *
1187:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1188:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
1189:.\Generated_Source\PSoC4/CyLib.c **** *
1190:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
1192:.\Generated_Source\PSoC4/CyLib.c **** {
 1239              		.loc 1 1192 0
 1240              		.cfi_startproc
 1241 0000 80B5     		push	{r7, lr}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 7, -8
 1244              		.cfi_offset 14, -4
 1245 0002 84B0     		sub	sp, sp, #16
 1246              		.cfi_def_cfa_offset 24
 1247 0004 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
 1249 0006 021C     		mov	r2, r0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 44


 1250 0008 FB1D     		add	r3, r7, #7
 1251 000a 1A70     		strb	r2, [r3]
1193:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1252              		.loc 1 1195 0
 1253 000c FB1D     		add	r3, r7, #7
 1254 000e 1B78     		ldrb	r3, [r3]
 1255 0010 1F2B     		cmp	r3, #31
 1256 0012 02D9     		bls	.L69
 1257              		.loc 1 1195 0 is_stmt 0 discriminator 1
 1258 0014 0020     		mov	r0, #0
 1259 0016 FFF7FEFF 		bl	CyHalt
 1260              	.L69:
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 1261              		.loc 1 1197 0 is_stmt 1
 1262 001a FB1D     		add	r3, r7, #7
 1263 001c 1B78     		ldrb	r3, [r3]
 1264 001e 9B08     		lsr	r3, r3, #2
 1265 0020 DBB2     		uxtb	r3, r3
 1266 0022 9B00     		lsl	r3, r3, #2
 1267 0024 0B4A     		ldr	r2, .L71
 1268 0026 9B18     		add	r3, r3, r2
 1269 0028 1A68     		ldr	r2, [r3]
 1270 002a FB1D     		add	r3, r7, #7
 1271 002c 1978     		ldrb	r1, [r3]
 1272 002e 0323     		mov	r3, #3
 1273 0030 0B40     		and	r3, r1
 1274 0032 DB00     		lsl	r3, r3, #3
 1275 0034 0633     		add	r3, r3, #6
 1276 0036 DA40     		lsr	r2, r2, r3
 1277 0038 3B1C     		mov	r3, r7
 1278 003a 0F33     		add	r3, r3, #15
 1279 003c 1A70     		strb	r2, [r3]
1198:.\Generated_Source\PSoC4/CyLib.c **** 
1199:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1280              		.loc 1 1199 0
 1281 003e 3B1C     		mov	r3, r7
 1282 0040 0F33     		add	r3, r3, #15
 1283 0042 1A78     		ldrb	r2, [r3]
 1284 0044 0323     		mov	r3, #3
 1285 0046 1340     		and	r3, r2
 1286 0048 DBB2     		uxtb	r3, r3
1200:.\Generated_Source\PSoC4/CyLib.c **** }
 1287              		.loc 1 1200 0
 1288 004a 181C     		mov	r0, r3
 1289 004c BD46     		mov	sp, r7
 1290 004e 04B0     		add	sp, sp, #16
 1291              		@ sp needed
 1292 0050 80BD     		pop	{r7, pc}
 1293              	.L72:
 1294 0052 C046     		.align	2
 1295              	.L71:
 1296 0054 00E400E0 		.word	-536812544
 1297              		.cfi_endproc
 1298              	.LFE17:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 45


 1299              		.size	CyIntGetPriority, .-CyIntGetPriority
 1300              		.section	.text.CyIntEnable,"ax",%progbits
 1301              		.align	2
 1302              		.global	CyIntEnable
 1303              		.code	16
 1304              		.thumb_func
 1305              		.type	CyIntEnable, %function
 1306              	CyIntEnable:
 1307              	.LFB18:
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
1205:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/CyLib.c **** *
1207:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1208:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
1209:.\Generated_Source\PSoC4/CyLib.c **** *
1210:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1211:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
1212:.\Generated_Source\PSoC4/CyLib.c **** *
1213:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1214:.\Generated_Source\PSoC4/CyLib.c **** *  None
1215:.\Generated_Source\PSoC4/CyLib.c **** *
1216:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1217:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
1218:.\Generated_Source\PSoC4/CyLib.c **** {
 1308              		.loc 1 1218 0
 1309              		.cfi_startproc
 1310 0000 80B5     		push	{r7, lr}
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 82B0     		sub	sp, sp, #8
 1315              		.cfi_def_cfa_offset 16
 1316 0004 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 1318 0006 021C     		mov	r2, r0
 1319 0008 FB1D     		add	r3, r7, #7
 1320 000a 1A70     		strb	r2, [r3]
1219:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1321              		.loc 1 1219 0
 1322 000c 064B     		ldr	r3, .L74
 1323 000e FA1D     		add	r2, r7, #7
 1324 0010 1178     		ldrb	r1, [r2]
 1325 0012 1F22     		mov	r2, #31
 1326 0014 0A40     		and	r2, r1
 1327 0016 0121     		mov	r1, #1
 1328 0018 081C     		mov	r0, r1
 1329 001a 9040     		lsl	r0, r0, r2
 1330 001c 021C     		mov	r2, r0
 1331 001e 1A60     		str	r2, [r3]
1220:.\Generated_Source\PSoC4/CyLib.c **** }
 1332              		.loc 1 1220 0
 1333 0020 BD46     		mov	sp, r7
 1334 0022 02B0     		add	sp, sp, #8
 1335              		@ sp needed
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 46


 1336 0024 80BD     		pop	{r7, pc}
 1337              	.L75:
 1338 0026 C046     		.align	2
 1339              	.L74:
 1340 0028 00E100E0 		.word	-536813312
 1341              		.cfi_endproc
 1342              	.LFE18:
 1343              		.size	CyIntEnable, .-CyIntEnable
 1344              		.section	.text.CyIntGetState,"ax",%progbits
 1345              		.align	2
 1346              		.global	CyIntGetState
 1347              		.code	16
 1348              		.thumb_func
 1349              		.type	CyIntGetState, %function
 1350              	CyIntGetState:
 1351              	.LFB19:
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
1225:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c **** *
1227:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
1229:.\Generated_Source\PSoC4/CyLib.c **** *
1230:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1231:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1232:.\Generated_Source\PSoC4/CyLib.c **** *
1233:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1234:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
1235:.\Generated_Source\PSoC4/CyLib.c **** *
1236:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1237:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
1238:.\Generated_Source\PSoC4/CyLib.c **** {
 1352              		.loc 1 1238 0
 1353              		.cfi_startproc
 1354 0000 80B5     		push	{r7, lr}
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 82B0     		sub	sp, sp, #8
 1359              		.cfi_def_cfa_offset 16
 1360 0004 00AF     		add	r7, sp, #0
 1361              		.cfi_def_cfa_register 7
 1362 0006 021C     		mov	r2, r0
 1363 0008 FB1D     		add	r3, r7, #7
 1364 000a 1A70     		strb	r2, [r3]
1239:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
1240:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1365              		.loc 1 1240 0
 1366 000c 084B     		ldr	r3, .L78
 1367 000e 1A68     		ldr	r2, [r3]
 1368 0010 FB1D     		add	r3, r7, #7
 1369 0012 1978     		ldrb	r1, [r3]
 1370 0014 1F23     		mov	r3, #31
 1371 0016 0B40     		and	r3, r1
 1372 0018 111C     		mov	r1, r2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 47


 1373 001a D940     		lsr	r1, r1, r3
 1374 001c 0B1C     		mov	r3, r1
 1375 001e DAB2     		uxtb	r2, r3
 1376 0020 0123     		mov	r3, #1
 1377 0022 1340     		and	r3, r2
 1378 0024 DBB2     		uxtb	r3, r3
1241:.\Generated_Source\PSoC4/CyLib.c **** }
 1379              		.loc 1 1241 0
 1380 0026 181C     		mov	r0, r3
 1381 0028 BD46     		mov	sp, r7
 1382 002a 02B0     		add	sp, sp, #8
 1383              		@ sp needed
 1384 002c 80BD     		pop	{r7, pc}
 1385              	.L79:
 1386 002e C046     		.align	2
 1387              	.L78:
 1388 0030 00E100E0 		.word	-536813312
 1389              		.cfi_endproc
 1390              	.LFE19:
 1391              		.size	CyIntGetState, .-CyIntGetState
 1392              		.section	.text.CyIntDisable,"ax",%progbits
 1393              		.align	2
 1394              		.global	CyIntDisable
 1395              		.code	16
 1396              		.thumb_func
 1397              		.type	CyIntDisable, %function
 1398              	CyIntDisable:
 1399              	.LFB20:
1242:.\Generated_Source\PSoC4/CyLib.c **** 
1243:.\Generated_Source\PSoC4/CyLib.c **** 
1244:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1245:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
1246:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1247:.\Generated_Source\PSoC4/CyLib.c **** *
1248:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1249:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
1250:.\Generated_Source\PSoC4/CyLib.c **** *
1251:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1252:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
1253:.\Generated_Source\PSoC4/CyLib.c **** *
1254:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1255:.\Generated_Source\PSoC4/CyLib.c **** *  None
1256:.\Generated_Source\PSoC4/CyLib.c **** *
1257:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1258:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
1259:.\Generated_Source\PSoC4/CyLib.c **** {
 1400              		.loc 1 1259 0
 1401              		.cfi_startproc
 1402 0000 80B5     		push	{r7, lr}
 1403              		.cfi_def_cfa_offset 8
 1404              		.cfi_offset 7, -8
 1405              		.cfi_offset 14, -4
 1406 0002 82B0     		sub	sp, sp, #8
 1407              		.cfi_def_cfa_offset 16
 1408 0004 00AF     		add	r7, sp, #0
 1409              		.cfi_def_cfa_register 7
 1410 0006 021C     		mov	r2, r0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 48


 1411 0008 FB1D     		add	r3, r7, #7
 1412 000a 1A70     		strb	r2, [r3]
1260:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1413              		.loc 1 1260 0
 1414 000c 064B     		ldr	r3, .L81
 1415 000e FA1D     		add	r2, r7, #7
 1416 0010 1178     		ldrb	r1, [r2]
 1417 0012 1F22     		mov	r2, #31
 1418 0014 0A40     		and	r2, r1
 1419 0016 0121     		mov	r1, #1
 1420 0018 081C     		mov	r0, r1
 1421 001a 9040     		lsl	r0, r0, r2
 1422 001c 021C     		mov	r2, r0
 1423 001e 1A60     		str	r2, [r3]
1261:.\Generated_Source\PSoC4/CyLib.c **** }
 1424              		.loc 1 1261 0
 1425 0020 BD46     		mov	sp, r7
 1426 0022 02B0     		add	sp, sp, #8
 1427              		@ sp needed
 1428 0024 80BD     		pop	{r7, pc}
 1429              	.L82:
 1430 0026 C046     		.align	2
 1431              	.L81:
 1432 0028 80E100E0 		.word	-536813184
 1433              		.cfi_endproc
 1434              	.LFE20:
 1435              		.size	CyIntDisable, .-CyIntDisable
 1436              		.section	.text.CyIntSetPending,"ax",%progbits
 1437              		.align	2
 1438              		.global	CyIntSetPending
 1439              		.code	16
 1440              		.thumb_func
 1441              		.type	CyIntSetPending, %function
 1442              	CyIntSetPending:
 1443              	.LFB21:
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
1265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1266:.\Generated_Source\PSoC4/CyLib.c **** *
1267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1268:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
1269:.\Generated_Source\PSoC4/CyLib.c **** *
1270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1272:.\Generated_Source\PSoC4/CyLib.c **** *
1273:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1274:.\Generated_Source\PSoC4/CyLib.c **** *  None
1275:.\Generated_Source\PSoC4/CyLib.c **** *
1276:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1277:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
1278:.\Generated_Source\PSoC4/CyLib.c **** {
 1444              		.loc 1 1278 0
 1445              		.cfi_startproc
 1446 0000 80B5     		push	{r7, lr}
 1447              		.cfi_def_cfa_offset 8
 1448              		.cfi_offset 7, -8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 49


 1449              		.cfi_offset 14, -4
 1450 0002 82B0     		sub	sp, sp, #8
 1451              		.cfi_def_cfa_offset 16
 1452 0004 00AF     		add	r7, sp, #0
 1453              		.cfi_def_cfa_register 7
 1454 0006 021C     		mov	r2, r0
 1455 0008 FB1D     		add	r3, r7, #7
 1456 000a 1A70     		strb	r2, [r3]
1279:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1457              		.loc 1 1279 0
 1458 000c 064B     		ldr	r3, .L84
 1459 000e FA1D     		add	r2, r7, #7
 1460 0010 1178     		ldrb	r1, [r2]
 1461 0012 1F22     		mov	r2, #31
 1462 0014 0A40     		and	r2, r1
 1463 0016 0121     		mov	r1, #1
 1464 0018 081C     		mov	r0, r1
 1465 001a 9040     		lsl	r0, r0, r2
 1466 001c 021C     		mov	r2, r0
 1467 001e 1A60     		str	r2, [r3]
1280:.\Generated_Source\PSoC4/CyLib.c **** }
 1468              		.loc 1 1280 0
 1469 0020 BD46     		mov	sp, r7
 1470 0022 02B0     		add	sp, sp, #8
 1471              		@ sp needed
 1472 0024 80BD     		pop	{r7, pc}
 1473              	.L85:
 1474 0026 C046     		.align	2
 1475              	.L84:
 1476 0028 00E200E0 		.word	-536813056
 1477              		.cfi_endproc
 1478              	.LFE21:
 1479              		.size	CyIntSetPending, .-CyIntSetPending
 1480              		.section	.text.CyIntClearPending,"ax",%progbits
 1481              		.align	2
 1482              		.global	CyIntClearPending
 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	CyIntClearPending, %function
 1486              	CyIntClearPending:
 1487              	.LFB22:
1281:.\Generated_Source\PSoC4/CyLib.c **** 
1282:.\Generated_Source\PSoC4/CyLib.c **** 
1283:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1284:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
1285:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1286:.\Generated_Source\PSoC4/CyLib.c **** *
1287:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1288:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
1289:.\Generated_Source\PSoC4/CyLib.c **** *
1290:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1291:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
1292:.\Generated_Source\PSoC4/CyLib.c **** *
1293:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1294:.\Generated_Source\PSoC4/CyLib.c **** *  None
1295:.\Generated_Source\PSoC4/CyLib.c **** *
1296:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 50


1297:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
1298:.\Generated_Source\PSoC4/CyLib.c **** {
 1488              		.loc 1 1298 0
 1489              		.cfi_startproc
 1490 0000 80B5     		push	{r7, lr}
 1491              		.cfi_def_cfa_offset 8
 1492              		.cfi_offset 7, -8
 1493              		.cfi_offset 14, -4
 1494 0002 82B0     		sub	sp, sp, #8
 1495              		.cfi_def_cfa_offset 16
 1496 0004 00AF     		add	r7, sp, #0
 1497              		.cfi_def_cfa_register 7
 1498 0006 021C     		mov	r2, r0
 1499 0008 FB1D     		add	r3, r7, #7
 1500 000a 1A70     		strb	r2, [r3]
1299:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1501              		.loc 1 1299 0
 1502 000c 064B     		ldr	r3, .L87
 1503 000e FA1D     		add	r2, r7, #7
 1504 0010 1178     		ldrb	r1, [r2]
 1505 0012 1F22     		mov	r2, #31
 1506 0014 0A40     		and	r2, r1
 1507 0016 0121     		mov	r1, #1
 1508 0018 081C     		mov	r0, r1
 1509 001a 9040     		lsl	r0, r0, r2
 1510 001c 021C     		mov	r2, r0
 1511 001e 1A60     		str	r2, [r3]
1300:.\Generated_Source\PSoC4/CyLib.c **** }
 1512              		.loc 1 1300 0
 1513 0020 BD46     		mov	sp, r7
 1514 0022 02B0     		add	sp, sp, #8
 1515              		@ sp needed
 1516 0024 80BD     		pop	{r7, pc}
 1517              	.L88:
 1518 0026 C046     		.align	2
 1519              	.L87:
 1520 0028 80E200E0 		.word	-536812928
 1521              		.cfi_endproc
 1522              	.LFE22:
 1523              		.size	CyIntClearPending, .-CyIntClearPending
 1524              		.section	.text.CyHalt,"ax",%progbits
 1525              		.align	2
 1526              		.global	CyHalt
 1527              		.code	16
 1528              		.thumb_func
 1529              		.type	CyHalt, %function
 1530              	CyHalt:
 1531              	.LFB23:
1301:.\Generated_Source\PSoC4/CyLib.c **** 
1302:.\Generated_Source\PSoC4/CyLib.c **** 
1303:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1304:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
1305:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1306:.\Generated_Source\PSoC4/CyLib.c **** *
1307:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1308:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
1309:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 51


1310:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1311:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
1312:.\Generated_Source\PSoC4/CyLib.c **** *
1313:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1314:.\Generated_Source\PSoC4/CyLib.c **** *  None
1315:.\Generated_Source\PSoC4/CyLib.c **** *
1316:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
1318:.\Generated_Source\PSoC4/CyLib.c **** {
 1532              		.loc 1 1318 0
 1533              		.cfi_startproc
 1534 0000 80B5     		push	{r7, lr}
 1535              		.cfi_def_cfa_offset 8
 1536              		.cfi_offset 7, -8
 1537              		.cfi_offset 14, -4
 1538 0002 82B0     		sub	sp, sp, #8
 1539              		.cfi_def_cfa_offset 16
 1540 0004 00AF     		add	r7, sp, #0
 1541              		.cfi_def_cfa_register 7
 1542 0006 021C     		mov	r2, r0
 1543 0008 FB1D     		add	r3, r7, #7
 1544 000a 1A70     		strb	r2, [r3]
1319:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
1320:.\Generated_Source\PSoC4/CyLib.c ****     {
1321:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
1322:.\Generated_Source\PSoC4/CyLib.c ****     }
1323:.\Generated_Source\PSoC4/CyLib.c **** 
1324:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
1325:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
1326:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
1327:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 1545              		.loc 1 1327 0
 1546              	@ 1327 ".\Generated_Source\PSoC4\CyLib.c" 1
 1547 000c 01BE     		    bkpt    1
 1548              	@ 0 "" 2
1328:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
1329:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
1330:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
1331:.\Generated_Source\PSoC4/CyLib.c **** }
 1549              		.loc 1 1331 0
 1550              		.code	16
 1551 000e BD46     		mov	sp, r7
 1552 0010 02B0     		add	sp, sp, #8
 1553              		@ sp needed
 1554 0012 80BD     		pop	{r7, pc}
 1555              		.cfi_endproc
 1556              	.LFE23:
 1557              		.size	CyHalt, .-CyHalt
 1558              		.section	.text.CySoftwareReset,"ax",%progbits
 1559              		.align	2
 1560              		.global	CySoftwareReset
 1561              		.code	16
 1562              		.thumb_func
 1563              		.type	CySoftwareReset, %function
 1564              	CySoftwareReset:
 1565              	.LFB24:
1332:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 52


1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1335:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
1336:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1337:.\Generated_Source\PSoC4/CyLib.c **** *
1338:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1339:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
1340:.\Generated_Source\PSoC4/CyLib.c **** *
1341:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1342:.\Generated_Source\PSoC4/CyLib.c **** *  None
1343:.\Generated_Source\PSoC4/CyLib.c **** *
1344:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1345:.\Generated_Source\PSoC4/CyLib.c **** *  None
1346:.\Generated_Source\PSoC4/CyLib.c **** *
1347:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1348:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
1349:.\Generated_Source\PSoC4/CyLib.c **** {
 1566              		.loc 1 1349 0
 1567              		.cfi_startproc
 1568 0000 80B5     		push	{r7, lr}
 1569              		.cfi_def_cfa_offset 8
 1570              		.cfi_offset 7, -8
 1571              		.cfi_offset 14, -4
 1572 0002 00AF     		add	r7, sp, #0
 1573              		.cfi_def_cfa_register 7
1350:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
1351:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
1352:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
1353:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 1574              		.loc 1 1354 0
 1575 0004 044B     		ldr	r3, .L91
 1576 0006 044A     		ldr	r2, .L91
 1577 0008 1268     		ldr	r2, [r2]
 1578 000a 1204     		lsl	r2, r2, #16
 1579 000c 120C     		lsr	r2, r2, #16
1355:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 1580              		.loc 1 1355 0
 1581 000e 0349     		ldr	r1, .L91+4
 1582 0010 0A43     		orr	r2, r1
1354:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 1583              		.loc 1 1354 0
 1584 0012 1A60     		str	r2, [r3]
1356:.\Generated_Source\PSoC4/CyLib.c **** }
 1585              		.loc 1 1356 0
 1586 0014 BD46     		mov	sp, r7
 1587              		@ sp needed
 1588 0016 80BD     		pop	{r7, pc}
 1589              	.L92:
 1590              		.align	2
 1591              	.L91:
 1592 0018 0CED00E0 		.word	-536810228
 1593 001c 0400FA05 		.word	100270084
 1594              		.cfi_endproc
 1595              	.LFE24:
 1596              		.size	CySoftwareReset, .-CySoftwareReset
 1597              		.section	.text.CyDelay,"ax",%progbits
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 53


 1598              		.align	2
 1599              		.global	CyDelay
 1600              		.code	16
 1601              		.thumb_func
 1602              		.type	CyDelay, %function
 1603              	CyDelay:
 1604              	.LFB25:
1357:.\Generated_Source\PSoC4/CyLib.c **** 
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
1361:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/CyLib.c **** *
1363:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1364:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
1365:.\Generated_Source\PSoC4/CyLib.c **** *
1366:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1367:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
1368:.\Generated_Source\PSoC4/CyLib.c **** *
1369:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1370:.\Generated_Source\PSoC4/CyLib.c **** *  None
1371:.\Generated_Source\PSoC4/CyLib.c **** *
1372:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1373:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
1374:.\Generated_Source\PSoC4/CyLib.c **** {
 1605              		.loc 1 1374 0
 1606              		.cfi_startproc
 1607 0000 80B5     		push	{r7, lr}
 1608              		.cfi_def_cfa_offset 8
 1609              		.cfi_offset 7, -8
 1610              		.cfi_offset 14, -4
 1611 0002 82B0     		sub	sp, sp, #8
 1612              		.cfi_def_cfa_offset 16
 1613 0004 00AF     		add	r7, sp, #0
 1614              		.cfi_def_cfa_register 7
 1615 0006 7860     		str	r0, [r7, #4]
1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1616              		.loc 1 1375 0
 1617 0008 08E0     		b	.L94
 1618              	.L95:
1376:.\Generated_Source\PSoC4/CyLib.c ****     {
1377:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
1378:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
1379:.\Generated_Source\PSoC4/CyLib.c ****          */
1380:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1619              		.loc 1 1380 0
 1620 000a 0C4B     		ldr	r3, .L96
 1621 000c 1B68     		ldr	r3, [r3]
 1622 000e 181C     		mov	r0, r3
 1623 0010 FFF7FEFF 		bl	CyDelayCycles
1381:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1624              		.loc 1 1381 0
 1625 0014 7B68     		ldr	r3, [r7, #4]
 1626 0016 0A4A     		ldr	r2, .L96+4
 1627 0018 9B18     		add	r3, r3, r2
 1628 001a 7B60     		str	r3, [r7, #4]
 1629              	.L94:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 54


1375:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1630              		.loc 1 1375 0 discriminator 1
 1631 001c 7A68     		ldr	r2, [r7, #4]
 1632 001e 8023     		mov	r3, #128
 1633 0020 1B02     		lsl	r3, r3, #8
 1634 0022 9A42     		cmp	r2, r3
 1635 0024 F1D8     		bhi	.L95
1382:.\Generated_Source\PSoC4/CyLib.c ****     }
1383:.\Generated_Source\PSoC4/CyLib.c **** 
1384:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1636              		.loc 1 1384 0
 1637 0026 074B     		ldr	r3, .L96+8
 1638 0028 1B68     		ldr	r3, [r3]
 1639 002a 7A68     		ldr	r2, [r7, #4]
 1640 002c 5343     		mul	r3, r2
 1641 002e 181C     		mov	r0, r3
 1642 0030 FFF7FEFF 		bl	CyDelayCycles
1385:.\Generated_Source\PSoC4/CyLib.c **** }
 1643              		.loc 1 1385 0
 1644 0034 BD46     		mov	sp, r7
 1645 0036 02B0     		add	sp, sp, #8
 1646              		@ sp needed
 1647 0038 80BD     		pop	{r7, pc}
 1648              	.L97:
 1649 003a C046     		.align	2
 1650              	.L96:
 1651 003c 00000000 		.word	cydelay32kMs
 1652 0040 0080FFFF 		.word	-32768
 1653 0044 00000000 		.word	cydelayFreqKhz
 1654              		.cfi_endproc
 1655              	.LFE25:
 1656              		.size	CyDelay, .-CyDelay
 1657              		.section	.text.CyDelayUs,"ax",%progbits
 1658              		.align	2
 1659              		.global	CyDelayUs
 1660              		.code	16
 1661              		.thumb_func
 1662              		.type	CyDelayUs, %function
 1663              	CyDelayUs:
 1664              	.LFB26:
1386:.\Generated_Source\PSoC4/CyLib.c **** 
1387:.\Generated_Source\PSoC4/CyLib.c **** 
1388:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1389:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
1390:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1391:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1392:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
1393:.\Generated_Source\PSoC4/CyLib.c **** *
1394:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1395:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
1396:.\Generated_Source\PSoC4/CyLib.c **** *
1397:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1398:.\Generated_Source\PSoC4/CyLib.c **** *  None
1399:.\Generated_Source\PSoC4/CyLib.c **** *
1400:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1401:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
1402:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 55


 1665              		.loc 1 1402 0
 1666              		.cfi_startproc
 1667 0000 80B5     		push	{r7, lr}
 1668              		.cfi_def_cfa_offset 8
 1669              		.cfi_offset 7, -8
 1670              		.cfi_offset 14, -4
 1671 0002 82B0     		sub	sp, sp, #8
 1672              		.cfi_def_cfa_offset 16
 1673 0004 00AF     		add	r7, sp, #0
 1674              		.cfi_def_cfa_register 7
 1675 0006 021C     		mov	r2, r0
 1676 0008 BB1D     		add	r3, r7, #6
 1677 000a 1A80     		strh	r2, [r3]
1403:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1678              		.loc 1 1403 0
 1679 000c BB1D     		add	r3, r7, #6
 1680 000e 1B88     		ldrh	r3, [r3]
 1681 0010 044A     		ldr	r2, .L99
 1682 0012 1278     		ldrb	r2, [r2]
 1683 0014 5343     		mul	r3, r2
 1684 0016 181C     		mov	r0, r3
 1685 0018 FFF7FEFF 		bl	CyDelayCycles
1404:.\Generated_Source\PSoC4/CyLib.c **** }
 1686              		.loc 1 1404 0
 1687 001c BD46     		mov	sp, r7
 1688 001e 02B0     		add	sp, sp, #8
 1689              		@ sp needed
 1690 0020 80BD     		pop	{r7, pc}
 1691              	.L100:
 1692 0022 C046     		.align	2
 1693              	.L99:
 1694 0024 00000000 		.word	cydelayFreqMhz
 1695              		.cfi_endproc
 1696              	.LFE26:
 1697              		.size	CyDelayUs, .-CyDelayUs
 1698              		.global	__aeabi_uidiv
 1699              		.section	.text.CyDelayFreq,"ax",%progbits
 1700              		.align	2
 1701              		.global	CyDelayFreq
 1702              		.code	16
 1703              		.thumb_func
 1704              		.type	CyDelayFreq, %function
 1705              	CyDelayFreq:
 1706              	.LFB27:
1405:.\Generated_Source\PSoC4/CyLib.c **** 
1406:.\Generated_Source\PSoC4/CyLib.c **** 
1407:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1408:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
1409:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1410:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1411:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
1412:.\Generated_Source\PSoC4/CyLib.c **** *
1413:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1414:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
1415:.\Generated_Source\PSoC4/CyLib.c **** *
1416:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1417:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 56


1418:.\Generated_Source\PSoC4/CyLib.c **** *
1419:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1420:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
1421:.\Generated_Source\PSoC4/CyLib.c **** {
 1707              		.loc 1 1421 0
 1708              		.cfi_startproc
 1709 0000 80B5     		push	{r7, lr}
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 7, -8
 1712              		.cfi_offset 14, -4
 1713 0002 82B0     		sub	sp, sp, #8
 1714              		.cfi_def_cfa_offset 16
 1715 0004 00AF     		add	r7, sp, #0
 1716              		.cfi_def_cfa_register 7
 1717 0006 7860     		str	r0, [r7, #4]
1422:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1718              		.loc 1 1422 0
 1719 0008 7B68     		ldr	r3, [r7, #4]
 1720 000a 002B     		cmp	r3, #0
 1721 000c 03D0     		beq	.L102
1423:.\Generated_Source\PSoC4/CyLib.c ****     {
1424:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1722              		.loc 1 1424 0
 1723 000e 144B     		ldr	r3, .L104
 1724 0010 7A68     		ldr	r2, [r7, #4]
 1725 0012 1A60     		str	r2, [r3]
 1726 0014 02E0     		b	.L103
 1727              	.L102:
1425:.\Generated_Source\PSoC4/CyLib.c ****     }
1426:.\Generated_Source\PSoC4/CyLib.c ****     else
1427:.\Generated_Source\PSoC4/CyLib.c ****     {
1428:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1728              		.loc 1 1428 0
 1729 0016 124B     		ldr	r3, .L104
 1730 0018 124A     		ldr	r2, .L104+4
 1731 001a 1A60     		str	r2, [r3]
 1732              	.L103:
1429:.\Generated_Source\PSoC4/CyLib.c ****     }
1430:.\Generated_Source\PSoC4/CyLib.c **** 
1431:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1733              		.loc 1 1431 0
 1734 001c 104B     		ldr	r3, .L104
 1735 001e 1B68     		ldr	r3, [r3]
 1736 0020 114A     		ldr	r2, .L104+8
 1737 0022 9B18     		add	r3, r3, r2
 1738 0024 181C     		mov	r0, r3
 1739 0026 1149     		ldr	r1, .L104+12
 1740 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1741 002c 031C     		mov	r3, r0
 1742 002e DAB2     		uxtb	r2, r3
 1743 0030 0F4B     		ldr	r3, .L104+16
 1744 0032 1A70     		strb	r2, [r3]
1432:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1745              		.loc 1 1432 0
 1746 0034 0A4B     		ldr	r3, .L104
 1747 0036 1B68     		ldr	r3, [r3]
 1748 0038 0E4A     		ldr	r2, .L104+20
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 57


 1749 003a 9B18     		add	r3, r3, r2
 1750 003c 181C     		mov	r0, r3
 1751 003e FA23     		mov	r3, #250
 1752 0040 9900     		lsl	r1, r3, #2
 1753 0042 FFF7FEFF 		bl	__aeabi_uidiv
 1754 0046 031C     		mov	r3, r0
 1755 0048 1A1C     		mov	r2, r3
 1756 004a 0B4B     		ldr	r3, .L104+24
 1757 004c 1A60     		str	r2, [r3]
1433:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1758              		.loc 1 1433 0
 1759 004e 0A4B     		ldr	r3, .L104+24
 1760 0050 1B68     		ldr	r3, [r3]
 1761 0052 DA03     		lsl	r2, r3, #15
 1762 0054 094B     		ldr	r3, .L104+28
 1763 0056 1A60     		str	r2, [r3]
1434:.\Generated_Source\PSoC4/CyLib.c **** }
 1764              		.loc 1 1434 0
 1765 0058 BD46     		mov	sp, r7
 1766 005a 02B0     		add	sp, sp, #8
 1767              		@ sp needed
 1768 005c 80BD     		pop	{r7, pc}
 1769              	.L105:
 1770 005e C046     		.align	2
 1771              	.L104:
 1772 0060 00000000 		.word	cydelayFreqHz
 1773 0064 C0C62D00 		.word	3000000
 1774 0068 3F420F00 		.word	999999
 1775 006c 40420F00 		.word	1000000
 1776 0070 00000000 		.word	cydelayFreqMhz
 1777 0074 E7030000 		.word	999
 1778 0078 00000000 		.word	cydelayFreqKhz
 1779 007c 00000000 		.word	cydelay32kMs
 1780              		.cfi_endproc
 1781              	.LFE27:
 1782              		.size	CyDelayFreq, .-CyDelayFreq
 1783              		.section	.text.CySysTickStart,"ax",%progbits
 1784              		.align	2
 1785              		.global	CySysTickStart
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	CySysTickStart, %function
 1789              	CySysTickStart:
 1790              	.LFB28:
1435:.\Generated_Source\PSoC4/CyLib.c **** 
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1438:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
1439:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1440:.\Generated_Source\PSoC4/CyLib.c **** *
1441:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1442:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
1443:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
1444:.\Generated_Source\PSoC4/CyLib.c **** *
1445:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1446:.\Generated_Source\PSoC4/CyLib.c **** *  None
1447:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 58


1448:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1449:.\Generated_Source\PSoC4/CyLib.c **** *  None
1450:.\Generated_Source\PSoC4/CyLib.c **** *
1451:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1452:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1453:.\Generated_Source\PSoC4/CyLib.c **** *
1454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1455:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
1456:.\Generated_Source\PSoC4/CyLib.c **** {
 1791              		.loc 1 1456 0
 1792              		.cfi_startproc
 1793 0000 80B5     		push	{r7, lr}
 1794              		.cfi_def_cfa_offset 8
 1795              		.cfi_offset 7, -8
 1796              		.cfi_offset 14, -4
 1797 0002 00AF     		add	r7, sp, #0
 1798              		.cfi_def_cfa_register 7
1457:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1799              		.loc 1 1457 0
 1800 0004 064B     		ldr	r3, .L108
 1801 0006 1B68     		ldr	r3, [r3]
 1802 0008 002B     		cmp	r3, #0
 1803 000a 04D1     		bne	.L107
1458:.\Generated_Source\PSoC4/CyLib.c ****     {
1459:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 1804              		.loc 1 1459 0
 1805 000c FFF7FEFF 		bl	CySysTickInit
1460:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1806              		.loc 1 1460 0
 1807 0010 034B     		ldr	r3, .L108
 1808 0012 0122     		mov	r2, #1
 1809 0014 1A60     		str	r2, [r3]
 1810              	.L107:
1461:.\Generated_Source\PSoC4/CyLib.c ****     }
1462:.\Generated_Source\PSoC4/CyLib.c **** 
1463:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 1811              		.loc 1 1463 0
 1812 0016 FFF7FEFF 		bl	CySysTickEnable
1464:.\Generated_Source\PSoC4/CyLib.c **** }
 1813              		.loc 1 1464 0
 1814 001a BD46     		mov	sp, r7
 1815              		@ sp needed
 1816 001c 80BD     		pop	{r7, pc}
 1817              	.L109:
 1818 001e C046     		.align	2
 1819              	.L108:
 1820 0020 00000000 		.word	CySysTickInitVar
 1821              		.cfi_endproc
 1822              	.LFE28:
 1823              		.size	CySysTickStart, .-CySysTickStart
 1824              		.section	.text.CySysTickInit,"ax",%progbits
 1825              		.align	2
 1826              		.global	CySysTickInit
 1827              		.code	16
 1828              		.thumb_func
 1829              		.type	CySysTickInit, %function
 1830              	CySysTickInit:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 59


 1831              	.LFB29:
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c **** 
1467:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1468:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
1469:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1470:.\Generated_Source\PSoC4/CyLib.c **** *
1471:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1472:.\Generated_Source\PSoC4/CyLib.c **** *  Sets CySysTickServiceCallbacks() as an ISR for the SysTick exception.
1473:.\Generated_Source\PSoC4/CyLib.c **** *  The clock source for the SysTick counter is set to the System Clock.
1474:.\Generated_Source\PSoC4/CyLib.c **** *  The SysTick reload value is configured for the timer to generate interrupt
1475:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms. The System clock value is on the global variables cydelayFreqHz.
1476:.\Generated_Source\PSoC4/CyLib.c **** *  User is responsible for calling CyDelayFreq() function.
1477:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes CySysTickCallbacks array.
1478:.\Generated_Source\PSoC4/CyLib.c **** *
1479:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1480:.\Generated_Source\PSoC4/CyLib.c **** *  None
1481:.\Generated_Source\PSoC4/CyLib.c **** *
1482:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1483:.\Generated_Source\PSoC4/CyLib.c **** *  None
1484:.\Generated_Source\PSoC4/CyLib.c **** *
1485:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1486:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1487:.\Generated_Source\PSoC4/CyLib.c **** *
1488:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1489:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
1490:.\Generated_Source\PSoC4/CyLib.c **** {
 1832              		.loc 1 1490 0
 1833              		.cfi_startproc
 1834 0000 80B5     		push	{r7, lr}
 1835              		.cfi_def_cfa_offset 8
 1836              		.cfi_offset 7, -8
 1837              		.cfi_offset 14, -4
 1838 0002 82B0     		sub	sp, sp, #8
 1839              		.cfi_def_cfa_offset 16
 1840 0004 00AF     		add	r7, sp, #0
 1841              		.cfi_def_cfa_register 7
1491:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1492:.\Generated_Source\PSoC4/CyLib.c **** 
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1842              		.loc 1 1493 0
 1843 0006 0023     		mov	r3, #0
 1844 0008 7B60     		str	r3, [r7, #4]
 1845 000a 07E0     		b	.L111
 1846              	.L112:
1494:.\Generated_Source\PSoC4/CyLib.c ****     {
1495:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1847              		.loc 1 1495 0 discriminator 2
 1848 000c 114B     		ldr	r3, .L113
 1849 000e 7A68     		ldr	r2, [r7, #4]
 1850 0010 9200     		lsl	r2, r2, #2
 1851 0012 0021     		mov	r1, #0
 1852 0014 D150     		str	r1, [r2, r3]
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1853              		.loc 1 1493 0 discriminator 2
 1854 0016 7B68     		ldr	r3, [r7, #4]
 1855 0018 0133     		add	r3, r3, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 60


 1856 001a 7B60     		str	r3, [r7, #4]
 1857              	.L111:
1493:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 1858              		.loc 1 1493 0 is_stmt 0 discriminator 1
 1859 001c 7B68     		ldr	r3, [r7, #4]
 1860 001e 042B     		cmp	r3, #4
 1861 0020 F4D9     		bls	.L112
1496:.\Generated_Source\PSoC4/CyLib.c ****     }
1497:.\Generated_Source\PSoC4/CyLib.c **** 
1498:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 1862              		.loc 1 1498 0 is_stmt 1
 1863 0022 0D4B     		ldr	r3, .L113+4
 1864 0024 0F20     		mov	r0, #15
 1865 0026 191C     		mov	r1, r3
 1866 0028 FFF7FEFF 		bl	CyIntSetSysVector
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****     #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1501:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
1502:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1503:.\Generated_Source\PSoC4/CyLib.c **** 
1504:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1867              		.loc 1 1504 0
 1868 002c 0B4B     		ldr	r3, .L113+8
 1869 002e 1B68     		ldr	r3, [r3]
 1870 0030 181C     		mov	r0, r3
 1871 0032 FA23     		mov	r3, #250
 1872 0034 9900     		lsl	r1, r3, #2
 1873 0036 FFF7FEFF 		bl	__aeabi_uidiv
 1874 003a 031C     		mov	r3, r0
 1875 003c 181C     		mov	r0, r3
 1876 003e FFF7FEFF 		bl	CySysTickSetReload
1505:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1877              		.loc 1 1505 0
 1878 0042 FFF7FEFF 		bl	CySysTickClear
1506:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1879              		.loc 1 1506 0
 1880 0046 0F20     		mov	r0, #15
 1881 0048 FFF7FEFF 		bl	CyIntEnable
1507:.\Generated_Source\PSoC4/CyLib.c **** }
 1882              		.loc 1 1507 0
 1883 004c BD46     		mov	sp, r7
 1884 004e 02B0     		add	sp, sp, #8
 1885              		@ sp needed
 1886 0050 80BD     		pop	{r7, pc}
 1887              	.L114:
 1888 0052 C046     		.align	2
 1889              	.L113:
 1890 0054 00000000 		.word	CySysTickCallbacks
 1891 0058 00000000 		.word	CySysTickServiceCallbacks
 1892 005c 00000000 		.word	cydelayFreqHz
 1893              		.cfi_endproc
 1894              	.LFE29:
 1895              		.size	CySysTickInit, .-CySysTickInit
 1896              		.section	.text.CySysTickEnable,"ax",%progbits
 1897              		.align	2
 1898              		.global	CySysTickEnable
 1899              		.code	16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 61


 1900              		.thumb_func
 1901              		.type	CySysTickEnable, %function
 1902              	CySysTickEnable:
 1903              	.LFB30:
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c **** 
1510:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1511:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
1512:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1513:.\Generated_Source\PSoC4/CyLib.c **** *
1514:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1515:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
1516:.\Generated_Source\PSoC4/CyLib.c **** *
1517:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1518:.\Generated_Source\PSoC4/CyLib.c **** *  None
1519:.\Generated_Source\PSoC4/CyLib.c **** *
1520:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1521:.\Generated_Source\PSoC4/CyLib.c **** *  None
1522:.\Generated_Source\PSoC4/CyLib.c **** *
1523:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1524:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1525:.\Generated_Source\PSoC4/CyLib.c **** *
1526:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1527:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
1528:.\Generated_Source\PSoC4/CyLib.c **** {
 1904              		.loc 1 1528 0
 1905              		.cfi_startproc
 1906 0000 80B5     		push	{r7, lr}
 1907              		.cfi_def_cfa_offset 8
 1908              		.cfi_offset 7, -8
 1909              		.cfi_offset 14, -4
 1910 0002 00AF     		add	r7, sp, #0
 1911              		.cfi_def_cfa_register 7
1529:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1912              		.loc 1 1529 0
 1913 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
1530:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1914              		.loc 1 1530 0
 1915 0008 034B     		ldr	r3, .L116
 1916 000a 034A     		ldr	r2, .L116
 1917 000c 1268     		ldr	r2, [r2]
 1918 000e 0121     		mov	r1, #1
 1919 0010 0A43     		orr	r2, r1
 1920 0012 1A60     		str	r2, [r3]
1531:.\Generated_Source\PSoC4/CyLib.c **** }
 1921              		.loc 1 1531 0
 1922 0014 BD46     		mov	sp, r7
 1923              		@ sp needed
 1924 0016 80BD     		pop	{r7, pc}
 1925              	.L117:
 1926              		.align	2
 1927              	.L116:
 1928 0018 10E000E0 		.word	-536813552
 1929              		.cfi_endproc
 1930              	.LFE30:
 1931              		.size	CySysTickEnable, .-CySysTickEnable
 1932              		.section	.text.CySysTickStop,"ax",%progbits
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 62


 1933              		.align	2
 1934              		.global	CySysTickStop
 1935              		.code	16
 1936              		.thumb_func
 1937              		.type	CySysTickStop, %function
 1938              	CySysTickStop:
 1939              	.LFB31:
1532:.\Generated_Source\PSoC4/CyLib.c **** 
1533:.\Generated_Source\PSoC4/CyLib.c **** 
1534:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
1536:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1537:.\Generated_Source\PSoC4/CyLib.c **** *
1538:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1539:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
1540:.\Generated_Source\PSoC4/CyLib.c **** *
1541:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1542:.\Generated_Source\PSoC4/CyLib.c **** *  None
1543:.\Generated_Source\PSoC4/CyLib.c **** *
1544:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1545:.\Generated_Source\PSoC4/CyLib.c **** *  None
1546:.\Generated_Source\PSoC4/CyLib.c **** *
1547:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1548:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1549:.\Generated_Source\PSoC4/CyLib.c **** *
1550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1551:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
1552:.\Generated_Source\PSoC4/CyLib.c **** {
 1940              		.loc 1 1552 0
 1941              		.cfi_startproc
 1942 0000 80B5     		push	{r7, lr}
 1943              		.cfi_def_cfa_offset 8
 1944              		.cfi_offset 7, -8
 1945              		.cfi_offset 14, -4
 1946 0002 00AF     		add	r7, sp, #0
 1947              		.cfi_def_cfa_register 7
1553:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1948              		.loc 1 1553 0
 1949 0004 034B     		ldr	r3, .L119
 1950 0006 034A     		ldr	r2, .L119
 1951 0008 1268     		ldr	r2, [r2]
 1952 000a 0121     		mov	r1, #1
 1953 000c 8A43     		bic	r2, r1
 1954 000e 1A60     		str	r2, [r3]
1554:.\Generated_Source\PSoC4/CyLib.c **** }
 1955              		.loc 1 1554 0
 1956 0010 BD46     		mov	sp, r7
 1957              		@ sp needed
 1958 0012 80BD     		pop	{r7, pc}
 1959              	.L120:
 1960              		.align	2
 1961              	.L119:
 1962 0014 10E000E0 		.word	-536813552
 1963              		.cfi_endproc
 1964              	.LFE31:
 1965              		.size	CySysTickStop, .-CySysTickStop
 1966              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 63


 1967              		.align	2
 1968              		.global	CySysTickEnableInterrupt
 1969              		.code	16
 1970              		.thumb_func
 1971              		.type	CySysTickEnableInterrupt, %function
 1972              	CySysTickEnableInterrupt:
 1973              	.LFB32:
1555:.\Generated_Source\PSoC4/CyLib.c **** 
1556:.\Generated_Source\PSoC4/CyLib.c **** 
1557:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1558:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
1559:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1560:.\Generated_Source\PSoC4/CyLib.c **** *
1561:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1562:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
1563:.\Generated_Source\PSoC4/CyLib.c **** *
1564:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1565:.\Generated_Source\PSoC4/CyLib.c **** *  None
1566:.\Generated_Source\PSoC4/CyLib.c **** *
1567:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1568:.\Generated_Source\PSoC4/CyLib.c **** *  None
1569:.\Generated_Source\PSoC4/CyLib.c **** *
1570:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1571:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1572:.\Generated_Source\PSoC4/CyLib.c **** *
1573:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1574:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
1575:.\Generated_Source\PSoC4/CyLib.c **** {
 1974              		.loc 1 1575 0
 1975              		.cfi_startproc
 1976 0000 80B5     		push	{r7, lr}
 1977              		.cfi_def_cfa_offset 8
 1978              		.cfi_offset 7, -8
 1979              		.cfi_offset 14, -4
 1980 0002 00AF     		add	r7, sp, #0
 1981              		.cfi_def_cfa_register 7
1576:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1982              		.loc 1 1576 0
 1983 0004 034B     		ldr	r3, .L122
 1984 0006 034A     		ldr	r2, .L122
 1985 0008 1268     		ldr	r2, [r2]
 1986 000a 0221     		mov	r1, #2
 1987 000c 0A43     		orr	r2, r1
 1988 000e 1A60     		str	r2, [r3]
1577:.\Generated_Source\PSoC4/CyLib.c **** }
 1989              		.loc 1 1577 0
 1990 0010 BD46     		mov	sp, r7
 1991              		@ sp needed
 1992 0012 80BD     		pop	{r7, pc}
 1993              	.L123:
 1994              		.align	2
 1995              	.L122:
 1996 0014 10E000E0 		.word	-536813552
 1997              		.cfi_endproc
 1998              	.LFE32:
 1999              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2000              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 64


 2001              		.align	2
 2002              		.global	CySysTickDisableInterrupt
 2003              		.code	16
 2004              		.thumb_func
 2005              		.type	CySysTickDisableInterrupt, %function
 2006              	CySysTickDisableInterrupt:
 2007              	.LFB33:
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c **** 
1580:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1581:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
1582:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1583:.\Generated_Source\PSoC4/CyLib.c **** *
1584:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1585:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
1586:.\Generated_Source\PSoC4/CyLib.c **** *
1587:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1588:.\Generated_Source\PSoC4/CyLib.c **** *  None
1589:.\Generated_Source\PSoC4/CyLib.c **** *
1590:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1591:.\Generated_Source\PSoC4/CyLib.c **** *  None
1592:.\Generated_Source\PSoC4/CyLib.c **** *
1593:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1594:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
1595:.\Generated_Source\PSoC4/CyLib.c **** *
1596:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1597:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
1598:.\Generated_Source\PSoC4/CyLib.c **** {
 2008              		.loc 1 1598 0
 2009              		.cfi_startproc
 2010 0000 80B5     		push	{r7, lr}
 2011              		.cfi_def_cfa_offset 8
 2012              		.cfi_offset 7, -8
 2013              		.cfi_offset 14, -4
 2014 0002 00AF     		add	r7, sp, #0
 2015              		.cfi_def_cfa_register 7
1599:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2016              		.loc 1 1599 0
 2017 0004 034B     		ldr	r3, .L125
 2018 0006 034A     		ldr	r2, .L125
 2019 0008 1268     		ldr	r2, [r2]
 2020 000a 0221     		mov	r1, #2
 2021 000c 8A43     		bic	r2, r1
 2022 000e 1A60     		str	r2, [r3]
1600:.\Generated_Source\PSoC4/CyLib.c **** }
 2023              		.loc 1 1600 0
 2024 0010 BD46     		mov	sp, r7
 2025              		@ sp needed
 2026 0012 80BD     		pop	{r7, pc}
 2027              	.L126:
 2028              		.align	2
 2029              	.L125:
 2030 0014 10E000E0 		.word	-536813552
 2031              		.cfi_endproc
 2032              	.LFE33:
 2033              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2034              		.section	.text.CySysTickSetReload,"ax",%progbits
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 65


 2035              		.align	2
 2036              		.global	CySysTickSetReload
 2037              		.code	16
 2038              		.thumb_func
 2039              		.type	CySysTickSetReload, %function
 2040              	CySysTickSetReload:
 2041              	.LFB34:
1601:.\Generated_Source\PSoC4/CyLib.c **** 
1602:.\Generated_Source\PSoC4/CyLib.c **** 
1603:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1604:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
1605:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c **** *
1607:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1608:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
1609:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
1610:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
1611:.\Generated_Source\PSoC4/CyLib.c **** *
1612:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1613:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
1614:.\Generated_Source\PSoC4/CyLib.c **** *
1615:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1616:.\Generated_Source\PSoC4/CyLib.c **** *  None
1617:.\Generated_Source\PSoC4/CyLib.c **** *
1618:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1619:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
1620:.\Generated_Source\PSoC4/CyLib.c **** {
 2042              		.loc 1 1620 0
 2043              		.cfi_startproc
 2044 0000 80B5     		push	{r7, lr}
 2045              		.cfi_def_cfa_offset 8
 2046              		.cfi_offset 7, -8
 2047              		.cfi_offset 14, -4
 2048 0002 82B0     		sub	sp, sp, #8
 2049              		.cfi_def_cfa_offset 16
 2050 0004 00AF     		add	r7, sp, #0
 2051              		.cfi_def_cfa_register 7
 2052 0006 7860     		str	r0, [r7, #4]
1621:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2053              		.loc 1 1621 0
 2054 0008 034B     		ldr	r3, .L128
 2055 000a 7A68     		ldr	r2, [r7, #4]
 2056 000c 1202     		lsl	r2, r2, #8
 2057 000e 120A     		lsr	r2, r2, #8
 2058 0010 1A60     		str	r2, [r3]
1622:.\Generated_Source\PSoC4/CyLib.c **** }
 2059              		.loc 1 1622 0
 2060 0012 BD46     		mov	sp, r7
 2061 0014 02B0     		add	sp, sp, #8
 2062              		@ sp needed
 2063 0016 80BD     		pop	{r7, pc}
 2064              	.L129:
 2065              		.align	2
 2066              	.L128:
 2067 0018 14E000E0 		.word	-536813548
 2068              		.cfi_endproc
 2069              	.LFE34:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 66


 2070              		.size	CySysTickSetReload, .-CySysTickSetReload
 2071              		.section	.text.CySysTickGetReload,"ax",%progbits
 2072              		.align	2
 2073              		.global	CySysTickGetReload
 2074              		.code	16
 2075              		.thumb_func
 2076              		.type	CySysTickGetReload, %function
 2077              	CySysTickGetReload:
 2078              	.LFB35:
1623:.\Generated_Source\PSoC4/CyLib.c **** 
1624:.\Generated_Source\PSoC4/CyLib.c **** 
1625:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1626:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
1627:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c **** *
1629:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1630:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
1631:.\Generated_Source\PSoC4/CyLib.c **** *
1632:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1633:.\Generated_Source\PSoC4/CyLib.c **** *  None
1634:.\Generated_Source\PSoC4/CyLib.c **** *
1635:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1636:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
1637:.\Generated_Source\PSoC4/CyLib.c **** *
1638:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1639:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
1640:.\Generated_Source\PSoC4/CyLib.c **** {
 2079              		.loc 1 1640 0
 2080              		.cfi_startproc
 2081 0000 80B5     		push	{r7, lr}
 2082              		.cfi_def_cfa_offset 8
 2083              		.cfi_offset 7, -8
 2084              		.cfi_offset 14, -4
 2085 0002 00AF     		add	r7, sp, #0
 2086              		.cfi_def_cfa_register 7
1641:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2087              		.loc 1 1641 0
 2088 0004 034B     		ldr	r3, .L132
 2089 0006 1B68     		ldr	r3, [r3]
 2090 0008 1B02     		lsl	r3, r3, #8
 2091 000a 1B0A     		lsr	r3, r3, #8
1642:.\Generated_Source\PSoC4/CyLib.c **** }
 2092              		.loc 1 1642 0
 2093 000c 181C     		mov	r0, r3
 2094 000e BD46     		mov	sp, r7
 2095              		@ sp needed
 2096 0010 80BD     		pop	{r7, pc}
 2097              	.L133:
 2098 0012 C046     		.align	2
 2099              	.L132:
 2100 0014 14E000E0 		.word	-536813548
 2101              		.cfi_endproc
 2102              	.LFE35:
 2103              		.size	CySysTickGetReload, .-CySysTickGetReload
 2104              		.section	.text.CySysTickGetValue,"ax",%progbits
 2105              		.align	2
 2106              		.global	CySysTickGetValue
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 67


 2107              		.code	16
 2108              		.thumb_func
 2109              		.type	CySysTickGetValue, %function
 2110              	CySysTickGetValue:
 2111              	.LFB36:
1643:.\Generated_Source\PSoC4/CyLib.c **** 
1644:.\Generated_Source\PSoC4/CyLib.c **** 
1645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
1647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1648:.\Generated_Source\PSoC4/CyLib.c **** *
1649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1650:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
1651:.\Generated_Source\PSoC4/CyLib.c **** *
1652:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1653:.\Generated_Source\PSoC4/CyLib.c **** *  None
1654:.\Generated_Source\PSoC4/CyLib.c **** *
1655:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1656:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
1657:.\Generated_Source\PSoC4/CyLib.c **** *
1658:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1659:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
1660:.\Generated_Source\PSoC4/CyLib.c **** {
 2112              		.loc 1 1660 0
 2113              		.cfi_startproc
 2114 0000 80B5     		push	{r7, lr}
 2115              		.cfi_def_cfa_offset 8
 2116              		.cfi_offset 7, -8
 2117              		.cfi_offset 14, -4
 2118 0002 00AF     		add	r7, sp, #0
 2119              		.cfi_def_cfa_register 7
1661:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2120              		.loc 1 1661 0
 2121 0004 034B     		ldr	r3, .L136
 2122 0006 1B68     		ldr	r3, [r3]
 2123 0008 1B02     		lsl	r3, r3, #8
 2124 000a 1B0A     		lsr	r3, r3, #8
1662:.\Generated_Source\PSoC4/CyLib.c **** }
 2125              		.loc 1 1662 0
 2126 000c 181C     		mov	r0, r3
 2127 000e BD46     		mov	sp, r7
 2128              		@ sp needed
 2129 0010 80BD     		pop	{r7, pc}
 2130              	.L137:
 2131 0012 C046     		.align	2
 2132              	.L136:
 2133 0014 18E000E0 		.word	-536813544
 2134              		.cfi_endproc
 2135              	.LFE36:
 2136              		.size	CySysTickGetValue, .-CySysTickGetValue
 2137              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2138              		.align	2
 2139              		.global	CySysTickGetCountFlag
 2140              		.code	16
 2141              		.thumb_func
 2142              		.type	CySysTickGetCountFlag, %function
 2143              	CySysTickGetCountFlag:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 68


 2144              	.LFB37:
1663:.\Generated_Source\PSoC4/CyLib.c **** 
1664:.\Generated_Source\PSoC4/CyLib.c **** 
1665:.\Generated_Source\PSoC4/CyLib.c **** #if(!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200)
1666:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1667:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
1668:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1669:.\Generated_Source\PSoC4/CyLib.c ****     *
1670:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1671:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1674:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
1675:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
1676:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
1677:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
1678:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
1679:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
1680:.\Generated_Source\PSoC4/CyLib.c ****     *
1681:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1682:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1683:.\Generated_Source\PSoC4/CyLib.c ****     *
1684:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
1685:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
1686:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
1687:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
1688:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly bigger and vice versa.
1689:.\Generated_Source\PSoC4/CyLib.c ****     *
1690:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1691:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
1692:.\Generated_Source\PSoC4/CyLib.c ****     {
1693:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
1694:.\Generated_Source\PSoC4/CyLib.c ****         {
1695:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
1696:.\Generated_Source\PSoC4/CyLib.c ****         }
1697:.\Generated_Source\PSoC4/CyLib.c ****         else
1698:.\Generated_Source\PSoC4/CyLib.c ****         {
1699:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
1700:.\Generated_Source\PSoC4/CyLib.c ****         }
1701:.\Generated_Source\PSoC4/CyLib.c ****     }
1702:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (!CY_PSOC3 && !CY_PSOC4_4000 && !CY_PSOC4_4100 && !CY_PSOC4_4200) */
1703:.\Generated_Source\PSoC4/CyLib.c **** 
1704:.\Generated_Source\PSoC4/CyLib.c **** 
1705:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1706:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
1707:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1708:.\Generated_Source\PSoC4/CyLib.c **** *
1709:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1710:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
1711:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
1712:.\Generated_Source\PSoC4/CyLib.c **** *
1713:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1714:.\Generated_Source\PSoC4/CyLib.c **** *  None
1715:.\Generated_Source\PSoC4/CyLib.c **** *
1716:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1717:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
1718:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 69


1719:.\Generated_Source\PSoC4/CyLib.c **** *
1720:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1721:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
1722:.\Generated_Source\PSoC4/CyLib.c **** *
1723:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1724:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
1725:.\Generated_Source\PSoC4/CyLib.c **** {
 2145              		.loc 1 1725 0
 2146              		.cfi_startproc
 2147 0000 80B5     		push	{r7, lr}
 2148              		.cfi_def_cfa_offset 8
 2149              		.cfi_offset 7, -8
 2150              		.cfi_offset 14, -4
 2151 0002 00AF     		add	r7, sp, #0
 2152              		.cfi_def_cfa_register 7
1726:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2153              		.loc 1 1726 0
 2154 0004 034B     		ldr	r3, .L140
 2155 0006 1B68     		ldr	r3, [r3]
 2156 0008 1A0C     		lsr	r2, r3, #16
 2157 000a 0123     		mov	r3, #1
 2158 000c 1340     		and	r3, r2
1727:.\Generated_Source\PSoC4/CyLib.c **** }
 2159              		.loc 1 1727 0
 2160 000e 181C     		mov	r0, r3
 2161 0010 BD46     		mov	sp, r7
 2162              		@ sp needed
 2163 0012 80BD     		pop	{r7, pc}
 2164              	.L141:
 2165              		.align	2
 2166              	.L140:
 2167 0014 10E000E0 		.word	-536813552
 2168              		.cfi_endproc
 2169              	.LFE37:
 2170              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2171              		.section	.text.CySysTickClear,"ax",%progbits
 2172              		.align	2
 2173              		.global	CySysTickClear
 2174              		.code	16
 2175              		.thumb_func
 2176              		.type	CySysTickClear, %function
 2177              	CySysTickClear:
 2178              	.LFB38:
1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
1732:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c **** *
1734:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
1736:.\Generated_Source\PSoC4/CyLib.c **** *
1737:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1738:.\Generated_Source\PSoC4/CyLib.c **** *  None
1739:.\Generated_Source\PSoC4/CyLib.c **** *
1740:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1741:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 70


1742:.\Generated_Source\PSoC4/CyLib.c **** *
1743:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1744:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
1745:.\Generated_Source\PSoC4/CyLib.c **** {
 2179              		.loc 1 1745 0
 2180              		.cfi_startproc
 2181 0000 80B5     		push	{r7, lr}
 2182              		.cfi_def_cfa_offset 8
 2183              		.cfi_offset 7, -8
 2184              		.cfi_offset 14, -4
 2185 0002 00AF     		add	r7, sp, #0
 2186              		.cfi_def_cfa_register 7
1746:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2187              		.loc 1 1746 0
 2188 0004 024B     		ldr	r3, .L143
 2189 0006 0022     		mov	r2, #0
 2190 0008 1A60     		str	r2, [r3]
1747:.\Generated_Source\PSoC4/CyLib.c **** }
 2191              		.loc 1 1747 0
 2192 000a BD46     		mov	sp, r7
 2193              		@ sp needed
 2194 000c 80BD     		pop	{r7, pc}
 2195              	.L144:
 2196 000e C046     		.align	2
 2197              	.L143:
 2198 0010 18E000E0 		.word	-536813544
 2199              		.cfi_endproc
 2200              	.LFE38:
 2201              		.size	CySysTickClear, .-CySysTickClear
 2202              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2203              		.align	2
 2204              		.global	CySysTickSetCallback
 2205              		.code	16
 2206              		.thumb_func
 2207              		.type	CySysTickSetCallback, %function
 2208              	CySysTickSetCallback:
 2209              	.LFB39:
1748:.\Generated_Source\PSoC4/CyLib.c **** 
1749:.\Generated_Source\PSoC4/CyLib.c **** 
1750:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1751:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
1752:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1753:.\Generated_Source\PSoC4/CyLib.c **** *
1754:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1755:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
1756:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
1757:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
1758:.\Generated_Source\PSoC4/CyLib.c **** *
1759:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
1760:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
1761:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
1762:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
1763:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
1764:.\Generated_Source\PSoC4/CyLib.c **** *
1765:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1766:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
1767:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 71


1768:.\Generated_Source\PSoC4/CyLib.c **** *
1769:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
1770:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
1771:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
1772:.\Generated_Source\PSoC4/CyLib.c **** *
1773:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1774:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
1775:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
1776:.\Generated_Source\PSoC4/CyLib.c **** *
1777:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
1778:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
1779:.\Generated_Source\PSoC4/CyLib.c **** *
1780:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1781:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
1782:.\Generated_Source\PSoC4/CyLib.c **** {
 2210              		.loc 1 1782 0
 2211              		.cfi_startproc
 2212 0000 80B5     		push	{r7, lr}
 2213              		.cfi_def_cfa_offset 8
 2214              		.cfi_offset 7, -8
 2215              		.cfi_offset 14, -4
 2216 0002 84B0     		sub	sp, sp, #16
 2217              		.cfi_def_cfa_offset 24
 2218 0004 00AF     		add	r7, sp, #0
 2219              		.cfi_def_cfa_register 7
 2220 0006 7860     		str	r0, [r7, #4]
 2221 0008 3960     		str	r1, [r7]
1783:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
1784:.\Generated_Source\PSoC4/CyLib.c **** 
1785:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2222              		.loc 1 1785 0
 2223 000a 074B     		ldr	r3, .L147
 2224 000c 7A68     		ldr	r2, [r7, #4]
 2225 000e 9200     		lsl	r2, r2, #2
 2226 0010 D358     		ldr	r3, [r2, r3]
 2227 0012 FB60     		str	r3, [r7, #12]
1786:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2228              		.loc 1 1786 0
 2229 0014 044B     		ldr	r3, .L147
 2230 0016 7A68     		ldr	r2, [r7, #4]
 2231 0018 9200     		lsl	r2, r2, #2
 2232 001a 3968     		ldr	r1, [r7]
 2233 001c D150     		str	r1, [r2, r3]
1787:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2234              		.loc 1 1787 0
 2235 001e FB68     		ldr	r3, [r7, #12]
1788:.\Generated_Source\PSoC4/CyLib.c **** }
 2236              		.loc 1 1788 0
 2237 0020 181C     		mov	r0, r3
 2238 0022 BD46     		mov	sp, r7
 2239 0024 04B0     		add	sp, sp, #16
 2240              		@ sp needed
 2241 0026 80BD     		pop	{r7, pc}
 2242              	.L148:
 2243              		.align	2
 2244              	.L147:
 2245 0028 00000000 		.word	CySysTickCallbacks
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 72


 2246              		.cfi_endproc
 2247              	.LFE39:
 2248              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2249              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2250              		.align	2
 2251              		.global	CySysTickGetCallback
 2252              		.code	16
 2253              		.thumb_func
 2254              		.type	CySysTickGetCallback, %function
 2255              	CySysTickGetCallback:
 2256              	.LFB40:
1789:.\Generated_Source\PSoC4/CyLib.c **** 
1790:.\Generated_Source\PSoC4/CyLib.c **** 
1791:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1792:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
1793:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1794:.\Generated_Source\PSoC4/CyLib.c **** *
1795:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1796:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
1797:.\Generated_Source\PSoC4/CyLib.c **** *
1798:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1799:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
1800:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
1801:.\Generated_Source\PSoC4/CyLib.c **** *
1802:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1803:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
1804:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
1805:.\Generated_Source\PSoC4/CyLib.c **** *
1806:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1807:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
1808:.\Generated_Source\PSoC4/CyLib.c **** {
 2257              		.loc 1 1808 0
 2258              		.cfi_startproc
 2259 0000 80B5     		push	{r7, lr}
 2260              		.cfi_def_cfa_offset 8
 2261              		.cfi_offset 7, -8
 2262              		.cfi_offset 14, -4
 2263 0002 82B0     		sub	sp, sp, #8
 2264              		.cfi_def_cfa_offset 16
 2265 0004 00AF     		add	r7, sp, #0
 2266              		.cfi_def_cfa_register 7
 2267 0006 7860     		str	r0, [r7, #4]
1809:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2268              		.loc 1 1809 0
 2269 0008 034B     		ldr	r3, .L151
 2270 000a 7A68     		ldr	r2, [r7, #4]
 2271 000c 9200     		lsl	r2, r2, #2
 2272 000e D358     		ldr	r3, [r2, r3]
1810:.\Generated_Source\PSoC4/CyLib.c **** }
 2273              		.loc 1 1810 0
 2274 0010 181C     		mov	r0, r3
 2275 0012 BD46     		mov	sp, r7
 2276 0014 02B0     		add	sp, sp, #8
 2277              		@ sp needed
 2278 0016 80BD     		pop	{r7, pc}
 2279              	.L152:
 2280              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 73


 2281              	.L151:
 2282 0018 00000000 		.word	CySysTickCallbacks
 2283              		.cfi_endproc
 2284              	.LFE40:
 2285              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2286              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2287              		.align	2
 2288              		.code	16
 2289              		.thumb_func
 2290              		.type	CySysTickServiceCallbacks, %function
 2291              	CySysTickServiceCallbacks:
 2292              	.LFB41:
1811:.\Generated_Source\PSoC4/CyLib.c **** 
1812:.\Generated_Source\PSoC4/CyLib.c **** 
1813:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1814:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
1815:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1816:.\Generated_Source\PSoC4/CyLib.c **** *
1817:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1818:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
1819:.\Generated_Source\PSoC4/CyLib.c **** *
1820:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1821:.\Generated_Source\PSoC4/CyLib.c **** *  None
1822:.\Generated_Source\PSoC4/CyLib.c **** *
1823:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1824:.\Generated_Source\PSoC4/CyLib.c **** *  None
1825:.\Generated_Source\PSoC4/CyLib.c **** *
1826:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1827:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
1828:.\Generated_Source\PSoC4/CyLib.c **** {
 2293              		.loc 1 1828 0
 2294              		.cfi_startproc
 2295 0000 80B5     		push	{r7, lr}
 2296              		.cfi_def_cfa_offset 8
 2297              		.cfi_offset 7, -8
 2298              		.cfi_offset 14, -4
 2299 0002 82B0     		sub	sp, sp, #8
 2300              		.cfi_def_cfa_offset 16
 2301 0004 00AF     		add	r7, sp, #0
 2302              		.cfi_def_cfa_register 7
1829:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
1830:.\Generated_Source\PSoC4/CyLib.c **** 
1831:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
1832:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2303              		.loc 1 1832 0
 2304 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2305 000a 031C     		mov	r3, r0
 2306 000c 012B     		cmp	r3, #1
 2307 000e 13D1     		bne	.L153
1833:.\Generated_Source\PSoC4/CyLib.c ****     {
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2308              		.loc 1 1834 0
 2309 0010 0023     		mov	r3, #0
 2310 0012 7B60     		str	r3, [r7, #4]
 2311 0014 0DE0     		b	.L155
 2312              	.L157:
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 74


1836:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2313              		.loc 1 1836 0
 2314 0016 0A4B     		ldr	r3, .L158
 2315 0018 7A68     		ldr	r2, [r7, #4]
 2316 001a 9200     		lsl	r2, r2, #2
 2317 001c D358     		ldr	r3, [r2, r3]
 2318 001e 002B     		cmp	r3, #0
 2319 0020 04D0     		beq	.L156
1837:.\Generated_Source\PSoC4/CyLib.c ****             {
1838:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2320              		.loc 1 1838 0
 2321 0022 074B     		ldr	r3, .L158
 2322 0024 7A68     		ldr	r2, [r7, #4]
 2323 0026 9200     		lsl	r2, r2, #2
 2324 0028 D358     		ldr	r3, [r2, r3]
 2325 002a 9847     		blx	r3
 2326              	.L156:
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2327              		.loc 1 1834 0
 2328 002c 7B68     		ldr	r3, [r7, #4]
 2329 002e 0133     		add	r3, r3, #1
 2330 0030 7B60     		str	r3, [r7, #4]
 2331              	.L155:
1834:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2332              		.loc 1 1834 0 is_stmt 0 discriminator 1
 2333 0032 7B68     		ldr	r3, [r7, #4]
 2334 0034 042B     		cmp	r3, #4
 2335 0036 EED9     		bls	.L157
 2336              	.L153:
1839:.\Generated_Source\PSoC4/CyLib.c ****             }
1840:.\Generated_Source\PSoC4/CyLib.c ****         }
1841:.\Generated_Source\PSoC4/CyLib.c ****     }
1842:.\Generated_Source\PSoC4/CyLib.c **** }
 2337              		.loc 1 1842 0 is_stmt 1
 2338 0038 BD46     		mov	sp, r7
 2339 003a 02B0     		add	sp, sp, #8
 2340              		@ sp needed
 2341 003c 80BD     		pop	{r7, pc}
 2342              	.L159:
 2343 003e C046     		.align	2
 2344              	.L158:
 2345 0040 00000000 		.word	CySysTickCallbacks
 2346              		.cfi_endproc
 2347              	.LFE41:
 2348              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2349              		.section	.text.CyGetUniqueId,"ax",%progbits
 2350              		.align	2
 2351              		.global	CyGetUniqueId
 2352              		.code	16
 2353              		.thumb_func
 2354              		.type	CyGetUniqueId, %function
 2355              	CyGetUniqueId:
 2356              	.LFB42:
1843:.\Generated_Source\PSoC4/CyLib.c **** 
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
1846:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 75


1847:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
1848:.\Generated_Source\PSoC4/CyLib.c **** *
1849:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
1850:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
1851:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
1852:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
1853:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
1854:.\Generated_Source\PSoC4/CyLib.c **** *
1855:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
1856:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
1857:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
1858:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
1859:.\Generated_Source\PSoC4/CyLib.c **** *
1860:.\Generated_Source\PSoC4/CyLib.c **** * Return:
1861:.\Generated_Source\PSoC4/CyLib.c **** *  None
1862:.\Generated_Source\PSoC4/CyLib.c **** *
1863:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
1864:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
1865:.\Generated_Source\PSoC4/CyLib.c **** {
 2357              		.loc 1 1865 0
 2358              		.cfi_startproc
 2359 0000 80B5     		push	{r7, lr}
 2360              		.cfi_def_cfa_offset 8
 2361              		.cfi_offset 7, -8
 2362              		.cfi_offset 14, -4
 2363 0002 82B0     		sub	sp, sp, #8
 2364              		.cfi_def_cfa_offset 16
 2365 0004 00AF     		add	r7, sp, #0
 2366              		.cfi_def_cfa_register 7
 2367 0006 7860     		str	r0, [r7, #4]
1866:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
1867:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2368              		.loc 1 1867 0
 2369 0008 254B     		ldr	r3, .L161
 2370 000a 1B78     		ldrb	r3, [r3]
 2371 000c DBB2     		uxtb	r3, r3
 2372 000e 1A1C     		mov	r2, r3
 2373 0010 7B68     		ldr	r3, [r7, #4]
 2374 0012 1A60     		str	r2, [r3]
1868:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2375              		.loc 1 1868 0
 2376 0014 7B68     		ldr	r3, [r7, #4]
 2377 0016 1A68     		ldr	r2, [r3]
 2378 0018 224B     		ldr	r3, .L161+4
 2379 001a 1B78     		ldrb	r3, [r3]
 2380 001c DBB2     		uxtb	r3, r3
 2381 001e 1B02     		lsl	r3, r3, #8
 2382 0020 1A43     		orr	r2, r3
 2383 0022 7B68     		ldr	r3, [r7, #4]
 2384 0024 1A60     		str	r2, [r3]
1869:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2385              		.loc 1 1869 0
 2386 0026 7B68     		ldr	r3, [r7, #4]
 2387 0028 1A68     		ldr	r2, [r3]
 2388 002a 1F4B     		ldr	r3, .L161+8
 2389 002c 1B78     		ldrb	r3, [r3]
 2390 002e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 76


 2391 0030 1B04     		lsl	r3, r3, #16
 2392 0032 1A43     		orr	r2, r3
 2393 0034 7B68     		ldr	r3, [r7, #4]
 2394 0036 1A60     		str	r2, [r3]
1870:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2395              		.loc 1 1870 0
 2396 0038 7B68     		ldr	r3, [r7, #4]
 2397 003a 1A68     		ldr	r2, [r3]
 2398 003c 1B4B     		ldr	r3, .L161+12
 2399 003e 1B78     		ldrb	r3, [r3]
 2400 0040 DBB2     		uxtb	r3, r3
 2401 0042 1B06     		lsl	r3, r3, #24
 2402 0044 1A43     		orr	r2, r3
 2403 0046 7B68     		ldr	r3, [r7, #4]
 2404 0048 1A60     		str	r2, [r3]
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2405              		.loc 1 1872 0
 2406 004a 7B68     		ldr	r3, [r7, #4]
 2407 004c 0433     		add	r3, r3, #4
 2408 004e 184A     		ldr	r2, .L161+16
 2409 0050 1278     		ldrb	r2, [r2]
 2410 0052 D2B2     		uxtb	r2, r2
 2411 0054 1A60     		str	r2, [r3]
1873:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2412              		.loc 1 1873 0
 2413 0056 7B68     		ldr	r3, [r7, #4]
 2414 0058 0433     		add	r3, r3, #4
 2415 005a 7A68     		ldr	r2, [r7, #4]
 2416 005c 0432     		add	r2, r2, #4
 2417 005e 1168     		ldr	r1, [r2]
 2418 0060 144A     		ldr	r2, .L161+20
 2419 0062 1278     		ldrb	r2, [r2]
 2420 0064 D2B2     		uxtb	r2, r2
 2421 0066 1202     		lsl	r2, r2, #8
 2422 0068 0A43     		orr	r2, r1
 2423 006a 1A60     		str	r2, [r3]
1874:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2424              		.loc 1 1874 0
 2425 006c 7B68     		ldr	r3, [r7, #4]
 2426 006e 0433     		add	r3, r3, #4
 2427 0070 7A68     		ldr	r2, [r7, #4]
 2428 0072 0432     		add	r2, r2, #4
 2429 0074 1168     		ldr	r1, [r2]
 2430 0076 104A     		ldr	r2, .L161+24
 2431 0078 1278     		ldrb	r2, [r2]
 2432 007a D2B2     		uxtb	r2, r2
 2433 007c 1204     		lsl	r2, r2, #16
 2434 007e 0A43     		orr	r2, r1
 2435 0080 1A60     		str	r2, [r3]
1875:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2436              		.loc 1 1875 0
 2437 0082 7B68     		ldr	r3, [r7, #4]
 2438 0084 0433     		add	r3, r3, #4
 2439 0086 7A68     		ldr	r2, [r7, #4]
 2440 0088 0432     		add	r2, r2, #4
 2441 008a 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 77


 2442 008c 0B4A     		ldr	r2, .L161+28
 2443 008e 1278     		ldrb	r2, [r2]
 2444 0090 D2B2     		uxtb	r2, r2
 2445 0092 1206     		lsl	r2, r2, #24
 2446 0094 0A43     		orr	r2, r1
 2447 0096 1A60     		str	r2, [r3]
1876:.\Generated_Source\PSoC4/CyLib.c **** #else
1877:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
1878:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
1879:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
1880:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
1883:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
1884:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
1885:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
1886:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
1887:.\Generated_Source\PSoC4/CyLib.c **** }
 2448              		.loc 1 1887 0
 2449 0098 BD46     		mov	sp, r7
 2450 009a 02B0     		add	sp, sp, #8
 2451              		@ sp needed
 2452 009c 80BD     		pop	{r7, pc}
 2453              	.L162:
 2454 009e C046     		.align	2
 2455              	.L161:
 2456 00a0 78F1FF0F 		.word	268431736
 2457 00a4 79F1FF0F 		.word	268431737
 2458 00a8 7AF1FF0F 		.word	268431738
 2459 00ac 7BF1FF0F 		.word	268431739
 2460 00b0 7CF1FF0F 		.word	268431740
 2461 00b4 7DF1FF0F 		.word	268431741
 2462 00b8 7EF1FF0F 		.word	268431742
 2463 00bc 7FF1FF0F 		.word	268431743
 2464              		.cfi_endproc
 2465              	.LFE42:
 2466              		.size	CyGetUniqueId, .-CyGetUniqueId
 2467              		.text
 2468              	.Letext0:
 2469              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2470              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2471              		.section	.debug_info,"",%progbits
 2472              	.Ldebug_info0:
 2473 0000 4E080000 		.4byte	0x84e
 2474 0004 0400     		.2byte	0x4
 2475 0006 00000000 		.4byte	.Ldebug_abbrev0
 2476 000a 04       		.byte	0x4
 2477 000b 01       		.uleb128 0x1
 2478 000c 91030000 		.4byte	.LASF94
 2479 0010 01       		.byte	0x1
 2480 0011 A8020000 		.4byte	.LASF95
 2481 0015 91040000 		.4byte	.LASF96
 2482 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2483 001d 00000000 		.4byte	0
 2484 0021 00000000 		.4byte	.Ldebug_line0
 2485 0025 02       		.uleb128 0x2
 2486 0026 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 78


 2487 0027 06       		.byte	0x6
 2488 0028 E4000000 		.4byte	.LASF0
 2489 002c 02       		.uleb128 0x2
 2490 002d 01       		.byte	0x1
 2491 002e 08       		.byte	0x8
 2492 002f 51040000 		.4byte	.LASF1
 2493 0033 02       		.uleb128 0x2
 2494 0034 02       		.byte	0x2
 2495 0035 05       		.byte	0x5
 2496 0036 5F040000 		.4byte	.LASF2
 2497 003a 02       		.uleb128 0x2
 2498 003b 02       		.byte	0x2
 2499 003c 07       		.byte	0x7
 2500 003d 86020000 		.4byte	.LASF3
 2501 0041 02       		.uleb128 0x2
 2502 0042 04       		.byte	0x4
 2503 0043 05       		.byte	0x5
 2504 0044 23010000 		.4byte	.LASF4
 2505 0048 02       		.uleb128 0x2
 2506 0049 04       		.byte	0x4
 2507 004a 07       		.byte	0x7
 2508 004b 25020000 		.4byte	.LASF5
 2509 004f 02       		.uleb128 0x2
 2510 0050 08       		.byte	0x8
 2511 0051 05       		.byte	0x5
 2512 0052 D6000000 		.4byte	.LASF6
 2513 0056 02       		.uleb128 0x2
 2514 0057 08       		.byte	0x8
 2515 0058 07       		.byte	0x7
 2516 0059 6A000000 		.4byte	.LASF7
 2517 005d 03       		.uleb128 0x3
 2518 005e 04       		.byte	0x4
 2519 005f 05       		.byte	0x5
 2520 0060 696E7400 		.ascii	"int\000"
 2521 0064 02       		.uleb128 0x2
 2522 0065 04       		.byte	0x4
 2523 0066 07       		.byte	0x7
 2524 0067 09020000 		.4byte	.LASF8
 2525 006b 04       		.uleb128 0x4
 2526 006c 4E010000 		.4byte	.LASF9
 2527 0070 02       		.byte	0x2
 2528 0071 C1       		.byte	0xc1
 2529 0072 2C000000 		.4byte	0x2c
 2530 0076 04       		.uleb128 0x4
 2531 0077 17000000 		.4byte	.LASF10
 2532 007b 02       		.byte	0x2
 2533 007c C2       		.byte	0xc2
 2534 007d 3A000000 		.4byte	0x3a
 2535 0081 04       		.uleb128 0x4
 2536 0082 91010000 		.4byte	.LASF11
 2537 0086 02       		.byte	0x2
 2538 0087 C3       		.byte	0xc3
 2539 0088 48000000 		.4byte	0x48
 2540 008c 02       		.uleb128 0x2
 2541 008d 04       		.byte	0x4
 2542 008e 04       		.byte	0x4
 2543 008f 8B030000 		.4byte	.LASF12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 79


 2544 0093 02       		.uleb128 0x2
 2545 0094 08       		.byte	0x8
 2546 0095 04       		.byte	0x4
 2547 0096 6D010000 		.4byte	.LASF13
 2548 009a 02       		.uleb128 0x2
 2549 009b 01       		.byte	0x1
 2550 009c 08       		.byte	0x8
 2551 009d DE040000 		.4byte	.LASF14
 2552 00a1 05       		.uleb128 0x5
 2553 00a2 3B040000 		.4byte	.LASF15
 2554 00a6 02       		.byte	0x2
 2555 00a7 6B01     		.2byte	0x16b
 2556 00a9 AD000000 		.4byte	0xad
 2557 00ad 06       		.uleb128 0x6
 2558 00ae 6B000000 		.4byte	0x6b
 2559 00b2 05       		.uleb128 0x5
 2560 00b3 F9020000 		.4byte	.LASF16
 2561 00b7 02       		.byte	0x2
 2562 00b8 6D01     		.2byte	0x16d
 2563 00ba BE000000 		.4byte	0xbe
 2564 00be 06       		.uleb128 0x6
 2565 00bf 81000000 		.4byte	0x81
 2566 00c3 05       		.uleb128 0x5
 2567 00c4 E3040000 		.4byte	.LASF17
 2568 00c8 02       		.byte	0x2
 2569 00c9 7D01     		.2byte	0x17d
 2570 00cb CF000000 		.4byte	0xcf
 2571 00cf 07       		.uleb128 0x7
 2572 00d0 04       		.byte	0x4
 2573 00d1 D5000000 		.4byte	0xd5
 2574 00d5 08       		.uleb128 0x8
 2575 00d6 02       		.uleb128 0x2
 2576 00d7 04       		.byte	0x4
 2577 00d8 07       		.byte	0x7
 2578 00d9 0E030000 		.4byte	.LASF18
 2579 00dd 04       		.uleb128 0x4
 2580 00de 0D040000 		.4byte	.LASF19
 2581 00e2 03       		.byte	0x3
 2582 00e3 67       		.byte	0x67
 2583 00e4 CF000000 		.4byte	0xcf
 2584 00e8 09       		.uleb128 0x9
 2585 00e9 A6050000 		.4byte	.LASF20
 2586 00ed 01       		.byte	0x1
 2587 00ee 5A       		.byte	0x5a
 2588 00ef 00000000 		.4byte	.LFB0
 2589 00f3 1C000000 		.4byte	.LFE0-.LFB0
 2590 00f7 01       		.uleb128 0x1
 2591 00f8 9C       		.byte	0x9c
 2592 00f9 09       		.uleb128 0x9
 2593 00fa 52020000 		.4byte	.LASF21
 2594 00fe 01       		.byte	0x1
 2595 00ff 78       		.byte	0x78
 2596 0100 00000000 		.4byte	.LFB1
 2597 0104 18000000 		.4byte	.LFE1-.LFB1
 2598 0108 01       		.uleb128 0x1
 2599 0109 9C       		.byte	0x9c
 2600 010a 0A       		.uleb128 0xa
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 80


 2601 010b 27000000 		.4byte	.LASF22
 2602 010f 01       		.byte	0x1
 2603 0110 1901     		.2byte	0x119
 2604 0112 00000000 		.4byte	.LFB2
 2605 0116 44000000 		.4byte	.LFE2-.LFB2
 2606 011a 01       		.uleb128 0x1
 2607 011b 9C       		.byte	0x9c
 2608 011c 3F010000 		.4byte	0x13f
 2609 0120 0B       		.uleb128 0xb
 2610 0121 87040000 		.4byte	.LASF24
 2611 0125 01       		.byte	0x1
 2612 0126 1901     		.2byte	0x119
 2613 0128 81000000 		.4byte	0x81
 2614 012c 02       		.uleb128 0x2
 2615 012d 91       		.byte	0x91
 2616 012e 64       		.sleb128 -28
 2617 012f 0C       		.uleb128 0xc
 2618 0130 01010000 		.4byte	.LASF26
 2619 0134 01       		.byte	0x1
 2620 0135 1B01     		.2byte	0x11b
 2621 0137 6B000000 		.4byte	0x6b
 2622 013b 02       		.uleb128 0x2
 2623 013c 91       		.byte	0x91
 2624 013d 6F       		.sleb128 -17
 2625 013e 00       		.byte	0
 2626 013f 0A       		.uleb128 0xa
 2627 0140 00050000 		.4byte	.LASF23
 2628 0144 01       		.byte	0x1
 2629 0145 4A01     		.2byte	0x14a
 2630 0147 00000000 		.4byte	.LFB3
 2631 014b 44000000 		.4byte	.LFE3-.LFB3
 2632 014f 01       		.uleb128 0x1
 2633 0150 9C       		.byte	0x9c
 2634 0151 74010000 		.4byte	0x174
 2635 0155 0B       		.uleb128 0xb
 2636 0156 9E050000 		.4byte	.LASF25
 2637 015a 01       		.byte	0x1
 2638 015b 4A01     		.2byte	0x14a
 2639 015d 81000000 		.4byte	0x81
 2640 0161 02       		.uleb128 0x2
 2641 0162 91       		.byte	0x91
 2642 0163 64       		.sleb128 -28
 2643 0164 0C       		.uleb128 0xc
 2644 0165 01010000 		.4byte	.LASF26
 2645 0169 01       		.byte	0x1
 2646 016a 4C01     		.2byte	0x14c
 2647 016c 6B000000 		.4byte	0x6b
 2648 0170 02       		.uleb128 0x2
 2649 0171 91       		.byte	0x91
 2650 0172 6F       		.sleb128 -17
 2651 0173 00       		.byte	0
 2652 0174 0A       		.uleb128 0xa
 2653 0175 D2020000 		.4byte	.LASF27
 2654 0179 01       		.byte	0x1
 2655 017a 8601     		.2byte	0x186
 2656 017c 00000000 		.4byte	.LFB4
 2657 0180 E0010000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 81


 2658 0184 01       		.uleb128 0x1
 2659 0185 9C       		.byte	0x9c
 2660 0186 E5010000 		.4byte	0x1e5
 2661 018a 0B       		.uleb128 0xb
 2662 018b F0000000 		.4byte	.LASF28
 2663 018f 01       		.byte	0x1
 2664 0190 8601     		.2byte	0x186
 2665 0192 81000000 		.4byte	0x81
 2666 0196 02       		.uleb128 0x2
 2667 0197 91       		.byte	0x91
 2668 0198 64       		.sleb128 -28
 2669 0199 0C       		.uleb128 0xc
 2670 019a 0F000000 		.4byte	.LASF29
 2671 019e 01       		.byte	0x1
 2672 019f 8C01     		.2byte	0x18c
 2673 01a1 6B000000 		.4byte	0x6b
 2674 01a5 02       		.uleb128 0x2
 2675 01a6 91       		.byte	0x91
 2676 01a7 6F       		.sleb128 -17
 2677 01a8 0C       		.uleb128 0xc
 2678 01a9 31030000 		.4byte	.LASF30
 2679 01ad 01       		.byte	0x1
 2680 01ae 8D01     		.2byte	0x18d
 2681 01b0 6B000000 		.4byte	0x6b
 2682 01b4 02       		.uleb128 0x2
 2683 01b5 91       		.byte	0x91
 2684 01b6 6E       		.sleb128 -18
 2685 01b7 0C       		.uleb128 0xc
 2686 01b8 B7050000 		.4byte	.LASF31
 2687 01bc 01       		.byte	0x1
 2688 01bd 8E01     		.2byte	0x18e
 2689 01bf 6B000000 		.4byte	0x6b
 2690 01c3 02       		.uleb128 0x2
 2691 01c4 91       		.byte	0x91
 2692 01c5 6B       		.sleb128 -21
 2693 01c6 0C       		.uleb128 0xc
 2694 01c7 55000000 		.4byte	.LASF32
 2695 01cb 01       		.byte	0x1
 2696 01cc 8F01     		.2byte	0x18f
 2697 01ce 6B000000 		.4byte	0x6b
 2698 01d2 02       		.uleb128 0x2
 2699 01d3 91       		.byte	0x91
 2700 01d4 6D       		.sleb128 -19
 2701 01d5 0C       		.uleb128 0xc
 2702 01d6 01010000 		.4byte	.LASF26
 2703 01da 01       		.byte	0x1
 2704 01db 9601     		.2byte	0x196
 2705 01dd 6B000000 		.4byte	0x6b
 2706 01e1 02       		.uleb128 0x2
 2707 01e2 91       		.byte	0x91
 2708 01e3 6C       		.sleb128 -20
 2709 01e4 00       		.byte	0
 2710 01e5 0A       		.uleb128 0xa
 2711 01e6 A4010000 		.4byte	.LASF33
 2712 01ea 01       		.byte	0x1
 2713 01eb 5003     		.2byte	0x350
 2714 01ed 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 82


 2715 01f1 64000000 		.4byte	.LFE5-.LFB5
 2716 01f5 01       		.uleb128 0x1
 2717 01f6 9C       		.byte	0x9c
 2718 01f7 0B020000 		.4byte	0x20b
 2719 01fb 0B       		.uleb128 0xb
 2720 01fc 40040000 		.4byte	.LASF34
 2721 0200 01       		.byte	0x1
 2722 0201 5003     		.2byte	0x350
 2723 0203 81000000 		.4byte	0x81
 2724 0207 02       		.uleb128 0x2
 2725 0208 91       		.byte	0x91
 2726 0209 74       		.sleb128 -12
 2727 020a 00       		.byte	0
 2728 020b 0D       		.uleb128 0xd
 2729 020c 6A050000 		.4byte	.LASF35
 2730 0210 01       		.byte	0x1
 2731 0211 7503     		.2byte	0x375
 2732 0213 00000000 		.4byte	.LFB6
 2733 0217 28000000 		.4byte	.LFE6-.LFB6
 2734 021b 01       		.uleb128 0x1
 2735 021c 9C       		.byte	0x9c
 2736 021d 0E       		.uleb128 0xe
 2737 021e 37020000 		.4byte	.LASF76
 2738 0222 01       		.byte	0x1
 2739 0223 8B03     		.2byte	0x38b
 2740 0225 81000000 		.4byte	0x81
 2741 0229 00000000 		.4byte	.LFB7
 2742 022d 18000000 		.4byte	.LFE7-.LFB7
 2743 0231 01       		.uleb128 0x1
 2744 0232 9C       		.byte	0x9c
 2745 0233 0D       		.uleb128 0xd
 2746 0234 7A010000 		.4byte	.LASF36
 2747 0238 01       		.byte	0x1
 2748 0239 9F03     		.2byte	0x39f
 2749 023b 00000000 		.4byte	.LFB8
 2750 023f 14000000 		.4byte	.LFE8-.LFB8
 2751 0243 01       		.uleb128 0x1
 2752 0244 9C       		.byte	0x9c
 2753 0245 0F       		.uleb128 0xf
 2754 0246 72020000 		.4byte	.LASF39
 2755 024a 01       		.byte	0x1
 2756 024b BB03     		.2byte	0x3bb
 2757 024d 81000000 		.4byte	0x81
 2758 0251 00000000 		.4byte	.LFB9
 2759 0255 30000000 		.4byte	.LFE9-.LFB9
 2760 0259 01       		.uleb128 0x1
 2761 025a 9C       		.byte	0x9c
 2762 025b 7E020000 		.4byte	0x27e
 2763 025f 0B       		.uleb128 0xb
 2764 0260 D7040000 		.4byte	.LASF37
 2765 0264 01       		.byte	0x1
 2766 0265 BB03     		.2byte	0x3bb
 2767 0267 81000000 		.4byte	0x81
 2768 026b 02       		.uleb128 0x2
 2769 026c 91       		.byte	0x91
 2770 026d 6C       		.sleb128 -20
 2771 026e 0C       		.uleb128 0xc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 83


 2772 026f 89050000 		.4byte	.LASF38
 2773 0273 01       		.byte	0x1
 2774 0274 BD03     		.2byte	0x3bd
 2775 0276 81000000 		.4byte	0x81
 2776 027a 02       		.uleb128 0x2
 2777 027b 91       		.byte	0x91
 2778 027c 74       		.sleb128 -12
 2779 027d 00       		.byte	0
 2780 027e 0F       		.uleb128 0xf
 2781 027f 47000000 		.4byte	.LASF40
 2782 0283 01       		.byte	0x1
 2783 0284 D603     		.2byte	0x3d6
 2784 0286 81000000 		.4byte	0x81
 2785 028a 00000000 		.4byte	.LFB10
 2786 028e 24000000 		.4byte	.LFE10-.LFB10
 2787 0292 01       		.uleb128 0x1
 2788 0293 9C       		.byte	0x9c
 2789 0294 A8020000 		.4byte	0x2a8
 2790 0298 0C       		.uleb128 0xc
 2791 0299 1E000000 		.4byte	.LASF41
 2792 029d 01       		.byte	0x1
 2793 029e D803     		.2byte	0x3d8
 2794 02a0 81000000 		.4byte	0x81
 2795 02a4 02       		.uleb128 0x2
 2796 02a5 91       		.byte	0x91
 2797 02a6 74       		.sleb128 -12
 2798 02a7 00       		.byte	0
 2799 02a8 10       		.uleb128 0x10
 2800 02a9 92000000 		.4byte	.LASF42
 2801 02ad 01       		.byte	0x1
 2802 02ae F203     		.2byte	0x3f2
 2803 02b0 00000000 		.4byte	.LFB11
 2804 02b4 18000000 		.4byte	.LFE11-.LFB11
 2805 02b8 01       		.uleb128 0x1
 2806 02b9 9C       		.byte	0x9c
 2807 02ba CE020000 		.4byte	0x2ce
 2808 02be 0B       		.uleb128 0xb
 2809 02bf 9F010000 		.4byte	.LASF43
 2810 02c3 01       		.byte	0x1
 2811 02c4 F203     		.2byte	0x3f2
 2812 02c6 81000000 		.4byte	0x81
 2813 02ca 02       		.uleb128 0x2
 2814 02cb 91       		.byte	0x91
 2815 02cc 74       		.sleb128 -12
 2816 02cd 00       		.byte	0
 2817 02ce 11       		.uleb128 0x11
 2818 02cf E7020000 		.4byte	.LASF44
 2819 02d3 01       		.byte	0x1
 2820 02d4 0E04     		.2byte	0x40e
 2821 02d6 C3000000 		.4byte	0xc3
 2822 02da 00000000 		.4byte	.LFB12
 2823 02de 48000000 		.4byte	.LFE12-.LFB12
 2824 02e2 01       		.uleb128 0x1
 2825 02e3 9C       		.byte	0x9c
 2826 02e4 25030000 		.4byte	0x325
 2827 02e8 0B       		.uleb128 0xb
 2828 02e9 98010000 		.4byte	.LASF45
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 84


 2829 02ed 01       		.byte	0x1
 2830 02ee 0E04     		.2byte	0x40e
 2831 02f0 6B000000 		.4byte	0x6b
 2832 02f4 02       		.uleb128 0x2
 2833 02f5 91       		.byte	0x91
 2834 02f6 6F       		.sleb128 -17
 2835 02f7 0B       		.uleb128 0xb
 2836 02f8 29030000 		.4byte	.LASF46
 2837 02fc 01       		.byte	0x1
 2838 02fd 0E04     		.2byte	0x40e
 2839 02ff C3000000 		.4byte	0xc3
 2840 0303 02       		.uleb128 0x2
 2841 0304 91       		.byte	0x91
 2842 0305 68       		.sleb128 -24
 2843 0306 0C       		.uleb128 0xc
 2844 0307 40000000 		.4byte	.LASF47
 2845 030b 01       		.byte	0x1
 2846 030c 1004     		.2byte	0x410
 2847 030e C3000000 		.4byte	0xc3
 2848 0312 02       		.uleb128 0x2
 2849 0313 91       		.byte	0x91
 2850 0314 70       		.sleb128 -16
 2851 0315 0C       		.uleb128 0xc
 2852 0316 00000000 		.4byte	.LASF48
 2853 031a 01       		.byte	0x1
 2854 031b 1104     		.2byte	0x411
 2855 031d 25030000 		.4byte	0x325
 2856 0321 02       		.uleb128 0x2
 2857 0322 91       		.byte	0x91
 2858 0323 74       		.sleb128 -12
 2859 0324 00       		.byte	0
 2860 0325 07       		.uleb128 0x7
 2861 0326 04       		.byte	0x4
 2862 0327 C3000000 		.4byte	0xc3
 2863 032b 11       		.uleb128 0x11
 2864 032c 75040000 		.4byte	.LASF49
 2865 0330 01       		.byte	0x1
 2866 0331 3304     		.2byte	0x433
 2867 0333 C3000000 		.4byte	0xc3
 2868 0337 00000000 		.4byte	.LFB13
 2869 033b 34000000 		.4byte	.LFE13-.LFB13
 2870 033f 01       		.uleb128 0x1
 2871 0340 9C       		.byte	0x9c
 2872 0341 64030000 		.4byte	0x364
 2873 0345 0B       		.uleb128 0xb
 2874 0346 98010000 		.4byte	.LASF45
 2875 034a 01       		.byte	0x1
 2876 034b 3304     		.2byte	0x433
 2877 034d 6B000000 		.4byte	0x6b
 2878 0351 02       		.uleb128 0x2
 2879 0352 91       		.byte	0x91
 2880 0353 6F       		.sleb128 -17
 2881 0354 0C       		.uleb128 0xc
 2882 0355 00000000 		.4byte	.LASF48
 2883 0359 01       		.byte	0x1
 2884 035a 3504     		.2byte	0x435
 2885 035c 25030000 		.4byte	0x325
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 85


 2886 0360 02       		.uleb128 0x2
 2887 0361 91       		.byte	0x91
 2888 0362 74       		.sleb128 -12
 2889 0363 00       		.byte	0
 2890 0364 11       		.uleb128 0x11
 2891 0365 99020000 		.4byte	.LASF50
 2892 0369 01       		.byte	0x1
 2893 036a 4C04     		.2byte	0x44c
 2894 036c C3000000 		.4byte	0xc3
 2895 0370 00000000 		.4byte	.LFB14
 2896 0374 4C000000 		.4byte	.LFE14-.LFB14
 2897 0378 01       		.uleb128 0x1
 2898 0379 9C       		.byte	0x9c
 2899 037a BB030000 		.4byte	0x3bb
 2900 037e 0B       		.uleb128 0xb
 2901 037f 98010000 		.4byte	.LASF45
 2902 0383 01       		.byte	0x1
 2903 0384 4C04     		.2byte	0x44c
 2904 0386 6B000000 		.4byte	0x6b
 2905 038a 02       		.uleb128 0x2
 2906 038b 91       		.byte	0x91
 2907 038c 6F       		.sleb128 -17
 2908 038d 0B       		.uleb128 0xb
 2909 038e 29030000 		.4byte	.LASF46
 2910 0392 01       		.byte	0x1
 2911 0393 4C04     		.2byte	0x44c
 2912 0395 C3000000 		.4byte	0xc3
 2913 0399 02       		.uleb128 0x2
 2914 039a 91       		.byte	0x91
 2915 039b 68       		.sleb128 -24
 2916 039c 0C       		.uleb128 0xc
 2917 039d 40000000 		.4byte	.LASF47
 2918 03a1 01       		.byte	0x1
 2919 03a2 4E04     		.2byte	0x44e
 2920 03a4 C3000000 		.4byte	0xc3
 2921 03a8 02       		.uleb128 0x2
 2922 03a9 91       		.byte	0x91
 2923 03aa 70       		.sleb128 -16
 2924 03ab 0C       		.uleb128 0xc
 2925 03ac 00000000 		.4byte	.LASF48
 2926 03b0 01       		.byte	0x1
 2927 03b1 4F04     		.2byte	0x44f
 2928 03b3 25030000 		.4byte	0x325
 2929 03b7 02       		.uleb128 0x2
 2930 03b8 91       		.byte	0x91
 2931 03b9 74       		.sleb128 -12
 2932 03ba 00       		.byte	0
 2933 03bb 11       		.uleb128 0x11
 2934 03bc 1F040000 		.4byte	.LASF51
 2935 03c0 01       		.byte	0x1
 2936 03c1 6B04     		.2byte	0x46b
 2937 03c3 C3000000 		.4byte	0xc3
 2938 03c7 00000000 		.4byte	.LFB15
 2939 03cb 36000000 		.4byte	.LFE15-.LFB15
 2940 03cf 01       		.uleb128 0x1
 2941 03d0 9C       		.byte	0x9c
 2942 03d1 F4030000 		.4byte	0x3f4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 86


 2943 03d5 0B       		.uleb128 0xb
 2944 03d6 98010000 		.4byte	.LASF45
 2945 03da 01       		.byte	0x1
 2946 03db 6B04     		.2byte	0x46b
 2947 03dd 6B000000 		.4byte	0x6b
 2948 03e1 02       		.uleb128 0x2
 2949 03e2 91       		.byte	0x91
 2950 03e3 6F       		.sleb128 -17
 2951 03e4 0C       		.uleb128 0xc
 2952 03e5 00000000 		.4byte	.LASF48
 2953 03e9 01       		.byte	0x1
 2954 03ea 6D04     		.2byte	0x46d
 2955 03ec 25030000 		.4byte	0x325
 2956 03f0 02       		.uleb128 0x2
 2957 03f1 91       		.byte	0x91
 2958 03f2 74       		.sleb128 -12
 2959 03f3 00       		.byte	0
 2960 03f4 0A       		.uleb128 0xa
 2961 03f5 7A030000 		.4byte	.LASF52
 2962 03f9 01       		.byte	0x1
 2963 03fa 8304     		.2byte	0x483
 2964 03fc 00000000 		.4byte	.LFB16
 2965 0400 A8000000 		.4byte	.LFE16-.LFB16
 2966 0404 01       		.uleb128 0x1
 2967 0405 9C       		.byte	0x9c
 2968 0406 56040000 		.4byte	0x456
 2969 040a 0B       		.uleb128 0xb
 2970 040b 98010000 		.4byte	.LASF45
 2971 040f 01       		.byte	0x1
 2972 0410 8304     		.2byte	0x483
 2973 0412 6B000000 		.4byte	0x6b
 2974 0416 02       		.uleb128 0x2
 2975 0417 91       		.byte	0x91
 2976 0418 5F       		.sleb128 -33
 2977 0419 0B       		.uleb128 0xb
 2978 041a C9020000 		.4byte	.LASF53
 2979 041e 01       		.byte	0x1
 2980 041f 8304     		.2byte	0x483
 2981 0421 6B000000 		.4byte	0x6b
 2982 0425 02       		.uleb128 0x2
 2983 0426 91       		.byte	0x91
 2984 0427 5E       		.sleb128 -34
 2985 0428 0C       		.uleb128 0xc
 2986 0429 01010000 		.4byte	.LASF26
 2987 042d 01       		.byte	0x1
 2988 042e 8504     		.2byte	0x485
 2989 0430 6B000000 		.4byte	0x6b
 2990 0434 02       		.uleb128 0x2
 2991 0435 91       		.byte	0x91
 2992 0436 6B       		.sleb128 -21
 2993 0437 0C       		.uleb128 0xc
 2994 0438 74010000 		.4byte	.LASF54
 2995 043c 01       		.byte	0x1
 2996 043d 8604     		.2byte	0x486
 2997 043f 81000000 		.4byte	0x81
 2998 0443 02       		.uleb128 0x2
 2999 0444 91       		.byte	0x91
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 87


 3000 0445 6C       		.sleb128 -20
 3001 0446 0C       		.uleb128 0xc
 3002 0447 DF010000 		.4byte	.LASF55
 3003 044b 01       		.byte	0x1
 3004 044c 8704     		.2byte	0x487
 3005 044e 81000000 		.4byte	0x81
 3006 0452 02       		.uleb128 0x2
 3007 0453 91       		.byte	0x91
 3008 0454 64       		.sleb128 -28
 3009 0455 00       		.byte	0
 3010 0456 11       		.uleb128 0x11
 3011 0457 B3010000 		.4byte	.LASF56
 3012 045b 01       		.byte	0x1
 3013 045c A704     		.2byte	0x4a7
 3014 045e 6B000000 		.4byte	0x6b
 3015 0462 00000000 		.4byte	.LFB17
 3016 0466 58000000 		.4byte	.LFE17-.LFB17
 3017 046a 01       		.uleb128 0x1
 3018 046b 9C       		.byte	0x9c
 3019 046c 8F040000 		.4byte	0x48f
 3020 0470 0B       		.uleb128 0xb
 3021 0471 98010000 		.4byte	.LASF45
 3022 0475 01       		.byte	0x1
 3023 0476 A704     		.2byte	0x4a7
 3024 0478 6B000000 		.4byte	0x6b
 3025 047c 02       		.uleb128 0x2
 3026 047d 91       		.byte	0x91
 3027 047e 6F       		.sleb128 -17
 3028 047f 0C       		.uleb128 0xc
 3029 0480 C9020000 		.4byte	.LASF53
 3030 0484 01       		.byte	0x1
 3031 0485 A904     		.2byte	0x4a9
 3032 0487 6B000000 		.4byte	0x6b
 3033 048b 02       		.uleb128 0x2
 3034 048c 91       		.byte	0x91
 3035 048d 77       		.sleb128 -9
 3036 048e 00       		.byte	0
 3037 048f 10       		.uleb128 0x10
 3038 0490 69040000 		.4byte	.LASF57
 3039 0494 01       		.byte	0x1
 3040 0495 C104     		.2byte	0x4c1
 3041 0497 00000000 		.4byte	.LFB18
 3042 049b 2C000000 		.4byte	.LFE18-.LFB18
 3043 049f 01       		.uleb128 0x1
 3044 04a0 9C       		.byte	0x9c
 3045 04a1 B5040000 		.4byte	0x4b5
 3046 04a5 0B       		.uleb128 0xb
 3047 04a6 98010000 		.4byte	.LASF45
 3048 04aa 01       		.byte	0x1
 3049 04ab C104     		.2byte	0x4c1
 3050 04ad 6B000000 		.4byte	0x6b
 3051 04b1 02       		.uleb128 0x2
 3052 04b2 91       		.byte	0x91
 3053 04b3 77       		.sleb128 -9
 3054 04b4 00       		.byte	0
 3055 04b5 0F       		.uleb128 0xf
 3056 04b6 C8000000 		.4byte	.LASF58
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 88


 3057 04ba 01       		.byte	0x1
 3058 04bb D504     		.2byte	0x4d5
 3059 04bd 6B000000 		.4byte	0x6b
 3060 04c1 00000000 		.4byte	.LFB19
 3061 04c5 34000000 		.4byte	.LFE19-.LFB19
 3062 04c9 01       		.uleb128 0x1
 3063 04ca 9C       		.byte	0x9c
 3064 04cb DF040000 		.4byte	0x4df
 3065 04cf 0B       		.uleb128 0xb
 3066 04d0 98010000 		.4byte	.LASF45
 3067 04d4 01       		.byte	0x1
 3068 04d5 D504     		.2byte	0x4d5
 3069 04d7 6B000000 		.4byte	0x6b
 3070 04db 02       		.uleb128 0x2
 3071 04dc 91       		.byte	0x91
 3072 04dd 77       		.sleb128 -9
 3073 04de 00       		.byte	0
 3074 04df 10       		.uleb128 0x10
 3075 04e0 2C010000 		.4byte	.LASF59
 3076 04e4 01       		.byte	0x1
 3077 04e5 EA04     		.2byte	0x4ea
 3078 04e7 00000000 		.4byte	.LFB20
 3079 04eb 2C000000 		.4byte	.LFE20-.LFB20
 3080 04ef 01       		.uleb128 0x1
 3081 04f0 9C       		.byte	0x9c
 3082 04f1 05050000 		.4byte	0x505
 3083 04f5 0B       		.uleb128 0xb
 3084 04f6 98010000 		.4byte	.LASF45
 3085 04fa 01       		.byte	0x1
 3086 04fb EA04     		.2byte	0x4ea
 3087 04fd 6B000000 		.4byte	0x6b
 3088 0501 02       		.uleb128 0x2
 3089 0502 91       		.byte	0x91
 3090 0503 77       		.sleb128 -9
 3091 0504 00       		.byte	0
 3092 0505 10       		.uleb128 0x10
 3093 0506 62020000 		.4byte	.LASF60
 3094 050a 01       		.byte	0x1
 3095 050b FD04     		.2byte	0x4fd
 3096 050d 00000000 		.4byte	.LFB21
 3097 0511 2C000000 		.4byte	.LFE21-.LFB21
 3098 0515 01       		.uleb128 0x1
 3099 0516 9C       		.byte	0x9c
 3100 0517 2B050000 		.4byte	0x52b
 3101 051b 0B       		.uleb128 0xb
 3102 051c 98010000 		.4byte	.LASF45
 3103 0520 01       		.byte	0x1
 3104 0521 FD04     		.2byte	0x4fd
 3105 0523 6B000000 		.4byte	0x6b
 3106 0527 02       		.uleb128 0x2
 3107 0528 91       		.byte	0x91
 3108 0529 77       		.sleb128 -9
 3109 052a 00       		.byte	0
 3110 052b 10       		.uleb128 0x10
 3111 052c 17030000 		.4byte	.LASF61
 3112 0530 01       		.byte	0x1
 3113 0531 1105     		.2byte	0x511
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 89


 3114 0533 00000000 		.4byte	.LFB22
 3115 0537 2C000000 		.4byte	.LFE22-.LFB22
 3116 053b 01       		.uleb128 0x1
 3117 053c 9C       		.byte	0x9c
 3118 053d 51050000 		.4byte	0x551
 3119 0541 0B       		.uleb128 0xb
 3120 0542 98010000 		.4byte	.LASF45
 3121 0546 01       		.byte	0x1
 3122 0547 1105     		.2byte	0x511
 3123 0549 6B000000 		.4byte	0x6b
 3124 054d 02       		.uleb128 0x2
 3125 054e 91       		.byte	0x91
 3126 054f 77       		.sleb128 -9
 3127 0550 00       		.byte	0
 3128 0551 10       		.uleb128 0x10
 3129 0552 4A040000 		.4byte	.LASF62
 3130 0556 01       		.byte	0x1
 3131 0557 2505     		.2byte	0x525
 3132 0559 00000000 		.4byte	.LFB23
 3133 055d 14000000 		.4byte	.LFE23-.LFB23
 3134 0561 01       		.uleb128 0x1
 3135 0562 9C       		.byte	0x9c
 3136 0563 77050000 		.4byte	0x577
 3137 0567 0B       		.uleb128 0xb
 3138 0568 D7040000 		.4byte	.LASF37
 3139 056c 01       		.byte	0x1
 3140 056d 2505     		.2byte	0x525
 3141 056f 6B000000 		.4byte	0x6b
 3142 0573 02       		.uleb128 0x2
 3143 0574 91       		.byte	0x91
 3144 0575 77       		.sleb128 -9
 3145 0576 00       		.byte	0
 3146 0577 0D       		.uleb128 0xd
 3147 0578 9F000000 		.4byte	.LASF63
 3148 057c 01       		.byte	0x1
 3149 057d 4405     		.2byte	0x544
 3150 057f 00000000 		.4byte	.LFB24
 3151 0583 20000000 		.4byte	.LFE24-.LFB24
 3152 0587 01       		.uleb128 0x1
 3153 0588 9C       		.byte	0x9c
 3154 0589 0A       		.uleb128 0xa
 3155 058a 48050000 		.4byte	.LASF64
 3156 058e 01       		.byte	0x1
 3157 058f 5D05     		.2byte	0x55d
 3158 0591 00000000 		.4byte	.LFB25
 3159 0595 48000000 		.4byte	.LFE25-.LFB25
 3160 0599 01       		.uleb128 0x1
 3161 059a 9C       		.byte	0x9c
 3162 059b AF050000 		.4byte	0x5af
 3163 059f 0B       		.uleb128 0xb
 3164 05a0 2E040000 		.4byte	.LASF65
 3165 05a4 01       		.byte	0x1
 3166 05a5 5D05     		.2byte	0x55d
 3167 05a7 81000000 		.4byte	0x81
 3168 05ab 02       		.uleb128 0x2
 3169 05ac 91       		.byte	0x91
 3170 05ad 74       		.sleb128 -12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 90


 3171 05ae 00       		.byte	0
 3172 05af 0A       		.uleb128 0xa
 3173 05b0 63010000 		.4byte	.LASF66
 3174 05b4 01       		.byte	0x1
 3175 05b5 7905     		.2byte	0x579
 3176 05b7 00000000 		.4byte	.LFB26
 3177 05bb 28000000 		.4byte	.LFE26-.LFB26
 3178 05bf 01       		.uleb128 0x1
 3179 05c0 9C       		.byte	0x9c
 3180 05c1 D5050000 		.4byte	0x5d5
 3181 05c5 0B       		.uleb128 0xb
 3182 05c6 C8050000 		.4byte	.LASF67
 3183 05ca 01       		.byte	0x1
 3184 05cb 7905     		.2byte	0x579
 3185 05cd 76000000 		.4byte	0x76
 3186 05d1 02       		.uleb128 0x2
 3187 05d2 91       		.byte	0x91
 3188 05d3 76       		.sleb128 -10
 3189 05d4 00       		.byte	0
 3190 05d5 0A       		.uleb128 0xa
 3191 05d6 F5000000 		.4byte	.LASF68
 3192 05da 01       		.byte	0x1
 3193 05db 8C05     		.2byte	0x58c
 3194 05dd 00000000 		.4byte	.LFB27
 3195 05e1 80000000 		.4byte	.LFE27-.LFB27
 3196 05e5 01       		.uleb128 0x1
 3197 05e6 9C       		.byte	0x9c
 3198 05e7 FB050000 		.4byte	0x5fb
 3199 05eb 0B       		.uleb128 0xb
 3200 05ec F0000000 		.4byte	.LASF28
 3201 05f0 01       		.byte	0x1
 3202 05f1 8C05     		.2byte	0x58c
 3203 05f3 81000000 		.4byte	0x81
 3204 05f7 02       		.uleb128 0x2
 3205 05f8 91       		.byte	0x91
 3206 05f9 74       		.sleb128 -12
 3207 05fa 00       		.byte	0
 3208 05fb 12       		.uleb128 0x12
 3209 05fc FF020000 		.4byte	.LASF69
 3210 0600 01       		.byte	0x1
 3211 0601 AF05     		.2byte	0x5af
 3212 0603 00000000 		.4byte	.LFB28
 3213 0607 24000000 		.4byte	.LFE28-.LFB28
 3214 060b 01       		.uleb128 0x1
 3215 060c 9C       		.byte	0x9c
 3216 060d 0A       		.uleb128 0xa
 3217 060e D1010000 		.4byte	.LASF70
 3218 0612 01       		.byte	0x1
 3219 0613 D105     		.2byte	0x5d1
 3220 0615 00000000 		.4byte	.LFB29
 3221 0619 60000000 		.4byte	.LFE29-.LFB29
 3222 061d 01       		.uleb128 0x1
 3223 061e 9C       		.byte	0x9c
 3224 061f 31060000 		.4byte	0x631
 3225 0623 13       		.uleb128 0x13
 3226 0624 6900     		.ascii	"i\000"
 3227 0626 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 91


 3228 0627 D305     		.2byte	0x5d3
 3229 0629 81000000 		.4byte	0x81
 3230 062d 02       		.uleb128 0x2
 3231 062e 91       		.byte	0x91
 3232 062f 74       		.sleb128 -12
 3233 0630 00       		.byte	0
 3234 0631 12       		.uleb128 0x12
 3235 0632 F0040000 		.4byte	.LASF71
 3236 0636 01       		.byte	0x1
 3237 0637 F705     		.2byte	0x5f7
 3238 0639 00000000 		.4byte	.LFB30
 3239 063d 1C000000 		.4byte	.LFE30-.LFB30
 3240 0641 01       		.uleb128 0x1
 3241 0642 9C       		.byte	0x9c
 3242 0643 0D       		.uleb128 0xd
 3243 0644 90050000 		.4byte	.LASF72
 3244 0648 01       		.byte	0x1
 3245 0649 0F06     		.2byte	0x60f
 3246 064b 00000000 		.4byte	.LFB31
 3247 064f 18000000 		.4byte	.LFE31-.LFB31
 3248 0653 01       		.uleb128 0x1
 3249 0654 9C       		.byte	0x9c
 3250 0655 0D       		.uleb128 0xd
 3251 0656 AF000000 		.4byte	.LASF73
 3252 065a 01       		.byte	0x1
 3253 065b 2606     		.2byte	0x626
 3254 065d 00000000 		.4byte	.LFB32
 3255 0661 18000000 		.4byte	.LFE32-.LFB32
 3256 0665 01       		.uleb128 0x1
 3257 0666 9C       		.byte	0x9c
 3258 0667 0D       		.uleb128 0xd
 3259 0668 50050000 		.4byte	.LASF74
 3260 066c 01       		.byte	0x1
 3261 066d 3D06     		.2byte	0x63d
 3262 066f 00000000 		.4byte	.LFB33
 3263 0673 18000000 		.4byte	.LFE33-.LFB33
 3264 0677 01       		.uleb128 0x1
 3265 0678 9C       		.byte	0x9c
 3266 0679 10       		.uleb128 0x10
 3267 067a D5050000 		.4byte	.LASF75
 3268 067e 01       		.byte	0x1
 3269 067f 5306     		.2byte	0x653
 3270 0681 00000000 		.4byte	.LFB34
 3271 0685 1C000000 		.4byte	.LFE34-.LFB34
 3272 0689 01       		.uleb128 0x1
 3273 068a 9C       		.byte	0x9c
 3274 068b 9F060000 		.4byte	0x69f
 3275 068f 0B       		.uleb128 0xb
 3276 0690 DF010000 		.4byte	.LASF55
 3277 0694 01       		.byte	0x1
 3278 0695 5306     		.2byte	0x653
 3279 0697 81000000 		.4byte	0x81
 3280 069b 02       		.uleb128 0x2
 3281 069c 91       		.byte	0x91
 3282 069d 74       		.sleb128 -12
 3283 069e 00       		.byte	0
 3284 069f 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 92


 3285 06a0 10010000 		.4byte	.LASF77
 3286 06a4 01       		.byte	0x1
 3287 06a5 6706     		.2byte	0x667
 3288 06a7 81000000 		.4byte	0x81
 3289 06ab 00000000 		.4byte	.LFB35
 3290 06af 18000000 		.4byte	.LFE35-.LFB35
 3291 06b3 01       		.uleb128 0x1
 3292 06b4 9C       		.byte	0x9c
 3293 06b5 0E       		.uleb128 0xe
 3294 06b6 5A030000 		.4byte	.LASF78
 3295 06ba 01       		.byte	0x1
 3296 06bb 7B06     		.2byte	0x67b
 3297 06bd 81000000 		.4byte	0x81
 3298 06c1 00000000 		.4byte	.LFB36
 3299 06c5 18000000 		.4byte	.LFE36-.LFB36
 3300 06c9 01       		.uleb128 0x1
 3301 06ca 9C       		.byte	0x9c
 3302 06cb 0E       		.uleb128 0xe
 3303 06cc F3010000 		.4byte	.LASF79
 3304 06d0 01       		.byte	0x1
 3305 06d1 BC06     		.2byte	0x6bc
 3306 06d3 81000000 		.4byte	0x81
 3307 06d7 00000000 		.4byte	.LFB37
 3308 06db 18000000 		.4byte	.LFE37-.LFB37
 3309 06df 01       		.uleb128 0x1
 3310 06e0 9C       		.byte	0x9c
 3311 06e1 0D       		.uleb128 0xd
 3312 06e2 16020000 		.4byte	.LASF80
 3313 06e6 01       		.byte	0x1
 3314 06e7 D006     		.2byte	0x6d0
 3315 06e9 00000000 		.4byte	.LFB38
 3316 06ed 14000000 		.4byte	.LFE38-.LFB38
 3317 06f1 01       		.uleb128 0x1
 3318 06f2 9C       		.byte	0x9c
 3319 06f3 0F       		.uleb128 0xf
 3320 06f4 17050000 		.4byte	.LASF81
 3321 06f8 01       		.byte	0x1
 3322 06f9 F506     		.2byte	0x6f5
 3323 06fb DD000000 		.4byte	0xdd
 3324 06ff 00000000 		.4byte	.LFB39
 3325 0703 2C000000 		.4byte	.LFE39-.LFB39
 3326 0707 01       		.uleb128 0x1
 3327 0708 9C       		.byte	0x9c
 3328 0709 3B070000 		.4byte	0x73b
 3329 070d 0B       		.uleb128 0xb
 3330 070e 98010000 		.4byte	.LASF45
 3331 0712 01       		.byte	0x1
 3332 0713 F506     		.2byte	0x6f5
 3333 0715 81000000 		.4byte	0x81
 3334 0719 02       		.uleb128 0x2
 3335 071a 91       		.byte	0x91
 3336 071b 6C       		.sleb128 -20
 3337 071c 0B       		.uleb128 0xb
 3338 071d 40030000 		.4byte	.LASF82
 3339 0721 01       		.byte	0x1
 3340 0722 F506     		.2byte	0x6f5
 3341 0724 DD000000 		.4byte	0xdd
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 93


 3342 0728 02       		.uleb128 0x2
 3343 0729 91       		.byte	0x91
 3344 072a 68       		.sleb128 -24
 3345 072b 0C       		.uleb128 0xc
 3346 072c 39030000 		.4byte	.LASF83
 3347 0730 01       		.byte	0x1
 3348 0731 F706     		.2byte	0x6f7
 3349 0733 DD000000 		.4byte	0xdd
 3350 0737 02       		.uleb128 0x2
 3351 0738 91       		.byte	0x91
 3352 0739 74       		.sleb128 -12
 3353 073a 00       		.byte	0
 3354 073b 0F       		.uleb128 0xf
 3355 073c 39010000 		.4byte	.LASF84
 3356 0740 01       		.byte	0x1
 3357 0741 0F07     		.2byte	0x70f
 3358 0743 DD000000 		.4byte	0xdd
 3359 0747 00000000 		.4byte	.LFB40
 3360 074b 1C000000 		.4byte	.LFE40-.LFB40
 3361 074f 01       		.uleb128 0x1
 3362 0750 9C       		.byte	0x9c
 3363 0751 65070000 		.4byte	0x765
 3364 0755 0B       		.uleb128 0xb
 3365 0756 98010000 		.4byte	.LASF45
 3366 075a 01       		.byte	0x1
 3367 075b 0F07     		.2byte	0x70f
 3368 075d 81000000 		.4byte	0x81
 3369 0761 02       		.uleb128 0x2
 3370 0762 91       		.byte	0x91
 3371 0763 74       		.sleb128 -12
 3372 0764 00       		.byte	0
 3373 0765 14       		.uleb128 0x14
 3374 0766 E8050000 		.4byte	.LASF97
 3375 076a 01       		.byte	0x1
 3376 076b 2307     		.2byte	0x723
 3377 076d 00000000 		.4byte	.LFB41
 3378 0771 44000000 		.4byte	.LFE41-.LFB41
 3379 0775 01       		.uleb128 0x1
 3380 0776 9C       		.byte	0x9c
 3381 0777 89070000 		.4byte	0x789
 3382 077b 13       		.uleb128 0x13
 3383 077c 6900     		.ascii	"i\000"
 3384 077e 01       		.byte	0x1
 3385 077f 2507     		.2byte	0x725
 3386 0781 81000000 		.4byte	0x81
 3387 0785 02       		.uleb128 0x2
 3388 0786 91       		.byte	0x91
 3389 0787 74       		.sleb128 -12
 3390 0788 00       		.byte	0
 3391 0789 10       		.uleb128 0x10
 3392 078a E5010000 		.4byte	.LASF85
 3393 078e 01       		.byte	0x1
 3394 078f 4807     		.2byte	0x748
 3395 0791 00000000 		.4byte	.LFB42
 3396 0795 C0000000 		.4byte	.LFE42-.LFB42
 3397 0799 01       		.uleb128 0x1
 3398 079a 9C       		.byte	0x9c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 94


 3399 079b AF070000 		.4byte	0x7af
 3400 079f 0B       		.uleb128 0xb
 3401 07a0 3F050000 		.4byte	.LASF86
 3402 07a4 01       		.byte	0x1
 3403 07a5 4807     		.2byte	0x748
 3404 07a7 AF070000 		.4byte	0x7af
 3405 07ab 02       		.uleb128 0x2
 3406 07ac 91       		.byte	0x91
 3407 07ad 74       		.sleb128 -12
 3408 07ae 00       		.byte	0
 3409 07af 07       		.uleb128 0x7
 3410 07b0 04       		.byte	0x4
 3411 07b1 81000000 		.4byte	0x81
 3412 07b5 15       		.uleb128 0x15
 3413 07b6 DD000000 		.4byte	0xdd
 3414 07ba C5070000 		.4byte	0x7c5
 3415 07be 16       		.uleb128 0x16
 3416 07bf D6000000 		.4byte	0xd6
 3417 07c3 04       		.byte	0x4
 3418 07c4 00       		.byte	0
 3419 07c5 17       		.uleb128 0x17
 3420 07c6 2C050000 		.4byte	.LASF87
 3421 07ca 01       		.byte	0x1
 3422 07cb 22       		.byte	0x22
 3423 07cc B5070000 		.4byte	0x7b5
 3424 07d0 05       		.uleb128 0x5
 3425 07d1 03       		.byte	0x3
 3426 07d2 00000000 		.4byte	CySysTickCallbacks
 3427 07d6 18       		.uleb128 0x18
 3428 07d7 81000000 		.4byte	.LASF88
 3429 07db 01       		.byte	0x1
 3430 07dc 34       		.byte	0x34
 3431 07dd 81000000 		.4byte	0x81
 3432 07e1 05       		.uleb128 0x5
 3433 07e2 03       		.byte	0x3
 3434 07e3 00000000 		.4byte	CySysTickInitVar
 3435 07e7 18       		.uleb128 0x18
 3436 07e8 6C030000 		.4byte	.LASF89
 3437 07ec 01       		.byte	0x1
 3438 07ed 1B       		.byte	0x1b
 3439 07ee 81000000 		.4byte	0x81
 3440 07f2 05       		.uleb128 0x5
 3441 07f3 03       		.byte	0x3
 3442 07f4 00000000 		.4byte	cydelayFreqHz
 3443 07f8 18       		.uleb128 0x18
 3444 07f9 54010000 		.4byte	.LASF90
 3445 07fd 01       		.byte	0x1
 3446 07fe 1C       		.byte	0x1c
 3447 07ff 81000000 		.4byte	0x81
 3448 0803 05       		.uleb128 0x5
 3449 0804 03       		.byte	0x3
 3450 0805 00000000 		.4byte	cydelayFreqKhz
 3451 0809 18       		.uleb128 0x18
 3452 080a 7A050000 		.4byte	.LASF91
 3453 080e 01       		.byte	0x1
 3454 080f 1D       		.byte	0x1d
 3455 0810 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 95


 3456 0814 05       		.uleb128 0x5
 3457 0815 03       		.byte	0x3
 3458 0816 00000000 		.4byte	cydelayFreqMhz
 3459 081a 18       		.uleb128 0x18
 3460 081b C4010000 		.4byte	.LASF92
 3461 081f 01       		.byte	0x1
 3462 0820 1E       		.byte	0x1e
 3463 0821 81000000 		.4byte	0x81
 3464 0825 05       		.uleb128 0x5
 3465 0826 03       		.byte	0x3
 3466 0827 00000000 		.4byte	cydelay32kMs
 3467 082b 15       		.uleb128 0x15
 3468 082c 6B000000 		.4byte	0x6b
 3469 0830 3B080000 		.4byte	0x83b
 3470 0834 16       		.uleb128 0x16
 3471 0835 D6000000 		.4byte	0xd6
 3472 0839 2D       		.byte	0x2d
 3473 083a 00       		.byte	0
 3474 083b 18       		.uleb128 0x18
 3475 083c 49030000 		.4byte	.LASF93
 3476 0840 01       		.byte	0x1
 3477 0841 39       		.byte	0x39
 3478 0842 4C080000 		.4byte	0x84c
 3479 0846 05       		.uleb128 0x5
 3480 0847 03       		.byte	0x3
 3481 0848 00000000 		.4byte	cyImoFreqMhz2Reg
 3482 084c 19       		.uleb128 0x19
 3483 084d 2B080000 		.4byte	0x82b
 3484 0851 00       		.byte	0
 3485              		.section	.debug_abbrev,"",%progbits
 3486              	.Ldebug_abbrev0:
 3487 0000 01       		.uleb128 0x1
 3488 0001 11       		.uleb128 0x11
 3489 0002 01       		.byte	0x1
 3490 0003 25       		.uleb128 0x25
 3491 0004 0E       		.uleb128 0xe
 3492 0005 13       		.uleb128 0x13
 3493 0006 0B       		.uleb128 0xb
 3494 0007 03       		.uleb128 0x3
 3495 0008 0E       		.uleb128 0xe
 3496 0009 1B       		.uleb128 0x1b
 3497 000a 0E       		.uleb128 0xe
 3498 000b 55       		.uleb128 0x55
 3499 000c 17       		.uleb128 0x17
 3500 000d 11       		.uleb128 0x11
 3501 000e 01       		.uleb128 0x1
 3502 000f 10       		.uleb128 0x10
 3503 0010 17       		.uleb128 0x17
 3504 0011 00       		.byte	0
 3505 0012 00       		.byte	0
 3506 0013 02       		.uleb128 0x2
 3507 0014 24       		.uleb128 0x24
 3508 0015 00       		.byte	0
 3509 0016 0B       		.uleb128 0xb
 3510 0017 0B       		.uleb128 0xb
 3511 0018 3E       		.uleb128 0x3e
 3512 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 96


 3513 001a 03       		.uleb128 0x3
 3514 001b 0E       		.uleb128 0xe
 3515 001c 00       		.byte	0
 3516 001d 00       		.byte	0
 3517 001e 03       		.uleb128 0x3
 3518 001f 24       		.uleb128 0x24
 3519 0020 00       		.byte	0
 3520 0021 0B       		.uleb128 0xb
 3521 0022 0B       		.uleb128 0xb
 3522 0023 3E       		.uleb128 0x3e
 3523 0024 0B       		.uleb128 0xb
 3524 0025 03       		.uleb128 0x3
 3525 0026 08       		.uleb128 0x8
 3526 0027 00       		.byte	0
 3527 0028 00       		.byte	0
 3528 0029 04       		.uleb128 0x4
 3529 002a 16       		.uleb128 0x16
 3530 002b 00       		.byte	0
 3531 002c 03       		.uleb128 0x3
 3532 002d 0E       		.uleb128 0xe
 3533 002e 3A       		.uleb128 0x3a
 3534 002f 0B       		.uleb128 0xb
 3535 0030 3B       		.uleb128 0x3b
 3536 0031 0B       		.uleb128 0xb
 3537 0032 49       		.uleb128 0x49
 3538 0033 13       		.uleb128 0x13
 3539 0034 00       		.byte	0
 3540 0035 00       		.byte	0
 3541 0036 05       		.uleb128 0x5
 3542 0037 16       		.uleb128 0x16
 3543 0038 00       		.byte	0
 3544 0039 03       		.uleb128 0x3
 3545 003a 0E       		.uleb128 0xe
 3546 003b 3A       		.uleb128 0x3a
 3547 003c 0B       		.uleb128 0xb
 3548 003d 3B       		.uleb128 0x3b
 3549 003e 05       		.uleb128 0x5
 3550 003f 49       		.uleb128 0x49
 3551 0040 13       		.uleb128 0x13
 3552 0041 00       		.byte	0
 3553 0042 00       		.byte	0
 3554 0043 06       		.uleb128 0x6
 3555 0044 35       		.uleb128 0x35
 3556 0045 00       		.byte	0
 3557 0046 49       		.uleb128 0x49
 3558 0047 13       		.uleb128 0x13
 3559 0048 00       		.byte	0
 3560 0049 00       		.byte	0
 3561 004a 07       		.uleb128 0x7
 3562 004b 0F       		.uleb128 0xf
 3563 004c 00       		.byte	0
 3564 004d 0B       		.uleb128 0xb
 3565 004e 0B       		.uleb128 0xb
 3566 004f 49       		.uleb128 0x49
 3567 0050 13       		.uleb128 0x13
 3568 0051 00       		.byte	0
 3569 0052 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 97


 3570 0053 08       		.uleb128 0x8
 3571 0054 15       		.uleb128 0x15
 3572 0055 00       		.byte	0
 3573 0056 27       		.uleb128 0x27
 3574 0057 19       		.uleb128 0x19
 3575 0058 00       		.byte	0
 3576 0059 00       		.byte	0
 3577 005a 09       		.uleb128 0x9
 3578 005b 2E       		.uleb128 0x2e
 3579 005c 00       		.byte	0
 3580 005d 3F       		.uleb128 0x3f
 3581 005e 19       		.uleb128 0x19
 3582 005f 03       		.uleb128 0x3
 3583 0060 0E       		.uleb128 0xe
 3584 0061 3A       		.uleb128 0x3a
 3585 0062 0B       		.uleb128 0xb
 3586 0063 3B       		.uleb128 0x3b
 3587 0064 0B       		.uleb128 0xb
 3588 0065 27       		.uleb128 0x27
 3589 0066 19       		.uleb128 0x19
 3590 0067 11       		.uleb128 0x11
 3591 0068 01       		.uleb128 0x1
 3592 0069 12       		.uleb128 0x12
 3593 006a 06       		.uleb128 0x6
 3594 006b 40       		.uleb128 0x40
 3595 006c 18       		.uleb128 0x18
 3596 006d 9742     		.uleb128 0x2117
 3597 006f 19       		.uleb128 0x19
 3598 0070 00       		.byte	0
 3599 0071 00       		.byte	0
 3600 0072 0A       		.uleb128 0xa
 3601 0073 2E       		.uleb128 0x2e
 3602 0074 01       		.byte	0x1
 3603 0075 3F       		.uleb128 0x3f
 3604 0076 19       		.uleb128 0x19
 3605 0077 03       		.uleb128 0x3
 3606 0078 0E       		.uleb128 0xe
 3607 0079 3A       		.uleb128 0x3a
 3608 007a 0B       		.uleb128 0xb
 3609 007b 3B       		.uleb128 0x3b
 3610 007c 05       		.uleb128 0x5
 3611 007d 27       		.uleb128 0x27
 3612 007e 19       		.uleb128 0x19
 3613 007f 11       		.uleb128 0x11
 3614 0080 01       		.uleb128 0x1
 3615 0081 12       		.uleb128 0x12
 3616 0082 06       		.uleb128 0x6
 3617 0083 40       		.uleb128 0x40
 3618 0084 18       		.uleb128 0x18
 3619 0085 9642     		.uleb128 0x2116
 3620 0087 19       		.uleb128 0x19
 3621 0088 01       		.uleb128 0x1
 3622 0089 13       		.uleb128 0x13
 3623 008a 00       		.byte	0
 3624 008b 00       		.byte	0
 3625 008c 0B       		.uleb128 0xb
 3626 008d 05       		.uleb128 0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 98


 3627 008e 00       		.byte	0
 3628 008f 03       		.uleb128 0x3
 3629 0090 0E       		.uleb128 0xe
 3630 0091 3A       		.uleb128 0x3a
 3631 0092 0B       		.uleb128 0xb
 3632 0093 3B       		.uleb128 0x3b
 3633 0094 05       		.uleb128 0x5
 3634 0095 49       		.uleb128 0x49
 3635 0096 13       		.uleb128 0x13
 3636 0097 02       		.uleb128 0x2
 3637 0098 18       		.uleb128 0x18
 3638 0099 00       		.byte	0
 3639 009a 00       		.byte	0
 3640 009b 0C       		.uleb128 0xc
 3641 009c 34       		.uleb128 0x34
 3642 009d 00       		.byte	0
 3643 009e 03       		.uleb128 0x3
 3644 009f 0E       		.uleb128 0xe
 3645 00a0 3A       		.uleb128 0x3a
 3646 00a1 0B       		.uleb128 0xb
 3647 00a2 3B       		.uleb128 0x3b
 3648 00a3 05       		.uleb128 0x5
 3649 00a4 49       		.uleb128 0x49
 3650 00a5 13       		.uleb128 0x13
 3651 00a6 02       		.uleb128 0x2
 3652 00a7 18       		.uleb128 0x18
 3653 00a8 00       		.byte	0
 3654 00a9 00       		.byte	0
 3655 00aa 0D       		.uleb128 0xd
 3656 00ab 2E       		.uleb128 0x2e
 3657 00ac 00       		.byte	0
 3658 00ad 3F       		.uleb128 0x3f
 3659 00ae 19       		.uleb128 0x19
 3660 00af 03       		.uleb128 0x3
 3661 00b0 0E       		.uleb128 0xe
 3662 00b1 3A       		.uleb128 0x3a
 3663 00b2 0B       		.uleb128 0xb
 3664 00b3 3B       		.uleb128 0x3b
 3665 00b4 05       		.uleb128 0x5
 3666 00b5 27       		.uleb128 0x27
 3667 00b6 19       		.uleb128 0x19
 3668 00b7 11       		.uleb128 0x11
 3669 00b8 01       		.uleb128 0x1
 3670 00b9 12       		.uleb128 0x12
 3671 00ba 06       		.uleb128 0x6
 3672 00bb 40       		.uleb128 0x40
 3673 00bc 18       		.uleb128 0x18
 3674 00bd 9742     		.uleb128 0x2117
 3675 00bf 19       		.uleb128 0x19
 3676 00c0 00       		.byte	0
 3677 00c1 00       		.byte	0
 3678 00c2 0E       		.uleb128 0xe
 3679 00c3 2E       		.uleb128 0x2e
 3680 00c4 00       		.byte	0
 3681 00c5 3F       		.uleb128 0x3f
 3682 00c6 19       		.uleb128 0x19
 3683 00c7 03       		.uleb128 0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 99


 3684 00c8 0E       		.uleb128 0xe
 3685 00c9 3A       		.uleb128 0x3a
 3686 00ca 0B       		.uleb128 0xb
 3687 00cb 3B       		.uleb128 0x3b
 3688 00cc 05       		.uleb128 0x5
 3689 00cd 27       		.uleb128 0x27
 3690 00ce 19       		.uleb128 0x19
 3691 00cf 49       		.uleb128 0x49
 3692 00d0 13       		.uleb128 0x13
 3693 00d1 11       		.uleb128 0x11
 3694 00d2 01       		.uleb128 0x1
 3695 00d3 12       		.uleb128 0x12
 3696 00d4 06       		.uleb128 0x6
 3697 00d5 40       		.uleb128 0x40
 3698 00d6 18       		.uleb128 0x18
 3699 00d7 9742     		.uleb128 0x2117
 3700 00d9 19       		.uleb128 0x19
 3701 00da 00       		.byte	0
 3702 00db 00       		.byte	0
 3703 00dc 0F       		.uleb128 0xf
 3704 00dd 2E       		.uleb128 0x2e
 3705 00de 01       		.byte	0x1
 3706 00df 3F       		.uleb128 0x3f
 3707 00e0 19       		.uleb128 0x19
 3708 00e1 03       		.uleb128 0x3
 3709 00e2 0E       		.uleb128 0xe
 3710 00e3 3A       		.uleb128 0x3a
 3711 00e4 0B       		.uleb128 0xb
 3712 00e5 3B       		.uleb128 0x3b
 3713 00e6 05       		.uleb128 0x5
 3714 00e7 27       		.uleb128 0x27
 3715 00e8 19       		.uleb128 0x19
 3716 00e9 49       		.uleb128 0x49
 3717 00ea 13       		.uleb128 0x13
 3718 00eb 11       		.uleb128 0x11
 3719 00ec 01       		.uleb128 0x1
 3720 00ed 12       		.uleb128 0x12
 3721 00ee 06       		.uleb128 0x6
 3722 00ef 40       		.uleb128 0x40
 3723 00f0 18       		.uleb128 0x18
 3724 00f1 9742     		.uleb128 0x2117
 3725 00f3 19       		.uleb128 0x19
 3726 00f4 01       		.uleb128 0x1
 3727 00f5 13       		.uleb128 0x13
 3728 00f6 00       		.byte	0
 3729 00f7 00       		.byte	0
 3730 00f8 10       		.uleb128 0x10
 3731 00f9 2E       		.uleb128 0x2e
 3732 00fa 01       		.byte	0x1
 3733 00fb 3F       		.uleb128 0x3f
 3734 00fc 19       		.uleb128 0x19
 3735 00fd 03       		.uleb128 0x3
 3736 00fe 0E       		.uleb128 0xe
 3737 00ff 3A       		.uleb128 0x3a
 3738 0100 0B       		.uleb128 0xb
 3739 0101 3B       		.uleb128 0x3b
 3740 0102 05       		.uleb128 0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 100


 3741 0103 27       		.uleb128 0x27
 3742 0104 19       		.uleb128 0x19
 3743 0105 11       		.uleb128 0x11
 3744 0106 01       		.uleb128 0x1
 3745 0107 12       		.uleb128 0x12
 3746 0108 06       		.uleb128 0x6
 3747 0109 40       		.uleb128 0x40
 3748 010a 18       		.uleb128 0x18
 3749 010b 9742     		.uleb128 0x2117
 3750 010d 19       		.uleb128 0x19
 3751 010e 01       		.uleb128 0x1
 3752 010f 13       		.uleb128 0x13
 3753 0110 00       		.byte	0
 3754 0111 00       		.byte	0
 3755 0112 11       		.uleb128 0x11
 3756 0113 2E       		.uleb128 0x2e
 3757 0114 01       		.byte	0x1
 3758 0115 3F       		.uleb128 0x3f
 3759 0116 19       		.uleb128 0x19
 3760 0117 03       		.uleb128 0x3
 3761 0118 0E       		.uleb128 0xe
 3762 0119 3A       		.uleb128 0x3a
 3763 011a 0B       		.uleb128 0xb
 3764 011b 3B       		.uleb128 0x3b
 3765 011c 05       		.uleb128 0x5
 3766 011d 27       		.uleb128 0x27
 3767 011e 19       		.uleb128 0x19
 3768 011f 49       		.uleb128 0x49
 3769 0120 13       		.uleb128 0x13
 3770 0121 11       		.uleb128 0x11
 3771 0122 01       		.uleb128 0x1
 3772 0123 12       		.uleb128 0x12
 3773 0124 06       		.uleb128 0x6
 3774 0125 40       		.uleb128 0x40
 3775 0126 18       		.uleb128 0x18
 3776 0127 9642     		.uleb128 0x2116
 3777 0129 19       		.uleb128 0x19
 3778 012a 01       		.uleb128 0x1
 3779 012b 13       		.uleb128 0x13
 3780 012c 00       		.byte	0
 3781 012d 00       		.byte	0
 3782 012e 12       		.uleb128 0x12
 3783 012f 2E       		.uleb128 0x2e
 3784 0130 00       		.byte	0
 3785 0131 3F       		.uleb128 0x3f
 3786 0132 19       		.uleb128 0x19
 3787 0133 03       		.uleb128 0x3
 3788 0134 0E       		.uleb128 0xe
 3789 0135 3A       		.uleb128 0x3a
 3790 0136 0B       		.uleb128 0xb
 3791 0137 3B       		.uleb128 0x3b
 3792 0138 05       		.uleb128 0x5
 3793 0139 27       		.uleb128 0x27
 3794 013a 19       		.uleb128 0x19
 3795 013b 11       		.uleb128 0x11
 3796 013c 01       		.uleb128 0x1
 3797 013d 12       		.uleb128 0x12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 101


 3798 013e 06       		.uleb128 0x6
 3799 013f 40       		.uleb128 0x40
 3800 0140 18       		.uleb128 0x18
 3801 0141 9642     		.uleb128 0x2116
 3802 0143 19       		.uleb128 0x19
 3803 0144 00       		.byte	0
 3804 0145 00       		.byte	0
 3805 0146 13       		.uleb128 0x13
 3806 0147 34       		.uleb128 0x34
 3807 0148 00       		.byte	0
 3808 0149 03       		.uleb128 0x3
 3809 014a 08       		.uleb128 0x8
 3810 014b 3A       		.uleb128 0x3a
 3811 014c 0B       		.uleb128 0xb
 3812 014d 3B       		.uleb128 0x3b
 3813 014e 05       		.uleb128 0x5
 3814 014f 49       		.uleb128 0x49
 3815 0150 13       		.uleb128 0x13
 3816 0151 02       		.uleb128 0x2
 3817 0152 18       		.uleb128 0x18
 3818 0153 00       		.byte	0
 3819 0154 00       		.byte	0
 3820 0155 14       		.uleb128 0x14
 3821 0156 2E       		.uleb128 0x2e
 3822 0157 01       		.byte	0x1
 3823 0158 03       		.uleb128 0x3
 3824 0159 0E       		.uleb128 0xe
 3825 015a 3A       		.uleb128 0x3a
 3826 015b 0B       		.uleb128 0xb
 3827 015c 3B       		.uleb128 0x3b
 3828 015d 05       		.uleb128 0x5
 3829 015e 27       		.uleb128 0x27
 3830 015f 19       		.uleb128 0x19
 3831 0160 11       		.uleb128 0x11
 3832 0161 01       		.uleb128 0x1
 3833 0162 12       		.uleb128 0x12
 3834 0163 06       		.uleb128 0x6
 3835 0164 40       		.uleb128 0x40
 3836 0165 18       		.uleb128 0x18
 3837 0166 9642     		.uleb128 0x2116
 3838 0168 19       		.uleb128 0x19
 3839 0169 01       		.uleb128 0x1
 3840 016a 13       		.uleb128 0x13
 3841 016b 00       		.byte	0
 3842 016c 00       		.byte	0
 3843 016d 15       		.uleb128 0x15
 3844 016e 01       		.uleb128 0x1
 3845 016f 01       		.byte	0x1
 3846 0170 49       		.uleb128 0x49
 3847 0171 13       		.uleb128 0x13
 3848 0172 01       		.uleb128 0x1
 3849 0173 13       		.uleb128 0x13
 3850 0174 00       		.byte	0
 3851 0175 00       		.byte	0
 3852 0176 16       		.uleb128 0x16
 3853 0177 21       		.uleb128 0x21
 3854 0178 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 102


 3855 0179 49       		.uleb128 0x49
 3856 017a 13       		.uleb128 0x13
 3857 017b 2F       		.uleb128 0x2f
 3858 017c 0B       		.uleb128 0xb
 3859 017d 00       		.byte	0
 3860 017e 00       		.byte	0
 3861 017f 17       		.uleb128 0x17
 3862 0180 34       		.uleb128 0x34
 3863 0181 00       		.byte	0
 3864 0182 03       		.uleb128 0x3
 3865 0183 0E       		.uleb128 0xe
 3866 0184 3A       		.uleb128 0x3a
 3867 0185 0B       		.uleb128 0xb
 3868 0186 3B       		.uleb128 0x3b
 3869 0187 0B       		.uleb128 0xb
 3870 0188 49       		.uleb128 0x49
 3871 0189 13       		.uleb128 0x13
 3872 018a 02       		.uleb128 0x2
 3873 018b 18       		.uleb128 0x18
 3874 018c 00       		.byte	0
 3875 018d 00       		.byte	0
 3876 018e 18       		.uleb128 0x18
 3877 018f 34       		.uleb128 0x34
 3878 0190 00       		.byte	0
 3879 0191 03       		.uleb128 0x3
 3880 0192 0E       		.uleb128 0xe
 3881 0193 3A       		.uleb128 0x3a
 3882 0194 0B       		.uleb128 0xb
 3883 0195 3B       		.uleb128 0x3b
 3884 0196 0B       		.uleb128 0xb
 3885 0197 49       		.uleb128 0x49
 3886 0198 13       		.uleb128 0x13
 3887 0199 3F       		.uleb128 0x3f
 3888 019a 19       		.uleb128 0x19
 3889 019b 02       		.uleb128 0x2
 3890 019c 18       		.uleb128 0x18
 3891 019d 00       		.byte	0
 3892 019e 00       		.byte	0
 3893 019f 19       		.uleb128 0x19
 3894 01a0 26       		.uleb128 0x26
 3895 01a1 00       		.byte	0
 3896 01a2 49       		.uleb128 0x49
 3897 01a3 13       		.uleb128 0x13
 3898 01a4 00       		.byte	0
 3899 01a5 00       		.byte	0
 3900 01a6 00       		.byte	0
 3901              		.section	.debug_aranges,"",%progbits
 3902 0000 6C010000 		.4byte	0x16c
 3903 0004 0200     		.2byte	0x2
 3904 0006 00000000 		.4byte	.Ldebug_info0
 3905 000a 04       		.byte	0x4
 3906 000b 00       		.byte	0
 3907 000c 0000     		.2byte	0
 3908 000e 0000     		.2byte	0
 3909 0010 00000000 		.4byte	.LFB0
 3910 0014 1C000000 		.4byte	.LFE0-.LFB0
 3911 0018 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 103


 3912 001c 18000000 		.4byte	.LFE1-.LFB1
 3913 0020 00000000 		.4byte	.LFB2
 3914 0024 44000000 		.4byte	.LFE2-.LFB2
 3915 0028 00000000 		.4byte	.LFB3
 3916 002c 44000000 		.4byte	.LFE3-.LFB3
 3917 0030 00000000 		.4byte	.LFB4
 3918 0034 E0010000 		.4byte	.LFE4-.LFB4
 3919 0038 00000000 		.4byte	.LFB5
 3920 003c 64000000 		.4byte	.LFE5-.LFB5
 3921 0040 00000000 		.4byte	.LFB6
 3922 0044 28000000 		.4byte	.LFE6-.LFB6
 3923 0048 00000000 		.4byte	.LFB7
 3924 004c 18000000 		.4byte	.LFE7-.LFB7
 3925 0050 00000000 		.4byte	.LFB8
 3926 0054 14000000 		.4byte	.LFE8-.LFB8
 3927 0058 00000000 		.4byte	.LFB9
 3928 005c 30000000 		.4byte	.LFE9-.LFB9
 3929 0060 00000000 		.4byte	.LFB10
 3930 0064 24000000 		.4byte	.LFE10-.LFB10
 3931 0068 00000000 		.4byte	.LFB11
 3932 006c 18000000 		.4byte	.LFE11-.LFB11
 3933 0070 00000000 		.4byte	.LFB12
 3934 0074 48000000 		.4byte	.LFE12-.LFB12
 3935 0078 00000000 		.4byte	.LFB13
 3936 007c 34000000 		.4byte	.LFE13-.LFB13
 3937 0080 00000000 		.4byte	.LFB14
 3938 0084 4C000000 		.4byte	.LFE14-.LFB14
 3939 0088 00000000 		.4byte	.LFB15
 3940 008c 36000000 		.4byte	.LFE15-.LFB15
 3941 0090 00000000 		.4byte	.LFB16
 3942 0094 A8000000 		.4byte	.LFE16-.LFB16
 3943 0098 00000000 		.4byte	.LFB17
 3944 009c 58000000 		.4byte	.LFE17-.LFB17
 3945 00a0 00000000 		.4byte	.LFB18
 3946 00a4 2C000000 		.4byte	.LFE18-.LFB18
 3947 00a8 00000000 		.4byte	.LFB19
 3948 00ac 34000000 		.4byte	.LFE19-.LFB19
 3949 00b0 00000000 		.4byte	.LFB20
 3950 00b4 2C000000 		.4byte	.LFE20-.LFB20
 3951 00b8 00000000 		.4byte	.LFB21
 3952 00bc 2C000000 		.4byte	.LFE21-.LFB21
 3953 00c0 00000000 		.4byte	.LFB22
 3954 00c4 2C000000 		.4byte	.LFE22-.LFB22
 3955 00c8 00000000 		.4byte	.LFB23
 3956 00cc 14000000 		.4byte	.LFE23-.LFB23
 3957 00d0 00000000 		.4byte	.LFB24
 3958 00d4 20000000 		.4byte	.LFE24-.LFB24
 3959 00d8 00000000 		.4byte	.LFB25
 3960 00dc 48000000 		.4byte	.LFE25-.LFB25
 3961 00e0 00000000 		.4byte	.LFB26
 3962 00e4 28000000 		.4byte	.LFE26-.LFB26
 3963 00e8 00000000 		.4byte	.LFB27
 3964 00ec 80000000 		.4byte	.LFE27-.LFB27
 3965 00f0 00000000 		.4byte	.LFB28
 3966 00f4 24000000 		.4byte	.LFE28-.LFB28
 3967 00f8 00000000 		.4byte	.LFB29
 3968 00fc 60000000 		.4byte	.LFE29-.LFB29
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 104


 3969 0100 00000000 		.4byte	.LFB30
 3970 0104 1C000000 		.4byte	.LFE30-.LFB30
 3971 0108 00000000 		.4byte	.LFB31
 3972 010c 18000000 		.4byte	.LFE31-.LFB31
 3973 0110 00000000 		.4byte	.LFB32
 3974 0114 18000000 		.4byte	.LFE32-.LFB32
 3975 0118 00000000 		.4byte	.LFB33
 3976 011c 18000000 		.4byte	.LFE33-.LFB33
 3977 0120 00000000 		.4byte	.LFB34
 3978 0124 1C000000 		.4byte	.LFE34-.LFB34
 3979 0128 00000000 		.4byte	.LFB35
 3980 012c 18000000 		.4byte	.LFE35-.LFB35
 3981 0130 00000000 		.4byte	.LFB36
 3982 0134 18000000 		.4byte	.LFE36-.LFB36
 3983 0138 00000000 		.4byte	.LFB37
 3984 013c 18000000 		.4byte	.LFE37-.LFB37
 3985 0140 00000000 		.4byte	.LFB38
 3986 0144 14000000 		.4byte	.LFE38-.LFB38
 3987 0148 00000000 		.4byte	.LFB39
 3988 014c 2C000000 		.4byte	.LFE39-.LFB39
 3989 0150 00000000 		.4byte	.LFB40
 3990 0154 1C000000 		.4byte	.LFE40-.LFB40
 3991 0158 00000000 		.4byte	.LFB41
 3992 015c 44000000 		.4byte	.LFE41-.LFB41
 3993 0160 00000000 		.4byte	.LFB42
 3994 0164 C0000000 		.4byte	.LFE42-.LFB42
 3995 0168 00000000 		.4byte	0
 3996 016c 00000000 		.4byte	0
 3997              		.section	.debug_ranges,"",%progbits
 3998              	.Ldebug_ranges0:
 3999 0000 00000000 		.4byte	.LFB0
 4000 0004 1C000000 		.4byte	.LFE0
 4001 0008 00000000 		.4byte	.LFB1
 4002 000c 18000000 		.4byte	.LFE1
 4003 0010 00000000 		.4byte	.LFB2
 4004 0014 44000000 		.4byte	.LFE2
 4005 0018 00000000 		.4byte	.LFB3
 4006 001c 44000000 		.4byte	.LFE3
 4007 0020 00000000 		.4byte	.LFB4
 4008 0024 E0010000 		.4byte	.LFE4
 4009 0028 00000000 		.4byte	.LFB5
 4010 002c 64000000 		.4byte	.LFE5
 4011 0030 00000000 		.4byte	.LFB6
 4012 0034 28000000 		.4byte	.LFE6
 4013 0038 00000000 		.4byte	.LFB7
 4014 003c 18000000 		.4byte	.LFE7
 4015 0040 00000000 		.4byte	.LFB8
 4016 0044 14000000 		.4byte	.LFE8
 4017 0048 00000000 		.4byte	.LFB9
 4018 004c 30000000 		.4byte	.LFE9
 4019 0050 00000000 		.4byte	.LFB10
 4020 0054 24000000 		.4byte	.LFE10
 4021 0058 00000000 		.4byte	.LFB11
 4022 005c 18000000 		.4byte	.LFE11
 4023 0060 00000000 		.4byte	.LFB12
 4024 0064 48000000 		.4byte	.LFE12
 4025 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 105


 4026 006c 34000000 		.4byte	.LFE13
 4027 0070 00000000 		.4byte	.LFB14
 4028 0074 4C000000 		.4byte	.LFE14
 4029 0078 00000000 		.4byte	.LFB15
 4030 007c 36000000 		.4byte	.LFE15
 4031 0080 00000000 		.4byte	.LFB16
 4032 0084 A8000000 		.4byte	.LFE16
 4033 0088 00000000 		.4byte	.LFB17
 4034 008c 58000000 		.4byte	.LFE17
 4035 0090 00000000 		.4byte	.LFB18
 4036 0094 2C000000 		.4byte	.LFE18
 4037 0098 00000000 		.4byte	.LFB19
 4038 009c 34000000 		.4byte	.LFE19
 4039 00a0 00000000 		.4byte	.LFB20
 4040 00a4 2C000000 		.4byte	.LFE20
 4041 00a8 00000000 		.4byte	.LFB21
 4042 00ac 2C000000 		.4byte	.LFE21
 4043 00b0 00000000 		.4byte	.LFB22
 4044 00b4 2C000000 		.4byte	.LFE22
 4045 00b8 00000000 		.4byte	.LFB23
 4046 00bc 14000000 		.4byte	.LFE23
 4047 00c0 00000000 		.4byte	.LFB24
 4048 00c4 20000000 		.4byte	.LFE24
 4049 00c8 00000000 		.4byte	.LFB25
 4050 00cc 48000000 		.4byte	.LFE25
 4051 00d0 00000000 		.4byte	.LFB26
 4052 00d4 28000000 		.4byte	.LFE26
 4053 00d8 00000000 		.4byte	.LFB27
 4054 00dc 80000000 		.4byte	.LFE27
 4055 00e0 00000000 		.4byte	.LFB28
 4056 00e4 24000000 		.4byte	.LFE28
 4057 00e8 00000000 		.4byte	.LFB29
 4058 00ec 60000000 		.4byte	.LFE29
 4059 00f0 00000000 		.4byte	.LFB30
 4060 00f4 1C000000 		.4byte	.LFE30
 4061 00f8 00000000 		.4byte	.LFB31
 4062 00fc 18000000 		.4byte	.LFE31
 4063 0100 00000000 		.4byte	.LFB32
 4064 0104 18000000 		.4byte	.LFE32
 4065 0108 00000000 		.4byte	.LFB33
 4066 010c 18000000 		.4byte	.LFE33
 4067 0110 00000000 		.4byte	.LFB34
 4068 0114 1C000000 		.4byte	.LFE34
 4069 0118 00000000 		.4byte	.LFB35
 4070 011c 18000000 		.4byte	.LFE35
 4071 0120 00000000 		.4byte	.LFB36
 4072 0124 18000000 		.4byte	.LFE36
 4073 0128 00000000 		.4byte	.LFB37
 4074 012c 18000000 		.4byte	.LFE37
 4075 0130 00000000 		.4byte	.LFB38
 4076 0134 14000000 		.4byte	.LFE38
 4077 0138 00000000 		.4byte	.LFB39
 4078 013c 2C000000 		.4byte	.LFE39
 4079 0140 00000000 		.4byte	.LFB40
 4080 0144 1C000000 		.4byte	.LFE40
 4081 0148 00000000 		.4byte	.LFB41
 4082 014c 44000000 		.4byte	.LFE41
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 106


 4083 0150 00000000 		.4byte	.LFB42
 4084 0154 C0000000 		.4byte	.LFE42
 4085 0158 00000000 		.4byte	0
 4086 015c 00000000 		.4byte	0
 4087              		.section	.debug_line,"",%progbits
 4088              	.Ldebug_line0:
 4089 0000 44040000 		.section	.debug_str,"MS",%progbits,1
 4089      02004F00 
 4089      00000201 
 4089      FB0E0D00 
 4089      01010101 
 4090              	.LASF48:
 4091 0000 72616D56 		.ascii	"ramVectorTable\000"
 4091      6563746F 
 4091      72546162 
 4091      6C6500
 4092              	.LASF29:
 4093 000f 62675472 		.ascii	"bgTrim4\000"
 4093      696D3400 
 4094              	.LASF10:
 4095 0017 75696E74 		.ascii	"uint16\000"
 4095      313600
 4096              	.LASF41:
 4097 001e 696E7453 		.ascii	"intState\000"
 4097      74617465 
 4097      00
 4098              	.LASF22:
 4099 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4099      73436C6B 
 4099      57726974 
 4099      65486663 
 4099      6C6B4469 
 4100              	.LASF47:
 4101 0040 6F6C6449 		.ascii	"oldIsr\000"
 4101      737200
 4102              	.LASF40:
 4103 0047 43794469 		.ascii	"CyDisableInts\000"
 4103      7361626C 
 4103      65496E74 
 4103      7300
 4104              	.LASF32:
 4105 0055 63757272 		.ascii	"currentImoTrim2Value\000"
 4105      656E7449 
 4105      6D6F5472 
 4105      696D3256 
 4105      616C7565 
 4106              	.LASF7:
 4107 006a 6C6F6E67 		.ascii	"long long unsigned int\000"
 4107      206C6F6E 
 4107      6720756E 
 4107      7369676E 
 4107      65642069 
 4108              	.LASF88:
 4109 0081 43795379 		.ascii	"CySysTickInitVar\000"
 4109      73546963 
 4109      6B496E69 
 4109      74566172 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 107


 4109      00
 4110              	.LASF42:
 4111 0092 4379456E 		.ascii	"CyEnableInts\000"
 4111      61626C65 
 4111      496E7473 
 4111      00
 4112              	.LASF63:
 4113 009f 4379536F 		.ascii	"CySoftwareReset\000"
 4113      66747761 
 4113      72655265 
 4113      73657400 
 4114              	.LASF73:
 4115 00af 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4115      73546963 
 4115      6B456E61 
 4115      626C6549 
 4115      6E746572 
 4116              	.LASF58:
 4117 00c8 4379496E 		.ascii	"CyIntGetState\000"
 4117      74476574 
 4117      53746174 
 4117      6500
 4118              	.LASF6:
 4119 00d6 6C6F6E67 		.ascii	"long long int\000"
 4119      206C6F6E 
 4119      6720696E 
 4119      7400
 4120              	.LASF0:
 4121 00e4 7369676E 		.ascii	"signed char\000"
 4121      65642063 
 4121      68617200 
 4122              	.LASF28:
 4123 00f0 66726571 		.ascii	"freq\000"
 4123      00
 4124              	.LASF68:
 4125 00f5 43794465 		.ascii	"CyDelayFreq\000"
 4125      6C617946 
 4125      72657100 
 4126              	.LASF26:
 4127 0101 696E7465 		.ascii	"interruptState\000"
 4127      72727570 
 4127      74537461 
 4127      746500
 4128              	.LASF77:
 4129 0110 43795379 		.ascii	"CySysTickGetReload\000"
 4129      73546963 
 4129      6B476574 
 4129      52656C6F 
 4129      616400
 4130              	.LASF4:
 4131 0123 6C6F6E67 		.ascii	"long int\000"
 4131      20696E74 
 4131      00
 4132              	.LASF59:
 4133 012c 4379496E 		.ascii	"CyIntDisable\000"
 4133      74446973 
 4133      61626C65 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 108


 4133      00
 4134              	.LASF84:
 4135 0139 43795379 		.ascii	"CySysTickGetCallback\000"
 4135      73546963 
 4135      6B476574 
 4135      43616C6C 
 4135      6261636B 
 4136              	.LASF9:
 4137 014e 75696E74 		.ascii	"uint8\000"
 4137      3800
 4138              	.LASF90:
 4139 0154 63796465 		.ascii	"cydelayFreqKhz\000"
 4139      6C617946 
 4139      7265714B 
 4139      687A00
 4140              	.LASF66:
 4141 0163 43794465 		.ascii	"CyDelayUs\000"
 4141      6C617955 
 4141      7300
 4142              	.LASF13:
 4143 016d 646F7562 		.ascii	"double\000"
 4143      6C6500
 4144              	.LASF54:
 4145 0174 73686966 		.ascii	"shift\000"
 4145      7400
 4146              	.LASF36:
 4147 017a 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4147      734C7664 
 4147      436C6561 
 4147      72496E74 
 4147      65727275 
 4148              	.LASF11:
 4149 0191 75696E74 		.ascii	"uint32\000"
 4149      333200
 4150              	.LASF45:
 4151 0198 6E756D62 		.ascii	"number\000"
 4151      657200
 4152              	.LASF43:
 4153 019f 6D61736B 		.ascii	"mask\000"
 4153      00
 4154              	.LASF33:
 4155 01a4 43795379 		.ascii	"CySysLvdEnable\000"
 4155      734C7664 
 4155      456E6162 
 4155      6C6500
 4156              	.LASF56:
 4157 01b3 4379496E 		.ascii	"CyIntGetPriority\000"
 4157      74476574 
 4157      5072696F 
 4157      72697479 
 4157      00
 4158              	.LASF92:
 4159 01c4 63796465 		.ascii	"cydelay32kMs\000"
 4159      6C617933 
 4159      326B4D73 
 4159      00
 4160              	.LASF70:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 109


 4161 01d1 43795379 		.ascii	"CySysTickInit\000"
 4161      73546963 
 4161      6B496E69 
 4161      7400
 4162              	.LASF55:
 4163 01df 76616C75 		.ascii	"value\000"
 4163      6500
 4164              	.LASF85:
 4165 01e5 43794765 		.ascii	"CyGetUniqueId\000"
 4165      74556E69 
 4165      71756549 
 4165      6400
 4166              	.LASF79:
 4167 01f3 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4167      73546963 
 4167      6B476574 
 4167      436F756E 
 4167      74466C61 
 4168              	.LASF8:
 4169 0209 756E7369 		.ascii	"unsigned int\000"
 4169      676E6564 
 4169      20696E74 
 4169      00
 4170              	.LASF80:
 4171 0216 43795379 		.ascii	"CySysTickClear\000"
 4171      73546963 
 4171      6B436C65 
 4171      617200
 4172              	.LASF5:
 4173 0225 6C6F6E67 		.ascii	"long unsigned int\000"
 4173      20756E73 
 4173      69676E65 
 4173      6420696E 
 4173      7400
 4174              	.LASF76:
 4175 0237 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4175      734C7664 
 4175      47657449 
 4175      6E746572 
 4175      72757074 
 4176              	.LASF21:
 4177 0252 43795379 		.ascii	"CySysClkImoStop\000"
 4177      73436C6B 
 4177      496D6F53 
 4177      746F7000 
 4178              	.LASF60:
 4179 0262 4379496E 		.ascii	"CyIntSetPending\000"
 4179      74536574 
 4179      50656E64 
 4179      696E6700 
 4180              	.LASF39:
 4181 0272 43795379 		.ascii	"CySysGetResetReason\000"
 4181      73476574 
 4181      52657365 
 4181      74526561 
 4181      736F6E00 
 4182              	.LASF3:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 110


 4183 0286 73686F72 		.ascii	"short unsigned int\000"
 4183      7420756E 
 4183      7369676E 
 4183      65642069 
 4183      6E7400
 4184              	.LASF50:
 4185 0299 4379496E 		.ascii	"CyIntSetVector\000"
 4185      74536574 
 4185      56656374 
 4185      6F7200
 4186              	.LASF95:
 4187 02a8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4187      6E657261 
 4187      7465645F 
 4187      536F7572 
 4187      63655C50 
 4188              	.LASF53:
 4189 02c9 7072696F 		.ascii	"priority\000"
 4189      72697479 
 4189      00
 4190              	.LASF27:
 4191 02d2 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4191      73436C6B 
 4191      57726974 
 4191      65496D6F 
 4191      46726571 
 4192              	.LASF44:
 4193 02e7 4379496E 		.ascii	"CyIntSetSysVector\000"
 4193      74536574 
 4193      53797356 
 4193      6563746F 
 4193      7200
 4194              	.LASF16:
 4195 02f9 72656733 		.ascii	"reg32\000"
 4195      3200
 4196              	.LASF69:
 4197 02ff 43795379 		.ascii	"CySysTickStart\000"
 4197      73546963 
 4197      6B537461 
 4197      727400
 4198              	.LASF18:
 4199 030e 73697A65 		.ascii	"sizetype\000"
 4199      74797065 
 4199      00
 4200              	.LASF61:
 4201 0317 4379496E 		.ascii	"CyIntClearPending\000"
 4201      74436C65 
 4201      61725065 
 4201      6E64696E 
 4201      6700
 4202              	.LASF46:
 4203 0329 61646472 		.ascii	"address\000"
 4203      65737300 
 4204              	.LASF30:
 4205 0331 62675472 		.ascii	"bgTrim5\000"
 4205      696D3500 
 4206              	.LASF83:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 111


 4207 0339 72657456 		.ascii	"retVal\000"
 4207      616C00
 4208              	.LASF82:
 4209 0340 66756E63 		.ascii	"function\000"
 4209      74696F6E 
 4209      00
 4210              	.LASF93:
 4211 0349 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4211      6F467265 
 4211      714D687A 
 4211      32526567 
 4211      00
 4212              	.LASF78:
 4213 035a 43795379 		.ascii	"CySysTickGetValue\000"
 4213      73546963 
 4213      6B476574 
 4213      56616C75 
 4213      6500
 4214              	.LASF89:
 4215 036c 63796465 		.ascii	"cydelayFreqHz\000"
 4215      6C617946 
 4215      72657148 
 4215      7A00
 4216              	.LASF52:
 4217 037a 4379496E 		.ascii	"CyIntSetPriority\000"
 4217      74536574 
 4217      5072696F 
 4217      72697479 
 4217      00
 4218              	.LASF12:
 4219 038b 666C6F61 		.ascii	"float\000"
 4219      7400
 4220              	.LASF94:
 4221 0391 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4221      4320342E 
 4221      382E3420 
 4221      32303134 
 4221      30353236 
 4222 03c4 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 4222      20726576 
 4222      6973696F 
 4222      6E203231 
 4222      31333538 
 4223 03f7 30202D66 		.ascii	"0 -ffunction-sections\000"
 4223      66756E63 
 4223      74696F6E 
 4223      2D736563 
 4223      74696F6E 
 4224              	.LASF19:
 4225 040d 63795379 		.ascii	"cySysTickCallback\000"
 4225      73546963 
 4225      6B43616C 
 4225      6C626163 
 4225      6B00
 4226              	.LASF51:
 4227 041f 4379496E 		.ascii	"CyIntGetVector\000"
 4227      74476574 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 112


 4227      56656374 
 4227      6F7200
 4228              	.LASF65:
 4229 042e 6D696C6C 		.ascii	"milliseconds\000"
 4229      69736563 
 4229      6F6E6473 
 4229      00
 4230              	.LASF15:
 4231 043b 72656738 		.ascii	"reg8\000"
 4231      00
 4232              	.LASF34:
 4233 0440 74687265 		.ascii	"threshold\000"
 4233      73686F6C 
 4233      6400
 4234              	.LASF62:
 4235 044a 43794861 		.ascii	"CyHalt\000"
 4235      6C7400
 4236              	.LASF1:
 4237 0451 756E7369 		.ascii	"unsigned char\000"
 4237      676E6564 
 4237      20636861 
 4237      7200
 4238              	.LASF2:
 4239 045f 73686F72 		.ascii	"short int\000"
 4239      7420696E 
 4239      7400
 4240              	.LASF57:
 4241 0469 4379496E 		.ascii	"CyIntEnable\000"
 4241      74456E61 
 4241      626C6500 
 4242              	.LASF49:
 4243 0475 4379496E 		.ascii	"CyIntGetSysVector\000"
 4243      74476574 
 4243      53797356 
 4243      6563746F 
 4243      7200
 4244              	.LASF24:
 4245 0487 636C6B53 		.ascii	"clkSelect\000"
 4245      656C6563 
 4245      7400
 4246              	.LASF96:
 4247 0491 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 4247      73657273 
 4247      5C6D6974 
 4247      6368656C 
 4247      6C5C446F 
 4248 04be 2D546872 		.ascii	"-Throttle\\Design01.cydsn\000"
 4248      6F74746C 
 4248      655C4465 
 4248      7369676E 
 4248      30312E63 
 4249              	.LASF37:
 4250 04d7 72656173 		.ascii	"reason\000"
 4250      6F6E00
 4251              	.LASF14:
 4252 04de 63686172 		.ascii	"char\000"
 4252      00
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 113


 4253              	.LASF17:
 4254 04e3 63796973 		.ascii	"cyisraddress\000"
 4254      72616464 
 4254      72657373 
 4254      00
 4255              	.LASF71:
 4256 04f0 43795379 		.ascii	"CySysTickEnable\000"
 4256      73546963 
 4256      6B456E61 
 4256      626C6500 
 4257              	.LASF23:
 4258 0500 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4258      73436C6B 
 4258      57726974 
 4258      65537973 
 4258      636C6B44 
 4259              	.LASF81:
 4260 0517 43795379 		.ascii	"CySysTickSetCallback\000"
 4260      73546963 
 4260      6B536574 
 4260      43616C6C 
 4260      6261636B 
 4261              	.LASF87:
 4262 052c 43795379 		.ascii	"CySysTickCallbacks\000"
 4262      73546963 
 4262      6B43616C 
 4262      6C626163 
 4262      6B7300
 4263              	.LASF86:
 4264 053f 756E6971 		.ascii	"uniqueId\000"
 4264      75654964 
 4264      00
 4265              	.LASF64:
 4266 0548 43794465 		.ascii	"CyDelay\000"
 4266      6C617900 
 4267              	.LASF74:
 4268 0550 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4268      73546963 
 4268      6B446973 
 4268      61626C65 
 4268      496E7465 
 4269              	.LASF35:
 4270 056a 43795379 		.ascii	"CySysLvdDisable\000"
 4270      734C7664 
 4270      44697361 
 4270      626C6500 
 4271              	.LASF91:
 4272 057a 63796465 		.ascii	"cydelayFreqMhz\000"
 4272      6C617946 
 4272      7265714D 
 4272      687A00
 4273              	.LASF38:
 4274 0589 73746174 		.ascii	"status\000"
 4274      757300
 4275              	.LASF72:
 4276 0590 43795379 		.ascii	"CySysTickStop\000"
 4276      73546963 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc83Q4Ln.s 			page 114


 4276      6B53746F 
 4276      7000
 4277              	.LASF25:
 4278 059e 64697669 		.ascii	"divider\000"
 4278      64657200 
 4279              	.LASF20:
 4280 05a6 43795379 		.ascii	"CySysClkImoStart\000"
 4280      73436C6B 
 4280      496D6F53 
 4280      74617274 
 4280      00
 4281              	.LASF31:
 4282 05b7 6E657749 		.ascii	"newImoTrim2Value\000"
 4282      6D6F5472 
 4282      696D3256 
 4282      616C7565 
 4282      00
 4283              	.LASF67:
 4284 05c8 6D696372 		.ascii	"microseconds\000"
 4284      6F736563 
 4284      6F6E6473 
 4284      00
 4285              	.LASF75:
 4286 05d5 43795379 		.ascii	"CySysTickSetReload\000"
 4286      73546963 
 4286      6B536574 
 4286      52656C6F 
 4286      616400
 4287              	.LASF97:
 4288 05e8 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4288      73546963 
 4288      6B536572 
 4288      76696365 
 4288      43616C6C 
 4289              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
