ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_UartInit,"ax",%progbits
  18              		.align	2
  19              		.global	UART_UartInit
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_UartInit, %function
  23              	UART_UartInit:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_UART.c"
   1:.\Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_UART.c **** * File Name: UART_UART.c
   3:.\Generated_Source\PSoC4/UART_UART.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/UART_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:.\Generated_Source\PSoC4/UART_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/UART_UART.c **** 
  18:.\Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  19:.\Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/UART_UART.c **** 
  21:.\Generated_Source\PSoC4/UART_UART.c **** 
  22:.\Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  23:.\Generated_Source\PSoC4/UART_UART.c **** 
  24:.\Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  25:.\Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  26:.\Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  27:.\Generated_Source\PSoC4/UART_UART.c **** 
  28:.\Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  29:.\Generated_Source\PSoC4/UART_UART.c ****     {
  30:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  31:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  32:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 2


  33:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  34:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  35:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  36:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  37:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  38:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  39:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  40:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  41:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  42:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  43:.\Generated_Source\PSoC4/UART_UART.c ****         0u,
  44:.\Generated_Source\PSoC4/UART_UART.c ****         NULL,
  45:.\Generated_Source\PSoC4/UART_UART.c ****         0u,
  46:.\Generated_Source\PSoC4/UART_UART.c ****         NULL,
  47:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  48:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  49:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  50:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  51:.\Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  52:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  53:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  54:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  55:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  56:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  57:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  58:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  59:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  60:.\Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL
  61:.\Generated_Source\PSoC4/UART_UART.c ****     };
  62:.\Generated_Source\PSoC4/UART_UART.c **** 
  63:.\Generated_Source\PSoC4/UART_UART.c **** 
  64:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  65:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
  66:.\Generated_Source\PSoC4/UART_UART.c ****     ********************************************************************************
  67:.\Generated_Source\PSoC4/UART_UART.c ****     *
  68:.\Generated_Source\PSoC4/UART_UART.c ****     * Summary:
  69:.\Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
  70:.\Generated_Source\PSoC4/UART_UART.c ****     *
  71:.\Generated_Source\PSoC4/UART_UART.c ****     * Parameters:
  72:.\Generated_Source\PSoC4/UART_UART.c ****     *  config:  Pointer to a structure that contains the following ordered list of
  73:.\Generated_Source\PSoC4/UART_UART.c ****     *           fields. These fields match the selections available in the
  74:.\Generated_Source\PSoC4/UART_UART.c ****     *           customizer.
  75:.\Generated_Source\PSoC4/UART_UART.c ****     *
  76:.\Generated_Source\PSoC4/UART_UART.c ****     * Return:
  77:.\Generated_Source\PSoC4/UART_UART.c ****     *  None
  78:.\Generated_Source\PSoC4/UART_UART.c ****     *
  79:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
  80:.\Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
  81:.\Generated_Source\PSoC4/UART_UART.c ****     {
  82:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
  83:.\Generated_Source\PSoC4/UART_UART.c **** 
  84:.\Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
  85:.\Generated_Source\PSoC4/UART_UART.c ****         {
  86:.\Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
  87:.\Generated_Source\PSoC4/UART_UART.c ****         }
  88:.\Generated_Source\PSoC4/UART_UART.c ****         else
  89:.\Generated_Source\PSoC4/UART_UART.c ****         {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 3


  90:.\Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
  91:.\Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
  92:.\Generated_Source\PSoC4/UART_UART.c **** 
  93:.\Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
  94:.\Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
  95:.\Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
  96:.\Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
  97:.\Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
  98:.\Generated_Source\PSoC4/UART_UART.c **** 
  99:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 100:.\Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 101:.\Generated_Source\PSoC4/UART_UART.c **** 
 102:.\Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 103:.\Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 104:.\Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 105:.\Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 106:.\Generated_Source\PSoC4/UART_UART.c **** 
 107:.\Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 108:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 109:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 110:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  = (uint8) config->rxBufferSize;
 111:.\Generated_Source\PSoC4/UART_UART.c **** 
 112:.\Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 113:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 114:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 115:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  = (uint8) config->txBufferSize;
 116:.\Generated_Source\PSoC4/UART_UART.c **** 
 117:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 118:.\Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
 119:.\Generated_Source\PSoC4/UART_UART.c ****             {
 120:.\Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 121:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 122:.\Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 123:.\Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 124:.\Generated_Source\PSoC4/UART_UART.c ****             }
 125:.\Generated_Source\PSoC4/UART_UART.c ****             else
 126:.\Generated_Source\PSoC4/UART_UART.c ****             {
 127:.\Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
 128:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 129:.\Generated_Source\PSoC4/UART_UART.c ****             }
 130:.\Generated_Source\PSoC4/UART_UART.c **** 
 131:.\Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 132:.\Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 133:.\Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 134:.\Generated_Source\PSoC4/UART_UART.c **** 
 135:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 136:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 137:.\Generated_Source\PSoC4/UART_UART.c **** 
 138:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 139:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 140:.\Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 141:.\Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 142:.\Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 143:.\Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 144:.\Generated_Source\PSoC4/UART_UART.c **** 
 145:.\Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 146:.\Generated_Source\PSoC4/UART_UART.c ****             {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 4


 147:.\Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 148:.\Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 149:.\Generated_Source\PSoC4/UART_UART.c ****             }
 150:.\Generated_Source\PSoC4/UART_UART.c **** 
 151:.\Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 152:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 153:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 154:.\Generated_Source\PSoC4/UART_UART.c **** 
 155:.\Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 156:.\Generated_Source\PSoC4/UART_UART.c **** 
 157:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 158:.\Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 159:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 160:.\Generated_Source\PSoC4/UART_UART.c **** 
 161:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 162:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 163:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 164:.\Generated_Source\PSoC4/UART_UART.c **** 
 165:.\Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 166:.\Generated_Source\PSoC4/UART_UART.c ****             {
 167:.\Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 168:.\Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 169:.\Generated_Source\PSoC4/UART_UART.c ****             }
 170:.\Generated_Source\PSoC4/UART_UART.c **** 
 171:.\Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 172:.\Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 173:.\Generated_Source\PSoC4/UART_UART.c **** 
 174:.\Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 175:.\Generated_Source\PSoC4/UART_UART.c **** 
 176:.\Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 177:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 178:.\Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 179:.\Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 180:.\Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
 181:.\Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 182:.\Generated_Source\PSoC4/UART_UART.c **** 
 183:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 184:.\Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
 185:.\Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 186:.\Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 187:.\Generated_Source\PSoC4/UART_UART.c **** 
 188:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 189:.\Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 190:.\Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 191:.\Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 192:.\Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 193:.\Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 194:.\Generated_Source\PSoC4/UART_UART.c **** 
 195:.\Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 196:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 197:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 198:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 199:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 200:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 201:.\Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 202:.\Generated_Source\PSoC4/UART_UART.c **** 
 203:.\Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 5


 204:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 205:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 206:.\Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 207:.\Generated_Source\PSoC4/UART_UART.c **** 
 208:.\Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 209:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 210:.\Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 211:.\Generated_Source\PSoC4/UART_UART.c ****         }
 212:.\Generated_Source\PSoC4/UART_UART.c ****     }
 213:.\Generated_Source\PSoC4/UART_UART.c **** 
 214:.\Generated_Source\PSoC4/UART_UART.c **** #else
 215:.\Generated_Source\PSoC4/UART_UART.c **** 
 216:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 217:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 218:.\Generated_Source\PSoC4/UART_UART.c ****     ********************************************************************************
 219:.\Generated_Source\PSoC4/UART_UART.c ****     *
 220:.\Generated_Source\PSoC4/UART_UART.c ****     * Summary:
 221:.\Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 222:.\Generated_Source\PSoC4/UART_UART.c ****     *
 223:.\Generated_Source\PSoC4/UART_UART.c ****     * Parameters:
 224:.\Generated_Source\PSoC4/UART_UART.c ****     *  None
 225:.\Generated_Source\PSoC4/UART_UART.c ****     *
 226:.\Generated_Source\PSoC4/UART_UART.c ****     * Return:
 227:.\Generated_Source\PSoC4/UART_UART.c ****     *  None
 228:.\Generated_Source\PSoC4/UART_UART.c ****     *
 229:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 230:.\Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 231:.\Generated_Source\PSoC4/UART_UART.c ****     {
  26              		.loc 1 231 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 00AF     		add	r7, sp, #0
  33              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 233:.\Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
  34              		.loc 1 233 0
  35 0004 174B     		ldr	r3, .L2
  36 0006 184A     		ldr	r2, .L2+4
  37 0008 1A60     		str	r2, [r3]
 234:.\Generated_Source\PSoC4/UART_UART.c **** 
 235:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 236:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
  38              		.loc 1 236 0
  39 000a 184B     		ldr	r3, .L2+8
  40 000c 0022     		mov	r2, #0
  41 000e 1A60     		str	r2, [r3]
 237:.\Generated_Source\PSoC4/UART_UART.c **** 
 238:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 239:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
  42              		.loc 1 239 0
  43 0010 174B     		ldr	r3, .L2+12
  44 0012 0122     		mov	r2, #1
  45 0014 1A60     		str	r2, [r3]
 240:.\Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 6


  46              		.loc 1 240 0
  47 0016 174B     		ldr	r3, .L2+16
  48 0018 0722     		mov	r2, #7
  49 001a 1A60     		str	r2, [r3]
 241:.\Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  50              		.loc 1 241 0
  51 001c 164B     		ldr	r3, .L2+20
  52 001e 0722     		mov	r2, #7
  53 0020 1A60     		str	r2, [r3]
 242:.\Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  54              		.loc 1 242 0
  55 0022 164B     		ldr	r3, .L2+24
  56 0024 0022     		mov	r2, #0
  57 0026 1A60     		str	r2, [r3]
 243:.\Generated_Source\PSoC4/UART_UART.c **** 
 244:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 245:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
  58              		.loc 1 245 0
  59 0028 154B     		ldr	r3, .L2+28
  60 002a 0122     		mov	r2, #1
  61 002c 1A60     		str	r2, [r3]
 246:.\Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  62              		.loc 1 246 0
  63 002e 154B     		ldr	r3, .L2+32
  64 0030 154A     		ldr	r2, .L2+36
  65 0032 1A60     		str	r2, [r3]
 247:.\Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  66              		.loc 1 247 0
  67 0034 154B     		ldr	r3, .L2+40
  68 0036 0022     		mov	r2, #0
  69 0038 1A60     		str	r2, [r3]
 248:.\Generated_Source\PSoC4/UART_UART.c **** 
 249:.\Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 250:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
 251:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 252:.\Generated_Source\PSoC4/UART_UART.c **** 
 253:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 254:.\Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
 255:.\Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
 256:.\Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 257:.\Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 258:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 259:.\Generated_Source\PSoC4/UART_UART.c **** 
 260:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 261:.\Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 262:.\Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 263:.\Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 264:.\Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 265:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 266:.\Generated_Source\PSoC4/UART_UART.c **** 
 267:.\Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 268:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
  70              		.loc 1 268 0
  71 003a 154B     		ldr	r3, .L2+44
  72 003c 0022     		mov	r2, #0
  73 003e 1A60     		str	r2, [r3]
 269:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 7


  74              		.loc 1 269 0
  75 0040 144B     		ldr	r3, .L2+48
  76 0042 0022     		mov	r2, #0
  77 0044 1A60     		str	r2, [r3]
 270:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
  78              		.loc 1 270 0
  79 0046 144B     		ldr	r3, .L2+52
  80 0048 0022     		mov	r2, #0
  81 004a 1A60     		str	r2, [r3]
 271:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
  82              		.loc 1 271 0
  83 004c 134B     		ldr	r3, .L2+56
  84 004e 0022     		mov	r2, #0
  85 0050 1A60     		str	r2, [r3]
 272:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
  86              		.loc 1 272 0
  87 0052 134B     		ldr	r3, .L2+60
  88 0054 0022     		mov	r2, #0
  89 0056 1A60     		str	r2, [r3]
 273:.\Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  90              		.loc 1 273 0
  91 0058 124B     		ldr	r3, .L2+64
  92 005a 0022     		mov	r2, #0
  93 005c 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC4/UART_UART.c **** 
 275:.\Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 276:.\Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
 277:.\Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 278:.\Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
 279:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 280:.\Generated_Source\PSoC4/UART_UART.c **** 
 281:.\Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 282:.\Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 283:.\Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 284:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 285:.\Generated_Source\PSoC4/UART_UART.c ****     }
  94              		.loc 1 285 0
  95 005e BD46     		mov	sp, r7
  96              		@ sp needed
  97 0060 80BD     		pop	{r7, pc}
  98              	.L3:
  99 0062 C046     		.align	2
 100              	.L2:
 101 0064 00000740 		.word	1074200576
 102 0068 07000002 		.word	33554439
 103 006c 40000740 		.word	1074200640
 104 0070 48000740 		.word	1074200648
 105 0074 00030740 		.word	1074201344
 106 0078 04030740 		.word	1074201348
 107 007c 10030740 		.word	1074201360
 108 0080 44000740 		.word	1074200644
 109 0084 00020740 		.word	1074201088
 110 0088 07000080 		.word	-2147483641
 111 008c 04020740 		.word	1074201092
 112 0090 880E0740 		.word	1074204296
 113 0094 C80E0740 		.word	1074204360
 114 0098 480F0740 		.word	1074204488
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 8


 115 009c 080F0740 		.word	1074204424
 116 00a0 C80F0740 		.word	1074204616
 117 00a4 880F0740 		.word	1074204552
 118              		.cfi_endproc
 119              	.LFE0:
 120              		.size	UART_UartInit, .-UART_UartInit
 121              		.section	.text.UART_UartPostEnable,"ax",%progbits
 122              		.align	2
 123              		.global	UART_UartPostEnable
 124              		.code	16
 125              		.thumb_func
 126              		.type	UART_UartPostEnable, %function
 127              	UART_UartPostEnable:
 128              	.LFB1:
 286:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 287:.\Generated_Source\PSoC4/UART_UART.c **** 
 288:.\Generated_Source\PSoC4/UART_UART.c **** 
 289:.\Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 291:.\Generated_Source\PSoC4/UART_UART.c **** ********************************************************************************
 292:.\Generated_Source\PSoC4/UART_UART.c **** *
 293:.\Generated_Source\PSoC4/UART_UART.c **** * Summary:
 294:.\Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be 
 295:.\Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 296:.\Generated_Source\PSoC4/UART_UART.c **** *
 297:.\Generated_Source\PSoC4/UART_UART.c **** * Parameters:
 298:.\Generated_Source\PSoC4/UART_UART.c **** *  None
 299:.\Generated_Source\PSoC4/UART_UART.c **** *
 300:.\Generated_Source\PSoC4/UART_UART.c **** * Return:
 301:.\Generated_Source\PSoC4/UART_UART.c **** *  None
 302:.\Generated_Source\PSoC4/UART_UART.c **** *
 303:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 305:.\Generated_Source\PSoC4/UART_UART.c **** {
 129              		.loc 1 305 0
 130              		.cfi_startproc
 131 0000 80B5     		push	{r7, lr}
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 135 0002 00AF     		add	r7, sp, #0
 136              		.cfi_def_cfa_register 7
 306:.\Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 307:.\Generated_Source\PSoC4/UART_UART.c **** 
 308:.\Generated_Source\PSoC4/UART_UART.c **** #if (UART_TX_SDA_MISO_PIN)
 309:.\Generated_Source\PSoC4/UART_UART.c ****     if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 310:.\Generated_Source\PSoC4/UART_UART.c ****     {
 311:.\Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 312:.\Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 313:.\Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_SDA_MISO_HSIOM_POS, UART_HSIOM_UART_SEL);
 314:.\Generated_Source\PSoC4/UART_UART.c ****     }
 315:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 316:.\Generated_Source\PSoC4/UART_UART.c **** 
 317:.\Generated_Source\PSoC4/UART_UART.c **** #if (UART_SS0_PIN)
 318:.\Generated_Source\PSoC4/UART_UART.c ****     if (UART_CHECK_SS0_PIN_USED)
 319:.\Generated_Source\PSoC4/UART_UART.c ****     {
 320:.\Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 9


 321:.\Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 322:.\Generated_Source\PSoC4/UART_UART.c ****                                        UART_SS0_HSIOM_POS, UART_HSIOM_UART_SEL);
 323:.\Generated_Source\PSoC4/UART_UART.c ****     }
 324:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SS0_PIN) */
 325:.\Generated_Source\PSoC4/UART_UART.c **** 
 326:.\Generated_Source\PSoC4/UART_UART.c **** #else
 327:.\Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_TX_PIN)
 328:.\Generated_Source\PSoC4/UART_UART.c ****      /* Set SCB UART to drive the output pin */
 329:.\Generated_Source\PSoC4/UART_UART.c ****     UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 137              		.loc 1 329 0
 138 0004 054B     		ldr	r3, .L5
 139 0006 054A     		ldr	r2, .L5
 140 0008 1168     		ldr	r1, [r2]
 141 000a 054A     		ldr	r2, .L5+4
 142 000c 0A40     		and	r2, r1
 143 000e 9021     		mov	r1, #144
 144 0010 0904     		lsl	r1, r1, #16
 145 0012 0A43     		orr	r2, r1
 146 0014 1A60     		str	r2, [r3]
 330:.\Generated_Source\PSoC4/UART_UART.c ****                                    UART_TX_HSIOM_POS, UART_HSIOM_UART_SEL);
 331:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_TX_PIN) */
 332:.\Generated_Source\PSoC4/UART_UART.c **** 
 333:.\Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_RTS_PIN)
 334:.\Generated_Source\PSoC4/UART_UART.c ****     /* Set SCB UART to drive the output pin */
 335:.\Generated_Source\PSoC4/UART_UART.c ****     UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 336:.\Generated_Source\PSoC4/UART_UART.c ****                                    UART_RTS_HSIOM_POS, UART_HSIOM_UART_SEL);
 337:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RTS_PIN) */
 338:.\Generated_Source\PSoC4/UART_UART.c **** 
 339:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 340:.\Generated_Source\PSoC4/UART_UART.c **** }
 147              		.loc 1 340 0
 148 0016 BD46     		mov	sp, r7
 149              		@ sp needed
 150 0018 80BD     		pop	{r7, pc}
 151              	.L6:
 152 001a C046     		.align	2
 153              	.L5:
 154 001c 00000140 		.word	1073807360
 155 0020 FFFF0FFF 		.word	-15728641
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 159              		.section	.text.UART_UartStop,"ax",%progbits
 160              		.align	2
 161              		.global	UART_UartStop
 162              		.code	16
 163              		.thumb_func
 164              		.type	UART_UartStop, %function
 165              	UART_UartStop:
 166              	.LFB2:
 341:.\Generated_Source\PSoC4/UART_UART.c **** 
 342:.\Generated_Source\PSoC4/UART_UART.c **** 
 343:.\Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 344:.\Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 345:.\Generated_Source\PSoC4/UART_UART.c **** ********************************************************************************
 346:.\Generated_Source\PSoC4/UART_UART.c **** *
 347:.\Generated_Source\PSoC4/UART_UART.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 10


 348:.\Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 349:.\Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 350:.\Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature to
 351:.\Generated_Source\PSoC4/UART_UART.c **** *  not cause it to trigger after the component is enabled.
 352:.\Generated_Source\PSoC4/UART_UART.c **** *
 353:.\Generated_Source\PSoC4/UART_UART.c **** * Parameters:
 354:.\Generated_Source\PSoC4/UART_UART.c **** *  None
 355:.\Generated_Source\PSoC4/UART_UART.c **** *
 356:.\Generated_Source\PSoC4/UART_UART.c **** * Return:
 357:.\Generated_Source\PSoC4/UART_UART.c **** *  None
 358:.\Generated_Source\PSoC4/UART_UART.c **** *
 359:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 360:.\Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 361:.\Generated_Source\PSoC4/UART_UART.c **** {
 167              		.loc 1 361 0
 168              		.cfi_startproc
 169 0000 80B5     		push	{r7, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
 362:.\Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 363:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 364:.\Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 365:.\Generated_Source\PSoC4/UART_UART.c ****         {
 366:.\Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 367:.\Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 368:.\Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_HSIOM_GPIO_SEL);
 369:.\Generated_Source\PSoC4/UART_UART.c ****         }
 370:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 371:.\Generated_Source\PSoC4/UART_UART.c **** 
 372:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_SS0_PIN)
 373:.\Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_SS0_PIN_USED)
 374:.\Generated_Source\PSoC4/UART_UART.c ****         {
 375:.\Generated_Source\PSoC4/UART_UART.c ****             /* Set output pin state after block is disabled */
 376:.\Generated_Source\PSoC4/UART_UART.c ****             UART_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 377:.\Generated_Source\PSoC4/UART_UART.c **** 
 378:.\Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 379:.\Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 380:.\Generated_Source\PSoC4/UART_UART.c ****                                            UART_SS0_HSIOM_POS, UART_HSIOM_GPIO_SEL);
 381:.\Generated_Source\PSoC4/UART_UART.c ****         }
 382:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SS0_PIN) */
 383:.\Generated_Source\PSoC4/UART_UART.c **** 
 384:.\Generated_Source\PSoC4/UART_UART.c **** #else
 385:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 386:.\Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 387:.\Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 175              		.loc 1 387 0
 176 0004 034B     		ldr	r3, .L8
 177 0006 034A     		ldr	r2, .L8
 178 0008 1168     		ldr	r1, [r2]
 179 000a 034A     		ldr	r2, .L8+4
 180 000c 0A40     		and	r2, r1
 181 000e 1A60     		str	r2, [r3]
 388:.\Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_HSIOM_GPIO_SEL);
 389:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 11


 390:.\Generated_Source\PSoC4/UART_UART.c **** 
 391:.\Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 392:.\Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 393:.\Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 394:.\Generated_Source\PSoC4/UART_UART.c **** 
 395:.\Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 396:.\Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 397:.\Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_HSIOM_GPIO_SEL);
 398:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 399:.\Generated_Source\PSoC4/UART_UART.c **** 
 400:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 401:.\Generated_Source\PSoC4/UART_UART.c **** 
 402:.\Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 403:.\Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 404:.\Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 405:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 406:.\Generated_Source\PSoC4/UART_UART.c **** }
 182              		.loc 1 406 0
 183 0010 BD46     		mov	sp, r7
 184              		@ sp needed
 185 0012 80BD     		pop	{r7, pc}
 186              	.L9:
 187              		.align	2
 188              	.L8:
 189 0014 00000140 		.word	1073807360
 190 0018 FFFF0FFF 		.word	-15728641
 191              		.cfi_endproc
 192              	.LFE2:
 193              		.size	UART_UartStop, .-UART_UartStop
 194              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 195              		.align	2
 196              		.global	UART_UartSetRxAddress
 197              		.code	16
 198              		.thumb_func
 199              		.type	UART_UartSetRxAddress, %function
 200              	UART_UartSetRxAddress:
 201              	.LFB3:
 407:.\Generated_Source\PSoC4/UART_UART.c **** 
 408:.\Generated_Source\PSoC4/UART_UART.c **** 
 409:.\Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 411:.\Generated_Source\PSoC4/UART_UART.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/UART_UART.c **** *
 413:.\Generated_Source\PSoC4/UART_UART.c **** * Summary:
 414:.\Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 415:.\Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 416:.\Generated_Source\PSoC4/UART_UART.c **** *
 417:.\Generated_Source\PSoC4/UART_UART.c **** * Parameters:
 418:.\Generated_Source\PSoC4/UART_UART.c **** *  address: Address for hardware address detection.
 419:.\Generated_Source\PSoC4/UART_UART.c **** *
 420:.\Generated_Source\PSoC4/UART_UART.c **** * Return:
 421:.\Generated_Source\PSoC4/UART_UART.c **** *  None
 422:.\Generated_Source\PSoC4/UART_UART.c **** *
 423:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 424:.\Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 425:.\Generated_Source\PSoC4/UART_UART.c **** {
 202              		.loc 1 425 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 12


 203              		.cfi_startproc
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 84B0     		sub	sp, sp, #16
 209              		.cfi_def_cfa_offset 24
 210 0004 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
 212 0006 7860     		str	r0, [r7, #4]
 426:.\Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
 427:.\Generated_Source\PSoC4/UART_UART.c **** 
 428:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 213              		.loc 1 428 0
 214 0008 094B     		ldr	r3, .L11
 215 000a 1B68     		ldr	r3, [r3]
 216 000c FB60     		str	r3, [r7, #12]
 429:.\Generated_Source\PSoC4/UART_UART.c **** 
 430:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 217              		.loc 1 430 0
 218 000e FB68     		ldr	r3, [r7, #12]
 219 0010 FF22     		mov	r2, #255
 220 0012 9343     		bic	r3, r2
 221 0014 FB60     		str	r3, [r7, #12]
 431:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 222              		.loc 1 431 0
 223 0016 7A68     		ldr	r2, [r7, #4]
 224 0018 FF23     		mov	r3, #255
 225 001a 1340     		and	r3, r2
 226 001c FA68     		ldr	r2, [r7, #12]
 227 001e 1343     		orr	r3, r2
 228 0020 FB60     		str	r3, [r7, #12]
 432:.\Generated_Source\PSoC4/UART_UART.c **** 
 433:.\Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 229              		.loc 1 433 0
 230 0022 034B     		ldr	r3, .L11
 231 0024 FA68     		ldr	r2, [r7, #12]
 232 0026 1A60     		str	r2, [r3]
 434:.\Generated_Source\PSoC4/UART_UART.c **** }
 233              		.loc 1 434 0
 234 0028 BD46     		mov	sp, r7
 235 002a 04B0     		add	sp, sp, #16
 236              		@ sp needed
 237 002c 80BD     		pop	{r7, pc}
 238              	.L12:
 239 002e C046     		.align	2
 240              	.L11:
 241 0030 10030740 		.word	1074201360
 242              		.cfi_endproc
 243              	.LFE3:
 244              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 245              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 246              		.align	2
 247              		.global	UART_UartSetRxAddressMask
 248              		.code	16
 249              		.thumb_func
 250              		.type	UART_UartSetRxAddressMask, %function
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 13


 251              	UART_UartSetRxAddressMask:
 252              	.LFB4:
 435:.\Generated_Source\PSoC4/UART_UART.c **** 
 436:.\Generated_Source\PSoC4/UART_UART.c **** 
 437:.\Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 438:.\Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 439:.\Generated_Source\PSoC4/UART_UART.c **** ********************************************************************************
 440:.\Generated_Source\PSoC4/UART_UART.c **** *
 441:.\Generated_Source\PSoC4/UART_UART.c **** * Summary:
 442:.\Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 443:.\Generated_Source\PSoC4/UART_UART.c **** *
 444:.\Generated_Source\PSoC4/UART_UART.c **** * Parameters:
 445:.\Generated_Source\PSoC4/UART_UART.c **** *  addressMask: Address mask.
 446:.\Generated_Source\PSoC4/UART_UART.c **** *   0 - address bit does not care while comparison.
 447:.\Generated_Source\PSoC4/UART_UART.c **** *   1 - address bit is significant while comparison.
 448:.\Generated_Source\PSoC4/UART_UART.c **** *
 449:.\Generated_Source\PSoC4/UART_UART.c **** * Return:
 450:.\Generated_Source\PSoC4/UART_UART.c **** *  None
 451:.\Generated_Source\PSoC4/UART_UART.c **** *
 452:.\Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 453:.\Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 454:.\Generated_Source\PSoC4/UART_UART.c **** {
 253              		.loc 1 454 0
 254              		.cfi_startproc
 255 0000 80B5     		push	{r7, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 84B0     		sub	sp, sp, #16
 260              		.cfi_def_cfa_offset 24
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 7860     		str	r0, [r7, #4]
 455:.\Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
 456:.\Generated_Source\PSoC4/UART_UART.c **** 
 457:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 264              		.loc 1 457 0
 265 0008 084B     		ldr	r3, .L14
 266 000a 1B68     		ldr	r3, [r3]
 267 000c FB60     		str	r3, [r7, #12]
 458:.\Generated_Source\PSoC4/UART_UART.c **** 
 459:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 268              		.loc 1 459 0
 269 000e FA68     		ldr	r2, [r7, #12]
 270 0010 074B     		ldr	r3, .L14+4
 271 0012 1340     		and	r3, r2
 272 0014 FB60     		str	r3, [r7, #12]
 460:.\Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 273              		.loc 1 460 0
 274 0016 7B68     		ldr	r3, [r7, #4]
 275 0018 1B04     		lsl	r3, r3, #16
 276 001a FA68     		ldr	r2, [r7, #12]
 277 001c 1343     		orr	r3, r2
 278 001e FB60     		str	r3, [r7, #12]
 461:.\Generated_Source\PSoC4/UART_UART.c **** 
 462:.\Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 279              		.loc 1 462 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 14


 280 0020 024B     		ldr	r3, .L14
 281 0022 FA68     		ldr	r2, [r7, #12]
 282 0024 1A60     		str	r2, [r3]
 463:.\Generated_Source\PSoC4/UART_UART.c **** }
 283              		.loc 1 463 0
 284 0026 BD46     		mov	sp, r7
 285 0028 04B0     		add	sp, sp, #16
 286              		@ sp needed
 287 002a 80BD     		pop	{r7, pc}
 288              	.L15:
 289              		.align	2
 290              	.L14:
 291 002c 10030740 		.word	1074201360
 292 0030 FFFF00FF 		.word	-16711681
 293              		.cfi_endproc
 294              	.LFE4:
 295              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 296              		.section	.text.UART_UartPutString,"ax",%progbits
 297              		.align	2
 298              		.global	UART_UartPutString
 299              		.code	16
 300              		.thumb_func
 301              		.type	UART_UartPutString, %function
 302              	UART_UartPutString:
 303              	.LFB5:
 464:.\Generated_Source\PSoC4/UART_UART.c **** 
 465:.\Generated_Source\PSoC4/UART_UART.c **** 
 466:.\Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 467:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 468:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 469:.\Generated_Source\PSoC4/UART_UART.c ****     ********************************************************************************
 470:.\Generated_Source\PSoC4/UART_UART.c ****     *
 471:.\Generated_Source\PSoC4/UART_UART.c ****     * Summary:
 472:.\Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer.
 473:.\Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char
 474:.\Generated_Source\PSoC4/UART_UART.c ****     *  where 1 to 255 are valid characters and 0 indicates an error occurred or
 475:.\Generated_Source\PSoC4/UART_UART.c ****     *  no data present.
 476:.\Generated_Source\PSoC4/UART_UART.c ****     *  - The RX software buffer is disabled: returns the data element
 477:.\Generated_Source\PSoC4/UART_UART.c ****     *    retrieved from the RX FIFO.
 478:.\Generated_Source\PSoC4/UART_UART.c ****     *    Undefined data will be returned if the RX FIFO is empty.
 479:.\Generated_Source\PSoC4/UART_UART.c ****     *  - The RX software buffer is enabled: returns the data element from
 480:.\Generated_Source\PSoC4/UART_UART.c ****     *    the software receive buffer.
 481:.\Generated_Source\PSoC4/UART_UART.c ****     *
 482:.\Generated_Source\PSoC4/UART_UART.c ****     * Parameters:
 483:.\Generated_Source\PSoC4/UART_UART.c ****     *  None
 484:.\Generated_Source\PSoC4/UART_UART.c ****     *
 485:.\Generated_Source\PSoC4/UART_UART.c ****     * Return:
 486:.\Generated_Source\PSoC4/UART_UART.c ****     *  The next data element from the receive buffer.
 487:.\Generated_Source\PSoC4/UART_UART.c ****     *  ASCII character values from 1 to 255 are valid.
 488:.\Generated_Source\PSoC4/UART_UART.c ****     *  A returned zero signifies an error condition or no data available.
 489:.\Generated_Source\PSoC4/UART_UART.c ****     *
 490:.\Generated_Source\PSoC4/UART_UART.c ****     * Side Effects:
 491:.\Generated_Source\PSoC4/UART_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 492:.\Generated_Source\PSoC4/UART_UART.c ****     *  and software buffer usage.
 493:.\Generated_Source\PSoC4/UART_UART.c ****     *  RX software buffer is enabled: The internal software buffer overflow
 494:.\Generated_Source\PSoC4/UART_UART.c ****     *  does not treat as an error condition.
 495:.\Generated_Source\PSoC4/UART_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 15


 496:.\Generated_Source\PSoC4/UART_UART.c ****     *
 497:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 498:.\Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 499:.\Generated_Source\PSoC4/UART_UART.c ****     {
 500:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 501:.\Generated_Source\PSoC4/UART_UART.c **** 
 502:.\Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 503:.\Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 504:.\Generated_Source\PSoC4/UART_UART.c ****         {
 505:.\Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 506:.\Generated_Source\PSoC4/UART_UART.c ****         }
 507:.\Generated_Source\PSoC4/UART_UART.c **** 
 508:.\Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 509:.\Generated_Source\PSoC4/UART_UART.c ****         {
 510:.\Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 511:.\Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 512:.\Generated_Source\PSoC4/UART_UART.c ****         }
 513:.\Generated_Source\PSoC4/UART_UART.c **** 
 514:.\Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 515:.\Generated_Source\PSoC4/UART_UART.c ****     }
 516:.\Generated_Source\PSoC4/UART_UART.c **** 
 517:.\Generated_Source\PSoC4/UART_UART.c **** 
 518:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 519:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 520:.\Generated_Source\PSoC4/UART_UART.c ****     ********************************************************************************
 521:.\Generated_Source\PSoC4/UART_UART.c ****     *
 522:.\Generated_Source\PSoC4/UART_UART.c ****     * Summary:
 523:.\Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 524:.\Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
 525:.\Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 526:.\Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 527:.\Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 528:.\Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 529:.\Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 530:.\Generated_Source\PSoC4/UART_UART.c ****     *
 531:.\Generated_Source\PSoC4/UART_UART.c ****     * Parameters:
 532:.\Generated_Source\PSoC4/UART_UART.c ****     *  None
 533:.\Generated_Source\PSoC4/UART_UART.c ****     *
 534:.\Generated_Source\PSoC4/UART_UART.c ****     * Return:
 535:.\Generated_Source\PSoC4/UART_UART.c ****     *  Bits 7-0 contain the next data element from the receive buffer and
 536:.\Generated_Source\PSoC4/UART_UART.c ****     *  other bits contain the error condition.
 537:.\Generated_Source\PSoC4/UART_UART.c ****     *
 538:.\Generated_Source\PSoC4/UART_UART.c ****     * Side Effects:
 539:.\Generated_Source\PSoC4/UART_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 540:.\Generated_Source\PSoC4/UART_UART.c ****     *  and software buffer usage.
 541:.\Generated_Source\PSoC4/UART_UART.c ****     *  RX software buffer is disabled: The internal software buffer overflow
 542:.\Generated_Source\PSoC4/UART_UART.c ****     *  is not returned as status by this function.
 543:.\Generated_Source\PSoC4/UART_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 544:.\Generated_Source\PSoC4/UART_UART.c ****     *
 545:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 546:.\Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 547:.\Generated_Source\PSoC4/UART_UART.c ****     {
 548:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
 549:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 550:.\Generated_Source\PSoC4/UART_UART.c **** 
 551:.\Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 552:.\Generated_Source\PSoC4/UART_UART.c ****         {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 16


 553:.\Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 554:.\Generated_Source\PSoC4/UART_UART.c ****         }
 555:.\Generated_Source\PSoC4/UART_UART.c ****         #endif
 556:.\Generated_Source\PSoC4/UART_UART.c **** 
 557:.\Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 558:.\Generated_Source\PSoC4/UART_UART.c ****         {
 559:.\Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:.\Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 561:.\Generated_Source\PSoC4/UART_UART.c ****             */
 562:.\Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 563:.\Generated_Source\PSoC4/UART_UART.c ****             {            
 564:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 565:.\Generated_Source\PSoC4/UART_UART.c ****             }
 566:.\Generated_Source\PSoC4/UART_UART.c ****             #endif
 567:.\Generated_Source\PSoC4/UART_UART.c **** 
 568:.\Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
 569:.\Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 570:.\Generated_Source\PSoC4/UART_UART.c ****         }
 571:.\Generated_Source\PSoC4/UART_UART.c ****         else
 572:.\Generated_Source\PSoC4/UART_UART.c ****         {
 573:.\Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the case
 574:.\Generated_Source\PSoC4/UART_UART.c ****             * of empty. Otherwise the first received byte will be read.
 575:.\Generated_Source\PSoC4/UART_UART.c ****             */
 576:.\Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 577:.\Generated_Source\PSoC4/UART_UART.c **** 
 578:.\Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes.
 579:.\Generated_Source\PSoC4/UART_UART.c ****             * The RX_NOT_EMPTY interrupt is cleared by the interrupt routine
 580:.\Generated_Source\PSoC4/UART_UART.c ****             * in case the byte was received and read by code above.
 581:.\Generated_Source\PSoC4/UART_UART.c ****             */
 582:.\Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 583:.\Generated_Source\PSoC4/UART_UART.c ****             {
 584:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 585:.\Generated_Source\PSoC4/UART_UART.c ****             }
 586:.\Generated_Source\PSoC4/UART_UART.c ****             #endif
 587:.\Generated_Source\PSoC4/UART_UART.c ****         }
 588:.\Generated_Source\PSoC4/UART_UART.c **** 
 589:.\Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 590:.\Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 591:.\Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 592:.\Generated_Source\PSoC4/UART_UART.c **** 
 593:.\Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 594:.\Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 595:.\Generated_Source\PSoC4/UART_UART.c ****         */
 596:.\Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 597:.\Generated_Source\PSoC4/UART_UART.c **** 
 598:.\Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 599:.\Generated_Source\PSoC4/UART_UART.c ****     }
 600:.\Generated_Source\PSoC4/UART_UART.c **** 
 601:.\Generated_Source\PSoC4/UART_UART.c **** 
 602:.\Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 603:.\Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 604:.\Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 605:.\Generated_Source\PSoC4/UART_UART.c ****         ********************************************************************************
 606:.\Generated_Source\PSoC4/UART_UART.c ****         *
 607:.\Generated_Source\PSoC4/UART_UART.c ****         * Summary:
 608:.\Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 609:.\Generated_Source\PSoC4/UART_UART.c ****         *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 17


 610:.\Generated_Source\PSoC4/UART_UART.c ****         * Parameters:
 611:.\Generated_Source\PSoC4/UART_UART.c ****         *  polarity: Active polarity of RTS output signal.
 612:.\Generated_Source\PSoC4/UART_UART.c ****         *   UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 613:.\Generated_Source\PSoC4/UART_UART.c ****         *   UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 614:.\Generated_Source\PSoC4/UART_UART.c ****         *
 615:.\Generated_Source\PSoC4/UART_UART.c ****         * Return:
 616:.\Generated_Source\PSoC4/UART_UART.c ****         *  None
 617:.\Generated_Source\PSoC4/UART_UART.c ****         *
 618:.\Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 619:.\Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 620:.\Generated_Source\PSoC4/UART_UART.c ****         {
 621:.\Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 622:.\Generated_Source\PSoC4/UART_UART.c ****             {
 623:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 624:.\Generated_Source\PSoC4/UART_UART.c ****             }
 625:.\Generated_Source\PSoC4/UART_UART.c ****             else
 626:.\Generated_Source\PSoC4/UART_UART.c ****             {
 627:.\Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 628:.\Generated_Source\PSoC4/UART_UART.c ****             }
 629:.\Generated_Source\PSoC4/UART_UART.c ****         }
 630:.\Generated_Source\PSoC4/UART_UART.c **** 
 631:.\Generated_Source\PSoC4/UART_UART.c **** 
 632:.\Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 633:.\Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 634:.\Generated_Source\PSoC4/UART_UART.c ****         ********************************************************************************
 635:.\Generated_Source\PSoC4/UART_UART.c ****         *
 636:.\Generated_Source\PSoC4/UART_UART.c ****         * Summary:
 637:.\Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:.\Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:.\Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:.\Generated_Source\PSoC4/UART_UART.c ****         *
 641:.\Generated_Source\PSoC4/UART_UART.c ****         * Parameters:
 642:.\Generated_Source\PSoC4/UART_UART.c ****         *  level: Level in the RX FIFO for RTS signal activation.
 643:.\Generated_Source\PSoC4/UART_UART.c ****         *         The range of valid level values is between 0 and RX FIFO depth - 1.
 644:.\Generated_Source\PSoC4/UART_UART.c ****         *         Setting level value to 0 disables RTS signal activation.
 645:.\Generated_Source\PSoC4/UART_UART.c ****         *
 646:.\Generated_Source\PSoC4/UART_UART.c ****         * Return:
 647:.\Generated_Source\PSoC4/UART_UART.c ****         *  None
 648:.\Generated_Source\PSoC4/UART_UART.c ****         *
 649:.\Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 650:.\Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 651:.\Generated_Source\PSoC4/UART_UART.c ****         {
 652:.\Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 653:.\Generated_Source\PSoC4/UART_UART.c **** 
 654:.\Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
 655:.\Generated_Source\PSoC4/UART_UART.c **** 
 656:.\Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 657:.\Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 658:.\Generated_Source\PSoC4/UART_UART.c **** 
 659:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:.\Generated_Source\PSoC4/UART_UART.c ****         }
 661:.\Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 662:.\Generated_Source\PSoC4/UART_UART.c **** 
 663:.\Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 664:.\Generated_Source\PSoC4/UART_UART.c **** 
 665:.\Generated_Source\PSoC4/UART_UART.c **** 
 666:.\Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 18


 667:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 668:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 669:.\Generated_Source\PSoC4/UART_UART.c ****     ********************************************************************************
 670:.\Generated_Source\PSoC4/UART_UART.c ****     *
 671:.\Generated_Source\PSoC4/UART_UART.c ****     * Summary:
 672:.\Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 673:.\Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 674:.\Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is space available to put
 675:.\Generated_Source\PSoC4/UART_UART.c ****     *  all the requested data into the  transmit buffer.
 676:.\Generated_Source\PSoC4/UART_UART.c ****     *
 677:.\Generated_Source\PSoC4/UART_UART.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/UART_UART.c ****     *  string: pointer to the null terminated string array to be placed in the
 679:.\Generated_Source\PSoC4/UART_UART.c ****     *          transmit buffer.
 680:.\Generated_Source\PSoC4/UART_UART.c ****     *
 681:.\Generated_Source\PSoC4/UART_UART.c ****     * Return:
 682:.\Generated_Source\PSoC4/UART_UART.c ****     *  None
 683:.\Generated_Source\PSoC4/UART_UART.c ****     *
 684:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 685:.\Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 686:.\Generated_Source\PSoC4/UART_UART.c ****     {
 304              		.loc 1 686 0
 305              		.cfi_startproc
 306 0000 80B5     		push	{r7, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 84B0     		sub	sp, sp, #16
 311              		.cfi_def_cfa_offset 24
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
 687:.\Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 688:.\Generated_Source\PSoC4/UART_UART.c **** 
 689:.\Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 315              		.loc 1 689 0
 316 0008 0023     		mov	r3, #0
 317 000a FB60     		str	r3, [r7, #12]
 690:.\Generated_Source\PSoC4/UART_UART.c **** 
 691:.\Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 692:.\Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 318              		.loc 1 692 0
 319 000c 09E0     		b	.L17
 320              	.L18:
 693:.\Generated_Source\PSoC4/UART_UART.c ****         {
 694:.\Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 321              		.loc 1 694 0
 322 000e 7A68     		ldr	r2, [r7, #4]
 323 0010 FB68     		ldr	r3, [r7, #12]
 324 0012 D318     		add	r3, r2, r3
 325 0014 1B78     		ldrb	r3, [r3]
 326 0016 181C     		mov	r0, r3
 327 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 695:.\Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 328              		.loc 1 695 0
 329 001c FB68     		ldr	r3, [r7, #12]
 330 001e 0133     		add	r3, r3, #1
 331 0020 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 19


 332              	.L17:
 692:.\Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 333              		.loc 1 692 0 discriminator 1
 334 0022 7A68     		ldr	r2, [r7, #4]
 335 0024 FB68     		ldr	r3, [r7, #12]
 336 0026 D318     		add	r3, r2, r3
 337 0028 1B78     		ldrb	r3, [r3]
 338 002a 002B     		cmp	r3, #0
 339 002c EFD1     		bne	.L18
 696:.\Generated_Source\PSoC4/UART_UART.c ****         }
 697:.\Generated_Source\PSoC4/UART_UART.c ****     }
 340              		.loc 1 697 0
 341 002e BD46     		mov	sp, r7
 342 0030 04B0     		add	sp, sp, #16
 343              		@ sp needed
 344 0032 80BD     		pop	{r7, pc}
 345              		.cfi_endproc
 346              	.LFE5:
 347              		.size	UART_UartPutString, .-UART_UartPutString
 348              		.section	.text.UART_UartPutCRLF,"ax",%progbits
 349              		.align	2
 350              		.global	UART_UartPutCRLF
 351              		.code	16
 352              		.thumb_func
 353              		.type	UART_UartPutCRLF, %function
 354              	UART_UartPutCRLF:
 355              	.LFB6:
 698:.\Generated_Source\PSoC4/UART_UART.c **** 
 699:.\Generated_Source\PSoC4/UART_UART.c **** 
 700:.\Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 701:.\Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
 702:.\Generated_Source\PSoC4/UART_UART.c ****     ********************************************************************************
 703:.\Generated_Source\PSoC4/UART_UART.c ****     *
 704:.\Generated_Source\PSoC4/UART_UART.c ****     * Summary:
 705:.\Generated_Source\PSoC4/UART_UART.c ****     *  Places a byte of data followed by a carriage return (0x0D) and
 706:.\Generated_Source\PSoC4/UART_UART.c ****     *  line feed (0x0A) into the transmit buffer.
 707:.\Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is space available to put
 708:.\Generated_Source\PSoC4/UART_UART.c ****     *  all the requested data into the  transmit buffer.
 709:.\Generated_Source\PSoC4/UART_UART.c ****     *
 710:.\Generated_Source\PSoC4/UART_UART.c ****     * Parameters:
 711:.\Generated_Source\PSoC4/UART_UART.c ****     *  txDataByte : the data to be transmitted.
 712:.\Generated_Source\PSoC4/UART_UART.c ****     *
 713:.\Generated_Source\PSoC4/UART_UART.c ****     * Return:
 714:.\Generated_Source\PSoC4/UART_UART.c ****     *  None
 715:.\Generated_Source\PSoC4/UART_UART.c ****     *
 716:.\Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 717:.\Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 718:.\Generated_Source\PSoC4/UART_UART.c ****     {
 356              		.loc 1 718 0
 357              		.cfi_startproc
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 82B0     		sub	sp, sp, #8
 363              		.cfi_def_cfa_offset 16
 364 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 20


 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 719:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 367              		.loc 1 719 0
 368 0008 7B68     		ldr	r3, [r7, #4]
 369 000a 181C     		mov	r0, r3
 370 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
 720:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 371              		.loc 1 720 0
 372 0010 0D20     		mov	r0, #13
 373 0012 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 721:.\Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 374              		.loc 1 721 0
 375 0016 0A20     		mov	r0, #10
 376 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 722:.\Generated_Source\PSoC4/UART_UART.c ****     }
 377              		.loc 1 722 0
 378 001c BD46     		mov	sp, r7
 379 001e 02B0     		add	sp, sp, #8
 380              		@ sp needed
 381 0020 80BD     		pop	{r7, pc}
 382              		.cfi_endproc
 383              	.LFE6:
 384              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 385 0022 C046     		.text
 386              	.Letext0:
 387              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 388              		.section	.debug_info,"",%progbits
 389              	.Ldebug_info0:
 390 0000 AC010000 		.4byte	0x1ac
 391 0004 0400     		.2byte	0x4
 392 0006 00000000 		.4byte	.Ldebug_abbrev0
 393 000a 04       		.byte	0x4
 394 000b 01       		.uleb128 0x1
 395 000c 94000000 		.4byte	.LASF28
 396 0010 01       		.byte	0x1
 397 0011 03020000 		.4byte	.LASF29
 398 0015 2E000000 		.4byte	.LASF30
 399 0019 00000000 		.4byte	.Ldebug_ranges0+0
 400 001d 00000000 		.4byte	0
 401 0021 00000000 		.4byte	.Ldebug_line0
 402 0025 02       		.uleb128 0x2
 403 0026 01       		.byte	0x1
 404 0027 06       		.byte	0x6
 405 0028 49020000 		.4byte	.LASF0
 406 002c 02       		.uleb128 0x2
 407 002d 01       		.byte	0x1
 408 002e 08       		.byte	0x8
 409 002f 10010000 		.4byte	.LASF1
 410 0033 02       		.uleb128 0x2
 411 0034 02       		.byte	0x2
 412 0035 05       		.byte	0x5
 413 0036 2D020000 		.4byte	.LASF2
 414 003a 02       		.uleb128 0x2
 415 003b 02       		.byte	0x2
 416 003c 07       		.byte	0x7
 417 003d 58010000 		.4byte	.LASF3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 21


 418 0041 02       		.uleb128 0x2
 419 0042 04       		.byte	0x4
 420 0043 05       		.byte	0x5
 421 0044 37020000 		.4byte	.LASF4
 422 0048 02       		.uleb128 0x2
 423 0049 04       		.byte	0x4
 424 004a 07       		.byte	0x7
 425 004b 38010000 		.4byte	.LASF5
 426 004f 02       		.uleb128 0x2
 427 0050 08       		.byte	0x8
 428 0051 05       		.byte	0x5
 429 0052 00000000 		.4byte	.LASF6
 430 0056 02       		.uleb128 0x2
 431 0057 08       		.byte	0x8
 432 0058 07       		.byte	0x7
 433 0059 CF010000 		.4byte	.LASF7
 434 005d 03       		.uleb128 0x3
 435 005e 04       		.byte	0x4
 436 005f 05       		.byte	0x5
 437 0060 696E7400 		.ascii	"int\000"
 438 0064 02       		.uleb128 0x2
 439 0065 04       		.byte	0x4
 440 0066 07       		.byte	0x7
 441 0067 AC010000 		.4byte	.LASF8
 442 006b 04       		.uleb128 0x4
 443 006c A5010000 		.4byte	.LASF11
 444 0070 02       		.byte	0x2
 445 0071 C3       		.byte	0xc3
 446 0072 48000000 		.4byte	0x48
 447 0076 02       		.uleb128 0x2
 448 0077 04       		.byte	0x4
 449 0078 04       		.byte	0x4
 450 0079 8E000000 		.4byte	.LASF9
 451 007d 02       		.uleb128 0x2
 452 007e 08       		.byte	0x8
 453 007f 04       		.byte	0x4
 454 0080 88010000 		.4byte	.LASF10
 455 0084 04       		.uleb128 0x4
 456 0085 1E010000 		.4byte	.LASF12
 457 0089 02       		.byte	0x2
 458 008a D2       		.byte	0xd2
 459 008b 8F000000 		.4byte	0x8f
 460 008f 02       		.uleb128 0x2
 461 0090 01       		.byte	0x1
 462 0091 08       		.byte	0x8
 463 0092 28020000 		.4byte	.LASF13
 464 0096 05       		.uleb128 0x5
 465 0097 0E000000 		.4byte	.LASF14
 466 009b 02       		.byte	0x2
 467 009c 6D01     		.2byte	0x16d
 468 009e A2000000 		.4byte	0xa2
 469 00a2 06       		.uleb128 0x6
 470 00a3 6B000000 		.4byte	0x6b
 471 00a7 02       		.uleb128 0x2
 472 00a8 04       		.byte	0x4
 473 00a9 07       		.byte	0x7
 474 00aa EF010000 		.4byte	.LASF15
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 22


 475 00ae 07       		.uleb128 0x7
 476 00af B9010000 		.4byte	.LASF16
 477 00b3 01       		.byte	0x1
 478 00b4 E6       		.byte	0xe6
 479 00b5 00000000 		.4byte	.LFB0
 480 00b9 A8000000 		.4byte	.LFE0-.LFB0
 481 00bd 01       		.uleb128 0x1
 482 00be 9C       		.byte	0x9c
 483 00bf 08       		.uleb128 0x8
 484 00c0 24010000 		.4byte	.LASF17
 485 00c4 01       		.byte	0x1
 486 00c5 3001     		.2byte	0x130
 487 00c7 00000000 		.4byte	.LFB1
 488 00cb 24000000 		.4byte	.LFE1-.LFB1
 489 00cf 01       		.uleb128 0x1
 490 00d0 9C       		.byte	0x9c
 491 00d1 08       		.uleb128 0x8
 492 00d2 4A010000 		.4byte	.LASF18
 493 00d6 01       		.byte	0x1
 494 00d7 6801     		.2byte	0x168
 495 00d9 00000000 		.4byte	.LFB2
 496 00dd 1C000000 		.4byte	.LFE2-.LFB2
 497 00e1 01       		.uleb128 0x1
 498 00e2 9C       		.byte	0x9c
 499 00e3 09       		.uleb128 0x9
 500 00e4 8F010000 		.4byte	.LASF19
 501 00e8 01       		.byte	0x1
 502 00e9 A801     		.2byte	0x1a8
 503 00eb 00000000 		.4byte	.LFB3
 504 00ef 34000000 		.4byte	.LFE3-.LFB3
 505 00f3 01       		.uleb128 0x1
 506 00f4 9C       		.byte	0x9c
 507 00f5 18010000 		.4byte	0x118
 508 00f9 0A       		.uleb128 0xa
 509 00fa C7010000 		.4byte	.LASF21
 510 00fe 01       		.byte	0x1
 511 00ff A801     		.2byte	0x1a8
 512 0101 6B000000 		.4byte	0x6b
 513 0105 02       		.uleb128 0x2
 514 0106 91       		.byte	0x91
 515 0107 6C       		.sleb128 -20
 516 0108 0B       		.uleb128 0xb
 517 0109 40020000 		.4byte	.LASF23
 518 010d 01       		.byte	0x1
 519 010e AA01     		.2byte	0x1aa
 520 0110 6B000000 		.4byte	0x6b
 521 0114 02       		.uleb128 0x2
 522 0115 91       		.byte	0x91
 523 0116 74       		.sleb128 -12
 524 0117 00       		.byte	0
 525 0118 09       		.uleb128 0x9
 526 0119 14000000 		.4byte	.LASF20
 527 011d 01       		.byte	0x1
 528 011e C501     		.2byte	0x1c5
 529 0120 00000000 		.4byte	.LFB4
 530 0124 34000000 		.4byte	.LFE4-.LFB4
 531 0128 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 23


 532 0129 9C       		.byte	0x9c
 533 012a 4D010000 		.4byte	0x14d
 534 012e 0A       		.uleb128 0xa
 535 012f 7C010000 		.4byte	.LASF22
 536 0133 01       		.byte	0x1
 537 0134 C501     		.2byte	0x1c5
 538 0136 6B000000 		.4byte	0x6b
 539 013a 02       		.uleb128 0x2
 540 013b 91       		.byte	0x91
 541 013c 6C       		.sleb128 -20
 542 013d 0B       		.uleb128 0xb
 543 013e 40020000 		.4byte	.LASF23
 544 0142 01       		.byte	0x1
 545 0143 C701     		.2byte	0x1c7
 546 0145 6B000000 		.4byte	0x6b
 547 0149 02       		.uleb128 0x2
 548 014a 91       		.byte	0x91
 549 014b 74       		.sleb128 -12
 550 014c 00       		.byte	0
 551 014d 0C       		.uleb128 0xc
 552 014e 7B000000 		.4byte	.LASF24
 553 0152 01       		.byte	0x1
 554 0153 AD02     		.2byte	0x2ad
 555 0155 00000000 		.4byte	.LFB5
 556 0159 34000000 		.4byte	.LFE5-.LFB5
 557 015d 01       		.uleb128 0x1
 558 015e 9C       		.byte	0x9c
 559 015f 82010000 		.4byte	0x182
 560 0163 0A       		.uleb128 0xa
 561 0164 74000000 		.4byte	.LASF25
 562 0168 01       		.byte	0x1
 563 0169 AD02     		.2byte	0x2ad
 564 016b 82010000 		.4byte	0x182
 565 016f 02       		.uleb128 0x2
 566 0170 91       		.byte	0x91
 567 0171 6C       		.sleb128 -20
 568 0172 0B       		.uleb128 0xb
 569 0173 E6010000 		.4byte	.LASF26
 570 0177 01       		.byte	0x1
 571 0178 AF02     		.2byte	0x2af
 572 017a 6B000000 		.4byte	0x6b
 573 017e 02       		.uleb128 0x2
 574 017f 91       		.byte	0x91
 575 0180 74       		.sleb128 -12
 576 0181 00       		.byte	0
 577 0182 0D       		.uleb128 0xd
 578 0183 04       		.byte	0x4
 579 0184 88010000 		.4byte	0x188
 580 0188 0E       		.uleb128 0xe
 581 0189 84000000 		.4byte	0x84
 582 018d 0F       		.uleb128 0xf
 583 018e 6B010000 		.4byte	.LASF31
 584 0192 01       		.byte	0x1
 585 0193 CD02     		.2byte	0x2cd
 586 0195 00000000 		.4byte	.LFB6
 587 0199 22000000 		.4byte	.LFE6-.LFB6
 588 019d 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 24


 589 019e 9C       		.byte	0x9c
 590 019f 0A       		.uleb128 0xa
 591 01a0 F8010000 		.4byte	.LASF27
 592 01a4 01       		.byte	0x1
 593 01a5 CD02     		.2byte	0x2cd
 594 01a7 6B000000 		.4byte	0x6b
 595 01ab 02       		.uleb128 0x2
 596 01ac 91       		.byte	0x91
 597 01ad 74       		.sleb128 -12
 598 01ae 00       		.byte	0
 599 01af 00       		.byte	0
 600              		.section	.debug_abbrev,"",%progbits
 601              	.Ldebug_abbrev0:
 602 0000 01       		.uleb128 0x1
 603 0001 11       		.uleb128 0x11
 604 0002 01       		.byte	0x1
 605 0003 25       		.uleb128 0x25
 606 0004 0E       		.uleb128 0xe
 607 0005 13       		.uleb128 0x13
 608 0006 0B       		.uleb128 0xb
 609 0007 03       		.uleb128 0x3
 610 0008 0E       		.uleb128 0xe
 611 0009 1B       		.uleb128 0x1b
 612 000a 0E       		.uleb128 0xe
 613 000b 55       		.uleb128 0x55
 614 000c 17       		.uleb128 0x17
 615 000d 11       		.uleb128 0x11
 616 000e 01       		.uleb128 0x1
 617 000f 10       		.uleb128 0x10
 618 0010 17       		.uleb128 0x17
 619 0011 00       		.byte	0
 620 0012 00       		.byte	0
 621 0013 02       		.uleb128 0x2
 622 0014 24       		.uleb128 0x24
 623 0015 00       		.byte	0
 624 0016 0B       		.uleb128 0xb
 625 0017 0B       		.uleb128 0xb
 626 0018 3E       		.uleb128 0x3e
 627 0019 0B       		.uleb128 0xb
 628 001a 03       		.uleb128 0x3
 629 001b 0E       		.uleb128 0xe
 630 001c 00       		.byte	0
 631 001d 00       		.byte	0
 632 001e 03       		.uleb128 0x3
 633 001f 24       		.uleb128 0x24
 634 0020 00       		.byte	0
 635 0021 0B       		.uleb128 0xb
 636 0022 0B       		.uleb128 0xb
 637 0023 3E       		.uleb128 0x3e
 638 0024 0B       		.uleb128 0xb
 639 0025 03       		.uleb128 0x3
 640 0026 08       		.uleb128 0x8
 641 0027 00       		.byte	0
 642 0028 00       		.byte	0
 643 0029 04       		.uleb128 0x4
 644 002a 16       		.uleb128 0x16
 645 002b 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 25


 646 002c 03       		.uleb128 0x3
 647 002d 0E       		.uleb128 0xe
 648 002e 3A       		.uleb128 0x3a
 649 002f 0B       		.uleb128 0xb
 650 0030 3B       		.uleb128 0x3b
 651 0031 0B       		.uleb128 0xb
 652 0032 49       		.uleb128 0x49
 653 0033 13       		.uleb128 0x13
 654 0034 00       		.byte	0
 655 0035 00       		.byte	0
 656 0036 05       		.uleb128 0x5
 657 0037 16       		.uleb128 0x16
 658 0038 00       		.byte	0
 659 0039 03       		.uleb128 0x3
 660 003a 0E       		.uleb128 0xe
 661 003b 3A       		.uleb128 0x3a
 662 003c 0B       		.uleb128 0xb
 663 003d 3B       		.uleb128 0x3b
 664 003e 05       		.uleb128 0x5
 665 003f 49       		.uleb128 0x49
 666 0040 13       		.uleb128 0x13
 667 0041 00       		.byte	0
 668 0042 00       		.byte	0
 669 0043 06       		.uleb128 0x6
 670 0044 35       		.uleb128 0x35
 671 0045 00       		.byte	0
 672 0046 49       		.uleb128 0x49
 673 0047 13       		.uleb128 0x13
 674 0048 00       		.byte	0
 675 0049 00       		.byte	0
 676 004a 07       		.uleb128 0x7
 677 004b 2E       		.uleb128 0x2e
 678 004c 00       		.byte	0
 679 004d 3F       		.uleb128 0x3f
 680 004e 19       		.uleb128 0x19
 681 004f 03       		.uleb128 0x3
 682 0050 0E       		.uleb128 0xe
 683 0051 3A       		.uleb128 0x3a
 684 0052 0B       		.uleb128 0xb
 685 0053 3B       		.uleb128 0x3b
 686 0054 0B       		.uleb128 0xb
 687 0055 27       		.uleb128 0x27
 688 0056 19       		.uleb128 0x19
 689 0057 11       		.uleb128 0x11
 690 0058 01       		.uleb128 0x1
 691 0059 12       		.uleb128 0x12
 692 005a 06       		.uleb128 0x6
 693 005b 40       		.uleb128 0x40
 694 005c 18       		.uleb128 0x18
 695 005d 9742     		.uleb128 0x2117
 696 005f 19       		.uleb128 0x19
 697 0060 00       		.byte	0
 698 0061 00       		.byte	0
 699 0062 08       		.uleb128 0x8
 700 0063 2E       		.uleb128 0x2e
 701 0064 00       		.byte	0
 702 0065 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 26


 703 0066 19       		.uleb128 0x19
 704 0067 03       		.uleb128 0x3
 705 0068 0E       		.uleb128 0xe
 706 0069 3A       		.uleb128 0x3a
 707 006a 0B       		.uleb128 0xb
 708 006b 3B       		.uleb128 0x3b
 709 006c 05       		.uleb128 0x5
 710 006d 27       		.uleb128 0x27
 711 006e 19       		.uleb128 0x19
 712 006f 11       		.uleb128 0x11
 713 0070 01       		.uleb128 0x1
 714 0071 12       		.uleb128 0x12
 715 0072 06       		.uleb128 0x6
 716 0073 40       		.uleb128 0x40
 717 0074 18       		.uleb128 0x18
 718 0075 9742     		.uleb128 0x2117
 719 0077 19       		.uleb128 0x19
 720 0078 00       		.byte	0
 721 0079 00       		.byte	0
 722 007a 09       		.uleb128 0x9
 723 007b 2E       		.uleb128 0x2e
 724 007c 01       		.byte	0x1
 725 007d 3F       		.uleb128 0x3f
 726 007e 19       		.uleb128 0x19
 727 007f 03       		.uleb128 0x3
 728 0080 0E       		.uleb128 0xe
 729 0081 3A       		.uleb128 0x3a
 730 0082 0B       		.uleb128 0xb
 731 0083 3B       		.uleb128 0x3b
 732 0084 05       		.uleb128 0x5
 733 0085 27       		.uleb128 0x27
 734 0086 19       		.uleb128 0x19
 735 0087 11       		.uleb128 0x11
 736 0088 01       		.uleb128 0x1
 737 0089 12       		.uleb128 0x12
 738 008a 06       		.uleb128 0x6
 739 008b 40       		.uleb128 0x40
 740 008c 18       		.uleb128 0x18
 741 008d 9742     		.uleb128 0x2117
 742 008f 19       		.uleb128 0x19
 743 0090 01       		.uleb128 0x1
 744 0091 13       		.uleb128 0x13
 745 0092 00       		.byte	0
 746 0093 00       		.byte	0
 747 0094 0A       		.uleb128 0xa
 748 0095 05       		.uleb128 0x5
 749 0096 00       		.byte	0
 750 0097 03       		.uleb128 0x3
 751 0098 0E       		.uleb128 0xe
 752 0099 3A       		.uleb128 0x3a
 753 009a 0B       		.uleb128 0xb
 754 009b 3B       		.uleb128 0x3b
 755 009c 05       		.uleb128 0x5
 756 009d 49       		.uleb128 0x49
 757 009e 13       		.uleb128 0x13
 758 009f 02       		.uleb128 0x2
 759 00a0 18       		.uleb128 0x18
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 27


 760 00a1 00       		.byte	0
 761 00a2 00       		.byte	0
 762 00a3 0B       		.uleb128 0xb
 763 00a4 34       		.uleb128 0x34
 764 00a5 00       		.byte	0
 765 00a6 03       		.uleb128 0x3
 766 00a7 0E       		.uleb128 0xe
 767 00a8 3A       		.uleb128 0x3a
 768 00a9 0B       		.uleb128 0xb
 769 00aa 3B       		.uleb128 0x3b
 770 00ab 05       		.uleb128 0x5
 771 00ac 49       		.uleb128 0x49
 772 00ad 13       		.uleb128 0x13
 773 00ae 02       		.uleb128 0x2
 774 00af 18       		.uleb128 0x18
 775 00b0 00       		.byte	0
 776 00b1 00       		.byte	0
 777 00b2 0C       		.uleb128 0xc
 778 00b3 2E       		.uleb128 0x2e
 779 00b4 01       		.byte	0x1
 780 00b5 3F       		.uleb128 0x3f
 781 00b6 19       		.uleb128 0x19
 782 00b7 03       		.uleb128 0x3
 783 00b8 0E       		.uleb128 0xe
 784 00b9 3A       		.uleb128 0x3a
 785 00ba 0B       		.uleb128 0xb
 786 00bb 3B       		.uleb128 0x3b
 787 00bc 05       		.uleb128 0x5
 788 00bd 27       		.uleb128 0x27
 789 00be 19       		.uleb128 0x19
 790 00bf 11       		.uleb128 0x11
 791 00c0 01       		.uleb128 0x1
 792 00c1 12       		.uleb128 0x12
 793 00c2 06       		.uleb128 0x6
 794 00c3 40       		.uleb128 0x40
 795 00c4 18       		.uleb128 0x18
 796 00c5 9642     		.uleb128 0x2116
 797 00c7 19       		.uleb128 0x19
 798 00c8 01       		.uleb128 0x1
 799 00c9 13       		.uleb128 0x13
 800 00ca 00       		.byte	0
 801 00cb 00       		.byte	0
 802 00cc 0D       		.uleb128 0xd
 803 00cd 0F       		.uleb128 0xf
 804 00ce 00       		.byte	0
 805 00cf 0B       		.uleb128 0xb
 806 00d0 0B       		.uleb128 0xb
 807 00d1 49       		.uleb128 0x49
 808 00d2 13       		.uleb128 0x13
 809 00d3 00       		.byte	0
 810 00d4 00       		.byte	0
 811 00d5 0E       		.uleb128 0xe
 812 00d6 26       		.uleb128 0x26
 813 00d7 00       		.byte	0
 814 00d8 49       		.uleb128 0x49
 815 00d9 13       		.uleb128 0x13
 816 00da 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 28


 817 00db 00       		.byte	0
 818 00dc 0F       		.uleb128 0xf
 819 00dd 2E       		.uleb128 0x2e
 820 00de 01       		.byte	0x1
 821 00df 3F       		.uleb128 0x3f
 822 00e0 19       		.uleb128 0x19
 823 00e1 03       		.uleb128 0x3
 824 00e2 0E       		.uleb128 0xe
 825 00e3 3A       		.uleb128 0x3a
 826 00e4 0B       		.uleb128 0xb
 827 00e5 3B       		.uleb128 0x3b
 828 00e6 05       		.uleb128 0x5
 829 00e7 27       		.uleb128 0x27
 830 00e8 19       		.uleb128 0x19
 831 00e9 11       		.uleb128 0x11
 832 00ea 01       		.uleb128 0x1
 833 00eb 12       		.uleb128 0x12
 834 00ec 06       		.uleb128 0x6
 835 00ed 40       		.uleb128 0x40
 836 00ee 18       		.uleb128 0x18
 837 00ef 9642     		.uleb128 0x2116
 838 00f1 19       		.uleb128 0x19
 839 00f2 00       		.byte	0
 840 00f3 00       		.byte	0
 841 00f4 00       		.byte	0
 842              		.section	.debug_aranges,"",%progbits
 843 0000 4C000000 		.4byte	0x4c
 844 0004 0200     		.2byte	0x2
 845 0006 00000000 		.4byte	.Ldebug_info0
 846 000a 04       		.byte	0x4
 847 000b 00       		.byte	0
 848 000c 0000     		.2byte	0
 849 000e 0000     		.2byte	0
 850 0010 00000000 		.4byte	.LFB0
 851 0014 A8000000 		.4byte	.LFE0-.LFB0
 852 0018 00000000 		.4byte	.LFB1
 853 001c 24000000 		.4byte	.LFE1-.LFB1
 854 0020 00000000 		.4byte	.LFB2
 855 0024 1C000000 		.4byte	.LFE2-.LFB2
 856 0028 00000000 		.4byte	.LFB3
 857 002c 34000000 		.4byte	.LFE3-.LFB3
 858 0030 00000000 		.4byte	.LFB4
 859 0034 34000000 		.4byte	.LFE4-.LFB4
 860 0038 00000000 		.4byte	.LFB5
 861 003c 34000000 		.4byte	.LFE5-.LFB5
 862 0040 00000000 		.4byte	.LFB6
 863 0044 22000000 		.4byte	.LFE6-.LFB6
 864 0048 00000000 		.4byte	0
 865 004c 00000000 		.4byte	0
 866              		.section	.debug_ranges,"",%progbits
 867              	.Ldebug_ranges0:
 868 0000 00000000 		.4byte	.LFB0
 869 0004 A8000000 		.4byte	.LFE0
 870 0008 00000000 		.4byte	.LFB1
 871 000c 24000000 		.4byte	.LFE1
 872 0010 00000000 		.4byte	.LFB2
 873 0014 1C000000 		.4byte	.LFE2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 29


 874 0018 00000000 		.4byte	.LFB3
 875 001c 34000000 		.4byte	.LFE3
 876 0020 00000000 		.4byte	.LFB4
 877 0024 34000000 		.4byte	.LFE4
 878 0028 00000000 		.4byte	.LFB5
 879 002c 34000000 		.4byte	.LFE5
 880 0030 00000000 		.4byte	.LFB6
 881 0034 22000000 		.4byte	.LFE6
 882 0038 00000000 		.4byte	0
 883 003c 00000000 		.4byte	0
 884              		.section	.debug_line,"",%progbits
 885              	.Ldebug_line0:
 886 0000 0D010000 		.section	.debug_str,"MS",%progbits,1
 886      02005F00 
 886      00000201 
 886      FB0E0D00 
 886      01010101 
 887              	.LASF6:
 888 0000 6C6F6E67 		.ascii	"long long int\000"
 888      206C6F6E 
 888      6720696E 
 888      7400
 889              	.LASF14:
 890 000e 72656733 		.ascii	"reg32\000"
 890      3200
 891              	.LASF20:
 892 0014 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 892      5F556172 
 892      74536574 
 892      52784164 
 892      64726573 
 893              	.LASF30:
 894 002e 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\E"
 894      73657273 
 894      5C6D6974 
 894      6368656C 
 894      6C5C446F 
 895 005b 2D546872 		.ascii	"-Throttle\\Design01.cydsn\000"
 895      6F74746C 
 895      655C4465 
 895      7369676E 
 895      30312E63 
 896              	.LASF25:
 897 0074 73747269 		.ascii	"string\000"
 897      6E6700
 898              	.LASF24:
 899 007b 55415254 		.ascii	"UART_UartPutString\000"
 899      5F556172 
 899      74507574 
 899      53747269 
 899      6E6700
 900              	.LASF9:
 901 008e 666C6F61 		.ascii	"float\000"
 901      7400
 902              	.LASF28:
 903 0094 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 903      4320342E 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 30


 903      382E3420 
 903      32303134 
 903      30353236 
 904 00c7 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 904      20726576 
 904      6973696F 
 904      6E203231 
 904      31333538 
 905 00fa 30202D66 		.ascii	"0 -ffunction-sections\000"
 905      66756E63 
 905      74696F6E 
 905      2D736563 
 905      74696F6E 
 906              	.LASF1:
 907 0110 756E7369 		.ascii	"unsigned char\000"
 907      676E6564 
 907      20636861 
 907      7200
 908              	.LASF12:
 909 011e 63686172 		.ascii	"char8\000"
 909      3800
 910              	.LASF17:
 911 0124 55415254 		.ascii	"UART_UartPostEnable\000"
 911      5F556172 
 911      74506F73 
 911      74456E61 
 911      626C6500 
 912              	.LASF5:
 913 0138 6C6F6E67 		.ascii	"long unsigned int\000"
 913      20756E73 
 913      69676E65 
 913      6420696E 
 913      7400
 914              	.LASF18:
 915 014a 55415254 		.ascii	"UART_UartStop\000"
 915      5F556172 
 915      7453746F 
 915      7000
 916              	.LASF3:
 917 0158 73686F72 		.ascii	"short unsigned int\000"
 917      7420756E 
 917      7369676E 
 917      65642069 
 917      6E7400
 918              	.LASF31:
 919 016b 55415254 		.ascii	"UART_UartPutCRLF\000"
 919      5F556172 
 919      74507574 
 919      43524C46 
 919      00
 920              	.LASF22:
 921 017c 61646472 		.ascii	"addressMask\000"
 921      6573734D 
 921      61736B00 
 922              	.LASF10:
 923 0188 646F7562 		.ascii	"double\000"
 923      6C6500
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 31


 924              	.LASF19:
 925 018f 55415254 		.ascii	"UART_UartSetRxAddress\000"
 925      5F556172 
 925      74536574 
 925      52784164 
 925      64726573 
 926              	.LASF11:
 927 01a5 75696E74 		.ascii	"uint32\000"
 927      333200
 928              	.LASF8:
 929 01ac 756E7369 		.ascii	"unsigned int\000"
 929      676E6564 
 929      20696E74 
 929      00
 930              	.LASF16:
 931 01b9 55415254 		.ascii	"UART_UartInit\000"
 931      5F556172 
 931      74496E69 
 931      7400
 932              	.LASF21:
 933 01c7 61646472 		.ascii	"address\000"
 933      65737300 
 934              	.LASF7:
 935 01cf 6C6F6E67 		.ascii	"long long unsigned int\000"
 935      206C6F6E 
 935      6720756E 
 935      7369676E 
 935      65642069 
 936              	.LASF26:
 937 01e6 62756649 		.ascii	"bufIndex\000"
 937      6E646578 
 937      00
 938              	.LASF15:
 939 01ef 73697A65 		.ascii	"sizetype\000"
 939      74797065 
 939      00
 940              	.LASF27:
 941 01f8 74784461 		.ascii	"txDataByte\000"
 941      74614279 
 941      746500
 942              	.LASF29:
 943 0203 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_UART.c\000"
 943      6E657261 
 943      7465645F 
 943      536F7572 
 943      63655C50 
 944              	.LASF13:
 945 0228 63686172 		.ascii	"char\000"
 945      00
 946              	.LASF2:
 947 022d 73686F72 		.ascii	"short int\000"
 947      7420696E 
 947      7400
 948              	.LASF4:
 949 0237 6C6F6E67 		.ascii	"long int\000"
 949      20696E74 
 949      00
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfFLfBi.s 			page 32


 950              	.LASF23:
 951 0240 6D617463 		.ascii	"matchReg\000"
 951      68526567 
 951      00
 952              	.LASF0:
 953 0249 7369676E 		.ascii	"signed char\000"
 953      65642063 
 953      68617200 
 954              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
