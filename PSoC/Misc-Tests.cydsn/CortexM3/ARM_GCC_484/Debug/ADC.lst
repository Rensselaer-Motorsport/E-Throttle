ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_GainCompensation,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	ADC_GainCompensation, %function
  23              	ADC_GainCompensation:
  24              	.LFB21:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\ADC.c"
   1:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC5/ADC.c **** * Version 3.20
   4:.\Generated_Source\PSoC5/ADC.c **** *
   5:.\Generated_Source\PSoC5/ADC.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:.\Generated_Source\PSoC5/ADC.c **** *  Component.
   8:.\Generated_Source\PSoC5/ADC.c **** *
   9:.\Generated_Source\PSoC5/ADC.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC.c **** *
  11:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC.c **** 
  18:.\Generated_Source\PSoC5/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC5/ADC.c **** 
  20:.\Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INTERNAL_CLK)
  21:.\Generated_Source\PSoC5/ADC.c ****     #include "ADC_theACLK.h"
  22:.\Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INTERNAL_CLK */
  23:.\Generated_Source\PSoC5/ADC.c **** 
  24:.\Generated_Source\PSoC5/ADC.c **** #include "ADC_Ext_CP_Clk.h"
  25:.\Generated_Source\PSoC5/ADC.c **** 
  26:.\Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INPUT_MODE)
  27:.\Generated_Source\PSoC5/ADC.c ****     #include "ADC_AMux.h"
  28:.\Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INPUT_MODE */
  29:.\Generated_Source\PSoC5/ADC.c **** 
  30:.\Generated_Source\PSoC5/ADC.c **** 
  31:.\Generated_Source\PSoC5/ADC.c **** /***************************************
  32:.\Generated_Source\PSoC5/ADC.c **** * Global data allocation
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 2


  33:.\Generated_Source\PSoC5/ADC.c **** ***************************************/
  34:.\Generated_Source\PSoC5/ADC.c **** 
  35:.\Generated_Source\PSoC5/ADC.c **** /* Software flag for checking conversion completed or not */
  36:.\Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_convDone = 0u;
  37:.\Generated_Source\PSoC5/ADC.c **** 
  38:.\Generated_Source\PSoC5/ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:.\Generated_Source\PSoC5/ADC.c **** *   with resolution above 16 bits 
  40:.\Generated_Source\PSoC5/ADC.c **** */
  41:.\Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_stopConversion = 0u;
  42:.\Generated_Source\PSoC5/ADC.c **** 
  43:.\Generated_Source\PSoC5/ADC.c **** /* To run the initialization block only at the start up */
  44:.\Generated_Source\PSoC5/ADC.c **** uint8 ADC_initVar = 0u;
  45:.\Generated_Source\PSoC5/ADC.c **** 
  46:.\Generated_Source\PSoC5/ADC.c **** /* To check whether ADC started or not before switching the configuration */
  47:.\Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_started = 0u;
  48:.\Generated_Source\PSoC5/ADC.c **** 
  49:.\Generated_Source\PSoC5/ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
  50:.\Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_Config = 1u;
  51:.\Generated_Source\PSoC5/ADC.c **** 
  52:.\Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_Offset;
  53:.\Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_CountsPerVolt;
  54:.\Generated_Source\PSoC5/ADC.c **** 
  55:.\Generated_Source\PSoC5/ADC.c **** 
  56:.\Generated_Source\PSoC5/ADC.c **** /***************************************
  57:.\Generated_Source\PSoC5/ADC.c **** * Local data allocation
  58:.\Generated_Source\PSoC5/ADC.c **** ***************************************/
  59:.\Generated_Source\PSoC5/ADC.c **** 
  60:.\Generated_Source\PSoC5/ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:.\Generated_Source\PSoC5/ADC.c **** static ADC_GCOR_STRUCT ADC_gcor[ADC_DEFAULT_NUM_CONFIGS];
  62:.\Generated_Source\PSoC5/ADC.c **** 
  63:.\Generated_Source\PSoC5/ADC.c **** 
  64:.\Generated_Source\PSoC5/ADC.c **** 
  65:.\Generated_Source\PSoC5/ADC.c **** /***************************************
  66:.\Generated_Source\PSoC5/ADC.c **** * Forward function references
  67:.\Generated_Source\PSoC5/ADC.c **** ***************************************/
  68:.\Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) ;
  69:.\Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain, 
  70:.\Generated_Source\PSoC5/ADC.c ****                             uint8 resolution, uint8 config) ;
  71:.\Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) ;
  72:.\Generated_Source\PSoC5/ADC.c **** 
  73:.\Generated_Source\PSoC5/ADC.c **** 
  74:.\Generated_Source\PSoC5/ADC.c **** /******************************************************************************
  75:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Init
  76:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************
  77:.\Generated_Source\PSoC5/ADC.c **** *
  78:.\Generated_Source\PSoC5/ADC.c **** * Summary:
  79:.\Generated_Source\PSoC5/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:.\Generated_Source\PSoC5/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:.\Generated_Source\PSoC5/ADC.c **** * ADC_Start().
  82:.\Generated_Source\PSoC5/ADC.c **** *
  83:.\Generated_Source\PSoC5/ADC.c **** *
  84:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC5/ADC.c **** *  None
  86:.\Generated_Source\PSoC5/ADC.c **** *
  87:.\Generated_Source\PSoC5/ADC.c **** * Return:
  88:.\Generated_Source\PSoC5/ADC.c **** *  None
  89:.\Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 3


  90:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  91:.\Generated_Source\PSoC5/ADC.c **** void ADC_Init(void) 
  92:.\Generated_Source\PSoC5/ADC.c **** {
  93:.\Generated_Source\PSoC5/ADC.c **** 
  94:.\Generated_Source\PSoC5/ADC.c ****     ADC_Config = 1u;
  95:.\Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
  96:.\Generated_Source\PSoC5/ADC.c **** 
  97:.\Generated_Source\PSoC5/ADC.c ****     ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  98:.\Generated_Source\PSoC5/ADC.c **** 
  99:.\Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 100:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 101:.\Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
 102:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 103:.\Generated_Source\PSoC5/ADC.c **** 
 104:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 105:.\Generated_Source\PSoC5/ADC.c ****         /* Set interrupt priority */
 106:.\Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 107:.\Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 108:.\Generated_Source\PSoC5/ADC.c **** 
 109:.\Generated_Source\PSoC5/ADC.c ****     /* Init static registers with common configuration */
 110:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM0_REG    = ADC_CFG1_DSM_DEM0;
 111:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
 112:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
 113:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 114:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 115:.\Generated_Source\PSoC5/ADC.c **** 
 116:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT0_REG    = ADC_CFG1_DSM_OUT0;
 117:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 118:.\Generated_Source\PSoC5/ADC.c **** 
 119:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR0_REG     = ADC_CFG1_DSM_CR0;
 120:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 121:.\Generated_Source\PSoC5/ADC.c **** #if(ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     |= ADC_DSM_MODBIT_EN;
 123:.\Generated_Source\PSoC5/ADC.c **** #else
 124:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     = ADC_CFG1_DSM_CR3;
 125:.\Generated_Source\PSoC5/ADC.c **** #endif /* ADC_MI_ENABLE != 0u*/    
 126:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR8_REG     = ADC_CFG1_DSM_CR8;
 127:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 128:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 129:.\Generated_Source\PSoC5/ADC.c **** 
 130:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG      = ADC_CFG1_DEC_SR;
 131:.\Generated_Source\PSoC5/ADC.c **** 
 132:.\Generated_Source\PSoC5/ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:.\Generated_Source\PSoC5/ADC.c ****     ADC_GainCompensation(ADC_CFG1_INPUT_RANGE,
 134:.\Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_DEC_GAIN,
 135:.\Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:.\Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_RESOLUTION,
 137:.\Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1);
 138:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
 139:.\Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG2_INPUT_RANGE,
 140:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_DEC_GAIN,
 141:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_RESOLUTION,
 143:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2);
 144:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
 146:.\Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG3_INPUT_RANGE,
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 4


 147:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_DEC_GAIN,
 148:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_RESOLUTION,
 150:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3);
 151:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
 153:.\Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG4_INPUT_RANGE,
 154:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_DEC_GAIN,
 155:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_RESOLUTION,
 157:.\Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4);
 158:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:.\Generated_Source\PSoC5/ADC.c **** 
 160:.\Generated_Source\PSoC5/ADC.c ****     /* Set GCOR register for config1 */
 161:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_GVAL_REG = ADC_gcor[ADC_Config - 1u].gval;
 162:.\Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 163:.\Generated_Source\PSoC5/ADC.c **** 
 164:.\Generated_Source\PSoC5/ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:.\Generated_Source\PSoC5/ADC.c ****     ADC_InitConfig(ADC_Config);
 166:.\Generated_Source\PSoC5/ADC.c **** }
 167:.\Generated_Source\PSoC5/ADC.c **** 
 168:.\Generated_Source\PSoC5/ADC.c **** 
 169:.\Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 170:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Enable
 171:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 172:.\Generated_Source\PSoC5/ADC.c **** *
 173:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 174:.\Generated_Source\PSoC5/ADC.c **** *  Enables the ADC DelSig block operation.
 175:.\Generated_Source\PSoC5/ADC.c **** *
 176:.\Generated_Source\PSoC5/ADC.c **** *
 177:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 178:.\Generated_Source\PSoC5/ADC.c **** *  None
 179:.\Generated_Source\PSoC5/ADC.c **** *
 180:.\Generated_Source\PSoC5/ADC.c **** * Return:
 181:.\Generated_Source\PSoC5/ADC.c **** *  None
 182:.\Generated_Source\PSoC5/ADC.c **** *
 183:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 184:.\Generated_Source\PSoC5/ADC.c **** void ADC_Enable(void) 
 185:.\Generated_Source\PSoC5/ADC.c **** {
 186:.\Generated_Source\PSoC5/ADC.c **** 	uint8 config;
 187:.\Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 188:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 189:.\Generated_Source\PSoC5/ADC.c **** 
 190:.\Generated_Source\PSoC5/ADC.c ****     /* Read volatile variable to the local variable */
 191:.\Generated_Source\PSoC5/ADC.c ****     config = ADC_Config;
 192:.\Generated_Source\PSoC5/ADC.c ****     
 193:.\Generated_Source\PSoC5/ADC.c ****     /* Enable active mode power for ADC */
 194:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG |= ADC_ACT_PWR_DEC_EN;
 195:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
 196:.\Generated_Source\PSoC5/ADC.c **** 
 197:.\Generated_Source\PSoC5/ADC.c ****      /* Enable alternative active mode power for ADC */
 198:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG |= ADC_STBY_PWR_DEC_EN;
 199:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 200:.\Generated_Source\PSoC5/ADC.c **** 
 201:.\Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 202:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 203:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 5


 204:.\Generated_Source\PSoC5/ADC.c **** 
 205:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG |= (ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 206:.\Generated_Source\PSoC5/ADC.c **** 
 207:.\Generated_Source\PSoC5/ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
 208:.\Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) || \
 209:.\Generated_Source\PSoC5/ADC.c ****           (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32)) || \
 210:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 211:.\Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 212:.\Generated_Source\PSoC5/ADC.c ****            (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 213:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 214:.\Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 215:.\Generated_Source\PSoC5/ADC.c ****            (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 216:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 217:.\Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) || \
 218:.\Generated_Source\PSoC5/ADC.c ****            (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 219:.\Generated_Source\PSoC5/ADC.c ****         if (((config == 1u) &&
 220:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) ||
 221:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 222:.\Generated_Source\PSoC5/ADC.c ****             ((config == 2u) &&
 223:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||
 224:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 225:.\Generated_Source\PSoC5/ADC.c ****             ((config == 3u) &&
 226:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||
 227:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 228:.\Generated_Source\PSoC5/ADC.c ****             ((config == 4u) &&
 229:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) ||
 230:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 231:.\Generated_Source\PSoC5/ADC.c ****         {
 232:.\Generated_Source\PSoC5/ADC.c ****             /* Disable the REFBUF0 */
 233:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG &= (uint8)~ADC_DSM_EN_BUF_VREF;
 234:.\Generated_Source\PSoC5/ADC.c ****         }
 235:.\Generated_Source\PSoC5/ADC.c ****     #endif /* External ref */
 236:.\Generated_Source\PSoC5/ADC.c **** 
 237:.\Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) || \
 238:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 239:.\Generated_Source\PSoC5/ADC.c ****           (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 240:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 241:.\Generated_Source\PSoC5/ADC.c ****           (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 242:.\Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 243:.\Generated_Source\PSoC5/ADC.c ****           (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF))))
 244:.\Generated_Source\PSoC5/ADC.c ****         if(((config == 1u) &&
 245:.\Generated_Source\PSoC5/ADC.c ****             (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 246:.\Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P03) &&
 247:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 248:.\Generated_Source\PSoC5/ADC.c ****              ((config == 2u) &&
 249:.\Generated_Source\PSoC5/ADC.c ****               (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 250:.\Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P03) &&
 251:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 252:.\Generated_Source\PSoC5/ADC.c ****              ((config == 3u) &&
 253:.\Generated_Source\PSoC5/ADC.c ****               (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 254:.\Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P03) &&
 255:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 256:.\Generated_Source\PSoC5/ADC.c ****              ((config == 4u) &&
 257:.\Generated_Source\PSoC5/ADC.c ****               (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 258:.\Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P03) &&
 259:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P32))))
 260:.\Generated_Source\PSoC5/ADC.c ****         {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 6


 261:.\Generated_Source\PSoC5/ADC.c ****             /* Enable the REFBUF1 */
 262:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF0_REG |= ADC_DSM_EN_BUF_VREF_INN;
 263:.\Generated_Source\PSoC5/ADC.c ****         }
 264:.\Generated_Source\PSoC5/ADC.c ****     #endif /* VSSA_TO_2VREF */
 265:.\Generated_Source\PSoC5/ADC.c ****     if(config != 0u)
 266:.\Generated_Source\PSoC5/ADC.c ****     {
 267:.\Generated_Source\PSoC5/ADC.c ****         /* Suppress compiler warning */
 268:.\Generated_Source\PSoC5/ADC.c ****     }
 269:.\Generated_Source\PSoC5/ADC.c **** 
 270:.\Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
 271:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 272:.\Generated_Source\PSoC5/ADC.c **** 
 273:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 274:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 275:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 276:.\Generated_Source\PSoC5/ADC.c **** 
 277:.\Generated_Source\PSoC5/ADC.c ****     /* Enable negative pumps for DSM  */
 278:.\Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG  |= ( ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 279:.\Generated_Source\PSoC5/ADC.c **** 
 280:.\Generated_Source\PSoC5/ADC.c ****     /* Enable Modulator Chopping if required */
 281:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG = ADC_CFG1_DSM_CR2;
 282:.\Generated_Source\PSoC5/ADC.c **** 
 283:.\Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 284:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 285:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 286:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 287:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 288:.\Generated_Source\PSoC5/ADC.c **** 
 289:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 290:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 291:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 292:.\Generated_Source\PSoC5/ADC.c **** 
 293:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 294:.\Generated_Source\PSoC5/ADC.c ****         /* Clear a pending interrupt */
 295:.\Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
 296:.\Generated_Source\PSoC5/ADC.c ****         /* Enable interrupt */
 297:.\Generated_Source\PSoC5/ADC.c ****         CyIntEnable(ADC_INTC_NUMBER);
 298:.\Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 299:.\Generated_Source\PSoC5/ADC.c **** 
 300:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 301:.\Generated_Source\PSoC5/ADC.c **** 
 302:.\Generated_Source\PSoC5/ADC.c **** }
 303:.\Generated_Source\PSoC5/ADC.c **** 
 304:.\Generated_Source\PSoC5/ADC.c **** 
 305:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Start
 307:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/ADC.c **** *
 309:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 310:.\Generated_Source\PSoC5/ADC.c **** *  Performs all required initialization for this component and enables
 311:.\Generated_Source\PSoC5/ADC.c **** *  the power. It configure all the register the first time it is called.
 312:.\Generated_Source\PSoC5/ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 313:.\Generated_Source\PSoC5/ADC.c **** *  on the power. If multiple configurations are selected, it will
 314:.\Generated_Source\PSoC5/ADC.c **** *  configure the ADC for configuration 1 by default, unless the
 315:.\Generated_Source\PSoC5/ADC.c **** *  ADC_SelectConfiguration( ) function has been called to change
 316:.\Generated_Source\PSoC5/ADC.c **** *  the default setting.
 317:.\Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 7


 318:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 319:.\Generated_Source\PSoC5/ADC.c **** *  None
 320:.\Generated_Source\PSoC5/ADC.c **** *
 321:.\Generated_Source\PSoC5/ADC.c **** * Return:
 322:.\Generated_Source\PSoC5/ADC.c **** *  None
 323:.\Generated_Source\PSoC5/ADC.c **** *
 324:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 325:.\Generated_Source\PSoC5/ADC.c **** *  ADC_initVar:  Used to check the initial configuration,
 326:.\Generated_Source\PSoC5/ADC.c **** *  modified when this function is called for the first time.
 327:.\Generated_Source\PSoC5/ADC.c **** *
 328:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 329:.\Generated_Source\PSoC5/ADC.c **** void ADC_Start(void) 
 330:.\Generated_Source\PSoC5/ADC.c **** {
 331:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 332:.\Generated_Source\PSoC5/ADC.c ****     {
 333:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_started == 0u)
 334:.\Generated_Source\PSoC5/ADC.c ****         {
 335:.\Generated_Source\PSoC5/ADC.c ****             ADC_Init();
 336:.\Generated_Source\PSoC5/ADC.c ****         }
 337:.\Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
 338:.\Generated_Source\PSoC5/ADC.c ****     }
 339:.\Generated_Source\PSoC5/ADC.c **** 
 340:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the ADC */
 341:.\Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
 342:.\Generated_Source\PSoC5/ADC.c **** }
 343:.\Generated_Source\PSoC5/ADC.c **** 
 344:.\Generated_Source\PSoC5/ADC.c **** 
 345:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 346:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Stop
 347:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 348:.\Generated_Source\PSoC5/ADC.c **** *
 349:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 350:.\Generated_Source\PSoC5/ADC.c **** *  This function stops and powers down the ADC component and the internal
 351:.\Generated_Source\PSoC5/ADC.c **** *  clock if the external clock is not selected. If an external clock is
 352:.\Generated_Source\PSoC5/ADC.c **** *  used, it is up to the designer to power down the external clock it
 353:.\Generated_Source\PSoC5/ADC.c **** *  required.
 354:.\Generated_Source\PSoC5/ADC.c **** *
 355:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 356:.\Generated_Source\PSoC5/ADC.c **** *  None
 357:.\Generated_Source\PSoC5/ADC.c **** *
 358:.\Generated_Source\PSoC5/ADC.c **** * Return:
 359:.\Generated_Source\PSoC5/ADC.c **** *  None
 360:.\Generated_Source\PSoC5/ADC.c **** *
 361:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 362:.\Generated_Source\PSoC5/ADC.c **** void ADC_Stop(void) 
 363:.\Generated_Source\PSoC5/ADC.c **** {
 364:.\Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 365:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 366:.\Generated_Source\PSoC5/ADC.c **** 
 367:.\Generated_Source\PSoC5/ADC.c ****     /* Stop conversions */
 368:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 369:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 370:.\Generated_Source\PSoC5/ADC.c **** 
 371:.\Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 372:.\Generated_Source\PSoC5/ADC.c ****        enable PRES */
 373:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 374:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 8


 375:.\Generated_Source\PSoC5/ADC.c **** 
 376:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG &= (uint8)~(ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 377:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 378:.\Generated_Source\PSoC5/ADC.c **** 
 379:.\Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds. */
 380:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 381:.\Generated_Source\PSoC5/ADC.c **** 
 382:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 383:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 384:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 385:.\Generated_Source\PSoC5/ADC.c **** 
 386:.\Generated_Source\PSoC5/ADC.c ****     /* Disable power to the ADC */
 387:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG &= (uint8)~ADC_ACT_PWR_DSM_EN;
 388:.\Generated_Source\PSoC5/ADC.c **** 
 389:.\Generated_Source\PSoC5/ADC.c ****     /* Disable power to Decimator block */
 390:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG &= (uint8)~ADC_ACT_PWR_DEC_EN;
 391:.\Generated_Source\PSoC5/ADC.c **** 
 392:.\Generated_Source\PSoC5/ADC.c ****     /* Disable alternative active power to the ADC */
 393:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG &= (uint8)~ADC_STBY_PWR_DEC_EN;
 394:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 395:.\Generated_Source\PSoC5/ADC.c **** 
 396:.\Generated_Source\PSoC5/ADC.c ****    /* Disable negative pumps for DSM  */
 397:.\Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG &= (uint8)~(ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 398:.\Generated_Source\PSoC5/ADC.c **** 
 399:.\Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 400:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 401:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 402:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 403:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 404:.\Generated_Source\PSoC5/ADC.c **** 
 405:.\Generated_Source\PSoC5/ADC.c ****     /* Disable Modulator Chopping */
 406:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG &= (uint8)~ADC_DSM_MOD_CHOP_EN;
 407:.\Generated_Source\PSoC5/ADC.c ****     /* Disable power to charge pump clock */
 408:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 409:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 410:.\Generated_Source\PSoC5/ADC.c ****     
 411:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 412:.\Generated_Source\PSoC5/ADC.c **** }
 413:.\Generated_Source\PSoC5/ADC.c **** 
 414:.\Generated_Source\PSoC5/ADC.c **** 
 415:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetBufferGain
 417:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/ADC.c **** *
 419:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 420:.\Generated_Source\PSoC5/ADC.c **** *  Sets input buffer gain.
 421:.\Generated_Source\PSoC5/ADC.c **** *
 422:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 423:.\Generated_Source\PSoC5/ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 424:.\Generated_Source\PSoC5/ADC.c **** *
 425:.\Generated_Source\PSoC5/ADC.c **** * Return:
 426:.\Generated_Source\PSoC5/ADC.c **** *  None
 427:.\Generated_Source\PSoC5/ADC.c **** *
 428:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 429:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetBufferGain(uint8 gain) 
 430:.\Generated_Source\PSoC5/ADC.c **** {
 431:.\Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 9


 432:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DSM_BUF1_REG & (uint8)~ADC_DSM_GAIN_MASK;
 433:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 434:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 435:.\Generated_Source\PSoC5/ADC.c **** }
 436:.\Generated_Source\PSoC5/ADC.c **** 
 437:.\Generated_Source\PSoC5/ADC.c **** 
 438:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 439:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetCoherency
 440:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 441:.\Generated_Source\PSoC5/ADC.c **** *
 442:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 443:.\Generated_Source\PSoC5/ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 444:.\Generated_Source\PSoC5/ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 445:.\Generated_Source\PSoC5/ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 446:.\Generated_Source\PSoC5/ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 447:.\Generated_Source\PSoC5/ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 448:.\Generated_Source\PSoC5/ADC.c **** *  configuration for DMA data transfer.
 449:.\Generated_Source\PSoC5/ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 450:.\Generated_Source\PSoC5/ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 451:.\Generated_Source\PSoC5/ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 452:.\Generated_Source\PSoC5/ADC.c **** *  coherency can be set to any byte in the last word read.
 453:.\Generated_Source\PSoC5/ADC.c **** *
 454:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 455:.\Generated_Source\PSoC5/ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 456:.\Generated_Source\PSoC5/ADC.c **** *           00-Coherency checking off
 457:.\Generated_Source\PSoC5/ADC.c **** *           01-low byte is key byte
 458:.\Generated_Source\PSoC5/ADC.c **** *           02-middle byte is the key byte
 459:.\Generated_Source\PSoC5/ADC.c **** *           03-high byte is the key byte
 460:.\Generated_Source\PSoC5/ADC.c **** *
 461:.\Generated_Source\PSoC5/ADC.c **** * Return:
 462:.\Generated_Source\PSoC5/ADC.c **** *  None
 463:.\Generated_Source\PSoC5/ADC.c **** *
 464:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetCoherency(uint8 coherency) 
 466:.\Generated_Source\PSoC5/ADC.c **** {
 467:.\Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 468:.\Generated_Source\PSoC5/ADC.c **** 
 469:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DEC_COHER_REG & (uint8)~ADC_DEC_SAMP_KEY_MASK;
 470:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 471:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 472:.\Generated_Source\PSoC5/ADC.c **** }
 473:.\Generated_Source\PSoC5/ADC.c **** 
 474:.\Generated_Source\PSoC5/ADC.c **** 
 475:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 476:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGCOR
 477:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 478:.\Generated_Source\PSoC5/ADC.c **** *
 479:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 480:.\Generated_Source\PSoC5/ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 481:.\Generated_Source\PSoC5/ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 482:.\Generated_Source\PSoC5/ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 483:.\Generated_Source\PSoC5/ADC.c **** *  output registers. The numerical format for the GCOR value is:
 484:.\Generated_Source\PSoC5/ADC.c **** *  0x0000 -> 0.000
 485:.\Generated_Source\PSoC5/ADC.c **** *  0x8000 -> 1.000
 486:.\Generated_Source\PSoC5/ADC.c **** *  0xFFFF -> 1.99997
 487:.\Generated_Source\PSoC5/ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 488:.\Generated_Source\PSoC5/ADC.c **** *  gainAdjust and reloaded into the GCOR register.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 10


 489:.\Generated_Source\PSoC5/ADC.c **** *
 490:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 491:.\Generated_Source\PSoC5/ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 492:.\Generated_Source\PSoC5/ADC.c **** *
 493:.\Generated_Source\PSoC5/ADC.c **** * Return:
 494:.\Generated_Source\PSoC5/ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 495:.\Generated_Source\PSoC5/ADC.c **** *         1 - the correction value is outside GCOR value range of
 496:.\Generated_Source\PSoC5/ADC.c **** *             0.00 to 1.9999.
 497:.\Generated_Source\PSoC5/ADC.c **** *
 498:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 499:.\Generated_Source\PSoC5/ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 500:.\Generated_Source\PSoC5/ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 501:.\Generated_Source\PSoC5/ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 502:.\Generated_Source\PSoC5/ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 503:.\Generated_Source\PSoC5/ADC.c **** *
 504:.\Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
 505:.\Generated_Source\PSoC5/ADC.c **** uint8 ADC_SetGCOR(float32 gainAdjust) 
 506:.\Generated_Source\PSoC5/ADC.c **** {
 507:.\Generated_Source\PSoC5/ADC.c ****     uint16 tmpReg;
 508:.\Generated_Source\PSoC5/ADC.c ****     uint8 status;
 509:.\Generated_Source\PSoC5/ADC.c ****     float32 tmpValue;
 510:.\Generated_Source\PSoC5/ADC.c **** 
 511:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_gcor[ADC_Config - 1u].gcor;
 512:.\Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
 513:.\Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 514:.\Generated_Source\PSoC5/ADC.c **** 
 515:.\Generated_Source\PSoC5/ADC.c ****     if (tmpValue > 1.9999)
 516:.\Generated_Source\PSoC5/ADC.c ****     {
 517:.\Generated_Source\PSoC5/ADC.c ****         status = 1u;
 518:.\Generated_Source\PSoC5/ADC.c ****     }
 519:.\Generated_Source\PSoC5/ADC.c ****     else
 520:.\Generated_Source\PSoC5/ADC.c ****     {
 521:.\Generated_Source\PSoC5/ADC.c ****         tmpValue *= (float32)ADC_IDEAL_GAIN_CONST;
 522:.\Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 523:.\Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 524:.\Generated_Source\PSoC5/ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 525:.\Generated_Source\PSoC5/ADC.c ****        ADC_gcor[ADC_Config - 1u].gcor = tmpReg;
 526:.\Generated_Source\PSoC5/ADC.c **** 
 527:.\Generated_Source\PSoC5/ADC.c ****         status = 0u;
 528:.\Generated_Source\PSoC5/ADC.c **** 
 529:.\Generated_Source\PSoC5/ADC.c ****     }
 530:.\Generated_Source\PSoC5/ADC.c ****     return(status);
 531:.\Generated_Source\PSoC5/ADC.c **** }
 532:.\Generated_Source\PSoC5/ADC.c **** 
 533:.\Generated_Source\PSoC5/ADC.c **** 
 534:.\Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 535:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_ReadGCOR
 536:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 537:.\Generated_Source\PSoC5/ADC.c **** *
 538:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 539:.\Generated_Source\PSoC5/ADC.c **** *  This API returns the current GCOR register value, normalized based on the
 540:.\Generated_Source\PSoC5/ADC.c **** *  GVAL register settings.
 541:.\Generated_Source\PSoC5/ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 542:.\Generated_Source\PSoC5/ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 543:.\Generated_Source\PSoC5/ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 544:.\Generated_Source\PSoC5/ADC.c **** *
 545:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 11


 546:.\Generated_Source\PSoC5/ADC.c **** *  None
 547:.\Generated_Source\PSoC5/ADC.c **** *
 548:.\Generated_Source\PSoC5/ADC.c **** * Return:
 549:.\Generated_Source\PSoC5/ADC.c **** *  uint16:  Normalized GCOR value.
 550:.\Generated_Source\PSoC5/ADC.c **** *
 551:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC5/ADC.c **** uint16 ADC_ReadGCOR(void) 
 553:.\Generated_Source\PSoC5/ADC.c **** {
 554:.\Generated_Source\PSoC5/ADC.c ****     uint8 gValue;
 555:.\Generated_Source\PSoC5/ADC.c ****     uint16 gcorValue;
 556:.\Generated_Source\PSoC5/ADC.c **** 
 557:.\Generated_Source\PSoC5/ADC.c ****     gValue = ADC_DEC_GVAL_REG;
 558:.\Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 559:.\Generated_Source\PSoC5/ADC.c **** 
 560:.\Generated_Source\PSoC5/ADC.c ****     if (gValue < ADC_MAX_GVAL)
 561:.\Generated_Source\PSoC5/ADC.c ****     {
 562:.\Generated_Source\PSoC5/ADC.c ****         gcorValue <<= ADC_MAX_GVAL - gValue;
 563:.\Generated_Source\PSoC5/ADC.c ****     }
 564:.\Generated_Source\PSoC5/ADC.c **** 
 565:.\Generated_Source\PSoC5/ADC.c ****     return gcorValue;
 566:.\Generated_Source\PSoC5/ADC.c **** }
 567:.\Generated_Source\PSoC5/ADC.c **** 
 568:.\Generated_Source\PSoC5/ADC.c **** 
 569:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StartConvert
 571:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 572:.\Generated_Source\PSoC5/ADC.c **** *
 573:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 574:.\Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 575:.\Generated_Source\PSoC5/ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 576:.\Generated_Source\PSoC5/ADC.c **** *  one of the other three conversion modes, the ADC will run
 577:.\Generated_Source\PSoC5/ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
 578:.\Generated_Source\PSoC5/ADC.c **** *
 579:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 580:.\Generated_Source\PSoC5/ADC.c **** *  None
 581:.\Generated_Source\PSoC5/ADC.c **** *
 582:.\Generated_Source\PSoC5/ADC.c **** * Return:
 583:.\Generated_Source\PSoC5/ADC.c **** *  None
 584:.\Generated_Source\PSoC5/ADC.c **** *
 585:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 586:.\Generated_Source\PSoC5/ADC.c **** void ADC_StartConvert(void) 
 587:.\Generated_Source\PSoC5/ADC.c **** {
 588:.\Generated_Source\PSoC5/ADC.c ****     /* Start the conversion */
 589:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG |= ADC_DEC_START_CONV;
 590:.\Generated_Source\PSoC5/ADC.c **** }
 591:.\Generated_Source\PSoC5/ADC.c **** 
 592:.\Generated_Source\PSoC5/ADC.c **** 
 593:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StopConvert
 595:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 596:.\Generated_Source\PSoC5/ADC.c **** *
 597:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 598:.\Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 599:.\Generated_Source\PSoC5/ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 600:.\Generated_Source\PSoC5/ADC.c **** *  conversion.
 601:.\Generated_Source\PSoC5/ADC.c **** *
 602:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 12


 603:.\Generated_Source\PSoC5/ADC.c **** *  None
 604:.\Generated_Source\PSoC5/ADC.c **** *
 605:.\Generated_Source\PSoC5/ADC.c **** * Return:
 606:.\Generated_Source\PSoC5/ADC.c **** *  None
 607:.\Generated_Source\PSoC5/ADC.c **** *
 608:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC5/ADC.c **** void ADC_StopConvert(void) 
 610:.\Generated_Source\PSoC5/ADC.c **** {
 611:.\Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 612:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 613:.\Generated_Source\PSoC5/ADC.c **** }
 614:.\Generated_Source\PSoC5/ADC.c **** 
 615:.\Generated_Source\PSoC5/ADC.c **** 
 616:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_IsEndConversion
 618:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 619:.\Generated_Source\PSoC5/ADC.c **** *
 620:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 621:.\Generated_Source\PSoC5/ADC.c **** *  Checks the status that the most recently started conversion has completed.
 622:.\Generated_Source\PSoC5/ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 623:.\Generated_Source\PSoC5/ADC.c **** *  ADC_GetResult32() API.
 624:.\Generated_Source\PSoC5/ADC.c **** *  This function provides the programmer with two options. In one mode this 
 625:.\Generated_Source\PSoC5/ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 626:.\Generated_Source\PSoC5/ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 627:.\Generated_Source\PSoC5/ADC.c **** *
 628:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC5/ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 630:.\Generated_Source\PSoC5/ADC.c **** *   ADC_RETURN_STATUS -   Immediately returns conversion result
 631:.\Generated_Source\PSoC5/ADC.c **** *                                      status.
 632:.\Generated_Source\PSoC5/ADC.c **** *   ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 633:.\Generated_Source\PSoC5/ADC.c **** *                                      is complete.
 634:.\Generated_Source\PSoC5/ADC.c **** *
 635:.\Generated_Source\PSoC5/ADC.c **** * Return:
 636:.\Generated_Source\PSoC5/ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 637:.\Generated_Source\PSoC5/ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 638:.\Generated_Source\PSoC5/ADC.c **** *
 639:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 640:.\Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Used to check whether conversion is complete
 641:.\Generated_Source\PSoC5/ADC.c **** *  or not for single sample mode with resolution is above 16
 642:.\Generated_Source\PSoC5/ADC.c **** *
 643:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 644:.\Generated_Source\PSoC5/ADC.c **** uint8 ADC_IsEndConversion(uint8 retMode) 
 645:.\Generated_Source\PSoC5/ADC.c **** {
 646:.\Generated_Source\PSoC5/ADC.c ****     uint8 status;
 647:.\Generated_Source\PSoC5/ADC.c **** 
 648:.\Generated_Source\PSoC5/ADC.c ****     do
 649:.\Generated_Source\PSoC5/ADC.c ****     {
 650:.\Generated_Source\PSoC5/ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 651:.\Generated_Source\PSoC5/ADC.c ****         *   resolution above 16 bit
 652:.\Generated_Source\PSoC5/ADC.c ****         */
 653:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_stopConversion != 0u)
 654:.\Generated_Source\PSoC5/ADC.c ****         {
 655:.\Generated_Source\PSoC5/ADC.c ****             status = ADC_convDone;
 656:.\Generated_Source\PSoC5/ADC.c ****         }
 657:.\Generated_Source\PSoC5/ADC.c ****         else
 658:.\Generated_Source\PSoC5/ADC.c ****         {
 659:.\Generated_Source\PSoC5/ADC.c ****             status = ADC_DEC_SR_REG & ADC_DEC_CONV_DONE;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 13


 660:.\Generated_Source\PSoC5/ADC.c ****         }
 661:.\Generated_Source\PSoC5/ADC.c ****     }while((status != ADC_DEC_CONV_DONE) && (retMode == ADC_WAIT_FOR_RESULT));
 662:.\Generated_Source\PSoC5/ADC.c **** 
 663:.\Generated_Source\PSoC5/ADC.c ****     return(status);
 664:.\Generated_Source\PSoC5/ADC.c **** }
 665:.\Generated_Source\PSoC5/ADC.c **** 
 666:.\Generated_Source\PSoC5/ADC.c **** 
 667:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult8
 669:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC5/ADC.c **** *
 671:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC5/ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 673:.\Generated_Source\PSoC5/ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 674:.\Generated_Source\PSoC5/ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 675:.\Generated_Source\PSoC5/ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 676:.\Generated_Source\PSoC5/ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 677:.\Generated_Source\PSoC5/ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 678:.\Generated_Source\PSoC5/ADC.c **** *  maximum positive value is 255.
 679:.\Generated_Source\PSoC5/ADC.c **** *
 680:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 681:.\Generated_Source\PSoC5/ADC.c **** *  None
 682:.\Generated_Source\PSoC5/ADC.c **** *
 683:.\Generated_Source\PSoC5/ADC.c **** * Return:
 684:.\Generated_Source\PSoC5/ADC.c **** *  int8: The LSB of the last ADC conversion.
 685:.\Generated_Source\PSoC5/ADC.c **** *
 686:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 687:.\Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 688:.\Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 689:.\Generated_Source\PSoC5/ADC.c **** *
 690:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 691:.\Generated_Source\PSoC5/ADC.c **** int8 ADC_GetResult8( void ) 
 692:.\Generated_Source\PSoC5/ADC.c **** {
 693:.\Generated_Source\PSoC5/ADC.c ****     int8 result;
 694:.\Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 695:.\Generated_Source\PSoC5/ADC.c **** 
 696:.\Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 697:.\Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 698:.\Generated_Source\PSoC5/ADC.c **** 
 699:.\Generated_Source\PSoC5/ADC.c ****     result = (int8)ADC_DEC_SAMP_REG;
 700:.\Generated_Source\PSoC5/ADC.c **** 
 701:.\Generated_Source\PSoC5/ADC.c ****     if(coherency == ADC_DEC_SAMP_KEY_MID)
 702:.\Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 703:.\Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPM_REG;
 704:.\Generated_Source\PSoC5/ADC.c ****     }
 705:.\Generated_Source\PSoC5/ADC.c ****     else  if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 706:.\Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 707:.\Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPH_REG;
 708:.\Generated_Source\PSoC5/ADC.c ****     }
 709:.\Generated_Source\PSoC5/ADC.c ****     else /*No action required for other coherency */
 710:.\Generated_Source\PSoC5/ADC.c ****     {
 711:.\Generated_Source\PSoC5/ADC.c ****     }
 712:.\Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 713:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 714:.\Generated_Source\PSoC5/ADC.c ****     {
 715:.\Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 716:.\Generated_Source\PSoC5/ADC.c ****     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 14


 717:.\Generated_Source\PSoC5/ADC.c ****     return (result);
 718:.\Generated_Source\PSoC5/ADC.c **** }
 719:.\Generated_Source\PSoC5/ADC.c **** 
 720:.\Generated_Source\PSoC5/ADC.c **** 
 721:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 722:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult16
 723:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 724:.\Generated_Source\PSoC5/ADC.c **** *
 725:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 726:.\Generated_Source\PSoC5/ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 727:.\Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 728:.\Generated_Source\PSoC5/ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 729:.\Generated_Source\PSoC5/ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 730:.\Generated_Source\PSoC5/ADC.c **** *  function should be used instead. This function returns only signed
 731:.\Generated_Source\PSoC5/ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 732:.\Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 733:.\Generated_Source\PSoC5/ADC.c **** *
 734:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 735:.\Generated_Source\PSoC5/ADC.c **** *   void
 736:.\Generated_Source\PSoC5/ADC.c **** *
 737:.\Generated_Source\PSoC5/ADC.c **** * Return:
 738:.\Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
 739:.\Generated_Source\PSoC5/ADC.c **** *
 740:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 741:.\Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 742:.\Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 743:.\Generated_Source\PSoC5/ADC.c **** *
 744:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 745:.\Generated_Source\PSoC5/ADC.c **** int16 ADC_GetResult16(void) 
 746:.\Generated_Source\PSoC5/ADC.c **** {
 747:.\Generated_Source\PSoC5/ADC.c ****     uint16 result;
 748:.\Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 749:.\Generated_Source\PSoC5/ADC.c **** 
 750:.\Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 751:.\Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 752:.\Generated_Source\PSoC5/ADC.c **** 
 753:.\Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 754:.\Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 755:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 756:.\Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPM_REG;
 757:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 758:.\Generated_Source\PSoC5/ADC.c ****         #else
 759:.\Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 760:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 761:.\Generated_Source\PSoC5/ADC.c ****     }
 762:.\Generated_Source\PSoC5/ADC.c ****     else /* MID or HIGH */
 763:.\Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 764:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 765:.\Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 766:.\Generated_Source\PSoC5/ADC.c ****         #else
 767:.\Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMP_REG;
 768:.\Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 769:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 770:.\Generated_Source\PSoC5/ADC.c ****         if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 771:.\Generated_Source\PSoC5/ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 772:.\Generated_Source\PSoC5/ADC.c ****             (void)ADC_DEC_SAMPH_REG;
 773:.\Generated_Source\PSoC5/ADC.c ****         }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 15


 774:.\Generated_Source\PSoC5/ADC.c ****     }
 775:.\Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 776:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 777:.\Generated_Source\PSoC5/ADC.c ****     {
 778:.\Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 779:.\Generated_Source\PSoC5/ADC.c ****     }
 780:.\Generated_Source\PSoC5/ADC.c **** 
 781:.\Generated_Source\PSoC5/ADC.c ****     return ((int16)result);
 782:.\Generated_Source\PSoC5/ADC.c **** }
 783:.\Generated_Source\PSoC5/ADC.c **** 
 784:.\Generated_Source\PSoC5/ADC.c **** 
 785:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 786:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult32
 787:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 788:.\Generated_Source\PSoC5/ADC.c **** *
 789:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 790:.\Generated_Source\PSoC5/ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 791:.\Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 20 bits.
 792:.\Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 793:.\Generated_Source\PSoC5/ADC.c **** *
 794:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 795:.\Generated_Source\PSoC5/ADC.c **** *  None
 796:.\Generated_Source\PSoC5/ADC.c **** *
 797:.\Generated_Source\PSoC5/ADC.c **** * Return:
 798:.\Generated_Source\PSoC5/ADC.c **** *  int32: Result of the last ADC conversion.
 799:.\Generated_Source\PSoC5/ADC.c **** *
 800:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 801:.\Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 802:.\Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 803:.\Generated_Source\PSoC5/ADC.c **** *
 804:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 805:.\Generated_Source\PSoC5/ADC.c **** int32 ADC_GetResult32(void) 
 806:.\Generated_Source\PSoC5/ADC.c **** {
 807:.\Generated_Source\PSoC5/ADC.c ****     uint32 result;
 808:.\Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 809:.\Generated_Source\PSoC5/ADC.c ****     #if (CY_PSOC3)
 810:.\Generated_Source\PSoC5/ADC.c **** 	    uint16 tmp;
 811:.\Generated_Source\PSoC5/ADC.c ****     #endif /* CY_PSOC3 */
 812:.\Generated_Source\PSoC5/ADC.c **** 
 813:.\Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 814:.\Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 815:.\Generated_Source\PSoC5/ADC.c **** 
 816:.\Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 817:.\Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 818:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 819:.\Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 820:.\Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 821:.\Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 822:.\Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 823:.\Generated_Source\PSoC5/ADC.c ****             }
 824:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMPM_REG;
 825:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 826:.\Generated_Source\PSoC5/ADC.c ****         #else
 827:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 828:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 829:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 830:.\Generated_Source\PSoC5/ADC.c ****     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 16


 831:.\Generated_Source\PSoC5/ADC.c ****     else if(coherency == ADC_DEC_SAMP_KEY_MID)
 832:.\Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 833:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 834:.\Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 835:.\Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 836:.\Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 837:.\Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 838:.\Generated_Source\PSoC5/ADC.c ****             }
 839:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 840:.\Generated_Source\PSoC5/ADC.c ****         #else
 841:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 842:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 843:.\Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 844:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 845:.\Generated_Source\PSoC5/ADC.c ****     }
 846:.\Generated_Source\PSoC5/ADC.c ****     else /*ADC_DEC_SAMP_KEY_HIGH */
 847:.\Generated_Source\PSoC5/ADC.c ****     {
 848:.\Generated_Source\PSoC5/ADC.c ****         /* Read MSB byte at the end */
 849:.\Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 850:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 851:.\Generated_Source\PSoC5/ADC.c **** 			tmp = ADC_DEC_SAMPH_REG;
 852:.\Generated_Source\PSoC5/ADC.c ****             if((tmp & 0x80u) != 0u)
 853:.\Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 854:.\Generated_Source\PSoC5/ADC.c ****                 tmp |= 0xFF00u;
 855:.\Generated_Source\PSoC5/ADC.c ****             }
 856:.\Generated_Source\PSoC5/ADC.c ****             result |= (uint32)tmp << 16u;
 857:.\Generated_Source\PSoC5/ADC.c ****         #else
 858:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 859:.\Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 860:.\Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 861:.\Generated_Source\PSoC5/ADC.c ****     }
 862:.\Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 863:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 864:.\Generated_Source\PSoC5/ADC.c ****     {
 865:.\Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 866:.\Generated_Source\PSoC5/ADC.c ****     }
 867:.\Generated_Source\PSoC5/ADC.c **** 
 868:.\Generated_Source\PSoC5/ADC.c ****     return ((int32)result);
 869:.\Generated_Source\PSoC5/ADC.c **** }
 870:.\Generated_Source\PSoC5/ADC.c **** 
 871:.\Generated_Source\PSoC5/ADC.c **** 
 872:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 873:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetOffset
 874:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 875:.\Generated_Source\PSoC5/ADC.c **** *
 876:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 877:.\Generated_Source\PSoC5/ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 878:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 879:.\Generated_Source\PSoC5/ADC.c **** *  given reading before calculating the voltage conversion.
 880:.\Generated_Source\PSoC5/ADC.c **** *
 881:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 882:.\Generated_Source\PSoC5/ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 883:.\Generated_Source\PSoC5/ADC.c **** *          connected to the same input voltage.
 884:.\Generated_Source\PSoC5/ADC.c **** *
 885:.\Generated_Source\PSoC5/ADC.c **** * Return:
 886:.\Generated_Source\PSoC5/ADC.c **** *  None
 887:.\Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 17


 888:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 889:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset. This
 890:.\Generated_Source\PSoC5/ADC.c **** *  variable is used for offset calibration purpose.
 891:.\Generated_Source\PSoC5/ADC.c **** *
 892:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:
 893:.\Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 894:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 895:.\Generated_Source\PSoC5/ADC.c **** *  by subtracting the given offset.
 896:.\Generated_Source\PSoC5/ADC.c **** *
 897:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 898:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetOffset(int32 offset) 
 899:.\Generated_Source\PSoC5/ADC.c **** {
 900:.\Generated_Source\PSoC5/ADC.c **** 
 901:.\Generated_Source\PSoC5/ADC.c ****     ADC_Offset = offset;
 902:.\Generated_Source\PSoC5/ADC.c **** }
 903:.\Generated_Source\PSoC5/ADC.c **** 
 904:.\Generated_Source\PSoC5/ADC.c **** 
 905:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 906:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGain
 907:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 908:.\Generated_Source\PSoC5/ADC.c **** *
 909:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 910:.\Generated_Source\PSoC5/ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 911:.\Generated_Source\PSoC5/ADC.c **** *  functions below. This value is set by default by the reference and
 912:.\Generated_Source\PSoC5/ADC.c **** *  input range settings. It should only be used to further calibrate the
 913:.\Generated_Source\PSoC5/ADC.c **** *  ADC with a known input or if an external reference is used. This
 914:.\Generated_Source\PSoC5/ADC.c **** *  function may also be used to calibrate an entire signal chain, not
 915:.\Generated_Source\PSoC5/ADC.c **** *  just the ADC.
 916:.\Generated_Source\PSoC5/ADC.c **** *
 917:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 918:.\Generated_Source\PSoC5/ADC.c **** *  int32: ADC gain in counts per volt.
 919:.\Generated_Source\PSoC5/ADC.c **** *
 920:.\Generated_Source\PSoC5/ADC.c **** * Return:
 921:.\Generated_Source\PSoC5/ADC.c **** *  None
 922:.\Generated_Source\PSoC5/ADC.c **** *
 923:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 924:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  modified to set the ADC gain in counts
 925:.\Generated_Source\PSoC5/ADC.c **** *   per volt.
 926:.\Generated_Source\PSoC5/ADC.c **** *
 927:.\Generated_Source\PSoC5/ADC.c **** * Side Effects:
 928:.\Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 929:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 930:.\Generated_Source\PSoC5/ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 931:.\Generated_Source\PSoC5/ADC.c **** *
 932:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 933:.\Generated_Source\PSoC5/ADC.c **** void ADC_SetGain(int32 adcGain) 
 934:.\Generated_Source\PSoC5/ADC.c **** {
 935:.\Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 936:.\Generated_Source\PSoC5/ADC.c **** }
 937:.\Generated_Source\PSoC5/ADC.c **** 
 938:.\Generated_Source\PSoC5/ADC.c **** 
 939:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 940:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_mVolts
 941:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 942:.\Generated_Source\PSoC5/ADC.c **** *
 943:.\Generated_Source\PSoC5/ADC.c **** * Summary:
 944:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 18


 945:.\Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
 946:.\Generated_Source\PSoC5/ADC.c **** *  be 534 mVolts.
 947:.\Generated_Source\PSoC5/ADC.c **** *
 948:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
 949:.\Generated_Source\PSoC5/ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 950:.\Generated_Source\PSoC5/ADC.c **** *
 951:.\Generated_Source\PSoC5/ADC.c **** * Return:
 952:.\Generated_Source\PSoC5/ADC.c **** *  int16:  Result in mVolts
 953:.\Generated_Source\PSoC5/ADC.c **** *
 954:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
 955:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
 956:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
 957:.\Generated_Source\PSoC5/ADC.c **** *   to mVolts.
 958:.\Generated_Source\PSoC5/ADC.c **** *
 959:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 960:.\Generated_Source\PSoC5/ADC.c **** int16 ADC_CountsTo_mVolts(int32 adcCounts) 
 961:.\Generated_Source\PSoC5/ADC.c **** {
 962:.\Generated_Source\PSoC5/ADC.c **** 
 963:.\Generated_Source\PSoC5/ADC.c ****     int16 mVolts;
 964:.\Generated_Source\PSoC5/ADC.c **** 
 965:.\Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 966:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
 967:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
 968:.\Generated_Source\PSoC5/ADC.c ****         {
 969:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
 970:.\Generated_Source\PSoC5/ADC.c ****         }
 971:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
 972:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
 973:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
 974:.\Generated_Source\PSoC5/ADC.c ****         {
 975:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
 976:.\Generated_Source\PSoC5/ADC.c ****         }
 977:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 978:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
 979:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
 980:.\Generated_Source\PSoC5/ADC.c ****         {
 981:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
 982:.\Generated_Source\PSoC5/ADC.c ****         }
 983:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 984:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
 985:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
 986:.\Generated_Source\PSoC5/ADC.c ****         {
 987:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
 988:.\Generated_Source\PSoC5/ADC.c ****         }
 989:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 990:.\Generated_Source\PSoC5/ADC.c **** 
 991:.\Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 992:.\Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 993:.\Generated_Source\PSoC5/ADC.c **** 
 994:.\Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)(( adcCounts * ADC_1MV_COUNTS ) / ADC_CountsPerVolt) ;
 995:.\Generated_Source\PSoC5/ADC.c **** 
 996:.\Generated_Source\PSoC5/ADC.c ****     return(mVolts);
 997:.\Generated_Source\PSoC5/ADC.c **** }
 998:.\Generated_Source\PSoC5/ADC.c **** 
 999:.\Generated_Source\PSoC5/ADC.c **** 
1000:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1001:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_Volts
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 19


1002:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1003:.\Generated_Source\PSoC5/ADC.c **** *
1004:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1005:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1006:.\Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1007:.\Generated_Source\PSoC5/ADC.c **** *  returned result would be +1.2345 Volts.
1008:.\Generated_Source\PSoC5/ADC.c **** *
1009:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1010:.\Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1011:.\Generated_Source\PSoC5/ADC.c **** *
1012:.\Generated_Source\PSoC5/ADC.c **** * Return:
1013:.\Generated_Source\PSoC5/ADC.c **** *  float32: Result in Volts
1014:.\Generated_Source\PSoC5/ADC.c **** *
1015:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
1016:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert to Volts.
1017:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1018:.\Generated_Source\PSoC5/ADC.c **** *   to Volts.
1019:.\Generated_Source\PSoC5/ADC.c **** *
1020:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1021:.\Generated_Source\PSoC5/ADC.c **** float32 ADC_CountsTo_Volts(int32 adcCounts) 
1022:.\Generated_Source\PSoC5/ADC.c **** {
1023:.\Generated_Source\PSoC5/ADC.c **** 
1024:.\Generated_Source\PSoC5/ADC.c ****     float32 Volts;
1025:.\Generated_Source\PSoC5/ADC.c **** 
1026:.\Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1027:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
1028:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
1029:.\Generated_Source\PSoC5/ADC.c ****         {
1030:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1031:.\Generated_Source\PSoC5/ADC.c ****         }
1032:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
1033:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
1034:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
1035:.\Generated_Source\PSoC5/ADC.c ****         {
1036:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1037:.\Generated_Source\PSoC5/ADC.c ****         }
1038:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1039:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
1040:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
1041:.\Generated_Source\PSoC5/ADC.c ****         {
1042:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1043:.\Generated_Source\PSoC5/ADC.c ****         }
1044:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1045:.\Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
1046:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
1047:.\Generated_Source\PSoC5/ADC.c ****         {
1048:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1049:.\Generated_Source\PSoC5/ADC.c ****         }
1050:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1051:.\Generated_Source\PSoC5/ADC.c **** 
1052:.\Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
1053:.\Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
1054:.\Generated_Source\PSoC5/ADC.c **** 
1055:.\Generated_Source\PSoC5/ADC.c ****     Volts = (float32)adcCounts / (float32)ADC_CountsPerVolt;
1056:.\Generated_Source\PSoC5/ADC.c **** 
1057:.\Generated_Source\PSoC5/ADC.c ****     return( Volts );
1058:.\Generated_Source\PSoC5/ADC.c **** }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 20


1059:.\Generated_Source\PSoC5/ADC.c **** 
1060:.\Generated_Source\PSoC5/ADC.c **** 
1061:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1062:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1063:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1064:.\Generated_Source\PSoC5/ADC.c **** *
1065:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1066:.\Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1067:.\Generated_Source\PSoC5/ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1068:.\Generated_Source\PSoC5/ADC.c **** *
1069:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1070:.\Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
1071:.\Generated_Source\PSoC5/ADC.c **** *
1072:.\Generated_Source\PSoC5/ADC.c **** * Return:
1073:.\Generated_Source\PSoC5/ADC.c **** *  int32:  Result in uVolts
1074:.\Generated_Source\PSoC5/ADC.c **** *
1075:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
1076:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1077:.\Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1078:.\Generated_Source\PSoC5/ADC.c **** *   to mVolts.
1079:.\Generated_Source\PSoC5/ADC.c **** *
1080:.\Generated_Source\PSoC5/ADC.c **** * Theory:
1081:.\Generated_Source\PSoC5/ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1082:.\Generated_Source\PSoC5/ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1083:.\Generated_Source\PSoC5/ADC.c **** *
1084:.\Generated_Source\PSoC5/ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)ADC_CountsPerVolt / B));
1085:.\Generated_Source\PSoC5/ADC.c **** *
1086:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1087:.\Generated_Source\PSoC5/ADC.c **** int32 ADC_CountsTo_uVolts(int32 adcCounts) 
1088:.\Generated_Source\PSoC5/ADC.c **** {
1089:.\Generated_Source\PSoC5/ADC.c **** 
1090:.\Generated_Source\PSoC5/ADC.c ****     int32 uVolts;
1091:.\Generated_Source\PSoC5/ADC.c ****     int32 coefA;
1092:.\Generated_Source\PSoC5/ADC.c ****     int32 coefB;
1093:.\Generated_Source\PSoC5/ADC.c ****     uint8 resolution;
1094:.\Generated_Source\PSoC5/ADC.c **** 
1095:.\Generated_Source\PSoC5/ADC.c ****     /* Set the resolution based on the configuration */
1096:.\Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1097:.\Generated_Source\PSoC5/ADC.c ****     if (ADC_Config == ADC_CFG1)
1098:.\Generated_Source\PSoC5/ADC.c ****     {
1099:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG1_RESOLUTION;
1100:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_DEC_DIV != 0)
1101:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1102:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG1_DEC_DIV */
1103:.\Generated_Source\PSoC5/ADC.c ****     }
1104:.\Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG2)
1105:.\Generated_Source\PSoC5/ADC.c ****     {
1106:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG2_RESOLUTION;
1107:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG2_DEC_DIV != 0)
1108:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1109:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG2_DEC_DIV */
1110:.\Generated_Source\PSoC5/ADC.c ****     }
1111:.\Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG3)
1112:.\Generated_Source\PSoC5/ADC.c ****     {
1113:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG3_RESOLUTION;
1114:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG3_DEC_DIV != 0)
1115:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 21


1116:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG3_DEC_DIV */
1117:.\Generated_Source\PSoC5/ADC.c ****     }
1118:.\Generated_Source\PSoC5/ADC.c ****     else
1119:.\Generated_Source\PSoC5/ADC.c ****     {
1120:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG4_RESOLUTION;
1121:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG4_DEC_DIV != 0)
1122:.\Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1123:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG4_DEC_DIV */
1124:.\Generated_Source\PSoC5/ADC.c ****     }
1125:.\Generated_Source\PSoC5/ADC.c **** 
1126:.\Generated_Source\PSoC5/ADC.c ****     switch (resolution)
1127:.\Generated_Source\PSoC5/ADC.c ****     {
1128:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_12) || \
1129:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_12) || \
1130:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_12) || \
1131:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_12) )
1132:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_12:
1133:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_2;
1134:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_2;
1135:.\Generated_Source\PSoC5/ADC.c ****                 break;
1136:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_12 */    
1137:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_13) || \
1138:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_13) || \
1139:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_13) || \
1140:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_13) )
1141:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_13:
1142:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_4;
1143:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_4;
1144:.\Generated_Source\PSoC5/ADC.c ****                 break;
1145:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_13 */    
1146:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_14) || \
1147:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_14) || \
1148:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_14) || \
1149:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_14) )
1150:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_14:
1151:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_8;
1152:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_8;
1153:.\Generated_Source\PSoC5/ADC.c ****                 break;
1154:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_14 */    
1155:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_15) || \
1156:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_15) || \
1157:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_15) || \
1158:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_15) )
1159:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_15:
1160:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_16;
1161:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_16;
1162:.\Generated_Source\PSoC5/ADC.c ****                 break;
1163:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_15 */    
1164:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_16) || \
1165:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_16) || \
1166:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_16) || \
1167:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_16) )
1168:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_16:
1169:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_32;
1170:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_32;
1171:.\Generated_Source\PSoC5/ADC.c ****                 break;
1172:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_16 */    
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 22


1173:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_17) || \
1174:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_17) || \
1175:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_17) || \
1176:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_17) )
1177:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_17:
1178:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_64;
1179:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_64;
1180:.\Generated_Source\PSoC5/ADC.c ****                 break;
1181:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_17 */    
1182:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_18) || \
1183:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_18) || \
1184:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_18) || \
1185:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_18) )
1186:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_18:
1187:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_125;
1188:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_125;
1189:.\Generated_Source\PSoC5/ADC.c ****                 break;
1190:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_18 */    
1191:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_19) || \
1192:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_19) || \
1193:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_19) || \
1194:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_19) )
1195:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_19:
1196:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_250;
1197:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_250;
1198:.\Generated_Source\PSoC5/ADC.c ****                 break;
1199:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_19 */    
1200:.\Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_20) || \
1201:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_20) || \
1202:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_20) || \
1203:.\Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_20) )
1204:.\Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_20:
1205:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_500;
1206:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_500;
1207:.\Generated_Source\PSoC5/ADC.c ****                 break;
1208:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_20 */    
1209:.\Generated_Source\PSoC5/ADC.c ****         default:    /* resolution < 12 */
1210:.\Generated_Source\PSoC5/ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1211:.\Generated_Source\PSoC5/ADC.c ****             coefA = ADC_1UV_COUNTS;
1212:.\Generated_Source\PSoC5/ADC.c ****             coefB = ADC_DIVISOR_1;
1213:.\Generated_Source\PSoC5/ADC.c ****             break;
1214:.\Generated_Source\PSoC5/ADC.c ****     }
1215:.\Generated_Source\PSoC5/ADC.c ****     coefB = ADC_CountsPerVolt / coefB;
1216:.\Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
1217:.\Generated_Source\PSoC5/ADC.c **** 
1218:.\Generated_Source\PSoC5/ADC.c ****     return( uVolts );
1219:.\Generated_Source\PSoC5/ADC.c **** }
1220:.\Generated_Source\PSoC5/ADC.c **** 
1221:.\Generated_Source\PSoC5/ADC.c **** 
1222:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_InitConfig(uint8 config)
1224:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1225:.\Generated_Source\PSoC5/ADC.c **** *
1226:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1227:.\Generated_Source\PSoC5/ADC.c **** *  Initializes all registers based on customizer settings
1228:.\Generated_Source\PSoC5/ADC.c **** *
1229:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 23


1230:.\Generated_Source\PSoC5/ADC.c **** *   void
1231:.\Generated_Source\PSoC5/ADC.c **** *
1232:.\Generated_Source\PSoC5/ADC.c **** * Return:
1233:.\Generated_Source\PSoC5/ADC.c **** *  None
1234:.\Generated_Source\PSoC5/ADC.c **** *
1235:.\Generated_Source\PSoC5/ADC.c **** * Global variables:
1236:.\Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  Used to set the default counts per volt.
1237:.\Generated_Source\PSoC5/ADC.c **** *
1238:.\Generated_Source\PSoC5/ADC.c **** * Side Effects: Rewrites the coherency set by ADC_SetCoherency()
1239:.\Generated_Source\PSoC5/ADC.c **** *   API to the default value.
1240:.\Generated_Source\PSoC5/ADC.c **** *
1241:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1242:.\Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) 
1243:.\Generated_Source\PSoC5/ADC.c **** {
1244:.\Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
1245:.\Generated_Source\PSoC5/ADC.c **** 
1246:.\Generated_Source\PSoC5/ADC.c ****     if (config == 1u)
1247:.\Generated_Source\PSoC5/ADC.c ****     {
1248:.\Generated_Source\PSoC5/ADC.c ****         /* Default Config */
1249:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_CR_REG      = ADC_CFG1_DEC_CR;
1250:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
1251:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
1252:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
1253:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
1254:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
1255:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
1256:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
1257:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
1258:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
1259:.\Generated_Source\PSoC5/ADC.c **** 
1260:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR4_REG     = ADC_CFG1_DSM_CR4;
1261:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
1262:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
1263:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
1264:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
1265:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
1266:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
1267:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
1268:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
1269:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
1270:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
1271:.\Generated_Source\PSoC5/ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1272:.\Generated_Source\PSoC5/ADC.c ****         ADC_SetDSMRef0Reg(ADC_CFG1_DSM_REF0);
1273:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
1274:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
1275:.\Generated_Source\PSoC5/ADC.c **** 
1276:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF0_REG    = ADC_CFG1_DSM_BUF0;
1277:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
1278:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
1279:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
1280:.\Generated_Source\PSoC5/ADC.c **** 
1281:.\Generated_Source\PSoC5/ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1282:.\Generated_Source\PSoC5/ADC.c ****         *  the input  range selected.
1283:.\Generated_Source\PSoC5/ADC.c ****         */
1284:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INPUT_MODE)
1285:.\Generated_Source\PSoC5/ADC.c ****             #if (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1286:.\Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(1u);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 24


1287:.\Generated_Source\PSoC5/ADC.c ****             #else
1288:.\Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(0u);
1289:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_IR_VSSA_TO_2VREF) */
1290:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INPUT_MODE */
1291:.\Generated_Source\PSoC5/ADC.c **** 
1292:.\Generated_Source\PSoC5/ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1293:.\Generated_Source\PSoC5/ADC.c ****         *   mode is Single sample
1294:.\Generated_Source\PSoC5/ADC.c ****         */
1295:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_RESOLUTION > 16 && \
1296:.\Generated_Source\PSoC5/ADC.c ****             ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1297:.\Generated_Source\PSoC5/ADC.c ****             ADC_stopConversion = 1u;
1298:.\Generated_Source\PSoC5/ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1299:.\Generated_Source\PSoC5/ADC.c **** 
1300:.\Generated_Source\PSoC5/ADC.c ****         ADC_CountsPerVolt = (int32)ADC_CFG1_COUNTS_PER_VOLT;
1301:.\Generated_Source\PSoC5/ADC.c **** 
1302:.\Generated_Source\PSoC5/ADC.c ****         ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG1_CP_CLK_DIVIDER, 1u);
1303:.\Generated_Source\PSoC5/ADC.c **** 
1304:.\Generated_Source\PSoC5/ADC.c ****         /* This is only valid if there is an internal clock */
1305:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INTERNAL_CLK)
1306:.\Generated_Source\PSoC5/ADC.c ****             ADC_theACLK_SetDividerRegister(ADC_CFG1_ADC_CLK_DIVIDER, 1u);
1307:.\Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INTERNAL_CLK */
1308:.\Generated_Source\PSoC5/ADC.c **** 
1309:.\Generated_Source\PSoC5/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
1310:.\Generated_Source\PSoC5/ADC.c ****             /* Set interrupt vector */
1311:.\Generated_Source\PSoC5/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR1);
1312:.\Generated_Source\PSoC5/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
1313:.\Generated_Source\PSoC5/ADC.c ****     }
1314:.\Generated_Source\PSoC5/ADC.c **** 
1315:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
1316:.\Generated_Source\PSoC5/ADC.c ****         if(config == 2u)
1317:.\Generated_Source\PSoC5/ADC.c ****         {
1318:.\Generated_Source\PSoC5/ADC.c ****             /* Second Config */
1319:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG2_DEC_CR;
1320:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG2_DEC_SHIFT1;
1321:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG2_DEC_SHIFT2;
1322:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG2_DEC_DR2;
1323:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG2_DEC_DR2H;
1324:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG2_DEC_DR1;
1325:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG2_DEC_OCOR;
1326:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG2_DEC_OCORM;
1327:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG2_DEC_OCORH;
1328:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG2_DEC_COHER;
1329:.\Generated_Source\PSoC5/ADC.c **** 
1330:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG2_DSM_CR4;
1331:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG2_DSM_CR5;
1332:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG2_DSM_CR6;
1333:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG2_DSM_CR7;
1334:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG2_DSM_CR10;
1335:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG2_DSM_CR11;
1336:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG2_DSM_CR12;
1337:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG2_DSM_CR14;
1338:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG2_DSM_CR15;
1339:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG2_DSM_CR16;
1340:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG2_DSM_CR17;
1341:.\Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1342:.\Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG2_DSM_REF0);
1343:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG2_DSM_REF2;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 25


1344:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG2_DSM_REF3;
1345:.\Generated_Source\PSoC5/ADC.c **** 
1346:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG2_DSM_BUF0;
1347:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG2_DSM_BUF1;
1348:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG2_DSM_BUF2;
1349:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG2_DSM_BUF3;
1350:.\Generated_Source\PSoC5/ADC.c **** 
1351:.\Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1352:.\Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1353:.\Generated_Source\PSoC5/ADC.c ****             */
1354:.\Generated_Source\PSoC5/ADC.c **** 
1355:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1356:.\Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1357:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1358:.\Generated_Source\PSoC5/ADC.c ****                 #else
1359:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1360:.\Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1361:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1362:.\Generated_Source\PSoC5/ADC.c **** 
1363:.\Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1364:.\Generated_Source\PSoC5/ADC.c ****             *   conversion mode is Single sample
1365:.\Generated_Source\PSoC5/ADC.c ****             */
1366:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG2_RESOLUTION > 16 && \
1367:.\Generated_Source\PSoC5/ADC.c ****                 ADC_CFG2_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1368:.\Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1369:.\Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1370:.\Generated_Source\PSoC5/ADC.c **** 
1371:.\Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG2_COUNTS_PER_VOLT;
1372:.\Generated_Source\PSoC5/ADC.c **** 
1373:.\Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG2_CP_CLK_DIVIDER, 1u);
1374:.\Generated_Source\PSoC5/ADC.c **** 
1375:.\Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1376:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1377:.\Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG2_ADC_CLK_DIVIDER, 1u);
1378:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1379:.\Generated_Source\PSoC5/ADC.c **** 
1380:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1381:.\Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1382:.\Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR2);
1383:.\Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1384:.\Generated_Source\PSoC5/ADC.c ****         }
1385:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
1386:.\Generated_Source\PSoC5/ADC.c **** 
1387:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
1388:.\Generated_Source\PSoC5/ADC.c ****         if(config == 3u)
1389:.\Generated_Source\PSoC5/ADC.c ****         {
1390:.\Generated_Source\PSoC5/ADC.c ****             /* Third Config */
1391:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG3_DEC_CR;
1392:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG3_DEC_SHIFT1;
1393:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG3_DEC_SHIFT2;
1394:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG3_DEC_DR2;
1395:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG3_DEC_DR2H;
1396:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG3_DEC_DR1;
1397:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG3_DEC_OCOR;
1398:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG3_DEC_OCORM;
1399:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG3_DEC_OCORH;
1400:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG3_DEC_COHER;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 26


1401:.\Generated_Source\PSoC5/ADC.c **** 
1402:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG3_DSM_CR4;
1403:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG3_DSM_CR5;
1404:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG3_DSM_CR6;
1405:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG3_DSM_CR7;
1406:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG3_DSM_CR10;
1407:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG3_DSM_CR11;
1408:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG3_DSM_CR12;
1409:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG3_DSM_CR14;
1410:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG3_DSM_CR15;
1411:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG3_DSM_CR16;
1412:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG3_DSM_CR17;
1413:.\Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1414:.\Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG3_DSM_REF0);
1415:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG3_DSM_REF2;
1416:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG3_DSM_REF3;
1417:.\Generated_Source\PSoC5/ADC.c **** 
1418:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG3_DSM_BUF0;
1419:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG3_DSM_BUF1;
1420:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG3_DSM_BUF2;
1421:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG3_DSM_BUF3;
1422:.\Generated_Source\PSoC5/ADC.c **** 
1423:.\Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1424:.\Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1425:.\Generated_Source\PSoC5/ADC.c ****             */
1426:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1427:.\Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1428:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1429:.\Generated_Source\PSoC5/ADC.c ****                 #else
1430:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1431:.\Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1432:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1433:.\Generated_Source\PSoC5/ADC.c **** 
1434:.\Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1435:.\Generated_Source\PSoC5/ADC.c ****                conversion  mode is Single sample */
1436:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG3_RESOLUTION > 16 && \
1437:.\Generated_Source\PSoC5/ADC.c ****                 ADC_CFG3_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1438:.\Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1439:.\Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1440:.\Generated_Source\PSoC5/ADC.c **** 
1441:.\Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG3_COUNTS_PER_VOLT;
1442:.\Generated_Source\PSoC5/ADC.c **** 
1443:.\Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG3_CP_CLK_DIVIDER, 1u);
1444:.\Generated_Source\PSoC5/ADC.c **** 
1445:.\Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1446:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1447:.\Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG3_ADC_CLK_DIVIDER, 1u);
1448:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1449:.\Generated_Source\PSoC5/ADC.c **** 
1450:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1451:.\Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1452:.\Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR3);
1453:.\Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1454:.\Generated_Source\PSoC5/ADC.c ****         }
1455:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
1456:.\Generated_Source\PSoC5/ADC.c **** 
1457:.\Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 27


1458:.\Generated_Source\PSoC5/ADC.c ****         if (config == 4u)
1459:.\Generated_Source\PSoC5/ADC.c ****         {
1460:.\Generated_Source\PSoC5/ADC.c ****             /* Fourth Config */
1461:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG4_DEC_CR;
1462:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG4_DEC_SHIFT1;
1463:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG4_DEC_SHIFT2;
1464:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG4_DEC_DR2;
1465:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG4_DEC_DR2H;
1466:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG4_DEC_DR1;
1467:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG4_DEC_OCOR;
1468:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG4_DEC_OCORM;
1469:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG4_DEC_OCORH;
1470:.\Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG4_DEC_COHER;
1471:.\Generated_Source\PSoC5/ADC.c **** 
1472:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG4_DSM_CR4;
1473:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG4_DSM_CR5;
1474:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG4_DSM_CR6;
1475:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG4_DSM_CR7;
1476:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG4_DSM_CR10;
1477:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG4_DSM_CR11;
1478:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG4_DSM_CR12;
1479:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG4_DSM_CR14;
1480:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG4_DSM_CR15;
1481:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG4_DSM_CR16;
1482:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG4_DSM_CR17;
1483:.\Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1484:.\Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG4_DSM_REF0);
1485:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG4_DSM_REF2;
1486:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG4_DSM_REF3;
1487:.\Generated_Source\PSoC5/ADC.c **** 
1488:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG4_DSM_BUF0;
1489:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG4_DSM_BUF1;
1490:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG4_DSM_BUF2;
1491:.\Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG4_DSM_BUF3;
1492:.\Generated_Source\PSoC5/ADC.c **** 
1493:.\Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1494:.\Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1495:.\Generated_Source\PSoC5/ADC.c ****             */
1496:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1497:.\Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1498:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1499:.\Generated_Source\PSoC5/ADC.c ****                 #else
1500:.\Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1501:.\Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1502:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1503:.\Generated_Source\PSoC5/ADC.c **** 
1504:.\Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1505:.\Generated_Source\PSoC5/ADC.c ****                conversion mode is Single sample */
1506:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG4_RESOLUTION > 16 && \
1507:.\Generated_Source\PSoC5/ADC.c ****                 ADC_CFG4_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1508:.\Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1509:.\Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1510:.\Generated_Source\PSoC5/ADC.c **** 
1511:.\Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG4_COUNTS_PER_VOLT;
1512:.\Generated_Source\PSoC5/ADC.c **** 
1513:.\Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG4_CP_CLK_DIVIDER, 1u);
1514:.\Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 28


1515:.\Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1516:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1517:.\Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG4_ADC_CLK_DIVIDER, 1u);
1518:.\Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1519:.\Generated_Source\PSoC5/ADC.c **** 
1520:.\Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1521:.\Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1522:.\Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR4);
1523:.\Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1524:.\Generated_Source\PSoC5/ADC.c ****         }
1525:.\Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
1526:.\Generated_Source\PSoC5/ADC.c **** }
1527:.\Generated_Source\PSoC5/ADC.c **** 
1528:.\Generated_Source\PSoC5/ADC.c **** 
1529:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1530:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SelectCofiguration
1531:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1532:.\Generated_Source\PSoC5/ADC.c **** *
1533:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1534:.\Generated_Source\PSoC5/ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1535:.\Generated_Source\PSoC5/ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1536:.\Generated_Source\PSoC5/ADC.c **** *  the new configuration, the ADC can be powered and conversion
1537:.\Generated_Source\PSoC5/ADC.c **** *  can be restarted depending up on the value of second parameter
1538:.\Generated_Source\PSoC5/ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1539:.\Generated_Source\PSoC5/ADC.c **** *  restarted. If this value is zero, then user must call ADC_Start
1540:.\Generated_Source\PSoC5/ADC.c **** *  and ADC_StartConvert() to restart the conversion.
1541:.\Generated_Source\PSoC5/ADC.c **** *
1542:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1543:.\Generated_Source\PSoC5/ADC.c **** *  config:  configuration user wants to select.
1544:.\Generated_Source\PSoC5/ADC.c **** *           Valid range: 1..4
1545:.\Generated_Source\PSoC5/ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1546:.\Generated_Source\PSoC5/ADC.c **** *                            0 means do not start the ADC and conversion.
1547:.\Generated_Source\PSoC5/ADC.c **** *
1548:.\Generated_Source\PSoC5/ADC.c **** * Return:
1549:.\Generated_Source\PSoC5/ADC.c **** *  None
1550:.\Generated_Source\PSoC5/ADC.c **** *
1551:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1552:.\Generated_Source\PSoC5/ADC.c **** void ADC_SelectConfiguration(uint8 config, uint8 restart)
1553:.\Generated_Source\PSoC5/ADC.c ****                                               
1554:.\Generated_Source\PSoC5/ADC.c **** {
1555:.\Generated_Source\PSoC5/ADC.c ****     /* Check whether the configuration number is valid or not */
1556:.\Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
1557:.\Generated_Source\PSoC5/ADC.c ****     {
1558:.\Generated_Source\PSoC5/ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1559:.\Generated_Source\PSoC5/ADC.c **** 		*  selected configuration
1560:.\Generated_Source\PSoC5/ADC.c **** 		*/
1561:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_initVar == 0u)
1562:.\Generated_Source\PSoC5/ADC.c ****         {
1563:.\Generated_Source\PSoC5/ADC.c ****             ADC_started = 1u;
1564:.\Generated_Source\PSoC5/ADC.c ****         }
1565:.\Generated_Source\PSoC5/ADC.c **** 
1566:.\Generated_Source\PSoC5/ADC.c ****         /* Update the config flag */
1567:.\Generated_Source\PSoC5/ADC.c ****         ADC_Config = config;
1568:.\Generated_Source\PSoC5/ADC.c **** 
1569:.\Generated_Source\PSoC5/ADC.c ****         /* Stop the ADC  */
1570:.\Generated_Source\PSoC5/ADC.c ****         ADC_Stop();
1571:.\Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 29


1572:.\Generated_Source\PSoC5/ADC.c ****         /* Set the  ADC registers based on the configuration */
1573:.\Generated_Source\PSoC5/ADC.c ****         ADC_InitConfig(config);
1574:.\Generated_Source\PSoC5/ADC.c **** 
1575:.\Generated_Source\PSoC5/ADC.c ****         /* Compensate the gain */
1576:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_GVAL_REG = ADC_gcor[config - 1u].gval;
1577:.\Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
1578:.\Generated_Source\PSoC5/ADC.c **** 
1579:.\Generated_Source\PSoC5/ADC.c ****         if(restart == 1u)
1580:.\Generated_Source\PSoC5/ADC.c ****         {
1581:.\Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC */
1582:.\Generated_Source\PSoC5/ADC.c ****             ADC_Start();
1583:.\Generated_Source\PSoC5/ADC.c **** 
1584:.\Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC conversion */
1585:.\Generated_Source\PSoC5/ADC.c ****             ADC_StartConvert();
1586:.\Generated_Source\PSoC5/ADC.c ****         }
1587:.\Generated_Source\PSoC5/ADC.c ****     }
1588:.\Generated_Source\PSoC5/ADC.c ****     else
1589:.\Generated_Source\PSoC5/ADC.c ****     {
1590:.\Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1591:.\Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
1592:.\Generated_Source\PSoC5/ADC.c ****     }
1593:.\Generated_Source\PSoC5/ADC.c **** }
1594:.\Generated_Source\PSoC5/ADC.c **** 
1595:.\Generated_Source\PSoC5/ADC.c **** 
1596:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1597:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GainCompensation
1598:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1599:.\Generated_Source\PSoC5/ADC.c **** *
1600:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1601:.\Generated_Source\PSoC5/ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1602:.\Generated_Source\PSoC5/ADC.c **** *
1603:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1604:.\Generated_Source\PSoC5/ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1605:.\Generated_Source\PSoC5/ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1606:.\Generated_Source\PSoC5/ADC.c **** *                 conversion  mode.
1607:.\Generated_Source\PSoC5/ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1608:.\Generated_Source\PSoC5/ADC.c ****                      conversion mode.
1609:.\Generated_Source\PSoC5/ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1610:.\Generated_Source\PSoC5/ADC.c **** *  config:      Specifies the configuration number
1611:.\Generated_Source\PSoC5/ADC.c **** *               Valid range: 1..4
1612:.\Generated_Source\PSoC5/ADC.c **** *
1613:.\Generated_Source\PSoC5/ADC.c **** * Return:
1614:.\Generated_Source\PSoC5/ADC.c **** *  None
1615:.\Generated_Source\PSoC5/ADC.c **** *
1616:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1617:.\Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain,
1618:.\Generated_Source\PSoC5/ADC.c ****                               uint8 resolution, uint8 config) 
1619:.\Generated_Source\PSoC5/ADC.c **** {
  26              		.loc 1 1619 0
  27              		.cfi_startproc
  28              		@ args = 4, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 3, -16
  34              		.cfi_offset 4, -12
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 30


  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 9DF81040 		ldrb	r4, [sp, #16]	@ zero_extendqisi2
1620:.\Generated_Source\PSoC5/ADC.c ****     int8 flash;
1621:.\Generated_Source\PSoC5/ADC.c **** 	int32 normalised;
1622:.\Generated_Source\PSoC5/ADC.c **** 	uint16 gcorValue;
1623:.\Generated_Source\PSoC5/ADC.c ****     uint32 gcorTmp;
1624:.\Generated_Source\PSoC5/ADC.c **** 
1625:.\Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
  38              		.loc 1 1625 0
  39 0006 012C     		cmp	r4, #1
  40 0008 49D1     		bne	.L2
1626:.\Generated_Source\PSoC5/ADC.c ****     {
1627:.\Generated_Source\PSoC5/ADC.c ****         switch(inputRange)
  41              		.loc 1 1627 0
  42 000a 0138     		subs	r0, r0, #1
  43              	.LVL1:
  44 000c 0928     		cmp	r0, #9
  45 000e 26D8     		bhi	.L16
  46 0010 DFE800F0 		tbb	[pc, r0]
  47              	.L5:
  48 0014 05       		.byte	(.L4-.L5)/2
  49 0015 25       		.byte	(.L16-.L5)/2
  50 0016 25       		.byte	(.L16-.L5)/2
  51 0017 05       		.byte	(.L4-.L5)/2
  52 0018 25       		.byte	(.L16-.L5)/2
  53 0019 25       		.byte	(.L16-.L5)/2
  54 001a 0D       		.byte	(.L6-.L5)/2
  55 001b 15       		.byte	(.L7-.L5)/2
  56 001c 25       		.byte	(.L16-.L5)/2
  57 001d 1D       		.byte	(.L8-.L5)/2
  58              		.p2align 1
  59              	.L4:
1628:.\Generated_Source\PSoC5/ADC.c ****         {
1629:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_DIFF:
1630:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VSSA_TO_2VREF:
1631:.\Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1632:.\Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
  60              		.loc 1 1632 0
  61 001e 0F2B     		cmp	r3, #15
  62 0020 02D9     		bls	.L9
1633:.\Generated_Source\PSoC5/ADC.c ****                 {
1634:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_16_20;
  63              		.loc 1 1634 0
  64 0022 2148     		ldr	r0, .L17
  65 0024 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  66              	.LVL2:
  67 0026 1BE0     		b	.L3
  68              	.LVL3:
  69              	.L9:
1635:.\Generated_Source\PSoC5/ADC.c ****                 }
1636:.\Generated_Source\PSoC5/ADC.c ****                 else
1637:.\Generated_Source\PSoC5/ADC.c ****                 {
1638:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_8_15;
  70              		.loc 1 1638 0
  71 0028 2048     		ldr	r0, .L17+4
  72 002a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 31


  73              	.LVL4:
  74 002c 18E0     		b	.L3
  75              	.LVL5:
  76              	.L6:
1639:.\Generated_Source\PSoC5/ADC.c ****                 }
1640:.\Generated_Source\PSoC5/ADC.c ****                 break;
1641:.\Generated_Source\PSoC5/ADC.c **** 
1642:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_2_DIFF:
1643:.\Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1644:.\Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
  77              		.loc 1 1644 0
  78 002e 0F2B     		cmp	r3, #15
  79 0030 02D9     		bls	.L10
1645:.\Generated_Source\PSoC5/ADC.c ****                 {
1646:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_16_20;
  80              		.loc 1 1646 0
  81 0032 1F48     		ldr	r0, .L17+8
  82 0034 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  83              	.LVL6:
  84 0036 13E0     		b	.L3
  85              	.LVL7:
  86              	.L10:
1647:.\Generated_Source\PSoC5/ADC.c ****                 }
1648:.\Generated_Source\PSoC5/ADC.c ****                 else
1649:.\Generated_Source\PSoC5/ADC.c ****                 {
1650:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_8_15;
  87              		.loc 1 1650 0
  88 0038 1E48     		ldr	r0, .L17+12
  89 003a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
  90              	.LVL8:
  91 003c 10E0     		b	.L3
  92              	.LVL9:
  93              	.L7:
1651:.\Generated_Source\PSoC5/ADC.c ****                 }
1652:.\Generated_Source\PSoC5/ADC.c ****                 break;
1653:.\Generated_Source\PSoC5/ADC.c **** 
1654:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_4_DIFF:
1655:.\Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1656:.\Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
  94              		.loc 1 1656 0
  95 003e 0F2B     		cmp	r3, #15
  96 0040 02D9     		bls	.L11
1657:.\Generated_Source\PSoC5/ADC.c ****                 {
1658:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_16_20;
  97              		.loc 1 1658 0
  98 0042 1D48     		ldr	r0, .L17+16
  99 0044 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 100              	.LVL10:
 101 0046 0BE0     		b	.L3
 102              	.LVL11:
 103              	.L11:
1659:.\Generated_Source\PSoC5/ADC.c ****                 }
1660:.\Generated_Source\PSoC5/ADC.c ****                 else
1661:.\Generated_Source\PSoC5/ADC.c ****                 {
1662:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_8_15;
 104              		.loc 1 1662 0
 105 0048 1C48     		ldr	r0, .L17+20
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 32


 106 004a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 107              	.LVL12:
 108 004c 08E0     		b	.L3
 109              	.LVL13:
 110              	.L8:
1663:.\Generated_Source\PSoC5/ADC.c ****                 }
1664:.\Generated_Source\PSoC5/ADC.c ****                 break;
1665:.\Generated_Source\PSoC5/ADC.c **** 
1666:.\Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_16_DIFF:
1667:.\Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1668:.\Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 111              		.loc 1 1668 0
 112 004e 0F2B     		cmp	r3, #15
 113 0050 02D9     		bls	.L12
1669:.\Generated_Source\PSoC5/ADC.c ****                 {
1670:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 114              		.loc 1 1670 0
 115 0052 1B48     		ldr	r0, .L17+24
 116 0054 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 117              	.LVL14:
 118 0056 03E0     		b	.L3
 119              	.LVL15:
 120              	.L12:
1671:.\Generated_Source\PSoC5/ADC.c ****                 }
1672:.\Generated_Source\PSoC5/ADC.c ****                 else
1673:.\Generated_Source\PSoC5/ADC.c ****                 {
1674:.\Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_8_15;
 121              		.loc 1 1674 0
 122 0058 1A48     		ldr	r0, .L17+28
 123 005a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 124              	.LVL16:
 125 005c 00E0     		b	.L3
 126              	.LVL17:
 127              	.L16:
1675:.\Generated_Source\PSoC5/ADC.c ****                 }
1676:.\Generated_Source\PSoC5/ADC.c ****                 break;
1677:.\Generated_Source\PSoC5/ADC.c **** 
1678:.\Generated_Source\PSoC5/ADC.c ****             default:
1679:.\Generated_Source\PSoC5/ADC.c ****                 flash = 0;
 128              		.loc 1 1679 0
 129 005e 0020     		movs	r0, #0
 130              	.L3:
 131              	.LVL18:
1680:.\Generated_Source\PSoC5/ADC.c ****                 break;
1681:.\Generated_Source\PSoC5/ADC.c ****         }
1682:.\Generated_Source\PSoC5/ADC.c **** 
1683:.\Generated_Source\PSoC5/ADC.c ****         /* Add two values */
1684:.\Generated_Source\PSoC5/ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 132              		.loc 1 1684 0
 133 0060 40B2     		sxtb	r0, r0
 134              	.LVL19:
 135 0062 01EB4011 		add	r1, r1, r0, lsl #5
 136              	.LVL20:
1685:.\Generated_Source\PSoC5/ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 137              		.loc 1 1685 0
 138 0066 01FB02F2 		mul	r2, r1, r2
 139              	.LVL21:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 33


1686:.\Generated_Source\PSoC5/ADC.c ****         gcorValue = (uint16)(gcorTmp / ADC_IDEAL_GAIN_CONST);
 140              		.loc 1 1686 0
 141 006a D20B     		lsrs	r2, r2, #15
 142              	.LVL22:
 143 006c 90B2     		uxth	r0, r2
 144              	.LVL23:
1687:.\Generated_Source\PSoC5/ADC.c **** 
1688:.\Generated_Source\PSoC5/ADC.c ****         if (resolution < (ADC_MAX_GVAL - 1u))
 145              		.loc 1 1688 0
 146 006e 0D2B     		cmp	r3, #13
 147 0070 0AD8     		bhi	.L13
1689:.\Generated_Source\PSoC5/ADC.c ****         {
1690:.\Generated_Source\PSoC5/ADC.c ****             gcorValue = (gcorValue >> (ADC_MAX_GVAL - (resolution + 1u)));
 148              		.loc 1 1690 0
 149 0072 C3F10E01 		rsb	r1, r3, #14
 150              	.LVL24:
 151 0076 0841     		asrs	r0, r0, r1
 152 0078 80B2     		uxth	r0, r0
 153              	.LVL25:
1691:.\Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = (resolution + 1u);
 154              		.loc 1 1691 0
 155 007a 134A     		ldr	r2, .L17+32
 156 007c 02EB8402 		add	r2, r2, r4, lsl #2
 157 0080 0133     		adds	r3, r3, #1
 158              	.LVL26:
 159 0082 02F8023C 		strb	r3, [r2, #-2]
 160 0086 05E0     		b	.L14
 161              	.LVL27:
 162              	.L13:
1692:.\Generated_Source\PSoC5/ADC.c ****         }
1693:.\Generated_Source\PSoC5/ADC.c ****         else
1694:.\Generated_Source\PSoC5/ADC.c ****         {
1695:.\Generated_Source\PSoC5/ADC.c ****             /* Use all 16 bits */
1696:.\Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = ADC_MAX_GVAL;
 163              		.loc 1 1696 0
 164 0088 0F4B     		ldr	r3, .L17+32
 165              	.LVL28:
 166 008a 03EB8403 		add	r3, r3, r4, lsl #2
 167 008e 0F22     		movs	r2, #15
 168              	.LVL29:
 169 0090 03F8022C 		strb	r2, [r3, #-2]
 170              	.LVL30:
 171              	.L14:
1697:.\Generated_Source\PSoC5/ADC.c ****         }
1698:.\Generated_Source\PSoC5/ADC.c **** 
1699:.\Generated_Source\PSoC5/ADC.c ****         /* Save the gain correction register value */
1700:.\Generated_Source\PSoC5/ADC.c ****         ADC_gcor[config - 1u].gcor = gcorValue;
 172              		.loc 1 1700 0 discriminator 1
 173 0094 013C     		subs	r4, r4, #1
 174 0096 0C4B     		ldr	r3, .L17+32
 175 0098 23F82400 		strh	r0, [r3, r4, lsl #2]	@ movhi
 176 009c 38BD     		pop	{r3, r4, r5, pc}
 177              	.LVL31:
 178              	.L2:
1701:.\Generated_Source\PSoC5/ADC.c ****     }
1702:.\Generated_Source\PSoC5/ADC.c ****     else
1703:.\Generated_Source\PSoC5/ADC.c ****     {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 34


1704:.\Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1705:.\Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 179              		.loc 1 1705 0 discriminator 1
 180 009e 0020     		movs	r0, #0
 181              	.LVL32:
 182 00a0 FFF7FEFF 		bl	CyHalt
 183              	.LVL33:
 184 00a4 38BD     		pop	{r3, r4, r5, pc}
 185              	.LVL34:
 186              	.L18:
 187 00a6 00BF     		.align	2
 188              	.L17:
 189 00a8 18010049 		.word	1224737048
 190 00ac 1C010049 		.word	1224737052
 191 00b0 19010049 		.word	1224737049
 192 00b4 1D010049 		.word	1224737053
 193 00b8 1A010049 		.word	1224737050
 194 00bc 1E010049 		.word	1224737054
 195 00c0 1B010049 		.word	1224737051
 196 00c4 1F010049 		.word	1224737055
 197 00c8 00000000 		.word	.LANCHOR0
 198              		.cfi_endproc
 199              	.LFE21:
 200              		.size	ADC_GainCompensation, .-ADC_GainCompensation
 201              		.section	.text.ADC_SetDSMRef0Reg,"ax",%progbits
 202              		.align	2
 203              		.thumb
 204              		.thumb_func
 205              		.type	ADC_SetDSMRef0Reg, %function
 206              	ADC_SetDSMRef0Reg:
 207              	.LFB22:
1706:.\Generated_Source\PSoC5/ADC.c ****     }
1707:.\Generated_Source\PSoC5/ADC.c **** }
1708:.\Generated_Source\PSoC5/ADC.c **** 
1709:.\Generated_Source\PSoC5/ADC.c **** 
1710:.\Generated_Source\PSoC5/ADC.c **** /******************************************************************************
1711:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetDSMRef0Reg(uint8)
1712:.\Generated_Source\PSoC5/ADC.c **** ******************************************************************************
1713:.\Generated_Source\PSoC5/ADC.c **** *
1714:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1715:.\Generated_Source\PSoC5/ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1716:.\Generated_Source\PSoC5/ADC.c **** *
1717:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1718:.\Generated_Source\PSoC5/ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1719:.\Generated_Source\PSoC5/ADC.c **** *
1720:.\Generated_Source\PSoC5/ADC.c **** * Return:
1721:.\Generated_Source\PSoC5/ADC.c **** *  None
1722:.\Generated_Source\PSoC5/ADC.c **** *
1723:.\Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
1724:.\Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) 
1725:.\Generated_Source\PSoC5/ADC.c **** {
 208              		.loc 1 1725 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL35:
 213 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 35


 214              		.cfi_def_cfa_offset 24
 215              		.cfi_offset 3, -24
 216              		.cfi_offset 4, -20
 217              		.cfi_offset 5, -16
 218              		.cfi_offset 6, -12
 219              		.cfi_offset 7, -8
 220              		.cfi_offset 14, -4
 221 0002 0746     		mov	r7, r0
1726:.\Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
1727:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 222              		.loc 1 1727 0
 223 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 224              	.LVL36:
 225 0008 0646     		mov	r6, r0
 226              	.LVL37:
1728:.\Generated_Source\PSoC5/ADC.c **** 
1729:.\Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1730:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= (ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 227              		.loc 1 1730 0
 228 000a 0D4D     		ldr	r5, .L20
 229 000c 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 230 000e 43F00303 		orr	r3, r3, #3
 231 0012 2B70     		strb	r3, [r5]
1731:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= (ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 232              		.loc 1 1731 0
 233 0014 0B4C     		ldr	r4, .L20+4
 234 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 235 0018 43F00303 		orr	r3, r3, #3
 236 001c 2370     		strb	r3, [r4]
1732:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG = value;
 237              		.loc 1 1732 0
 238 001e 0A4B     		ldr	r3, .L20+8
 239 0020 1F70     		strb	r7, [r3]
1733:.\Generated_Source\PSoC5/ADC.c **** 
1734:.\Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
1735:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 240              		.loc 1 1735 0
 241 0022 0320     		movs	r0, #3
 242              	.LVL38:
 243 0024 FFF7FEFF 		bl	CyDelayUs
 244              	.LVL39:
1736:.\Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
1737:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~(ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 245              		.loc 1 1737 0
 246 0028 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 247 002a 03F0FC03 		and	r3, r3, #252
 248 002e 2B70     		strb	r3, [r5]
1738:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~(ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 249              		.loc 1 1738 0
 250 0030 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 251 0032 03F0FC03 		and	r3, r3, #252
 252 0036 2370     		strb	r3, [r4]
1739:.\Generated_Source\PSoC5/ADC.c **** 
1740:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 253              		.loc 1 1740 0
 254 0038 3046     		mov	r0, r6
 255 003a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 36


 256              	.LVL40:
 257 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 258              	.LVL41:
 259              	.L21:
 260              		.align	2
 261              	.L20:
 262 0040 F8460040 		.word	1073759992
 263 0044 F9460040 		.word	1073759993
 264 0048 92580040 		.word	1073764498
 265              		.cfi_endproc
 266              	.LFE22:
 267              		.size	ADC_SetDSMRef0Reg, .-ADC_SetDSMRef0Reg
 268              		.section	.text.ADC_InitConfig,"ax",%progbits
 269              		.align	2
 270              		.thumb
 271              		.thumb_func
 272              		.type	ADC_InitConfig, %function
 273              	ADC_InitConfig:
 274              	.LFB19:
1243:.\Generated_Source\PSoC5/ADC.c **** {
 275              		.loc 1 1243 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279              	.LVL42:
 280 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 281              		.cfi_def_cfa_offset 24
 282              		.cfi_offset 4, -24
 283              		.cfi_offset 5, -20
 284              		.cfi_offset 6, -16
 285              		.cfi_offset 7, -12
 286              		.cfi_offset 8, -8
 287              		.cfi_offset 14, -4
1244:.\Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
 288              		.loc 1 1244 0
 289 0004 0022     		movs	r2, #0
 290 0006 324B     		ldr	r3, .L24
 291 0008 1A71     		strb	r2, [r3, #4]
1246:.\Generated_Source\PSoC5/ADC.c ****     if (config == 1u)
 292              		.loc 1 1246 0
 293 000a 0128     		cmp	r0, #1
 294 000c 5ED1     		bne	.L22
1249:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_CR_REG      = ADC_CFG1_DEC_CR;
 295              		.loc 1 1249 0
 296 000e 3022     		movs	r2, #48
 297 0010 304B     		ldr	r3, .L24+4
 298 0012 1A70     		strb	r2, [r3]
1250:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
 299              		.loc 1 1250 0
 300 0014 0422     		movs	r2, #4
 301 0016 0233     		adds	r3, r3, #2
 302 0018 1A70     		strb	r2, [r3]
1251:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
 303              		.loc 1 1251 0
 304 001a 0626     		movs	r6, #6
 305 001c 0133     		adds	r3, r3, #1
 306 001e 1E70     		strb	r6, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 37


1252:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
 307              		.loc 1 1252 0
 308 0020 0024     		movs	r4, #0
 309 0022 0133     		adds	r3, r3, #1
 310 0024 1C70     		strb	r4, [r3]
1253:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
 311              		.loc 1 1253 0
 312 0026 0133     		adds	r3, r3, #1
 313 0028 1C70     		strb	r4, [r3]
1254:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
 314              		.loc 1 1254 0
 315 002a 0F22     		movs	r2, #15
 316 002c 0133     		adds	r3, r3, #1
 317 002e 1A70     		strb	r2, [r3]
1255:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
 318              		.loc 1 1255 0
 319 0030 0233     		adds	r3, r3, #2
 320 0032 1C70     		strb	r4, [r3]
1256:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
 321              		.loc 1 1256 0
 322 0034 0133     		adds	r3, r3, #1
 323 0036 1C70     		strb	r4, [r3]
1257:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
 324              		.loc 1 1257 0
 325 0038 0133     		adds	r3, r3, #1
 326 003a 1C70     		strb	r4, [r3]
1258:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
 327              		.loc 1 1258 0
 328 003c 0125     		movs	r5, #1
 329 003e 0A33     		adds	r3, r3, #10
 330 0040 1D70     		strb	r5, [r3]
1260:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR4_REG     = ADC_CFG1_DSM_CR4;
 331              		.loc 1 1260 0
 332 0042 1422     		movs	r2, #20
 333 0044 03F52763 		add	r3, r3, #2672
 334 0048 1A70     		strb	r2, [r3]
1261:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
 335              		.loc 1 1261 0
 336 004a 4FF00508 		mov	r8, #5
 337 004e 0133     		adds	r3, r3, #1
 338 0050 83F80080 		strb	r8, [r3]
1262:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
 339              		.loc 1 1262 0
 340 0054 1622     		movs	r2, #22
 341 0056 0133     		adds	r3, r3, #1
 342 0058 1A70     		strb	r2, [r3]
1263:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
 343              		.loc 1 1263 0
 344 005a 0133     		adds	r3, r3, #1
 345 005c 1C70     		strb	r4, [r3]
1264:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
 346              		.loc 1 1264 0
 347 005e 4422     		movs	r2, #68
 348 0060 0333     		adds	r3, r3, #3
 349 0062 1A70     		strb	r2, [r3]
1265:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
 350              		.loc 1 1265 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 38


 351 0064 4822     		movs	r2, #72
 352 0066 0133     		adds	r3, r3, #1
 353 0068 1A70     		strb	r2, [r3]
1266:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
 354              		.loc 1 1266 0
 355 006a 0133     		adds	r3, r3, #1
 356 006c 1D70     		strb	r5, [r3]
1267:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
 357              		.loc 1 1267 0
 358 006e 0227     		movs	r7, #2
 359 0070 0233     		adds	r3, r3, #2
 360 0072 1F70     		strb	r7, [r3]
1268:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
 361              		.loc 1 1268 0
 362 0074 2222     		movs	r2, #34
 363 0076 0133     		adds	r3, r3, #1
 364 0078 1A70     		strb	r2, [r3]
1269:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
 365              		.loc 1 1269 0
 366 007a 2822     		movs	r2, #40
 367 007c 0133     		adds	r3, r3, #1
 368 007e 1A70     		strb	r2, [r3]
1270:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
 369              		.loc 1 1270 0
 370 0080 EB22     		movs	r2, #235
 371 0082 0133     		adds	r3, r3, #1
 372 0084 1A70     		strb	r2, [r3]
1272:.\Generated_Source\PSoC5/ADC.c ****         ADC_SetDSMRef0Reg(ADC_CFG1_DSM_REF0);
 373              		.loc 1 1272 0
 374 0086 5220     		movs	r0, #82
 375              	.LVL43:
 376 0088 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
 377              	.LVL44:
1273:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
 378              		.loc 1 1273 0
 379 008c 5822     		movs	r2, #88
 380 008e 124B     		ldr	r3, .L24+8
 381 0090 1A70     		strb	r2, [r3]
1274:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
 382              		.loc 1 1274 0
 383 0092 0133     		adds	r3, r3, #1
 384 0094 1C70     		strb	r4, [r3]
1276:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF0_REG    = ADC_CFG1_DSM_BUF0;
 385              		.loc 1 1276 0
 386 0096 0533     		adds	r3, r3, #5
 387 0098 83F80080 		strb	r8, [r3]
1277:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
 388              		.loc 1 1277 0
 389 009c 0133     		adds	r3, r3, #1
 390 009e 1F70     		strb	r7, [r3]
1278:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
 391              		.loc 1 1278 0
 392 00a0 0133     		adds	r3, r3, #1
 393 00a2 1C70     		strb	r4, [r3]
1279:.\Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
 394              		.loc 1 1279 0
 395 00a4 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 39


 396 00a6 1C70     		strb	r4, [r3]
1288:.\Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(0u);
 397              		.loc 1 1288 0
 398 00a8 2046     		mov	r0, r4
 399 00aa FFF7FEFF 		bl	ADC_AMux_Select
 400              	.LVL45:
1300:.\Generated_Source\PSoC5/ADC.c ****         ADC_CountsPerVolt = (int32)ADC_CFG1_COUNTS_PER_VOLT;
 401              		.loc 1 1300 0
 402 00ae 3322     		movs	r2, #51
 403 00b0 0A4B     		ldr	r3, .L24+12
 404 00b2 1A60     		str	r2, [r3]
1302:.\Generated_Source\PSoC5/ADC.c ****         ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG1_CP_CLK_DIVIDER, 1u);
 405              		.loc 1 1302 0
 406 00b4 3046     		mov	r0, r6
 407 00b6 2946     		mov	r1, r5
 408 00b8 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
 409              	.LVL46:
1306:.\Generated_Source\PSoC5/ADC.c ****             ADC_theACLK_SetDividerRegister(ADC_CFG1_ADC_CLK_DIVIDER, 1u);
 410              		.loc 1 1306 0
 411 00bc 1C20     		movs	r0, #28
 412 00be 2946     		mov	r1, r5
 413 00c0 FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
 414              	.LVL47:
1311:.\Generated_Source\PSoC5/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR1);
 415              		.loc 1 1311 0
 416 00c4 1D20     		movs	r0, #29
 417 00c6 0649     		ldr	r1, .L24+16
 418 00c8 FFF7FEFF 		bl	CyIntSetVector
 419              	.LVL48:
 420              	.L22:
 421 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 422              	.L25:
 423              		.align	2
 424              	.L24:
 425 00d0 00000000 		.word	.LANCHOR0
 426 00d4 004E0040 		.word	1073761792
 427 00d8 94580040 		.word	1073764500
 428 00dc 00000000 		.word	ADC_CountsPerVolt
 429 00e0 00000000 		.word	ADC_ISR1
 430              		.cfi_endproc
 431              	.LFE19:
 432              		.size	ADC_InitConfig, .-ADC_InitConfig
 433              		.section	.text.ADC_Init,"ax",%progbits
 434              		.align	2
 435              		.global	ADC_Init
 436              		.thumb
 437              		.thumb_func
 438              		.type	ADC_Init, %function
 439              	ADC_Init:
 440              	.LFB0:
  92:.\Generated_Source\PSoC5/ADC.c **** {
 441              		.loc 1 92 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 446              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 40


 447              		.cfi_offset 4, -20
 448              		.cfi_offset 5, -16
 449              		.cfi_offset 6, -12
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 83B0     		sub	sp, sp, #12
 453              		.cfi_def_cfa_offset 32
  94:.\Generated_Source\PSoC5/ADC.c ****     ADC_Config = 1u;
 454              		.loc 1 94 0
 455 0004 294D     		ldr	r5, .L27
 456 0006 0127     		movs	r7, #1
 457 0008 2F70     		strb	r7, [r5]
  95:.\Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
 458              		.loc 1 95 0
 459 000a 294E     		ldr	r6, .L27+4
 460 000c 0024     		movs	r4, #0
 461 000e 7471     		strb	r4, [r6, #5]
  97:.\Generated_Source\PSoC5/ADC.c ****     ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
 462              		.loc 1 97 0
 463 0010 1020     		movs	r0, #16
 464 0012 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetModeRegister
 465              	.LVL49:
 101:.\Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
 466              		.loc 1 101 0
 467 0016 1020     		movs	r0, #16
 468 0018 FFF7FEFF 		bl	ADC_theACLK_SetModeRegister
 469              	.LVL50:
 106:.\Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 470              		.loc 1 106 0
 471 001c 1D20     		movs	r0, #29
 472 001e 0721     		movs	r1, #7
 473 0020 FFF7FEFF 		bl	CyIntSetPriority
 474              	.LVL51:
 110:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM0_REG    = ADC_CFG1_DSM_DEM0;
 475              		.loc 1 110 0
 476 0024 0422     		movs	r2, #4
 477 0026 234B     		ldr	r3, .L27+8
 478 0028 1A70     		strb	r2, [r3]
 111:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
 479              		.loc 1 111 0
 480 002a 0133     		adds	r3, r3, #1
 481 002c 1C70     		strb	r4, [r3]
 112:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
 482              		.loc 1 112 0
 483 002e 0733     		adds	r3, r3, #7
 484 0030 1C70     		strb	r4, [r3]
 113:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 485              		.loc 1 113 0
 486 0032 03F26923 		addw	r3, r3, #617
 487 0036 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 488 0038 42F01802 		orr	r2, r2, #24
 489 003c 1A70     		strb	r2, [r3]
 114:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 490              		.loc 1 114 0
 491 003e A3F51D73 		sub	r3, r3, #628
 492 0042 1C70     		strb	r4, [r3]
 116:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT0_REG    = ADC_CFG1_DSM_OUT0;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 41


 493              		.loc 1 116 0
 494 0044 03F2F523 		addw	r3, r3, #757
 495 0048 1C70     		strb	r4, [r3]
 117:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 496              		.loc 1 117 0
 497 004a 0133     		adds	r3, r3, #1
 498 004c 1C70     		strb	r4, [r3]
 119:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR0_REG     = ADC_CFG1_DSM_CR0;
 499              		.loc 1 119 0
 500 004e 0A22     		movs	r2, #10
 501 0050 A3F20933 		subw	r3, r3, #777
 502 0054 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 503              		.loc 1 120 0
 504 0056 0133     		adds	r3, r3, #1
 505 0058 1C70     		strb	r4, [r3]
 124:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     = ADC_CFG1_DSM_CR3;
 506              		.loc 1 124 0
 507 005a 0233     		adds	r3, r3, #2
 508 005c 1C70     		strb	r4, [r3]
 126:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR8_REG     = ADC_CFG1_DSM_CR8;
 509              		.loc 1 126 0
 510 005e 1222     		movs	r2, #18
 511 0060 0533     		adds	r3, r3, #5
 512 0062 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 513              		.loc 1 127 0
 514 0064 1322     		movs	r2, #19
 515 0066 0133     		adds	r3, r3, #1
 516 0068 1A70     		strb	r2, [r3]
 128:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 517              		.loc 1 128 0
 518 006a 0433     		adds	r3, r3, #4
 519 006c 1C70     		strb	r4, [r3]
 130:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG      = ADC_CFG1_DEC_SR;
 520              		.loc 1 130 0
 521 006e 1422     		movs	r2, #20
 522 0070 A3F68C23 		subw	r3, r3, #2700
 523 0074 1A70     		strb	r2, [r3]
 133:.\Generated_Source\PSoC5/ADC.c ****     ADC_GainCompensation(ADC_CFG1_INPUT_RANGE,
 524              		.loc 1 133 0
 525 0076 0097     		str	r7, [sp]
 526 0078 0220     		movs	r0, #2
 527 007a 48F66B51 		movw	r1, #36203
 528 007e 4FF40042 		mov	r2, #32768
 529 0082 0823     		movs	r3, #8
 530 0084 FFF7FEFF 		bl	ADC_GainCompensation
 531              	.LVL52:
 161:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_GVAL_REG = ADC_gcor[ADC_Config - 1u].gval;
 532              		.loc 1 161 0
 533 0088 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 534 008a 06EB8303 		add	r3, r6, r3, lsl #2
 535 008e 13F8022C 		ldrb	r2, [r3, #-2]	@ zero_extendqisi2
 536 0092 094B     		ldr	r3, .L27+12
 537 0094 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 538              		.loc 1 162 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 42


 539 0096 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 540 0098 013B     		subs	r3, r3, #1
 541 009a 36F82320 		ldrh	r2, [r6, r3, lsl #2]
 542 009e 074B     		ldr	r3, .L27+16
 543 00a0 1A80     		strh	r2, [r3]	@ movhi
 165:.\Generated_Source\PSoC5/ADC.c ****     ADC_InitConfig(ADC_Config);
 544              		.loc 1 165 0
 545 00a2 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 546 00a4 FFF7FEFF 		bl	ADC_InitConfig
 547              	.LVL53:
 166:.\Generated_Source\PSoC5/ADC.c **** }
 548              		.loc 1 166 0
 549 00a8 03B0     		add	sp, sp, #12
 550              		@ sp needed
 551 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 552              	.L28:
 553              		.align	2
 554              	.L27:
 555 00ac 00000000 		.word	.LANCHOR1
 556 00b0 00000000 		.word	.LANCHOR0
 557 00b4 96580040 		.word	1073764502
 558 00b8 0E4E0040 		.word	1073761806
 559 00bc 0C4E0040 		.word	1073761804
 560              		.cfi_endproc
 561              	.LFE0:
 562              		.size	ADC_Init, .-ADC_Init
 563              		.section	.text.ADC_Enable,"ax",%progbits
 564              		.align	2
 565              		.global	ADC_Enable
 566              		.thumb
 567              		.thumb_func
 568              		.type	ADC_Enable, %function
 569              	ADC_Enable:
 570              	.LFB1:
 185:.\Generated_Source\PSoC5/ADC.c **** {
 571              		.loc 1 185 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575 0000 70B5     		push	{r4, r5, r6, lr}
 576              		.cfi_def_cfa_offset 16
 577              		.cfi_offset 4, -16
 578              		.cfi_offset 5, -12
 579              		.cfi_offset 6, -8
 580              		.cfi_offset 14, -4
 188:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 581              		.loc 1 188 0
 582 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 583              	.LVL54:
 584 0006 0646     		mov	r6, r0
 585              	.LVL55:
 191:.\Generated_Source\PSoC5/ADC.c ****     config = ADC_Config;
 586              		.loc 1 191 0
 587 0008 2B4B     		ldr	r3, .L30
 588 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 589              	.LVL56:
 194:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG |= ADC_ACT_PWR_DEC_EN;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 43


 590              		.loc 1 194 0
 591 000c 2B4B     		ldr	r3, .L30+4
 592 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 593 0010 42F00102 		orr	r2, r2, #1
 594 0014 1A70     		strb	r2, [r3]
 195:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
 595              		.loc 1 195 0
 596 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 597 0018 42F01002 		orr	r2, r2, #16
 598 001c 1A70     		strb	r2, [r3]
 198:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG |= ADC_STBY_PWR_DEC_EN;
 599              		.loc 1 198 0
 600 001e 1033     		adds	r3, r3, #16
 601 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 602 0022 42F00102 		orr	r2, r2, #1
 603 0026 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 604              		.loc 1 199 0
 605 0028 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 606 002a 42F01002 		orr	r2, r2, #16
 607 002e 1A70     		strb	r2, [r3]
 202:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 608              		.loc 1 202 0
 609 0030 234D     		ldr	r5, .L30+8
 610 0032 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 611 0034 43F00203 		orr	r3, r3, #2
 612 0038 2B70     		strb	r3, [r5]
 203:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 613              		.loc 1 203 0
 614 003a 224C     		ldr	r4, .L30+12
 615 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 616 003e 43F00203 		orr	r3, r3, #2
 617 0042 2370     		strb	r3, [r4]
 205:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG |= (ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 618              		.loc 1 205 0
 619 0044 204B     		ldr	r3, .L30+16
 620 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 621 0048 42F00302 		orr	r2, r2, #3
 622 004c 1A70     		strb	r2, [r3]
 271:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 623              		.loc 1 271 0
 624 004e 0320     		movs	r0, #3
 625              	.LVL57:
 626 0050 FFF7FEFF 		bl	CyDelayUs
 627              	.LVL58:
 274:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 628              		.loc 1 274 0
 629 0054 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 630 0056 03F0FD03 		and	r3, r3, #253
 631 005a 2B70     		strb	r3, [r5]
 275:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 632              		.loc 1 275 0
 633 005c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 634 005e 03F0FD03 		and	r3, r3, #253
 635 0062 2370     		strb	r3, [r4]
 278:.\Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG  |= ( ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 636              		.loc 1 278 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 44


 637 0064 194B     		ldr	r3, .L30+20
 638 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 639 0068 42F00602 		orr	r2, r2, #6
 640 006c 1A70     		strb	r2, [r3]
 281:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG = ADC_CFG1_DSM_CR2;
 641              		.loc 1 281 0
 642 006e 7A22     		movs	r2, #122
 643 0070 0B33     		adds	r3, r3, #11
 644 0072 1A70     		strb	r2, [r3]
 285:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 645              		.loc 1 285 0
 646 0074 A3F5A753 		sub	r3, r3, #5344
 647 0078 013B     		subs	r3, r3, #1
 648 007a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 649 007c 42F00102 		orr	r2, r2, #1
 650 0080 1A70     		strb	r2, [r3]
 286:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 651              		.loc 1 286 0
 652 0082 1033     		adds	r3, r3, #16
 653 0084 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 654 0086 42F00102 		orr	r2, r2, #1
 655 008a 1A70     		strb	r2, [r3]
 290:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 656              		.loc 1 290 0
 657 008c 0F3B     		subs	r3, r3, #15
 658 008e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 659 0090 42F00102 		orr	r2, r2, #1
 660 0094 1A70     		strb	r2, [r3]
 291:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 661              		.loc 1 291 0
 662 0096 1033     		adds	r3, r3, #16
 663 0098 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 664 009a 42F00102 		orr	r2, r2, #1
 665 009e 1A70     		strb	r2, [r3]
 295:.\Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
 666              		.loc 1 295 0
 667 00a0 4FF00053 		mov	r3, #536870912
 668 00a4 0A4A     		ldr	r2, .L30+24
 669 00a6 1360     		str	r3, [r2]
 297:.\Generated_Source\PSoC5/ADC.c ****         CyIntEnable(ADC_INTC_NUMBER);
 670              		.loc 1 297 0
 671 00a8 A2F5C072 		sub	r2, r2, #384
 672 00ac 1360     		str	r3, [r2]
 300:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 673              		.loc 1 300 0
 674 00ae 3046     		mov	r0, r6
 675 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 676              	.LVL59:
 677 00b4 70BD     		pop	{r4, r5, r6, pc}
 678              	.LVL60:
 679              	.L31:
 680 00b6 00BF     		.align	2
 681              	.L30:
 682 00b8 00000000 		.word	.LANCHOR1
 683 00bc AA430040 		.word	1073759146
 684 00c0 F8460040 		.word	1073759992
 685 00c4 F9460040 		.word	1073759993
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 45


 686 00c8 91580040 		.word	1073764497
 687 00cc 77580040 		.word	1073764471
 688 00d0 80E200E0 		.word	-536812928
 689              		.cfi_endproc
 690              	.LFE1:
 691              		.size	ADC_Enable, .-ADC_Enable
 692              		.section	.text.ADC_Start,"ax",%progbits
 693              		.align	2
 694              		.global	ADC_Start
 695              		.thumb
 696              		.thumb_func
 697              		.type	ADC_Start, %function
 698              	ADC_Start:
 699              	.LFB2:
 330:.\Generated_Source\PSoC5/ADC.c **** {
 700              		.loc 1 330 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704 0000 08B5     		push	{r3, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 3, -8
 707              		.cfi_offset 14, -4
 331:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 708              		.loc 1 331 0
 709 0002 084B     		ldr	r3, .L35
 710 0004 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 711 0006 4BB9     		cbnz	r3, .L33
 333:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_started == 0u)
 712              		.loc 1 333 0
 713 0008 064B     		ldr	r3, .L35
 714 000a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 715 000c 13F0FF0F 		tst	r3, #255
 716 0010 01D1     		bne	.L34
 335:.\Generated_Source\PSoC5/ADC.c ****             ADC_Init();
 717              		.loc 1 335 0
 718 0012 FFF7FEFF 		bl	ADC_Init
 719              	.LVL61:
 720              	.L34:
 337:.\Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
 721              		.loc 1 337 0
 722 0016 0122     		movs	r2, #1
 723 0018 024B     		ldr	r3, .L35
 724 001a 9A71     		strb	r2, [r3, #6]
 725              	.L33:
 341:.\Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
 726              		.loc 1 341 0
 727 001c FFF7FEFF 		bl	ADC_Enable
 728              	.LVL62:
 729 0020 08BD     		pop	{r3, pc}
 730              	.L36:
 731 0022 00BF     		.align	2
 732              	.L35:
 733 0024 00000000 		.word	.LANCHOR0
 734              		.cfi_endproc
 735              	.LFE2:
 736              		.size	ADC_Start, .-ADC_Start
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 46


 737              		.section	.text.ADC_Stop,"ax",%progbits
 738              		.align	2
 739              		.global	ADC_Stop
 740              		.thumb
 741              		.thumb_func
 742              		.type	ADC_Stop, %function
 743              	ADC_Stop:
 744              	.LFB3:
 363:.\Generated_Source\PSoC5/ADC.c **** {
 745              		.loc 1 363 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 0
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749 0000 70B5     		push	{r4, r5, r6, lr}
 750              		.cfi_def_cfa_offset 16
 751              		.cfi_offset 4, -16
 752              		.cfi_offset 5, -12
 753              		.cfi_offset 6, -8
 754              		.cfi_offset 14, -4
 365:.\Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 755              		.loc 1 365 0
 756 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 757              	.LVL63:
 758 0006 0646     		mov	r6, r0
 759              	.LVL64:
 368:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 760              		.loc 1 368 0
 761 0008 314B     		ldr	r3, .L38
 762 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 763 000c 02F0FE02 		and	r2, r2, #254
 764 0010 1A70     		strb	r2, [r3]
 369:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 765              		.loc 1 369 0
 766 0012 0133     		adds	r3, r3, #1
 767 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 768 0016 42F00402 		orr	r2, r2, #4
 769 001a 1A70     		strb	r2, [r3]
 373:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 770              		.loc 1 373 0
 771 001c 2D4D     		ldr	r5, .L38+4
 772 001e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 773 0020 43F00203 		orr	r3, r3, #2
 774 0024 2B70     		strb	r3, [r5]
 374:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 775              		.loc 1 374 0
 776 0026 2C4C     		ldr	r4, .L38+8
 777 0028 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 778 002a 43F00203 		orr	r3, r3, #2
 779 002e 2370     		strb	r3, [r4]
 376:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG &= (uint8)~(ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 780              		.loc 1 376 0
 781 0030 2A4B     		ldr	r3, .L38+12
 782 0032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 783 0034 02F0FC02 		and	r2, r2, #252
 784 0038 1A70     		strb	r2, [r3]
 377:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 785              		.loc 1 377 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 47


 786 003a 0133     		adds	r3, r3, #1
 787 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 788 003e 02F0F702 		and	r2, r2, #247
 789 0042 1A70     		strb	r2, [r3]
 380:.\Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 790              		.loc 1 380 0
 791 0044 0320     		movs	r0, #3
 792              	.LVL65:
 793 0046 FFF7FEFF 		bl	CyDelayUs
 794              	.LVL66:
 383:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 795              		.loc 1 383 0
 796 004a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 797 004c 03F0FD03 		and	r3, r3, #253
 798 0050 2B70     		strb	r3, [r5]
 384:.\Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 799              		.loc 1 384 0
 800 0052 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 801 0054 03F0FD03 		and	r3, r3, #253
 802 0058 2370     		strb	r3, [r4]
 387:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG &= (uint8)~ADC_ACT_PWR_DSM_EN;
 803              		.loc 1 387 0
 804 005a 214B     		ldr	r3, .L38+16
 805 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 806 005e 02F0EF02 		and	r2, r2, #239
 807 0062 1A70     		strb	r2, [r3]
 390:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG &= (uint8)~ADC_ACT_PWR_DEC_EN;
 808              		.loc 1 390 0
 809 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 810 0066 02F0FE02 		and	r2, r2, #254
 811 006a 1A70     		strb	r2, [r3]
 393:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG &= (uint8)~ADC_STBY_PWR_DEC_EN;
 812              		.loc 1 393 0
 813 006c 1033     		adds	r3, r3, #16
 814 006e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 815 0070 02F0FE02 		and	r2, r2, #254
 816 0074 1A70     		strb	r2, [r3]
 394:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 817              		.loc 1 394 0
 818 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 819 0078 02F0EF02 		and	r2, r2, #239
 820 007c 1A70     		strb	r2, [r3]
 397:.\Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG &= (uint8)~(ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 821              		.loc 1 397 0
 822 007e 03F5A553 		add	r3, r3, #5280
 823 0082 1D33     		adds	r3, r3, #29
 824 0084 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 825 0086 02F0F902 		and	r2, r2, #249
 826 008a 1A70     		strb	r2, [r3]
 401:.\Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 827              		.loc 1 401 0
 828 008c A3F5A653 		sub	r3, r3, #5312
 829 0090 163B     		subs	r3, r3, #22
 830 0092 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 831 0094 02F0FE02 		and	r2, r2, #254
 832 0098 1A70     		strb	r2, [r3]
 402:.\Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 48


 833              		.loc 1 402 0
 834 009a 1033     		adds	r3, r3, #16
 835 009c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 836 009e 02F0FE02 		and	r2, r2, #254
 837 00a2 1A70     		strb	r2, [r3]
 406:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG &= (uint8)~ADC_DSM_MOD_CHOP_EN;
 838              		.loc 1 406 0
 839 00a4 03F5A653 		add	r3, r3, #5312
 840 00a8 1133     		adds	r3, r3, #17
 841 00aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 842 00ac 02F0F702 		and	r2, r2, #247
 843 00b0 1A70     		strb	r2, [r3]
 408:.\Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 844              		.loc 1 408 0
 845 00b2 A3F5A753 		sub	r3, r3, #5344
 846 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 847 00b8 02F0FE02 		and	r2, r2, #254
 848 00bc 1A70     		strb	r2, [r3]
 409:.\Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 849              		.loc 1 409 0
 850 00be 1033     		adds	r3, r3, #16
 851 00c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 852 00c2 02F0FE02 		and	r2, r2, #254
 853 00c6 1A70     		strb	r2, [r3]
 411:.\Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 854              		.loc 1 411 0
 855 00c8 3046     		mov	r0, r6
 856 00ca FFF7FEFF 		bl	CyExitCriticalSection
 857              	.LVL67:
 858 00ce 70BD     		pop	{r4, r5, r6, pc}
 859              	.LVL68:
 860              	.L39:
 861              		.align	2
 862              	.L38:
 863 00d0 004E0040 		.word	1073761792
 864 00d4 F8460040 		.word	1073759992
 865 00d8 F9460040 		.word	1073759993
 866 00dc 91580040 		.word	1073764497
 867 00e0 AA430040 		.word	1073759146
 868              		.cfi_endproc
 869              	.LFE3:
 870              		.size	ADC_Stop, .-ADC_Stop
 871              		.section	.text.ADC_SetBufferGain,"ax",%progbits
 872              		.align	2
 873              		.global	ADC_SetBufferGain
 874              		.thumb
 875              		.thumb_func
 876              		.type	ADC_SetBufferGain, %function
 877              	ADC_SetBufferGain:
 878              	.LFB4:
 430:.\Generated_Source\PSoC5/ADC.c **** {
 879              		.loc 1 430 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              		@ link register save eliminated.
 884              	.LVL69:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 49


 432:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DSM_BUF1_REG & (uint8)~ADC_DSM_GAIN_MASK;
 885              		.loc 1 432 0
 886 0000 044B     		ldr	r3, .L41
 887 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 888 0004 02F0F302 		and	r2, r2, #243
 889              	.LVL70:
 433:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 890              		.loc 1 433 0
 891 0008 8000     		lsls	r0, r0, #2
 892              	.LVL71:
 893 000a 00F00C00 		and	r0, r0, #12
 894 000e 0243     		orrs	r2, r2, r0
 895              	.LVL72:
 434:.\Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 896              		.loc 1 434 0
 897 0010 1A70     		strb	r2, [r3]
 898 0012 7047     		bx	lr
 899              	.L42:
 900              		.align	2
 901              	.L41:
 902 0014 9B580040 		.word	1073764507
 903              		.cfi_endproc
 904              	.LFE4:
 905              		.size	ADC_SetBufferGain, .-ADC_SetBufferGain
 906              		.section	.text.ADC_SetCoherency,"ax",%progbits
 907              		.align	2
 908              		.global	ADC_SetCoherency
 909              		.thumb
 910              		.thumb_func
 911              		.type	ADC_SetCoherency, %function
 912              	ADC_SetCoherency:
 913              	.LFB5:
 466:.\Generated_Source\PSoC5/ADC.c **** {
 914              		.loc 1 466 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 919              	.LVL73:
 469:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DEC_COHER_REG & (uint8)~ADC_DEC_SAMP_KEY_MASK;
 920              		.loc 1 469 0
 921 0000 044B     		ldr	r3, .L44
 922 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 923 0004 02F0FC02 		and	r2, r2, #252
 924              	.LVL74:
 470:.\Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 925              		.loc 1 470 0
 926 0008 00F00300 		and	r0, r0, #3
 927              	.LVL75:
 928 000c 0243     		orrs	r2, r2, r0
 929              	.LVL76:
 471:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 930              		.loc 1 471 0
 931 000e 1A70     		strb	r2, [r3]
 932 0010 7047     		bx	lr
 933              	.L45:
 934 0012 00BF     		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 50


 935              	.L44:
 936 0014 144E0040 		.word	1073761812
 937              		.cfi_endproc
 938              	.LFE5:
 939              		.size	ADC_SetCoherency, .-ADC_SetCoherency
 940              		.global	__aeabi_ui2f
 941              		.global	__aeabi_fmul
 942              		.global	__aeabi_f2d
 943              		.global	__aeabi_dcmpgt
 944              		.global	__aeabi_f2uiz
 945              		.section	.text.ADC_SetGCOR,"ax",%progbits
 946              		.align	2
 947              		.global	ADC_SetGCOR
 948              		.thumb
 949              		.thumb_func
 950              		.type	ADC_SetGCOR, %function
 951              	ADC_SetGCOR:
 952              	.LFB6:
 506:.\Generated_Source\PSoC5/ADC.c **** {
 953              		.loc 1 506 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              	.LVL77:
 958 0000 10B5     		push	{r4, lr}
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 4, -8
 961              		.cfi_offset 14, -4
 962 0002 0446     		mov	r4, r0
 511:.\Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_gcor[ADC_Config - 1u].gcor;
 963              		.loc 1 511 0
 964 0004 184B     		ldr	r3, .L49+8
 965 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 966 0008 013A     		subs	r2, r2, #1
 967              	.LVL78:
 512:.\Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
 968              		.loc 1 512 0
 969 000a 184B     		ldr	r3, .L49+12
 970 000c 33F82200 		ldrh	r0, [r3, r2, lsl #2]
 971              	.LVL79:
 972 0010 FFF7FEFF 		bl	__aeabi_ui2f
 973              	.LVL80:
 974 0014 4FF06051 		mov	r1, #939524096
 975 0018 FFF7FEFF 		bl	__aeabi_fmul
 976              	.LVL81:
 513:.\Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 977              		.loc 1 513 0
 978 001c 2146     		mov	r1, r4
 979 001e FFF7FEFF 		bl	__aeabi_fmul
 980              	.LVL82:
 981 0022 0446     		mov	r4, r0
 982              	.LVL83:
 515:.\Generated_Source\PSoC5/ADC.c ****     if (tmpValue > 1.9999)
 983              		.loc 1 515 0
 984 0024 FFF7FEFF 		bl	__aeabi_f2d
 985              	.LVL84:
 986 0028 0DA3     		adr	r3, .L49
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 51


 987 002a D3E90023 		ldrd	r2, [r3]
 988 002e FFF7FEFF 		bl	__aeabi_dcmpgt
 989              	.LVL85:
 990 0032 88B9     		cbnz	r0, .L48
 521:.\Generated_Source\PSoC5/ADC.c ****         tmpValue *= (float32)ADC_IDEAL_GAIN_CONST;
 991              		.loc 1 521 0
 992 0034 2046     		mov	r0, r4
 993 0036 4FF08E41 		mov	r1, #1191182336
 994 003a FFF7FEFF 		bl	__aeabi_fmul
 995              	.LVL86:
 522:.\Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 996              		.loc 1 522 0
 997 003e FFF7FEFF 		bl	__aeabi_f2uiz
 998              	.LVL87:
 999 0042 80B2     		uxth	r0, r0
 1000              	.LVL88:
 523:.\Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 1001              		.loc 1 523 0
 1002 0044 0A4B     		ldr	r3, .L49+16
 1003 0046 1880     		strh	r0, [r3]	@ movhi
 525:.\Generated_Source\PSoC5/ADC.c ****        ADC_gcor[ADC_Config - 1u].gcor = tmpReg;
 1004              		.loc 1 525 0
 1005 0048 074B     		ldr	r3, .L49+8
 1006 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1007 004c 013A     		subs	r2, r2, #1
 1008 004e 074B     		ldr	r3, .L49+12
 1009 0050 23F82200 		strh	r0, [r3, r2, lsl #2]	@ movhi
 1010              	.LVL89:
 527:.\Generated_Source\PSoC5/ADC.c ****         status = 0u;
 1011              		.loc 1 527 0
 1012 0054 0020     		movs	r0, #0
 1013              	.LVL90:
 1014 0056 10BD     		pop	{r4, pc}
 1015              	.LVL91:
 1016              	.L48:
 517:.\Generated_Source\PSoC5/ADC.c ****         status = 1u;
 1017              		.loc 1 517 0
 1018 0058 0120     		movs	r0, #1
 1019              	.LVL92:
 531:.\Generated_Source\PSoC5/ADC.c **** }
 1020              		.loc 1 531 0
 1021 005a 10BD     		pop	{r4, pc}
 1022              	.LVL93:
 1023              	.L50:
 1024 005c AFF30080 		.align	3
 1025              	.L49:
 1026 0060 8F537424 		.word	611603343
 1027 0064 97FFFF3F 		.word	1073741719
 1028 0068 00000000 		.word	.LANCHOR1
 1029 006c 00000000 		.word	.LANCHOR0
 1030 0070 0C4E0040 		.word	1073761804
 1031              		.cfi_endproc
 1032              	.LFE6:
 1033              		.size	ADC_SetGCOR, .-ADC_SetGCOR
 1034 0074 AFF30080 		.section	.text.ADC_ReadGCOR,"ax",%progbits
 1035              		.align	2
 1036              		.global	ADC_ReadGCOR
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 52


 1037              		.thumb
 1038              		.thumb_func
 1039              		.type	ADC_ReadGCOR, %function
 1040              	ADC_ReadGCOR:
 1041              	.LFB7:
 553:.\Generated_Source\PSoC5/ADC.c **** {
 1042              		.loc 1 553 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 557:.\Generated_Source\PSoC5/ADC.c ****     gValue = ADC_DEC_GVAL_REG;
 1047              		.loc 1 557 0
 1048 0000 064B     		ldr	r3, .L53
 1049 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1050 0004 DBB2     		uxtb	r3, r3
 1051              	.LVL94:
 558:.\Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 1052              		.loc 1 558 0
 1053 0006 064A     		ldr	r2, .L53+4
 1054 0008 1088     		ldrh	r0, [r2]
 1055 000a 80B2     		uxth	r0, r0
 1056              	.LVL95:
 560:.\Generated_Source\PSoC5/ADC.c ****     if (gValue < ADC_MAX_GVAL)
 1057              		.loc 1 560 0
 1058 000c 0E2B     		cmp	r3, #14
 1059 000e 03D8     		bhi	.L52
 562:.\Generated_Source\PSoC5/ADC.c ****         gcorValue <<= ADC_MAX_GVAL - gValue;
 1060              		.loc 1 562 0
 1061 0010 C3F10F03 		rsb	r3, r3, #15
 1062              	.LVL96:
 1063 0014 9840     		lsls	r0, r0, r3
 1064              	.LVL97:
 1065 0016 80B2     		uxth	r0, r0
 1066              	.LVL98:
 1067              	.L52:
 566:.\Generated_Source\PSoC5/ADC.c **** }
 1068              		.loc 1 566 0
 1069 0018 7047     		bx	lr
 1070              	.L54:
 1071 001a 00BF     		.align	2
 1072              	.L53:
 1073 001c 0E4E0040 		.word	1073761806
 1074 0020 0C4E0040 		.word	1073761804
 1075              		.cfi_endproc
 1076              	.LFE7:
 1077              		.size	ADC_ReadGCOR, .-ADC_ReadGCOR
 1078              		.section	.text.ADC_StartConvert,"ax",%progbits
 1079              		.align	2
 1080              		.global	ADC_StartConvert
 1081              		.thumb
 1082              		.thumb_func
 1083              		.type	ADC_StartConvert, %function
 1084              	ADC_StartConvert:
 1085              	.LFB8:
 587:.\Generated_Source\PSoC5/ADC.c **** {
 1086              		.loc 1 587 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 53


 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 0
 1089              		@ frame_needed = 0, uses_anonymous_args = 0
 1090              		@ link register save eliminated.
 589:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG |= ADC_DEC_START_CONV;
 1091              		.loc 1 589 0
 1092 0000 024B     		ldr	r3, .L56
 1093 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1094 0004 42F00102 		orr	r2, r2, #1
 1095 0008 1A70     		strb	r2, [r3]
 1096 000a 7047     		bx	lr
 1097              	.L57:
 1098              		.align	2
 1099              	.L56:
 1100 000c 004E0040 		.word	1073761792
 1101              		.cfi_endproc
 1102              	.LFE8:
 1103              		.size	ADC_StartConvert, .-ADC_StartConvert
 1104              		.section	.text.ADC_StopConvert,"ax",%progbits
 1105              		.align	2
 1106              		.global	ADC_StopConvert
 1107              		.thumb
 1108              		.thumb_func
 1109              		.type	ADC_StopConvert, %function
 1110              	ADC_StopConvert:
 1111              	.LFB9:
 610:.\Generated_Source\PSoC5/ADC.c **** {
 1112              		.loc 1 610 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 612:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 1117              		.loc 1 612 0
 1118 0000 024B     		ldr	r3, .L59
 1119 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1120 0004 02F0FE02 		and	r2, r2, #254
 1121 0008 1A70     		strb	r2, [r3]
 1122 000a 7047     		bx	lr
 1123              	.L60:
 1124              		.align	2
 1125              	.L59:
 1126 000c 004E0040 		.word	1073761792
 1127              		.cfi_endproc
 1128              	.LFE9:
 1129              		.size	ADC_StopConvert, .-ADC_StopConvert
 1130              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 1131              		.align	2
 1132              		.global	ADC_IsEndConversion
 1133              		.thumb
 1134              		.thumb_func
 1135              		.type	ADC_IsEndConversion, %function
 1136              	ADC_IsEndConversion:
 1137              	.LFB10:
 645:.\Generated_Source\PSoC5/ADC.c **** {
 1138              		.loc 1 645 0
 1139              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 54


 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
 1143              	.LVL99:
 653:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_stopConversion != 0u)
 1144              		.loc 1 653 0
 1145 0000 084A     		ldr	r2, .L67
 659:.\Generated_Source\PSoC5/ADC.c ****             status = ADC_DEC_SR_REG & ADC_DEC_CONV_DONE;
 1146              		.loc 1 659 0
 1147 0002 0949     		ldr	r1, .L67+4
 1148              	.L65:
 653:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_stopConversion != 0u)
 1149              		.loc 1 653 0
 1150 0004 1379     		ldrb	r3, [r2, #4]	@ zero_extendqisi2
 1151 0006 13F0FF0F 		tst	r3, #255
 1152 000a 02D0     		beq	.L62
 655:.\Generated_Source\PSoC5/ADC.c ****             status = ADC_convDone;
 1153              		.loc 1 655 0
 1154 000c 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 1155 000e DBB2     		uxtb	r3, r3
 1156              	.LVL100:
 1157 0010 02E0     		b	.L63
 1158              	.LVL101:
 1159              	.L62:
 659:.\Generated_Source\PSoC5/ADC.c ****             status = ADC_DEC_SR_REG & ADC_DEC_CONV_DONE;
 1160              		.loc 1 659 0
 1161 0012 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1162 0014 03F00103 		and	r3, r3, #1
 1163              	.LVL102:
 1164              	.L63:
 661:.\Generated_Source\PSoC5/ADC.c ****     }while((status != ADC_DEC_CONV_DONE) && (retMode == ADC_WAIT_FOR_RESULT));
 1165              		.loc 1 661 0
 1166 0018 012B     		cmp	r3, #1
 1167 001a 01D0     		beq	.L64
 661:.\Generated_Source\PSoC5/ADC.c ****     }while((status != ADC_DEC_CONV_DONE) && (retMode == ADC_WAIT_FOR_RESULT));
 1168              		.loc 1 661 0 is_stmt 0 discriminator 1
 1169 001c 0028     		cmp	r0, #0
 1170 001e F1D0     		beq	.L65
 1171              	.L64:
 664:.\Generated_Source\PSoC5/ADC.c **** }
 1172              		.loc 1 664 0 is_stmt 1
 1173 0020 1846     		mov	r0, r3
 1174              	.LVL103:
 1175 0022 7047     		bx	lr
 1176              	.L68:
 1177              		.align	2
 1178              	.L67:
 1179 0024 00000000 		.word	.LANCHOR0
 1180 0028 014E0040 		.word	1073761793
 1181              		.cfi_endproc
 1182              	.LFE10:
 1183              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 1184              		.section	.text.ADC_GetResult8,"ax",%progbits
 1185              		.align	2
 1186              		.global	ADC_GetResult8
 1187              		.thumb
 1188              		.thumb_func
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 55


 1189              		.type	ADC_GetResult8, %function
 1190              	ADC_GetResult8:
 1191              	.LFB11:
 692:.\Generated_Source\PSoC5/ADC.c **** {
 1192              		.loc 1 692 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196              		@ link register save eliminated.
 697:.\Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1197              		.loc 1 697 0
 1198 0000 0C4B     		ldr	r3, .L73
 1199 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1200 0004 03F00303 		and	r3, r3, #3
 1201              	.LVL104:
 699:.\Generated_Source\PSoC5/ADC.c ****     result = (int8)ADC_DEC_SAMP_REG;
 1202              		.loc 1 699 0
 1203 0008 0B4A     		ldr	r2, .L73+4
 1204 000a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 1205              	.LVL105:
 701:.\Generated_Source\PSoC5/ADC.c ****     if(coherency == ADC_DEC_SAMP_KEY_MID)
 1206              		.loc 1 701 0
 1207 000c 022B     		cmp	r3, #2
 1208 000e 02D1     		bne	.L70
 703:.\Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPM_REG;
 1209              		.loc 1 703 0
 1210 0010 0A4B     		ldr	r3, .L73+8
 1211              	.LVL106:
 1212 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1213 0014 03E0     		b	.L71
 1214              	.LVL107:
 1215              	.L70:
 705:.\Generated_Source\PSoC5/ADC.c ****     else  if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1216              		.loc 1 705 0
 1217 0016 032B     		cmp	r3, #3
 1218 0018 01D1     		bne	.L71
 707:.\Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPH_REG;
 1219              		.loc 1 707 0
 1220 001a 094B     		ldr	r3, .L73+12
 1221              	.LVL108:
 1222 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1223              	.L71:
 713:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1224              		.loc 1 713 0
 1225 001e 094B     		ldr	r3, .L73+16
 1226 0020 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1227 0022 13F0FF0F 		tst	r3, #255
 1228 0026 02D0     		beq	.L72
 715:.\Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1229              		.loc 1 715 0
 1230 0028 0022     		movs	r2, #0
 1231 002a 064B     		ldr	r3, .L73+16
 1232 002c 5A71     		strb	r2, [r3, #5]
 1233              	.L72:
 718:.\Generated_Source\PSoC5/ADC.c **** }
 1234              		.loc 1 718 0
 1235 002e 40B2     		sxtb	r0, r0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 56


 1236              	.LVL109:
 1237 0030 7047     		bx	lr
 1238              	.L74:
 1239 0032 00BF     		.align	2
 1240              	.L73:
 1241 0034 144E0040 		.word	1073761812
 1242 0038 104E0040 		.word	1073761808
 1243 003c 114E0040 		.word	1073761809
 1244 0040 124E0040 		.word	1073761810
 1245 0044 00000000 		.word	.LANCHOR0
 1246              		.cfi_endproc
 1247              	.LFE11:
 1248              		.size	ADC_GetResult8, .-ADC_GetResult8
 1249              		.section	.text.ADC_GetResult16,"ax",%progbits
 1250              		.align	2
 1251              		.global	ADC_GetResult16
 1252              		.thumb
 1253              		.thumb_func
 1254              		.type	ADC_GetResult16, %function
 1255              	ADC_GetResult16:
 1256              	.LFB12:
 746:.\Generated_Source\PSoC5/ADC.c **** {
 1257              		.loc 1 746 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 751:.\Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1262              		.loc 1 751 0
 1263 0000 0E4B     		ldr	r3, .L79
 1264 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 0004 03F00303 		and	r3, r3, #3
 1266              	.LVL110:
 753:.\Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1267              		.loc 1 753 0
 1268 0008 012B     		cmp	r3, #1
 1269 000a 03D8     		bhi	.L76
 759:.\Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1270              		.loc 1 759 0
 1271 000c 0C4B     		ldr	r3, .L79+4
 1272              	.LVL111:
 1273 000e 1888     		ldrh	r0, [r3]
 1274 0010 80B2     		uxth	r0, r0
 1275              	.LVL112:
 1276 0012 09E0     		b	.L77
 1277              	.LVL113:
 1278              	.L76:
 767:.\Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMP_REG;
 1279              		.loc 1 767 0
 1280 0014 0A4A     		ldr	r2, .L79+4
 1281 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1282              	.LVL114:
 768:.\Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 1283              		.loc 1 768 0
 1284 0018 0A49     		ldr	r1, .L79+8
 1285 001a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1286 001c 42EA0020 		orr	r0, r2, r0, lsl #8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 57


 1287              	.LVL115:
 770:.\Generated_Source\PSoC5/ADC.c ****         if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1288              		.loc 1 770 0
 1289 0020 032B     		cmp	r3, #3
 1290 0022 01D1     		bne	.L77
 772:.\Generated_Source\PSoC5/ADC.c ****             (void)ADC_DEC_SAMPH_REG;
 1291              		.loc 1 772 0
 1292 0024 084B     		ldr	r3, .L79+12
 1293              	.LVL116:
 1294 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1295              	.LVL117:
 1296              	.L77:
 776:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1297              		.loc 1 776 0
 1298 0028 084B     		ldr	r3, .L79+16
 1299 002a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1300 002c 13F0FF0F 		tst	r3, #255
 1301 0030 02D0     		beq	.L78
 778:.\Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1302              		.loc 1 778 0
 1303 0032 0022     		movs	r2, #0
 1304 0034 054B     		ldr	r3, .L79+16
 1305 0036 5A71     		strb	r2, [r3, #5]
 1306              	.L78:
 782:.\Generated_Source\PSoC5/ADC.c **** }
 1307              		.loc 1 782 0
 1308 0038 00B2     		sxth	r0, r0
 1309              	.LVL118:
 1310 003a 7047     		bx	lr
 1311              	.L80:
 1312              		.align	2
 1313              	.L79:
 1314 003c 144E0040 		.word	1073761812
 1315 0040 104E0040 		.word	1073761808
 1316 0044 114E0040 		.word	1073761809
 1317 0048 124E0040 		.word	1073761810
 1318 004c 00000000 		.word	.LANCHOR0
 1319              		.cfi_endproc
 1320              	.LFE12:
 1321              		.size	ADC_GetResult16, .-ADC_GetResult16
 1322              		.section	.text.ADC_GetResult32,"ax",%progbits
 1323              		.align	2
 1324              		.global	ADC_GetResult32
 1325              		.thumb
 1326              		.thumb_func
 1327              		.type	ADC_GetResult32, %function
 1328              	ADC_GetResult32:
 1329              	.LFB13:
 806:.\Generated_Source\PSoC5/ADC.c **** {
 1330              		.loc 1 806 0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		@ link register save eliminated.
 814:.\Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1335              		.loc 1 814 0
 1336 0000 154B     		ldr	r3, .L86
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 58


 1337 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1338 0004 03F00303 		and	r3, r3, #3
 1339              	.LVL119:
 816:.\Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1340              		.loc 1 816 0
 1341 0008 012B     		cmp	r3, #1
 1342 000a 07D8     		bhi	.L82
 827:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1343              		.loc 1 827 0
 1344 000c 134B     		ldr	r3, .L86+4
 1345              	.LVL120:
 1346 000e 1B88     		ldrh	r3, [r3]
 1347              	.LVL121:
 828:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1348              		.loc 1 828 0
 1349 0010 134A     		ldr	r2, .L86+8
 1350 0012 1088     		ldrh	r0, [r2]
 1351 0014 80B2     		uxth	r0, r0
 1352 0016 40EA0340 		orr	r0, r0, r3, lsl #16
 1353              	.LVL122:
 1354 001a 13E0     		b	.L83
 1355              	.LVL123:
 1356              	.L82:
 831:.\Generated_Source\PSoC5/ADC.c ****     else if(coherency == ADC_DEC_SAMP_KEY_MID)
 1357              		.loc 1 831 0
 1358 001c 022B     		cmp	r3, #2
 1359 001e 0AD1     		bne	.L84
 841:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1360              		.loc 1 841 0
 1361 0020 0E4B     		ldr	r3, .L86+4
 1362              	.LVL124:
 1363 0022 1888     		ldrh	r0, [r3]
 1364              	.LVL125:
 842:.\Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 1365              		.loc 1 842 0
 1366 0024 023B     		subs	r3, r3, #2
 1367 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1368 0028 43EA0040 		orr	r0, r3, r0, lsl #16
 1369              	.LVL126:
 843:.\Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 1370              		.loc 1 843 0
 1371 002c 0D4B     		ldr	r3, .L86+12
 1372 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1373 0030 40EA0320 		orr	r0, r0, r3, lsl #8
 1374              	.LVL127:
 1375 0034 06E0     		b	.L83
 1376              	.LVL128:
 1377              	.L84:
 858:.\Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 1378              		.loc 1 858 0
 1379 0036 0A4B     		ldr	r3, .L86+8
 1380              	.LVL129:
 1381 0038 1888     		ldrh	r0, [r3]
 1382 003a 80B2     		uxth	r0, r0
 1383              	.LVL130:
 859:.\Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 1384              		.loc 1 859 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 59


 1385 003c 0233     		adds	r3, r3, #2
 1386 003e 1B88     		ldrh	r3, [r3]
 1387 0040 40EA0340 		orr	r0, r0, r3, lsl #16
 1388              	.LVL131:
 1389              	.L83:
 863:.\Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1390              		.loc 1 863 0
 1391 0044 084B     		ldr	r3, .L86+16
 1392 0046 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1393 0048 13F0FF0F 		tst	r3, #255
 1394 004c 02D0     		beq	.L85
 865:.\Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1395              		.loc 1 865 0
 1396 004e 0022     		movs	r2, #0
 1397 0050 054B     		ldr	r3, .L86+16
 1398 0052 5A71     		strb	r2, [r3, #5]
 1399              	.L85:
 869:.\Generated_Source\PSoC5/ADC.c **** }
 1400              		.loc 1 869 0
 1401 0054 7047     		bx	lr
 1402              	.L87:
 1403 0056 00BF     		.align	2
 1404              	.L86:
 1405 0058 144E0040 		.word	1073761812
 1406 005c 124E0040 		.word	1073761810
 1407 0060 104E0040 		.word	1073761808
 1408 0064 114E0040 		.word	1073761809
 1409 0068 00000000 		.word	.LANCHOR0
 1410              		.cfi_endproc
 1411              	.LFE13:
 1412              		.size	ADC_GetResult32, .-ADC_GetResult32
 1413              		.section	.text.ADC_SetOffset,"ax",%progbits
 1414              		.align	2
 1415              		.global	ADC_SetOffset
 1416              		.thumb
 1417              		.thumb_func
 1418              		.type	ADC_SetOffset, %function
 1419              	ADC_SetOffset:
 1420              	.LFB14:
 899:.\Generated_Source\PSoC5/ADC.c **** {
 1421              		.loc 1 899 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              		@ link register save eliminated.
 1426              	.LVL132:
 901:.\Generated_Source\PSoC5/ADC.c ****     ADC_Offset = offset;
 1427              		.loc 1 901 0
 1428 0000 014B     		ldr	r3, .L89
 1429 0002 1860     		str	r0, [r3]
 1430 0004 7047     		bx	lr
 1431              	.L90:
 1432 0006 00BF     		.align	2
 1433              	.L89:
 1434 0008 00000000 		.word	ADC_Offset
 1435              		.cfi_endproc
 1436              	.LFE14:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 60


 1437              		.size	ADC_SetOffset, .-ADC_SetOffset
 1438              		.section	.text.ADC_SetGain,"ax",%progbits
 1439              		.align	2
 1440              		.global	ADC_SetGain
 1441              		.thumb
 1442              		.thumb_func
 1443              		.type	ADC_SetGain, %function
 1444              	ADC_SetGain:
 1445              	.LFB15:
 934:.\Generated_Source\PSoC5/ADC.c **** {
 1446              		.loc 1 934 0
 1447              		.cfi_startproc
 1448              		@ args = 0, pretend = 0, frame = 0
 1449              		@ frame_needed = 0, uses_anonymous_args = 0
 1450              		@ link register save eliminated.
 1451              	.LVL133:
 935:.\Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 1452              		.loc 1 935 0
 1453 0000 014B     		ldr	r3, .L92
 1454 0002 1860     		str	r0, [r3]
 1455 0004 7047     		bx	lr
 1456              	.L93:
 1457 0006 00BF     		.align	2
 1458              	.L92:
 1459 0008 00000000 		.word	ADC_CountsPerVolt
 1460              		.cfi_endproc
 1461              	.LFE15:
 1462              		.size	ADC_SetGain, .-ADC_SetGain
 1463              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1464              		.align	2
 1465              		.global	ADC_CountsTo_mVolts
 1466              		.thumb
 1467              		.thumb_func
 1468              		.type	ADC_CountsTo_mVolts, %function
 1469              	ADC_CountsTo_mVolts:
 1470              	.LFB16:
 961:.\Generated_Source\PSoC5/ADC.c **** {
 1471              		.loc 1 961 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 1476              	.LVL134:
 992:.\Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1477              		.loc 1 992 0
 1478 0000 064B     		ldr	r3, .L95
 1479 0002 1B68     		ldr	r3, [r3]
 1480 0004 C31A     		subs	r3, r0, r3
 1481              	.LVL135:
 994:.\Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)(( adcCounts * ADC_1MV_COUNTS ) / ADC_CountsPerVolt) ;
 1482              		.loc 1 994 0
 1483 0006 4FF47A70 		mov	r0, #1000
 1484 000a 00FB03F0 		mul	r0, r0, r3
 1485 000e 044B     		ldr	r3, .L95+4
 1486              	.LVL136:
 1487 0010 1A68     		ldr	r2, [r3]
 1488 0012 90FBF2F0 		sdiv	r0, r0, r2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 61


 1489              	.LVL137:
 997:.\Generated_Source\PSoC5/ADC.c **** }
 1490              		.loc 1 997 0
 1491 0016 00B2     		sxth	r0, r0
 1492              	.LVL138:
 1493 0018 7047     		bx	lr
 1494              	.L96:
 1495 001a 00BF     		.align	2
 1496              	.L95:
 1497 001c 00000000 		.word	ADC_Offset
 1498 0020 00000000 		.word	ADC_CountsPerVolt
 1499              		.cfi_endproc
 1500              	.LFE16:
 1501              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1502              		.global	__aeabi_i2f
 1503              		.global	__aeabi_fdiv
 1504              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1505              		.align	2
 1506              		.global	ADC_CountsTo_Volts
 1507              		.thumb
 1508              		.thumb_func
 1509              		.type	ADC_CountsTo_Volts, %function
 1510              	ADC_CountsTo_Volts:
 1511              	.LFB17:
1022:.\Generated_Source\PSoC5/ADC.c **** {
 1512              		.loc 1 1022 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              	.LVL139:
 1517 0000 10B5     		push	{r4, lr}
 1518              		.cfi_def_cfa_offset 8
 1519              		.cfi_offset 4, -8
 1520              		.cfi_offset 14, -4
1053:.\Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1521              		.loc 1 1053 0
 1522 0002 074B     		ldr	r3, .L98
 1523 0004 1B68     		ldr	r3, [r3]
 1524              	.LVL140:
1055:.\Generated_Source\PSoC5/ADC.c ****     Volts = (float32)adcCounts / (float32)ADC_CountsPerVolt;
 1525              		.loc 1 1055 0
 1526 0006 C01A     		subs	r0, r0, r3
 1527              	.LVL141:
 1528 0008 FFF7FEFF 		bl	__aeabi_i2f
 1529              	.LVL142:
 1530 000c 0446     		mov	r4, r0
 1531 000e 054B     		ldr	r3, .L98+4
 1532 0010 1868     		ldr	r0, [r3]
 1533 0012 FFF7FEFF 		bl	__aeabi_i2f
 1534              	.LVL143:
 1535 0016 0146     		mov	r1, r0
 1536 0018 2046     		mov	r0, r4
 1537 001a FFF7FEFF 		bl	__aeabi_fdiv
 1538              	.LVL144:
1058:.\Generated_Source\PSoC5/ADC.c **** }
 1539              		.loc 1 1058 0
 1540 001e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 62


 1541              	.L99:
 1542              		.align	2
 1543              	.L98:
 1544 0020 00000000 		.word	ADC_Offset
 1545 0024 00000000 		.word	ADC_CountsPerVolt
 1546              		.cfi_endproc
 1547              	.LFE17:
 1548              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1549              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1550              		.align	2
 1551              		.global	ADC_CountsTo_uVolts
 1552              		.thumb
 1553              		.thumb_func
 1554              		.type	ADC_CountsTo_uVolts, %function
 1555              	ADC_CountsTo_uVolts:
 1556              	.LFB18:
1088:.\Generated_Source\PSoC5/ADC.c **** {
 1557              		.loc 1 1088 0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561              		@ link register save eliminated.
 1562              	.LVL145:
1097:.\Generated_Source\PSoC5/ADC.c ****     if (ADC_Config == ADC_CFG1)
 1563              		.loc 1 1097 0
 1564 0000 144B     		ldr	r3, .L108
 1565 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1566 0004 DBB2     		uxtb	r3, r3
 1567 0006 012B     		cmp	r3, #1
 1568 0008 08D0     		beq	.L104
1104:.\Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG2)
 1569              		.loc 1 1104 0
 1570 000a 124B     		ldr	r3, .L108
 1571 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1572 000e DBB2     		uxtb	r3, r3
 1573 0010 022B     		cmp	r3, #2
 1574 0012 05D0     		beq	.L105
1111:.\Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG3)
 1575              		.loc 1 1111 0
 1576 0014 0F4B     		ldr	r3, .L108
 1577 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1113:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG3_RESOLUTION;
 1578              		.loc 1 1113 0
 1579 0018 1023     		movs	r3, #16
 1580 001a 02E0     		b	.L101
 1581              	.L104:
1099:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG1_RESOLUTION;
 1582              		.loc 1 1099 0
 1583 001c 0823     		movs	r3, #8
 1584 001e 00E0     		b	.L101
 1585              	.L105:
1106:.\Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG2_RESOLUTION;
 1586              		.loc 1 1106 0
 1587 0020 1023     		movs	r3, #16
 1588              	.L101:
 1589              	.LVL146:
1126:.\Generated_Source\PSoC5/ADC.c ****     switch (resolution)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 63


 1590              		.loc 1 1126 0
 1591 0022 102B     		cmp	r3, #16
 1592 0024 03D1     		bne	.L107
1170:.\Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_32;
 1593              		.loc 1 1170 0
 1594 0026 2023     		movs	r3, #32
 1595              	.LVL147:
1169:.\Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_32;
 1596              		.loc 1 1169 0
 1597 0028 47F61222 		movw	r2, #31250
 1598 002c 01E0     		b	.L102
 1599              	.LVL148:
 1600              	.L107:
1212:.\Generated_Source\PSoC5/ADC.c ****             coefB = ADC_DIVISOR_1;
 1601              		.loc 1 1212 0
 1602 002e 0123     		movs	r3, #1
 1603              	.LVL149:
1211:.\Generated_Source\PSoC5/ADC.c ****             coefA = ADC_1UV_COUNTS;
 1604              		.loc 1 1211 0
 1605 0030 094A     		ldr	r2, .L108+4
 1606              	.L102:
 1607              	.LVL150:
1215:.\Generated_Source\PSoC5/ADC.c ****     coefB = ADC_CountsPerVolt / coefB;
 1608              		.loc 1 1215 0
 1609 0032 0A49     		ldr	r1, .L108+8
 1610 0034 0968     		ldr	r1, [r1]
 1611 0036 91FBF3F3 		sdiv	r3, r1, r3
 1612              	.LVL151:
1216:.\Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
 1613              		.loc 1 1216 0
 1614 003a 00FB02F0 		mul	r0, r0, r2
 1615              	.LVL152:
 1616 003e 90FBF3F0 		sdiv	r0, r0, r3
 1617 0042 0749     		ldr	r1, .L108+12
 1618 0044 0968     		ldr	r1, [r1]
 1619 0046 01FB02F2 		mul	r2, r1, r2
 1620              	.LVL153:
 1621 004a 92FBF3F3 		sdiv	r3, r2, r3
 1622              	.LVL154:
1219:.\Generated_Source\PSoC5/ADC.c **** }
 1623              		.loc 1 1219 0
 1624 004e C01A     		subs	r0, r0, r3
 1625              	.LVL155:
 1626 0050 7047     		bx	lr
 1627              	.L109:
 1628 0052 00BF     		.align	2
 1629              	.L108:
 1630 0054 00000000 		.word	.LANCHOR1
 1631 0058 40420F00 		.word	1000000
 1632 005c 00000000 		.word	ADC_CountsPerVolt
 1633 0060 00000000 		.word	ADC_Offset
 1634              		.cfi_endproc
 1635              	.LFE18:
 1636              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1637              		.section	.text.ADC_SelectConfiguration,"ax",%progbits
 1638              		.align	2
 1639              		.global	ADC_SelectConfiguration
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 64


 1640              		.thumb
 1641              		.thumb_func
 1642              		.type	ADC_SelectConfiguration, %function
 1643              	ADC_SelectConfiguration:
 1644              	.LFB20:
1554:.\Generated_Source\PSoC5/ADC.c **** {
 1645              		.loc 1 1554 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 0
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
 1649              	.LVL156:
 1650 0000 38B5     		push	{r3, r4, r5, lr}
 1651              		.cfi_def_cfa_offset 16
 1652              		.cfi_offset 3, -16
 1653              		.cfi_offset 4, -12
 1654              		.cfi_offset 5, -8
 1655              		.cfi_offset 14, -4
 1656 0002 0446     		mov	r4, r0
 1657 0004 0D46     		mov	r5, r1
1556:.\Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
 1658              		.loc 1 1556 0
 1659 0006 0128     		cmp	r0, #1
 1660 0008 1ED1     		bne	.L111
1561:.\Generated_Source\PSoC5/ADC.c ****         if(ADC_initVar == 0u)
 1661              		.loc 1 1561 0
 1662 000a 114B     		ldr	r3, .L114
 1663 000c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1664 000e 13B9     		cbnz	r3, .L112
1563:.\Generated_Source\PSoC5/ADC.c ****             ADC_started = 1u;
 1665              		.loc 1 1563 0
 1666 0010 0122     		movs	r2, #1
 1667 0012 0F4B     		ldr	r3, .L114
 1668 0014 DA71     		strb	r2, [r3, #7]
 1669              	.L112:
1567:.\Generated_Source\PSoC5/ADC.c ****         ADC_Config = config;
 1670              		.loc 1 1567 0
 1671 0016 0F4B     		ldr	r3, .L114+4
 1672 0018 1C70     		strb	r4, [r3]
1570:.\Generated_Source\PSoC5/ADC.c ****         ADC_Stop();
 1673              		.loc 1 1570 0
 1674 001a FFF7FEFF 		bl	ADC_Stop
 1675              	.LVL157:
1573:.\Generated_Source\PSoC5/ADC.c ****         ADC_InitConfig(config);
 1676              		.loc 1 1573 0
 1677 001e 2046     		mov	r0, r4
 1678 0020 FFF7FEFF 		bl	ADC_InitConfig
 1679              	.LVL158:
1576:.\Generated_Source\PSoC5/ADC.c ****         ADC_DEC_GVAL_REG = ADC_gcor[config - 1u].gval;
 1680              		.loc 1 1576 0
 1681 0024 013C     		subs	r4, r4, #1
 1682 0026 0A4B     		ldr	r3, .L114
 1683 0028 03EB8402 		add	r2, r3, r4, lsl #2
 1684 002c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 1685 002e 0A4A     		ldr	r2, .L114+8
 1686 0030 1170     		strb	r1, [r2]
1577:.\Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
 1687              		.loc 1 1577 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 65


 1688 0032 33F82420 		ldrh	r2, [r3, r4, lsl #2]
 1689 0036 094B     		ldr	r3, .L114+12
 1690 0038 1A80     		strh	r2, [r3]	@ movhi
1579:.\Generated_Source\PSoC5/ADC.c ****         if(restart == 1u)
 1691              		.loc 1 1579 0
 1692 003a 012D     		cmp	r5, #1
 1693 003c 07D1     		bne	.L110
1582:.\Generated_Source\PSoC5/ADC.c ****             ADC_Start();
 1694              		.loc 1 1582 0
 1695 003e FFF7FEFF 		bl	ADC_Start
 1696              	.LVL159:
1585:.\Generated_Source\PSoC5/ADC.c ****             ADC_StartConvert();
 1697              		.loc 1 1585 0
 1698 0042 FFF7FEFF 		bl	ADC_StartConvert
 1699              	.LVL160:
 1700 0046 38BD     		pop	{r3, r4, r5, pc}
 1701              	.LVL161:
 1702              	.L111:
1591:.\Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 1703              		.loc 1 1591 0 discriminator 1
 1704 0048 0020     		movs	r0, #0
 1705              	.LVL162:
 1706 004a FFF7FEFF 		bl	CyHalt
 1707              	.LVL163:
 1708              	.L110:
 1709 004e 38BD     		pop	{r3, r4, r5, pc}
 1710              	.L115:
 1711              		.align	2
 1712              	.L114:
 1713 0050 00000000 		.word	.LANCHOR0
 1714 0054 00000000 		.word	.LANCHOR1
 1715 0058 0E4E0040 		.word	1073761806
 1716 005c 0C4E0040 		.word	1073761804
 1717              		.cfi_endproc
 1718              	.LFE20:
 1719              		.size	ADC_SelectConfiguration, .-ADC_SelectConfiguration
 1720              		.section	.text.ADC_Read8,"ax",%progbits
 1721              		.align	2
 1722              		.global	ADC_Read8
 1723              		.thumb
 1724              		.thumb_func
 1725              		.type	ADC_Read8, %function
 1726              	ADC_Read8:
 1727              	.LFB23:
1741:.\Generated_Source\PSoC5/ADC.c **** }
1742:.\Generated_Source\PSoC5/ADC.c **** 
1743:.\Generated_Source\PSoC5/ADC.c **** 
1744:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1745:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read8
1746:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1747:.\Generated_Source\PSoC5/ADC.c **** *
1748:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1749:.\Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1750:.\Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1751:.\Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1752:.\Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1753:.\Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 66


1754:.\Generated_Source\PSoC5/ADC.c **** *
1755:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1756:.\Generated_Source\PSoC5/ADC.c **** *  None
1757:.\Generated_Source\PSoC5/ADC.c **** *
1758:.\Generated_Source\PSoC5/ADC.c **** * Return:
1759:.\Generated_Source\PSoC5/ADC.c **** *  int8:  ADC result.
1760:.\Generated_Source\PSoC5/ADC.c **** *
1761:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1762:.\Generated_Source\PSoC5/ADC.c **** int8 ADC_Read8(void) 
1763:.\Generated_Source\PSoC5/ADC.c **** {
 1728              		.loc 1 1763 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 0
 1731              		@ frame_needed = 0, uses_anonymous_args = 0
 1732 0000 10B5     		push	{r4, lr}
 1733              		.cfi_def_cfa_offset 8
 1734              		.cfi_offset 4, -8
 1735              		.cfi_offset 14, -4
1764:.\Generated_Source\PSoC5/ADC.c ****     int8 result;
1765:.\Generated_Source\PSoC5/ADC.c **** 
1766:.\Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1767:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 1736              		.loc 1 1767 0
 1737 0002 084B     		ldr	r3, .L117
 1738 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1739 0006 42F00402 		orr	r2, r2, #4
 1740 000a 1A70     		strb	r2, [r3]
1768:.\Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 1741              		.loc 1 1768 0
 1742 000c FFF7FEFF 		bl	ADC_StartConvert
 1743              	.LVL164:
1769:.\Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 1744              		.loc 1 1769 0
 1745 0010 0020     		movs	r0, #0
 1746 0012 FFF7FEFF 		bl	ADC_IsEndConversion
 1747              	.LVL165:
1770:.\Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult8();
 1748              		.loc 1 1770 0
 1749 0016 FFF7FEFF 		bl	ADC_GetResult8
 1750              	.LVL166:
 1751 001a 0446     		mov	r4, r0
 1752              	.LVL167:
1771:.\Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 1753              		.loc 1 1771 0
 1754 001c FFF7FEFF 		bl	ADC_StopConvert
 1755              	.LVL168:
1772:.\Generated_Source\PSoC5/ADC.c ****     
1773:.\Generated_Source\PSoC5/ADC.c ****      return(result);
1774:.\Generated_Source\PSoC5/ADC.c **** }
 1756              		.loc 1 1774 0
 1757 0020 2046     		mov	r0, r4
 1758 0022 10BD     		pop	{r4, pc}
 1759              	.LVL169:
 1760              	.L118:
 1761              		.align	2
 1762              	.L117:
 1763 0024 014E0040 		.word	1073761793
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 67


 1764              		.cfi_endproc
 1765              	.LFE23:
 1766              		.size	ADC_Read8, .-ADC_Read8
 1767              		.section	.text.ADC_Read16,"ax",%progbits
 1768              		.align	2
 1769              		.global	ADC_Read16
 1770              		.thumb
 1771              		.thumb_func
 1772              		.type	ADC_Read16, %function
 1773              	ADC_Read16:
 1774              	.LFB24:
1775:.\Generated_Source\PSoC5/ADC.c **** 
1776:.\Generated_Source\PSoC5/ADC.c **** 
1777:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1778:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read16
1779:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1780:.\Generated_Source\PSoC5/ADC.c **** *
1781:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1782:.\Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1783:.\Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1784:.\Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1785:.\Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1786:.\Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1787:.\Generated_Source\PSoC5/ADC.c **** *
1788:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1789:.\Generated_Source\PSoC5/ADC.c **** *   void
1790:.\Generated_Source\PSoC5/ADC.c **** *
1791:.\Generated_Source\PSoC5/ADC.c **** * Return:
1792:.\Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
1793:.\Generated_Source\PSoC5/ADC.c **** *
1794:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1795:.\Generated_Source\PSoC5/ADC.c **** int16 ADC_Read16(void) 
1796:.\Generated_Source\PSoC5/ADC.c **** {
 1775              		.loc 1 1796 0
 1776              		.cfi_startproc
 1777              		@ args = 0, pretend = 0, frame = 0
 1778              		@ frame_needed = 0, uses_anonymous_args = 0
 1779 0000 10B5     		push	{r4, lr}
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 4, -8
 1782              		.cfi_offset 14, -4
1797:.\Generated_Source\PSoC5/ADC.c ****     int16 result;
1798:.\Generated_Source\PSoC5/ADC.c **** 
1799:.\Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1800:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 1783              		.loc 1 1800 0
 1784 0002 084B     		ldr	r3, .L120
 1785 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1786 0006 42F00402 		orr	r2, r2, #4
 1787 000a 1A70     		strb	r2, [r3]
1801:.\Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 1788              		.loc 1 1801 0
 1789 000c FFF7FEFF 		bl	ADC_StartConvert
 1790              	.LVL170:
1802:.\Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 1791              		.loc 1 1802 0
 1792 0010 0020     		movs	r0, #0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 68


 1793 0012 FFF7FEFF 		bl	ADC_IsEndConversion
 1794              	.LVL171:
1803:.\Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult16();
 1795              		.loc 1 1803 0
 1796 0016 FFF7FEFF 		bl	ADC_GetResult16
 1797              	.LVL172:
 1798 001a 0446     		mov	r4, r0
 1799              	.LVL173:
1804:.\Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 1800              		.loc 1 1804 0
 1801 001c FFF7FEFF 		bl	ADC_StopConvert
 1802              	.LVL174:
1805:.\Generated_Source\PSoC5/ADC.c ****     
1806:.\Generated_Source\PSoC5/ADC.c ****      return(result);
1807:.\Generated_Source\PSoC5/ADC.c **** }
 1803              		.loc 1 1807 0
 1804 0020 2046     		mov	r0, r4
 1805 0022 10BD     		pop	{r4, pc}
 1806              	.LVL175:
 1807              	.L121:
 1808              		.align	2
 1809              	.L120:
 1810 0024 014E0040 		.word	1073761793
 1811              		.cfi_endproc
 1812              	.LFE24:
 1813              		.size	ADC_Read16, .-ADC_Read16
 1814              		.section	.text.ADC_Read32,"ax",%progbits
 1815              		.align	2
 1816              		.global	ADC_Read32
 1817              		.thumb
 1818              		.thumb_func
 1819              		.type	ADC_Read32, %function
 1820              	ADC_Read32:
 1821              	.LFB25:
1808:.\Generated_Source\PSoC5/ADC.c **** 
1809:.\Generated_Source\PSoC5/ADC.c **** 
1810:.\Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1811:.\Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read32
1812:.\Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1813:.\Generated_Source\PSoC5/ADC.c **** *
1814:.\Generated_Source\PSoC5/ADC.c **** * Summary:
1815:.\Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1816:.\Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1817:.\Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1818:.\Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1819:.\Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1820:.\Generated_Source\PSoC5/ADC.c **** *
1821:.\Generated_Source\PSoC5/ADC.c **** * Parameters:
1822:.\Generated_Source\PSoC5/ADC.c **** *  None
1823:.\Generated_Source\PSoC5/ADC.c **** *
1824:.\Generated_Source\PSoC5/ADC.c **** * Return:
1825:.\Generated_Source\PSoC5/ADC.c **** *  int32: ADC result.
1826:.\Generated_Source\PSoC5/ADC.c **** *
1827:.\Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1828:.\Generated_Source\PSoC5/ADC.c **** int32 ADC_Read32(void) 
1829:.\Generated_Source\PSoC5/ADC.c **** {
 1822              		.loc 1 1829 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 69


 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 0
 1825              		@ frame_needed = 0, uses_anonymous_args = 0
 1826 0000 10B5     		push	{r4, lr}
 1827              		.cfi_def_cfa_offset 8
 1828              		.cfi_offset 4, -8
 1829              		.cfi_offset 14, -4
1830:.\Generated_Source\PSoC5/ADC.c ****     int32 result;
1831:.\Generated_Source\PSoC5/ADC.c ****     
1832:.\Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1833:.\Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 1830              		.loc 1 1833 0
 1831 0002 084B     		ldr	r3, .L123
 1832 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1833 0006 42F00402 		orr	r2, r2, #4
 1834 000a 1A70     		strb	r2, [r3]
1834:.\Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 1835              		.loc 1 1834 0
 1836 000c FFF7FEFF 		bl	ADC_StartConvert
 1837              	.LVL176:
1835:.\Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 1838              		.loc 1 1835 0
 1839 0010 0020     		movs	r0, #0
 1840 0012 FFF7FEFF 		bl	ADC_IsEndConversion
 1841              	.LVL177:
1836:.\Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult32();
 1842              		.loc 1 1836 0
 1843 0016 FFF7FEFF 		bl	ADC_GetResult32
 1844              	.LVL178:
 1845 001a 0446     		mov	r4, r0
 1846              	.LVL179:
1837:.\Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 1847              		.loc 1 1837 0
 1848 001c FFF7FEFF 		bl	ADC_StopConvert
 1849              	.LVL180:
1838:.\Generated_Source\PSoC5/ADC.c ****     
1839:.\Generated_Source\PSoC5/ADC.c ****      return(result);
1840:.\Generated_Source\PSoC5/ADC.c **** }
 1850              		.loc 1 1840 0
 1851 0020 2046     		mov	r0, r4
 1852 0022 10BD     		pop	{r4, pc}
 1853              	.LVL181:
 1854              	.L124:
 1855              		.align	2
 1856              	.L123:
 1857 0024 014E0040 		.word	1073761793
 1858              		.cfi_endproc
 1859              	.LFE25:
 1860              		.size	ADC_Read32, .-ADC_Read32
 1861              		.comm	ADC_CountsPerVolt,4,4
 1862              		.comm	ADC_Offset,4,4
 1863              		.global	ADC_Config
 1864              		.global	ADC_started
 1865              		.global	ADC_initVar
 1866              		.global	ADC_stopConversion
 1867              		.global	ADC_convDone
 1868              		.data
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 70


 1869              		.set	.LANCHOR1,. + 0
 1870              		.type	ADC_Config, %object
 1871              		.size	ADC_Config, 1
 1872              	ADC_Config:
 1873 0000 01       		.byte	1
 1874              		.bss
 1875              		.align	2
 1876              		.set	.LANCHOR0,. + 0
 1877              		.type	ADC_gcor, %object
 1878              		.size	ADC_gcor, 4
 1879              	ADC_gcor:
 1880 0000 00000000 		.space	4
 1881              		.type	ADC_stopConversion, %object
 1882              		.size	ADC_stopConversion, 1
 1883              	ADC_stopConversion:
 1884 0004 00       		.space	1
 1885              		.type	ADC_convDone, %object
 1886              		.size	ADC_convDone, 1
 1887              	ADC_convDone:
 1888 0005 00       		.space	1
 1889              		.type	ADC_initVar, %object
 1890              		.size	ADC_initVar, 1
 1891              	ADC_initVar:
 1892 0006 00       		.space	1
 1893              		.type	ADC_started, %object
 1894              		.size	ADC_started, 1
 1895              	ADC_started:
 1896 0007 00       		.space	1
 1897              		.text
 1898              	.Letext0:
 1899              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1900              		.file 3 ".\\Generated_Source\\PSoC5\\ADC.h"
 1901              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1902              		.file 5 ".\\Generated_Source\\PSoC5\\ADC_AMux.h"
 1903              		.file 6 ".\\Generated_Source\\PSoC5\\ADC_Ext_CP_Clk.h"
 1904              		.file 7 ".\\Generated_Source\\PSoC5\\ADC_theACLK.h"
 1905              		.section	.debug_info,"",%progbits
 1906              	.Ldebug_info0:
 1907 0000 6E0A0000 		.4byte	0xa6e
 1908 0004 0400     		.2byte	0x4
 1909 0006 00000000 		.4byte	.Ldebug_abbrev0
 1910 000a 04       		.byte	0x4
 1911 000b 01       		.uleb128 0x1
 1912 000c 25000000 		.4byte	.LASF98
 1913 0010 01       		.byte	0x1
 1914 0011 6D010000 		.4byte	.LASF99
 1915 0015 48050000 		.4byte	.LASF100
 1916 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1917 001d 00000000 		.4byte	0
 1918 0021 00000000 		.4byte	.Ldebug_line0
 1919 0025 02       		.uleb128 0x2
 1920 0026 04       		.byte	0x4
 1921 0027 04       		.byte	0x4
 1922 0028 9A030000 		.4byte	.LASF0
 1923 002c 02       		.uleb128 0x2
 1924 002d 01       		.byte	0x1
 1925 002e 06       		.byte	0x6
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 71


 1926 002f 48010000 		.4byte	.LASF1
 1927 0033 02       		.uleb128 0x2
 1928 0034 01       		.byte	0x1
 1929 0035 08       		.byte	0x8
 1930 0036 D8030000 		.4byte	.LASF2
 1931 003a 02       		.uleb128 0x2
 1932 003b 02       		.byte	0x2
 1933 003c 05       		.byte	0x5
 1934 003d FE030000 		.4byte	.LASF3
 1935 0041 02       		.uleb128 0x2
 1936 0042 02       		.byte	0x2
 1937 0043 07       		.byte	0x7
 1938 0044 A7020000 		.4byte	.LASF4
 1939 0048 02       		.uleb128 0x2
 1940 0049 04       		.byte	0x4
 1941 004a 05       		.byte	0x5
 1942 004b A9010000 		.4byte	.LASF5
 1943 004f 02       		.uleb128 0x2
 1944 0050 04       		.byte	0x4
 1945 0051 07       		.byte	0x7
 1946 0052 6E020000 		.4byte	.LASF6
 1947 0056 02       		.uleb128 0x2
 1948 0057 08       		.byte	0x8
 1949 0058 05       		.byte	0x5
 1950 0059 3A010000 		.4byte	.LASF7
 1951 005d 02       		.uleb128 0x2
 1952 005e 08       		.byte	0x8
 1953 005f 07       		.byte	0x7
 1954 0060 F7000000 		.4byte	.LASF8
 1955 0064 03       		.uleb128 0x3
 1956 0065 04       		.byte	0x4
 1957 0066 05       		.byte	0x5
 1958 0067 696E7400 		.ascii	"int\000"
 1959 006b 02       		.uleb128 0x2
 1960 006c 04       		.byte	0x4
 1961 006d 07       		.byte	0x7
 1962 006e 5A020000 		.4byte	.LASF9
 1963 0072 04       		.uleb128 0x4
 1964 0073 CC010000 		.4byte	.LASF10
 1965 0077 02       		.byte	0x2
 1966 0078 B4       		.byte	0xb4
 1967 0079 33000000 		.4byte	0x33
 1968 007d 04       		.uleb128 0x4
 1969 007e 00000000 		.4byte	.LASF11
 1970 0082 02       		.byte	0x2
 1971 0083 B5       		.byte	0xb5
 1972 0084 41000000 		.4byte	0x41
 1973 0088 04       		.uleb128 0x4
 1974 0089 F9010000 		.4byte	.LASF12
 1975 008d 02       		.byte	0x2
 1976 008e B6       		.byte	0xb6
 1977 008f 4F000000 		.4byte	0x4f
 1978 0093 04       		.uleb128 0x4
 1979 0094 BA020000 		.4byte	.LASF13
 1980 0098 02       		.byte	0x2
 1981 0099 B7       		.byte	0xb7
 1982 009a 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 72


 1983 009e 04       		.uleb128 0x4
 1984 009f 34050000 		.4byte	.LASF14
 1985 00a3 02       		.byte	0x2
 1986 00a4 B8       		.byte	0xb8
 1987 00a5 3A000000 		.4byte	0x3a
 1988 00a9 04       		.uleb128 0x4
 1989 00aa 8C010000 		.4byte	.LASF15
 1990 00ae 02       		.byte	0x2
 1991 00af B9       		.byte	0xb9
 1992 00b0 48000000 		.4byte	0x48
 1993 00b4 04       		.uleb128 0x4
 1994 00b5 FA020000 		.4byte	.LASF16
 1995 00b9 02       		.byte	0x2
 1996 00ba BA       		.byte	0xba
 1997 00bb 25000000 		.4byte	0x25
 1998 00bf 02       		.uleb128 0x2
 1999 00c0 08       		.byte	0x8
 2000 00c1 04       		.byte	0x4
 2001 00c2 DC010000 		.4byte	.LASF17
 2002 00c6 02       		.uleb128 0x2
 2003 00c7 01       		.byte	0x1
 2004 00c8 08       		.byte	0x8
 2005 00c9 93040000 		.4byte	.LASF18
 2006 00cd 05       		.uleb128 0x5
 2007 00ce B4030000 		.4byte	.LASF19
 2008 00d2 02       		.byte	0x2
 2009 00d3 5E01     		.2byte	0x15e
 2010 00d5 D9000000 		.4byte	0xd9
 2011 00d9 06       		.uleb128 0x6
 2012 00da 72000000 		.4byte	0x72
 2013 00de 05       		.uleb128 0x5
 2014 00df C6010000 		.4byte	.LASF20
 2015 00e3 02       		.byte	0x2
 2016 00e4 5F01     		.2byte	0x15f
 2017 00e6 EA000000 		.4byte	0xea
 2018 00ea 06       		.uleb128 0x6
 2019 00eb 7D000000 		.4byte	0x7d
 2020 00ef 05       		.uleb128 0x5
 2021 00f0 F4020000 		.4byte	.LASF21
 2022 00f4 02       		.byte	0x2
 2023 00f5 6001     		.2byte	0x160
 2024 00f7 FB000000 		.4byte	0xfb
 2025 00fb 06       		.uleb128 0x6
 2026 00fc 88000000 		.4byte	0x88
 2027 0100 05       		.uleb128 0x5
 2028 0101 9F040000 		.4byte	.LASF22
 2029 0105 02       		.byte	0x2
 2030 0106 7001     		.2byte	0x170
 2031 0108 0C010000 		.4byte	0x10c
 2032 010c 07       		.uleb128 0x7
 2033 010d 04       		.byte	0x4
 2034 010e 12010000 		.4byte	0x112
 2035 0112 08       		.uleb128 0x8
 2036 0113 02       		.uleb128 0x2
 2037 0114 04       		.byte	0x4
 2038 0115 07       		.byte	0x7
 2039 0116 02030000 		.4byte	.LASF23
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 73


 2040 011a 09       		.uleb128 0x9
 2041 011b 04       		.byte	0x4
 2042 011c 03       		.byte	0x3
 2043 011d 2F       		.byte	0x2f
 2044 011e 3B010000 		.4byte	0x13b
 2045 0122 0A       		.uleb128 0xa
 2046 0123 E9000000 		.4byte	.LASF24
 2047 0127 03       		.byte	0x3
 2048 0128 31       		.byte	0x31
 2049 0129 7D000000 		.4byte	0x7d
 2050 012d 00       		.byte	0
 2051 012e 0A       		.uleb128 0xa
 2052 012f B3040000 		.4byte	.LASF25
 2053 0133 03       		.byte	0x3
 2054 0134 32       		.byte	0x32
 2055 0135 72000000 		.4byte	0x72
 2056 0139 02       		.byte	0x2
 2057 013a 00       		.byte	0
 2058 013b 04       		.uleb128 0x4
 2059 013c 97020000 		.4byte	.LASF26
 2060 0140 03       		.byte	0x3
 2061 0141 33       		.byte	0x33
 2062 0142 1A010000 		.4byte	0x11a
 2063 0146 0B       		.uleb128 0xb
 2064 0147 D9020000 		.4byte	.LASF36
 2065 014b 01       		.byte	0x1
 2066 014c 5106     		.2byte	0x651
 2067 014e 00000000 		.4byte	.LFB21
 2068 0152 CC000000 		.4byte	.LFE21-.LFB21
 2069 0156 01       		.uleb128 0x1
 2070 0157 9C       		.byte	0x9c
 2071 0158 FC010000 		.4byte	0x1fc
 2072 015c 0C       		.uleb128 0xc
 2073 015d A1000000 		.4byte	.LASF27
 2074 0161 01       		.byte	0x1
 2075 0162 5106     		.2byte	0x651
 2076 0164 72000000 		.4byte	0x72
 2077 0168 00000000 		.4byte	.LLST0
 2078 016c 0C       		.uleb128 0xc
 2079 016d B9030000 		.4byte	.LASF28
 2080 0171 01       		.byte	0x1
 2081 0172 5106     		.2byte	0x651
 2082 0174 7D000000 		.4byte	0x7d
 2083 0178 3A000000 		.4byte	.LLST1
 2084 017c 0C       		.uleb128 0xc
 2085 017d 2A010000 		.4byte	.LASF29
 2086 0181 01       		.byte	0x1
 2087 0182 5106     		.2byte	0x651
 2088 0184 7D000000 		.4byte	0x7d
 2089 0188 74000000 		.4byte	.LLST2
 2090 018c 0C       		.uleb128 0xc
 2091 018d 4F040000 		.4byte	.LASF30
 2092 0191 01       		.byte	0x1
 2093 0192 5206     		.2byte	0x652
 2094 0194 72000000 		.4byte	0x72
 2095 0198 AE000000 		.4byte	.LLST3
 2096 019c 0C       		.uleb128 0xc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 74


 2097 019d AC040000 		.4byte	.LASF31
 2098 01a1 01       		.byte	0x1
 2099 01a2 5206     		.2byte	0x652
 2100 01a4 72000000 		.4byte	0x72
 2101 01a8 01010000 		.4byte	.LLST4
 2102 01ac 0D       		.uleb128 0xd
 2103 01ad EE020000 		.4byte	.LASF32
 2104 01b1 01       		.byte	0x1
 2105 01b2 5406     		.2byte	0x654
 2106 01b4 93000000 		.4byte	0x93
 2107 01b8 2D010000 		.4byte	.LLST5
 2108 01bc 0D       		.uleb128 0xd
 2109 01bd C6030000 		.4byte	.LASF33
 2110 01c1 01       		.byte	0x1
 2111 01c2 5506     		.2byte	0x655
 2112 01c4 A9000000 		.4byte	0xa9
 2113 01c8 98010000 		.4byte	.LLST6
 2114 01cc 0D       		.uleb128 0xd
 2115 01cd CF020000 		.4byte	.LASF34
 2116 01d1 01       		.byte	0x1
 2117 01d2 5606     		.2byte	0x656
 2118 01d4 7D000000 		.4byte	0x7d
 2119 01d8 B6010000 		.4byte	.LLST7
 2120 01dc 0D       		.uleb128 0xd
 2121 01dd 11040000 		.4byte	.LASF35
 2122 01e1 01       		.byte	0x1
 2123 01e2 5706     		.2byte	0x657
 2124 01e4 88000000 		.4byte	0x88
 2125 01e8 EA010000 		.4byte	.LLST8
 2126 01ec 0E       		.uleb128 0xe
 2127 01ed A4000000 		.4byte	.LVL33
 2128 01f1 A8090000 		.4byte	0x9a8
 2129 01f5 0F       		.uleb128 0xf
 2130 01f6 01       		.uleb128 0x1
 2131 01f7 50       		.byte	0x50
 2132 01f8 01       		.uleb128 0x1
 2133 01f9 30       		.byte	0x30
 2134 01fa 00       		.byte	0
 2135 01fb 00       		.byte	0
 2136 01fc 0B       		.uleb128 0xb
 2137 01fd 1B020000 		.4byte	.LASF37
 2138 0201 01       		.byte	0x1
 2139 0202 BC06     		.2byte	0x6bc
 2140 0204 00000000 		.4byte	.LFB22
 2141 0208 4C000000 		.4byte	.LFE22-.LFB22
 2142 020c 01       		.uleb128 0x1
 2143 020d 9C       		.byte	0x9c
 2144 020e 5F020000 		.4byte	0x25f
 2145 0212 0C       		.uleb128 0xc
 2146 0213 2D020000 		.4byte	.LASF38
 2147 0217 01       		.byte	0x1
 2148 0218 BC06     		.2byte	0x6bc
 2149 021a 72000000 		.4byte	0x72
 2150 021e FD010000 		.4byte	.LLST9
 2151 0222 0D       		.uleb128 0xd
 2152 0223 00050000 		.4byte	.LASF39
 2153 0227 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 75


 2154 0228 BE06     		.2byte	0x6be
 2155 022a 72000000 		.4byte	0x72
 2156 022e 1E020000 		.4byte	.LLST10
 2157 0232 10       		.uleb128 0x10
 2158 0233 08000000 		.4byte	.LVL36
 2159 0237 B9090000 		.4byte	0x9b9
 2160 023b 11       		.uleb128 0x11
 2161 023c 28000000 		.4byte	.LVL39
 2162 0240 C4090000 		.4byte	0x9c4
 2163 0244 4E020000 		.4byte	0x24e
 2164 0248 0F       		.uleb128 0xf
 2165 0249 01       		.uleb128 0x1
 2166 024a 50       		.byte	0x50
 2167 024b 01       		.uleb128 0x1
 2168 024c 33       		.byte	0x33
 2169 024d 00       		.byte	0
 2170 024e 0E       		.uleb128 0xe
 2171 024f 3E000000 		.4byte	.LVL40
 2172 0253 D5090000 		.4byte	0x9d5
 2173 0257 0F       		.uleb128 0xf
 2174 0258 01       		.uleb128 0x1
 2175 0259 50       		.byte	0x50
 2176 025a 02       		.uleb128 0x2
 2177 025b 76       		.byte	0x76
 2178 025c 00       		.sleb128 0
 2179 025d 00       		.byte	0
 2180 025e 00       		.byte	0
 2181 025f 0B       		.uleb128 0xb
 2182 0260 34030000 		.4byte	.LASF40
 2183 0264 01       		.byte	0x1
 2184 0265 DA04     		.2byte	0x4da
 2185 0267 00000000 		.4byte	.LFB19
 2186 026b E4000000 		.4byte	.LFE19-.LFB19
 2187 026f 01       		.uleb128 0x1
 2188 0270 9C       		.byte	0x9c
 2189 0271 F0020000 		.4byte	0x2f0
 2190 0275 0C       		.uleb128 0xc
 2191 0276 AC040000 		.4byte	.LASF31
 2192 027a 01       		.byte	0x1
 2193 027b DA04     		.2byte	0x4da
 2194 027d 72000000 		.4byte	0x72
 2195 0281 3C020000 		.4byte	.LLST11
 2196 0285 11       		.uleb128 0x11
 2197 0286 8C000000 		.4byte	.LVL44
 2198 028a FC010000 		.4byte	0x1fc
 2199 028e 99020000 		.4byte	0x299
 2200 0292 0F       		.uleb128 0xf
 2201 0293 01       		.uleb128 0x1
 2202 0294 50       		.byte	0x50
 2203 0295 02       		.uleb128 0x2
 2204 0296 08       		.byte	0x8
 2205 0297 52       		.byte	0x52
 2206 0298 00       		.byte	0
 2207 0299 11       		.uleb128 0x11
 2208 029a AE000000 		.4byte	.LVL45
 2209 029e E6090000 		.4byte	0x9e6
 2210 02a2 AD020000 		.4byte	0x2ad
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 76


 2211 02a6 0F       		.uleb128 0xf
 2212 02a7 01       		.uleb128 0x1
 2213 02a8 50       		.byte	0x50
 2214 02a9 02       		.uleb128 0x2
 2215 02aa 74       		.byte	0x74
 2216 02ab 00       		.sleb128 0
 2217 02ac 00       		.byte	0
 2218 02ad 11       		.uleb128 0x11
 2219 02ae BC000000 		.4byte	.LVL46
 2220 02b2 F7090000 		.4byte	0x9f7
 2221 02b6 C7020000 		.4byte	0x2c7
 2222 02ba 0F       		.uleb128 0xf
 2223 02bb 01       		.uleb128 0x1
 2224 02bc 51       		.byte	0x51
 2225 02bd 02       		.uleb128 0x2
 2226 02be 75       		.byte	0x75
 2227 02bf 00       		.sleb128 0
 2228 02c0 0F       		.uleb128 0xf
 2229 02c1 01       		.uleb128 0x1
 2230 02c2 50       		.byte	0x50
 2231 02c3 02       		.uleb128 0x2
 2232 02c4 76       		.byte	0x76
 2233 02c5 00       		.sleb128 0
 2234 02c6 00       		.byte	0
 2235 02c7 11       		.uleb128 0x11
 2236 02c8 C4000000 		.4byte	.LVL47
 2237 02cc 0D0A0000 		.4byte	0xa0d
 2238 02d0 E0020000 		.4byte	0x2e0
 2239 02d4 0F       		.uleb128 0xf
 2240 02d5 01       		.uleb128 0x1
 2241 02d6 51       		.byte	0x51
 2242 02d7 02       		.uleb128 0x2
 2243 02d8 75       		.byte	0x75
 2244 02d9 00       		.sleb128 0
 2245 02da 0F       		.uleb128 0xf
 2246 02db 01       		.uleb128 0x1
 2247 02dc 50       		.byte	0x50
 2248 02dd 01       		.uleb128 0x1
 2249 02de 4C       		.byte	0x4c
 2250 02df 00       		.byte	0
 2251 02e0 0E       		.uleb128 0xe
 2252 02e1 CC000000 		.4byte	.LVL48
 2253 02e5 230A0000 		.4byte	0xa23
 2254 02e9 0F       		.uleb128 0xf
 2255 02ea 01       		.uleb128 0x1
 2256 02eb 50       		.byte	0x50
 2257 02ec 01       		.uleb128 0x1
 2258 02ed 4D       		.byte	0x4d
 2259 02ee 00       		.byte	0
 2260 02ef 00       		.byte	0
 2261 02f0 12       		.uleb128 0x12
 2262 02f1 EE000000 		.4byte	.LASF41
 2263 02f5 01       		.byte	0x1
 2264 02f6 5B       		.byte	0x5b
 2265 02f7 00000000 		.4byte	.LFB0
 2266 02fb C0000000 		.4byte	.LFE0-.LFB0
 2267 02ff 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 77


 2268 0300 9C       		.byte	0x9c
 2269 0301 7A030000 		.4byte	0x37a
 2270 0305 11       		.uleb128 0x11
 2271 0306 16000000 		.4byte	.LVL49
 2272 030a 3D0A0000 		.4byte	0xa3d
 2273 030e 18030000 		.4byte	0x318
 2274 0312 0F       		.uleb128 0xf
 2275 0313 01       		.uleb128 0x1
 2276 0314 50       		.byte	0x50
 2277 0315 01       		.uleb128 0x1
 2278 0316 40       		.byte	0x40
 2279 0317 00       		.byte	0
 2280 0318 11       		.uleb128 0x11
 2281 0319 1C000000 		.4byte	.LVL50
 2282 031d 4E0A0000 		.4byte	0xa4e
 2283 0321 2B030000 		.4byte	0x32b
 2284 0325 0F       		.uleb128 0xf
 2285 0326 01       		.uleb128 0x1
 2286 0327 50       		.byte	0x50
 2287 0328 01       		.uleb128 0x1
 2288 0329 40       		.byte	0x40
 2289 032a 00       		.byte	0
 2290 032b 11       		.uleb128 0x11
 2291 032c 24000000 		.4byte	.LVL51
 2292 0330 5F0A0000 		.4byte	0xa5f
 2293 0334 43030000 		.4byte	0x343
 2294 0338 0F       		.uleb128 0xf
 2295 0339 01       		.uleb128 0x1
 2296 033a 51       		.byte	0x51
 2297 033b 01       		.uleb128 0x1
 2298 033c 37       		.byte	0x37
 2299 033d 0F       		.uleb128 0xf
 2300 033e 01       		.uleb128 0x1
 2301 033f 50       		.byte	0x50
 2302 0340 01       		.uleb128 0x1
 2303 0341 4D       		.byte	0x4d
 2304 0342 00       		.byte	0
 2305 0343 11       		.uleb128 0x11
 2306 0344 88000000 		.4byte	.LVL52
 2307 0348 46010000 		.4byte	0x146
 2308 034c 70030000 		.4byte	0x370
 2309 0350 0F       		.uleb128 0xf
 2310 0351 01       		.uleb128 0x1
 2311 0352 53       		.byte	0x53
 2312 0353 01       		.uleb128 0x1
 2313 0354 38       		.byte	0x38
 2314 0355 0F       		.uleb128 0xf
 2315 0356 01       		.uleb128 0x1
 2316 0357 52       		.byte	0x52
 2317 0358 03       		.uleb128 0x3
 2318 0359 0B       		.byte	0xb
 2319 035a 0080     		.2byte	0x8000
 2320 035c 0F       		.uleb128 0xf
 2321 035d 01       		.uleb128 0x1
 2322 035e 51       		.byte	0x51
 2323 035f 03       		.uleb128 0x3
 2324 0360 0B       		.byte	0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 78


 2325 0361 6B8D     		.2byte	0x8d6b
 2326 0363 0F       		.uleb128 0xf
 2327 0364 01       		.uleb128 0x1
 2328 0365 50       		.byte	0x50
 2329 0366 01       		.uleb128 0x1
 2330 0367 32       		.byte	0x32
 2331 0368 0F       		.uleb128 0xf
 2332 0369 02       		.uleb128 0x2
 2333 036a 7D       		.byte	0x7d
 2334 036b 00       		.sleb128 0
 2335 036c 02       		.uleb128 0x2
 2336 036d 77       		.byte	0x77
 2337 036e 00       		.sleb128 0
 2338 036f 00       		.byte	0
 2339 0370 10       		.uleb128 0x10
 2340 0371 A8000000 		.4byte	.LVL53
 2341 0375 5F020000 		.4byte	0x25f
 2342 0379 00       		.byte	0
 2343 037a 12       		.uleb128 0x12
 2344 037b 11050000 		.4byte	.LASF42
 2345 037f 01       		.byte	0x1
 2346 0380 B8       		.byte	0xb8
 2347 0381 00000000 		.4byte	.LFB1
 2348 0385 D4000000 		.4byte	.LFE1-.LFB1
 2349 0389 01       		.uleb128 0x1
 2350 038a 9C       		.byte	0x9c
 2351 038b D6030000 		.4byte	0x3d6
 2352 038f 13       		.uleb128 0x13
 2353 0390 AC040000 		.4byte	.LASF31
 2354 0394 01       		.byte	0x1
 2355 0395 BA       		.byte	0xba
 2356 0396 72000000 		.4byte	0x72
 2357 039a 14       		.uleb128 0x14
 2358 039b 00050000 		.4byte	.LASF39
 2359 039f 01       		.byte	0x1
 2360 03a0 BB       		.byte	0xbb
 2361 03a1 72000000 		.4byte	0x72
 2362 03a5 5D020000 		.4byte	.LLST12
 2363 03a9 10       		.uleb128 0x10
 2364 03aa 06000000 		.4byte	.LVL54
 2365 03ae B9090000 		.4byte	0x9b9
 2366 03b2 11       		.uleb128 0x11
 2367 03b3 54000000 		.4byte	.LVL58
 2368 03b7 C4090000 		.4byte	0x9c4
 2369 03bb C5030000 		.4byte	0x3c5
 2370 03bf 0F       		.uleb128 0xf
 2371 03c0 01       		.uleb128 0x1
 2372 03c1 50       		.byte	0x50
 2373 03c2 01       		.uleb128 0x1
 2374 03c3 33       		.byte	0x33
 2375 03c4 00       		.byte	0
 2376 03c5 0E       		.uleb128 0xe
 2377 03c6 B4000000 		.4byte	.LVL59
 2378 03ca D5090000 		.4byte	0x9d5
 2379 03ce 0F       		.uleb128 0xf
 2380 03cf 01       		.uleb128 0x1
 2381 03d0 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 79


 2382 03d1 02       		.uleb128 0x2
 2383 03d2 76       		.byte	0x76
 2384 03d3 00       		.sleb128 0
 2385 03d4 00       		.byte	0
 2386 03d5 00       		.byte	0
 2387 03d6 15       		.uleb128 0x15
 2388 03d7 92010000 		.4byte	.LASF43
 2389 03db 01       		.byte	0x1
 2390 03dc 4901     		.2byte	0x149
 2391 03de 00000000 		.4byte	.LFB2
 2392 03e2 28000000 		.4byte	.LFE2-.LFB2
 2393 03e6 01       		.uleb128 0x1
 2394 03e7 9C       		.byte	0x9c
 2395 03e8 FF030000 		.4byte	0x3ff
 2396 03ec 10       		.uleb128 0x10
 2397 03ed 16000000 		.4byte	.LVL61
 2398 03f1 F0020000 		.4byte	0x2f0
 2399 03f5 10       		.uleb128 0x10
 2400 03f6 20000000 		.4byte	.LVL62
 2401 03fa 7A030000 		.4byte	0x37a
 2402 03fe 00       		.byte	0
 2403 03ff 15       		.uleb128 0x15
 2404 0400 08040000 		.4byte	.LASF44
 2405 0404 01       		.byte	0x1
 2406 0405 6A01     		.2byte	0x16a
 2407 0407 00000000 		.4byte	.LFB3
 2408 040b E4000000 		.4byte	.LFE3-.LFB3
 2409 040f 01       		.uleb128 0x1
 2410 0410 9C       		.byte	0x9c
 2411 0411 52040000 		.4byte	0x452
 2412 0415 0D       		.uleb128 0xd
 2413 0416 00050000 		.4byte	.LASF39
 2414 041a 01       		.byte	0x1
 2415 041b 6C01     		.2byte	0x16c
 2416 041d 72000000 		.4byte	0x72
 2417 0421 7B020000 		.4byte	.LLST13
 2418 0425 10       		.uleb128 0x10
 2419 0426 06000000 		.4byte	.LVL63
 2420 042a B9090000 		.4byte	0x9b9
 2421 042e 11       		.uleb128 0x11
 2422 042f 4A000000 		.4byte	.LVL66
 2423 0433 C4090000 		.4byte	0x9c4
 2424 0437 41040000 		.4byte	0x441
 2425 043b 0F       		.uleb128 0xf
 2426 043c 01       		.uleb128 0x1
 2427 043d 50       		.byte	0x50
 2428 043e 01       		.uleb128 0x1
 2429 043f 33       		.byte	0x33
 2430 0440 00       		.byte	0
 2431 0441 0E       		.uleb128 0xe
 2432 0442 CE000000 		.4byte	.LVL67
 2433 0446 D5090000 		.4byte	0x9d5
 2434 044a 0F       		.uleb128 0xf
 2435 044b 01       		.uleb128 0x1
 2436 044c 50       		.byte	0x50
 2437 044d 02       		.uleb128 0x2
 2438 044e 76       		.byte	0x76
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 80


 2439 044f 00       		.sleb128 0
 2440 0450 00       		.byte	0
 2441 0451 00       		.byte	0
 2442 0452 15       		.uleb128 0x15
 2443 0453 5B010000 		.4byte	.LASF45
 2444 0457 01       		.byte	0x1
 2445 0458 AD01     		.2byte	0x1ad
 2446 045a 00000000 		.4byte	.LFB4
 2447 045e 18000000 		.4byte	.LFE4-.LFB4
 2448 0462 01       		.uleb128 0x1
 2449 0463 9C       		.byte	0x9c
 2450 0464 87040000 		.4byte	0x487
 2451 0468 0C       		.uleb128 0xc
 2452 0469 89030000 		.4byte	.LASF46
 2453 046d 01       		.byte	0x1
 2454 046e AD01     		.2byte	0x1ad
 2455 0470 72000000 		.4byte	0x72
 2456 0474 99020000 		.4byte	.LLST14
 2457 0478 16       		.uleb128 0x16
 2458 0479 9C050000 		.4byte	.LASF47
 2459 047d 01       		.byte	0x1
 2460 047e AF01     		.2byte	0x1af
 2461 0480 72000000 		.4byte	0x72
 2462 0484 01       		.uleb128 0x1
 2463 0485 52       		.byte	0x52
 2464 0486 00       		.byte	0
 2465 0487 15       		.uleb128 0x15
 2466 0488 D0040000 		.4byte	.LASF48
 2467 048c 01       		.byte	0x1
 2468 048d D101     		.2byte	0x1d1
 2469 048f 00000000 		.4byte	.LFB5
 2470 0493 18000000 		.4byte	.LFE5-.LFB5
 2471 0497 01       		.uleb128 0x1
 2472 0498 9C       		.byte	0x9c
 2473 0499 BC040000 		.4byte	0x4bc
 2474 049d 0C       		.uleb128 0xc
 2475 049e 6E030000 		.4byte	.LASF49
 2476 04a2 01       		.byte	0x1
 2477 04a3 D101     		.2byte	0x1d1
 2478 04a5 72000000 		.4byte	0x72
 2479 04a9 BA020000 		.4byte	.LLST15
 2480 04ad 16       		.uleb128 0x16
 2481 04ae 9C050000 		.4byte	.LASF47
 2482 04b2 01       		.byte	0x1
 2483 04b3 D301     		.2byte	0x1d3
 2484 04b5 72000000 		.4byte	0x72
 2485 04b9 01       		.uleb128 0x1
 2486 04ba 52       		.byte	0x52
 2487 04bb 00       		.byte	0
 2488 04bc 17       		.uleb128 0x17
 2489 04bd 0B030000 		.4byte	.LASF53
 2490 04c1 01       		.byte	0x1
 2491 04c2 F901     		.2byte	0x1f9
 2492 04c4 72000000 		.4byte	0x72
 2493 04c8 00000000 		.4byte	.LFB6
 2494 04cc 74000000 		.4byte	.LFE6-.LFB6
 2495 04d0 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 81


 2496 04d1 9C       		.byte	0x9c
 2497 04d2 17050000 		.4byte	0x517
 2498 04d6 0C       		.uleb128 0xc
 2499 04d7 29050000 		.4byte	.LASF50
 2500 04db 01       		.byte	0x1
 2501 04dc F901     		.2byte	0x1f9
 2502 04de B4000000 		.4byte	0xb4
 2503 04e2 DB020000 		.4byte	.LLST16
 2504 04e6 0D       		.uleb128 0xd
 2505 04e7 9C050000 		.4byte	.LASF47
 2506 04eb 01       		.byte	0x1
 2507 04ec FB01     		.2byte	0x1fb
 2508 04ee 7D000000 		.4byte	0x7d
 2509 04f2 09030000 		.4byte	.LLST17
 2510 04f6 0D       		.uleb128 0xd
 2511 04f7 54010000 		.4byte	.LASF51
 2512 04fb 01       		.byte	0x1
 2513 04fc FC01     		.2byte	0x1fc
 2514 04fe 72000000 		.4byte	0x72
 2515 0502 30030000 		.4byte	.LLST18
 2516 0506 0D       		.uleb128 0xd
 2517 0507 C0040000 		.4byte	.LASF52
 2518 050b 01       		.byte	0x1
 2519 050c FD01     		.2byte	0x1fd
 2520 050e B4000000 		.4byte	0xb4
 2521 0512 4F030000 		.4byte	.LLST19
 2522 0516 00       		.byte	0
 2523 0517 18       		.uleb128 0x18
 2524 0518 1C050000 		.4byte	.LASF54
 2525 051c 01       		.byte	0x1
 2526 051d 2802     		.2byte	0x228
 2527 051f 7D000000 		.4byte	0x7d
 2528 0523 00000000 		.4byte	.LFB7
 2529 0527 24000000 		.4byte	.LFE7-.LFB7
 2530 052b 01       		.uleb128 0x1
 2531 052c 9C       		.byte	0x9c
 2532 052d 52050000 		.4byte	0x552
 2533 0531 0D       		.uleb128 0xd
 2534 0532 98040000 		.4byte	.LASF55
 2535 0536 01       		.byte	0x1
 2536 0537 2A02     		.2byte	0x22a
 2537 0539 72000000 		.4byte	0x72
 2538 053d 8E030000 		.4byte	.LLST20
 2539 0541 0D       		.uleb128 0xd
 2540 0542 CF020000 		.4byte	.LASF34
 2541 0546 01       		.byte	0x1
 2542 0547 2B02     		.2byte	0x22b
 2543 0549 7D000000 		.4byte	0x7d
 2544 054d A1030000 		.4byte	.LLST21
 2545 0551 00       		.byte	0
 2546 0552 19       		.uleb128 0x19
 2547 0553 19010000 		.4byte	.LASF56
 2548 0557 01       		.byte	0x1
 2549 0558 4A02     		.2byte	0x24a
 2550 055a 00000000 		.4byte	.LFB8
 2551 055e 10000000 		.4byte	.LFE8-.LFB8
 2552 0562 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 82


 2553 0563 9C       		.byte	0x9c
 2554 0564 19       		.uleb128 0x19
 2555 0565 BF020000 		.4byte	.LASF57
 2556 0569 01       		.byte	0x1
 2557 056a 6102     		.2byte	0x261
 2558 056c 00000000 		.4byte	.LFB9
 2559 0570 10000000 		.4byte	.LFE9-.LFB9
 2560 0574 01       		.uleb128 0x1
 2561 0575 9C       		.byte	0x9c
 2562 0576 18       		.uleb128 0x18
 2563 0577 17030000 		.4byte	.LASF58
 2564 057b 01       		.byte	0x1
 2565 057c 8402     		.2byte	0x284
 2566 057e 72000000 		.4byte	0x72
 2567 0582 00000000 		.4byte	.LFB10
 2568 0586 2C000000 		.4byte	.LFE10-.LFB10
 2569 058a 01       		.uleb128 0x1
 2570 058b 9C       		.byte	0x9c
 2571 058c B1050000 		.4byte	0x5b1
 2572 0590 0C       		.uleb128 0xc
 2573 0591 33020000 		.4byte	.LASF59
 2574 0595 01       		.byte	0x1
 2575 0596 8402     		.2byte	0x284
 2576 0598 72000000 		.4byte	0x72
 2577 059c BF030000 		.4byte	.LLST22
 2578 05a0 0D       		.uleb128 0xd
 2579 05a1 54010000 		.4byte	.LASF51
 2580 05a5 01       		.byte	0x1
 2581 05a6 8602     		.2byte	0x286
 2582 05a8 72000000 		.4byte	0x72
 2583 05ac E0030000 		.4byte	.LLST23
 2584 05b0 00       		.byte	0
 2585 05b1 18       		.uleb128 0x18
 2586 05b2 43030000 		.4byte	.LASF60
 2587 05b6 01       		.byte	0x1
 2588 05b7 B302     		.2byte	0x2b3
 2589 05b9 93000000 		.4byte	0x93
 2590 05bd 00000000 		.4byte	.LFB11
 2591 05c1 48000000 		.4byte	.LFE11-.LFB11
 2592 05c5 01       		.uleb128 0x1
 2593 05c6 9C       		.byte	0x9c
 2594 05c7 EC050000 		.4byte	0x5ec
 2595 05cb 0D       		.uleb128 0xd
 2596 05cc A3050000 		.4byte	.LASF61
 2597 05d0 01       		.byte	0x1
 2598 05d1 B502     		.2byte	0x2b5
 2599 05d3 93000000 		.4byte	0x93
 2600 05d7 FE030000 		.4byte	.LLST24
 2601 05db 0D       		.uleb128 0xd
 2602 05dc 6E030000 		.4byte	.LASF49
 2603 05e0 01       		.byte	0x1
 2604 05e1 B602     		.2byte	0x2b6
 2605 05e3 72000000 		.4byte	0x72
 2606 05e7 11040000 		.4byte	.LLST25
 2607 05eb 00       		.byte	0
 2608 05ec 18       		.uleb128 0x18
 2609 05ed AA050000 		.4byte	.LASF62
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 83


 2610 05f1 01       		.byte	0x1
 2611 05f2 E902     		.2byte	0x2e9
 2612 05f4 9E000000 		.4byte	0x9e
 2613 05f8 00000000 		.4byte	.LFB12
 2614 05fc 50000000 		.4byte	.LFE12-.LFB12
 2615 0600 01       		.uleb128 0x1
 2616 0601 9C       		.byte	0x9c
 2617 0602 27060000 		.4byte	0x627
 2618 0606 0D       		.uleb128 0xd
 2619 0607 A3050000 		.4byte	.LASF61
 2620 060b 01       		.byte	0x1
 2621 060c EB02     		.2byte	0x2eb
 2622 060e 7D000000 		.4byte	0x7d
 2623 0612 2F040000 		.4byte	.LLST26
 2624 0616 0D       		.uleb128 0xd
 2625 0617 6E030000 		.4byte	.LASF49
 2626 061b 01       		.byte	0x1
 2627 061c EC02     		.2byte	0x2ec
 2628 061e 72000000 		.4byte	0x72
 2629 0622 5D040000 		.4byte	.LLST27
 2630 0626 00       		.byte	0
 2631 0627 18       		.uleb128 0x18
 2632 0628 E3010000 		.4byte	.LASF63
 2633 062c 01       		.byte	0x1
 2634 062d 2503     		.2byte	0x325
 2635 062f A9000000 		.4byte	0xa9
 2636 0633 00000000 		.4byte	.LFB13
 2637 0637 6C000000 		.4byte	.LFE13-.LFB13
 2638 063b 01       		.uleb128 0x1
 2639 063c 9C       		.byte	0x9c
 2640 063d 62060000 		.4byte	0x662
 2641 0641 0D       		.uleb128 0xd
 2642 0642 A3050000 		.4byte	.LASF61
 2643 0646 01       		.byte	0x1
 2644 0647 2703     		.2byte	0x327
 2645 0649 88000000 		.4byte	0x88
 2646 064d 7B040000 		.4byte	.LLST28
 2647 0651 0D       		.uleb128 0xd
 2648 0652 6E030000 		.4byte	.LASF49
 2649 0656 01       		.byte	0x1
 2650 0657 2803     		.2byte	0x328
 2651 0659 72000000 		.4byte	0x72
 2652 065d C6040000 		.4byte	.LLST29
 2653 0661 00       		.byte	0
 2654 0662 15       		.uleb128 0x15
 2655 0663 3A050000 		.4byte	.LASF64
 2656 0667 01       		.byte	0x1
 2657 0668 8203     		.2byte	0x382
 2658 066a 00000000 		.4byte	.LFB14
 2659 066e 0C000000 		.4byte	.LFE14-.LFB14
 2660 0672 01       		.uleb128 0x1
 2661 0673 9C       		.byte	0x9c
 2662 0674 87060000 		.4byte	0x687
 2663 0678 1A       		.uleb128 0x1a
 2664 0679 C9040000 		.4byte	.LASF65
 2665 067d 01       		.byte	0x1
 2666 067e 8203     		.2byte	0x382
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 84


 2667 0680 A9000000 		.4byte	0xa9
 2668 0684 01       		.uleb128 0x1
 2669 0685 50       		.byte	0x50
 2670 0686 00       		.byte	0
 2671 0687 15       		.uleb128 0x15
 2672 0688 8E030000 		.4byte	.LASF66
 2673 068c 01       		.byte	0x1
 2674 068d A503     		.2byte	0x3a5
 2675 068f 00000000 		.4byte	.LFB15
 2676 0693 0C000000 		.4byte	.LFE15-.LFB15
 2677 0697 01       		.uleb128 0x1
 2678 0698 9C       		.byte	0x9c
 2679 0699 AC060000 		.4byte	0x6ac
 2680 069d 1A       		.uleb128 0x1a
 2681 069e 07000000 		.4byte	.LASF67
 2682 06a2 01       		.byte	0x1
 2683 06a3 A503     		.2byte	0x3a5
 2684 06a5 A9000000 		.4byte	0xa9
 2685 06a9 01       		.uleb128 0x1
 2686 06aa 50       		.byte	0x50
 2687 06ab 00       		.byte	0
 2688 06ac 18       		.uleb128 0x18
 2689 06ad A0030000 		.4byte	.LASF68
 2690 06b1 01       		.byte	0x1
 2691 06b2 C003     		.2byte	0x3c0
 2692 06b4 9E000000 		.4byte	0x9e
 2693 06b8 00000000 		.4byte	.LFB16
 2694 06bc 24000000 		.4byte	.LFE16-.LFB16
 2695 06c0 01       		.uleb128 0x1
 2696 06c1 9C       		.byte	0x9c
 2697 06c2 E7060000 		.4byte	0x6e7
 2698 06c6 0C       		.uleb128 0xc
 2699 06c7 EB040000 		.4byte	.LASF69
 2700 06cb 01       		.byte	0x1
 2701 06cc C003     		.2byte	0x3c0
 2702 06ce A9000000 		.4byte	0xa9
 2703 06d2 EF040000 		.4byte	.LLST30
 2704 06d6 0D       		.uleb128 0xd
 2705 06d7 38040000 		.4byte	.LASF70
 2706 06db 01       		.byte	0x1
 2707 06dc C303     		.2byte	0x3c3
 2708 06de 9E000000 		.4byte	0x9e
 2709 06e2 0D050000 		.4byte	.LLST31
 2710 06e6 00       		.byte	0
 2711 06e7 17       		.uleb128 0x17
 2712 06e8 AC000000 		.4byte	.LASF71
 2713 06ec 01       		.byte	0x1
 2714 06ed FD03     		.2byte	0x3fd
 2715 06ef B4000000 		.4byte	0xb4
 2716 06f3 00000000 		.4byte	.LFB17
 2717 06f7 28000000 		.4byte	.LFE17-.LFB17
 2718 06fb 01       		.uleb128 0x1
 2719 06fc 9C       		.byte	0x9c
 2720 06fd 20070000 		.4byte	0x720
 2721 0701 0C       		.uleb128 0xc
 2722 0702 EB040000 		.4byte	.LASF69
 2723 0706 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 85


 2724 0707 FD03     		.2byte	0x3fd
 2725 0709 A9000000 		.4byte	0xa9
 2726 070d 20050000 		.4byte	.LLST32
 2727 0711 16       		.uleb128 0x16
 2728 0712 F3010000 		.4byte	.LASF72
 2729 0716 01       		.byte	0x1
 2730 0717 0004     		.2byte	0x400
 2731 0719 B4000000 		.4byte	0xb4
 2732 071d 01       		.uleb128 0x1
 2733 071e 50       		.byte	0x50
 2734 071f 00       		.byte	0
 2735 0720 18       		.uleb128 0x18
 2736 0721 B2010000 		.4byte	.LASF73
 2737 0725 01       		.byte	0x1
 2738 0726 3F04     		.2byte	0x43f
 2739 0728 A9000000 		.4byte	0xa9
 2740 072c 00000000 		.4byte	.LFB18
 2741 0730 64000000 		.4byte	.LFE18-.LFB18
 2742 0734 01       		.uleb128 0x1
 2743 0735 9C       		.byte	0x9c
 2744 0736 8B070000 		.4byte	0x78b
 2745 073a 0C       		.uleb128 0xc
 2746 073b EB040000 		.4byte	.LASF69
 2747 073f 01       		.byte	0x1
 2748 0740 3F04     		.2byte	0x43f
 2749 0742 A9000000 		.4byte	0xa9
 2750 0746 4E050000 		.4byte	.LLST33
 2751 074a 0D       		.uleb128 0xd
 2752 074b 67020000 		.4byte	.LASF74
 2753 074f 01       		.byte	0x1
 2754 0750 4204     		.2byte	0x442
 2755 0752 A9000000 		.4byte	0xa9
 2756 0756 6F050000 		.4byte	.LLST34
 2757 075a 0D       		.uleb128 0xd
 2758 075b 65040000 		.4byte	.LASF75
 2759 075f 01       		.byte	0x1
 2760 0760 4304     		.2byte	0x443
 2761 0762 A9000000 		.4byte	0xa9
 2762 0766 92050000 		.4byte	.LLST35
 2763 076a 0D       		.uleb128 0xd
 2764 076b 6B040000 		.4byte	.LASF76
 2765 076f 01       		.byte	0x1
 2766 0770 4404     		.2byte	0x444
 2767 0772 A9000000 		.4byte	0xa9
 2768 0776 A5050000 		.4byte	.LLST36
 2769 077a 0D       		.uleb128 0xd
 2770 077b 4F040000 		.4byte	.LASF30
 2771 077f 01       		.byte	0x1
 2772 0780 4504     		.2byte	0x445
 2773 0782 72000000 		.4byte	0x72
 2774 0786 B8050000 		.4byte	.LLST37
 2775 078a 00       		.byte	0
 2776 078b 15       		.uleb128 0x15
 2777 078c E6030000 		.4byte	.LASF77
 2778 0790 01       		.byte	0x1
 2779 0791 1006     		.2byte	0x610
 2780 0793 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 86


 2781 0797 60000000 		.4byte	.LFE20-.LFB20
 2782 079b 01       		.uleb128 0x1
 2783 079c 9C       		.byte	0x9c
 2784 079d 00080000 		.4byte	0x800
 2785 07a1 0C       		.uleb128 0xc
 2786 07a2 AC040000 		.4byte	.LASF31
 2787 07a6 01       		.byte	0x1
 2788 07a7 1006     		.2byte	0x610
 2789 07a9 72000000 		.4byte	0x72
 2790 07ad D6050000 		.4byte	.LLST38
 2791 07b1 0C       		.uleb128 0xc
 2792 07b2 B8040000 		.4byte	.LASF78
 2793 07b6 01       		.byte	0x1
 2794 07b7 1006     		.2byte	0x610
 2795 07b9 72000000 		.4byte	0x72
 2796 07bd 10060000 		.4byte	.LLST39
 2797 07c1 10       		.uleb128 0x10
 2798 07c2 1E000000 		.4byte	.LVL157
 2799 07c6 FF030000 		.4byte	0x3ff
 2800 07ca 11       		.uleb128 0x11
 2801 07cb 24000000 		.4byte	.LVL158
 2802 07cf 5F020000 		.4byte	0x25f
 2803 07d3 DE070000 		.4byte	0x7de
 2804 07d7 0F       		.uleb128 0xf
 2805 07d8 01       		.uleb128 0x1
 2806 07d9 50       		.byte	0x50
 2807 07da 02       		.uleb128 0x2
 2808 07db 74       		.byte	0x74
 2809 07dc 00       		.sleb128 0
 2810 07dd 00       		.byte	0
 2811 07de 10       		.uleb128 0x10
 2812 07df 42000000 		.4byte	.LVL159
 2813 07e3 D6030000 		.4byte	0x3d6
 2814 07e7 10       		.uleb128 0x10
 2815 07e8 46000000 		.4byte	.LVL160
 2816 07ec 52050000 		.4byte	0x552
 2817 07f0 0E       		.uleb128 0xe
 2818 07f1 4E000000 		.4byte	.LVL163
 2819 07f5 A8090000 		.4byte	0x9a8
 2820 07f9 0F       		.uleb128 0xf
 2821 07fa 01       		.uleb128 0x1
 2822 07fb 50       		.byte	0x50
 2823 07fc 01       		.uleb128 0x1
 2824 07fd 30       		.byte	0x30
 2825 07fe 00       		.byte	0
 2826 07ff 00       		.byte	0
 2827 0800 18       		.uleb128 0x18
 2828 0801 E1040000 		.4byte	.LASF79
 2829 0805 01       		.byte	0x1
 2830 0806 E206     		.2byte	0x6e2
 2831 0808 93000000 		.4byte	0x93
 2832 080c 00000000 		.4byte	.LFB23
 2833 0810 28000000 		.4byte	.LFE23-.LFB23
 2834 0814 01       		.uleb128 0x1
 2835 0815 9C       		.byte	0x9c
 2836 0816 59080000 		.4byte	0x859
 2837 081a 0D       		.uleb128 0xd
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 87


 2838 081b A3050000 		.4byte	.LASF61
 2839 081f 01       		.byte	0x1
 2840 0820 E406     		.2byte	0x6e4
 2841 0822 93000000 		.4byte	0x93
 2842 0826 4A060000 		.4byte	.LLST40
 2843 082a 10       		.uleb128 0x10
 2844 082b 10000000 		.4byte	.LVL164
 2845 082f 52050000 		.4byte	0x552
 2846 0833 11       		.uleb128 0x11
 2847 0834 16000000 		.4byte	.LVL165
 2848 0838 76050000 		.4byte	0x576
 2849 083c 46080000 		.4byte	0x846
 2850 0840 0F       		.uleb128 0xf
 2851 0841 01       		.uleb128 0x1
 2852 0842 50       		.byte	0x50
 2853 0843 01       		.uleb128 0x1
 2854 0844 30       		.byte	0x30
 2855 0845 00       		.byte	0
 2856 0846 10       		.uleb128 0x10
 2857 0847 1A000000 		.4byte	.LVL166
 2858 084b B1050000 		.4byte	0x5b1
 2859 084f 10       		.uleb128 0x10
 2860 0850 20000000 		.4byte	.LVL168
 2861 0854 64050000 		.4byte	0x564
 2862 0858 00       		.byte	0
 2863 0859 18       		.uleb128 0x18
 2864 085a DE000000 		.4byte	.LASF80
 2865 085e 01       		.byte	0x1
 2866 085f 0307     		.2byte	0x703
 2867 0861 9E000000 		.4byte	0x9e
 2868 0865 00000000 		.4byte	.LFB24
 2869 0869 28000000 		.4byte	.LFE24-.LFB24
 2870 086d 01       		.uleb128 0x1
 2871 086e 9C       		.byte	0x9c
 2872 086f B2080000 		.4byte	0x8b2
 2873 0873 0D       		.uleb128 0xd
 2874 0874 A3050000 		.4byte	.LASF61
 2875 0878 01       		.byte	0x1
 2876 0879 0507     		.2byte	0x705
 2877 087b 9E000000 		.4byte	0x9e
 2878 087f 73060000 		.4byte	.LLST41
 2879 0883 10       		.uleb128 0x10
 2880 0884 10000000 		.4byte	.LVL170
 2881 0888 52050000 		.4byte	0x552
 2882 088c 11       		.uleb128 0x11
 2883 088d 16000000 		.4byte	.LVL171
 2884 0891 76050000 		.4byte	0x576
 2885 0895 9F080000 		.4byte	0x89f
 2886 0899 0F       		.uleb128 0xf
 2887 089a 01       		.uleb128 0x1
 2888 089b 50       		.byte	0x50
 2889 089c 01       		.uleb128 0x1
 2890 089d 30       		.byte	0x30
 2891 089e 00       		.byte	0
 2892 089f 10       		.uleb128 0x10
 2893 08a0 1A000000 		.4byte	.LVL172
 2894 08a4 EC050000 		.4byte	0x5ec
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 88


 2895 08a8 10       		.uleb128 0x10
 2896 08a9 20000000 		.4byte	.LVL174
 2897 08ad 64050000 		.4byte	0x564
 2898 08b1 00       		.byte	0
 2899 08b2 18       		.uleb128 0x18
 2900 08b3 F5040000 		.4byte	.LASF81
 2901 08b7 01       		.byte	0x1
 2902 08b8 2407     		.2byte	0x724
 2903 08ba A9000000 		.4byte	0xa9
 2904 08be 00000000 		.4byte	.LFB25
 2905 08c2 28000000 		.4byte	.LFE25-.LFB25
 2906 08c6 01       		.uleb128 0x1
 2907 08c7 9C       		.byte	0x9c
 2908 08c8 0B090000 		.4byte	0x90b
 2909 08cc 0D       		.uleb128 0xd
 2910 08cd A3050000 		.4byte	.LASF61
 2911 08d1 01       		.byte	0x1
 2912 08d2 2607     		.2byte	0x726
 2913 08d4 A9000000 		.4byte	0xa9
 2914 08d8 9C060000 		.4byte	.LLST42
 2915 08dc 10       		.uleb128 0x10
 2916 08dd 10000000 		.4byte	.LVL176
 2917 08e1 52050000 		.4byte	0x552
 2918 08e5 11       		.uleb128 0x11
 2919 08e6 16000000 		.4byte	.LVL177
 2920 08ea 76050000 		.4byte	0x576
 2921 08ee F8080000 		.4byte	0x8f8
 2922 08f2 0F       		.uleb128 0xf
 2923 08f3 01       		.uleb128 0x1
 2924 08f4 50       		.byte	0x50
 2925 08f5 01       		.uleb128 0x1
 2926 08f6 30       		.byte	0x30
 2927 08f7 00       		.byte	0
 2928 08f8 10       		.uleb128 0x10
 2929 08f9 1A000000 		.4byte	.LVL178
 2930 08fd 27060000 		.4byte	0x627
 2931 0901 10       		.uleb128 0x10
 2932 0902 20000000 		.4byte	.LVL180
 2933 0906 64050000 		.4byte	0x564
 2934 090a 00       		.byte	0
 2935 090b 1B       		.uleb128 0x1b
 2936 090c 3B010000 		.4byte	0x13b
 2937 0910 1B090000 		.4byte	0x91b
 2938 0914 1C       		.uleb128 0x1c
 2939 0915 13010000 		.4byte	0x113
 2940 0919 00       		.byte	0
 2941 091a 00       		.byte	0
 2942 091b 1D       		.uleb128 0x1d
 2943 091c 2B030000 		.4byte	.LASF82
 2944 0920 01       		.byte	0x1
 2945 0921 3D       		.byte	0x3d
 2946 0922 0B090000 		.4byte	0x90b
 2947 0926 05       		.uleb128 0x5
 2948 0927 03       		.byte	0x3
 2949 0928 00000000 		.4byte	ADC_gcor
 2950 092c 1E       		.uleb128 0x1e
 2951 092d 0F020000 		.4byte	.LASF83
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 89


 2952 0931 01       		.byte	0x1
 2953 0932 2C       		.byte	0x2c
 2954 0933 72000000 		.4byte	0x72
 2955 0937 05       		.uleb128 0x5
 2956 0938 03       		.byte	0x3
 2957 0939 00000000 		.4byte	ADC_initVar
 2958 093d 1E       		.uleb128 0x1e
 2959 093e 9C010000 		.4byte	.LASF84
 2960 0942 01       		.byte	0x1
 2961 0943 24       		.byte	0x24
 2962 0944 D9000000 		.4byte	0xd9
 2963 0948 05       		.uleb128 0x5
 2964 0949 03       		.byte	0x3
 2965 094a 00000000 		.4byte	ADC_convDone
 2966 094e 1E       		.uleb128 0x1e
 2967 094f BF000000 		.4byte	.LASF85
 2968 0953 01       		.byte	0x1
 2969 0954 29       		.byte	0x29
 2970 0955 D9000000 		.4byte	0xd9
 2971 0959 05       		.uleb128 0x5
 2972 095a 03       		.byte	0x3
 2973 095b 00000000 		.4byte	ADC_stopConversion
 2974 095f 1E       		.uleb128 0x1e
 2975 0960 D2000000 		.4byte	.LASF86
 2976 0964 01       		.byte	0x1
 2977 0965 2F       		.byte	0x2f
 2978 0966 D9000000 		.4byte	0xd9
 2979 096a 05       		.uleb128 0x5
 2980 096b 03       		.byte	0x3
 2981 096c 00000000 		.4byte	ADC_started
 2982 0970 1E       		.uleb128 0x1e
 2983 0971 0E010000 		.4byte	.LASF87
 2984 0975 01       		.byte	0x1
 2985 0976 32       		.byte	0x32
 2986 0977 D9000000 		.4byte	0xd9
 2987 097b 05       		.uleb128 0x5
 2988 097c 03       		.byte	0x3
 2989 097d 00000000 		.4byte	ADC_Config
 2990 0981 1E       		.uleb128 0x1e
 2991 0982 5A040000 		.4byte	.LASF88
 2992 0986 01       		.byte	0x1
 2993 0987 34       		.byte	0x34
 2994 0988 92090000 		.4byte	0x992
 2995 098c 05       		.uleb128 0x5
 2996 098d 03       		.byte	0x3
 2997 098e 00000000 		.4byte	ADC_Offset
 2998 0992 06       		.uleb128 0x6
 2999 0993 A9000000 		.4byte	0xa9
 3000 0997 1E       		.uleb128 0x1e
 3001 0998 8A050000 		.4byte	.LASF89
 3002 099c 01       		.byte	0x1
 3003 099d 35       		.byte	0x35
 3004 099e 92090000 		.4byte	0x992
 3005 09a2 05       		.uleb128 0x5
 3006 09a3 03       		.byte	0x3
 3007 09a4 00000000 		.4byte	ADC_CountsPerVolt
 3008 09a8 1F       		.uleb128 0x1f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 90


 3009 09a9 D1030000 		.4byte	.LASF90
 3010 09ad 04       		.byte	0x4
 3011 09ae 80       		.byte	0x80
 3012 09af B9090000 		.4byte	0x9b9
 3013 09b3 20       		.uleb128 0x20
 3014 09b4 72000000 		.4byte	0x72
 3015 09b8 00       		.byte	0
 3016 09b9 21       		.uleb128 0x21
 3017 09ba 80020000 		.4byte	.LASF101
 3018 09be 04       		.byte	0x4
 3019 09bf 7E       		.byte	0x7e
 3020 09c0 72000000 		.4byte	0x72
 3021 09c4 1F       		.uleb128 0x1f
 3022 09c5 D2010000 		.4byte	.LASF91
 3023 09c9 04       		.byte	0x4
 3024 09ca 78       		.byte	0x78
 3025 09cb D5090000 		.4byte	0x9d5
 3026 09cf 20       		.uleb128 0x20
 3027 09d0 7D000000 		.4byte	0x7d
 3028 09d4 00       		.byte	0
 3029 09d5 1F       		.uleb128 0x1f
 3030 09d6 0F000000 		.4byte	.LASF92
 3031 09da 04       		.byte	0x4
 3032 09db 7F       		.byte	0x7f
 3033 09dc E6090000 		.4byte	0x9e6
 3034 09e0 20       		.uleb128 0x20
 3035 09e1 72000000 		.4byte	0x72
 3036 09e5 00       		.byte	0
 3037 09e6 1F       		.uleb128 0x1f
 3038 09e7 3F040000 		.4byte	.LASF93
 3039 09eb 05       		.byte	0x5
 3040 09ec 50       		.byte	0x50
 3041 09ed F7090000 		.4byte	0x9f7
 3042 09f1 20       		.uleb128 0x20
 3043 09f2 72000000 		.4byte	0x72
 3044 09f6 00       		.byte	0
 3045 09f7 1F       		.uleb128 0x1f
 3046 09f8 71040000 		.4byte	.LASF94
 3047 09fc 06       		.byte	0x6
 3048 09fd 2F       		.byte	0x2f
 3049 09fe 0D0A0000 		.4byte	0xa0d
 3050 0a02 20       		.uleb128 0x20
 3051 0a03 7D000000 		.4byte	0x7d
 3052 0a07 20       		.uleb128 0x20
 3053 0a08 72000000 		.4byte	0x72
 3054 0a0c 00       		.byte	0
 3055 0a0d 1F       		.uleb128 0x1f
 3056 0a0e 3B020000 		.4byte	.LASF95
 3057 0a12 07       		.byte	0x7
 3058 0a13 2F       		.byte	0x2f
 3059 0a14 230A0000 		.4byte	0xa23
 3060 0a18 20       		.uleb128 0x20
 3061 0a19 7D000000 		.4byte	0x7d
 3062 0a1d 20       		.uleb128 0x20
 3063 0a1e 72000000 		.4byte	0x72
 3064 0a22 00       		.byte	0
 3065 0a23 22       		.uleb128 0x22
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 91


 3066 0a24 00020000 		.4byte	.LASF102
 3067 0a28 04       		.byte	0x4
 3068 0a29 89       		.byte	0x89
 3069 0a2a 00010000 		.4byte	0x100
 3070 0a2e 3D0A0000 		.4byte	0xa3d
 3071 0a32 20       		.uleb128 0x20
 3072 0a33 72000000 		.4byte	0x72
 3073 0a37 20       		.uleb128 0x20
 3074 0a38 00010000 		.4byte	0x100
 3075 0a3c 00       		.byte	0
 3076 0a3d 1F       		.uleb128 0x1f
 3077 0a3e 19040000 		.4byte	.LASF96
 3078 0a42 06       		.byte	0x6
 3079 0a43 32       		.byte	0x32
 3080 0a44 4E0A0000 		.4byte	0xa4e
 3081 0a48 20       		.uleb128 0x20
 3082 0a49 72000000 		.4byte	0x72
 3083 0a4d 00       		.byte	0
 3084 0a4e 1F       		.uleb128 0x1f
 3085 0a4f 52030000 		.4byte	.LASF97
 3086 0a53 07       		.byte	0x7
 3087 0a54 32       		.byte	0x32
 3088 0a55 5F0A0000 		.4byte	0xa5f
 3089 0a59 20       		.uleb128 0x20
 3090 0a5a 72000000 		.4byte	0x72
 3091 0a5e 00       		.byte	0
 3092 0a5f 23       		.uleb128 0x23
 3093 0a60 78030000 		.4byte	.LASF103
 3094 0a64 04       		.byte	0x4
 3095 0a65 8C       		.byte	0x8c
 3096 0a66 20       		.uleb128 0x20
 3097 0a67 72000000 		.4byte	0x72
 3098 0a6b 20       		.uleb128 0x20
 3099 0a6c 72000000 		.4byte	0x72
 3100 0a70 00       		.byte	0
 3101 0a71 00       		.byte	0
 3102              		.section	.debug_abbrev,"",%progbits
 3103              	.Ldebug_abbrev0:
 3104 0000 01       		.uleb128 0x1
 3105 0001 11       		.uleb128 0x11
 3106 0002 01       		.byte	0x1
 3107 0003 25       		.uleb128 0x25
 3108 0004 0E       		.uleb128 0xe
 3109 0005 13       		.uleb128 0x13
 3110 0006 0B       		.uleb128 0xb
 3111 0007 03       		.uleb128 0x3
 3112 0008 0E       		.uleb128 0xe
 3113 0009 1B       		.uleb128 0x1b
 3114 000a 0E       		.uleb128 0xe
 3115 000b 55       		.uleb128 0x55
 3116 000c 17       		.uleb128 0x17
 3117 000d 11       		.uleb128 0x11
 3118 000e 01       		.uleb128 0x1
 3119 000f 10       		.uleb128 0x10
 3120 0010 17       		.uleb128 0x17
 3121 0011 00       		.byte	0
 3122 0012 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 92


 3123 0013 02       		.uleb128 0x2
 3124 0014 24       		.uleb128 0x24
 3125 0015 00       		.byte	0
 3126 0016 0B       		.uleb128 0xb
 3127 0017 0B       		.uleb128 0xb
 3128 0018 3E       		.uleb128 0x3e
 3129 0019 0B       		.uleb128 0xb
 3130 001a 03       		.uleb128 0x3
 3131 001b 0E       		.uleb128 0xe
 3132 001c 00       		.byte	0
 3133 001d 00       		.byte	0
 3134 001e 03       		.uleb128 0x3
 3135 001f 24       		.uleb128 0x24
 3136 0020 00       		.byte	0
 3137 0021 0B       		.uleb128 0xb
 3138 0022 0B       		.uleb128 0xb
 3139 0023 3E       		.uleb128 0x3e
 3140 0024 0B       		.uleb128 0xb
 3141 0025 03       		.uleb128 0x3
 3142 0026 08       		.uleb128 0x8
 3143 0027 00       		.byte	0
 3144 0028 00       		.byte	0
 3145 0029 04       		.uleb128 0x4
 3146 002a 16       		.uleb128 0x16
 3147 002b 00       		.byte	0
 3148 002c 03       		.uleb128 0x3
 3149 002d 0E       		.uleb128 0xe
 3150 002e 3A       		.uleb128 0x3a
 3151 002f 0B       		.uleb128 0xb
 3152 0030 3B       		.uleb128 0x3b
 3153 0031 0B       		.uleb128 0xb
 3154 0032 49       		.uleb128 0x49
 3155 0033 13       		.uleb128 0x13
 3156 0034 00       		.byte	0
 3157 0035 00       		.byte	0
 3158 0036 05       		.uleb128 0x5
 3159 0037 16       		.uleb128 0x16
 3160 0038 00       		.byte	0
 3161 0039 03       		.uleb128 0x3
 3162 003a 0E       		.uleb128 0xe
 3163 003b 3A       		.uleb128 0x3a
 3164 003c 0B       		.uleb128 0xb
 3165 003d 3B       		.uleb128 0x3b
 3166 003e 05       		.uleb128 0x5
 3167 003f 49       		.uleb128 0x49
 3168 0040 13       		.uleb128 0x13
 3169 0041 00       		.byte	0
 3170 0042 00       		.byte	0
 3171 0043 06       		.uleb128 0x6
 3172 0044 35       		.uleb128 0x35
 3173 0045 00       		.byte	0
 3174 0046 49       		.uleb128 0x49
 3175 0047 13       		.uleb128 0x13
 3176 0048 00       		.byte	0
 3177 0049 00       		.byte	0
 3178 004a 07       		.uleb128 0x7
 3179 004b 0F       		.uleb128 0xf
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 93


 3180 004c 00       		.byte	0
 3181 004d 0B       		.uleb128 0xb
 3182 004e 0B       		.uleb128 0xb
 3183 004f 49       		.uleb128 0x49
 3184 0050 13       		.uleb128 0x13
 3185 0051 00       		.byte	0
 3186 0052 00       		.byte	0
 3187 0053 08       		.uleb128 0x8
 3188 0054 15       		.uleb128 0x15
 3189 0055 00       		.byte	0
 3190 0056 27       		.uleb128 0x27
 3191 0057 19       		.uleb128 0x19
 3192 0058 00       		.byte	0
 3193 0059 00       		.byte	0
 3194 005a 09       		.uleb128 0x9
 3195 005b 13       		.uleb128 0x13
 3196 005c 01       		.byte	0x1
 3197 005d 0B       		.uleb128 0xb
 3198 005e 0B       		.uleb128 0xb
 3199 005f 3A       		.uleb128 0x3a
 3200 0060 0B       		.uleb128 0xb
 3201 0061 3B       		.uleb128 0x3b
 3202 0062 0B       		.uleb128 0xb
 3203 0063 01       		.uleb128 0x1
 3204 0064 13       		.uleb128 0x13
 3205 0065 00       		.byte	0
 3206 0066 00       		.byte	0
 3207 0067 0A       		.uleb128 0xa
 3208 0068 0D       		.uleb128 0xd
 3209 0069 00       		.byte	0
 3210 006a 03       		.uleb128 0x3
 3211 006b 0E       		.uleb128 0xe
 3212 006c 3A       		.uleb128 0x3a
 3213 006d 0B       		.uleb128 0xb
 3214 006e 3B       		.uleb128 0x3b
 3215 006f 0B       		.uleb128 0xb
 3216 0070 49       		.uleb128 0x49
 3217 0071 13       		.uleb128 0x13
 3218 0072 38       		.uleb128 0x38
 3219 0073 0B       		.uleb128 0xb
 3220 0074 00       		.byte	0
 3221 0075 00       		.byte	0
 3222 0076 0B       		.uleb128 0xb
 3223 0077 2E       		.uleb128 0x2e
 3224 0078 01       		.byte	0x1
 3225 0079 03       		.uleb128 0x3
 3226 007a 0E       		.uleb128 0xe
 3227 007b 3A       		.uleb128 0x3a
 3228 007c 0B       		.uleb128 0xb
 3229 007d 3B       		.uleb128 0x3b
 3230 007e 05       		.uleb128 0x5
 3231 007f 27       		.uleb128 0x27
 3232 0080 19       		.uleb128 0x19
 3233 0081 11       		.uleb128 0x11
 3234 0082 01       		.uleb128 0x1
 3235 0083 12       		.uleb128 0x12
 3236 0084 06       		.uleb128 0x6
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 94


 3237 0085 40       		.uleb128 0x40
 3238 0086 18       		.uleb128 0x18
 3239 0087 9742     		.uleb128 0x2117
 3240 0089 19       		.uleb128 0x19
 3241 008a 01       		.uleb128 0x1
 3242 008b 13       		.uleb128 0x13
 3243 008c 00       		.byte	0
 3244 008d 00       		.byte	0
 3245 008e 0C       		.uleb128 0xc
 3246 008f 05       		.uleb128 0x5
 3247 0090 00       		.byte	0
 3248 0091 03       		.uleb128 0x3
 3249 0092 0E       		.uleb128 0xe
 3250 0093 3A       		.uleb128 0x3a
 3251 0094 0B       		.uleb128 0xb
 3252 0095 3B       		.uleb128 0x3b
 3253 0096 05       		.uleb128 0x5
 3254 0097 49       		.uleb128 0x49
 3255 0098 13       		.uleb128 0x13
 3256 0099 02       		.uleb128 0x2
 3257 009a 17       		.uleb128 0x17
 3258 009b 00       		.byte	0
 3259 009c 00       		.byte	0
 3260 009d 0D       		.uleb128 0xd
 3261 009e 34       		.uleb128 0x34
 3262 009f 00       		.byte	0
 3263 00a0 03       		.uleb128 0x3
 3264 00a1 0E       		.uleb128 0xe
 3265 00a2 3A       		.uleb128 0x3a
 3266 00a3 0B       		.uleb128 0xb
 3267 00a4 3B       		.uleb128 0x3b
 3268 00a5 05       		.uleb128 0x5
 3269 00a6 49       		.uleb128 0x49
 3270 00a7 13       		.uleb128 0x13
 3271 00a8 02       		.uleb128 0x2
 3272 00a9 17       		.uleb128 0x17
 3273 00aa 00       		.byte	0
 3274 00ab 00       		.byte	0
 3275 00ac 0E       		.uleb128 0xe
 3276 00ad 898201   		.uleb128 0x4109
 3277 00b0 01       		.byte	0x1
 3278 00b1 11       		.uleb128 0x11
 3279 00b2 01       		.uleb128 0x1
 3280 00b3 31       		.uleb128 0x31
 3281 00b4 13       		.uleb128 0x13
 3282 00b5 00       		.byte	0
 3283 00b6 00       		.byte	0
 3284 00b7 0F       		.uleb128 0xf
 3285 00b8 8A8201   		.uleb128 0x410a
 3286 00bb 00       		.byte	0
 3287 00bc 02       		.uleb128 0x2
 3288 00bd 18       		.uleb128 0x18
 3289 00be 9142     		.uleb128 0x2111
 3290 00c0 18       		.uleb128 0x18
 3291 00c1 00       		.byte	0
 3292 00c2 00       		.byte	0
 3293 00c3 10       		.uleb128 0x10
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 95


 3294 00c4 898201   		.uleb128 0x4109
 3295 00c7 00       		.byte	0
 3296 00c8 11       		.uleb128 0x11
 3297 00c9 01       		.uleb128 0x1
 3298 00ca 31       		.uleb128 0x31
 3299 00cb 13       		.uleb128 0x13
 3300 00cc 00       		.byte	0
 3301 00cd 00       		.byte	0
 3302 00ce 11       		.uleb128 0x11
 3303 00cf 898201   		.uleb128 0x4109
 3304 00d2 01       		.byte	0x1
 3305 00d3 11       		.uleb128 0x11
 3306 00d4 01       		.uleb128 0x1
 3307 00d5 31       		.uleb128 0x31
 3308 00d6 13       		.uleb128 0x13
 3309 00d7 01       		.uleb128 0x1
 3310 00d8 13       		.uleb128 0x13
 3311 00d9 00       		.byte	0
 3312 00da 00       		.byte	0
 3313 00db 12       		.uleb128 0x12
 3314 00dc 2E       		.uleb128 0x2e
 3315 00dd 01       		.byte	0x1
 3316 00de 3F       		.uleb128 0x3f
 3317 00df 19       		.uleb128 0x19
 3318 00e0 03       		.uleb128 0x3
 3319 00e1 0E       		.uleb128 0xe
 3320 00e2 3A       		.uleb128 0x3a
 3321 00e3 0B       		.uleb128 0xb
 3322 00e4 3B       		.uleb128 0x3b
 3323 00e5 0B       		.uleb128 0xb
 3324 00e6 27       		.uleb128 0x27
 3325 00e7 19       		.uleb128 0x19
 3326 00e8 11       		.uleb128 0x11
 3327 00e9 01       		.uleb128 0x1
 3328 00ea 12       		.uleb128 0x12
 3329 00eb 06       		.uleb128 0x6
 3330 00ec 40       		.uleb128 0x40
 3331 00ed 18       		.uleb128 0x18
 3332 00ee 9742     		.uleb128 0x2117
 3333 00f0 19       		.uleb128 0x19
 3334 00f1 01       		.uleb128 0x1
 3335 00f2 13       		.uleb128 0x13
 3336 00f3 00       		.byte	0
 3337 00f4 00       		.byte	0
 3338 00f5 13       		.uleb128 0x13
 3339 00f6 34       		.uleb128 0x34
 3340 00f7 00       		.byte	0
 3341 00f8 03       		.uleb128 0x3
 3342 00f9 0E       		.uleb128 0xe
 3343 00fa 3A       		.uleb128 0x3a
 3344 00fb 0B       		.uleb128 0xb
 3345 00fc 3B       		.uleb128 0x3b
 3346 00fd 0B       		.uleb128 0xb
 3347 00fe 49       		.uleb128 0x49
 3348 00ff 13       		.uleb128 0x13
 3349 0100 00       		.byte	0
 3350 0101 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 96


 3351 0102 14       		.uleb128 0x14
 3352 0103 34       		.uleb128 0x34
 3353 0104 00       		.byte	0
 3354 0105 03       		.uleb128 0x3
 3355 0106 0E       		.uleb128 0xe
 3356 0107 3A       		.uleb128 0x3a
 3357 0108 0B       		.uleb128 0xb
 3358 0109 3B       		.uleb128 0x3b
 3359 010a 0B       		.uleb128 0xb
 3360 010b 49       		.uleb128 0x49
 3361 010c 13       		.uleb128 0x13
 3362 010d 02       		.uleb128 0x2
 3363 010e 17       		.uleb128 0x17
 3364 010f 00       		.byte	0
 3365 0110 00       		.byte	0
 3366 0111 15       		.uleb128 0x15
 3367 0112 2E       		.uleb128 0x2e
 3368 0113 01       		.byte	0x1
 3369 0114 3F       		.uleb128 0x3f
 3370 0115 19       		.uleb128 0x19
 3371 0116 03       		.uleb128 0x3
 3372 0117 0E       		.uleb128 0xe
 3373 0118 3A       		.uleb128 0x3a
 3374 0119 0B       		.uleb128 0xb
 3375 011a 3B       		.uleb128 0x3b
 3376 011b 05       		.uleb128 0x5
 3377 011c 27       		.uleb128 0x27
 3378 011d 19       		.uleb128 0x19
 3379 011e 11       		.uleb128 0x11
 3380 011f 01       		.uleb128 0x1
 3381 0120 12       		.uleb128 0x12
 3382 0121 06       		.uleb128 0x6
 3383 0122 40       		.uleb128 0x40
 3384 0123 18       		.uleb128 0x18
 3385 0124 9742     		.uleb128 0x2117
 3386 0126 19       		.uleb128 0x19
 3387 0127 01       		.uleb128 0x1
 3388 0128 13       		.uleb128 0x13
 3389 0129 00       		.byte	0
 3390 012a 00       		.byte	0
 3391 012b 16       		.uleb128 0x16
 3392 012c 34       		.uleb128 0x34
 3393 012d 00       		.byte	0
 3394 012e 03       		.uleb128 0x3
 3395 012f 0E       		.uleb128 0xe
 3396 0130 3A       		.uleb128 0x3a
 3397 0131 0B       		.uleb128 0xb
 3398 0132 3B       		.uleb128 0x3b
 3399 0133 05       		.uleb128 0x5
 3400 0134 49       		.uleb128 0x49
 3401 0135 13       		.uleb128 0x13
 3402 0136 02       		.uleb128 0x2
 3403 0137 18       		.uleb128 0x18
 3404 0138 00       		.byte	0
 3405 0139 00       		.byte	0
 3406 013a 17       		.uleb128 0x17
 3407 013b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 97


 3408 013c 01       		.byte	0x1
 3409 013d 3F       		.uleb128 0x3f
 3410 013e 19       		.uleb128 0x19
 3411 013f 03       		.uleb128 0x3
 3412 0140 0E       		.uleb128 0xe
 3413 0141 3A       		.uleb128 0x3a
 3414 0142 0B       		.uleb128 0xb
 3415 0143 3B       		.uleb128 0x3b
 3416 0144 05       		.uleb128 0x5
 3417 0145 27       		.uleb128 0x27
 3418 0146 19       		.uleb128 0x19
 3419 0147 49       		.uleb128 0x49
 3420 0148 13       		.uleb128 0x13
 3421 0149 11       		.uleb128 0x11
 3422 014a 01       		.uleb128 0x1
 3423 014b 12       		.uleb128 0x12
 3424 014c 06       		.uleb128 0x6
 3425 014d 40       		.uleb128 0x40
 3426 014e 18       		.uleb128 0x18
 3427 014f 9642     		.uleb128 0x2116
 3428 0151 19       		.uleb128 0x19
 3429 0152 01       		.uleb128 0x1
 3430 0153 13       		.uleb128 0x13
 3431 0154 00       		.byte	0
 3432 0155 00       		.byte	0
 3433 0156 18       		.uleb128 0x18
 3434 0157 2E       		.uleb128 0x2e
 3435 0158 01       		.byte	0x1
 3436 0159 3F       		.uleb128 0x3f
 3437 015a 19       		.uleb128 0x19
 3438 015b 03       		.uleb128 0x3
 3439 015c 0E       		.uleb128 0xe
 3440 015d 3A       		.uleb128 0x3a
 3441 015e 0B       		.uleb128 0xb
 3442 015f 3B       		.uleb128 0x3b
 3443 0160 05       		.uleb128 0x5
 3444 0161 27       		.uleb128 0x27
 3445 0162 19       		.uleb128 0x19
 3446 0163 49       		.uleb128 0x49
 3447 0164 13       		.uleb128 0x13
 3448 0165 11       		.uleb128 0x11
 3449 0166 01       		.uleb128 0x1
 3450 0167 12       		.uleb128 0x12
 3451 0168 06       		.uleb128 0x6
 3452 0169 40       		.uleb128 0x40
 3453 016a 18       		.uleb128 0x18
 3454 016b 9742     		.uleb128 0x2117
 3455 016d 19       		.uleb128 0x19
 3456 016e 01       		.uleb128 0x1
 3457 016f 13       		.uleb128 0x13
 3458 0170 00       		.byte	0
 3459 0171 00       		.byte	0
 3460 0172 19       		.uleb128 0x19
 3461 0173 2E       		.uleb128 0x2e
 3462 0174 00       		.byte	0
 3463 0175 3F       		.uleb128 0x3f
 3464 0176 19       		.uleb128 0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 98


 3465 0177 03       		.uleb128 0x3
 3466 0178 0E       		.uleb128 0xe
 3467 0179 3A       		.uleb128 0x3a
 3468 017a 0B       		.uleb128 0xb
 3469 017b 3B       		.uleb128 0x3b
 3470 017c 05       		.uleb128 0x5
 3471 017d 27       		.uleb128 0x27
 3472 017e 19       		.uleb128 0x19
 3473 017f 11       		.uleb128 0x11
 3474 0180 01       		.uleb128 0x1
 3475 0181 12       		.uleb128 0x12
 3476 0182 06       		.uleb128 0x6
 3477 0183 40       		.uleb128 0x40
 3478 0184 18       		.uleb128 0x18
 3479 0185 9742     		.uleb128 0x2117
 3480 0187 19       		.uleb128 0x19
 3481 0188 00       		.byte	0
 3482 0189 00       		.byte	0
 3483 018a 1A       		.uleb128 0x1a
 3484 018b 05       		.uleb128 0x5
 3485 018c 00       		.byte	0
 3486 018d 03       		.uleb128 0x3
 3487 018e 0E       		.uleb128 0xe
 3488 018f 3A       		.uleb128 0x3a
 3489 0190 0B       		.uleb128 0xb
 3490 0191 3B       		.uleb128 0x3b
 3491 0192 05       		.uleb128 0x5
 3492 0193 49       		.uleb128 0x49
 3493 0194 13       		.uleb128 0x13
 3494 0195 02       		.uleb128 0x2
 3495 0196 18       		.uleb128 0x18
 3496 0197 00       		.byte	0
 3497 0198 00       		.byte	0
 3498 0199 1B       		.uleb128 0x1b
 3499 019a 01       		.uleb128 0x1
 3500 019b 01       		.byte	0x1
 3501 019c 49       		.uleb128 0x49
 3502 019d 13       		.uleb128 0x13
 3503 019e 01       		.uleb128 0x1
 3504 019f 13       		.uleb128 0x13
 3505 01a0 00       		.byte	0
 3506 01a1 00       		.byte	0
 3507 01a2 1C       		.uleb128 0x1c
 3508 01a3 21       		.uleb128 0x21
 3509 01a4 00       		.byte	0
 3510 01a5 49       		.uleb128 0x49
 3511 01a6 13       		.uleb128 0x13
 3512 01a7 2F       		.uleb128 0x2f
 3513 01a8 0B       		.uleb128 0xb
 3514 01a9 00       		.byte	0
 3515 01aa 00       		.byte	0
 3516 01ab 1D       		.uleb128 0x1d
 3517 01ac 34       		.uleb128 0x34
 3518 01ad 00       		.byte	0
 3519 01ae 03       		.uleb128 0x3
 3520 01af 0E       		.uleb128 0xe
 3521 01b0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 99


 3522 01b1 0B       		.uleb128 0xb
 3523 01b2 3B       		.uleb128 0x3b
 3524 01b3 0B       		.uleb128 0xb
 3525 01b4 49       		.uleb128 0x49
 3526 01b5 13       		.uleb128 0x13
 3527 01b6 02       		.uleb128 0x2
 3528 01b7 18       		.uleb128 0x18
 3529 01b8 00       		.byte	0
 3530 01b9 00       		.byte	0
 3531 01ba 1E       		.uleb128 0x1e
 3532 01bb 34       		.uleb128 0x34
 3533 01bc 00       		.byte	0
 3534 01bd 03       		.uleb128 0x3
 3535 01be 0E       		.uleb128 0xe
 3536 01bf 3A       		.uleb128 0x3a
 3537 01c0 0B       		.uleb128 0xb
 3538 01c1 3B       		.uleb128 0x3b
 3539 01c2 0B       		.uleb128 0xb
 3540 01c3 49       		.uleb128 0x49
 3541 01c4 13       		.uleb128 0x13
 3542 01c5 3F       		.uleb128 0x3f
 3543 01c6 19       		.uleb128 0x19
 3544 01c7 02       		.uleb128 0x2
 3545 01c8 18       		.uleb128 0x18
 3546 01c9 00       		.byte	0
 3547 01ca 00       		.byte	0
 3548 01cb 1F       		.uleb128 0x1f
 3549 01cc 2E       		.uleb128 0x2e
 3550 01cd 01       		.byte	0x1
 3551 01ce 3F       		.uleb128 0x3f
 3552 01cf 19       		.uleb128 0x19
 3553 01d0 03       		.uleb128 0x3
 3554 01d1 0E       		.uleb128 0xe
 3555 01d2 3A       		.uleb128 0x3a
 3556 01d3 0B       		.uleb128 0xb
 3557 01d4 3B       		.uleb128 0x3b
 3558 01d5 0B       		.uleb128 0xb
 3559 01d6 27       		.uleb128 0x27
 3560 01d7 19       		.uleb128 0x19
 3561 01d8 3C       		.uleb128 0x3c
 3562 01d9 19       		.uleb128 0x19
 3563 01da 01       		.uleb128 0x1
 3564 01db 13       		.uleb128 0x13
 3565 01dc 00       		.byte	0
 3566 01dd 00       		.byte	0
 3567 01de 20       		.uleb128 0x20
 3568 01df 05       		.uleb128 0x5
 3569 01e0 00       		.byte	0
 3570 01e1 49       		.uleb128 0x49
 3571 01e2 13       		.uleb128 0x13
 3572 01e3 00       		.byte	0
 3573 01e4 00       		.byte	0
 3574 01e5 21       		.uleb128 0x21
 3575 01e6 2E       		.uleb128 0x2e
 3576 01e7 00       		.byte	0
 3577 01e8 3F       		.uleb128 0x3f
 3578 01e9 19       		.uleb128 0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 100


 3579 01ea 03       		.uleb128 0x3
 3580 01eb 0E       		.uleb128 0xe
 3581 01ec 3A       		.uleb128 0x3a
 3582 01ed 0B       		.uleb128 0xb
 3583 01ee 3B       		.uleb128 0x3b
 3584 01ef 0B       		.uleb128 0xb
 3585 01f0 27       		.uleb128 0x27
 3586 01f1 19       		.uleb128 0x19
 3587 01f2 49       		.uleb128 0x49
 3588 01f3 13       		.uleb128 0x13
 3589 01f4 3C       		.uleb128 0x3c
 3590 01f5 19       		.uleb128 0x19
 3591 01f6 00       		.byte	0
 3592 01f7 00       		.byte	0
 3593 01f8 22       		.uleb128 0x22
 3594 01f9 2E       		.uleb128 0x2e
 3595 01fa 01       		.byte	0x1
 3596 01fb 3F       		.uleb128 0x3f
 3597 01fc 19       		.uleb128 0x19
 3598 01fd 03       		.uleb128 0x3
 3599 01fe 0E       		.uleb128 0xe
 3600 01ff 3A       		.uleb128 0x3a
 3601 0200 0B       		.uleb128 0xb
 3602 0201 3B       		.uleb128 0x3b
 3603 0202 0B       		.uleb128 0xb
 3604 0203 27       		.uleb128 0x27
 3605 0204 19       		.uleb128 0x19
 3606 0205 49       		.uleb128 0x49
 3607 0206 13       		.uleb128 0x13
 3608 0207 3C       		.uleb128 0x3c
 3609 0208 19       		.uleb128 0x19
 3610 0209 01       		.uleb128 0x1
 3611 020a 13       		.uleb128 0x13
 3612 020b 00       		.byte	0
 3613 020c 00       		.byte	0
 3614 020d 23       		.uleb128 0x23
 3615 020e 2E       		.uleb128 0x2e
 3616 020f 01       		.byte	0x1
 3617 0210 3F       		.uleb128 0x3f
 3618 0211 19       		.uleb128 0x19
 3619 0212 03       		.uleb128 0x3
 3620 0213 0E       		.uleb128 0xe
 3621 0214 3A       		.uleb128 0x3a
 3622 0215 0B       		.uleb128 0xb
 3623 0216 3B       		.uleb128 0x3b
 3624 0217 0B       		.uleb128 0xb
 3625 0218 27       		.uleb128 0x27
 3626 0219 19       		.uleb128 0x19
 3627 021a 3C       		.uleb128 0x3c
 3628 021b 19       		.uleb128 0x19
 3629 021c 00       		.byte	0
 3630 021d 00       		.byte	0
 3631 021e 00       		.byte	0
 3632              		.section	.debug_loc,"",%progbits
 3633              	.Ldebug_loc0:
 3634              	.LLST0:
 3635 0000 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 101


 3636 0004 0C000000 		.4byte	.LVL1
 3637 0008 0100     		.2byte	0x1
 3638 000a 50       		.byte	0x50
 3639 000b 0C000000 		.4byte	.LVL1
 3640 000f 9E000000 		.4byte	.LVL31
 3641 0013 0400     		.2byte	0x4
 3642 0015 F3       		.byte	0xf3
 3643 0016 01       		.uleb128 0x1
 3644 0017 50       		.byte	0x50
 3645 0018 9F       		.byte	0x9f
 3646 0019 9E000000 		.4byte	.LVL31
 3647 001d A0000000 		.4byte	.LVL32
 3648 0021 0100     		.2byte	0x1
 3649 0023 50       		.byte	0x50
 3650 0024 A0000000 		.4byte	.LVL32
 3651 0028 CC000000 		.4byte	.LFE21
 3652 002c 0400     		.2byte	0x4
 3653 002e F3       		.byte	0xf3
 3654 002f 01       		.uleb128 0x1
 3655 0030 50       		.byte	0x50
 3656 0031 9F       		.byte	0x9f
 3657 0032 00000000 		.4byte	0
 3658 0036 00000000 		.4byte	0
 3659              	.LLST1:
 3660 003a 00000000 		.4byte	.LVL0
 3661 003e 66000000 		.4byte	.LVL20
 3662 0042 0100     		.2byte	0x1
 3663 0044 51       		.byte	0x51
 3664 0045 66000000 		.4byte	.LVL20
 3665 0049 9E000000 		.4byte	.LVL31
 3666 004d 0400     		.2byte	0x4
 3667 004f F3       		.byte	0xf3
 3668 0050 01       		.uleb128 0x1
 3669 0051 51       		.byte	0x51
 3670 0052 9F       		.byte	0x9f
 3671 0053 9E000000 		.4byte	.LVL31
 3672 0057 A3000000 		.4byte	.LVL33-1
 3673 005b 0100     		.2byte	0x1
 3674 005d 51       		.byte	0x51
 3675 005e A3000000 		.4byte	.LVL33-1
 3676 0062 CC000000 		.4byte	.LFE21
 3677 0066 0400     		.2byte	0x4
 3678 0068 F3       		.byte	0xf3
 3679 0069 01       		.uleb128 0x1
 3680 006a 51       		.byte	0x51
 3681 006b 9F       		.byte	0x9f
 3682 006c 00000000 		.4byte	0
 3683 0070 00000000 		.4byte	0
 3684              	.LLST2:
 3685 0074 00000000 		.4byte	.LVL0
 3686 0078 6A000000 		.4byte	.LVL21
 3687 007c 0100     		.2byte	0x1
 3688 007e 52       		.byte	0x52
 3689 007f 6A000000 		.4byte	.LVL21
 3690 0083 9E000000 		.4byte	.LVL31
 3691 0087 0400     		.2byte	0x4
 3692 0089 F3       		.byte	0xf3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 102


 3693 008a 01       		.uleb128 0x1
 3694 008b 52       		.byte	0x52
 3695 008c 9F       		.byte	0x9f
 3696 008d 9E000000 		.4byte	.LVL31
 3697 0091 A3000000 		.4byte	.LVL33-1
 3698 0095 0100     		.2byte	0x1
 3699 0097 52       		.byte	0x52
 3700 0098 A3000000 		.4byte	.LVL33-1
 3701 009c CC000000 		.4byte	.LFE21
 3702 00a0 0400     		.2byte	0x4
 3703 00a2 F3       		.byte	0xf3
 3704 00a3 01       		.uleb128 0x1
 3705 00a4 52       		.byte	0x52
 3706 00a5 9F       		.byte	0x9f
 3707 00a6 00000000 		.4byte	0
 3708 00aa 00000000 		.4byte	0
 3709              	.LLST3:
 3710 00ae 00000000 		.4byte	.LVL0
 3711 00b2 82000000 		.4byte	.LVL26
 3712 00b6 0100     		.2byte	0x1
 3713 00b8 53       		.byte	0x53
 3714 00b9 82000000 		.4byte	.LVL26
 3715 00bd 88000000 		.4byte	.LVL27
 3716 00c1 0400     		.2byte	0x4
 3717 00c3 F3       		.byte	0xf3
 3718 00c4 01       		.uleb128 0x1
 3719 00c5 53       		.byte	0x53
 3720 00c6 9F       		.byte	0x9f
 3721 00c7 88000000 		.4byte	.LVL27
 3722 00cb 8A000000 		.4byte	.LVL28
 3723 00cf 0100     		.2byte	0x1
 3724 00d1 53       		.byte	0x53
 3725 00d2 8A000000 		.4byte	.LVL28
 3726 00d6 9E000000 		.4byte	.LVL31
 3727 00da 0400     		.2byte	0x4
 3728 00dc F3       		.byte	0xf3
 3729 00dd 01       		.uleb128 0x1
 3730 00de 53       		.byte	0x53
 3731 00df 9F       		.byte	0x9f
 3732 00e0 9E000000 		.4byte	.LVL31
 3733 00e4 A3000000 		.4byte	.LVL33-1
 3734 00e8 0100     		.2byte	0x1
 3735 00ea 53       		.byte	0x53
 3736 00eb A3000000 		.4byte	.LVL33-1
 3737 00ef CC000000 		.4byte	.LFE21
 3738 00f3 0400     		.2byte	0x4
 3739 00f5 F3       		.byte	0xf3
 3740 00f6 01       		.uleb128 0x1
 3741 00f7 53       		.byte	0x53
 3742 00f8 9F       		.byte	0x9f
 3743 00f9 00000000 		.4byte	0
 3744 00fd 00000000 		.4byte	0
 3745              	.LLST4:
 3746 0101 00000000 		.4byte	.LVL0
 3747 0105 9E000000 		.4byte	.LVL31
 3748 0109 0200     		.2byte	0x2
 3749 010b 91       		.byte	0x91
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 103


 3750 010c 00       		.sleb128 0
 3751 010d 9E000000 		.4byte	.LVL31
 3752 0111 A6000000 		.4byte	.LVL34
 3753 0115 0200     		.2byte	0x2
 3754 0117 7D       		.byte	0x7d
 3755 0118 10       		.sleb128 16
 3756 0119 A6000000 		.4byte	.LVL34
 3757 011d CC000000 		.4byte	.LFE21
 3758 0121 0200     		.2byte	0x2
 3759 0123 7D       		.byte	0x7d
 3760 0124 00       		.sleb128 0
 3761 0125 00000000 		.4byte	0
 3762 0129 00000000 		.4byte	0
 3763              	.LLST5:
 3764 012d 26000000 		.4byte	.LVL2
 3765 0131 28000000 		.4byte	.LVL3
 3766 0135 0100     		.2byte	0x1
 3767 0137 50       		.byte	0x50
 3768 0138 2C000000 		.4byte	.LVL4
 3769 013c 2E000000 		.4byte	.LVL5
 3770 0140 0100     		.2byte	0x1
 3771 0142 50       		.byte	0x50
 3772 0143 36000000 		.4byte	.LVL6
 3773 0147 38000000 		.4byte	.LVL7
 3774 014b 0100     		.2byte	0x1
 3775 014d 50       		.byte	0x50
 3776 014e 3C000000 		.4byte	.LVL8
 3777 0152 3E000000 		.4byte	.LVL9
 3778 0156 0100     		.2byte	0x1
 3779 0158 50       		.byte	0x50
 3780 0159 46000000 		.4byte	.LVL10
 3781 015d 48000000 		.4byte	.LVL11
 3782 0161 0100     		.2byte	0x1
 3783 0163 50       		.byte	0x50
 3784 0164 4C000000 		.4byte	.LVL12
 3785 0168 4E000000 		.4byte	.LVL13
 3786 016c 0100     		.2byte	0x1
 3787 016e 50       		.byte	0x50
 3788 016f 56000000 		.4byte	.LVL14
 3789 0173 58000000 		.4byte	.LVL15
 3790 0177 0100     		.2byte	0x1
 3791 0179 50       		.byte	0x50
 3792 017a 5C000000 		.4byte	.LVL16
 3793 017e 5E000000 		.4byte	.LVL17
 3794 0182 0100     		.2byte	0x1
 3795 0184 50       		.byte	0x50
 3796 0185 60000000 		.4byte	.LVL18
 3797 0189 62000000 		.4byte	.LVL19
 3798 018d 0100     		.2byte	0x1
 3799 018f 50       		.byte	0x50
 3800 0190 00000000 		.4byte	0
 3801 0194 00000000 		.4byte	0
 3802              	.LLST6:
 3803 0198 66000000 		.4byte	.LVL20
 3804 019c 76000000 		.4byte	.LVL24
 3805 01a0 0100     		.2byte	0x1
 3806 01a2 51       		.byte	0x51
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 104


 3807 01a3 88000000 		.4byte	.LVL27
 3808 01a7 94000000 		.4byte	.LVL30
 3809 01ab 0100     		.2byte	0x1
 3810 01ad 51       		.byte	0x51
 3811 01ae 00000000 		.4byte	0
 3812 01b2 00000000 		.4byte	0
 3813              	.LLST7:
 3814 01b6 6E000000 		.4byte	.LVL23
 3815 01ba 7A000000 		.4byte	.LVL25
 3816 01be 0100     		.2byte	0x1
 3817 01c0 52       		.byte	0x52
 3818 01c1 7A000000 		.4byte	.LVL25
 3819 01c5 88000000 		.4byte	.LVL27
 3820 01c9 0100     		.2byte	0x1
 3821 01cb 50       		.byte	0x50
 3822 01cc 88000000 		.4byte	.LVL27
 3823 01d0 90000000 		.4byte	.LVL29
 3824 01d4 0100     		.2byte	0x1
 3825 01d6 52       		.byte	0x52
 3826 01d7 90000000 		.4byte	.LVL29
 3827 01db 9E000000 		.4byte	.LVL31
 3828 01df 0100     		.2byte	0x1
 3829 01e1 50       		.byte	0x50
 3830 01e2 00000000 		.4byte	0
 3831 01e6 00000000 		.4byte	0
 3832              	.LLST8:
 3833 01ea 6A000000 		.4byte	.LVL21
 3834 01ee 6C000000 		.4byte	.LVL22
 3835 01f2 0100     		.2byte	0x1
 3836 01f4 52       		.byte	0x52
 3837 01f5 00000000 		.4byte	0
 3838 01f9 00000000 		.4byte	0
 3839              	.LLST9:
 3840 01fd 00000000 		.4byte	.LVL35
 3841 0201 07000000 		.4byte	.LVL36-1
 3842 0205 0100     		.2byte	0x1
 3843 0207 50       		.byte	0x50
 3844 0208 07000000 		.4byte	.LVL36-1
 3845 020c 4C000000 		.4byte	.LFE22
 3846 0210 0400     		.2byte	0x4
 3847 0212 F3       		.byte	0xf3
 3848 0213 01       		.uleb128 0x1
 3849 0214 50       		.byte	0x50
 3850 0215 9F       		.byte	0x9f
 3851 0216 00000000 		.4byte	0
 3852 021a 00000000 		.4byte	0
 3853              	.LLST10:
 3854 021e 0A000000 		.4byte	.LVL37
 3855 0222 24000000 		.4byte	.LVL38
 3856 0226 0100     		.2byte	0x1
 3857 0228 50       		.byte	0x50
 3858 0229 24000000 		.4byte	.LVL38
 3859 022d 40000000 		.4byte	.LVL41
 3860 0231 0100     		.2byte	0x1
 3861 0233 56       		.byte	0x56
 3862 0234 00000000 		.4byte	0
 3863 0238 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 105


 3864              	.LLST11:
 3865 023c 00000000 		.4byte	.LVL42
 3866 0240 88000000 		.4byte	.LVL43
 3867 0244 0100     		.2byte	0x1
 3868 0246 50       		.byte	0x50
 3869 0247 88000000 		.4byte	.LVL43
 3870 024b E4000000 		.4byte	.LFE19
 3871 024f 0400     		.2byte	0x4
 3872 0251 F3       		.byte	0xf3
 3873 0252 01       		.uleb128 0x1
 3874 0253 50       		.byte	0x50
 3875 0254 9F       		.byte	0x9f
 3876 0255 00000000 		.4byte	0
 3877 0259 00000000 		.4byte	0
 3878              	.LLST12:
 3879 025d 08000000 		.4byte	.LVL55
 3880 0261 50000000 		.4byte	.LVL57
 3881 0265 0100     		.2byte	0x1
 3882 0267 50       		.byte	0x50
 3883 0268 50000000 		.4byte	.LVL57
 3884 026c B6000000 		.4byte	.LVL60
 3885 0270 0100     		.2byte	0x1
 3886 0272 56       		.byte	0x56
 3887 0273 00000000 		.4byte	0
 3888 0277 00000000 		.4byte	0
 3889              	.LLST13:
 3890 027b 08000000 		.4byte	.LVL64
 3891 027f 46000000 		.4byte	.LVL65
 3892 0283 0100     		.2byte	0x1
 3893 0285 50       		.byte	0x50
 3894 0286 46000000 		.4byte	.LVL65
 3895 028a D0000000 		.4byte	.LVL68
 3896 028e 0100     		.2byte	0x1
 3897 0290 56       		.byte	0x56
 3898 0291 00000000 		.4byte	0
 3899 0295 00000000 		.4byte	0
 3900              	.LLST14:
 3901 0299 00000000 		.4byte	.LVL69
 3902 029d 0A000000 		.4byte	.LVL71
 3903 02a1 0100     		.2byte	0x1
 3904 02a3 50       		.byte	0x50
 3905 02a4 0A000000 		.4byte	.LVL71
 3906 02a8 18000000 		.4byte	.LFE4
 3907 02ac 0400     		.2byte	0x4
 3908 02ae F3       		.byte	0xf3
 3909 02af 01       		.uleb128 0x1
 3910 02b0 50       		.byte	0x50
 3911 02b1 9F       		.byte	0x9f
 3912 02b2 00000000 		.4byte	0
 3913 02b6 00000000 		.4byte	0
 3914              	.LLST15:
 3915 02ba 00000000 		.4byte	.LVL73
 3916 02be 0C000000 		.4byte	.LVL75
 3917 02c2 0100     		.2byte	0x1
 3918 02c4 50       		.byte	0x50
 3919 02c5 0C000000 		.4byte	.LVL75
 3920 02c9 18000000 		.4byte	.LFE5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 106


 3921 02cd 0400     		.2byte	0x4
 3922 02cf F3       		.byte	0xf3
 3923 02d0 01       		.uleb128 0x1
 3924 02d1 50       		.byte	0x50
 3925 02d2 9F       		.byte	0x9f
 3926 02d3 00000000 		.4byte	0
 3927 02d7 00000000 		.4byte	0
 3928              	.LLST16:
 3929 02db 00000000 		.4byte	.LVL77
 3930 02df 10000000 		.4byte	.LVL79
 3931 02e3 0100     		.2byte	0x1
 3932 02e5 50       		.byte	0x50
 3933 02e6 10000000 		.4byte	.LVL79
 3934 02ea 24000000 		.4byte	.LVL83
 3935 02ee 0100     		.2byte	0x1
 3936 02f0 54       		.byte	0x54
 3937 02f1 24000000 		.4byte	.LVL83
 3938 02f5 74000000 		.4byte	.LFE6
 3939 02f9 0600     		.2byte	0x6
 3940 02fb F3       		.byte	0xf3
 3941 02fc 03       		.uleb128 0x3
 3942 02fd F5       		.byte	0xf5
 3943 02fe 00       		.uleb128 0
 3944 02ff 25       		.uleb128 0x25
 3945 0300 9F       		.byte	0x9f
 3946 0301 00000000 		.4byte	0
 3947 0305 00000000 		.4byte	0
 3948              	.LLST17:
 3949 0309 0A000000 		.4byte	.LVL78
 3950 030d 13000000 		.4byte	.LVL80-1
 3951 0311 0A00     		.2byte	0xa
 3952 0313 72       		.byte	0x72
 3953 0314 00       		.sleb128 0
 3954 0315 32       		.byte	0x32
 3955 0316 24       		.byte	0x24
 3956 0317 03       		.byte	0x3
 3957 0318 00000000 		.4byte	.LANCHOR0
 3958 031c 22       		.byte	0x22
 3959 031d 44000000 		.4byte	.LVL88
 3960 0321 56000000 		.4byte	.LVL90
 3961 0325 0100     		.2byte	0x1
 3962 0327 50       		.byte	0x50
 3963 0328 00000000 		.4byte	0
 3964 032c 00000000 		.4byte	0
 3965              	.LLST18:
 3966 0330 54000000 		.4byte	.LVL89
 3967 0334 58000000 		.4byte	.LVL91
 3968 0338 0200     		.2byte	0x2
 3969 033a 30       		.byte	0x30
 3970 033b 9F       		.byte	0x9f
 3971 033c 5A000000 		.4byte	.LVL92
 3972 0340 74000000 		.4byte	.LFE6
 3973 0344 0100     		.2byte	0x1
 3974 0346 50       		.byte	0x50
 3975 0347 00000000 		.4byte	0
 3976 034b 00000000 		.4byte	0
 3977              	.LLST19:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 107


 3978 034f 1C000000 		.4byte	.LVL81
 3979 0353 21000000 		.4byte	.LVL82-1
 3980 0357 0100     		.2byte	0x1
 3981 0359 50       		.byte	0x50
 3982 035a 24000000 		.4byte	.LVL83
 3983 035e 27000000 		.4byte	.LVL84-1
 3984 0362 0100     		.2byte	0x1
 3985 0364 50       		.byte	0x50
 3986 0365 27000000 		.4byte	.LVL84-1
 3987 0369 3E000000 		.4byte	.LVL86
 3988 036d 0100     		.2byte	0x1
 3989 036f 54       		.byte	0x54
 3990 0370 3E000000 		.4byte	.LVL86
 3991 0374 41000000 		.4byte	.LVL87-1
 3992 0378 0100     		.2byte	0x1
 3993 037a 50       		.byte	0x50
 3994 037b 58000000 		.4byte	.LVL91
 3995 037f 5C000000 		.4byte	.LVL93
 3996 0383 0100     		.2byte	0x1
 3997 0385 54       		.byte	0x54
 3998 0386 00000000 		.4byte	0
 3999 038a 00000000 		.4byte	0
 4000              	.LLST20:
 4001 038e 06000000 		.4byte	.LVL94
 4002 0392 14000000 		.4byte	.LVL96
 4003 0396 0100     		.2byte	0x1
 4004 0398 53       		.byte	0x53
 4005 0399 00000000 		.4byte	0
 4006 039d 00000000 		.4byte	0
 4007              	.LLST21:
 4008 03a1 0C000000 		.4byte	.LVL95
 4009 03a5 16000000 		.4byte	.LVL97
 4010 03a9 0100     		.2byte	0x1
 4011 03ab 50       		.byte	0x50
 4012 03ac 18000000 		.4byte	.LVL98
 4013 03b0 24000000 		.4byte	.LFE7
 4014 03b4 0100     		.2byte	0x1
 4015 03b6 50       		.byte	0x50
 4016 03b7 00000000 		.4byte	0
 4017 03bb 00000000 		.4byte	0
 4018              	.LLST22:
 4019 03bf 00000000 		.4byte	.LVL99
 4020 03c3 22000000 		.4byte	.LVL103
 4021 03c7 0100     		.2byte	0x1
 4022 03c9 50       		.byte	0x50
 4023 03ca 22000000 		.4byte	.LVL103
 4024 03ce 2C000000 		.4byte	.LFE10
 4025 03d2 0400     		.2byte	0x4
 4026 03d4 F3       		.byte	0xf3
 4027 03d5 01       		.uleb128 0x1
 4028 03d6 50       		.byte	0x50
 4029 03d7 9F       		.byte	0x9f
 4030 03d8 00000000 		.4byte	0
 4031 03dc 00000000 		.4byte	0
 4032              	.LLST23:
 4033 03e0 10000000 		.4byte	.LVL100
 4034 03e4 12000000 		.4byte	.LVL101
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 108


 4035 03e8 0100     		.2byte	0x1
 4036 03ea 53       		.byte	0x53
 4037 03eb 18000000 		.4byte	.LVL102
 4038 03ef 2C000000 		.4byte	.LFE10
 4039 03f3 0100     		.2byte	0x1
 4040 03f5 53       		.byte	0x53
 4041 03f6 00000000 		.4byte	0
 4042 03fa 00000000 		.4byte	0
 4043              	.LLST24:
 4044 03fe 0C000000 		.4byte	.LVL105
 4045 0402 30000000 		.4byte	.LVL109
 4046 0406 0100     		.2byte	0x1
 4047 0408 50       		.byte	0x50
 4048 0409 00000000 		.4byte	0
 4049 040d 00000000 		.4byte	0
 4050              	.LLST25:
 4051 0411 08000000 		.4byte	.LVL104
 4052 0415 12000000 		.4byte	.LVL106
 4053 0419 0100     		.2byte	0x1
 4054 041b 53       		.byte	0x53
 4055 041c 16000000 		.4byte	.LVL107
 4056 0420 1C000000 		.4byte	.LVL108
 4057 0424 0100     		.2byte	0x1
 4058 0426 53       		.byte	0x53
 4059 0427 00000000 		.4byte	0
 4060 042b 00000000 		.4byte	0
 4061              	.LLST26:
 4062 042f 12000000 		.4byte	.LVL112
 4063 0433 14000000 		.4byte	.LVL113
 4064 0437 0100     		.2byte	0x1
 4065 0439 50       		.byte	0x50
 4066 043a 18000000 		.4byte	.LVL114
 4067 043e 20000000 		.4byte	.LVL115
 4068 0442 0600     		.2byte	0x6
 4069 0444 72       		.byte	0x72
 4070 0445 00       		.sleb128 0
 4071 0446 08       		.byte	0x8
 4072 0447 FF       		.byte	0xff
 4073 0448 1A       		.byte	0x1a
 4074 0449 9F       		.byte	0x9f
 4075 044a 20000000 		.4byte	.LVL115
 4076 044e 3A000000 		.4byte	.LVL118
 4077 0452 0100     		.2byte	0x1
 4078 0454 50       		.byte	0x50
 4079 0455 00000000 		.4byte	0
 4080 0459 00000000 		.4byte	0
 4081              	.LLST27:
 4082 045d 08000000 		.4byte	.LVL110
 4083 0461 0E000000 		.4byte	.LVL111
 4084 0465 0100     		.2byte	0x1
 4085 0467 53       		.byte	0x53
 4086 0468 14000000 		.4byte	.LVL113
 4087 046c 26000000 		.4byte	.LVL116
 4088 0470 0100     		.2byte	0x1
 4089 0472 53       		.byte	0x53
 4090 0473 00000000 		.4byte	0
 4091 0477 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 109


 4092              	.LLST28:
 4093 047b 10000000 		.4byte	.LVL121
 4094 047f 1A000000 		.4byte	.LVL122
 4095 0483 0700     		.2byte	0x7
 4096 0485 73       		.byte	0x73
 4097 0486 00       		.sleb128 0
 4098 0487 0A       		.byte	0xa
 4099 0488 FFFF     		.2byte	0xffff
 4100 048a 1A       		.byte	0x1a
 4101 048b 9F       		.byte	0x9f
 4102 048c 1A000000 		.4byte	.LVL122
 4103 0490 1C000000 		.4byte	.LVL123
 4104 0494 0100     		.2byte	0x1
 4105 0496 50       		.byte	0x50
 4106 0497 24000000 		.4byte	.LVL125
 4107 049b 2C000000 		.4byte	.LVL126
 4108 049f 0700     		.2byte	0x7
 4109 04a1 70       		.byte	0x70
 4110 04a2 00       		.sleb128 0
 4111 04a3 0A       		.byte	0xa
 4112 04a4 FFFF     		.2byte	0xffff
 4113 04a6 1A       		.byte	0x1a
 4114 04a7 9F       		.byte	0x9f
 4115 04a8 2C000000 		.4byte	.LVL126
 4116 04ac 36000000 		.4byte	.LVL128
 4117 04b0 0100     		.2byte	0x1
 4118 04b2 50       		.byte	0x50
 4119 04b3 3C000000 		.4byte	.LVL130
 4120 04b7 6C000000 		.4byte	.LFE13
 4121 04bb 0100     		.2byte	0x1
 4122 04bd 50       		.byte	0x50
 4123 04be 00000000 		.4byte	0
 4124 04c2 00000000 		.4byte	0
 4125              	.LLST29:
 4126 04c6 08000000 		.4byte	.LVL119
 4127 04ca 0E000000 		.4byte	.LVL120
 4128 04ce 0100     		.2byte	0x1
 4129 04d0 53       		.byte	0x53
 4130 04d1 1C000000 		.4byte	.LVL123
 4131 04d5 22000000 		.4byte	.LVL124
 4132 04d9 0100     		.2byte	0x1
 4133 04db 53       		.byte	0x53
 4134 04dc 36000000 		.4byte	.LVL128
 4135 04e0 38000000 		.4byte	.LVL129
 4136 04e4 0100     		.2byte	0x1
 4137 04e6 53       		.byte	0x53
 4138 04e7 00000000 		.4byte	0
 4139 04eb 00000000 		.4byte	0
 4140              	.LLST30:
 4141 04ef 00000000 		.4byte	.LVL134
 4142 04f3 06000000 		.4byte	.LVL135
 4143 04f7 0100     		.2byte	0x1
 4144 04f9 50       		.byte	0x50
 4145 04fa 06000000 		.4byte	.LVL135
 4146 04fe 10000000 		.4byte	.LVL136
 4147 0502 0100     		.2byte	0x1
 4148 0504 53       		.byte	0x53
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 110


 4149 0505 00000000 		.4byte	0
 4150 0509 00000000 		.4byte	0
 4151              	.LLST31:
 4152 050d 16000000 		.4byte	.LVL137
 4153 0511 18000000 		.4byte	.LVL138
 4154 0515 0100     		.2byte	0x1
 4155 0517 50       		.byte	0x50
 4156 0518 00000000 		.4byte	0
 4157 051c 00000000 		.4byte	0
 4158              	.LLST32:
 4159 0520 00000000 		.4byte	.LVL139
 4160 0524 06000000 		.4byte	.LVL140
 4161 0528 0100     		.2byte	0x1
 4162 052a 50       		.byte	0x50
 4163 052b 06000000 		.4byte	.LVL140
 4164 052f 08000000 		.4byte	.LVL141
 4165 0533 0600     		.2byte	0x6
 4166 0535 70       		.byte	0x70
 4167 0536 00       		.sleb128 0
 4168 0537 73       		.byte	0x73
 4169 0538 00       		.sleb128 0
 4170 0539 1C       		.byte	0x1c
 4171 053a 9F       		.byte	0x9f
 4172 053b 08000000 		.4byte	.LVL141
 4173 053f 0B000000 		.4byte	.LVL142-1
 4174 0543 0100     		.2byte	0x1
 4175 0545 50       		.byte	0x50
 4176 0546 00000000 		.4byte	0
 4177 054a 00000000 		.4byte	0
 4178              	.LLST33:
 4179 054e 00000000 		.4byte	.LVL145
 4180 0552 3E000000 		.4byte	.LVL152
 4181 0556 0100     		.2byte	0x1
 4182 0558 50       		.byte	0x50
 4183 0559 3E000000 		.4byte	.LVL152
 4184 055d 64000000 		.4byte	.LFE18
 4185 0561 0400     		.2byte	0x4
 4186 0563 F3       		.byte	0xf3
 4187 0564 01       		.uleb128 0x1
 4188 0565 50       		.byte	0x50
 4189 0566 9F       		.byte	0x9f
 4190 0567 00000000 		.4byte	0
 4191 056b 00000000 		.4byte	0
 4192              	.LLST34:
 4193 056f 4E000000 		.4byte	.LVL154
 4194 0573 50000000 		.4byte	.LVL155
 4195 0577 0600     		.2byte	0x6
 4196 0579 70       		.byte	0x70
 4197 057a 00       		.sleb128 0
 4198 057b 73       		.byte	0x73
 4199 057c 00       		.sleb128 0
 4200 057d 1C       		.byte	0x1c
 4201 057e 9F       		.byte	0x9f
 4202 057f 50000000 		.4byte	.LVL155
 4203 0583 64000000 		.4byte	.LFE18
 4204 0587 0100     		.2byte	0x1
 4205 0589 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 111


 4206 058a 00000000 		.4byte	0
 4207 058e 00000000 		.4byte	0
 4208              	.LLST35:
 4209 0592 32000000 		.4byte	.LVL150
 4210 0596 4A000000 		.4byte	.LVL153
 4211 059a 0100     		.2byte	0x1
 4212 059c 52       		.byte	0x52
 4213 059d 00000000 		.4byte	0
 4214 05a1 00000000 		.4byte	0
 4215              	.LLST36:
 4216 05a5 32000000 		.4byte	.LVL150
 4217 05a9 4E000000 		.4byte	.LVL154
 4218 05ad 0100     		.2byte	0x1
 4219 05af 53       		.byte	0x53
 4220 05b0 00000000 		.4byte	0
 4221 05b4 00000000 		.4byte	0
 4222              	.LLST37:
 4223 05b8 22000000 		.4byte	.LVL146
 4224 05bc 28000000 		.4byte	.LVL147
 4225 05c0 0100     		.2byte	0x1
 4226 05c2 53       		.byte	0x53
 4227 05c3 2E000000 		.4byte	.LVL148
 4228 05c7 30000000 		.4byte	.LVL149
 4229 05cb 0100     		.2byte	0x1
 4230 05cd 53       		.byte	0x53
 4231 05ce 00000000 		.4byte	0
 4232 05d2 00000000 		.4byte	0
 4233              	.LLST38:
 4234 05d6 00000000 		.4byte	.LVL156
 4235 05da 1D000000 		.4byte	.LVL157-1
 4236 05de 0100     		.2byte	0x1
 4237 05e0 50       		.byte	0x50
 4238 05e1 1D000000 		.4byte	.LVL157-1
 4239 05e5 48000000 		.4byte	.LVL161
 4240 05e9 0400     		.2byte	0x4
 4241 05eb F3       		.byte	0xf3
 4242 05ec 01       		.uleb128 0x1
 4243 05ed 50       		.byte	0x50
 4244 05ee 9F       		.byte	0x9f
 4245 05ef 48000000 		.4byte	.LVL161
 4246 05f3 4A000000 		.4byte	.LVL162
 4247 05f7 0100     		.2byte	0x1
 4248 05f9 50       		.byte	0x50
 4249 05fa 4A000000 		.4byte	.LVL162
 4250 05fe 60000000 		.4byte	.LFE20
 4251 0602 0400     		.2byte	0x4
 4252 0604 F3       		.byte	0xf3
 4253 0605 01       		.uleb128 0x1
 4254 0606 50       		.byte	0x50
 4255 0607 9F       		.byte	0x9f
 4256 0608 00000000 		.4byte	0
 4257 060c 00000000 		.4byte	0
 4258              	.LLST39:
 4259 0610 00000000 		.4byte	.LVL156
 4260 0614 1D000000 		.4byte	.LVL157-1
 4261 0618 0100     		.2byte	0x1
 4262 061a 51       		.byte	0x51
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 112


 4263 061b 1D000000 		.4byte	.LVL157-1
 4264 061f 48000000 		.4byte	.LVL161
 4265 0623 0400     		.2byte	0x4
 4266 0625 F3       		.byte	0xf3
 4267 0626 01       		.uleb128 0x1
 4268 0627 51       		.byte	0x51
 4269 0628 9F       		.byte	0x9f
 4270 0629 48000000 		.4byte	.LVL161
 4271 062d 4D000000 		.4byte	.LVL163-1
 4272 0631 0100     		.2byte	0x1
 4273 0633 51       		.byte	0x51
 4274 0634 4D000000 		.4byte	.LVL163-1
 4275 0638 60000000 		.4byte	.LFE20
 4276 063c 0400     		.2byte	0x4
 4277 063e F3       		.byte	0xf3
 4278 063f 01       		.uleb128 0x1
 4279 0640 51       		.byte	0x51
 4280 0641 9F       		.byte	0x9f
 4281 0642 00000000 		.4byte	0
 4282 0646 00000000 		.4byte	0
 4283              	.LLST40:
 4284 064a 1C000000 		.4byte	.LVL167
 4285 064e 1F000000 		.4byte	.LVL168-1
 4286 0652 0100     		.2byte	0x1
 4287 0654 50       		.byte	0x50
 4288 0655 1F000000 		.4byte	.LVL168-1
 4289 0659 24000000 		.4byte	.LVL169
 4290 065d 0100     		.2byte	0x1
 4291 065f 54       		.byte	0x54
 4292 0660 24000000 		.4byte	.LVL169
 4293 0664 28000000 		.4byte	.LFE23
 4294 0668 0100     		.2byte	0x1
 4295 066a 50       		.byte	0x50
 4296 066b 00000000 		.4byte	0
 4297 066f 00000000 		.4byte	0
 4298              	.LLST41:
 4299 0673 1C000000 		.4byte	.LVL173
 4300 0677 1F000000 		.4byte	.LVL174-1
 4301 067b 0100     		.2byte	0x1
 4302 067d 50       		.byte	0x50
 4303 067e 1F000000 		.4byte	.LVL174-1
 4304 0682 24000000 		.4byte	.LVL175
 4305 0686 0100     		.2byte	0x1
 4306 0688 54       		.byte	0x54
 4307 0689 24000000 		.4byte	.LVL175
 4308 068d 28000000 		.4byte	.LFE24
 4309 0691 0100     		.2byte	0x1
 4310 0693 50       		.byte	0x50
 4311 0694 00000000 		.4byte	0
 4312 0698 00000000 		.4byte	0
 4313              	.LLST42:
 4314 069c 1C000000 		.4byte	.LVL179
 4315 06a0 1F000000 		.4byte	.LVL180-1
 4316 06a4 0100     		.2byte	0x1
 4317 06a6 50       		.byte	0x50
 4318 06a7 1F000000 		.4byte	.LVL180-1
 4319 06ab 24000000 		.4byte	.LVL181
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 113


 4320 06af 0100     		.2byte	0x1
 4321 06b1 54       		.byte	0x54
 4322 06b2 24000000 		.4byte	.LVL181
 4323 06b6 28000000 		.4byte	.LFE25
 4324 06ba 0100     		.2byte	0x1
 4325 06bc 50       		.byte	0x50
 4326 06bd 00000000 		.4byte	0
 4327 06c1 00000000 		.4byte	0
 4328              		.section	.debug_aranges,"",%progbits
 4329 0000 E4000000 		.4byte	0xe4
 4330 0004 0200     		.2byte	0x2
 4331 0006 00000000 		.4byte	.Ldebug_info0
 4332 000a 04       		.byte	0x4
 4333 000b 00       		.byte	0
 4334 000c 0000     		.2byte	0
 4335 000e 0000     		.2byte	0
 4336 0010 00000000 		.4byte	.LFB21
 4337 0014 CC000000 		.4byte	.LFE21-.LFB21
 4338 0018 00000000 		.4byte	.LFB22
 4339 001c 4C000000 		.4byte	.LFE22-.LFB22
 4340 0020 00000000 		.4byte	.LFB19
 4341 0024 E4000000 		.4byte	.LFE19-.LFB19
 4342 0028 00000000 		.4byte	.LFB0
 4343 002c C0000000 		.4byte	.LFE0-.LFB0
 4344 0030 00000000 		.4byte	.LFB1
 4345 0034 D4000000 		.4byte	.LFE1-.LFB1
 4346 0038 00000000 		.4byte	.LFB2
 4347 003c 28000000 		.4byte	.LFE2-.LFB2
 4348 0040 00000000 		.4byte	.LFB3
 4349 0044 E4000000 		.4byte	.LFE3-.LFB3
 4350 0048 00000000 		.4byte	.LFB4
 4351 004c 18000000 		.4byte	.LFE4-.LFB4
 4352 0050 00000000 		.4byte	.LFB5
 4353 0054 18000000 		.4byte	.LFE5-.LFB5
 4354 0058 00000000 		.4byte	.LFB6
 4355 005c 74000000 		.4byte	.LFE6-.LFB6
 4356 0060 00000000 		.4byte	.LFB7
 4357 0064 24000000 		.4byte	.LFE7-.LFB7
 4358 0068 00000000 		.4byte	.LFB8
 4359 006c 10000000 		.4byte	.LFE8-.LFB8
 4360 0070 00000000 		.4byte	.LFB9
 4361 0074 10000000 		.4byte	.LFE9-.LFB9
 4362 0078 00000000 		.4byte	.LFB10
 4363 007c 2C000000 		.4byte	.LFE10-.LFB10
 4364 0080 00000000 		.4byte	.LFB11
 4365 0084 48000000 		.4byte	.LFE11-.LFB11
 4366 0088 00000000 		.4byte	.LFB12
 4367 008c 50000000 		.4byte	.LFE12-.LFB12
 4368 0090 00000000 		.4byte	.LFB13
 4369 0094 6C000000 		.4byte	.LFE13-.LFB13
 4370 0098 00000000 		.4byte	.LFB14
 4371 009c 0C000000 		.4byte	.LFE14-.LFB14
 4372 00a0 00000000 		.4byte	.LFB15
 4373 00a4 0C000000 		.4byte	.LFE15-.LFB15
 4374 00a8 00000000 		.4byte	.LFB16
 4375 00ac 24000000 		.4byte	.LFE16-.LFB16
 4376 00b0 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 114


 4377 00b4 28000000 		.4byte	.LFE17-.LFB17
 4378 00b8 00000000 		.4byte	.LFB18
 4379 00bc 64000000 		.4byte	.LFE18-.LFB18
 4380 00c0 00000000 		.4byte	.LFB20
 4381 00c4 60000000 		.4byte	.LFE20-.LFB20
 4382 00c8 00000000 		.4byte	.LFB23
 4383 00cc 28000000 		.4byte	.LFE23-.LFB23
 4384 00d0 00000000 		.4byte	.LFB24
 4385 00d4 28000000 		.4byte	.LFE24-.LFB24
 4386 00d8 00000000 		.4byte	.LFB25
 4387 00dc 28000000 		.4byte	.LFE25-.LFB25
 4388 00e0 00000000 		.4byte	0
 4389 00e4 00000000 		.4byte	0
 4390              		.section	.debug_ranges,"",%progbits
 4391              	.Ldebug_ranges0:
 4392 0000 00000000 		.4byte	.LFB21
 4393 0004 CC000000 		.4byte	.LFE21
 4394 0008 00000000 		.4byte	.LFB22
 4395 000c 4C000000 		.4byte	.LFE22
 4396 0010 00000000 		.4byte	.LFB19
 4397 0014 E4000000 		.4byte	.LFE19
 4398 0018 00000000 		.4byte	.LFB0
 4399 001c C0000000 		.4byte	.LFE0
 4400 0020 00000000 		.4byte	.LFB1
 4401 0024 D4000000 		.4byte	.LFE1
 4402 0028 00000000 		.4byte	.LFB2
 4403 002c 28000000 		.4byte	.LFE2
 4404 0030 00000000 		.4byte	.LFB3
 4405 0034 E4000000 		.4byte	.LFE3
 4406 0038 00000000 		.4byte	.LFB4
 4407 003c 18000000 		.4byte	.LFE4
 4408 0040 00000000 		.4byte	.LFB5
 4409 0044 18000000 		.4byte	.LFE5
 4410 0048 00000000 		.4byte	.LFB6
 4411 004c 74000000 		.4byte	.LFE6
 4412 0050 00000000 		.4byte	.LFB7
 4413 0054 24000000 		.4byte	.LFE7
 4414 0058 00000000 		.4byte	.LFB8
 4415 005c 10000000 		.4byte	.LFE8
 4416 0060 00000000 		.4byte	.LFB9
 4417 0064 10000000 		.4byte	.LFE9
 4418 0068 00000000 		.4byte	.LFB10
 4419 006c 2C000000 		.4byte	.LFE10
 4420 0070 00000000 		.4byte	.LFB11
 4421 0074 48000000 		.4byte	.LFE11
 4422 0078 00000000 		.4byte	.LFB12
 4423 007c 50000000 		.4byte	.LFE12
 4424 0080 00000000 		.4byte	.LFB13
 4425 0084 6C000000 		.4byte	.LFE13
 4426 0088 00000000 		.4byte	.LFB14
 4427 008c 0C000000 		.4byte	.LFE14
 4428 0090 00000000 		.4byte	.LFB15
 4429 0094 0C000000 		.4byte	.LFE15
 4430 0098 00000000 		.4byte	.LFB16
 4431 009c 24000000 		.4byte	.LFE16
 4432 00a0 00000000 		.4byte	.LFB17
 4433 00a4 28000000 		.4byte	.LFE17
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 115


 4434 00a8 00000000 		.4byte	.LFB18
 4435 00ac 64000000 		.4byte	.LFE18
 4436 00b0 00000000 		.4byte	.LFB20
 4437 00b4 60000000 		.4byte	.LFE20
 4438 00b8 00000000 		.4byte	.LFB23
 4439 00bc 28000000 		.4byte	.LFE23
 4440 00c0 00000000 		.4byte	.LFB24
 4441 00c4 28000000 		.4byte	.LFE24
 4442 00c8 00000000 		.4byte	.LFB25
 4443 00cc 28000000 		.4byte	.LFE25
 4444 00d0 00000000 		.4byte	0
 4445 00d4 00000000 		.4byte	0
 4446              		.section	.debug_line,"",%progbits
 4447              	.Ldebug_line0:
 4448 0000 62030000 		.section	.debug_str,"MS",%progbits,1
 4448      02008900 
 4448      00000201 
 4448      FB0E0D00 
 4448      01010101 
 4449              	.LASF11:
 4450 0000 75696E74 		.ascii	"uint16\000"
 4450      313600
 4451              	.LASF67:
 4452 0007 61646347 		.ascii	"adcGain\000"
 4452      61696E00 
 4453              	.LASF92:
 4454 000f 43794578 		.ascii	"CyExitCriticalSection\000"
 4454      69744372 
 4454      69746963 
 4454      616C5365 
 4454      6374696F 
 4455              	.LASF98:
 4456 0025 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4456      4320342E 
 4456      382E3420 
 4456      32303134 
 4456      30353236 
 4457 0058 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 4457      20726576 
 4457      6973696F 
 4457      6E203231 
 4457      31333538 
 4458 008b 67202D66 		.ascii	"g -ffunction-sections\000"
 4458      66756E63 
 4458      74696F6E 
 4458      2D736563 
 4458      74696F6E 
 4459              	.LASF27:
 4460 00a1 696E7075 		.ascii	"inputRange\000"
 4460      7452616E 
 4460      676500
 4461              	.LASF71:
 4462 00ac 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 4462      436F756E 
 4462      7473546F 
 4462      5F566F6C 
 4462      747300
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 116


 4463              	.LASF85:
 4464 00bf 4144435F 		.ascii	"ADC_stopConversion\000"
 4464      73746F70 
 4464      436F6E76 
 4464      65727369 
 4464      6F6E00
 4465              	.LASF86:
 4466 00d2 4144435F 		.ascii	"ADC_started\000"
 4466      73746172 
 4466      74656400 
 4467              	.LASF80:
 4468 00de 4144435F 		.ascii	"ADC_Read16\000"
 4468      52656164 
 4468      313600
 4469              	.LASF24:
 4470 00e9 67636F72 		.ascii	"gcor\000"
 4470      00
 4471              	.LASF41:
 4472 00ee 4144435F 		.ascii	"ADC_Init\000"
 4472      496E6974 
 4472      00
 4473              	.LASF8:
 4474 00f7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4474      206C6F6E 
 4474      6720756E 
 4474      7369676E 
 4474      65642069 
 4475              	.LASF87:
 4476 010e 4144435F 		.ascii	"ADC_Config\000"
 4476      436F6E66 
 4476      696700
 4477              	.LASF56:
 4478 0119 4144435F 		.ascii	"ADC_StartConvert\000"
 4478      53746172 
 4478      74436F6E 
 4478      76657274 
 4478      00
 4479              	.LASF29:
 4480 012a 69646561 		.ascii	"idealOddDecGain\000"
 4480      6C4F6464 
 4480      44656347 
 4480      61696E00 
 4481              	.LASF7:
 4482 013a 6C6F6E67 		.ascii	"long long int\000"
 4482      206C6F6E 
 4482      6720696E 
 4482      7400
 4483              	.LASF1:
 4484 0148 7369676E 		.ascii	"signed char\000"
 4484      65642063 
 4484      68617200 
 4485              	.LASF51:
 4486 0154 73746174 		.ascii	"status\000"
 4486      757300
 4487              	.LASF45:
 4488 015b 4144435F 		.ascii	"ADC_SetBufferGain\000"
 4488      53657442 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 117


 4488      75666665 
 4488      72476169 
 4488      6E00
 4489              	.LASF99:
 4490 016d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC.c\000"
 4490      6E657261 
 4490      7465645F 
 4490      536F7572 
 4490      63655C50 
 4491              	.LASF15:
 4492 018c 696E7433 		.ascii	"int32\000"
 4492      3200
 4493              	.LASF43:
 4494 0192 4144435F 		.ascii	"ADC_Start\000"
 4494      53746172 
 4494      7400
 4495              	.LASF84:
 4496 019c 4144435F 		.ascii	"ADC_convDone\000"
 4496      636F6E76 
 4496      446F6E65 
 4496      00
 4497              	.LASF5:
 4498 01a9 6C6F6E67 		.ascii	"long int\000"
 4498      20696E74 
 4498      00
 4499              	.LASF73:
 4500 01b2 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4500      436F756E 
 4500      7473546F 
 4500      5F75566F 
 4500      6C747300 
 4501              	.LASF20:
 4502 01c6 72656731 		.ascii	"reg16\000"
 4502      3600
 4503              	.LASF10:
 4504 01cc 75696E74 		.ascii	"uint8\000"
 4504      3800
 4505              	.LASF91:
 4506 01d2 43794465 		.ascii	"CyDelayUs\000"
 4506      6C617955 
 4506      7300
 4507              	.LASF17:
 4508 01dc 646F7562 		.ascii	"double\000"
 4508      6C6500
 4509              	.LASF63:
 4510 01e3 4144435F 		.ascii	"ADC_GetResult32\000"
 4510      47657452 
 4510      6573756C 
 4510      74333200 
 4511              	.LASF72:
 4512 01f3 566F6C74 		.ascii	"Volts\000"
 4512      7300
 4513              	.LASF12:
 4514 01f9 75696E74 		.ascii	"uint32\000"
 4514      333200
 4515              	.LASF102:
 4516 0200 4379496E 		.ascii	"CyIntSetVector\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 118


 4516      74536574 
 4516      56656374 
 4516      6F7200
 4517              	.LASF83:
 4518 020f 4144435F 		.ascii	"ADC_initVar\000"
 4518      696E6974 
 4518      56617200 
 4519              	.LASF37:
 4520 021b 4144435F 		.ascii	"ADC_SetDSMRef0Reg\000"
 4520      53657444 
 4520      534D5265 
 4520      66305265 
 4520      6700
 4521              	.LASF38:
 4522 022d 76616C75 		.ascii	"value\000"
 4522      6500
 4523              	.LASF59:
 4524 0233 7265744D 		.ascii	"retMode\000"
 4524      6F646500 
 4525              	.LASF95:
 4526 023b 4144435F 		.ascii	"ADC_theACLK_SetDividerRegister\000"
 4526      74686541 
 4526      434C4B5F 
 4526      53657444 
 4526      69766964 
 4527              	.LASF9:
 4528 025a 756E7369 		.ascii	"unsigned int\000"
 4528      676E6564 
 4528      20696E74 
 4528      00
 4529              	.LASF74:
 4530 0267 75566F6C 		.ascii	"uVolts\000"
 4530      747300
 4531              	.LASF6:
 4532 026e 6C6F6E67 		.ascii	"long unsigned int\000"
 4532      20756E73 
 4532      69676E65 
 4532      6420696E 
 4532      7400
 4533              	.LASF101:
 4534 0280 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4534      74657243 
 4534      72697469 
 4534      63616C53 
 4534      65637469 
 4535              	.LASF26:
 4536 0297 4144435F 		.ascii	"ADC_GCOR_STRUCT\000"
 4536      47434F52 
 4536      5F535452 
 4536      55435400 
 4537              	.LASF4:
 4538 02a7 73686F72 		.ascii	"short unsigned int\000"
 4538      7420756E 
 4538      7369676E 
 4538      65642069 
 4538      6E7400
 4539              	.LASF13:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 119


 4540 02ba 696E7438 		.ascii	"int8\000"
 4540      00
 4541              	.LASF57:
 4542 02bf 4144435F 		.ascii	"ADC_StopConvert\000"
 4542      53746F70 
 4542      436F6E76 
 4542      65727400 
 4543              	.LASF34:
 4544 02cf 67636F72 		.ascii	"gcorValue\000"
 4544      56616C75 
 4544      6500
 4545              	.LASF36:
 4546 02d9 4144435F 		.ascii	"ADC_GainCompensation\000"
 4546      4761696E 
 4546      436F6D70 
 4546      656E7361 
 4546      74696F6E 
 4547              	.LASF32:
 4548 02ee 666C6173 		.ascii	"flash\000"
 4548      6800
 4549              	.LASF21:
 4550 02f4 72656733 		.ascii	"reg32\000"
 4550      3200
 4551              	.LASF16:
 4552 02fa 666C6F61 		.ascii	"float32\000"
 4552      74333200 
 4553              	.LASF23:
 4554 0302 73697A65 		.ascii	"sizetype\000"
 4554      74797065 
 4554      00
 4555              	.LASF53:
 4556 030b 4144435F 		.ascii	"ADC_SetGCOR\000"
 4556      53657447 
 4556      434F5200 
 4557              	.LASF58:
 4558 0317 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4558      4973456E 
 4558      64436F6E 
 4558      76657273 
 4558      696F6E00 
 4559              	.LASF82:
 4560 032b 4144435F 		.ascii	"ADC_gcor\000"
 4560      67636F72 
 4560      00
 4561              	.LASF40:
 4562 0334 4144435F 		.ascii	"ADC_InitConfig\000"
 4562      496E6974 
 4562      436F6E66 
 4562      696700
 4563              	.LASF60:
 4564 0343 4144435F 		.ascii	"ADC_GetResult8\000"
 4564      47657452 
 4564      6573756C 
 4564      743800
 4565              	.LASF97:
 4566 0352 4144435F 		.ascii	"ADC_theACLK_SetModeRegister\000"
 4566      74686541 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 120


 4566      434C4B5F 
 4566      5365744D 
 4566      6F646552 
 4567              	.LASF49:
 4568 036e 636F6865 		.ascii	"coherency\000"
 4568      72656E63 
 4568      7900
 4569              	.LASF103:
 4570 0378 4379496E 		.ascii	"CyIntSetPriority\000"
 4570      74536574 
 4570      5072696F 
 4570      72697479 
 4570      00
 4571              	.LASF46:
 4572 0389 6761696E 		.ascii	"gain\000"
 4572      00
 4573              	.LASF66:
 4574 038e 4144435F 		.ascii	"ADC_SetGain\000"
 4574      53657447 
 4574      61696E00 
 4575              	.LASF0:
 4576 039a 666C6F61 		.ascii	"float\000"
 4576      7400
 4577              	.LASF68:
 4578 03a0 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4578      436F756E 
 4578      7473546F 
 4578      5F6D566F 
 4578      6C747300 
 4579              	.LASF19:
 4580 03b4 72656738 		.ascii	"reg8\000"
 4580      00
 4581              	.LASF28:
 4582 03b9 69646561 		.ascii	"idealDecGain\000"
 4582      6C446563 
 4582      4761696E 
 4582      00
 4583              	.LASF33:
 4584 03c6 6E6F726D 		.ascii	"normalised\000"
 4584      616C6973 
 4584      656400
 4585              	.LASF90:
 4586 03d1 43794861 		.ascii	"CyHalt\000"
 4586      6C7400
 4587              	.LASF2:
 4588 03d8 756E7369 		.ascii	"unsigned char\000"
 4588      676E6564 
 4588      20636861 
 4588      7200
 4589              	.LASF77:
 4590 03e6 4144435F 		.ascii	"ADC_SelectConfiguration\000"
 4590      53656C65 
 4590      6374436F 
 4590      6E666967 
 4590      75726174 
 4591              	.LASF3:
 4592 03fe 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 121


 4592      7420696E 
 4592      7400
 4593              	.LASF44:
 4594 0408 4144435F 		.ascii	"ADC_Stop\000"
 4594      53746F70 
 4594      00
 4595              	.LASF35:
 4596 0411 67636F72 		.ascii	"gcorTmp\000"
 4596      546D7000 
 4597              	.LASF96:
 4598 0419 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetModeRegister\000"
 4598      4578745F 
 4598      43505F43 
 4598      6C6B5F53 
 4598      65744D6F 
 4599              	.LASF70:
 4600 0438 6D566F6C 		.ascii	"mVolts\000"
 4600      747300
 4601              	.LASF93:
 4602 043f 4144435F 		.ascii	"ADC_AMux_Select\000"
 4602      414D7578 
 4602      5F53656C 
 4602      65637400 
 4603              	.LASF30:
 4604 044f 7265736F 		.ascii	"resolution\000"
 4604      6C757469 
 4604      6F6E00
 4605              	.LASF88:
 4606 045a 4144435F 		.ascii	"ADC_Offset\000"
 4606      4F666673 
 4606      657400
 4607              	.LASF75:
 4608 0465 636F6566 		.ascii	"coefA\000"
 4608      4100
 4609              	.LASF76:
 4610 046b 636F6566 		.ascii	"coefB\000"
 4610      4200
 4611              	.LASF94:
 4612 0471 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetDividerRegister\000"
 4612      4578745F 
 4612      43505F43 
 4612      6C6B5F53 
 4612      65744469 
 4613              	.LASF18:
 4614 0493 63686172 		.ascii	"char\000"
 4614      00
 4615              	.LASF55:
 4616 0498 6756616C 		.ascii	"gValue\000"
 4616      756500
 4617              	.LASF22:
 4618 049f 63796973 		.ascii	"cyisraddress\000"
 4618      72616464 
 4618      72657373 
 4618      00
 4619              	.LASF31:
 4620 04ac 636F6E66 		.ascii	"config\000"
 4620      696700
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 122


 4621              	.LASF25:
 4622 04b3 6776616C 		.ascii	"gval\000"
 4622      00
 4623              	.LASF78:
 4624 04b8 72657374 		.ascii	"restart\000"
 4624      61727400 
 4625              	.LASF52:
 4626 04c0 746D7056 		.ascii	"tmpValue\000"
 4626      616C7565 
 4626      00
 4627              	.LASF65:
 4628 04c9 6F666673 		.ascii	"offset\000"
 4628      657400
 4629              	.LASF48:
 4630 04d0 4144435F 		.ascii	"ADC_SetCoherency\000"
 4630      53657443 
 4630      6F686572 
 4630      656E6379 
 4630      00
 4631              	.LASF79:
 4632 04e1 4144435F 		.ascii	"ADC_Read8\000"
 4632      52656164 
 4632      3800
 4633              	.LASF69:
 4634 04eb 61646343 		.ascii	"adcCounts\000"
 4634      6F756E74 
 4634      7300
 4635              	.LASF81:
 4636 04f5 4144435F 		.ascii	"ADC_Read32\000"
 4636      52656164 
 4636      333200
 4637              	.LASF39:
 4638 0500 656E6162 		.ascii	"enableInterrupts\000"
 4638      6C65496E 
 4638      74657272 
 4638      75707473 
 4638      00
 4639              	.LASF42:
 4640 0511 4144435F 		.ascii	"ADC_Enable\000"
 4640      456E6162 
 4640      6C6500
 4641              	.LASF54:
 4642 051c 4144435F 		.ascii	"ADC_ReadGCOR\000"
 4642      52656164 
 4642      47434F52 
 4642      00
 4643              	.LASF50:
 4644 0529 6761696E 		.ascii	"gainAdjust\000"
 4644      41646A75 
 4644      737400
 4645              	.LASF14:
 4646 0534 696E7431 		.ascii	"int16\000"
 4646      3600
 4647              	.LASF64:
 4648 053a 4144435F 		.ascii	"ADC_SetOffset\000"
 4648      5365744F 
 4648      66667365 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cceVqH0k.s 			page 123


 4648      7400
 4649              	.LASF100:
 4650 0548 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\P"
 4650      73657273 
 4650      5C6D6974 
 4650      6368656C 
 4650      6C5C446F 
 4651 0575 536F435C 		.ascii	"SoC\\Misc-Tests.cydsn\000"
 4651      4D697363 
 4651      2D546573 
 4651      74732E63 
 4651      7964736E 
 4652              	.LASF89:
 4653 058a 4144435F 		.ascii	"ADC_CountsPerVolt\000"
 4653      436F756E 
 4653      74735065 
 4653      72566F6C 
 4653      7400
 4654              	.LASF47:
 4655 059c 746D7052 		.ascii	"tmpReg\000"
 4655      656700
 4656              	.LASF61:
 4657 05a3 72657375 		.ascii	"result\000"
 4657      6C7400
 4658              	.LASF62:
 4659 05aa 4144435F 		.ascii	"ADC_GetResult16\000"
 4659      47657452 
 4659      6573756C 
 4659      74313600 
 4660              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
