Loading plugins phase: Elapsed time ==> 0s.178ms
Initializing data phase: Elapsed time ==> 0s.000ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -p C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\E-Throttle.cyprj -d CY8C5888LTI-LP097 -s C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.490ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.102ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  E-Throttle.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\E-Throttle.cyprj -dcpsoc3 E-Throttle.v -verilog
======================================================================

======================================================================
Compiling:  E-Throttle.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\bin/warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\E-Throttle.cyprj -dcpsoc3 E-Throttle.v -verilog
======================================================================

======================================================================
Compiling:  E-Throttle.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\E-Throttle.cyprj -dcpsoc3 -verilog E-Throttle.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Tue Mar 15 04:31:11 2016


======================================================================
Compiling:  E-Throttle.v
Program  :   vpp
Options  :    -yv2 -q10 E-Throttle.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Tue Mar 15 04:31:11 2016

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'E-Throttle.ctl'.
E-Throttle.v (line 660, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
E-Throttle.v (line 1321, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\..\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  E-Throttle.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\E-Throttle.cyprj -dcpsoc3 -verilog E-Throttle.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Tue Mar 15 04:31:11 2016

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\codegentemp\E-Throttle.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\codegentemp\E-Throttle.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  E-Throttle.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\E-Throttle.cyprj -dcpsoc3 -verilog E-Throttle.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Tue Mar 15 04:31:11 2016

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\codegentemp\E-Throttle.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\codegentemp\E-Throttle.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\TPS_ADC:SAR:Net_221\
	\TPS_ADC:SAR:Net_381\
	\TPS_ADC:Net_3905\
	\TPS_ADC:Net_3867\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:albi_2\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:agbi_2\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:albi_1\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:agbi_1\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:albi_0\
	\TPS_ADC:MODULE_1:g1:a0:gx:u0:agbi_0\
	\TPS_ADC:MODULE_1:g1:a0:xneq\
	\TPS_ADC:MODULE_1:g1:a0:xlt\
	\TPS_ADC:MODULE_1:g1:a0:xlte\
	\TPS_ADC:MODULE_1:g1:a0:xgt\
	\TPS_ADC:MODULE_1:g1:a0:xgte\
	\TPS_ADC:MODULE_1:lt\
	\TPS_ADC:MODULE_1:gt\
	\TPS_ADC:MODULE_1:gte\
	\TPS_ADC:MODULE_1:lte\
	\TPS_ADC:MODULE_1:neq\
	\APPS_ADC:SAR:Net_221\
	\APPS_ADC:SAR:Net_381\
	\APPS_ADC:Net_3905\
	\APPS_ADC:Net_3867\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:albi_2\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:agbi_2\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:albi_1\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:agbi_1\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:albi_0\
	\APPS_ADC:MODULE_2:g1:a0:gx:u0:agbi_0\
	\APPS_ADC:MODULE_2:g1:a0:xneq\
	\APPS_ADC:MODULE_2:g1:a0:xlt\
	\APPS_ADC:MODULE_2:g1:a0:xlte\
	\APPS_ADC:MODULE_2:g1:a0:xgt\
	\APPS_ADC:MODULE_2:g1:a0:xgte\
	\APPS_ADC:MODULE_2:lt\
	\APPS_ADC:MODULE_2:gt\
	\APPS_ADC:MODULE_2:gte\
	\APPS_ADC:MODULE_2:lte\
	\APPS_ADC:MODULE_2:neq\
	Net_203
	Net_200
	\SERVO_PWM:Net_114\
	Net_433
	\UART:BUART:reset_sr\
	Net_340
	Net_341
	\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_1\
	\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:b_0\
	\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	\UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_0\
	Net_335
	\UART:BUART:sRX:MODULE_6:g2:a0:gta_0\
	\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_1\
	\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_1\
	\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:lt_0\
	\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:gt_0\
	\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:lti_0\
	\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:gti_0\
	\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:albi_0\
	\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:agbi_0\
	\UART:BUART:sRX:MODULE_7:g1:a0:xeq\
	\UART:BUART:sRX:MODULE_7:g1:a0:xlt\
	\UART:BUART:sRX:MODULE_7:g1:a0:xlte\
	\UART:BUART:sRX:MODULE_7:g1:a0:xgt\
	\UART:BUART:sRX:MODULE_7:g1:a0:xgte\
	\UART:BUART:sRX:MODULE_7:lt\
	\UART:BUART:sRX:MODULE_7:eq\
	\UART:BUART:sRX:MODULE_7:gt\
	\UART:BUART:sRX:MODULE_7:gte\
	\UART:BUART:sRX:MODULE_7:lte\
	\BRAKE_ADC:Net_268\
	\BRAKE_ADC:Net_270\


Deleted 73 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \TPS_ADC:SAR:vp_ctl_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vn_ctl_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vn_ctl_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vp_ctl_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vp_ctl_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vn_ctl_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:SAR:vn_ctl_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing zero to \TPS_ADC:SAR:vp_ctl_0\
Aliasing one to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \TPS_ADC:bSAR_SEQ:status_7\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_6\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_5\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_4\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:status_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing Net_4 to \TPS_ADC:bSAR_SEQ:status_0\
Aliasing \TPS_ADC:bSAR_SEQ:soc_edge_detect\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__TPS_0_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__TPS_1_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_enable\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \APPS_ADC:SAR:vp_ctl_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vp_ctl_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vn_ctl_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vn_ctl_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vp_ctl_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vp_ctl_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vn_ctl_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:SAR:vn_ctl_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_7\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_6\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_5\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_4\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:status_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing Net_102 to \APPS_ADC:bSAR_SEQ:status_0\
Aliasing \APPS_ADC:bSAR_SEQ:soc_edge_detect\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:MODULE_2:g1:a0:gx:u0:aeqb_0\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__APPS_0_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__APPS_1_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \SERVO_PWM:Net_113\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__SERVO_OUT_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing Net_286 to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \Timer:Net_260\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \Timer:Net_102\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Tx_1_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__Rx_1_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:tx_hd_send_break\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:HalfDuplexSend\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalParityType_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalParityType_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalAddrMode_2\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalAddrMode_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:FinalAddrMode_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_ctrl_mark\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_status_6\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_status_5\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:tx_status_4\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:rx_count7_bit8_wire\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:s23Poll:MODIN6_1\ to \UART:BUART:sRX:s23Poll:MODIN5_1\
Aliasing \UART:BUART:sRX:s23Poll:MODIN6_0\ to \UART:BUART:sRX:s23Poll:MODIN5_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:s23Poll:MODIN7_1\ to \UART:BUART:sRX:s23Poll:MODIN5_1\
Aliasing \UART:BUART:sRX:s23Poll:MODIN7_0\ to \UART:BUART:sRX:s23Poll:MODIN5_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:rx_status_1\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newa_6\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newa_5\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newa_4\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newb_6\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newb_5\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newb_4\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newb_3\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newb_2\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newb_1\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \UART:BUART:sRX:MODULE_6:g2:a0:newb_0\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_0\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \BRAKE_ADC:Net_482\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \BRAKE_ADC:Net_252\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \BRAKE_ADC:soc\ to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__BRAKE_net_0 to \TPS_ADC:AMuxHw_2_Decoder_enable\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_5\\D\ to \TPS_ADC:MODIN1_5\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_4\\D\ to \TPS_ADC:MODIN1_4\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_3\\D\ to \TPS_ADC:MODIN1_3\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_2\\D\ to \TPS_ADC:MODIN1_2\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_1\\D\ to \TPS_ADC:MODIN1_1\
Aliasing \TPS_ADC:AMuxHw_2_Decoder_old_id_0\\D\ to \TPS_ADC:MODIN1_0\
Aliasing \TPS_ADC:bSAR_SEQ:soc_reg\\D\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \TPS_ADC:bSAR_SEQ:state_2\\D\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_5\\D\ to \APPS_ADC:MODIN3_5\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_4\\D\ to \APPS_ADC:MODIN3_4\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_3\\D\ to \APPS_ADC:MODIN3_3\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_2\\D\ to \APPS_ADC:MODIN3_2\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_1\\D\ to \APPS_ADC:MODIN3_1\
Aliasing \APPS_ADC:AMuxHw_2_Decoder_old_id_0\\D\ to \APPS_ADC:MODIN3_0\
Aliasing \APPS_ADC:bSAR_SEQ:soc_reg\\D\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \APPS_ADC:bSAR_SEQ:state_2\\D\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:reset_reg\\D\ to \TPS_ADC:SAR:vp_ctl_0\
Aliasing \UART:BUART:rx_break_status\\D\ to \TPS_ADC:SAR:vp_ctl_0\
Removing Lhs of wire \TPS_ADC:cmp_vv_vv_MODGEN_1\[2] = \TPS_ADC:MODULE_1:g1:a0:xeq\[345]
Removing Rhs of wire \TPS_ADC:clock\[3] = \TPS_ADC:Net_3874\[245]
Removing Rhs of wire \TPS_ADC:ch_addr_5\[5] = \TPS_ADC:bSAR_SEQ:count_5\[206]
Removing Rhs of wire \TPS_ADC:ch_addr_4\[7] = \TPS_ADC:bSAR_SEQ:count_4\[207]
Removing Rhs of wire \TPS_ADC:ch_addr_3\[9] = \TPS_ADC:bSAR_SEQ:count_3\[208]
Removing Rhs of wire \TPS_ADC:ch_addr_2\[11] = \TPS_ADC:bSAR_SEQ:count_2\[209]
Removing Rhs of wire \TPS_ADC:ch_addr_1\[13] = \TPS_ADC:bSAR_SEQ:count_1\[210]
Removing Rhs of wire \TPS_ADC:ch_addr_0\[15] = \TPS_ADC:bSAR_SEQ:count_0\[211]
Removing Lhs of wire \TPS_ADC:SAR:vp_ctl_2\[150] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vn_ctl_1\[151] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vn_ctl_3\[152] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vp_ctl_1\[153] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vp_ctl_3\[154] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vn_ctl_0\[155] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:vn_ctl_2\[156] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Lhs of wire \TPS_ADC:SAR:Net_188\[157] = \TPS_ADC:clock\[3]
Removing Rhs of wire \TPS_ADC:soc_out\[163] = \TPS_ADC:bSAR_SEQ:state_0\[229]
Removing Rhs of wire zero[164] = \TPS_ADC:SAR:vp_ctl_0\[149]
Removing Rhs of wire \TPS_ADC:bSAR_SEQ:enable\[195] = \TPS_ADC:bSAR_SEQ:control_0\[196]
Removing Rhs of wire \TPS_ADC:bSAR_SEQ:load_period\[197] = \TPS_ADC:bSAR_SEQ:control_1\[198]
Removing Rhs of wire \TPS_ADC:bSAR_SEQ:sw_soc\[199] = \TPS_ADC:bSAR_SEQ:control_2\[200]
Removing Rhs of wire one[204] = \TPS_ADC:AMuxHw_2_Decoder_enable\[0]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_7\[212] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_6\[213] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_5\[214] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_4\[215] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_3\[216] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_2\[217] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:status_1\[218] = zero[164]
Removing Rhs of wire \TPS_ADC:bSAR_SEQ:status_0\[219] = \TPS_ADC:bSAR_SEQ:nrq_edge_detect_reg\[220]
Removing Rhs of wire Net_4[227] = \TPS_ADC:bSAR_SEQ:status_0\[219]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:soc_in\[228] = \TPS_ADC:bSAR_SEQ:sw_soc\[199]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:soc_edge_detect\[232] = zero[164]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_5\[256] = \TPS_ADC:MODIN1_5\[257]
Removing Lhs of wire \TPS_ADC:MODIN1_5\[257] = \TPS_ADC:ch_addr_5\[5]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_4\[258] = \TPS_ADC:MODIN1_4\[259]
Removing Lhs of wire \TPS_ADC:MODIN1_4\[259] = \TPS_ADC:ch_addr_4\[7]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_3\[260] = \TPS_ADC:MODIN1_3\[261]
Removing Lhs of wire \TPS_ADC:MODIN1_3\[261] = \TPS_ADC:ch_addr_3\[9]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_2\[262] = \TPS_ADC:MODIN1_2\[263]
Removing Lhs of wire \TPS_ADC:MODIN1_2\[263] = \TPS_ADC:ch_addr_2\[11]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_1\[264] = \TPS_ADC:MODIN1_1\[265]
Removing Lhs of wire \TPS_ADC:MODIN1_1\[265] = \TPS_ADC:ch_addr_1\[13]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newa_0\[266] = \TPS_ADC:MODIN1_0\[267]
Removing Lhs of wire \TPS_ADC:MODIN1_0\[267] = \TPS_ADC:ch_addr_0\[15]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_5\[268] = \TPS_ADC:MODIN2_5\[269]
Removing Lhs of wire \TPS_ADC:MODIN2_5\[269] = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_4\[270] = \TPS_ADC:MODIN2_4\[271]
Removing Lhs of wire \TPS_ADC:MODIN2_4\[271] = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_3\[272] = \TPS_ADC:MODIN2_3\[273]
Removing Lhs of wire \TPS_ADC:MODIN2_3\[273] = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_2\[274] = \TPS_ADC:MODIN2_2\[275]
Removing Lhs of wire \TPS_ADC:MODIN2_2\[275] = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_1\[276] = \TPS_ADC:MODIN2_1\[277]
Removing Lhs of wire \TPS_ADC:MODIN2_1\[277] = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:newb_0\[278] = \TPS_ADC:MODIN2_0\[279]
Removing Lhs of wire \TPS_ADC:MODIN2_0\[279] = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_5\[280] = \TPS_ADC:ch_addr_5\[5]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_4\[281] = \TPS_ADC:ch_addr_4\[7]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_3\[282] = \TPS_ADC:ch_addr_3\[9]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_2\[283] = \TPS_ADC:ch_addr_2\[11]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_1\[284] = \TPS_ADC:ch_addr_1\[13]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:dataa_0\[285] = \TPS_ADC:ch_addr_0\[15]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_5\[286] = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_4\[287] = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_3\[288] = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_2\[289] = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_1\[290] = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:datab_0\[291] = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_5\[292] = \TPS_ADC:ch_addr_5\[5]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_4\[293] = \TPS_ADC:ch_addr_4\[7]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_3\[294] = \TPS_ADC:ch_addr_3\[9]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_2\[295] = \TPS_ADC:ch_addr_2\[11]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_1\[296] = \TPS_ADC:ch_addr_1\[13]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:a_0\[297] = \TPS_ADC:ch_addr_0\[15]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_5\[298] = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_4\[299] = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_3\[300] = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_2\[301] = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_1\[302] = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:b_0\[303] = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\[310] = one[204]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_0\[311] = \TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\[309]
Removing Lhs of wire \TPS_ADC:MODULE_1:g1:a0:gx:u0:eqi_0\[317] = \TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_5\[316]
Removing Rhs of wire \TPS_ADC:MODULE_1:g1:a0:xeq\[345] = \TPS_ADC:MODULE_1:g1:a0:gx:u0:aeqb_1\[318]
Removing Lhs of wire tmpOE__TPS_0_net_0[357] = one[204]
Removing Lhs of wire tmpOE__TPS_1_net_0[363] = one[204]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_enable\[368] = one[204]
Removing Lhs of wire \APPS_ADC:cmp_vv_vv_MODGEN_2\[370] = \APPS_ADC:MODULE_2:g1:a0:xeq\[711]
Removing Rhs of wire \APPS_ADC:clock\[371] = \APPS_ADC:Net_3874\[611]
Removing Rhs of wire \APPS_ADC:ch_addr_5\[373] = \APPS_ADC:bSAR_SEQ:count_5\[572]
Removing Rhs of wire \APPS_ADC:ch_addr_4\[375] = \APPS_ADC:bSAR_SEQ:count_4\[573]
Removing Rhs of wire \APPS_ADC:ch_addr_3\[377] = \APPS_ADC:bSAR_SEQ:count_3\[574]
Removing Rhs of wire \APPS_ADC:ch_addr_2\[379] = \APPS_ADC:bSAR_SEQ:count_2\[575]
Removing Rhs of wire \APPS_ADC:ch_addr_1\[381] = \APPS_ADC:bSAR_SEQ:count_1\[576]
Removing Rhs of wire \APPS_ADC:ch_addr_0\[383] = \APPS_ADC:bSAR_SEQ:count_0\[577]
Removing Lhs of wire \APPS_ADC:SAR:vp_ctl_0\[517] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vp_ctl_2\[518] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vn_ctl_1\[519] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vn_ctl_3\[520] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vp_ctl_1\[521] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vp_ctl_3\[522] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vn_ctl_0\[523] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:vn_ctl_2\[524] = zero[164]
Removing Lhs of wire \APPS_ADC:SAR:Net_188\[525] = \APPS_ADC:clock\[371]
Removing Rhs of wire \APPS_ADC:soc_out\[531] = \APPS_ADC:bSAR_SEQ:state_0\[595]
Removing Rhs of wire \APPS_ADC:bSAR_SEQ:enable\[562] = \APPS_ADC:bSAR_SEQ:control_0\[563]
Removing Rhs of wire \APPS_ADC:bSAR_SEQ:load_period\[564] = \APPS_ADC:bSAR_SEQ:control_1\[565]
Removing Rhs of wire \APPS_ADC:bSAR_SEQ:sw_soc\[566] = \APPS_ADC:bSAR_SEQ:control_2\[567]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_7\[578] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_6\[579] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_5\[580] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_4\[581] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_3\[582] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_2\[583] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:status_1\[584] = zero[164]
Removing Rhs of wire \APPS_ADC:bSAR_SEQ:status_0\[585] = \APPS_ADC:bSAR_SEQ:nrq_edge_detect_reg\[586]
Removing Rhs of wire Net_102[593] = \APPS_ADC:bSAR_SEQ:status_0\[585]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:soc_in\[594] = \APPS_ADC:bSAR_SEQ:sw_soc\[566]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:soc_edge_detect\[598] = zero[164]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_5\[622] = \APPS_ADC:MODIN3_5\[623]
Removing Lhs of wire \APPS_ADC:MODIN3_5\[623] = \APPS_ADC:ch_addr_5\[373]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_4\[624] = \APPS_ADC:MODIN3_4\[625]
Removing Lhs of wire \APPS_ADC:MODIN3_4\[625] = \APPS_ADC:ch_addr_4\[375]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_3\[626] = \APPS_ADC:MODIN3_3\[627]
Removing Lhs of wire \APPS_ADC:MODIN3_3\[627] = \APPS_ADC:ch_addr_3\[377]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_2\[628] = \APPS_ADC:MODIN3_2\[629]
Removing Lhs of wire \APPS_ADC:MODIN3_2\[629] = \APPS_ADC:ch_addr_2\[379]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_1\[630] = \APPS_ADC:MODIN3_1\[631]
Removing Lhs of wire \APPS_ADC:MODIN3_1\[631] = \APPS_ADC:ch_addr_1\[381]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newa_0\[632] = \APPS_ADC:MODIN3_0\[633]
Removing Lhs of wire \APPS_ADC:MODIN3_0\[633] = \APPS_ADC:ch_addr_0\[383]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_5\[634] = \APPS_ADC:MODIN4_5\[635]
Removing Lhs of wire \APPS_ADC:MODIN4_5\[635] = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\[372]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_4\[636] = \APPS_ADC:MODIN4_4\[637]
Removing Lhs of wire \APPS_ADC:MODIN4_4\[637] = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\[374]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_3\[638] = \APPS_ADC:MODIN4_3\[639]
Removing Lhs of wire \APPS_ADC:MODIN4_3\[639] = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\[376]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_2\[640] = \APPS_ADC:MODIN4_2\[641]
Removing Lhs of wire \APPS_ADC:MODIN4_2\[641] = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\[378]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_1\[642] = \APPS_ADC:MODIN4_1\[643]
Removing Lhs of wire \APPS_ADC:MODIN4_1\[643] = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\[380]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:newb_0\[644] = \APPS_ADC:MODIN4_0\[645]
Removing Lhs of wire \APPS_ADC:MODIN4_0\[645] = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\[382]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_5\[646] = \APPS_ADC:ch_addr_5\[373]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_4\[647] = \APPS_ADC:ch_addr_4\[375]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_3\[648] = \APPS_ADC:ch_addr_3\[377]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_2\[649] = \APPS_ADC:ch_addr_2\[379]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_1\[650] = \APPS_ADC:ch_addr_1\[381]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:dataa_0\[651] = \APPS_ADC:ch_addr_0\[383]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_5\[652] = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\[372]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_4\[653] = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\[374]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_3\[654] = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\[376]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_2\[655] = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\[378]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_1\[656] = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\[380]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:datab_0\[657] = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\[382]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_5\[658] = \APPS_ADC:ch_addr_5\[373]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_4\[659] = \APPS_ADC:ch_addr_4\[375]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_3\[660] = \APPS_ADC:ch_addr_3\[377]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_2\[661] = \APPS_ADC:ch_addr_2\[379]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_1\[662] = \APPS_ADC:ch_addr_1\[381]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:a_0\[663] = \APPS_ADC:ch_addr_0\[383]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_5\[664] = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\[372]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_4\[665] = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\[374]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_3\[666] = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\[376]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_2\[667] = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\[378]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_1\[668] = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\[380]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:b_0\[669] = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\[382]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:aeqb_0\[676] = one[204]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_0\[677] = \APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_0\[675]
Removing Lhs of wire \APPS_ADC:MODULE_2:g1:a0:gx:u0:eqi_0\[683] = \APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_5\[682]
Removing Rhs of wire \APPS_ADC:MODULE_2:g1:a0:xeq\[711] = \APPS_ADC:MODULE_2:g1:a0:gx:u0:aeqb_1\[684]
Removing Lhs of wire tmpOE__APPS_0_net_0[723] = one[204]
Removing Lhs of wire tmpOE__APPS_1_net_0[729] = one[204]
Removing Lhs of wire \SERVO_PWM:Net_107\[736] = Net_205[744]
Removing Lhs of wire \SERVO_PWM:Net_113\[737] = one[204]
Removing Rhs of wire Net_209[741] = \SERVO_PWM:Net_57\[739]
Removing Rhs of wire Net_205[744] = \Timer:Net_51\[759]
Removing Lhs of wire tmpOE__SERVO_OUT_net_0[747] = one[204]
Removing Lhs of wire Net_286[755] = zero[164]
Removing Lhs of wire \Timer:Net_260\[757] = zero[164]
Removing Lhs of wire \Timer:Net_266\[758] = one[204]
Removing Lhs of wire \Timer:Net_102\[763] = one[204]
Removing Lhs of wire tmpOE__Tx_1_net_0[765] = one[204]
Removing Lhs of wire tmpOE__Rx_1_net_0[772] = one[204]
Removing Lhs of wire \UART:Net_61\[779] = \UART:Net_9\[778]
Removing Lhs of wire \UART:BUART:tx_hd_send_break\[783] = zero[164]
Removing Lhs of wire \UART:BUART:HalfDuplexSend\[784] = zero[164]
Removing Lhs of wire \UART:BUART:FinalParityType_1\[785] = zero[164]
Removing Lhs of wire \UART:BUART:FinalParityType_0\[786] = zero[164]
Removing Lhs of wire \UART:BUART:FinalAddrMode_2\[787] = zero[164]
Removing Lhs of wire \UART:BUART:FinalAddrMode_1\[788] = zero[164]
Removing Lhs of wire \UART:BUART:FinalAddrMode_0\[789] = zero[164]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark\[790] = zero[164]
Removing Rhs of wire \UART:BUART:tx_bitclk_enable_pre\[801] = \UART:BUART:tx_bitclk_dp\[837]
Removing Lhs of wire \UART:BUART:tx_counter_tc\[847] = \UART:BUART:tx_counter_dp\[838]
Removing Lhs of wire \UART:BUART:tx_status_6\[848] = zero[164]
Removing Lhs of wire \UART:BUART:tx_status_5\[849] = zero[164]
Removing Lhs of wire \UART:BUART:tx_status_4\[850] = zero[164]
Removing Lhs of wire \UART:BUART:tx_status_1\[852] = \UART:BUART:tx_fifo_empty\[815]
Removing Lhs of wire \UART:BUART:tx_status_3\[854] = \UART:BUART:tx_fifo_notfull\[814]
Removing Lhs of wire \UART:BUART:rx_count7_bit8_wire\[914] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_3_1\[921] = \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\[932]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_3_0\[923] = \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\[933]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[924] = \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[949]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_5\[925] = \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\[963]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_1\[926] = \UART:BUART:sRX:s23Poll:MODIN5_1\[927]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN5_1\[927] = \UART:BUART:pollcount_1\[920]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:a_0\[928] = \UART:BUART:sRX:s23Poll:MODIN5_0\[929]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN5_0\[929] = \UART:BUART:pollcount_0\[922]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_0\[935] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\[936] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[937] = \UART:BUART:pollcount_1\[920]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN6_1\[938] = \UART:BUART:pollcount_1\[920]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[939] = \UART:BUART:pollcount_0\[922]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN6_0\[940] = \UART:BUART:pollcount_0\[922]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[941] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[942] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[943] = \UART:BUART:pollcount_1\[920]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[944] = \UART:BUART:pollcount_0\[922]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[945] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[946] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_1\[951] = \UART:BUART:pollcount_1\[920]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN7_1\[952] = \UART:BUART:pollcount_1\[920]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:newa_0\[953] = \UART:BUART:pollcount_0\[922]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN7_0\[954] = \UART:BUART:pollcount_0\[922]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_1\[955] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:newb_0\[956] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_1\[957] = \UART:BUART:pollcount_1\[920]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:dataa_0\[958] = \UART:BUART:pollcount_0\[922]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_1\[959] = one[204]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:datab_0\[960] = zero[164]
Removing Lhs of wire \UART:BUART:rx_status_1\[967] = zero[164]
Removing Rhs of wire \UART:BUART:rx_status_2\[968] = \UART:BUART:rx_parity_error_status\[969]
Removing Rhs of wire \UART:BUART:rx_status_3\[970] = \UART:BUART:rx_stop_bit_error\[971]
Removing Lhs of wire \UART:BUART:sRX:cmp_vv_vv_MODGEN_6\[981] = \UART:BUART:sRX:MODULE_6:g2:a0:lta_0\[1030]
Removing Lhs of wire \UART:BUART:sRX:cmp_vv_vv_MODGEN_7\[985] = \UART:BUART:sRX:MODULE_7:g1:a0:xneq\[1052]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newa_6\[986] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newa_5\[987] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newa_4\[988] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newa_3\[989] = \UART:BUART:sRX:MODIN8_6\[990]
Removing Lhs of wire \UART:BUART:sRX:MODIN8_6\[990] = \UART:BUART:rx_count_6\[909]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newa_2\[991] = \UART:BUART:sRX:MODIN8_5\[992]
Removing Lhs of wire \UART:BUART:sRX:MODIN8_5\[992] = \UART:BUART:rx_count_5\[910]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newa_1\[993] = \UART:BUART:sRX:MODIN8_4\[994]
Removing Lhs of wire \UART:BUART:sRX:MODIN8_4\[994] = \UART:BUART:rx_count_4\[911]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newa_0\[995] = \UART:BUART:sRX:MODIN8_3\[996]
Removing Lhs of wire \UART:BUART:sRX:MODIN8_3\[996] = \UART:BUART:rx_count_3\[912]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newb_6\[997] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newb_5\[998] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newb_4\[999] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newb_3\[1000] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newb_2\[1001] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newb_1\[1002] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:newb_0\[1003] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:dataa_6\[1004] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:dataa_5\[1005] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:dataa_4\[1006] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:dataa_3\[1007] = \UART:BUART:rx_count_6\[909]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:dataa_2\[1008] = \UART:BUART:rx_count_5\[910]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:dataa_1\[1009] = \UART:BUART:rx_count_4\[911]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:dataa_0\[1010] = \UART:BUART:rx_count_3\[912]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:datab_6\[1011] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:datab_5\[1012] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:datab_4\[1013] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:datab_3\[1014] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:datab_2\[1015] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:datab_1\[1016] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g2:a0:datab_0\[1017] = zero[164]
Removing Lhs of wire \UART:BUART:sRX:MODULE_7:g1:a0:newa_0\[1032] = \UART:BUART:rx_postpoll\[868]
Removing Lhs of wire \UART:BUART:sRX:MODULE_7:g1:a0:newb_0\[1033] = \UART:BUART:rx_parity_bit\[984]
Removing Lhs of wire \UART:BUART:sRX:MODULE_7:g1:a0:dataa_0\[1034] = \UART:BUART:rx_postpoll\[868]
Removing Lhs of wire \UART:BUART:sRX:MODULE_7:g1:a0:datab_0\[1035] = \UART:BUART:rx_parity_bit\[984]
Removing Lhs of wire \UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:a_0\[1036] = \UART:BUART:rx_postpoll\[868]
Removing Lhs of wire \UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:b_0\[1037] = \UART:BUART:rx_parity_bit\[984]
Removing Lhs of wire \UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_0\[1039] = one[204]
Removing Lhs of wire \UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:eq_0\[1040] = \UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\[1038]
Removing Lhs of wire \UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:eqi_0\[1041] = \UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\[1038]
Removing Rhs of wire \BRAKE_ADC:Net_488\[1074] = \BRAKE_ADC:Net_250\[1110]
Removing Lhs of wire \BRAKE_ADC:Net_481\[1077] = zero[164]
Removing Lhs of wire \BRAKE_ADC:Net_482\[1078] = zero[164]
Removing Lhs of wire \BRAKE_ADC:Net_252\[1112] = zero[164]
Removing Lhs of wire \BRAKE_ADC:soc\[1114] = one[204]
Removing Lhs of wire tmpOE__BRAKE_net_0[1118] = one[204]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_5\\D\[1123] = \TPS_ADC:ch_addr_5\[5]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_4\\D\[1124] = \TPS_ADC:ch_addr_4\[7]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_3\\D\[1125] = \TPS_ADC:ch_addr_3\[9]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_2\\D\[1126] = \TPS_ADC:ch_addr_2\[11]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_1\\D\[1127] = \TPS_ADC:ch_addr_1\[13]
Removing Lhs of wire \TPS_ADC:AMuxHw_2_Decoder_old_id_0\\D\[1128] = \TPS_ADC:ch_addr_0\[15]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\[1193] = \TPS_ADC:bSAR_SEQ:nrq_edge_detect\[226]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:nrq_reg\\D\[1195] = \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\[223]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:soc_reg\\D\[1197] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:soc_edge_detect_reg\\D\[1198] = zero[164]
Removing Lhs of wire \TPS_ADC:bSAR_SEQ:state_2\\D\[1199] = zero[164]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_5\\D\[1201] = \APPS_ADC:ch_addr_5\[373]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_4\\D\[1202] = \APPS_ADC:ch_addr_4\[375]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_3\\D\[1203] = \APPS_ADC:ch_addr_3\[377]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_2\\D\[1204] = \APPS_ADC:ch_addr_2\[379]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_1\\D\[1205] = \APPS_ADC:ch_addr_1\[381]
Removing Lhs of wire \APPS_ADC:AMuxHw_2_Decoder_old_id_0\\D\[1206] = \APPS_ADC:ch_addr_0\[383]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\[1271] = \APPS_ADC:bSAR_SEQ:nrq_edge_detect\[592]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:nrq_reg\\D\[1273] = \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\[589]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:soc_reg\\D\[1275] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:soc_edge_detect_reg\\D\[1276] = zero[164]
Removing Lhs of wire \APPS_ADC:bSAR_SEQ:state_2\\D\[1277] = zero[164]
Removing Lhs of wire \UART:BUART:reset_reg\\D\[1279] = zero[164]
Removing Lhs of wire \UART:BUART:rx_bitclk\\D\[1294] = \UART:BUART:rx_bitclk_pre\[903]
Removing Lhs of wire \UART:BUART:rx_parity_error_pre\\D\[1303] = \UART:BUART:rx_parity_error_pre\[979]
Removing Lhs of wire \UART:BUART:rx_break_status\\D\[1304] = zero[164]

------------------------------------------------------
Aliased 0 equations, 310 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_5\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_4\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_3\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_2\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_1\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_0\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_1\' (cost = 8):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_1\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_2\' (cost = 16):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_2\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_3\' (cost = 32):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_3\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_4\' (cost = 64):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_4\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_5\' (cost = 64):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:eq_5\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_3\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_3\ <= ((not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_3\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_3\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_4\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_4\ <= ((not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_4\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_4\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_0\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_0\ <= ((not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_0\' (cost = 2):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_0\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_1\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_1\ <= ((not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_1\' (cost = 6):
\APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_1\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\UART:BUART:rx_addressmatch\' (cost = 0):
\UART:BUART:rx_addressmatch\ <= (\UART:BUART:rx_addressmatch2\
	OR \UART:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART:BUART:rx_bitclk_pre\' (cost = 1):
\UART:BUART:rx_bitclk_pre\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_bitclk_pre16x\' (cost = 0):
\UART:BUART:rx_bitclk_pre16x\ <= ((not \UART:BUART:rx_count_2\ and \UART:BUART:rx_count_1\ and \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_poll_bit1\' (cost = 1):
\UART:BUART:rx_poll_bit1\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_poll_bit2\' (cost = 1):
\UART:BUART:rx_poll_bit2\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:pollingrange\' (cost = 4):
\UART:BUART:pollingrange\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_0\ <= (not \UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <= (\UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_1\ <= (not \UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:lta_6\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:gta_6\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:lta_5\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:gta_5\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:lta_4\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:gta_4\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:lta_3\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:gta_3\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:gta_3\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:lta_2\' (cost = 1):
\UART:BUART:sRX:MODULE_6:g2:a0:lta_2\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:gta_2\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:gta_2\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:lta_1\' (cost = 2):
\UART:BUART:sRX:MODULE_6:g2:a0:lta_1\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\)
	OR (not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:MODULE_6:g2:a0:gta_1\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g2:a0:lta_0\' (cost = 8):
\UART:BUART:sRX:MODULE_6:g2:a0:lta_0\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\)
	OR (not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\TPS_ADC:MODULE_1:g1:a0:xeq\' (cost = 64):
\TPS_ADC:MODULE_1:g1:a0:xeq\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\APPS_ADC:MODULE_2:g1:a0:xeq\' (cost = 64):
\APPS_ADC:MODULE_2:g1:a0:xeq\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 4):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= ((not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_5:g2:a0:lta_0\ <= (not \UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\' (cost = 2):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:s_1\ <= ((not \UART:BUART:pollcount_0\ and \UART:BUART:pollcount_1\)
	OR (not \UART:BUART:pollcount_1\ and \UART:BUART:pollcount_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \TPS_ADC:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\TPS_ADC:AMuxHw_2_Decoder_is_active\ <= ((not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \TPS_ADC:ch_addr_0\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (not \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\)
	OR (\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \TPS_ADC:ch_addr_5\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \TPS_ADC:ch_addr_4\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \TPS_ADC:ch_addr_3\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \TPS_ADC:ch_addr_2\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \TPS_ADC:ch_addr_1\ and \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \TPS_ADC:ch_addr_0\));

Note:  Virtual signal \APPS_ADC:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\APPS_ADC:AMuxHw_2_Decoder_is_active\ <= ((not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and not \APPS_ADC:ch_addr_0\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and not \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and not \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and not \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and not \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (not \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and not \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\)
	OR (\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ and \APPS_ADC:ch_addr_5\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ and \APPS_ADC:ch_addr_4\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ and \APPS_ADC:ch_addr_3\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ and \APPS_ADC:ch_addr_2\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ and \APPS_ADC:ch_addr_1\ and \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ and \APPS_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_postpoll\' (cost = 72):
\UART:BUART:rx_postpoll\ <= (\UART:BUART:pollcount_1\
	OR (Net_339 and \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:xnor_array_0\ <= ((not Net_339 and not \UART:BUART:pollcount_1\ and not \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and not \UART:BUART:rx_parity_bit\)
	OR (\UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (Net_339 and \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART:BUART:sRX:MODULE_7:g1:a0:gx:u0:aeqb_1\ <= ((not Net_339 and not \UART:BUART:pollcount_1\ and not \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and not \UART:BUART:rx_parity_bit\)
	OR (\UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (Net_339 and \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 73 signals.
	Turned 2 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \UART:BUART:rx_status_0\ to zero
Aliasing \UART:BUART:rx_status_6\ to zero
Aliasing \UART:BUART:rx_markspace_status\\D\ to zero
Aliasing \UART:BUART:rx_parity_error_status\\D\ to zero
Aliasing \UART:BUART:rx_addr_match_status\\D\ to zero
Removing Rhs of wire \UART:BUART:rx_bitclk_enable\[867] = \UART:BUART:rx_bitclk\[915]
Removing Lhs of wire \UART:BUART:rx_status_0\[965] = zero[164]
Removing Lhs of wire \UART:BUART:rx_status_6\[974] = zero[164]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark_last\\D\[1286] = \UART:BUART:tx_ctrl_mark_last\[858]
Removing Lhs of wire \UART:BUART:rx_markspace_status\\D\[1298] = zero[164]
Removing Lhs of wire \UART:BUART:rx_parity_error_status\\D\[1299] = zero[164]
Removing Lhs of wire \UART:BUART:rx_addr_match_status\\D\[1301] = zero[164]
Removing Lhs of wire \UART:BUART:rx_markspace_pre\\D\[1302] = \UART:BUART:rx_markspace_pre\[978]
Removing Lhs of wire \UART:BUART:rx_parity_bit\\D\[1307] = \UART:BUART:rx_parity_bit\[984]

------------------------------------------------------
Aliased 0 equations, 9 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART:BUART:sRX:MODULE_7:g1:a0:xneq\ <= ((not \UART:BUART:rx_parity_bit\ and Net_339 and \UART:BUART:pollcount_0\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\)
	OR (not Net_339 and not \UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:rx_parity_bit\ and \UART:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\3.2\PSoC Creator\warp\bin/warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\E-Throttle.cyprj -dcpsoc3 E-Throttle.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 0s.989ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V3.2.0.6175, Family: PSoC3, Started at: Tuesday, 15 March 2016 04:31:12
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\mitchell\Documents\fsae\E-Throttle\PSoC\E-Throttle.cydsn\E-Throttle.cyprj -d CY8C5888LTI-LP097 E-Throttle.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.035ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \APPS_ADC:MODULE_2:g1:a0:gx:u0:lti_0\ kept \APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_2\
    Removed wire end \APPS_ADC:MODULE_2:g1:a0:gx:u0:gti_0\ kept \APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_2\
    Removed wire end \APPS_ADC:MODULE_2:g1:a0:gx:u0:lti_1\ kept \APPS_ADC:MODULE_2:g1:a0:gx:u0:lt_5\
    Removed wire end \APPS_ADC:MODULE_2:g1:a0:gx:u0:gti_1\ kept \APPS_ADC:MODULE_2:g1:a0:gx:u0:gt_5\
    Removed wire end \TPS_ADC:MODULE_1:g1:a0:gx:u0:lti_0\ kept \TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \TPS_ADC:MODULE_1:g1:a0:gx:u0:gti_0\ kept \TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \TPS_ADC:MODULE_1:g1:a0:gx:u0:lti_1\ kept \TPS_ADC:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \TPS_ADC:MODULE_1:g1:a0:gx:u0:gti_1\ kept \TPS_ADC:MODULE_1:g1:a0:gx:u0:gt_5\
    Converted constant MacroCell: \APPS_ADC:bSAR_SEQ:soc_edge_detect_reg\ from registered to combinatorial
    Converted constant MacroCell: \APPS_ADC:bSAR_SEQ:soc_reg\ from registered to combinatorial
    Converted constant MacroCell: \APPS_ADC:bSAR_SEQ:state_2\ from registered to combinatorial
    Converted constant MacroCell: \TPS_ADC:bSAR_SEQ:soc_edge_detect_reg\ from registered to combinatorial
    Converted constant MacroCell: \TPS_ADC:bSAR_SEQ:soc_reg\ from registered to combinatorial
    Converted constant MacroCell: \TPS_ADC:bSAR_SEQ:state_2\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_break_status\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_status_2\ from registered to combinatorial
Assigning clock APPS_ADC_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock TPS_ADC_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'BRAKE_ADC_Ext_CP_Clk'. Fanout=1, Signal=\BRAKE_ADC:Net_93\
    Digital Clock 1: Automatic-assigning  clock 'TPS_ADC_IntClock'. Fanout=73, Signal=\TPS_ADC:clock\
    Digital Clock 2: Automatic-assigning  clock 'APPS_ADC_IntClock'. Fanout=73, Signal=\APPS_ADC:clock\
    Digital Clock 3: Automatic-assigning  clock 'pwm_clock'. Fanout=1, Signal=Net_1822
    Digital Clock 4: Automatic-assigning  clock 'UART_IntClock'. Fanout=1, Signal=\UART:Net_9\
    Analog  Clock 0: Automatic-assigning  clock 'BRAKE_ADC_theACLK'. Fanout=1, Signal=\BRAKE_ADC:Net_488\
    Digital Clock 5: Automatic-assigning  clock 'timer_clock'. Fanout=1, Signal=Net_284
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \APPS_ADC:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: APPS_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: APPS_ADC_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \APPS_ADC:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: APPS_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \APPS_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: APPS_ADC_IntClock, EnableOut: \APPS_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \TPS_ADC:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: TPS_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: TPS_ADC_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \TPS_ADC:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: TPS_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \TPS_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: TPS_ADC_IntClock, EnableOut: \TPS_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \UART:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_IntClock, EnableOut: Constant 1
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART:BUART:tx_parity_bit\, Duplicate of \UART:BUART:rx_address_detected\ 
    MacroCell: Name=\UART:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART:BUART:tx_mark\, Duplicate of \UART:BUART:rx_address_detected\ 
    MacroCell: Name=\UART:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_mark\ (fanout=0)

    Removing \UART:BUART:tx_ctrl_mark_last\, Duplicate of \UART:BUART:rx_address_detected\ 
    MacroCell: Name=\UART:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_ctrl_mark_last\ (fanout=0)

    Removing \UART:BUART:rx_state_1\, Duplicate of \UART:BUART:rx_address_detected\ 
    MacroCell: Name=\UART:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_state_1\ (fanout=8)

    Removing \UART:BUART:rx_parity_error_pre\, Duplicate of \UART:BUART:rx_address_detected\ 
    MacroCell: Name=\UART:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART:BUART:rx_parity_bit\, Duplicate of \UART:BUART:rx_address_detected\ 
    MacroCell: Name=\UART:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART:BUART:rx_markspace_pre\, Duplicate of \UART:BUART:rx_address_detected\ 
    MacroCell: Name=\UART:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_markspace_pre\ (fanout=0)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = APPS_0(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => APPS_0(0)__PA ,
            analog_term => Net_103 ,
            pad => APPS_0(0)_PAD ,
            input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = APPS_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => APPS_1(0)__PA ,
            analog_term => Net_104 ,
            pad => APPS_1(0)_PAD ,
            input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = BRAKE(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => BRAKE(0)__PA ,
            analog_term => Net_420 ,
            pad => BRAKE(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Rx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Rx_1(0)__PA ,
            fb => Net_339 ,
            pad => Rx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SERVO_OUT(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SERVO_OUT(0)__PA ,
            input => Net_209 ,
            pad => SERVO_OUT(0)_PAD );
        Properties:
        {
        }

    Pin : Name = TPS_0(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => TPS_0(0)__PA ,
            analog_term => Net_907 ,
            pad => TPS_0(0)_PAD ,
            input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = TPS_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => TPS_1(0)__PA ,
            analog_term => Net_908 ,
            pad => TPS_1(0)_PAD ,
            input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Tx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Tx_1(0)__PA ,
            input => Net_334 ,
            pad => Tx_1(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=Net_102, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\APPS_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_102 (fanout=3)

    MacroCell: Name=Net_334, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_334 (fanout=1)

    MacroCell: Name=Net_4, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\TPS_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_4 (fanout=3)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * \APPS_ADC:ch_addr_5\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * \APPS_ADC:ch_addr_4\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * \APPS_ADC:ch_addr_3\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * \APPS_ADC:ch_addr_2\
            + \APPS_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * !\APPS_ADC:ch_addr_5\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * !\APPS_ADC:ch_addr_4\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * !\APPS_ADC:ch_addr_3\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * !\APPS_ADC:ch_addr_2\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * \APPS_ADC:ch_addr_1\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * !\APPS_ADC:ch_addr_1\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\ * \APPS_ADC:ch_addr_0\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ * !\APPS_ADC:ch_addr_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_1\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_2\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_3\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_4\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_5\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_102
            + \APPS_ADC:Net_3935\
        );
        Output = \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\APPS_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_101 * !\APPS_ADC:bSAR_SEQ:load_period\
        );
        Output = \APPS_ADC:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\APPS_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \APPS_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\APPS_ADC:bSAR_SEQ:state_1\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\APPS_ADC:soc_out\ * !\APPS_ADC:Net_3830\ * 
              !\APPS_ADC:bSAR_SEQ:load_period\ * \APPS_ADC:bSAR_SEQ:state_1\
            + \APPS_ADC:soc_out\ * !\APPS_ADC:bSAR_SEQ:load_period\ * 
              !\APPS_ADC:bSAR_SEQ:state_1\
        );
        Output = \APPS_ADC:bSAR_SEQ:state_1\ (fanout=2)

    MacroCell: Name=\APPS_ADC:soc_out\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\APPS_ADC:soc_out\ * \APPS_ADC:Net_3830\ * 
              !\APPS_ADC:bSAR_SEQ:load_period\ * \APPS_ADC:bSAR_SEQ:state_1\ * 
              !\APPS_ADC:bSAR_SEQ:cnt_tc\
            + !\APPS_ADC:soc_out\ * !\APPS_ADC:bSAR_SEQ:load_period\ * 
              \APPS_ADC:bSAR_SEQ:sw_soc\ * !\APPS_ADC:bSAR_SEQ:state_1\
        );
        Output = \APPS_ADC:soc_out\ (fanout=3)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * \TPS_ADC:ch_addr_5\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * \TPS_ADC:ch_addr_4\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * \TPS_ADC:ch_addr_3\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * \TPS_ADC:ch_addr_2\
            + \TPS_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * !\TPS_ADC:ch_addr_5\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * !\TPS_ADC:ch_addr_4\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * !\TPS_ADC:ch_addr_3\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * !\TPS_ADC:ch_addr_2\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * \TPS_ADC:ch_addr_1\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * !\TPS_ADC:ch_addr_1\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\ * \TPS_ADC:ch_addr_0\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ * !\TPS_ADC:ch_addr_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_1\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_2\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_3\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_4\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_5\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_4
            + \TPS_ADC:Net_3935\
        );
        Output = \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\TPS_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_3 * !\TPS_ADC:bSAR_SEQ:load_period\
        );
        Output = \TPS_ADC:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\TPS_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \TPS_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\TPS_ADC:bSAR_SEQ:state_1\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\TPS_ADC:soc_out\ * !\TPS_ADC:Net_3830\ * 
              !\TPS_ADC:bSAR_SEQ:load_period\ * \TPS_ADC:bSAR_SEQ:state_1\
            + \TPS_ADC:soc_out\ * !\TPS_ADC:bSAR_SEQ:load_period\ * 
              !\TPS_ADC:bSAR_SEQ:state_1\
        );
        Output = \TPS_ADC:bSAR_SEQ:state_1\ (fanout=2)

    MacroCell: Name=\TPS_ADC:soc_out\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\TPS_ADC:soc_out\ * \TPS_ADC:Net_3830\ * 
              !\TPS_ADC:bSAR_SEQ:load_period\ * \TPS_ADC:bSAR_SEQ:state_1\ * 
              !\TPS_ADC:bSAR_SEQ:cnt_tc\
            + !\TPS_ADC:soc_out\ * !\TPS_ADC:bSAR_SEQ:load_period\ * 
              \TPS_ADC:bSAR_SEQ:sw_soc\ * !\TPS_ADC:bSAR_SEQ:state_1\
        );
        Output = \TPS_ADC:soc_out\ (fanout=3)

    MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_339 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_0\
            + Net_339 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\UART:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !Net_339 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\
            + Net_339 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_1\ * \UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\UART:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_address_detected\ (fanout=8)

    MacroCell: Name=\UART:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:rx_count_0\
        );
        Output = \UART:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_339
        );
        Output = \UART:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_5\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_4\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_339 * \UART:BUART:pollcount_0\
            + \UART:BUART:pollcount_1\
        );
        Output = \UART:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_339 * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:rx_address_detected\
            + !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              !\UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\ * 
              !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_5\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_4\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\UART:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_339 * !\UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_address_detected\ * 
              \UART:BUART:rx_last\
            + !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * !\UART:BUART:rx_address_detected\
            + !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_5\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_4\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\UART:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_5\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_4\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\UART:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_339 * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:rx_address_detected\
            + !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\ * 
              !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_load_fifo\ * \UART:BUART:rx_fifofull\
        );
        Output = \UART:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_fifonotempty\ * \UART:BUART:rx_state_stop1_reg\
        );
        Output = \UART:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=3)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\UART:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_2 => \UART:BUART:rx_address_detected\ ,
            cs_addr_1 => \UART:BUART:rx_state_0\ ,
            cs_addr_0 => \UART:BUART:rx_bitclk_enable\ ,
            route_si => \UART:BUART:rx_postpoll\ ,
            f0_load => \UART:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_2 => \UART:BUART:tx_state_1\ ,
            cs_addr_1 => \UART:BUART:tx_state_0\ ,
            cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_0 => \UART:BUART:counter_load_not\ ,
            ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\APPS_ADC:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \APPS_ADC:clock\ ,
            status_0 => Net_102 ,
            clk_en => \APPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)

    statuscell: Name =\TPS_ADC:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \TPS_ADC:clock\ ,
            status_0 => Net_4 ,
            clk_en => \TPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART:Net_9\ ,
            status_5 => \UART:BUART:rx_status_5\ ,
            status_4 => \UART:BUART:rx_status_4\ ,
            status_3 => \UART:BUART:rx_status_3\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART:Net_9\ ,
            status_3 => \UART:BUART:tx_fifo_notfull\ ,
            status_2 => \UART:BUART:tx_status_2\ ,
            status_1 => \UART:BUART:tx_fifo_empty\ ,
            status_0 => \UART:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\APPS_ADC:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \APPS_ADC:nrq\ ,
            out => \APPS_ADC:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =\TPS_ADC:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \TPS_ADC:nrq\ ,
            out => \TPS_ADC:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\APPS_ADC:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \APPS_ADC:clock\ ,
            control_7 => \APPS_ADC:bSAR_SEQ:control_7\ ,
            control_6 => \APPS_ADC:bSAR_SEQ:control_6\ ,
            control_5 => \APPS_ADC:bSAR_SEQ:control_5\ ,
            control_4 => \APPS_ADC:bSAR_SEQ:control_4\ ,
            control_3 => \APPS_ADC:bSAR_SEQ:control_3\ ,
            control_2 => \APPS_ADC:bSAR_SEQ:sw_soc\ ,
            control_1 => \APPS_ADC:bSAR_SEQ:load_period\ ,
            control_0 => \APPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\TPS_ADC:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \TPS_ADC:clock\ ,
            control_7 => \TPS_ADC:bSAR_SEQ:control_7\ ,
            control_6 => \TPS_ADC:bSAR_SEQ:control_6\ ,
            control_5 => \TPS_ADC:bSAR_SEQ:control_5\ ,
            control_4 => \TPS_ADC:bSAR_SEQ:control_4\ ,
            control_3 => \TPS_ADC:bSAR_SEQ:control_3\ ,
            control_2 => \TPS_ADC:bSAR_SEQ:sw_soc\ ,
            control_1 => \TPS_ADC:bSAR_SEQ:load_period\ ,
            control_0 => \TPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\APPS_ADC:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \APPS_ADC:clock\ ,
            load => \APPS_ADC:bSAR_SEQ:load_period\ ,
            enable => \APPS_ADC:bSAR_SEQ:cnt_enable\ ,
            count_6 => \APPS_ADC:bSAR_SEQ:count_6\ ,
            count_5 => \APPS_ADC:ch_addr_5\ ,
            count_4 => \APPS_ADC:ch_addr_4\ ,
            count_3 => \APPS_ADC:ch_addr_3\ ,
            count_2 => \APPS_ADC:ch_addr_2\ ,
            count_1 => \APPS_ADC:ch_addr_1\ ,
            count_0 => \APPS_ADC:ch_addr_0\ ,
            tc => \APPS_ADC:bSAR_SEQ:cnt_tc\ ,
            clk_en => \APPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000001"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)

    count7cell: Name =\TPS_ADC:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \TPS_ADC:clock\ ,
            load => \TPS_ADC:bSAR_SEQ:load_period\ ,
            enable => \TPS_ADC:bSAR_SEQ:cnt_enable\ ,
            count_6 => \TPS_ADC:bSAR_SEQ:count_6\ ,
            count_5 => \TPS_ADC:ch_addr_5\ ,
            count_4 => \TPS_ADC:ch_addr_4\ ,
            count_3 => \TPS_ADC:ch_addr_3\ ,
            count_2 => \TPS_ADC:ch_addr_2\ ,
            count_1 => \TPS_ADC:ch_addr_1\ ,
            count_0 => \TPS_ADC:ch_addr_0\ ,
            tc => \TPS_ADC:bSAR_SEQ:cnt_tc\ ,
            clk_en => \TPS_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000001"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)

    count7cell: Name =\UART:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART:Net_9\ ,
            load => \UART:BUART:rx_counter_load\ ,
            count_6 => \UART:BUART:rx_count_6\ ,
            count_5 => \UART:BUART:rx_count_5\ ,
            count_4 => \UART:BUART:rx_count_4\ ,
            count_3 => \UART:BUART:rx_count_3\ ,
            count_2 => \UART:BUART:rx_count_2\ ,
            count_1 => \UART:BUART:rx_count_1\ ,
            count_0 => \UART:BUART:rx_count_0\ ,
            tc => \UART:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\APPS_ADC:FinalBuf\
        PORT MAP (
            dmareq => \APPS_ADC:Net_3698\ ,
            termin => zero ,
            termout => \APPS_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\APPS_ADC:TempBuf\
        PORT MAP (
            dmareq => \APPS_ADC:Net_3830\ ,
            termin => zero ,
            termout => \APPS_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\TPS_ADC:FinalBuf\
        PORT MAP (
            dmareq => \TPS_ADC:Net_3698\ ,
            termin => zero ,
            termout => \TPS_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\TPS_ADC:TempBuf\
        PORT MAP (
            dmareq => \TPS_ADC:Net_3830\ ,
            termin => zero ,
            termout => \TPS_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\APPS_ADC:IRQ\
        PORT MAP (
            interrupt => Net_102 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\BRAKE_ADC:IRQ\
        PORT MAP (
            interrupt => Net_429 );
        Properties:
        {
            int_type = "10"
        }

    interrupt: Name =\TPS_ADC:IRQ\
        PORT MAP (
            interrupt => Net_4 );
        Properties:
        {
            int_type = "10"
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital clock dividers        :    6 :    2 :    8 :  75.00%
Analog clock dividers         :    1 :    3 :    4 :  25.00%
Pins                          :   11 :   37 :   48 :  22.92%
UDB Macrocells                :  181 :   11 :  192 :  94.27%
UDB Unique Pterms             :  228 :  156 :  384 :  59.38%
UDB Total Pterms              :  237 :      :      : 
UDB Datapath Cells            :    3 :   21 :   24 :  12.50%
UDB Status Cells              :    8 :   16 :   24 :  33.33%
             Status Registers :    2 
            StatusI Registers :    2 
                   Sync Cells :    2 (in 1 status cell)
    Routed Count7 Load/Enable :    3 
UDB Control Cells             :    5 :   19 :   24 :  20.83%
            Control Registers :    2 
                 Count7 Cells :    3 
DMA Channels                  :    4 :   20 :   24 :  16.67%
Interrupts                    :    3 :   29 :   32 :   9.38%
DSM Fixed Blocks              :    1 :    0 :    1 : 100.00%
VIDAC Fixed Blocks            :    0 :    4 :    4 :   0.00%
SC Fixed Blocks               :    0 :    4 :    4 :   0.00%
Comparator Fixed Blocks       :    0 :    4 :    4 :   0.00%
Opamp Fixed Blocks            :    0 :    4 :    4 :   0.00%
CapSense Buffers              :    0 :    2 :    2 :   0.00%
CAN Fixed Blocks              :    0 :    1 :    1 :   0.00%
Decimator Fixed Blocks        :    1 :    0 :    1 : 100.00%
I2C Fixed Blocks              :    0 :    1 :    1 :   0.00%
Timer Fixed Blocks            :    2 :    2 :    4 :  50.00%
DFB Fixed Blocks              :    0 :    1 :    1 :   0.00%
USB Fixed Blocks              :    0 :    1 :    1 :   0.00%
LCD Fixed Blocks              :    0 :    1 :    1 :   0.00%
EMIF Fixed Blocks             :    0 :    1 :    1 :   0.00%
LPF Fixed Blocks              :    0 :    2 :    2 :   0.00%
SAR Fixed Blocks              :    2 :    0 :    2 : 100.00%
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.739ms
Tech mapping phase: Elapsed time ==> 0s.867ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_106" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_107" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_109" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_111" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_112" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_114" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_116" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_117" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_119" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_121" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_122" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_124" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_126" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_127" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_129" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_131" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_132" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_134" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_136" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_137" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_139" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_141" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_142" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_144" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_146" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_147" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_149" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_151" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_152" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_154" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_156" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_157" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_159" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_161" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_162" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_164" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_166" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_167" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_169" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_171" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_172" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_174" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_176" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_177" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_179" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_181" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_182" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_183" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_184" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_185" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_186" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_187" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_188" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_189" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_190" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_191" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_192" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_193" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_194" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_195" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_196" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_197" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "\BRAKE_ADC:Net_690\" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_6" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_7" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_9" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_11" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_14" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_16" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_17" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_19" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_21" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_22" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_24" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_26" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_27" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_29" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_31" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_32" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_34" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_36" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_37" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_39" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_41" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_42" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_44" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_46" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_47" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_49" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_51" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_52" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_54" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_56" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_57" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_59" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_61" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_62" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_64" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_66" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_67" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_69" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_71" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_72" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_74" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_76" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_77" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_79" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_81" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_82" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_83" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_84" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_85" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_86" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_87" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_88" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_89" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_90" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_91" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_92" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_93" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_94" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_95" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_96" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_97" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_0@[IOP=(2)][IoId=(0)] : APPS_0(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : APPS_1(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : BRAKE(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : SERVO_OUT(0) (fixed)
IO_4@[IOP=(15)][IoId=(4)] : TPS_0(0) (fixed)
IO_5@[IOP=(15)][IoId=(5)] : TPS_1(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \APPS_ADC:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \APPS_ADC:SAR:vRef_Vdda_1\
DSM[0]@[FFB(DSM,0)] : \BRAKE_ADC:DSM\
Vref[6]@[FFB(Vref,6)] : \BRAKE_ADC:vRef_2\
SAR[0]@[FFB(SAR,0)] : \TPS_ADC:SAR:ADC_SAR\
Log: apr.M0058: The analog placement iterative improvement is 28% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 50% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 75% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 99% done. (App=cydsfit)
Analog Placement Results:
IO_0@[IOP=(2)][IoId=(0)] : APPS_0(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : APPS_1(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : BRAKE(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : SERVO_OUT(0) (fixed)
IO_4@[IOP=(15)][IoId=(4)] : TPS_0(0) (fixed)
IO_5@[IOP=(15)][IoId=(5)] : TPS_1(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
SAR[0]@[FFB(SAR,0)] : \APPS_ADC:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \APPS_ADC:SAR:vRef_Vdda_1\
DSM[0]@[FFB(DSM,0)] : \BRAKE_ADC:DSM\
Vref[6]@[FFB(Vref,6)] : \BRAKE_ADC:vRef_2\
SAR[1]@[FFB(SAR,1)] : \TPS_ADC:SAR:ADC_SAR\

Analog Placement phase: Elapsed time ==> 14s.317ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Net "AmuxEye::\APPS_ADC:AMuxHw_2\" overuses wire "AGL[1]"
Net "AmuxEye::\TPS_ADC:AMuxHw_2\" overuses wire "AGL[1]"
Analog Routing phase: Elapsed time ==> 0s.042ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \APPS_ADC:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_103 {
    p2_0
  }
  Net: Net_104 {
    p2_1
  }
  Net: Net_106 {
  }
  Net: Net_107 {
  }
  Net: Net_109 {
  }
  Net: Net_111 {
  }
  Net: Net_112 {
  }
  Net: Net_114 {
  }
  Net: Net_116 {
  }
  Net: Net_117 {
  }
  Net: Net_119 {
  }
  Net: Net_121 {
  }
  Net: Net_122 {
  }
  Net: Net_124 {
  }
  Net: Net_126 {
  }
  Net: Net_127 {
  }
  Net: Net_129 {
  }
  Net: Net_131 {
  }
  Net: Net_132 {
  }
  Net: Net_134 {
  }
  Net: Net_136 {
  }
  Net: Net_137 {
  }
  Net: Net_139 {
  }
  Net: Net_141 {
  }
  Net: Net_142 {
  }
  Net: Net_144 {
  }
  Net: Net_146 {
  }
  Net: Net_147 {
  }
  Net: Net_149 {
  }
  Net: Net_151 {
  }
  Net: Net_152 {
  }
  Net: Net_154 {
  }
  Net: Net_156 {
  }
  Net: Net_157 {
  }
  Net: Net_159 {
  }
  Net: Net_161 {
  }
  Net: Net_162 {
  }
  Net: Net_164 {
  }
  Net: Net_166 {
  }
  Net: Net_167 {
  }
  Net: Net_169 {
  }
  Net: Net_171 {
  }
  Net: Net_172 {
  }
  Net: Net_174 {
  }
  Net: Net_176 {
  }
  Net: Net_177 {
  }
  Net: Net_179 {
  }
  Net: Net_181 {
  }
  Net: Net_182 {
  }
  Net: Net_183 {
  }
  Net: Net_184 {
  }
  Net: Net_185 {
  }
  Net: Net_186 {
  }
  Net: Net_187 {
  }
  Net: Net_188 {
  }
  Net: Net_189 {
  }
  Net: Net_190 {
  }
  Net: Net_191 {
  }
  Net: Net_192 {
  }
  Net: Net_193 {
  }
  Net: Net_194 {
  }
  Net: Net_195 {
  }
  Net: Net_196 {
  }
  Net: Net_197 {
  }
  Net: \BRAKE_ADC:Net_520\ {
    dsm_0_vminus
  }
  Net: \BRAKE_ADC:Net_244\ {
    common_vssa
  }
  Net: \BRAKE_ADC:Net_690\ {
  }
  Net: \TPS_ADC:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_907 {
    p15_4
  }
  Net: Net_908 {
    p15_5
  }
  Net: Net_6 {
  }
  Net: Net_7 {
  }
  Net: Net_9 {
  }
  Net: Net_11 {
  }
  Net: Net_12 {
  }
  Net: Net_14 {
  }
  Net: Net_16 {
  }
  Net: Net_17 {
  }
  Net: Net_19 {
  }
  Net: Net_21 {
  }
  Net: Net_22 {
  }
  Net: Net_24 {
  }
  Net: Net_26 {
  }
  Net: Net_27 {
  }
  Net: Net_29 {
  }
  Net: Net_31 {
  }
  Net: Net_32 {
  }
  Net: Net_34 {
  }
  Net: Net_36 {
  }
  Net: Net_37 {
  }
  Net: Net_39 {
  }
  Net: Net_41 {
  }
  Net: Net_42 {
  }
  Net: Net_44 {
  }
  Net: Net_46 {
  }
  Net: Net_47 {
  }
  Net: Net_49 {
  }
  Net: Net_51 {
  }
  Net: Net_52 {
  }
  Net: Net_54 {
  }
  Net: Net_56 {
  }
  Net: Net_57 {
  }
  Net: Net_59 {
  }
  Net: Net_61 {
  }
  Net: Net_62 {
  }
  Net: Net_64 {
  }
  Net: Net_66 {
  }
  Net: Net_67 {
  }
  Net: Net_69 {
  }
  Net: Net_71 {
  }
  Net: Net_72 {
  }
  Net: Net_74 {
  }
  Net: Net_76 {
  }
  Net: Net_77 {
  }
  Net: Net_79 {
  }
  Net: Net_81 {
  }
  Net: Net_82 {
  }
  Net: Net_83 {
  }
  Net: Net_84 {
  }
  Net: Net_85 {
  }
  Net: Net_86 {
  }
  Net: Net_87 {
  }
  Net: Net_88 {
  }
  Net: Net_89 {
  }
  Net: Net_90 {
  }
  Net: Net_91 {
  }
  Net: Net_92 {
  }
  Net: Net_93 {
  }
  Net: Net_94 {
  }
  Net: Net_95 {
  }
  Net: Net_96 {
  }
  Net: Net_97 {
  }
  Net: Net_420 {
    dsm_0_vplus
    agl2_x_dsm_0_vplus
    agl2
    agl2_x_p2_2
    p2_2
  }
  Net: \APPS_ADC:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \APPS_ADC:SAR:Net_215\ {
  }
  Net: \APPS_ADC:SAR:Net_248\ {
    sar_1_vref
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: \BRAKE_ADC:Net_573\ {
  }
  Net: \BRAKE_ADC:Net_41\ {
  }
  Net: \BRAKE_ADC:Net_109\ {
  }
  Net: \BRAKE_ADC:Net_677\ {
  }
  Net: \TPS_ADC:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \TPS_ADC:SAR:Net_215\ {
  }
  Net: AmuxNet::\APPS_ADC:AMuxHw_2\ {
    sar_0_vplus
    amuxbusl_x_sar_0_vplus
    amuxbusl
    amuxbusl_x_p2_1
    amuxbusl_x_p2_0
    p2_1
    p2_0
  }
  Net: AmuxNet::\BRAKE_ADC:AMux\ {
    dsm_0_vminus
    dsm_0_vminus_x_dsm_0_vminus_vssa
    dsm_0_vminus_vssa
    common_vssa
  }
  Net: AmuxNet::\TPS_ADC:AMuxHw_2\ {
    sar_1_vplus
    agr1_x_sar_1_vplus
    agr1
    agl1_x_agr1
    agl1
    agl1_x_p15_5
    agr0_x_sar_1_vplus
    agr0
    agl0_x_agr0
    agl0
    agl0_x_p15_4
    p15_5
    p15_4
  }
}
Map of item to net {
  dsm_0_vplus                                      -> Net_420
  agl2_x_dsm_0_vplus                               -> Net_420
  agl2                                             -> Net_420
  agl2_x_p2_2                                      -> Net_420
  p2_2                                             -> Net_420
  sar_0_vrefhi                                     -> \APPS_ADC:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \APPS_ADC:SAR:Net_126\
  sar_0_vminus                                     -> \APPS_ADC:SAR:Net_126\
  sar_1_vref                                       -> \APPS_ADC:SAR:Net_248\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \APPS_ADC:SAR:Net_248\
  sar_1_vref_vdda_vdda_2                           -> \APPS_ADC:SAR:Net_248\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \APPS_ADC:SAR:Net_248\
  common_sar_vref_vdda/2                           -> \APPS_ADC:SAR:Net_248\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \APPS_ADC:SAR:Net_248\
  sar_0_vref_vdda_vdda_2                           -> \APPS_ADC:SAR:Net_248\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \APPS_ADC:SAR:Net_248\
  sar_0_vref                                       -> \APPS_ADC:SAR:Net_248\
  sar_1_vrefhi                                     -> \TPS_ADC:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \TPS_ADC:SAR:Net_126\
  sar_1_vminus                                     -> \TPS_ADC:SAR:Net_126\
  sar_0_vplus                                      -> \APPS_ADC:Net_2803\
  p2_0                                             -> Net_103
  p2_1                                             -> Net_104
  dsm_0_vminus                                     -> \BRAKE_ADC:Net_520\
  common_vssa                                      -> \BRAKE_ADC:Net_244\
  sar_1_vplus                                      -> \TPS_ADC:Net_2803\
  p15_4                                            -> Net_907
  p15_5                                            -> Net_908
  amuxbusl_x_sar_0_vplus                           -> AmuxNet::\APPS_ADC:AMuxHw_2\
  amuxbusl                                         -> AmuxNet::\APPS_ADC:AMuxHw_2\
  amuxbusl_x_p2_1                                  -> AmuxNet::\APPS_ADC:AMuxHw_2\
  amuxbusl_x_p2_0                                  -> AmuxNet::\APPS_ADC:AMuxHw_2\
  dsm_0_vminus_x_dsm_0_vminus_vssa                 -> AmuxNet::\BRAKE_ADC:AMux\
  dsm_0_vminus_vssa                                -> AmuxNet::\BRAKE_ADC:AMux\
  agr1_x_sar_1_vplus                               -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agr1                                             -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl1_x_agr1                                      -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl1                                             -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl1_x_p15_5                                     -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agr0_x_sar_1_vplus                               -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agr0                                             -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl0_x_agr0                                      -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl0                                             -> AmuxNet::\TPS_ADC:AMuxHw_2\
  agl0_x_p15_4                                     -> AmuxNet::\TPS_ADC:AMuxHw_2\
}
Mux Info {
  Mux: \APPS_ADC:AMuxHw_2\ {
     Mouth: \APPS_ADC:Net_2803\
     Guts:  AmuxNet::\APPS_ADC:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_103
      Outer: amuxbusl_x_p2_0
      Inner: __open__
      Path {
        p2_0
        amuxbusl_x_p2_0
        amuxbusl
        amuxbusl_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_104
      Outer: amuxbusl_x_p2_1
      Inner: __open__
      Path {
        p2_1
        amuxbusl_x_p2_1
        amuxbusl
        amuxbusl_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_106
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 3 {
      Net:   Net_107
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_109
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_111
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_112
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_114
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_116
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_117
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_119
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_121
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_122
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_124
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_126
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_127
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_129
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_131
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_132
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_134
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_136
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_137
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_139
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_141
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_142
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_144
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_146
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_147
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_149
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_151
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_152
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_154
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_156
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_157
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_159
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_161
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_162
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_164
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_166
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_167
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_169
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_171
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_172
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_174
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_176
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_177
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_179
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_181
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_182
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_183
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_184
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_185
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_186
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_187
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_188
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_189
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_190
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_191
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_192
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_193
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_194
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_195
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_196
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_197
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
  Mux: \BRAKE_ADC:AMux\ {
     Mouth: \BRAKE_ADC:Net_520\
     Guts:  AmuxNet::\BRAKE_ADC:AMux\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: False
    Arm: 0 {
      Net:   \BRAKE_ADC:Net_244\
      Outer: dsm_0_vminus_x_dsm_0_vminus_vssa
      Inner: __open__
      Path {
        common_vssa
        dsm_0_vminus_vssa
        dsm_0_vminus_x_dsm_0_vminus_vssa
        dsm_0_vminus
      }
    }
    Arm: 1 {
      Net:   \BRAKE_ADC:Net_690\
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
  Mux: \TPS_ADC:AMuxHw_2\ {
     Mouth: \TPS_ADC:Net_2803\
     Guts:  AmuxNet::\TPS_ADC:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_907
      Outer: agl0_x_p15_4
      Inner: agr0_x_sar_1_vplus
      Path {
        p15_4
        agl0_x_p15_4
        agl0
        agl0_x_agr0
        agr0
        agr0_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_908
      Outer: agl1_x_p15_5
      Inner: agr1_x_sar_1_vplus
      Path {
        p15_5
        agl1_x_p15_5
        agl1
        agl1_x_agr1
        agr1
        agr1_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_6
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 3 {
      Net:   Net_7
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_9
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_11
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_12
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_14
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_16
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_17
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_19
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_21
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_22
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_24
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_26
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_27
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_29
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_31
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_32
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_34
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_36
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_37
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_39
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_41
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_42
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_44
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_46
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_47
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_49
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_51
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_52
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_54
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_56
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_57
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_59
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_61
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_62
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_64
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_66
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_67
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_69
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_71
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_72
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_74
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_76
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_77
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_79
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_81
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_82
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_83
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_84
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_85
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_86
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_87
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_88
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_89
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_90
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_91
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_92
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_93
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_94
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_95
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_96
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_97
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.361ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 7.0 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   48 :    0 :   48 : 100.00%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            8.10
                   Pterms :            4.83
               Macrocells :            3.77
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.005ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.141ms
</CYPRESSTAG>
<CYPRESSTAG name="Simulated Annealing">
Annealing: Elapsed time ==> 0s.003ms
<CYPRESSTAG name="Simulated Annealing Results">
The seed used for moves was 114161200.
Inital cost was 881, final cost is 881 (0.00% improvement).</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         24 :      10.17 :       7.54
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=3, #inputs=8, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_334, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_334 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,2)][LB=1] #macrocells=2, #inputs=8, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_2 => \UART:BUART:tx_state_1\ ,
        cs_addr_1 => \UART:BUART:tx_state_0\ ,
        cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=4, #inputs=11, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_0 => \UART:BUART:counter_load_not\ ,
        ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

synccell: Name =\APPS_ADC:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \APPS_ADC:nrq\ ,
        out => \APPS_ADC:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_339 * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:rx_address_detected\
            + !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              !\UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\ * 
              !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_5\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_4\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_5\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_4\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_5\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_4\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_339 * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:rx_address_detected\
            + !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\ * 
              !\UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\ * 
              !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=4, #inputs=10, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_339 * !\UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_address_detected\ * 
              \UART:BUART:rx_last\
            + !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_3\ * !\UART:BUART:rx_address_detected\
            + !\UART:BUART:rx_state_0\ * \UART:BUART:rx_bitclk_enable\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_5\ * !\UART:BUART:rx_address_detected\
            + \UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_count_6\ * 
              !\UART:BUART:rx_count_4\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_address_detected\, Mode=(T-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_address_detected\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART:BUART:rx_state_0\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_last\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_339
        );
        Output = \UART:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\UART:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART:Net_9\ ,
        load => \UART:BUART:rx_counter_load\ ,
        count_6 => \UART:BUART:rx_count_6\ ,
        count_5 => \UART:BUART:rx_count_5\ ,
        count_4 => \UART:BUART:rx_count_4\ ,
        count_3 => \UART:BUART:rx_count_3\ ,
        count_2 => \UART:BUART:rx_count_2\ ,
        count_1 => \UART:BUART:rx_count_1\ ,
        count_0 => \UART:BUART:rx_count_0\ ,
        tc => \UART:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=4, #inputs=9, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !Net_339 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\
            + Net_339 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_1\ * \UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_339 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_0\
            + Net_339 * !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_0\
        );
        Output = \UART:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_339 * \UART:BUART:pollcount_0\
            + \UART:BUART:pollcount_1\
        );
        Output = \UART:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_state_0\ * !\UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\ * !\UART:BUART:rx_address_detected\
        );
        Output = \UART:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_fifonotempty\ * \UART:BUART:rx_state_stop1_reg\
        );
        Output = \UART:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_2 => \UART:BUART:rx_address_detected\ ,
        cs_addr_1 => \UART:BUART:rx_state_0\ ,
        cs_addr_0 => \UART:BUART:rx_bitclk_enable\ ,
        route_si => \UART:BUART:rx_postpoll\ ,
        f0_load => \UART:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART:Net_9\ ,
        status_5 => \UART:BUART:rx_status_5\ ,
        status_4 => \UART:BUART:rx_status_4\ ,
        status_3 => \UART:BUART:rx_status_3\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=4, #inputs=10, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:rx_count_0\
        );
        Output = \UART:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\APPS_ADC:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \APPS_ADC:clock\ ,
        control_7 => \APPS_ADC:bSAR_SEQ:control_7\ ,
        control_6 => \APPS_ADC:bSAR_SEQ:control_6\ ,
        control_5 => \APPS_ADC:bSAR_SEQ:control_5\ ,
        control_4 => \APPS_ADC:bSAR_SEQ:control_4\ ,
        control_3 => \APPS_ADC:bSAR_SEQ:control_3\ ,
        control_2 => \APPS_ADC:bSAR_SEQ:sw_soc\ ,
        control_1 => \APPS_ADC:bSAR_SEQ:load_period\ ,
        control_0 => \APPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:soc_out\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\APPS_ADC:soc_out\ * \APPS_ADC:Net_3830\ * 
              !\APPS_ADC:bSAR_SEQ:load_period\ * \APPS_ADC:bSAR_SEQ:state_1\ * 
              !\APPS_ADC:bSAR_SEQ:cnt_tc\
            + !\APPS_ADC:soc_out\ * !\APPS_ADC:bSAR_SEQ:load_period\ * 
              \APPS_ADC:bSAR_SEQ:sw_soc\ * !\APPS_ADC:bSAR_SEQ:state_1\
        );
        Output = \APPS_ADC:soc_out\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:bSAR_SEQ:state_1\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\APPS_ADC:soc_out\ * !\APPS_ADC:Net_3830\ * 
              !\APPS_ADC:bSAR_SEQ:load_period\ * \APPS_ADC:bSAR_SEQ:state_1\
            + \APPS_ADC:soc_out\ * !\APPS_ADC:bSAR_SEQ:load_period\ * 
              !\APPS_ADC:bSAR_SEQ:state_1\
        );
        Output = \APPS_ADC:bSAR_SEQ:state_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \APPS_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Net_102, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\APPS_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_102 (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=2, #inputs=5, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_102
            + \APPS_ADC:Net_3935\
        );
        Output = \APPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_101 * !\APPS_ADC:bSAR_SEQ:load_period\
        );
        Output = \APPS_ADC:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

count7cell: Name =\APPS_ADC:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \APPS_ADC:clock\ ,
        load => \APPS_ADC:bSAR_SEQ:load_period\ ,
        enable => \APPS_ADC:bSAR_SEQ:cnt_enable\ ,
        count_6 => \APPS_ADC:bSAR_SEQ:count_6\ ,
        count_5 => \APPS_ADC:ch_addr_5\ ,
        count_4 => \APPS_ADC:ch_addr_4\ ,
        count_3 => \APPS_ADC:ch_addr_3\ ,
        count_2 => \APPS_ADC:ch_addr_2\ ,
        count_1 => \APPS_ADC:ch_addr_1\ ,
        count_0 => \APPS_ADC:ch_addr_0\ ,
        tc => \APPS_ADC:bSAR_SEQ:cnt_tc\ ,
        clk_en => \APPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000001"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_1\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * !\APPS_ADC:ch_addr_5\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * !\APPS_ADC:ch_addr_4\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * !\APPS_ADC:ch_addr_3\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * !\APPS_ADC:ch_addr_2\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * \APPS_ADC:ch_addr_1\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * !\APPS_ADC:ch_addr_1\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\ * \APPS_ADC:ch_addr_0\
            + \APPS_ADC:AMuxHw_2_Decoder_old_id_0\ * !\APPS_ADC:ch_addr_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

statuscell: Name =\APPS_ADC:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \APPS_ADC:clock\ ,
        status_0 => Net_102 ,
        clk_en => \APPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\APPS_ADC:bSAR_SEQ:enable\)

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=4, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:soc_out\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\TPS_ADC:soc_out\ * \TPS_ADC:Net_3830\ * 
              !\TPS_ADC:bSAR_SEQ:load_period\ * \TPS_ADC:bSAR_SEQ:state_1\ * 
              !\TPS_ADC:bSAR_SEQ:cnt_tc\
            + !\TPS_ADC:soc_out\ * !\TPS_ADC:bSAR_SEQ:load_period\ * 
              \TPS_ADC:bSAR_SEQ:sw_soc\ * !\TPS_ADC:bSAR_SEQ:state_1\
        );
        Output = \TPS_ADC:soc_out\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:bSAR_SEQ:state_1\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 2 pterms
        (
              !\TPS_ADC:soc_out\ * !\TPS_ADC:Net_3830\ * 
              !\TPS_ADC:bSAR_SEQ:load_period\ * \TPS_ADC:bSAR_SEQ:state_1\
            + \TPS_ADC:soc_out\ * !\TPS_ADC:bSAR_SEQ:load_period\ * 
              !\TPS_ADC:bSAR_SEQ:state_1\
        );
        Output = \TPS_ADC:bSAR_SEQ:state_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \TPS_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Net_4, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\TPS_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_4 (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=8, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_4
            + \TPS_ADC:Net_3935\
        );
        Output = \TPS_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_3 * !\TPS_ADC:bSAR_SEQ:load_period\
        );
        Output = \TPS_ADC:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_load_fifo\ * \UART:BUART:rx_fifofull\
        );
        Output = \UART:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\TPS_ADC:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \TPS_ADC:clock\ ,
        control_7 => \TPS_ADC:bSAR_SEQ:control_7\ ,
        control_6 => \TPS_ADC:bSAR_SEQ:control_6\ ,
        control_5 => \TPS_ADC:bSAR_SEQ:control_5\ ,
        control_4 => \TPS_ADC:bSAR_SEQ:control_4\ ,
        control_3 => \TPS_ADC:bSAR_SEQ:control_3\ ,
        control_2 => \TPS_ADC:bSAR_SEQ:sw_soc\ ,
        control_1 => \TPS_ADC:bSAR_SEQ:load_period\ ,
        control_0 => \TPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\TPS_ADC:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \TPS_ADC:clock\ ,
        load => \TPS_ADC:bSAR_SEQ:load_period\ ,
        enable => \TPS_ADC:bSAR_SEQ:cnt_enable\ ,
        count_6 => \TPS_ADC:bSAR_SEQ:count_6\ ,
        count_5 => \TPS_ADC:ch_addr_5\ ,
        count_4 => \TPS_ADC:ch_addr_4\ ,
        count_3 => \TPS_ADC:ch_addr_3\ ,
        count_2 => \TPS_ADC:ch_addr_2\ ,
        count_1 => \TPS_ADC:ch_addr_1\ ,
        count_0 => \TPS_ADC:ch_addr_0\ ,
        tc => \TPS_ADC:bSAR_SEQ:cnt_tc\ ,
        clk_en => \TPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000001"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_1\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_5\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * !\TPS_ADC:ch_addr_5\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * !\TPS_ADC:ch_addr_4\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * !\TPS_ADC:ch_addr_3\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * !\TPS_ADC:ch_addr_2\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * \TPS_ADC:ch_addr_1\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * !\TPS_ADC:ch_addr_1\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\ * \TPS_ADC:ch_addr_0\
            + \TPS_ADC:AMuxHw_2_Decoder_old_id_0\ * !\TPS_ADC:ch_addr_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

statusicell: Name =\UART:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART:Net_9\ ,
        status_3 => \UART:BUART:tx_fifo_notfull\ ,
        status_2 => \UART:BUART:tx_status_2\ ,
        status_1 => \UART:BUART:tx_fifo_empty\ ,
        status_0 => \UART:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_3\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_2\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:ch_addr_4\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * \TPS_ADC:ch_addr_5\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * \TPS_ADC:ch_addr_4\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * \TPS_ADC:ch_addr_3\
            + !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * \TPS_ADC:ch_addr_2\
            + \TPS_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_5\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_3\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_2\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:ch_addr_4\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * \APPS_ADC:ch_addr_5\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * \APPS_ADC:ch_addr_4\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * \APPS_ADC:ch_addr_3\
            + !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * \APPS_ADC:ch_addr_2\
            + \APPS_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =\TPS_ADC:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \TPS_ADC:nrq\ ,
        out => \TPS_ADC:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\TPS_ADC:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \TPS_ADC:clock\ ,
        status_0 => Net_4 ,
        clk_en => \TPS_ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\TPS_ADC:bSAR_SEQ:enable\)

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\TPS_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\TPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \TPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \TPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\TPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \TPS_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\APPS_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\APPS_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \APPS_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\APPS_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \APPS_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \APPS_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }
}

Intr hod @ [IntrHod=(0)]: 
  Intr@ [IntrHod=(0)][IntrId=(0)] 
    interrupt: Name =\APPS_ADC:IRQ\
        PORT MAP (
            interrupt => Net_102 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrHod=(0)][IntrId=(1)] 
    interrupt: Name =\TPS_ADC:IRQ\
        PORT MAP (
            interrupt => Net_4 );
        Properties:
        {
            int_type = "10"
        }
  Intr@ [IntrHod=(0)][IntrId=(29)] 
    interrupt: Name =\BRAKE_ADC:IRQ\
        PORT MAP (
            interrupt => Net_429 );
        Properties:
        {
            int_type = "10"
        }
Drq hod @ [DrqHod=(0)]: 
  Dma@ [DrqHod=(0)][DrqId=(0)] 
    drqcell: Name =\APPS_ADC:FinalBuf\
        PORT MAP (
            dmareq => \APPS_ADC:Net_3698\ ,
            termin => zero ,
            termout => \APPS_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqHod=(0)][DrqId=(1)] 
    drqcell: Name =\APPS_ADC:TempBuf\
        PORT MAP (
            dmareq => \APPS_ADC:Net_3830\ ,
            termin => zero ,
            termout => \APPS_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqHod=(0)][DrqId=(2)] 
    drqcell: Name =\TPS_ADC:FinalBuf\
        PORT MAP (
            dmareq => \TPS_ADC:Net_3698\ ,
            termin => zero ,
            termout => \TPS_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqHod=(0)][DrqId=(3)] 
    drqcell: Name =\TPS_ADC:TempBuf\
        PORT MAP (
            dmareq => \TPS_ADC:Net_3830\ ,
            termin => zero ,
            termout => \TPS_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 is empty
Port 1 contains the following IO cells:
[IoId=6]: 
Pin : Name = SERVO_OUT(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SERVO_OUT(0)__PA ,
        input => Net_209 ,
        pad => SERVO_OUT(0)_PAD );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=0]: 
Pin : Name = APPS_0(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => APPS_0(0)__PA ,
        analog_term => Net_103 ,
        pad => APPS_0(0)_PAD ,
        input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = APPS_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => APPS_1(0)__PA ,
        analog_term => Net_104 ,
        pad => APPS_1(0)_PAD ,
        input => \APPS_ADC:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = BRAKE(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => BRAKE(0)__PA ,
        analog_term => Net_420 ,
        pad => BRAKE(0)_PAD );
    Properties:
    {
    }

Port 3 is empty
Port 12 contains the following IO cells:
[IoId=6]: 
Pin : Name = Rx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Rx_1(0)__PA ,
        fb => Net_339 ,
        pad => Rx_1(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Tx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Tx_1(0)__PA ,
        input => Net_334 ,
        pad => Tx_1(0)_PAD );
    Properties:
    {
    }

Port 15 contains the following IO cells:
[IoId=4]: 
Pin : Name = TPS_0(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => TPS_0(0)__PA ,
        analog_term => Net_907 ,
        pad => TPS_0(0)_PAD ,
        input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = TPS_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_DOWN
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => TPS_1(0)__PA ,
        analog_term => Net_908 ,
        pad => TPS_1(0)_PAD ,
        input => \TPS_ADC:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

CAN Fixed Block group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ [FFB(Clock,0)]: 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \BRAKE_ADC:Net_93\ ,
            dclk_0 => \BRAKE_ADC:Net_93_local\ ,
            dclk_glb_1 => \TPS_ADC:clock\ ,
            dclk_1 => \TPS_ADC:clock_local\ ,
            dclk_glb_2 => \APPS_ADC:clock\ ,
            dclk_2 => \APPS_ADC:clock_local\ ,
            dclk_glb_3 => Net_1822 ,
            dclk_3 => Net_1822_local ,
            dclk_glb_4 => \UART:Net_9\ ,
            dclk_4 => \UART:Net_9_local\ ,
            aclk_glb_0 => \BRAKE_ADC:Net_488\ ,
            aclk_0 => \BRAKE_ADC:Net_488_local\ ,
            clk_a_dig_glb_0 => \BRAKE_ADC:Net_488_adig\ ,
            clk_a_dig_0 => \BRAKE_ADC:Net_488_adig_local\ ,
            dclk_glb_5 => Net_284 ,
            dclk_5 => Net_284_local );
        Properties:
        {
        }
Comparator Fixed Block group 0: empty
DFB Fixed Block group 0: empty
DSM Fixed Block group 0: 
    DS Modulator @ [FFB(DSM,0)]: 
    dsmodcell: Name =\BRAKE_ADC:DSM\
        PORT MAP (
            aclock => \BRAKE_ADC:Net_488\ ,
            vplus => Net_420 ,
            vminus => \BRAKE_ADC:Net_520\ ,
            reset_dec => \BRAKE_ADC:mod_reset\ ,
            extclk_cp_udb => \BRAKE_ADC:Net_93_local\ ,
            ext_pin_1 => \BRAKE_ADC:Net_573\ ,
            ext_pin_2 => \BRAKE_ADC:Net_41\ ,
            ext_vssa => \BRAKE_ADC:Net_109\ ,
            qtz_ref => \BRAKE_ADC:Net_677\ ,
            dec_clock => \BRAKE_ADC:aclock\ ,
            mod_dat_3 => \BRAKE_ADC:mod_dat_3\ ,
            mod_dat_2 => \BRAKE_ADC:mod_dat_2\ ,
            mod_dat_1 => \BRAKE_ADC:mod_dat_1\ ,
            mod_dat_0 => \BRAKE_ADC:mod_dat_0\ ,
            dout_udb_7 => \BRAKE_ADC:Net_245_7\ ,
            dout_udb_6 => \BRAKE_ADC:Net_245_6\ ,
            dout_udb_5 => \BRAKE_ADC:Net_245_5\ ,
            dout_udb_4 => \BRAKE_ADC:Net_245_4\ ,
            dout_udb_3 => \BRAKE_ADC:Net_245_3\ ,
            dout_udb_2 => \BRAKE_ADC:Net_245_2\ ,
            dout_udb_1 => \BRAKE_ADC:Net_245_1\ ,
            dout_udb_0 => \BRAKE_ADC:Net_245_0\ );
        Properties:
        {
            cy_registers = ""
            resolution = 14
        }
Decimator Fixed Block group 0: 
    Decimator Block @ [FFB(Decimator,0)]: 
    decimatorcell: Name =\BRAKE_ADC:DEC\
        PORT MAP (
            aclock => \BRAKE_ADC:aclock\ ,
            mod_dat_3 => \BRAKE_ADC:mod_dat_3\ ,
            mod_dat_2 => \BRAKE_ADC:mod_dat_2\ ,
            mod_dat_1 => \BRAKE_ADC:mod_dat_1\ ,
            mod_dat_0 => \BRAKE_ADC:mod_dat_0\ ,
            ext_start => __ONE__ ,
            modrst => \BRAKE_ADC:mod_reset\ ,
            interrupt => Net_429 );
        Properties:
        {
            cy_registers = ""
        }
EMIF Fixed Block group 0: empty
I2C Fixed Block group 0: empty
LCD Fixed Block group 0: empty
LVD group 0: empty
PM group 0: empty
SC Fixed Block group 0: empty
SPC group 0: empty
Timer Fixed Block group 0: 
    Timer Block @ [FFB(Timer,0)]: 
    timercell: Name =\SERVO_PWM:PWMHW\
        PORT MAP (
            clock => Net_1822 ,
            kill => Net_205 ,
            enable => __ONE__ ,
            tc => \SERVO_PWM:Net_63\ ,
            cmp => Net_209 ,
            irq => \SERVO_PWM:Net_54\ );
        Properties:
        {
            cy_registers = ""
        }
    Timer Block @ [FFB(Timer,1)]: 
    timercell: Name =\Timer:TimerHW\
        PORT MAP (
            clock => Net_284 ,
            enable => __ONE__ ,
            tc => Net_205 ,
            cmp => \Timer:Net_261\ ,
            irq => \Timer:Net_57\ );
        Properties:
        {
            cy_registers = ""
        }
USB Fixed Block group 0: empty
VIDAC Fixed Block group 0: empty
Opamp Fixed Block group 0: empty
CapSense Buffer group 0: empty
Vref group 0: 
    Vref Block @ [FFB(Vref,6)]: 
    vrefcell: Name =\BRAKE_ADC:vRef_2\
        PORT MAP (
            vout => \BRAKE_ADC:Net_244\ );
        Properties:
        {
            autoenable = 1
            guid = "15B3DB15-B7B3-4d62-A2DF-25EA392A7161"
            ignoresleep = 0
            name = "Vssa (GND)"
        }
    Vref Block @ [FFB(Vref,13)]: 
    vrefcell: Name =\APPS_ADC:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \APPS_ADC:SAR:Net_248\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF Fixed Block group 0: empty
SAR Fixed Block group 0: 
    SAR Block @ [FFB(SAR,0)]: 
    sarcell: Name =\APPS_ADC:SAR:ADC_SAR\
        PORT MAP (
            vplus => \APPS_ADC:Net_2803\ ,
            vminus => \APPS_ADC:SAR:Net_126\ ,
            ext_pin => \APPS_ADC:SAR:Net_215\ ,
            vrefhi_out => \APPS_ADC:SAR:Net_126\ ,
            vref => \APPS_ADC:SAR:Net_248\ ,
            clk_udb => \APPS_ADC:clock_local\ ,
            sof_udb => \APPS_ADC:soc_out\ ,
            irq => \APPS_ADC:SAR:Net_252\ ,
            next => Net_101 ,
            data_out_udb_11 => \APPS_ADC:SAR:Net_207_11\ ,
            data_out_udb_10 => \APPS_ADC:SAR:Net_207_10\ ,
            data_out_udb_9 => \APPS_ADC:SAR:Net_207_9\ ,
            data_out_udb_8 => \APPS_ADC:SAR:Net_207_8\ ,
            data_out_udb_7 => \APPS_ADC:SAR:Net_207_7\ ,
            data_out_udb_6 => \APPS_ADC:SAR:Net_207_6\ ,
            data_out_udb_5 => \APPS_ADC:SAR:Net_207_5\ ,
            data_out_udb_4 => \APPS_ADC:SAR:Net_207_4\ ,
            data_out_udb_3 => \APPS_ADC:SAR:Net_207_3\ ,
            data_out_udb_2 => \APPS_ADC:SAR:Net_207_2\ ,
            data_out_udb_1 => \APPS_ADC:SAR:Net_207_1\ ,
            data_out_udb_0 => \APPS_ADC:SAR:Net_207_0\ ,
            eof_udb => \APPS_ADC:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
    SAR Block @ [FFB(SAR,1)]: 
    sarcell: Name =\TPS_ADC:SAR:ADC_SAR\
        PORT MAP (
            vplus => \TPS_ADC:Net_2803\ ,
            vminus => \TPS_ADC:SAR:Net_126\ ,
            ext_pin => \TPS_ADC:SAR:Net_215\ ,
            vrefhi_out => \TPS_ADC:SAR:Net_126\ ,
            vref => \APPS_ADC:SAR:Net_248\ ,
            clk_udb => \TPS_ADC:clock_local\ ,
            sof_udb => \TPS_ADC:soc_out\ ,
            irq => \TPS_ADC:SAR:Net_252\ ,
            next => Net_3 ,
            data_out_udb_11 => \TPS_ADC:SAR:Net_207_11\ ,
            data_out_udb_10 => \TPS_ADC:SAR:Net_207_10\ ,
            data_out_udb_9 => \TPS_ADC:SAR:Net_207_9\ ,
            data_out_udb_8 => \TPS_ADC:SAR:Net_207_8\ ,
            data_out_udb_7 => \TPS_ADC:SAR:Net_207_7\ ,
            data_out_udb_6 => \TPS_ADC:SAR:Net_207_6\ ,
            data_out_udb_5 => \TPS_ADC:SAR:Net_207_5\ ,
            data_out_udb_4 => \TPS_ADC:SAR:Net_207_4\ ,
            data_out_udb_3 => \TPS_ADC:SAR:Net_207_3\ ,
            data_out_udb_2 => \TPS_ADC:SAR:Net_207_2\ ,
            data_out_udb_1 => \TPS_ADC:SAR:Net_207_1\ ,
            data_out_udb_0 => \TPS_ADC:SAR:Net_207_0\ ,
            eof_udb => \TPS_ADC:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\APPS_ADC:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_197 ,
            muxin_62 => Net_196 ,
            muxin_61 => Net_195 ,
            muxin_60 => Net_194 ,
            muxin_59 => Net_193 ,
            muxin_58 => Net_192 ,
            muxin_57 => Net_191 ,
            muxin_56 => Net_190 ,
            muxin_55 => Net_189 ,
            muxin_54 => Net_188 ,
            muxin_53 => Net_187 ,
            muxin_52 => Net_186 ,
            muxin_51 => Net_185 ,
            muxin_50 => Net_184 ,
            muxin_49 => Net_183 ,
            muxin_48 => Net_182 ,
            muxin_47 => Net_181 ,
            muxin_46 => Net_179 ,
            muxin_45 => Net_177 ,
            muxin_44 => Net_176 ,
            muxin_43 => Net_174 ,
            muxin_42 => Net_172 ,
            muxin_41 => Net_171 ,
            muxin_40 => Net_169 ,
            muxin_39 => Net_167 ,
            muxin_38 => Net_166 ,
            muxin_37 => Net_164 ,
            muxin_36 => Net_162 ,
            muxin_35 => Net_161 ,
            muxin_34 => Net_159 ,
            muxin_33 => Net_157 ,
            muxin_32 => Net_156 ,
            muxin_31 => Net_154 ,
            muxin_30 => Net_152 ,
            muxin_29 => Net_151 ,
            muxin_28 => Net_149 ,
            muxin_27 => Net_147 ,
            muxin_26 => Net_146 ,
            muxin_25 => Net_144 ,
            muxin_24 => Net_142 ,
            muxin_23 => Net_141 ,
            muxin_22 => Net_139 ,
            muxin_21 => Net_137 ,
            muxin_20 => Net_136 ,
            muxin_19 => Net_134 ,
            muxin_18 => Net_132 ,
            muxin_17 => Net_131 ,
            muxin_16 => Net_129 ,
            muxin_15 => Net_127 ,
            muxin_14 => Net_126 ,
            muxin_13 => Net_124 ,
            muxin_12 => Net_122 ,
            muxin_11 => Net_121 ,
            muxin_10 => Net_119 ,
            muxin_9 => Net_117 ,
            muxin_8 => Net_116 ,
            muxin_7 => Net_114 ,
            muxin_6 => Net_112 ,
            muxin_5 => Net_111 ,
            muxin_4 => Net_109 ,
            muxin_3 => Net_107 ,
            muxin_2 => Net_106 ,
            muxin_1 => Net_104 ,
            muxin_0 => Net_103 ,
            hw_ctrl_en_63 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_3\ ,
            hw_ctrl_en_2 => \APPS_ADC:AMuxHw_2_Decoder_one_hot_2\ ,
            vout => \APPS_ADC:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =\BRAKE_ADC:AMux\
        PORT MAP (
            muxin_1 => \BRAKE_ADC:Net_690\ ,
            muxin_0 => \BRAKE_ADC:Net_244\ ,
            vout => \BRAKE_ADC:Net_520\ );
        Properties:
        {
            api_type = 0
            connect_mode = 1
            cy_registers = ""
            hw_control = 0
            init_mux_sel = "00"
            muxin_width = 2
            one_active = 0
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =\TPS_ADC:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_97 ,
            muxin_62 => Net_96 ,
            muxin_61 => Net_95 ,
            muxin_60 => Net_94 ,
            muxin_59 => Net_93 ,
            muxin_58 => Net_92 ,
            muxin_57 => Net_91 ,
            muxin_56 => Net_90 ,
            muxin_55 => Net_89 ,
            muxin_54 => Net_88 ,
            muxin_53 => Net_87 ,
            muxin_52 => Net_86 ,
            muxin_51 => Net_85 ,
            muxin_50 => Net_84 ,
            muxin_49 => Net_83 ,
            muxin_48 => Net_82 ,
            muxin_47 => Net_81 ,
            muxin_46 => Net_79 ,
            muxin_45 => Net_77 ,
            muxin_44 => Net_76 ,
            muxin_43 => Net_74 ,
            muxin_42 => Net_72 ,
            muxin_41 => Net_71 ,
            muxin_40 => Net_69 ,
            muxin_39 => Net_67 ,
            muxin_38 => Net_66 ,
            muxin_37 => Net_64 ,
            muxin_36 => Net_62 ,
            muxin_35 => Net_61 ,
            muxin_34 => Net_59 ,
            muxin_33 => Net_57 ,
            muxin_32 => Net_56 ,
            muxin_31 => Net_54 ,
            muxin_30 => Net_52 ,
            muxin_29 => Net_51 ,
            muxin_28 => Net_49 ,
            muxin_27 => Net_47 ,
            muxin_26 => Net_46 ,
            muxin_25 => Net_44 ,
            muxin_24 => Net_42 ,
            muxin_23 => Net_41 ,
            muxin_22 => Net_39 ,
            muxin_21 => Net_37 ,
            muxin_20 => Net_36 ,
            muxin_19 => Net_34 ,
            muxin_18 => Net_32 ,
            muxin_17 => Net_31 ,
            muxin_16 => Net_29 ,
            muxin_15 => Net_27 ,
            muxin_14 => Net_26 ,
            muxin_13 => Net_24 ,
            muxin_12 => Net_22 ,
            muxin_11 => Net_21 ,
            muxin_10 => Net_19 ,
            muxin_9 => Net_17 ,
            muxin_8 => Net_16 ,
            muxin_7 => Net_14 ,
            muxin_6 => Net_12 ,
            muxin_5 => Net_11 ,
            muxin_4 => Net_9 ,
            muxin_3 => Net_7 ,
            muxin_2 => Net_6 ,
            muxin_1 => Net_908 ,
            muxin_0 => Net_907 ,
            hw_ctrl_en_63 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_3\ ,
            hw_ctrl_en_2 => \TPS_ADC:AMuxHw_2_Decoder_one_hot_2\ ,
            vout => \TPS_ADC:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |              | 
Port | Pin | Fixed |      Type |       Drive Mode |         Name | Connections
-----+-----+-------+-----------+------------------+--------------+-----------------------------------------------------------
   1 |   6 |     * |      NONE |         CMOS_OUT | SERVO_OUT(0) | In(Net_209)
-----+-----+-------+-----------+------------------+--------------+-----------------------------------------------------------
   2 |   0 |     * |      NONE |    RES_PULL_DOWN |    APPS_0(0) | In(\APPS_ADC:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_103)
     |   1 |     * |      NONE |    RES_PULL_DOWN |    APPS_1(0) | In(\APPS_ADC:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_104)
     |   2 |     * |      NONE |      HI_Z_ANALOG |     BRAKE(0) | Analog(Net_420)
-----+-----+-------+-----------+------------------+--------------+-----------------------------------------------------------
  12 |   6 |     * |      NONE |     HI_Z_DIGITAL |      Rx_1(0) | FB(Net_339)
     |   7 |     * |      NONE |         CMOS_OUT |      Tx_1(0) | In(Net_334)
-----+-----+-------+-----------+------------------+--------------+-----------------------------------------------------------
  15 |   4 |     * |      NONE |    RES_PULL_DOWN |     TPS_0(0) | In(\TPS_ADC:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_907)
     |   5 |     * |      NONE |    RES_PULL_DOWN |     TPS_1(0) | In(\TPS_ADC:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_908)
-----------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.008ms
Digital Placement phase: Elapsed time ==> 7s.494ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 5s.484ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream and API generation">
Bitstream and API generation phase: Elapsed time ==> 0s.270ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream verification">
Bitstream verification phase: Elapsed time ==> 0s.063ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in E-Throttle_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.918ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.365ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 30s.239ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 30s.293ms
API generation phase: Elapsed time ==> 1s.751ms
Dependency generation phase: Elapsed time ==> 0s.017ms
Cleanup phase: Elapsed time ==> 0s.001ms
