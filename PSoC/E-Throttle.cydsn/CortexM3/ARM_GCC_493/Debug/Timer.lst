ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Timer_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	Timer_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	Timer_Enable, %function
  24              	Timer_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Timer.c"
   1:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Timer.c **** * File Name: Timer.c
   3:.\Generated_Source\PSoC5/Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/Timer.c **** *
   5:.\Generated_Source\PSoC5/Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/Timer.c **** *
  15:.\Generated_Source\PSoC5/Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/Timer.c **** *
  17:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Timer.c **** 
  24:.\Generated_Source\PSoC5/Timer.c **** #include "Timer.h"
  25:.\Generated_Source\PSoC5/Timer.c **** 
  26:.\Generated_Source\PSoC5/Timer.c **** uint8 Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/Timer.c **** 
  28:.\Generated_Source\PSoC5/Timer.c **** 
  29:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Init
  31:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 2


  32:.\Generated_Source\PSoC5/Timer.c **** *
  33:.\Generated_Source\PSoC5/Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/Timer.c **** *
  36:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/Timer.c **** *  void
  38:.\Generated_Source\PSoC5/Timer.c **** *
  39:.\Generated_Source\PSoC5/Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/Timer.c **** *  void
  41:.\Generated_Source\PSoC5/Timer.c **** *
  42:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/Timer.c **** void Timer_Init(void) 
  44:.\Generated_Source\PSoC5/Timer.c **** {
  45:.\Generated_Source\PSoC5/Timer.c ****     #if(!Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/Timer.c ****             uint8 Timer_interruptState;
  48:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/Timer.c **** 
  50:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/Timer.c **** 
  54:.\Generated_Source\PSoC5/Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL2 &= ((uint8)(~Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/Timer.c **** 
  59:.\Generated_Source\PSoC5/Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/Timer.c **** 
  63:.\Generated_Source\PSoC5/Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/Timer.c ****             Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/Timer.c **** 
  69:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/Timer.c **** 
  76:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/Timer.c **** 
  82:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/Timer.c **** 
  84:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL2 |= Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 3


  89:.\Generated_Source\PSoC5/Timer.c **** 
  90:.\Generated_Source\PSoC5/Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/Timer.c **** 
  95:.\Generated_Source\PSoC5/Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 &= ((uint8)(~Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/Timer.c **** 
  99:.\Generated_Source\PSoC5/Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/Timer.c ****                 Timer_CONTROL3 |= Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/Timer.c **** 
 103:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/Timer.c **** 
 105:.\Generated_Source\PSoC5/Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 &= ((uint8)(~Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 |= Timer_SYNC;
 108:.\Generated_Source\PSoC5/Timer.c **** 
 109:.\Generated_Source\PSoC5/Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 &= ((uint8)(~Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/Timer.c ****         Timer_RT1 |= Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/Timer.c **** 
 113:.\Generated_Source\PSoC5/Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL2 |= Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/Timer.c **** 
 117:.\Generated_Source\PSoC5/Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/Timer.c ****     Timer_WritePeriod(Timer_INIT_PERIOD);
 119:.\Generated_Source\PSoC5/Timer.c ****     Timer_WriteCounter(Timer_INIT_PERIOD);
 120:.\Generated_Source\PSoC5/Timer.c **** 
 121:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/Timer.c ****         Timer_CAPTURE_COUNT_CTRL |= Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/Timer.c ****         Timer_SetCaptureCount(Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/Timer.c **** 
 126:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/Timer.c ****             Timer_SetCaptureMode(Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/Timer.c **** 
 131:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/Timer.c ****             #if (!Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/Timer.c ****                 if (0u == (Timer_CONTROL & Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/Timer.c ****                 {
 135:.\Generated_Source\PSoC5/Timer.c ****                     Timer_SetTriggerMode(Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/Timer.c ****                 }
 137:.\Generated_Source\PSoC5/Timer.c ****             #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/Timer.c **** 
 140:.\Generated_Source\PSoC5/Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/Timer.c ****         Timer_interruptState = CyEnterCriticalSection();
 143:.\Generated_Source\PSoC5/Timer.c **** 
 144:.\Generated_Source\PSoC5/Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/Timer.c ****         Timer_STATUS_AUX_CTRL |= Timer_STATUS_ACTL_INT_EN_MASK;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 4


 146:.\Generated_Source\PSoC5/Timer.c **** 
 147:.\Generated_Source\PSoC5/Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/Timer.c ****         CyExitCriticalSection(Timer_interruptState);
 149:.\Generated_Source\PSoC5/Timer.c **** 
 150:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/Timer.c ****             Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/Timer.c **** 		
 154:.\Generated_Source\PSoC5/Timer.c **** 		
 155:.\Generated_Source\PSoC5/Timer.c ****         #if (Timer_InterruptOnCaptureCount && !Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/Timer.c ****             Timer_SetInterruptCount(Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/Timer.c **** 
 159:.\Generated_Source\PSoC5/Timer.c ****         Timer_ClearFIFO();
 160:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC5/Timer.c **** 
 162:.\Generated_Source\PSoC5/Timer.c ****     Timer_SetInterruptMode(Timer_INIT_INTERRUPT_MODE);
 163:.\Generated_Source\PSoC5/Timer.c **** }
 164:.\Generated_Source\PSoC5/Timer.c **** 
 165:.\Generated_Source\PSoC5/Timer.c **** 
 166:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Enable
 168:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/Timer.c **** *
 170:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/Timer.c **** *
 173:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/Timer.c **** *  void
 175:.\Generated_Source\PSoC5/Timer.c **** *
 176:.\Generated_Source\PSoC5/Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/Timer.c **** *  void
 178:.\Generated_Source\PSoC5/Timer.c **** *
 179:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/Timer.c **** void Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/Timer.c **** {
  27              		.loc 1 181 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 182:.\Generated_Source\PSoC5/Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_ENABLE |= Timer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_STBY_ENABLE |= Timer_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/Timer.c **** 
 188:.\Generated_Source\PSoC5/Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED || Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= Timer_CTRL_ENABLE;
  32              		.loc 1 190 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 5


  39              		.align	2
  40              	.L2:
  41 000c 78640040 		.word	1073767544
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	Timer_Enable, .-Timer_Enable
  45              		.section	.text.Timer_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	Timer_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	Timer_Stop, %function
  51              	Timer_Stop:
  52              	.LFB3:
 191:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/Timer.c **** }
 193:.\Generated_Source\PSoC5/Timer.c **** 
 194:.\Generated_Source\PSoC5/Timer.c **** 
 195:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Start
 197:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/Timer.c **** *
 199:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/Timer.c **** *
 204:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/Timer.c **** *  void
 206:.\Generated_Source\PSoC5/Timer.c **** *
 207:.\Generated_Source\PSoC5/Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/Timer.c **** *  void
 209:.\Generated_Source\PSoC5/Timer.c **** *
 210:.\Generated_Source\PSoC5/Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/Timer.c **** *  Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/Timer.c **** *
 214:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/Timer.c **** void Timer_Start(void) 
 216:.\Generated_Source\PSoC5/Timer.c **** {
 217:.\Generated_Source\PSoC5/Timer.c ****     if(Timer_initVar == 0u)
 218:.\Generated_Source\PSoC5/Timer.c ****     {
 219:.\Generated_Source\PSoC5/Timer.c ****         Timer_Init();
 220:.\Generated_Source\PSoC5/Timer.c **** 
 221:.\Generated_Source\PSoC5/Timer.c ****         Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:.\Generated_Source\PSoC5/Timer.c ****     }
 223:.\Generated_Source\PSoC5/Timer.c **** 
 224:.\Generated_Source\PSoC5/Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/Timer.c ****     Timer_Enable();
 226:.\Generated_Source\PSoC5/Timer.c **** }
 227:.\Generated_Source\PSoC5/Timer.c **** 
 228:.\Generated_Source\PSoC5/Timer.c **** 
 229:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_Stop
 231:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/Timer.c **** *
 233:.\Generated_Source\PSoC5/Timer.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 6


 234:.\Generated_Source\PSoC5/Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/Timer.c **** *
 237:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/Timer.c **** *  void
 239:.\Generated_Source\PSoC5/Timer.c **** *
 240:.\Generated_Source\PSoC5/Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/Timer.c **** *  void
 242:.\Generated_Source\PSoC5/Timer.c **** *
 243:.\Generated_Source\PSoC5/Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/Timer.c **** *
 246:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/Timer.c **** void Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/Timer.c **** {
  53              		.loc 1 248 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 249:.\Generated_Source\PSoC5/Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/Timer.c ****     #if(!Timer_UDB_CONTROL_REG_REMOVED || Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_ENABLE));
  58              		.loc 1 251 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 78640040 		.word	1073767544
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	Timer_Stop, .-Timer_Stop
  71              		.section	.text.Timer_SetInterruptMode,"ax",%progbits
  72              		.align	2
  73              		.global	Timer_SetInterruptMode
  74              		.thumb
  75              		.thumb_func
  76              		.type	Timer_SetInterruptMode, %function
  77              	Timer_SetInterruptMode:
  78              	.LFB4:
 252:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/Timer.c **** 
 254:.\Generated_Source\PSoC5/Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/Timer.c ****     #if (Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_ENABLE &= ((uint8)(~Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/Timer.c ****         Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/Timer.c **** }
 260:.\Generated_Source\PSoC5/Timer.c **** 
 261:.\Generated_Source\PSoC5/Timer.c **** 
 262:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 7


 265:.\Generated_Source\PSoC5/Timer.c **** *
 266:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/Timer.c **** *
 271:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/Timer.c **** *
 275:.\Generated_Source\PSoC5/Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/Timer.c **** *  void
 277:.\Generated_Source\PSoC5/Timer.c **** *
 278:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/Timer.c **** {
  79              		.loc 1 280 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 281:.\Generated_Source\PSoC5/Timer.c ****     Timer_STATUS_MASK = interruptMode;
  85              		.loc 1 281 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 89640040 		.word	1073767561
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
  96              		.section	.text.Timer_SoftwareCapture,"ax",%progbits
  97              		.align	2
  98              		.global	Timer_SoftwareCapture
  99              		.thumb
 100              		.thumb_func
 101              		.type	Timer_SoftwareCapture, %function
 102              	Timer_SoftwareCapture:
 103              	.LFB5:
 282:.\Generated_Source\PSoC5/Timer.c **** }
 283:.\Generated_Source\PSoC5/Timer.c **** 
 284:.\Generated_Source\PSoC5/Timer.c **** 
 285:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/Timer.c **** *
 289:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/Timer.c **** *
 292:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/Timer.c **** *  void
 294:.\Generated_Source\PSoC5/Timer.c **** *
 295:.\Generated_Source\PSoC5/Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/Timer.c **** *  void
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 8


 297:.\Generated_Source\PSoC5/Timer.c **** *
 298:.\Generated_Source\PSoC5/Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/Timer.c **** *
 301:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/Timer.c **** void Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/Timer.c **** {
 104              		.loc 1 303 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 304:.\Generated_Source\PSoC5/Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG16(Timer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/Timer.c ****     #else
 308:.\Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG8(Timer_COUNTER_LSB_PTR_8BIT);
 109              		.loc 1 308 0
 110 0000 014B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 0004 7047     		bx	lr
 113              	.L12:
 114 0006 00BF     		.align	2
 115              	.L11:
 116 0008 08640040 		.word	1073767432
 117              		.cfi_endproc
 118              	.LFE5:
 119              		.size	Timer_SoftwareCapture, .-Timer_SoftwareCapture
 120              		.section	.text.Timer_ReadStatusRegister,"ax",%progbits
 121              		.align	2
 122              		.global	Timer_ReadStatusRegister
 123              		.thumb
 124              		.thumb_func
 125              		.type	Timer_ReadStatusRegister, %function
 126              	Timer_ReadStatusRegister:
 127              	.LFB6:
 309:.\Generated_Source\PSoC5/Timer.c ****     #endif/* (Timer_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/Timer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/Timer.c **** }
 312:.\Generated_Source\PSoC5/Timer.c **** 
 313:.\Generated_Source\PSoC5/Timer.c **** 
 314:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/Timer.c **** *
 318:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/Timer.c **** *
 323:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/Timer.c **** *  void
 325:.\Generated_Source\PSoC5/Timer.c **** *
 326:.\Generated_Source\PSoC5/Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/Timer.c **** *
 329:.\Generated_Source\PSoC5/Timer.c **** * Side Effects:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 9


 330:.\Generated_Source\PSoC5/Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/Timer.c **** *
 332:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/Timer.c **** uint8   Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/Timer.c **** {
 128              		.loc 1 334 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 335:.\Generated_Source\PSoC5/Timer.c ****     return (Timer_STATUS);
 133              		.loc 1 335 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:.\Generated_Source\PSoC5/Timer.c **** }
 136              		.loc 1 336 0
 137 0004 7047     		bx	lr
 138              	.L15:
 139 0006 00BF     		.align	2
 140              	.L14:
 141 0008 69640040 		.word	1073767529
 142              		.cfi_endproc
 143              	.LFE6:
 144              		.size	Timer_ReadStatusRegister, .-Timer_ReadStatusRegister
 145              		.section	.text.Timer_ReadControlRegister,"ax",%progbits
 146              		.align	2
 147              		.global	Timer_ReadControlRegister
 148              		.thumb
 149              		.thumb_func
 150              		.type	Timer_ReadControlRegister, %function
 151              	Timer_ReadControlRegister:
 152              	.LFB7:
 337:.\Generated_Source\PSoC5/Timer.c **** 
 338:.\Generated_Source\PSoC5/Timer.c **** 
 339:.\Generated_Source\PSoC5/Timer.c **** #if (!Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/Timer.c **** 
 341:.\Generated_Source\PSoC5/Timer.c **** 
 342:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/Timer.c **** *
 346:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/Timer.c **** *
 349:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/Timer.c **** *  void
 351:.\Generated_Source\PSoC5/Timer.c **** *
 352:.\Generated_Source\PSoC5/Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/Timer.c **** *
 355:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/Timer.c **** uint8 Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/Timer.c **** {
 153              		.loc 1 357 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 10


 157              		@ link register save eliminated.
 358:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/Timer.c ****         return ((uint8)Timer_CONTROL);
 158              		.loc 1 359 0
 159 0000 014B     		ldr	r3, .L17
 160 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:.\Generated_Source\PSoC5/Timer.c ****     #else
 361:.\Generated_Source\PSoC5/Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/Timer.c **** }
 161              		.loc 1 363 0
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 00BF     		.align	2
 165              	.L17:
 166 0008 78640040 		.word	1073767544
 167              		.cfi_endproc
 168              	.LFE7:
 169              		.size	Timer_ReadControlRegister, .-Timer_ReadControlRegister
 170              		.section	.text.Timer_WriteControlRegister,"ax",%progbits
 171              		.align	2
 172              		.global	Timer_WriteControlRegister
 173              		.thumb
 174              		.thumb_func
 175              		.type	Timer_WriteControlRegister, %function
 176              	Timer_WriteControlRegister:
 177              	.LFB8:
 364:.\Generated_Source\PSoC5/Timer.c **** 
 365:.\Generated_Source\PSoC5/Timer.c **** 
 366:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/Timer.c **** *
 370:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/Timer.c **** *
 373:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 374:.\Generated_Source\PSoC5/Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/Timer.c **** *
 376:.\Generated_Source\PSoC5/Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/Timer.c **** *
 378:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/Timer.c **** void Timer_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/Timer.c **** {
 178              		.loc 1 380 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL1:
 381:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL = control;
 184              		.loc 1 382 0
 185 0000 014B     		ldr	r3, .L20
 186 0002 1870     		strb	r0, [r3]
 187 0004 7047     		bx	lr
 188              	.L21:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 11


 189 0006 00BF     		.align	2
 190              	.L20:
 191 0008 78640040 		.word	1073767544
 192              		.cfi_endproc
 193              	.LFE8:
 194              		.size	Timer_WriteControlRegister, .-Timer_WriteControlRegister
 195              		.section	.text.Timer_ReadPeriod,"ax",%progbits
 196              		.align	2
 197              		.global	Timer_ReadPeriod
 198              		.thumb
 199              		.thumb_func
 200              		.type	Timer_ReadPeriod, %function
 201              	Timer_ReadPeriod:
 202              	.LFB9:
 383:.\Generated_Source\PSoC5/Timer.c ****     #else
 384:.\Generated_Source\PSoC5/Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/Timer.c **** }
 387:.\Generated_Source\PSoC5/Timer.c **** 
 388:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/Timer.c **** 
 390:.\Generated_Source\PSoC5/Timer.c **** 
 391:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/Timer.c **** *
 395:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/Timer.c **** *
 398:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/Timer.c **** *  void
 400:.\Generated_Source\PSoC5/Timer.c **** *
 401:.\Generated_Source\PSoC5/Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/Timer.c **** *
 404:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/Timer.c **** uint16 Timer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/Timer.c **** {
 203              		.loc 1 406 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 407:.\Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/Timer.c ****        return ((uint16)CY_GET_REG16(Timer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/Timer.c ****    #else
 410:.\Generated_Source\PSoC5/Timer.c ****        return (CY_GET_REG16(Timer_PERIOD_LSB_PTR));
 208              		.loc 1 410 0
 209 0000 014B     		ldr	r3, .L23
 210 0002 1888     		ldrh	r0, [r3]
 411:.\Generated_Source\PSoC5/Timer.c ****    #endif /* (Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/Timer.c **** }
 211              		.loc 1 412 0
 212 0004 80B2     		uxth	r0, r0
 213 0006 7047     		bx	lr
 214              	.L24:
 215              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 12


 216              	.L23:
 217 0008 50680040 		.word	1073768528
 218              		.cfi_endproc
 219              	.LFE9:
 220              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 221              		.section	.text.Timer_WritePeriod,"ax",%progbits
 222              		.align	2
 223              		.global	Timer_WritePeriod
 224              		.thumb
 225              		.thumb_func
 226              		.type	Timer_WritePeriod, %function
 227              	Timer_WritePeriod:
 228              	.LFB10:
 413:.\Generated_Source\PSoC5/Timer.c **** 
 414:.\Generated_Source\PSoC5/Timer.c **** 
 415:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WritePeriod
 417:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/Timer.c **** *
 419:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/Timer.c **** *
 423:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/Timer.c **** *
 427:.\Generated_Source\PSoC5/Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/Timer.c **** *  void
 429:.\Generated_Source\PSoC5/Timer.c **** *
 430:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/Timer.c **** void Timer_WritePeriod(uint16 period) 
 432:.\Generated_Source\PSoC5/Timer.c **** {
 229              		.loc 1 432 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL2:
 433:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/Timer.c ****     #else
 437:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_PERIOD_LSB_PTR, period);
 235              		.loc 1 437 0
 236 0000 014B     		ldr	r3, .L26
 237 0002 1880     		strh	r0, [r3]	@ movhi
 238 0004 7047     		bx	lr
 239              	.L27:
 240 0006 00BF     		.align	2
 241              	.L26:
 242 0008 50680040 		.word	1073768528
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 246              		.section	.text.Timer_ReadCapture,"ax",%progbits
 247              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 13


 248              		.global	Timer_ReadCapture
 249              		.thumb
 250              		.thumb_func
 251              		.type	Timer_ReadCapture, %function
 252              	Timer_ReadCapture:
 253              	.LFB11:
 438:.\Generated_Source\PSoC5/Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/Timer.c **** }
 440:.\Generated_Source\PSoC5/Timer.c **** 
 441:.\Generated_Source\PSoC5/Timer.c **** 
 442:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCapture
 444:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/Timer.c **** *
 446:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/Timer.c **** *
 449:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 450:.\Generated_Source\PSoC5/Timer.c **** *  void
 451:.\Generated_Source\PSoC5/Timer.c **** *
 452:.\Generated_Source\PSoC5/Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/Timer.c **** *
 455:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/Timer.c **** uint16 Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/Timer.c **** {
 254              		.loc 1 457 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 458:.\Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/Timer.c ****        return ((uint16)CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/Timer.c ****    #else
 461:.\Generated_Source\PSoC5/Timer.c ****        return (CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 259              		.loc 1 461 0
 260 0000 014B     		ldr	r3, .L29
 261 0002 1888     		ldrh	r0, [r3]
 462:.\Generated_Source\PSoC5/Timer.c ****    #endif /* (Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/Timer.c **** }
 262              		.loc 1 463 0
 263 0004 80B2     		uxth	r0, r0
 264 0006 7047     		bx	lr
 265              	.L30:
 266              		.align	2
 267              	.L29:
 268 0008 90680040 		.word	1073768592
 269              		.cfi_endproc
 270              	.LFE11:
 271              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 272              		.section	.text.Timer_WriteCounter,"ax",%progbits
 273              		.align	2
 274              		.global	Timer_WriteCounter
 275              		.thumb
 276              		.thumb_func
 277              		.type	Timer_WriteCounter, %function
 278              	Timer_WriteCounter:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 14


 279              	.LFB12:
 464:.\Generated_Source\PSoC5/Timer.c **** 
 465:.\Generated_Source\PSoC5/Timer.c **** 
 466:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_WriteCounter
 468:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Timer.c **** *
 470:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/Timer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/Timer.c **** *
 473:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 474:.\Generated_Source\PSoC5/Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/Timer.c **** *
 476:.\Generated_Source\PSoC5/Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/Timer.c **** *  void
 478:.\Generated_Source\PSoC5/Timer.c **** *
 479:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/Timer.c **** void Timer_WriteCounter(uint16 counter) 
 481:.\Generated_Source\PSoC5/Timer.c **** {
 280              		.loc 1 481 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LVL3:
 482:.\Generated_Source\PSoC5/Timer.c ****    #if(Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/Timer.c ****          */
 486:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/Timer.c ****         
 488:.\Generated_Source\PSoC5/Timer.c ****     #else
 489:.\Generated_Source\PSoC5/Timer.c ****         CY_SET_REG16(Timer_COUNTER_LSB_PTR, counter);
 286              		.loc 1 489 0
 287 0000 014B     		ldr	r3, .L32
 288 0002 1880     		strh	r0, [r3]	@ movhi
 289 0004 7047     		bx	lr
 290              	.L33:
 291 0006 00BF     		.align	2
 292              	.L32:
 293 0008 10680040 		.word	1073768464
 294              		.cfi_endproc
 295              	.LFE12:
 296              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 297              		.section	.text.Timer_ReadCounter,"ax",%progbits
 298              		.align	2
 299              		.global	Timer_ReadCounter
 300              		.thumb
 301              		.thumb_func
 302              		.type	Timer_ReadCounter, %function
 303              	Timer_ReadCounter:
 304              	.LFB13:
 490:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/Timer.c **** }
 492:.\Generated_Source\PSoC5/Timer.c **** 
 493:.\Generated_Source\PSoC5/Timer.c **** 
 494:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 15


 495:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCounter
 496:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 497:.\Generated_Source\PSoC5/Timer.c **** *
 498:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/Timer.c **** *
 501:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/Timer.c **** *  void
 503:.\Generated_Source\PSoC5/Timer.c **** *
 504:.\Generated_Source\PSoC5/Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/Timer.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/Timer.c **** *
 507:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/Timer.c **** uint16 Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/Timer.c **** {
 305              		.loc 1 509 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 510:.\Generated_Source\PSoC5/Timer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG16(Timer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/Timer.c ****     #else
 516:.\Generated_Source\PSoC5/Timer.c ****         (void)CY_GET_REG8(Timer_COUNTER_LSB_PTR_8BIT);
 310              		.loc 1 516 0
 311 0000 024B     		ldr	r3, .L35
 312 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:.\Generated_Source\PSoC5/Timer.c ****     #endif/* (Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/Timer.c **** 
 519:.\Generated_Source\PSoC5/Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/Timer.c ****     #if(Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/Timer.c ****         return ((uint16)CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/Timer.c ****     #else
 523:.\Generated_Source\PSoC5/Timer.c ****         return (CY_GET_REG16(Timer_CAPTURE_LSB_PTR));
 313              		.loc 1 523 0
 314 0004 024B     		ldr	r3, .L35+4
 315 0006 1888     		ldrh	r0, [r3]
 524:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/Timer.c **** }
 316              		.loc 1 525 0
 317 0008 80B2     		uxth	r0, r0
 318 000a 7047     		bx	lr
 319              	.L36:
 320              		.align	2
 321              	.L35:
 322 000c 08640040 		.word	1073767432
 323 0010 90680040 		.word	1073768592
 324              		.cfi_endproc
 325              	.LFE13:
 326              		.size	Timer_ReadCounter, .-Timer_ReadCounter
 327              		.section	.text.Timer_ClearFIFO,"ax",%progbits
 328              		.align	2
 329              		.global	Timer_ClearFIFO
 330              		.thumb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 16


 331              		.thumb_func
 332              		.type	Timer_ClearFIFO, %function
 333              	Timer_ClearFIFO:
 334              	.LFB14:
 526:.\Generated_Source\PSoC5/Timer.c **** 
 527:.\Generated_Source\PSoC5/Timer.c **** 
 528:.\Generated_Source\PSoC5/Timer.c **** #if(!Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/Timer.c **** 
 530:.\Generated_Source\PSoC5/Timer.c ****     
 531:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/Timer.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC5/Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/Timer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/Timer.c **** 
 536:.\Generated_Source\PSoC5/Timer.c **** 
 537:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/Timer.c **** 
 539:.\Generated_Source\PSoC5/Timer.c **** 
 540:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetCaptureMode
 542:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/Timer.c **** *
 544:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 545:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/Timer.c **** *
 547:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 548:.\Generated_Source\PSoC5/Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/Timer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/Timer.c **** *  #define Timer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/Timer.c **** #define Timer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/Timer.c ****  identifiers
 556:.\Generated_Source\PSoC5/Timer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/Timer.c **** *  Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/Timer.c **** *
 562:.\Generated_Source\PSoC5/Timer.c **** * Return:
 563:.\Generated_Source\PSoC5/Timer.c **** *  void
 564:.\Generated_Source\PSoC5/Timer.c **** *
 565:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/Timer.c **** {
 568:.\Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/Timer.c ****     captureMode &= (Timer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/Timer.c **** 
 572:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/Timer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/Timer.c **** 
 576:.\Generated_Source\PSoC5/Timer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 17


 579:.\Generated_Source\PSoC5/Timer.c **** }
 580:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/Timer.c **** 
 582:.\Generated_Source\PSoC5/Timer.c **** 
 583:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/Timer.c **** 
 585:.\Generated_Source\PSoC5/Timer.c **** 
 586:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetTriggerMode
 588:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/Timer.c **** *
 590:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 591:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/Timer.c **** *
 593:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 594:.\Generated_Source\PSoC5/Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/Timer.c ****     #define Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/Timer.c **** *
 601:.\Generated_Source\PSoC5/Timer.c **** * Return:
 602:.\Generated_Source\PSoC5/Timer.c **** *  void
 603:.\Generated_Source\PSoC5/Timer.c **** *
 604:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/Timer.c **** {
 607:.\Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/Timer.c ****     triggerMode &= Timer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/Timer.c **** 
 610:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 611:.\Generated_Source\PSoC5/Timer.c ****     
 612:.\Generated_Source\PSoC5/Timer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/Timer.c **** 
 615:.\Generated_Source\PSoC5/Timer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= (triggerMode | Timer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/Timer.c **** }
 619:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/Timer.c **** 
 621:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/Timer.c **** 
 623:.\Generated_Source\PSoC5/Timer.c **** 
 624:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_EnableTrigger
 626:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/Timer.c **** *
 628:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 629:.\Generated_Source\PSoC5/Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/Timer.c **** *
 631:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 632:.\Generated_Source\PSoC5/Timer.c **** *  void
 633:.\Generated_Source\PSoC5/Timer.c **** *
 634:.\Generated_Source\PSoC5/Timer.c **** * Return:
 635:.\Generated_Source\PSoC5/Timer.c **** *  void
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 18


 636:.\Generated_Source\PSoC5/Timer.c **** *
 637:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/Timer.c **** void Timer_EnableTrigger(void) 
 639:.\Generated_Source\PSoC5/Timer.c **** {
 640:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 641:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= Timer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/Timer.c **** }
 644:.\Generated_Source\PSoC5/Timer.c **** 
 645:.\Generated_Source\PSoC5/Timer.c **** 
 646:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_DisableTrigger
 648:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/Timer.c **** *
 650:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 651:.\Generated_Source\PSoC5/Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/Timer.c **** *
 653:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 654:.\Generated_Source\PSoC5/Timer.c **** *  void
 655:.\Generated_Source\PSoC5/Timer.c **** *
 656:.\Generated_Source\PSoC5/Timer.c **** * Return:
 657:.\Generated_Source\PSoC5/Timer.c **** *  void
 658:.\Generated_Source\PSoC5/Timer.c **** *
 659:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/Timer.c **** void Timer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/Timer.c **** {
 662:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed */
 663:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/Timer.c **** }
 666:.\Generated_Source\PSoC5/Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/Timer.c **** 
 668:.\Generated_Source\PSoC5/Timer.c **** #if(Timer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/Timer.c **** 
 670:.\Generated_Source\PSoC5/Timer.c **** 
 671:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetInterruptCount
 673:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/Timer.c **** *
 675:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 676:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/Timer.c **** *
 678:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 679:.\Generated_Source\PSoC5/Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/Timer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/Timer.c **** *
 684:.\Generated_Source\PSoC5/Timer.c **** * Return:
 685:.\Generated_Source\PSoC5/Timer.c **** *  void
 686:.\Generated_Source\PSoC5/Timer.c **** *
 687:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/Timer.c **** {
 690:.\Generated_Source\PSoC5/Timer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/Timer.c ****     interruptCount &= Timer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/Timer.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 19


 693:.\Generated_Source\PSoC5/Timer.c ****     #if (!Timer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/Timer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL &= ((uint8)(~Timer_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC5/Timer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/Timer.c ****         Timer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/Timer.c ****     #endif /* (!Timer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/Timer.c **** }
 700:.\Generated_Source\PSoC5/Timer.c **** #endif /* Timer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/Timer.c **** 
 702:.\Generated_Source\PSoC5/Timer.c **** 
 703:.\Generated_Source\PSoC5/Timer.c **** #if (Timer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/Timer.c **** 
 705:.\Generated_Source\PSoC5/Timer.c **** 
 706:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_SetCaptureCount
 708:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/Timer.c **** *
 710:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 711:.\Generated_Source\PSoC5/Timer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/Timer.c **** *
 713:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 714:.\Generated_Source\PSoC5/Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/Timer.c **** *                captures.
 717:.\Generated_Source\PSoC5/Timer.c **** *
 718:.\Generated_Source\PSoC5/Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/Timer.c **** *  void
 720:.\Generated_Source\PSoC5/Timer.c **** *
 721:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/Timer.c **** void Timer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/Timer.c **** {
 724:.\Generated_Source\PSoC5/Timer.c ****     Timer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/Timer.c **** }
 726:.\Generated_Source\PSoC5/Timer.c **** 
 727:.\Generated_Source\PSoC5/Timer.c **** 
 728:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ReadCaptureCount
 730:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/Timer.c **** *
 732:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 733:.\Generated_Source\PSoC5/Timer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/Timer.c **** *
 735:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 736:.\Generated_Source\PSoC5/Timer.c **** *  void
 737:.\Generated_Source\PSoC5/Timer.c **** *
 738:.\Generated_Source\PSoC5/Timer.c **** * Return:
 739:.\Generated_Source\PSoC5/Timer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/Timer.c **** *
 741:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/Timer.c **** uint8 Timer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/Timer.c **** {
 744:.\Generated_Source\PSoC5/Timer.c ****     return ((uint8)Timer_CAP_COUNT);
 745:.\Generated_Source\PSoC5/Timer.c **** }
 746:.\Generated_Source\PSoC5/Timer.c **** #endif /* Timer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/Timer.c **** 
 748:.\Generated_Source\PSoC5/Timer.c **** 
 749:.\Generated_Source\PSoC5/Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 20


 750:.\Generated_Source\PSoC5/Timer.c **** * Function Name: Timer_ClearFIFO
 751:.\Generated_Source\PSoC5/Timer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/Timer.c **** *
 753:.\Generated_Source\PSoC5/Timer.c **** * Summary:
 754:.\Generated_Source\PSoC5/Timer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/Timer.c **** *
 756:.\Generated_Source\PSoC5/Timer.c **** * Parameters:
 757:.\Generated_Source\PSoC5/Timer.c **** *  void
 758:.\Generated_Source\PSoC5/Timer.c **** *
 759:.\Generated_Source\PSoC5/Timer.c **** * Return:
 760:.\Generated_Source\PSoC5/Timer.c **** *  void
 761:.\Generated_Source\PSoC5/Timer.c **** *
 762:.\Generated_Source\PSoC5/Timer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/Timer.c **** void Timer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/Timer.c **** {
 335              		.loc 1 764 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 08B5     		push	{r3, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 3, -8
 342              		.cfi_offset 14, -4
 765:.\Generated_Source\PSoC5/Timer.c ****     while(0u != (Timer_ReadStatusRegister() & Timer_STATUS_FIFONEMP))
 343              		.loc 1 765 0
 344 0002 01E0     		b	.L38
 345              	.L39:
 766:.\Generated_Source\PSoC5/Timer.c ****     {
 767:.\Generated_Source\PSoC5/Timer.c ****         (void)Timer_ReadCapture();
 346              		.loc 1 767 0
 347 0004 FFF7FEFF 		bl	Timer_ReadCapture
 348              	.LVL4:
 349              	.L38:
 765:.\Generated_Source\PSoC5/Timer.c ****     while(0u != (Timer_ReadStatusRegister() & Timer_STATUS_FIFONEMP))
 350              		.loc 1 765 0
 351 0008 FFF7FEFF 		bl	Timer_ReadStatusRegister
 352              	.LVL5:
 353 000c 10F0080F 		tst	r0, #8
 354 0010 F8D1     		bne	.L39
 768:.\Generated_Source\PSoC5/Timer.c ****     }
 769:.\Generated_Source\PSoC5/Timer.c **** }
 355              		.loc 1 769 0
 356 0012 08BD     		pop	{r3, pc}
 357              		.cfi_endproc
 358              	.LFE14:
 359              		.size	Timer_ClearFIFO, .-Timer_ClearFIFO
 360              		.section	.text.Timer_Init,"ax",%progbits
 361              		.align	2
 362              		.global	Timer_Init
 363              		.thumb
 364              		.thumb_func
 365              		.type	Timer_Init, %function
 366              	Timer_Init:
 367              	.LFB0:
  44:.\Generated_Source\PSoC5/Timer.c ****     #if(!Timer_UsingFixedFunction)
 368              		.loc 1 44 0
 369              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 21


 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
 118:.\Generated_Source\PSoC5/Timer.c ****     Timer_WriteCounter(Timer_INIT_PERIOD);
 376              		.loc 1 118 0
 377 0002 4FF6FF70 		movw	r0, #65535
 378 0006 FFF7FEFF 		bl	Timer_WritePeriod
 379              	.LVL6:
 119:.\Generated_Source\PSoC5/Timer.c **** 
 380              		.loc 1 119 0
 381 000a 4FF6FF70 		movw	r0, #65535
 382 000e FFF7FEFF 		bl	Timer_WriteCounter
 383              	.LVL7:
 142:.\Generated_Source\PSoC5/Timer.c **** 
 384              		.loc 1 142 0
 385 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 386              	.LVL8:
 145:.\Generated_Source\PSoC5/Timer.c **** 
 387              		.loc 1 145 0
 388 0016 064A     		ldr	r2, .L43
 389 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 390 001a 43F01003 		orr	r3, r3, #16
 391 001e 1370     		strb	r3, [r2]
 148:.\Generated_Source\PSoC5/Timer.c **** 
 392              		.loc 1 148 0
 393 0020 FFF7FEFF 		bl	CyExitCriticalSection
 394              	.LVL9:
 159:.\Generated_Source\PSoC5/Timer.c ****     #endif /* Configure additional features of UDB implementation */
 395              		.loc 1 159 0
 396 0024 FFF7FEFF 		bl	Timer_ClearFIFO
 397              	.LVL10:
 162:.\Generated_Source\PSoC5/Timer.c **** }
 398              		.loc 1 162 0
 399 0028 0120     		movs	r0, #1
 400 002a FFF7FEFF 		bl	Timer_SetInterruptMode
 401              	.LVL11:
 402 002e 08BD     		pop	{r3, pc}
 403              	.L44:
 404              		.align	2
 405              	.L43:
 406 0030 99640040 		.word	1073767577
 407              		.cfi_endproc
 408              	.LFE0:
 409              		.size	Timer_Init, .-Timer_Init
 410              		.section	.text.Timer_Start,"ax",%progbits
 411              		.align	2
 412              		.global	Timer_Start
 413              		.thumb
 414              		.thumb_func
 415              		.type	Timer_Start, %function
 416              	Timer_Start:
 417              	.LFB2:
 216:.\Generated_Source\PSoC5/Timer.c ****     if(Timer_initVar == 0u)
 418              		.loc 1 216 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 22


 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422 0000 08B5     		push	{r3, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 3, -8
 425              		.cfi_offset 14, -4
 217:.\Generated_Source\PSoC5/Timer.c ****     {
 426              		.loc 1 217 0
 427 0002 054B     		ldr	r3, .L48
 428 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 0006 23B9     		cbnz	r3, .L46
 219:.\Generated_Source\PSoC5/Timer.c **** 
 430              		.loc 1 219 0
 431 0008 FFF7FEFF 		bl	Timer_Init
 432              	.LVL12:
 221:.\Generated_Source\PSoC5/Timer.c ****     }
 433              		.loc 1 221 0
 434 000c 0122     		movs	r2, #1
 435 000e 024B     		ldr	r3, .L48
 436 0010 1A70     		strb	r2, [r3]
 437              	.L46:
 225:.\Generated_Source\PSoC5/Timer.c **** }
 438              		.loc 1 225 0
 439 0012 FFF7FEFF 		bl	Timer_Enable
 440              	.LVL13:
 441 0016 08BD     		pop	{r3, pc}
 442              	.L49:
 443              		.align	2
 444              	.L48:
 445 0018 00000000 		.word	.LANCHOR0
 446              		.cfi_endproc
 447              	.LFE2:
 448              		.size	Timer_Start, .-Timer_Start
 449              		.global	Timer_initVar
 450              		.bss
 451              		.set	.LANCHOR0,. + 0
 452              		.type	Timer_initVar, %object
 453              		.size	Timer_initVar, 1
 454              	Timer_initVar:
 455 0000 00       		.space	1
 456              		.text
 457              	.Letext0:
 458              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 459              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 460              		.section	.debug_info,"",%progbits
 461              	.Ldebug_info0:
 462 0000 E3020000 		.4byte	0x2e3
 463 0004 0400     		.2byte	0x4
 464 0006 00000000 		.4byte	.Ldebug_abbrev0
 465 000a 04       		.byte	0x4
 466 000b 01       		.uleb128 0x1
 467 000c BC010000 		.4byte	.LASF36
 468 0010 01       		.byte	0x1
 469 0011 86020000 		.4byte	.LASF37
 470 0015 00010000 		.4byte	.LASF38
 471 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 23


 472 001d 00000000 		.4byte	0
 473 0021 00000000 		.4byte	.Ldebug_line0
 474 0025 02       		.uleb128 0x2
 475 0026 01       		.byte	0x1
 476 0027 06       		.byte	0x6
 477 0028 0A030000 		.4byte	.LASF0
 478 002c 02       		.uleb128 0x2
 479 002d 01       		.byte	0x1
 480 002e 08       		.byte	0x8
 481 002f 8B000000 		.4byte	.LASF1
 482 0033 02       		.uleb128 0x2
 483 0034 02       		.byte	0x2
 484 0035 05       		.byte	0x5
 485 0036 A7020000 		.4byte	.LASF2
 486 003a 02       		.uleb128 0x2
 487 003b 02       		.byte	0x2
 488 003c 07       		.byte	0x7
 489 003d 38000000 		.4byte	.LASF3
 490 0041 02       		.uleb128 0x2
 491 0042 04       		.byte	0x4
 492 0043 05       		.byte	0x5
 493 0044 F1020000 		.4byte	.LASF4
 494 0048 02       		.uleb128 0x2
 495 0049 04       		.byte	0x4
 496 004a 07       		.byte	0x7
 497 004b 87010000 		.4byte	.LASF5
 498 004f 02       		.uleb128 0x2
 499 0050 08       		.byte	0x8
 500 0051 05       		.byte	0x5
 501 0052 6A020000 		.4byte	.LASF6
 502 0056 02       		.uleb128 0x2
 503 0057 08       		.byte	0x8
 504 0058 07       		.byte	0x7
 505 0059 74000000 		.4byte	.LASF7
 506 005d 03       		.uleb128 0x3
 507 005e 04       		.byte	0x4
 508 005f 05       		.byte	0x5
 509 0060 696E7400 		.ascii	"int\000"
 510 0064 02       		.uleb128 0x2
 511 0065 04       		.byte	0x4
 512 0066 07       		.byte	0x7
 513 0067 99010000 		.4byte	.LASF8
 514 006b 04       		.uleb128 0x4
 515 006c DC000000 		.4byte	.LASF9
 516 0070 02       		.byte	0x2
 517 0071 B4       		.byte	0xb4
 518 0072 2C000000 		.4byte	0x2c
 519 0076 04       		.uleb128 0x4
 520 0077 5A010000 		.4byte	.LASF10
 521 007b 02       		.byte	0x2
 522 007c B5       		.byte	0xb5
 523 007d 3A000000 		.4byte	0x3a
 524 0081 02       		.uleb128 0x2
 525 0082 04       		.byte	0x4
 526 0083 04       		.byte	0x4
 527 0084 66000000 		.4byte	.LASF11
 528 0088 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 24


 529 0089 08       		.byte	0x8
 530 008a 04       		.byte	0x4
 531 008b 42010000 		.4byte	.LASF12
 532 008f 02       		.uleb128 0x2
 533 0090 01       		.byte	0x1
 534 0091 08       		.byte	0x8
 535 0092 FA020000 		.4byte	.LASF13
 536 0096 05       		.uleb128 0x5
 537 0097 C0000000 		.4byte	.LASF14
 538 009b 02       		.byte	0x2
 539 009c 5E01     		.2byte	0x15e
 540 009e A2000000 		.4byte	0xa2
 541 00a2 06       		.uleb128 0x6
 542 00a3 6B000000 		.4byte	0x6b
 543 00a7 05       		.uleb128 0x5
 544 00a8 00000000 		.4byte	.LASF15
 545 00ac 02       		.byte	0x2
 546 00ad 5F01     		.2byte	0x15f
 547 00af B3000000 		.4byte	0xb3
 548 00b3 06       		.uleb128 0x6
 549 00b4 76000000 		.4byte	0x76
 550 00b8 02       		.uleb128 0x2
 551 00b9 04       		.byte	0x4
 552 00ba 07       		.byte	0x7
 553 00bb 61020000 		.4byte	.LASF16
 554 00bf 07       		.uleb128 0x7
 555 00c0 24030000 		.4byte	.LASF17
 556 00c4 01       		.byte	0x1
 557 00c5 B4       		.byte	0xb4
 558 00c6 00000000 		.4byte	.LFB1
 559 00ca 10000000 		.4byte	.LFE1-.LFB1
 560 00ce 01       		.uleb128 0x1
 561 00cf 9C       		.byte	0x9c
 562 00d0 07       		.uleb128 0x7
 563 00d1 5B000000 		.4byte	.LASF18
 564 00d5 01       		.byte	0x1
 565 00d6 F7       		.byte	0xf7
 566 00d7 00000000 		.4byte	.LFB3
 567 00db 10000000 		.4byte	.LFE3-.LFB3
 568 00df 01       		.uleb128 0x1
 569 00e0 9C       		.byte	0x9c
 570 00e1 08       		.uleb128 0x8
 571 00e2 C5000000 		.4byte	.LASF22
 572 00e6 01       		.byte	0x1
 573 00e7 1701     		.2byte	0x117
 574 00e9 00000000 		.4byte	.LFB4
 575 00ed 0C000000 		.4byte	.LFE4-.LFB4
 576 00f1 01       		.uleb128 0x1
 577 00f2 9C       		.byte	0x9c
 578 00f3 06010000 		.4byte	0x106
 579 00f7 09       		.uleb128 0x9
 580 00f8 78020000 		.4byte	.LASF24
 581 00fc 01       		.byte	0x1
 582 00fd 1701     		.2byte	0x117
 583 00ff 6B000000 		.4byte	0x6b
 584 0103 01       		.uleb128 0x1
 585 0104 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 25


 586 0105 00       		.byte	0
 587 0106 0A       		.uleb128 0xa
 588 0107 EA000000 		.4byte	.LASF19
 589 010b 01       		.byte	0x1
 590 010c 2E01     		.2byte	0x12e
 591 010e 00000000 		.4byte	.LFB5
 592 0112 0C000000 		.4byte	.LFE5-.LFB5
 593 0116 01       		.uleb128 0x1
 594 0117 9C       		.byte	0x9c
 595 0118 0B       		.uleb128 0xb
 596 0119 06000000 		.4byte	.LASF20
 597 011d 01       		.byte	0x1
 598 011e 4D01     		.2byte	0x14d
 599 0120 6B000000 		.4byte	0x6b
 600 0124 00000000 		.4byte	.LFB6
 601 0128 0C000000 		.4byte	.LFE6-.LFB6
 602 012c 01       		.uleb128 0x1
 603 012d 9C       		.byte	0x9c
 604 012e 0B       		.uleb128 0xb
 605 012f 61010000 		.4byte	.LASF21
 606 0133 01       		.byte	0x1
 607 0134 6401     		.2byte	0x164
 608 0136 6B000000 		.4byte	0x6b
 609 013a 00000000 		.4byte	.LFB7
 610 013e 0C000000 		.4byte	.LFE7-.LFB7
 611 0142 01       		.uleb128 0x1
 612 0143 9C       		.byte	0x9c
 613 0144 08       		.uleb128 0x8
 614 0145 B1020000 		.4byte	.LASF23
 615 0149 01       		.byte	0x1
 616 014a 7B01     		.2byte	0x17b
 617 014c 00000000 		.4byte	.LFB8
 618 0150 0C000000 		.4byte	.LFE8-.LFB8
 619 0154 01       		.uleb128 0x1
 620 0155 9C       		.byte	0x9c
 621 0156 69010000 		.4byte	0x169
 622 015a 09       		.uleb128 0x9
 623 015b E2000000 		.4byte	.LASF25
 624 015f 01       		.byte	0x1
 625 0160 7B01     		.2byte	0x17b
 626 0162 6B000000 		.4byte	0x6b
 627 0166 01       		.uleb128 0x1
 628 0167 50       		.byte	0x50
 629 0168 00       		.byte	0
 630 0169 0B       		.uleb128 0xb
 631 016a 49010000 		.4byte	.LASF26
 632 016e 01       		.byte	0x1
 633 016f 9501     		.2byte	0x195
 634 0171 76000000 		.4byte	0x76
 635 0175 00000000 		.4byte	.LFB9
 636 0179 0C000000 		.4byte	.LFE9-.LFB9
 637 017d 01       		.uleb128 0x1
 638 017e 9C       		.byte	0x9c
 639 017f 08       		.uleb128 0x8
 640 0180 AE000000 		.4byte	.LASF27
 641 0184 01       		.byte	0x1
 642 0185 AF01     		.2byte	0x1af
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 26


 643 0187 00000000 		.4byte	.LFB10
 644 018b 0C000000 		.4byte	.LFE10-.LFB10
 645 018f 01       		.uleb128 0x1
 646 0190 9C       		.byte	0x9c
 647 0191 A4010000 		.4byte	0x1a4
 648 0195 09       		.uleb128 0x9
 649 0196 1F000000 		.4byte	.LASF28
 650 019a 01       		.byte	0x1
 651 019b AF01     		.2byte	0x1af
 652 019d 76000000 		.4byte	0x76
 653 01a1 01       		.uleb128 0x1
 654 01a2 50       		.byte	0x50
 655 01a3 00       		.byte	0
 656 01a4 0B       		.uleb128 0xb
 657 01a5 CC020000 		.4byte	.LASF29
 658 01a9 01       		.byte	0x1
 659 01aa C801     		.2byte	0x1c8
 660 01ac 76000000 		.4byte	0x76
 661 01b0 00000000 		.4byte	.LFB11
 662 01b4 0C000000 		.4byte	.LFE11-.LFB11
 663 01b8 01       		.uleb128 0x1
 664 01b9 9C       		.byte	0x9c
 665 01ba 08       		.uleb128 0x8
 666 01bb DE020000 		.4byte	.LASF30
 667 01bf 01       		.byte	0x1
 668 01c0 E001     		.2byte	0x1e0
 669 01c2 00000000 		.4byte	.LFB12
 670 01c6 0C000000 		.4byte	.LFE12-.LFB12
 671 01ca 01       		.uleb128 0x1
 672 01cb 9C       		.byte	0x9c
 673 01cc DF010000 		.4byte	0x1df
 674 01d0 09       		.uleb128 0x9
 675 01d1 6C000000 		.4byte	.LASF31
 676 01d5 01       		.byte	0x1
 677 01d6 E001     		.2byte	0x1e0
 678 01d8 76000000 		.4byte	0x76
 679 01dc 01       		.uleb128 0x1
 680 01dd 50       		.byte	0x50
 681 01de 00       		.byte	0
 682 01df 0B       		.uleb128 0xb
 683 01e0 26000000 		.4byte	.LASF32
 684 01e4 01       		.byte	0x1
 685 01e5 FC01     		.2byte	0x1fc
 686 01e7 76000000 		.4byte	0x76
 687 01eb 00000000 		.4byte	.LFB13
 688 01ef 14000000 		.4byte	.LFE13-.LFB13
 689 01f3 01       		.uleb128 0x1
 690 01f4 9C       		.byte	0x9c
 691 01f5 08       		.uleb128 0x8
 692 01f6 4B000000 		.4byte	.LASF33
 693 01fa 01       		.byte	0x1
 694 01fb FB02     		.2byte	0x2fb
 695 01fd 00000000 		.4byte	.LFB14
 696 0201 14000000 		.4byte	.LFE14-.LFB14
 697 0205 01       		.uleb128 0x1
 698 0206 9C       		.byte	0x9c
 699 0207 1E020000 		.4byte	0x21e
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 27


 700 020b 0C       		.uleb128 0xc
 701 020c 08000000 		.4byte	.LVL4
 702 0210 A4010000 		.4byte	0x1a4
 703 0214 0C       		.uleb128 0xc
 704 0215 0C000000 		.4byte	.LVL5
 705 0219 18010000 		.4byte	0x118
 706 021d 00       		.byte	0
 707 021e 0D       		.uleb128 0xd
 708 021f FF020000 		.4byte	.LASF34
 709 0223 01       		.byte	0x1
 710 0224 2B       		.byte	0x2b
 711 0225 00000000 		.4byte	.LFB0
 712 0229 34000000 		.4byte	.LFE0-.LFB0
 713 022d 01       		.uleb128 0x1
 714 022e 9C       		.byte	0x9c
 715 022f 95020000 		.4byte	0x295
 716 0233 0E       		.uleb128 0xe
 717 0234 99000000 		.4byte	.LASF39
 718 0238 01       		.byte	0x1
 719 0239 2F       		.byte	0x2f
 720 023a 6B000000 		.4byte	0x6b
 721 023e 00000000 		.4byte	.LLST0
 722 0242 0F       		.uleb128 0xf
 723 0243 0A000000 		.4byte	.LVL6
 724 0247 7F010000 		.4byte	0x17f
 725 024b 56020000 		.4byte	0x256
 726 024f 10       		.uleb128 0x10
 727 0250 01       		.uleb128 0x1
 728 0251 50       		.byte	0x50
 729 0252 02       		.uleb128 0x2
 730 0253 09       		.byte	0x9
 731 0254 FF       		.byte	0xff
 732 0255 00       		.byte	0
 733 0256 0F       		.uleb128 0xf
 734 0257 12000000 		.4byte	.LVL7
 735 025b BA010000 		.4byte	0x1ba
 736 025f 6A020000 		.4byte	0x26a
 737 0263 10       		.uleb128 0x10
 738 0264 01       		.uleb128 0x1
 739 0265 50       		.byte	0x50
 740 0266 02       		.uleb128 0x2
 741 0267 09       		.byte	0x9
 742 0268 FF       		.byte	0xff
 743 0269 00       		.byte	0
 744 026a 0C       		.uleb128 0xc
 745 026b 16000000 		.4byte	.LVL8
 746 026f CE020000 		.4byte	0x2ce
 747 0273 0C       		.uleb128 0xc
 748 0274 24000000 		.4byte	.LVL9
 749 0278 D9020000 		.4byte	0x2d9
 750 027c 0C       		.uleb128 0xc
 751 027d 28000000 		.4byte	.LVL10
 752 0281 F5010000 		.4byte	0x1f5
 753 0285 11       		.uleb128 0x11
 754 0286 2E000000 		.4byte	.LVL11
 755 028a E1000000 		.4byte	0xe1
 756 028e 10       		.uleb128 0x10
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 28


 757 028f 01       		.uleb128 0x1
 758 0290 50       		.byte	0x50
 759 0291 01       		.uleb128 0x1
 760 0292 31       		.byte	0x31
 761 0293 00       		.byte	0
 762 0294 00       		.byte	0
 763 0295 0D       		.uleb128 0xd
 764 0296 7B010000 		.4byte	.LASF35
 765 029a 01       		.byte	0x1
 766 029b D7       		.byte	0xd7
 767 029c 00000000 		.4byte	.LFB2
 768 02a0 1C000000 		.4byte	.LFE2-.LFB2
 769 02a4 01       		.uleb128 0x1
 770 02a5 9C       		.byte	0x9c
 771 02a6 BD020000 		.4byte	0x2bd
 772 02aa 0C       		.uleb128 0xc
 773 02ab 0C000000 		.4byte	.LVL12
 774 02af 1E020000 		.4byte	0x21e
 775 02b3 0C       		.uleb128 0xc
 776 02b4 16000000 		.4byte	.LVL13
 777 02b8 BF000000 		.4byte	0xbf
 778 02bc 00       		.byte	0
 779 02bd 12       		.uleb128 0x12
 780 02be 16030000 		.4byte	.LASF40
 781 02c2 01       		.byte	0x1
 782 02c3 1A       		.byte	0x1a
 783 02c4 6B000000 		.4byte	0x6b
 784 02c8 05       		.uleb128 0x5
 785 02c9 03       		.byte	0x3
 786 02ca 00000000 		.4byte	Timer_initVar
 787 02ce 13       		.uleb128 0x13
 788 02cf 4A020000 		.4byte	.LASF41
 789 02d3 03       		.byte	0x3
 790 02d4 7E       		.byte	0x7e
 791 02d5 6B000000 		.4byte	0x6b
 792 02d9 14       		.uleb128 0x14
 793 02da A6010000 		.4byte	.LASF42
 794 02de 03       		.byte	0x3
 795 02df 7F       		.byte	0x7f
 796 02e0 15       		.uleb128 0x15
 797 02e1 6B000000 		.4byte	0x6b
 798 02e5 00       		.byte	0
 799 02e6 00       		.byte	0
 800              		.section	.debug_abbrev,"",%progbits
 801              	.Ldebug_abbrev0:
 802 0000 01       		.uleb128 0x1
 803 0001 11       		.uleb128 0x11
 804 0002 01       		.byte	0x1
 805 0003 25       		.uleb128 0x25
 806 0004 0E       		.uleb128 0xe
 807 0005 13       		.uleb128 0x13
 808 0006 0B       		.uleb128 0xb
 809 0007 03       		.uleb128 0x3
 810 0008 0E       		.uleb128 0xe
 811 0009 1B       		.uleb128 0x1b
 812 000a 0E       		.uleb128 0xe
 813 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 29


 814 000c 17       		.uleb128 0x17
 815 000d 11       		.uleb128 0x11
 816 000e 01       		.uleb128 0x1
 817 000f 10       		.uleb128 0x10
 818 0010 17       		.uleb128 0x17
 819 0011 00       		.byte	0
 820 0012 00       		.byte	0
 821 0013 02       		.uleb128 0x2
 822 0014 24       		.uleb128 0x24
 823 0015 00       		.byte	0
 824 0016 0B       		.uleb128 0xb
 825 0017 0B       		.uleb128 0xb
 826 0018 3E       		.uleb128 0x3e
 827 0019 0B       		.uleb128 0xb
 828 001a 03       		.uleb128 0x3
 829 001b 0E       		.uleb128 0xe
 830 001c 00       		.byte	0
 831 001d 00       		.byte	0
 832 001e 03       		.uleb128 0x3
 833 001f 24       		.uleb128 0x24
 834 0020 00       		.byte	0
 835 0021 0B       		.uleb128 0xb
 836 0022 0B       		.uleb128 0xb
 837 0023 3E       		.uleb128 0x3e
 838 0024 0B       		.uleb128 0xb
 839 0025 03       		.uleb128 0x3
 840 0026 08       		.uleb128 0x8
 841 0027 00       		.byte	0
 842 0028 00       		.byte	0
 843 0029 04       		.uleb128 0x4
 844 002a 16       		.uleb128 0x16
 845 002b 00       		.byte	0
 846 002c 03       		.uleb128 0x3
 847 002d 0E       		.uleb128 0xe
 848 002e 3A       		.uleb128 0x3a
 849 002f 0B       		.uleb128 0xb
 850 0030 3B       		.uleb128 0x3b
 851 0031 0B       		.uleb128 0xb
 852 0032 49       		.uleb128 0x49
 853 0033 13       		.uleb128 0x13
 854 0034 00       		.byte	0
 855 0035 00       		.byte	0
 856 0036 05       		.uleb128 0x5
 857 0037 16       		.uleb128 0x16
 858 0038 00       		.byte	0
 859 0039 03       		.uleb128 0x3
 860 003a 0E       		.uleb128 0xe
 861 003b 3A       		.uleb128 0x3a
 862 003c 0B       		.uleb128 0xb
 863 003d 3B       		.uleb128 0x3b
 864 003e 05       		.uleb128 0x5
 865 003f 49       		.uleb128 0x49
 866 0040 13       		.uleb128 0x13
 867 0041 00       		.byte	0
 868 0042 00       		.byte	0
 869 0043 06       		.uleb128 0x6
 870 0044 35       		.uleb128 0x35
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 30


 871 0045 00       		.byte	0
 872 0046 49       		.uleb128 0x49
 873 0047 13       		.uleb128 0x13
 874 0048 00       		.byte	0
 875 0049 00       		.byte	0
 876 004a 07       		.uleb128 0x7
 877 004b 2E       		.uleb128 0x2e
 878 004c 00       		.byte	0
 879 004d 3F       		.uleb128 0x3f
 880 004e 19       		.uleb128 0x19
 881 004f 03       		.uleb128 0x3
 882 0050 0E       		.uleb128 0xe
 883 0051 3A       		.uleb128 0x3a
 884 0052 0B       		.uleb128 0xb
 885 0053 3B       		.uleb128 0x3b
 886 0054 0B       		.uleb128 0xb
 887 0055 27       		.uleb128 0x27
 888 0056 19       		.uleb128 0x19
 889 0057 11       		.uleb128 0x11
 890 0058 01       		.uleb128 0x1
 891 0059 12       		.uleb128 0x12
 892 005a 06       		.uleb128 0x6
 893 005b 40       		.uleb128 0x40
 894 005c 18       		.uleb128 0x18
 895 005d 9742     		.uleb128 0x2117
 896 005f 19       		.uleb128 0x19
 897 0060 00       		.byte	0
 898 0061 00       		.byte	0
 899 0062 08       		.uleb128 0x8
 900 0063 2E       		.uleb128 0x2e
 901 0064 01       		.byte	0x1
 902 0065 3F       		.uleb128 0x3f
 903 0066 19       		.uleb128 0x19
 904 0067 03       		.uleb128 0x3
 905 0068 0E       		.uleb128 0xe
 906 0069 3A       		.uleb128 0x3a
 907 006a 0B       		.uleb128 0xb
 908 006b 3B       		.uleb128 0x3b
 909 006c 05       		.uleb128 0x5
 910 006d 27       		.uleb128 0x27
 911 006e 19       		.uleb128 0x19
 912 006f 11       		.uleb128 0x11
 913 0070 01       		.uleb128 0x1
 914 0071 12       		.uleb128 0x12
 915 0072 06       		.uleb128 0x6
 916 0073 40       		.uleb128 0x40
 917 0074 18       		.uleb128 0x18
 918 0075 9742     		.uleb128 0x2117
 919 0077 19       		.uleb128 0x19
 920 0078 01       		.uleb128 0x1
 921 0079 13       		.uleb128 0x13
 922 007a 00       		.byte	0
 923 007b 00       		.byte	0
 924 007c 09       		.uleb128 0x9
 925 007d 05       		.uleb128 0x5
 926 007e 00       		.byte	0
 927 007f 03       		.uleb128 0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 31


 928 0080 0E       		.uleb128 0xe
 929 0081 3A       		.uleb128 0x3a
 930 0082 0B       		.uleb128 0xb
 931 0083 3B       		.uleb128 0x3b
 932 0084 05       		.uleb128 0x5
 933 0085 49       		.uleb128 0x49
 934 0086 13       		.uleb128 0x13
 935 0087 02       		.uleb128 0x2
 936 0088 18       		.uleb128 0x18
 937 0089 00       		.byte	0
 938 008a 00       		.byte	0
 939 008b 0A       		.uleb128 0xa
 940 008c 2E       		.uleb128 0x2e
 941 008d 00       		.byte	0
 942 008e 3F       		.uleb128 0x3f
 943 008f 19       		.uleb128 0x19
 944 0090 03       		.uleb128 0x3
 945 0091 0E       		.uleb128 0xe
 946 0092 3A       		.uleb128 0x3a
 947 0093 0B       		.uleb128 0xb
 948 0094 3B       		.uleb128 0x3b
 949 0095 05       		.uleb128 0x5
 950 0096 27       		.uleb128 0x27
 951 0097 19       		.uleb128 0x19
 952 0098 11       		.uleb128 0x11
 953 0099 01       		.uleb128 0x1
 954 009a 12       		.uleb128 0x12
 955 009b 06       		.uleb128 0x6
 956 009c 40       		.uleb128 0x40
 957 009d 18       		.uleb128 0x18
 958 009e 9742     		.uleb128 0x2117
 959 00a0 19       		.uleb128 0x19
 960 00a1 00       		.byte	0
 961 00a2 00       		.byte	0
 962 00a3 0B       		.uleb128 0xb
 963 00a4 2E       		.uleb128 0x2e
 964 00a5 00       		.byte	0
 965 00a6 3F       		.uleb128 0x3f
 966 00a7 19       		.uleb128 0x19
 967 00a8 03       		.uleb128 0x3
 968 00a9 0E       		.uleb128 0xe
 969 00aa 3A       		.uleb128 0x3a
 970 00ab 0B       		.uleb128 0xb
 971 00ac 3B       		.uleb128 0x3b
 972 00ad 05       		.uleb128 0x5
 973 00ae 27       		.uleb128 0x27
 974 00af 19       		.uleb128 0x19
 975 00b0 49       		.uleb128 0x49
 976 00b1 13       		.uleb128 0x13
 977 00b2 11       		.uleb128 0x11
 978 00b3 01       		.uleb128 0x1
 979 00b4 12       		.uleb128 0x12
 980 00b5 06       		.uleb128 0x6
 981 00b6 40       		.uleb128 0x40
 982 00b7 18       		.uleb128 0x18
 983 00b8 9742     		.uleb128 0x2117
 984 00ba 19       		.uleb128 0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 32


 985 00bb 00       		.byte	0
 986 00bc 00       		.byte	0
 987 00bd 0C       		.uleb128 0xc
 988 00be 898201   		.uleb128 0x4109
 989 00c1 00       		.byte	0
 990 00c2 11       		.uleb128 0x11
 991 00c3 01       		.uleb128 0x1
 992 00c4 31       		.uleb128 0x31
 993 00c5 13       		.uleb128 0x13
 994 00c6 00       		.byte	0
 995 00c7 00       		.byte	0
 996 00c8 0D       		.uleb128 0xd
 997 00c9 2E       		.uleb128 0x2e
 998 00ca 01       		.byte	0x1
 999 00cb 3F       		.uleb128 0x3f
 1000 00cc 19       		.uleb128 0x19
 1001 00cd 03       		.uleb128 0x3
 1002 00ce 0E       		.uleb128 0xe
 1003 00cf 3A       		.uleb128 0x3a
 1004 00d0 0B       		.uleb128 0xb
 1005 00d1 3B       		.uleb128 0x3b
 1006 00d2 0B       		.uleb128 0xb
 1007 00d3 27       		.uleb128 0x27
 1008 00d4 19       		.uleb128 0x19
 1009 00d5 11       		.uleb128 0x11
 1010 00d6 01       		.uleb128 0x1
 1011 00d7 12       		.uleb128 0x12
 1012 00d8 06       		.uleb128 0x6
 1013 00d9 40       		.uleb128 0x40
 1014 00da 18       		.uleb128 0x18
 1015 00db 9742     		.uleb128 0x2117
 1016 00dd 19       		.uleb128 0x19
 1017 00de 01       		.uleb128 0x1
 1018 00df 13       		.uleb128 0x13
 1019 00e0 00       		.byte	0
 1020 00e1 00       		.byte	0
 1021 00e2 0E       		.uleb128 0xe
 1022 00e3 34       		.uleb128 0x34
 1023 00e4 00       		.byte	0
 1024 00e5 03       		.uleb128 0x3
 1025 00e6 0E       		.uleb128 0xe
 1026 00e7 3A       		.uleb128 0x3a
 1027 00e8 0B       		.uleb128 0xb
 1028 00e9 3B       		.uleb128 0x3b
 1029 00ea 0B       		.uleb128 0xb
 1030 00eb 49       		.uleb128 0x49
 1031 00ec 13       		.uleb128 0x13
 1032 00ed 02       		.uleb128 0x2
 1033 00ee 17       		.uleb128 0x17
 1034 00ef 00       		.byte	0
 1035 00f0 00       		.byte	0
 1036 00f1 0F       		.uleb128 0xf
 1037 00f2 898201   		.uleb128 0x4109
 1038 00f5 01       		.byte	0x1
 1039 00f6 11       		.uleb128 0x11
 1040 00f7 01       		.uleb128 0x1
 1041 00f8 31       		.uleb128 0x31
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 33


 1042 00f9 13       		.uleb128 0x13
 1043 00fa 01       		.uleb128 0x1
 1044 00fb 13       		.uleb128 0x13
 1045 00fc 00       		.byte	0
 1046 00fd 00       		.byte	0
 1047 00fe 10       		.uleb128 0x10
 1048 00ff 8A8201   		.uleb128 0x410a
 1049 0102 00       		.byte	0
 1050 0103 02       		.uleb128 0x2
 1051 0104 18       		.uleb128 0x18
 1052 0105 9142     		.uleb128 0x2111
 1053 0107 18       		.uleb128 0x18
 1054 0108 00       		.byte	0
 1055 0109 00       		.byte	0
 1056 010a 11       		.uleb128 0x11
 1057 010b 898201   		.uleb128 0x4109
 1058 010e 01       		.byte	0x1
 1059 010f 11       		.uleb128 0x11
 1060 0110 01       		.uleb128 0x1
 1061 0111 31       		.uleb128 0x31
 1062 0112 13       		.uleb128 0x13
 1063 0113 00       		.byte	0
 1064 0114 00       		.byte	0
 1065 0115 12       		.uleb128 0x12
 1066 0116 34       		.uleb128 0x34
 1067 0117 00       		.byte	0
 1068 0118 03       		.uleb128 0x3
 1069 0119 0E       		.uleb128 0xe
 1070 011a 3A       		.uleb128 0x3a
 1071 011b 0B       		.uleb128 0xb
 1072 011c 3B       		.uleb128 0x3b
 1073 011d 0B       		.uleb128 0xb
 1074 011e 49       		.uleb128 0x49
 1075 011f 13       		.uleb128 0x13
 1076 0120 3F       		.uleb128 0x3f
 1077 0121 19       		.uleb128 0x19
 1078 0122 02       		.uleb128 0x2
 1079 0123 18       		.uleb128 0x18
 1080 0124 00       		.byte	0
 1081 0125 00       		.byte	0
 1082 0126 13       		.uleb128 0x13
 1083 0127 2E       		.uleb128 0x2e
 1084 0128 00       		.byte	0
 1085 0129 3F       		.uleb128 0x3f
 1086 012a 19       		.uleb128 0x19
 1087 012b 03       		.uleb128 0x3
 1088 012c 0E       		.uleb128 0xe
 1089 012d 3A       		.uleb128 0x3a
 1090 012e 0B       		.uleb128 0xb
 1091 012f 3B       		.uleb128 0x3b
 1092 0130 0B       		.uleb128 0xb
 1093 0131 27       		.uleb128 0x27
 1094 0132 19       		.uleb128 0x19
 1095 0133 49       		.uleb128 0x49
 1096 0134 13       		.uleb128 0x13
 1097 0135 3C       		.uleb128 0x3c
 1098 0136 19       		.uleb128 0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 34


 1099 0137 00       		.byte	0
 1100 0138 00       		.byte	0
 1101 0139 14       		.uleb128 0x14
 1102 013a 2E       		.uleb128 0x2e
 1103 013b 01       		.byte	0x1
 1104 013c 3F       		.uleb128 0x3f
 1105 013d 19       		.uleb128 0x19
 1106 013e 03       		.uleb128 0x3
 1107 013f 0E       		.uleb128 0xe
 1108 0140 3A       		.uleb128 0x3a
 1109 0141 0B       		.uleb128 0xb
 1110 0142 3B       		.uleb128 0x3b
 1111 0143 0B       		.uleb128 0xb
 1112 0144 27       		.uleb128 0x27
 1113 0145 19       		.uleb128 0x19
 1114 0146 3C       		.uleb128 0x3c
 1115 0147 19       		.uleb128 0x19
 1116 0148 00       		.byte	0
 1117 0149 00       		.byte	0
 1118 014a 15       		.uleb128 0x15
 1119 014b 05       		.uleb128 0x5
 1120 014c 00       		.byte	0
 1121 014d 49       		.uleb128 0x49
 1122 014e 13       		.uleb128 0x13
 1123 014f 00       		.byte	0
 1124 0150 00       		.byte	0
 1125 0151 00       		.byte	0
 1126              		.section	.debug_loc,"",%progbits
 1127              	.Ldebug_loc0:
 1128              	.LLST0:
 1129 0000 16000000 		.4byte	.LVL8
 1130 0004 23000000 		.4byte	.LVL9-1
 1131 0008 0100     		.2byte	0x1
 1132 000a 50       		.byte	0x50
 1133 000b 00000000 		.4byte	0
 1134 000f 00000000 		.4byte	0
 1135              		.section	.debug_aranges,"",%progbits
 1136 0000 8C000000 		.4byte	0x8c
 1137 0004 0200     		.2byte	0x2
 1138 0006 00000000 		.4byte	.Ldebug_info0
 1139 000a 04       		.byte	0x4
 1140 000b 00       		.byte	0
 1141 000c 0000     		.2byte	0
 1142 000e 0000     		.2byte	0
 1143 0010 00000000 		.4byte	.LFB1
 1144 0014 10000000 		.4byte	.LFE1-.LFB1
 1145 0018 00000000 		.4byte	.LFB3
 1146 001c 10000000 		.4byte	.LFE3-.LFB3
 1147 0020 00000000 		.4byte	.LFB4
 1148 0024 0C000000 		.4byte	.LFE4-.LFB4
 1149 0028 00000000 		.4byte	.LFB5
 1150 002c 0C000000 		.4byte	.LFE5-.LFB5
 1151 0030 00000000 		.4byte	.LFB6
 1152 0034 0C000000 		.4byte	.LFE6-.LFB6
 1153 0038 00000000 		.4byte	.LFB7
 1154 003c 0C000000 		.4byte	.LFE7-.LFB7
 1155 0040 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 35


 1156 0044 0C000000 		.4byte	.LFE8-.LFB8
 1157 0048 00000000 		.4byte	.LFB9
 1158 004c 0C000000 		.4byte	.LFE9-.LFB9
 1159 0050 00000000 		.4byte	.LFB10
 1160 0054 0C000000 		.4byte	.LFE10-.LFB10
 1161 0058 00000000 		.4byte	.LFB11
 1162 005c 0C000000 		.4byte	.LFE11-.LFB11
 1163 0060 00000000 		.4byte	.LFB12
 1164 0064 0C000000 		.4byte	.LFE12-.LFB12
 1165 0068 00000000 		.4byte	.LFB13
 1166 006c 14000000 		.4byte	.LFE13-.LFB13
 1167 0070 00000000 		.4byte	.LFB14
 1168 0074 14000000 		.4byte	.LFE14-.LFB14
 1169 0078 00000000 		.4byte	.LFB0
 1170 007c 34000000 		.4byte	.LFE0-.LFB0
 1171 0080 00000000 		.4byte	.LFB2
 1172 0084 1C000000 		.4byte	.LFE2-.LFB2
 1173 0088 00000000 		.4byte	0
 1174 008c 00000000 		.4byte	0
 1175              		.section	.debug_ranges,"",%progbits
 1176              	.Ldebug_ranges0:
 1177 0000 00000000 		.4byte	.LFB1
 1178 0004 10000000 		.4byte	.LFE1
 1179 0008 00000000 		.4byte	.LFB3
 1180 000c 10000000 		.4byte	.LFE3
 1181 0010 00000000 		.4byte	.LFB4
 1182 0014 0C000000 		.4byte	.LFE4
 1183 0018 00000000 		.4byte	.LFB5
 1184 001c 0C000000 		.4byte	.LFE5
 1185 0020 00000000 		.4byte	.LFB6
 1186 0024 0C000000 		.4byte	.LFE6
 1187 0028 00000000 		.4byte	.LFB7
 1188 002c 0C000000 		.4byte	.LFE7
 1189 0030 00000000 		.4byte	.LFB8
 1190 0034 0C000000 		.4byte	.LFE8
 1191 0038 00000000 		.4byte	.LFB9
 1192 003c 0C000000 		.4byte	.LFE9
 1193 0040 00000000 		.4byte	.LFB10
 1194 0044 0C000000 		.4byte	.LFE10
 1195 0048 00000000 		.4byte	.LFB11
 1196 004c 0C000000 		.4byte	.LFE11
 1197 0050 00000000 		.4byte	.LFB12
 1198 0054 0C000000 		.4byte	.LFE12
 1199 0058 00000000 		.4byte	.LFB13
 1200 005c 14000000 		.4byte	.LFE13
 1201 0060 00000000 		.4byte	.LFB14
 1202 0064 14000000 		.4byte	.LFE14
 1203 0068 00000000 		.4byte	.LFB0
 1204 006c 34000000 		.4byte	.LFE0
 1205 0070 00000000 		.4byte	.LFB2
 1206 0074 1C000000 		.4byte	.LFE2
 1207 0078 00000000 		.4byte	0
 1208 007c 00000000 		.4byte	0
 1209              		.section	.debug_line,"",%progbits
 1210              	.Ldebug_line0:
 1211 0000 6E010000 		.section	.debug_str,"MS",%progbits,1
 1211      02004F00 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 36


 1211      00000201 
 1211      FB0E0D00 
 1211      01010101 
 1212              	.LASF15:
 1213 0000 72656731 		.ascii	"reg16\000"
 1213      3600
 1214              	.LASF20:
 1215 0006 54696D65 		.ascii	"Timer_ReadStatusRegister\000"
 1215      725F5265 
 1215      61645374 
 1215      61747573 
 1215      52656769 
 1216              	.LASF28:
 1217 001f 70657269 		.ascii	"period\000"
 1217      6F6400
 1218              	.LASF32:
 1219 0026 54696D65 		.ascii	"Timer_ReadCounter\000"
 1219      725F5265 
 1219      6164436F 
 1219      756E7465 
 1219      7200
 1220              	.LASF3:
 1221 0038 73686F72 		.ascii	"short unsigned int\000"
 1221      7420756E 
 1221      7369676E 
 1221      65642069 
 1221      6E7400
 1222              	.LASF33:
 1223 004b 54696D65 		.ascii	"Timer_ClearFIFO\000"
 1223      725F436C 
 1223      65617246 
 1223      49464F00 
 1224              	.LASF18:
 1225 005b 54696D65 		.ascii	"Timer_Stop\000"
 1225      725F5374 
 1225      6F7000
 1226              	.LASF11:
 1227 0066 666C6F61 		.ascii	"float\000"
 1227      7400
 1228              	.LASF31:
 1229 006c 636F756E 		.ascii	"counter\000"
 1229      74657200 
 1230              	.LASF7:
 1231 0074 6C6F6E67 		.ascii	"long long unsigned int\000"
 1231      206C6F6E 
 1231      6720756E 
 1231      7369676E 
 1231      65642069 
 1232              	.LASF1:
 1233 008b 756E7369 		.ascii	"unsigned char\000"
 1233      676E6564 
 1233      20636861 
 1233      7200
 1234              	.LASF39:
 1235 0099 54696D65 		.ascii	"Timer_interruptState\000"
 1235      725F696E 
 1235      74657272 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 37


 1235      75707453 
 1235      74617465 
 1236              	.LASF27:
 1237 00ae 54696D65 		.ascii	"Timer_WritePeriod\000"
 1237      725F5772 
 1237      69746550 
 1237      6572696F 
 1237      6400
 1238              	.LASF14:
 1239 00c0 72656738 		.ascii	"reg8\000"
 1239      00
 1240              	.LASF22:
 1241 00c5 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 1241      725F5365 
 1241      74496E74 
 1241      65727275 
 1241      70744D6F 
 1242              	.LASF9:
 1243 00dc 75696E74 		.ascii	"uint8\000"
 1243      3800
 1244              	.LASF25:
 1245 00e2 636F6E74 		.ascii	"control\000"
 1245      726F6C00 
 1246              	.LASF19:
 1247 00ea 54696D65 		.ascii	"Timer_SoftwareCapture\000"
 1247      725F536F 
 1247      66747761 
 1247      72654361 
 1247      70747572 
 1248              	.LASF38:
 1249 0100 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\FSAE\\E-Throttle\\P"
 1249      73657273 
 1249      5C6D6974 
 1249      6368656C 
 1249      6C5C446F 
 1250 012d 536F435C 		.ascii	"SoC\\E-Throttle.cydsn\000"
 1250      452D5468 
 1250      726F7474 
 1250      6C652E63 
 1250      7964736E 
 1251              	.LASF12:
 1252 0142 646F7562 		.ascii	"double\000"
 1252      6C6500
 1253              	.LASF26:
 1254 0149 54696D65 		.ascii	"Timer_ReadPeriod\000"
 1254      725F5265 
 1254      61645065 
 1254      72696F64 
 1254      00
 1255              	.LASF10:
 1256 015a 75696E74 		.ascii	"uint16\000"
 1256      313600
 1257              	.LASF21:
 1258 0161 54696D65 		.ascii	"Timer_ReadControlRegister\000"
 1258      725F5265 
 1258      6164436F 
 1258      6E74726F 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 38


 1258      6C526567 
 1259              	.LASF35:
 1260 017b 54696D65 		.ascii	"Timer_Start\000"
 1260      725F5374 
 1260      61727400 
 1261              	.LASF5:
 1262 0187 6C6F6E67 		.ascii	"long unsigned int\000"
 1262      20756E73 
 1262      69676E65 
 1262      6420696E 
 1262      7400
 1263              	.LASF8:
 1264 0199 756E7369 		.ascii	"unsigned int\000"
 1264      676E6564 
 1264      20696E74 
 1264      00
 1265              	.LASF42:
 1266 01a6 43794578 		.ascii	"CyExitCriticalSection\000"
 1266      69744372 
 1266      69746963 
 1266      616C5365 
 1266      6374696F 
 1267              	.LASF36:
 1268 01bc 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1268      4320342E 
 1268      392E3320 
 1268      32303135 
 1268      30333033 
 1269 01ef 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1269      20726576 
 1269      6973696F 
 1269      6E203232 
 1269      31323230 
 1270 0222 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1270      66756E63 
 1270      74696F6E 
 1270      2D736563 
 1270      74696F6E 
 1271              	.LASF41:
 1272 024a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1272      74657243 
 1272      72697469 
 1272      63616C53 
 1272      65637469 
 1273              	.LASF16:
 1274 0261 73697A65 		.ascii	"sizetype\000"
 1274      74797065 
 1274      00
 1275              	.LASF6:
 1276 026a 6C6F6E67 		.ascii	"long long int\000"
 1276      206C6F6E 
 1276      6720696E 
 1276      7400
 1277              	.LASF24:
 1278 0278 696E7465 		.ascii	"interruptMode\000"
 1278      72727570 
 1278      744D6F64 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cc4xxvcg.s 			page 39


 1278      6500
 1279              	.LASF37:
 1280 0286 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Timer.c\000"
 1280      6E657261 
 1280      7465645F 
 1280      536F7572 
 1280      63655C50 
 1281              	.LASF2:
 1282 02a7 73686F72 		.ascii	"short int\000"
 1282      7420696E 
 1282      7400
 1283              	.LASF23:
 1284 02b1 54696D65 		.ascii	"Timer_WriteControlRegister\000"
 1284      725F5772 
 1284      69746543 
 1284      6F6E7472 
 1284      6F6C5265 
 1285              	.LASF29:
 1286 02cc 54696D65 		.ascii	"Timer_ReadCapture\000"
 1286      725F5265 
 1286      61644361 
 1286      70747572 
 1286      6500
 1287              	.LASF30:
 1288 02de 54696D65 		.ascii	"Timer_WriteCounter\000"
 1288      725F5772 
 1288      69746543 
 1288      6F756E74 
 1288      657200
 1289              	.LASF4:
 1290 02f1 6C6F6E67 		.ascii	"long int\000"
 1290      20696E74 
 1290      00
 1291              	.LASF13:
 1292 02fa 63686172 		.ascii	"char\000"
 1292      00
 1293              	.LASF34:
 1294 02ff 54696D65 		.ascii	"Timer_Init\000"
 1294      725F496E 
 1294      697400
 1295              	.LASF0:
 1296 030a 7369676E 		.ascii	"signed char\000"
 1296      65642063 
 1296      68617200 
 1297              	.LASF40:
 1298 0316 54696D65 		.ascii	"Timer_initVar\000"
 1298      725F696E 
 1298      69745661 
 1298      7200
 1299              	.LASF17:
 1300 0324 54696D65 		.ascii	"Timer_Enable\000"
 1300      725F456E 
 1300      61626C65 
 1300      00
 1301              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
