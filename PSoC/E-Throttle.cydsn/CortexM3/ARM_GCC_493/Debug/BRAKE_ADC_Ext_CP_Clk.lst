ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"BRAKE_ADC_Ext_CP_Clk.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.BRAKE_ADC_Ext_CP_Clk_Start,"ax",%progbits
  19              		.align	2
  20              		.global	BRAKE_ADC_Ext_CP_Clk_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	BRAKE_ADC_Ext_CP_Clk_Start, %function
  24              	BRAKE_ADC_Ext_CP_Clk_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\BRAKE_ADC_Ext_CP_Clk.c"
   1:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * File Name: BRAKE_ADC_Ext_CP_Clk.c
   3:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
   5:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Description:
   6:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
   8:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Note:
   9:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  10:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  17:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #include "BRAKE_ADC_Ext_CP_Clk.h"
  19:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  20:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  27:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  29:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  30:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_Start
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 2


  32:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  34:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
  35:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  38:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
  39:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
  40:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  41:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
  42:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
  43:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  44:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** void BRAKE_ADC_Ext_CP_Clk_Start(void) 
  46:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     BRAKE_ADC_Ext_CP_Clk_CLKEN |= BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 054A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F00103 		orr	r3, r3, #1
  36 0008 1370     		strb	r3, [r2]
  49:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 	BRAKE_ADC_Ext_CP_Clk_CLKSTBY |= BRAKE_ADC_Ext_CP_Clk_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 1032     		adds	r2, r2, #16
  39 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  40 000e 43F00103 		orr	r3, r3, #1
  41 0012 1370     		strb	r3, [r2]
  42 0014 7047     		bx	lr
  43              	.L3:
  44 0016 00BF     		.align	2
  45              	.L2:
  46 0018 A2430040 		.word	1073759138
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	BRAKE_ADC_Ext_CP_Clk_Start, .-BRAKE_ADC_Ext_CP_Clk_Start
  50              		.section	.text.BRAKE_ADC_Ext_CP_Clk_Stop,"ax",%progbits
  51              		.align	2
  52              		.global	BRAKE_ADC_Ext_CP_Clk_Stop
  53              		.thumb
  54              		.thumb_func
  55              		.type	BRAKE_ADC_Ext_CP_Clk_Stop, %function
  56              	BRAKE_ADC_Ext_CP_Clk_Stop:
  57              	.LFB1:
  50:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
  51:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  52:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  53:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_Stop
  55:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  57:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 3


  58:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  64:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
  65:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
  66:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  67:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
  68:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
  69:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  70:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** void BRAKE_ADC_Ext_CP_Clk_Stop(void) 
  72:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
  58              		.loc 1 72 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     BRAKE_ADC_Ext_CP_Clk_CLKEN &= (uint8)(~BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK);
  63              		.loc 1 74 0
  64 0000 054A     		ldr	r2, .L5
  65 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  66 0004 03F0FE03 		and	r3, r3, #254
  67 0008 1370     		strb	r3, [r2]
  75:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 	BRAKE_ADC_Ext_CP_Clk_CLKSTBY &= (uint8)(~BRAKE_ADC_Ext_CP_Clk_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 000a 1032     		adds	r2, r2, #16
  70 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  71 000e 03F0FE03 		and	r3, r3, #254
  72 0012 1370     		strb	r3, [r2]
  73 0014 7047     		bx	lr
  74              	.L6:
  75 0016 00BF     		.align	2
  76              	.L5:
  77 0018 A2430040 		.word	1073759138
  78              		.cfi_endproc
  79              	.LFE1:
  80              		.size	BRAKE_ADC_Ext_CP_Clk_Stop, .-BRAKE_ADC_Ext_CP_Clk_Stop
  81              		.section	.text.BRAKE_ADC_Ext_CP_Clk_StopBlock,"ax",%progbits
  82              		.align	2
  83              		.global	BRAKE_ADC_Ext_CP_Clk_StopBlock
  84              		.thumb
  85              		.thumb_func
  86              		.type	BRAKE_ADC_Ext_CP_Clk_StopBlock, %function
  87              	BRAKE_ADC_Ext_CP_Clk_StopBlock:
  88              	.LFB2:
  76:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
  77:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  78:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  79:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  81:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
  82:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_StopBlock
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 4


  84:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  86:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
  87:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  93:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
  94:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
  95:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  96:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
  97:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
  98:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
  99:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** void BRAKE_ADC_Ext_CP_Clk_StopBlock(void) 
 101:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
  89              		.loc 1 101 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 102:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     if ((BRAKE_ADC_Ext_CP_Clk_CLKEN & BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK) != 0u)
  94              		.loc 1 102 0
  95 0000 164B     		ldr	r3, .L10
  96 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  97 0004 13F0010F 		tst	r3, #1
  98 0008 27D0     		beq	.L7
  99              	.LBB2:
 103:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 104:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 107:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CLK_DIST_LD = 0u;
 100              		.loc 1 107 0
 101 000a 1549     		ldr	r1, .L10+4
 102 000c 0023     		movs	r3, #0
 103 000e 0B70     		strb	r3, [r1]
 108:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 109:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #if defined(BRAKE_ADC_Ext_CP_Clk__CFG3)
 111:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CLK_DIST_AMASK = BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #else
 114:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CLK_DIST_DMASK = BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK;
 104              		.loc 1 114 0
 105 0010 0120     		movs	r0, #1
 106 0012 144A     		ldr	r2, .L10+8
 107 0014 1070     		strb	r0, [r2]
 115:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CLK_DIST_AMASK = 0x00u;
 108              		.loc 1 115 0
 109 0016 0432     		adds	r2, r2, #4
 110 0018 1370     		strb	r3, [r2]
 116:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* BRAKE_ADC_Ext_CP_Clk__CFG3 */
 117:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 118:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         /* Clear mask of bus clock. */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 5


 119:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 111              		.loc 1 119 0
 112 001a 0C3A     		subs	r2, r2, #12
 113 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 114 001e 03F07F03 		and	r3, r3, #127
 115 0022 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 121:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         oldDivider = CY_GET_REG16(BRAKE_ADC_Ext_CP_Clk_DIV_PTR);
 116              		.loc 1 121 0
 117 0024 104B     		ldr	r3, .L10+12
 118 0026 1A88     		ldrh	r2, [r3]
 119 0028 92B2     		uxth	r2, r2
 120              	.LVL0:
 122:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 121              		.loc 1 122 0
 122 002a 7E3B     		subs	r3, r3, #126
 123 002c 1A80     		strh	r2, [r3]	@ movhi
 123:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124              		.loc 1 123 0
 125 002e 0723     		movs	r3, #7
 126 0030 0B70     		strb	r3, [r1]
 127              	.L9:
 124:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 125:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 128              		.loc 1 126 0 discriminator 1
 129 0032 0B4B     		ldr	r3, .L10+4
 130 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131 0036 13F0010F 		tst	r3, #1
 132 003a FAD1     		bne	.L9
 127:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 129:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_CLKEN &= (uint8)(~BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK);
 133              		.loc 1 130 0
 134 003c 0749     		ldr	r1, .L10
 135 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 136 0040 03F0FE03 		and	r3, r3, #254
 137 0044 0B70     		strb	r3, [r1]
 131:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_CLKSTBY &= (uint8)(~BRAKE_ADC_Ext_CP_Clk_CLKSTBY_MASK);
 138              		.loc 1 131 0
 139 0046 1031     		adds	r1, r1, #16
 140 0048 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 141 004a 03F0FE03 		and	r3, r3, #254
 142 004e 0B70     		strb	r3, [r1]
 132:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 133:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CLK_DIST_LD = 0x00u;
 143              		.loc 1 135 0
 144 0050 0021     		movs	r1, #0
 145 0052 034B     		ldr	r3, .L10+4
 146 0054 1970     		strb	r1, [r3]
 136:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         CY_SET_REG16(BRAKE_ADC_Ext_CP_Clk_DIV_PTR, oldDivider);
 147              		.loc 1 136 0
 148 0056 7F33     		adds	r3, r3, #127
 149 0058 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 6


 150              	.LVL1:
 151              	.L7:
 152 005a 7047     		bx	lr
 153              	.L11:
 154              		.align	2
 155              	.L10:
 156 005c A2430040 		.word	1073759138
 157 0060 01400040 		.word	1073758209
 158 0064 10400040 		.word	1073758224
 159 0068 80400040 		.word	1073758336
 160              	.LBE2:
 161              		.cfi_endproc
 162              	.LFE2:
 163              		.size	BRAKE_ADC_Ext_CP_Clk_StopBlock, .-BRAKE_ADC_Ext_CP_Clk_StopBlock
 164              		.section	.text.BRAKE_ADC_Ext_CP_Clk_StandbyPower,"ax",%progbits
 165              		.align	2
 166              		.global	BRAKE_ADC_Ext_CP_Clk_StandbyPower
 167              		.thumb
 168              		.thumb_func
 169              		.type	BRAKE_ADC_Ext_CP_Clk_StandbyPower, %function
 170              	BRAKE_ADC_Ext_CP_Clk_StandbyPower:
 171              	.LFB3:
 137:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 139:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
 140:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 142:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 143:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_StandbyPower
 145:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 147:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
 148:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 150:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
 151:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 153:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
 154:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
 155:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 156:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** void BRAKE_ADC_Ext_CP_Clk_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
 172              		.loc 1 158 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177              	.LVL2:
 159:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     if(state == 0u)
 178              		.loc 1 159 0
 179 0000 28B9     		cbnz	r0, .L13
 160:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 161:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_CLKSTBY &= (uint8)(~BRAKE_ADC_Ext_CP_Clk_CLKSTBY_MASK);
 180              		.loc 1 161 0
 181 0002 064A     		ldr	r2, .L15
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 7


 182 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 183 0006 03F0FE03 		and	r3, r3, #254
 184 000a 1370     		strb	r3, [r2]
 185 000c 7047     		bx	lr
 186              	.L13:
 162:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 163:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     else
 164:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 165:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_CLKSTBY |= BRAKE_ADC_Ext_CP_Clk_CLKSTBY_MASK;
 187              		.loc 1 165 0
 188 000e 034A     		ldr	r2, .L15
 189 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 190 0012 43F00103 		orr	r3, r3, #1
 191 0016 1370     		strb	r3, [r2]
 192 0018 7047     		bx	lr
 193              	.L16:
 194 001a 00BF     		.align	2
 195              	.L15:
 196 001c B2430040 		.word	1073759154
 197              		.cfi_endproc
 198              	.LFE3:
 199              		.size	BRAKE_ADC_Ext_CP_Clk_StandbyPower, .-BRAKE_ADC_Ext_CP_Clk_StandbyPower
 200              		.section	.text.BRAKE_ADC_Ext_CP_Clk_GetDividerRegister,"ax",%progbits
 201              		.align	2
 202              		.global	BRAKE_ADC_Ext_CP_Clk_GetDividerRegister
 203              		.thumb
 204              		.thumb_func
 205              		.type	BRAKE_ADC_Ext_CP_Clk_GetDividerRegister, %function
 206              	BRAKE_ADC_Ext_CP_Clk_GetDividerRegister:
 207              	.LFB5:
 166:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 167:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
 168:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 169:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 170:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_SetDividerRegister
 172:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 174:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
 175:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 180:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
 181:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   cycle.
 188:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 189:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
 190:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
 191:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 192:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 8


 193:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** void BRAKE_ADC_Ext_CP_Clk_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                                 
 195:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
 196:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 198:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     uint8 currSrc = BRAKE_ADC_Ext_CP_Clk_GetSourceRegister();
 199:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     uint16 oldDivider = BRAKE_ADC_Ext_CP_Clk_GetDividerRegister();
 200:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 201:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 203:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         enabled = BRAKE_ADC_Ext_CP_Clk_CLKEN & BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 205:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         {
 207:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             {
 210:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(BRAKE_ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 BRAKE_ADC_Ext_CP_Clk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             }
 216:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             else
 217:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             {
 218:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 BRAKE_ADC_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(BRAKE_ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             }
 223:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         }
 224:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         else
 225:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         {
 226:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 			
 227:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             {
 229:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 231:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #if defined(BRAKE_ADC_Ext_CP_Clk__CFG3)
 233:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #else
 236:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* BRAKE_ADC_Ext_CP_Clk__CFG3 */
 239:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 242:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 if (((BRAKE_ADC_Ext_CP_Clk_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 {
 245:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 249:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                     /* Wait for clock to be disabled */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 9


 250:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 253:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                     BRAKE_ADC_Ext_CP_Clk_CLKEN &= (uint8)(~BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 255:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 }
 260:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             }
 261:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 262:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             if ((BRAKE_ADC_Ext_CP_Clk_CLKEN & BRAKE_ADC_Ext_CP_Clk_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             {
 265:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 268:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             }
 271:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             else
 272:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             {
 273:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(BRAKE_ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 				BRAKE_ADC_Ext_CP_Clk_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             }
 277:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         }
 278:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 279:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
 280:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 281:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 282:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_GetDividerRegister
 284:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 286:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
 287:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 289:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
 290:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
 291:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 292:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
 293:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 296:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** uint16 BRAKE_ADC_Ext_CP_Clk_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
 208              		.loc 1 298 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     return CY_GET_REG16(BRAKE_ADC_Ext_CP_Clk_DIV_PTR);
 213              		.loc 1 299 0
 214 0000 014B     		ldr	r3, .L18
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 10


 215 0002 1888     		ldrh	r0, [r3]
 300:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
 216              		.loc 1 300 0
 217 0004 80B2     		uxth	r0, r0
 218 0006 7047     		bx	lr
 219              	.L19:
 220              		.align	2
 221              	.L18:
 222 0008 80400040 		.word	1073758336
 223              		.cfi_endproc
 224              	.LFE5:
 225              		.size	BRAKE_ADC_Ext_CP_Clk_GetDividerRegister, .-BRAKE_ADC_Ext_CP_Clk_GetDividerRegister
 226              		.section	.text.BRAKE_ADC_Ext_CP_Clk_SetModeRegister,"ax",%progbits
 227              		.align	2
 228              		.global	BRAKE_ADC_Ext_CP_Clk_SetModeRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	BRAKE_ADC_Ext_CP_Clk_SetModeRegister, %function
 232              	BRAKE_ADC_Ext_CP_Clk_SetModeRegister:
 233              	.LFB6:
 301:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 302:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 303:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_SetModeRegister
 305:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 307:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
 308:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 313:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
 314:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 value.
 319:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 328:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
 329:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
 330:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 331:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** void BRAKE_ADC_Ext_CP_Clk_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
 234              		.loc 1 333 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 11


 238              		@ link register save eliminated.
 239              	.LVL3:
 334:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     BRAKE_ADC_Ext_CP_Clk_MOD_SRC |= modeBitMask & (uint8)BRAKE_ADC_Ext_CP_Clk_MODE_MASK;
 240              		.loc 1 334 0
 241 0000 034B     		ldr	r3, .L21
 242 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 243 0004 00F0F800 		and	r0, r0, #248
 244              	.LVL4:
 245 0008 1043     		orrs	r0, r0, r2
 246 000a 1870     		strb	r0, [r3]
 247 000c 7047     		bx	lr
 248              	.L22:
 249 000e 00BF     		.align	2
 250              	.L21:
 251 0010 82400040 		.word	1073758338
 252              		.cfi_endproc
 253              	.LFE6:
 254              		.size	BRAKE_ADC_Ext_CP_Clk_SetModeRegister, .-BRAKE_ADC_Ext_CP_Clk_SetModeRegister
 255              		.section	.text.BRAKE_ADC_Ext_CP_Clk_ClearModeRegister,"ax",%progbits
 256              		.align	2
 257              		.global	BRAKE_ADC_Ext_CP_Clk_ClearModeRegister
 258              		.thumb
 259              		.thumb_func
 260              		.type	BRAKE_ADC_Ext_CP_Clk_ClearModeRegister, %function
 261              	BRAKE_ADC_Ext_CP_Clk_ClearModeRegister:
 262              	.LFB7:
 335:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
 336:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 337:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 338:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_ClearModeRegister
 340:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 342:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
 343:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 348:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
 349:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 value.
 354:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 363:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
 364:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
 365:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 12


 366:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** void BRAKE_ADC_Ext_CP_Clk_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
 263              		.loc 1 368 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              	.LVL5:
 369:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     BRAKE_ADC_Ext_CP_Clk_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(BRAKE_ADC_Ext_CP_Clk_M
 269              		.loc 1 369 0
 270 0000 044B     		ldr	r3, .L24
 271 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 272 0004 C043     		mvns	r0, r0
 273              	.LVL6:
 274 0006 C0B2     		uxtb	r0, r0
 275 0008 40F00700 		orr	r0, r0, #7
 276 000c 1040     		ands	r0, r0, r2
 277 000e 1870     		strb	r0, [r3]
 278 0010 7047     		bx	lr
 279              	.L25:
 280 0012 00BF     		.align	2
 281              	.L24:
 282 0014 82400040 		.word	1073758338
 283              		.cfi_endproc
 284              	.LFE7:
 285              		.size	BRAKE_ADC_Ext_CP_Clk_ClearModeRegister, .-BRAKE_ADC_Ext_CP_Clk_ClearModeRegister
 286              		.section	.text.BRAKE_ADC_Ext_CP_Clk_GetModeRegister,"ax",%progbits
 287              		.align	2
 288              		.global	BRAKE_ADC_Ext_CP_Clk_GetModeRegister
 289              		.thumb
 290              		.thumb_func
 291              		.type	BRAKE_ADC_Ext_CP_Clk_GetModeRegister, %function
 292              	BRAKE_ADC_Ext_CP_Clk_GetModeRegister:
 293              	.LFB8:
 370:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
 371:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 372:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 373:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_GetModeRegister
 375:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 377:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
 378:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 380:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
 381:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
 382:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 383:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
 384:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 387:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** uint8 BRAKE_ADC_Ext_CP_Clk_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
 294              		.loc 1 389 0
 295              		.cfi_startproc
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 13


 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     return BRAKE_ADC_Ext_CP_Clk_MOD_SRC & (uint8)(BRAKE_ADC_Ext_CP_Clk_MODE_MASK);
 299              		.loc 1 390 0
 300 0000 024B     		ldr	r3, .L27
 301 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
 302              		.loc 1 391 0
 303 0004 00F0F800 		and	r0, r0, #248
 304 0008 7047     		bx	lr
 305              	.L28:
 306 000a 00BF     		.align	2
 307              	.L27:
 308 000c 82400040 		.word	1073758338
 309              		.cfi_endproc
 310              	.LFE8:
 311              		.size	BRAKE_ADC_Ext_CP_Clk_GetModeRegister, .-BRAKE_ADC_Ext_CP_Clk_GetModeRegister
 312              		.section	.text.BRAKE_ADC_Ext_CP_Clk_GetSourceRegister,"ax",%progbits
 313              		.align	2
 314              		.global	BRAKE_ADC_Ext_CP_Clk_GetSourceRegister
 315              		.thumb
 316              		.thumb_func
 317              		.type	BRAKE_ADC_Ext_CP_Clk_GetSourceRegister, %function
 318              	BRAKE_ADC_Ext_CP_Clk_GetSourceRegister:
 319              	.LFB10:
 392:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 393:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 394:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_SetSourceRegister
 396:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 398:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
 399:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 402:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
 403:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 415:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
 416:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
 417:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 418:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** void BRAKE_ADC_Ext_CP_Clk_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
 421:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     uint16 currDiv = BRAKE_ADC_Ext_CP_Clk_GetDividerRegister();
 422:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     uint8 oldSrc = BRAKE_ADC_Ext_CP_Clk_GetSourceRegister();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 14


 423:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 424:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 427:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_MOD_SRC =
 431:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             (BRAKE_ADC_Ext_CP_Clk_MOD_SRC & (uint8)(~BRAKE_ADC_Ext_CP_Clk_SRC_SEL_MSK)) | clkSource
 432:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 433:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 436:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_MOD_SRC =
 439:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             (BRAKE_ADC_Ext_CP_Clk_MOD_SRC & (uint8)(~BRAKE_ADC_Ext_CP_Clk_SRC_SEL_MSK)) | clkSource
 440:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 442:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     else
 443:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 444:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_MOD_SRC =
 445:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             (BRAKE_ADC_Ext_CP_Clk_MOD_SRC & (uint8)(~BRAKE_ADC_Ext_CP_Clk_SRC_SEL_MSK)) | clkSource
 446:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 447:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
 448:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 449:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 450:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Function Name: BRAKE_ADC_Ext_CP_Clk_GetSourceRegister
 452:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 454:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Summary:
 455:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 457:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Parameters:
 458:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  None
 459:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 460:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** * Returns:
 461:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *
 463:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** uint8 BRAKE_ADC_Ext_CP_Clk_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** {
 320              		.loc 1 465 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 466:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     return BRAKE_ADC_Ext_CP_Clk_MOD_SRC & BRAKE_ADC_Ext_CP_Clk_SRC_SEL_MSK;
 325              		.loc 1 466 0
 326 0000 024B     		ldr	r3, .L30
 327 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** }
 328              		.loc 1 467 0
 329 0004 00F00700 		and	r0, r0, #7
 330 0008 7047     		bx	lr
 331              	.L31:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 15


 332 000a 00BF     		.align	2
 333              	.L30:
 334 000c 82400040 		.word	1073758338
 335              		.cfi_endproc
 336              	.LFE10:
 337              		.size	BRAKE_ADC_Ext_CP_Clk_GetSourceRegister, .-BRAKE_ADC_Ext_CP_Clk_GetSourceRegister
 338              		.section	.text.BRAKE_ADC_Ext_CP_Clk_SetDividerRegister,"ax",%progbits
 339              		.align	2
 340              		.global	BRAKE_ADC_Ext_CP_Clk_SetDividerRegister
 341              		.thumb
 342              		.thumb_func
 343              		.type	BRAKE_ADC_Ext_CP_Clk_SetDividerRegister, %function
 344              	BRAKE_ADC_Ext_CP_Clk_SetDividerRegister:
 345              	.LFB4:
 195:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     uint8 enabled;
 346              		.loc 1 195 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL7:
 351 0000 70B5     		push	{r4, r5, r6, lr}
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 4, -16
 354              		.cfi_offset 5, -12
 355              		.cfi_offset 6, -8
 356              		.cfi_offset 14, -4
 357 0002 0546     		mov	r5, r0
 358 0004 0E46     		mov	r6, r1
 198:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     uint16 oldDivider = BRAKE_ADC_Ext_CP_Clk_GetDividerRegister();
 359              		.loc 1 198 0
 360 0006 FFF7FEFF 		bl	BRAKE_ADC_Ext_CP_Clk_GetSourceRegister
 361              	.LVL8:
 362 000a 0446     		mov	r4, r0
 363              	.LVL9:
 199:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 364              		.loc 1 199 0
 365 000c FFF7FEFF 		bl	BRAKE_ADC_Ext_CP_Clk_GetDividerRegister
 366              	.LVL10:
 201:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 367              		.loc 1 201 0
 368 0010 8542     		cmp	r5, r0
 369 0012 56D0     		beq	.L32
 203:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 370              		.loc 1 203 0
 371 0014 2B4B     		ldr	r3, .L45
 372 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 373 0018 03F00102 		and	r2, r3, #1
 374              	.LVL11:
 205:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         {
 375              		.loc 1 205 0
 376 001c 94B9     		cbnz	r4, .L34
 205:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         {
 377              		.loc 1 205 0 is_stmt 0 discriminator 1
 378 001e 00B1     		cbz	r0, .L35
 205:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         {
 379              		.loc 1 205 0 discriminator 2
 380 0020 85B9     		cbnz	r5, .L34
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 16


 381              	.L35:
 208:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             {
 382              		.loc 1 208 0 is_stmt 1
 383 0022 38B9     		cbnz	r0, .L36
 213:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 BRAKE_ADC_Ext_CP_Clk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 384              		.loc 1 213 0
 385 0024 284B     		ldr	r3, .L45+4
 386 0026 1D80     		strh	r5, [r3]	@ movhi
 214:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             }
 387              		.loc 1 214 0
 388 0028 284A     		ldr	r2, .L45+8
 389              	.LVL12:
 390 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 391 002c 03F0BF03 		and	r3, r3, #191
 392 0030 1370     		strb	r3, [r2]
 393 0032 70BD     		pop	{r4, r5, r6, pc}
 394              	.LVL13:
 395              	.L36:
 220:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(BRAKE_ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 396              		.loc 1 220 0
 397 0034 254A     		ldr	r2, .L45+8
 398              	.LVL14:
 399 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 400              	.LVL15:
 401 0038 43F04003 		orr	r3, r3, #64
 402 003c 1370     		strb	r3, [r2]
 221:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             }
 403              		.loc 1 221 0
 404 003e 224B     		ldr	r3, .L45+4
 405 0040 1D80     		strh	r5, [r3]	@ movhi
 406 0042 70BD     		pop	{r4, r5, r6, pc}
 407              	.LVL16:
 408              	.L34:
 227:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             {
 409              		.loc 1 227 0
 410 0044 22B3     		cbz	r2, .L37
 229:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 411              		.loc 1 229 0
 412 0046 0023     		movs	r3, #0
 413 0048 2149     		ldr	r1, .L45+12
 414 004a 0B70     		strb	r3, [r1]
 236:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = 0x00u;
 415              		.loc 1 236 0
 416 004c 0124     		movs	r4, #1
 417              	.LVL17:
 418 004e 0F31     		adds	r1, r1, #15
 419 0050 0C70     		strb	r4, [r1]
 237:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* BRAKE_ADC_Ext_CP_Clk__CFG3 */
 420              		.loc 1 237 0
 421 0052 0431     		adds	r1, r1, #4
 422 0054 0B70     		strb	r3, [r1]
 240:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 423              		.loc 1 240 0
 424 0056 0C39     		subs	r1, r1, #12
 425 0058 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 426 005a 03F07F03 		and	r3, r3, #127
 427 005e 0B70     		strb	r3, [r1]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 17


 243:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 {
 428              		.loc 1 243 0
 429 0060 1A4B     		ldr	r3, .L45+8
 430 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431 0064 13F0080F 		tst	r3, #8
 432 0068 00D0     		beq	.L38
 243:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 {
 433              		.loc 1 243 0 is_stmt 0 discriminator 1
 434 006a 8DB9     		cbnz	r5, .L37
 435              	.L38:
 246:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 436              		.loc 1 246 0 is_stmt 1
 437 006c 194B     		ldr	r3, .L45+16
 438 006e 1880     		strh	r0, [r3]	@ movhi
 247:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 439              		.loc 1 247 0
 440 0070 0721     		movs	r1, #7
 441 0072 013B     		subs	r3, r3, #1
 442 0074 1970     		strb	r1, [r3]
 443              	.L39:
 250:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 444              		.loc 1 250 0 discriminator 1
 445 0076 164B     		ldr	r3, .L45+12
 446 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 447 007a 13F0010F 		tst	r3, #1
 448 007e FAD1     		bne	.L39
 253:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 449              		.loc 1 253 0
 450 0080 1049     		ldr	r1, .L45
 451 0082 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 452 0084 03F0FE03 		and	r3, r3, #254
 453 0088 0B70     		strb	r3, [r1]
 257:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 454              		.loc 1 257 0
 455 008a 0021     		movs	r1, #0
 456 008c 104B     		ldr	r3, .L45+12
 457 008e 1970     		strb	r1, [r3]
 458              	.L37:
 263:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             {
 459              		.loc 1 263 0
 460 0090 0C4B     		ldr	r3, .L45
 461 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 462 0094 13F0010F 		tst	r3, #1
 463 0098 0DD0     		beq	.L40
 266:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 464              		.loc 1 266 0
 465 009a 0E4B     		ldr	r3, .L45+16
 466 009c 1D80     		strh	r5, [r3]	@ movhi
 268:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 467              		.loc 1 268 0
 468 009e 0EB1     		cbz	r6, .L43
 469 00a0 0322     		movs	r2, #3
 470              	.LVL18:
 471 00a2 00E0     		b	.L41
 472              	.LVL19:
 473              	.L43:
 474 00a4 0122     		movs	r2, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 18


 475              	.LVL20:
 476              	.L41:
 268:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 477              		.loc 1 268 0 is_stmt 0 discriminator 4
 478 00a6 0A4B     		ldr	r3, .L45+12
 479 00a8 1A70     		strb	r2, [r3]
 480              	.L42:
 269:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             }
 481              		.loc 1 269 0 is_stmt 1 discriminator 1
 482 00aa 094B     		ldr	r3, .L45+12
 483 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 484 00ae 13F0010F 		tst	r3, #1
 485 00b2 FAD1     		bne	.L42
 486 00b4 70BD     		pop	{r4, r5, r6, pc}
 487              	.LVL21:
 488              	.L40:
 274:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 				BRAKE_ADC_Ext_CP_Clk_CLKEN |= enabled;
 489              		.loc 1 274 0
 490 00b6 044B     		ldr	r3, .L45+4
 491 00b8 1D80     		strh	r5, [r3]	@ movhi
 275:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             }
 492              		.loc 1 275 0
 493 00ba 0249     		ldr	r1, .L45
 494 00bc 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 495 00be 1343     		orrs	r3, r3, r2
 496 00c0 0B70     		strb	r3, [r1]
 497              	.LVL22:
 498              	.L32:
 499 00c2 70BD     		pop	{r4, r5, r6, pc}
 500              	.L46:
 501              		.align	2
 502              	.L45:
 503 00c4 A2430040 		.word	1073759138
 504 00c8 80400040 		.word	1073758336
 505 00cc 82400040 		.word	1073758338
 506 00d0 01400040 		.word	1073758209
 507 00d4 02400040 		.word	1073758210
 508              		.cfi_endproc
 509              	.LFE4:
 510              		.size	BRAKE_ADC_Ext_CP_Clk_SetDividerRegister, .-BRAKE_ADC_Ext_CP_Clk_SetDividerRegister
 511              		.section	.text.BRAKE_ADC_Ext_CP_Clk_SetSourceRegister,"ax",%progbits
 512              		.align	2
 513              		.global	BRAKE_ADC_Ext_CP_Clk_SetSourceRegister
 514              		.thumb
 515              		.thumb_func
 516              		.type	BRAKE_ADC_Ext_CP_Clk_SetSourceRegister, %function
 517              	BRAKE_ADC_Ext_CP_Clk_SetSourceRegister:
 518              	.LFB9:
 420:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     uint16 currDiv = BRAKE_ADC_Ext_CP_Clk_GetDividerRegister();
 519              		.loc 1 420 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              	.LVL23:
 524 0000 38B5     		push	{r3, r4, r5, lr}
 525              		.cfi_def_cfa_offset 16
 526              		.cfi_offset 3, -16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 19


 527              		.cfi_offset 4, -12
 528              		.cfi_offset 5, -8
 529              		.cfi_offset 14, -4
 530 0002 0446     		mov	r4, r0
 421:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     uint8 oldSrc = BRAKE_ADC_Ext_CP_Clk_GetSourceRegister();
 531              		.loc 1 421 0
 532 0004 FFF7FEFF 		bl	BRAKE_ADC_Ext_CP_Clk_GetDividerRegister
 533              	.LVL24:
 534 0008 0546     		mov	r5, r0
 535              	.LVL25:
 422:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c **** 
 536              		.loc 1 422 0
 537 000a FFF7FEFF 		bl	BRAKE_ADC_Ext_CP_Clk_GetSourceRegister
 538              	.LVL26:
 424:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 539              		.loc 1 424 0
 540 000e 0346     		mov	r3, r0
 541 0010 60B1     		cbz	r0, .L48
 424:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 542              		.loc 1 424 0 is_stmt 0 discriminator 1
 543 0012 5CB9     		cbnz	r4, .L48
 425:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 544              		.loc 1 425 0 is_stmt 1
 545 0014 55B9     		cbnz	r5, .L48
 429:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_MOD_SRC =
 546              		.loc 1 429 0
 547 0016 104A     		ldr	r2, .L52
 548 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 549 001a 43F04003 		orr	r3, r3, #64
 550 001e 1370     		strb	r3, [r2]
 431:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 551              		.loc 1 431 0
 552 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             (BRAKE_ADC_Ext_CP_Clk_MOD_SRC & (uint8)(~BRAKE_ADC_Ext_CP_Clk_SRC_SEL_MSK)) | clkSource
 553              		.loc 1 430 0
 554 0022 03F0F803 		and	r3, r3, #248
 555 0026 1C43     		orrs	r4, r4, r3
 556 0028 1470     		strb	r4, [r2]
 557 002a 38BD     		pop	{r3, r4, r5, pc}
 558              	.LVL27:
 559              	.L48:
 433:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 560              		.loc 1 433 0
 561 002c 63B9     		cbnz	r3, .L50
 433:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 562              		.loc 1 433 0 is_stmt 0 discriminator 1
 563 002e 5CB1     		cbz	r4, .L50
 434:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     {
 564              		.loc 1 434 0 is_stmt 1
 565 0030 55B9     		cbnz	r5, .L50
 439:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****         BRAKE_ADC_Ext_CP_Clk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 566              		.loc 1 439 0
 567 0032 094A     		ldr	r2, .L52
 568 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             (BRAKE_ADC_Ext_CP_Clk_MOD_SRC & (uint8)(~BRAKE_ADC_Ext_CP_Clk_SRC_SEL_MSK)) | clkSource
 569              		.loc 1 438 0
 570 0036 03F0F803 		and	r3, r3, #248
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 20


 571 003a 1C43     		orrs	r4, r4, r3
 572 003c 1470     		strb	r4, [r2]
 440:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 573              		.loc 1 440 0
 574 003e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 575 0040 03F0BF03 		and	r3, r3, #191
 576 0044 1370     		strb	r3, [r2]
 577 0046 38BD     		pop	{r3, r4, r5, pc}
 578              	.LVL28:
 579              	.L50:
 445:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****     }
 580              		.loc 1 445 0
 581 0048 034A     		ldr	r2, .L52
 582 004a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/BRAKE_ADC_Ext_CP_Clk.c ****             (BRAKE_ADC_Ext_CP_Clk_MOD_SRC & (uint8)(~BRAKE_ADC_Ext_CP_Clk_SRC_SEL_MSK)) | clkSource
 583              		.loc 1 444 0
 584 004c 03F0F803 		and	r3, r3, #248
 585 0050 1C43     		orrs	r4, r4, r3
 586 0052 1470     		strb	r4, [r2]
 587 0054 38BD     		pop	{r3, r4, r5, pc}
 588              	.LVL29:
 589              	.L53:
 590 0056 00BF     		.align	2
 591              	.L52:
 592 0058 82400040 		.word	1073758338
 593              		.cfi_endproc
 594              	.LFE9:
 595              		.size	BRAKE_ADC_Ext_CP_Clk_SetSourceRegister, .-BRAKE_ADC_Ext_CP_Clk_SetSourceRegister
 596              		.text
 597              	.Letext0:
 598              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 599              		.section	.debug_info,"",%progbits
 600              	.Ldebug_info0:
 601 0000 7D020000 		.4byte	0x27d
 602 0004 0400     		.2byte	0x4
 603 0006 00000000 		.4byte	.Ldebug_abbrev0
 604 000a 04       		.byte	0x4
 605 000b 01       		.uleb128 0x1
 606 000c C7010000 		.4byte	.LASF36
 607 0010 01       		.byte	0x1
 608 0011 5C030000 		.4byte	.LASF37
 609 0015 85010000 		.4byte	.LASF38
 610 0019 00000000 		.4byte	.Ldebug_ranges0+0
 611 001d 00000000 		.4byte	0
 612 0021 00000000 		.4byte	.Ldebug_line0
 613 0025 02       		.uleb128 0x2
 614 0026 01       		.byte	0x1
 615 0027 06       		.byte	0x6
 616 0028 16010000 		.4byte	.LASF0
 617 002c 02       		.uleb128 0x2
 618 002d 01       		.byte	0x1
 619 002e 08       		.byte	0x8
 620 002f FC000000 		.4byte	.LASF1
 621 0033 02       		.uleb128 0x2
 622 0034 02       		.byte	0x2
 623 0035 05       		.byte	0x5
 624 0036 19000000 		.4byte	.LASF2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 21


 625 003a 02       		.uleb128 0x2
 626 003b 02       		.byte	0x2
 627 003c 07       		.byte	0x7
 628 003d 6D010000 		.4byte	.LASF3
 629 0041 02       		.uleb128 0x2
 630 0042 04       		.byte	0x4
 631 0043 05       		.byte	0x5
 632 0044 ED000000 		.4byte	.LASF4
 633 0048 02       		.uleb128 0x2
 634 0049 04       		.byte	0x4
 635 004a 07       		.byte	0x7
 636 004b B3020000 		.4byte	.LASF5
 637 004f 02       		.uleb128 0x2
 638 0050 08       		.byte	0x8
 639 0051 05       		.byte	0x5
 640 0052 DF000000 		.4byte	.LASF6
 641 0056 02       		.uleb128 0x2
 642 0057 08       		.byte	0x8
 643 0058 07       		.byte	0x7
 644 0059 22010000 		.4byte	.LASF7
 645 005d 03       		.uleb128 0x3
 646 005e 04       		.byte	0x4
 647 005f 05       		.byte	0x5
 648 0060 696E7400 		.ascii	"int\000"
 649 0064 02       		.uleb128 0x2
 650 0065 04       		.byte	0x4
 651 0066 07       		.byte	0x7
 652 0067 60010000 		.4byte	.LASF8
 653 006b 04       		.uleb128 0x4
 654 006c A1000000 		.4byte	.LASF9
 655 0070 02       		.byte	0x2
 656 0071 B4       		.byte	0xb4
 657 0072 2C000000 		.4byte	0x2c
 658 0076 04       		.uleb128 0x4
 659 0077 8B000000 		.4byte	.LASF10
 660 007b 02       		.byte	0x2
 661 007c B5       		.byte	0xb5
 662 007d 3A000000 		.4byte	0x3a
 663 0081 02       		.uleb128 0x2
 664 0082 04       		.byte	0x4
 665 0083 04       		.byte	0x4
 666 0084 D9000000 		.4byte	.LASF11
 667 0088 02       		.uleb128 0x2
 668 0089 08       		.byte	0x8
 669 008a 04       		.byte	0x4
 670 008b C5020000 		.4byte	.LASF12
 671 008f 02       		.uleb128 0x2
 672 0090 01       		.byte	0x1
 673 0091 08       		.byte	0x8
 674 0092 80010000 		.4byte	.LASF13
 675 0096 05       		.uleb128 0x5
 676 0097 AE020000 		.4byte	.LASF14
 677 009b 02       		.byte	0x2
 678 009c 5E01     		.2byte	0x15e
 679 009e A2000000 		.4byte	0xa2
 680 00a2 06       		.uleb128 0x6
 681 00a3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 22


 682 00a7 05       		.uleb128 0x5
 683 00a8 13000000 		.4byte	.LASF15
 684 00ac 02       		.byte	0x2
 685 00ad 5F01     		.2byte	0x15f
 686 00af B3000000 		.4byte	0xb3
 687 00b3 06       		.uleb128 0x6
 688 00b4 76000000 		.4byte	0x76
 689 00b8 07       		.uleb128 0x7
 690 00b9 70000000 		.4byte	.LASF16
 691 00bd 01       		.byte	0x1
 692 00be 2D       		.byte	0x2d
 693 00bf 00000000 		.4byte	.LFB0
 694 00c3 1C000000 		.4byte	.LFE0-.LFB0
 695 00c7 01       		.uleb128 0x1
 696 00c8 9C       		.byte	0x9c
 697 00c9 07       		.uleb128 0x7
 698 00ca 1D030000 		.4byte	.LASF17
 699 00ce 01       		.byte	0x1
 700 00cf 47       		.byte	0x47
 701 00d0 00000000 		.4byte	.LFB1
 702 00d4 1C000000 		.4byte	.LFE1-.LFB1
 703 00d8 01       		.uleb128 0x1
 704 00d9 9C       		.byte	0x9c
 705 00da 08       		.uleb128 0x8
 706 00db 67020000 		.4byte	.LASF18
 707 00df 01       		.byte	0x1
 708 00e0 64       		.byte	0x64
 709 00e1 00000000 		.4byte	.LFB2
 710 00e5 6C000000 		.4byte	.LFE2-.LFB2
 711 00e9 01       		.uleb128 0x1
 712 00ea 9C       		.byte	0x9c
 713 00eb 09010000 		.4byte	0x109
 714 00ef 09       		.uleb128 0x9
 715 00f0 0A000000 		.4byte	.LBB2
 716 00f4 62000000 		.4byte	.LBE2-.LBB2
 717 00f8 0A       		.uleb128 0xa
 718 00f9 00000000 		.4byte	.LASF30
 719 00fd 01       		.byte	0x1
 720 00fe 69       		.byte	0x69
 721 00ff 76000000 		.4byte	0x76
 722 0103 00000000 		.4byte	.LLST0
 723 0107 00       		.byte	0
 724 0108 00       		.byte	0
 725 0109 08       		.uleb128 0x8
 726 010a FB020000 		.4byte	.LASF19
 727 010e 01       		.byte	0x1
 728 010f 9D       		.byte	0x9d
 729 0110 00000000 		.4byte	.LFB3
 730 0114 20000000 		.4byte	.LFE3-.LFB3
 731 0118 01       		.uleb128 0x1
 732 0119 9C       		.byte	0x9c
 733 011a 2C010000 		.4byte	0x12c
 734 011e 0B       		.uleb128 0xb
 735 011f F6000000 		.4byte	.LASF21
 736 0123 01       		.byte	0x1
 737 0124 9D       		.byte	0x9d
 738 0125 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 23


 739 0129 01       		.uleb128 0x1
 740 012a 50       		.byte	0x50
 741 012b 00       		.byte	0
 742 012c 0C       		.uleb128 0xc
 743 012d 86020000 		.4byte	.LASF24
 744 0131 01       		.byte	0x1
 745 0132 2901     		.2byte	0x129
 746 0134 76000000 		.4byte	0x76
 747 0138 00000000 		.4byte	.LFB5
 748 013c 0C000000 		.4byte	.LFE5-.LFB5
 749 0140 01       		.uleb128 0x1
 750 0141 9C       		.byte	0x9c
 751 0142 0D       		.uleb128 0xd
 752 0143 37030000 		.4byte	.LASF20
 753 0147 01       		.byte	0x1
 754 0148 4C01     		.2byte	0x14c
 755 014a 00000000 		.4byte	.LFB6
 756 014e 14000000 		.4byte	.LFE6-.LFB6
 757 0152 01       		.uleb128 0x1
 758 0153 9C       		.byte	0x9c
 759 0154 69010000 		.4byte	0x169
 760 0158 0E       		.uleb128 0xe
 761 0159 0A010000 		.4byte	.LASF22
 762 015d 01       		.byte	0x1
 763 015e 4C01     		.2byte	0x14c
 764 0160 6B000000 		.4byte	0x6b
 765 0164 13000000 		.4byte	.LLST1
 766 0168 00       		.byte	0
 767 0169 0D       		.uleb128 0xd
 768 016a 39010000 		.4byte	.LASF23
 769 016e 01       		.byte	0x1
 770 016f 6F01     		.2byte	0x16f
 771 0171 00000000 		.4byte	.LFB7
 772 0175 18000000 		.4byte	.LFE7-.LFB7
 773 0179 01       		.uleb128 0x1
 774 017a 9C       		.byte	0x9c
 775 017b 90010000 		.4byte	0x190
 776 017f 0E       		.uleb128 0xe
 777 0180 0A010000 		.4byte	.LASF22
 778 0184 01       		.byte	0x1
 779 0185 6F01     		.2byte	0x16f
 780 0187 6B000000 		.4byte	0x6b
 781 018b 34000000 		.4byte	.LLST2
 782 018f 00       		.byte	0
 783 0190 0C       		.uleb128 0xc
 784 0191 4B000000 		.4byte	.LASF25
 785 0195 01       		.byte	0x1
 786 0196 8401     		.2byte	0x184
 787 0198 6B000000 		.4byte	0x6b
 788 019c 00000000 		.4byte	.LFB8
 789 01a0 10000000 		.4byte	.LFE8-.LFB8
 790 01a4 01       		.uleb128 0x1
 791 01a5 9C       		.byte	0x9c
 792 01a6 0C       		.uleb128 0xc
 793 01a7 B2000000 		.4byte	.LASF26
 794 01ab 01       		.byte	0x1
 795 01ac D001     		.2byte	0x1d0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 24


 796 01ae 6B000000 		.4byte	0x6b
 797 01b2 00000000 		.4byte	.LFB10
 798 01b6 10000000 		.4byte	.LFE10-.LFB10
 799 01ba 01       		.uleb128 0x1
 800 01bb 9C       		.byte	0x9c
 801 01bc 08       		.uleb128 0x8
 802 01bd 23000000 		.4byte	.LASF27
 803 01c1 01       		.byte	0x1
 804 01c2 C1       		.byte	0xc1
 805 01c3 00000000 		.4byte	.LFB4
 806 01c7 D8000000 		.4byte	.LFE4-.LFB4
 807 01cb 01       		.uleb128 0x1
 808 01cc 9C       		.byte	0x9c
 809 01cd 2D020000 		.4byte	0x22d
 810 01d1 0F       		.uleb128 0xf
 811 01d2 A7000000 		.4byte	.LASF28
 812 01d6 01       		.byte	0x1
 813 01d7 C1       		.byte	0xc1
 814 01d8 76000000 		.4byte	0x76
 815 01dc 55000000 		.4byte	.LLST3
 816 01e0 0F       		.uleb128 0xf
 817 01e1 92000000 		.4byte	.LASF29
 818 01e5 01       		.byte	0x1
 819 01e6 C1       		.byte	0xc1
 820 01e7 6B000000 		.4byte	0x6b
 821 01eb 76000000 		.4byte	.LLST4
 822 01ef 0A       		.uleb128 0xa
 823 01f0 F3020000 		.4byte	.LASF31
 824 01f4 01       		.byte	0x1
 825 01f5 C4       		.byte	0xc4
 826 01f6 6B000000 		.4byte	0x6b
 827 01fa 97000000 		.4byte	.LLST5
 828 01fe 0A       		.uleb128 0xa
 829 01ff 5F020000 		.4byte	.LASF32
 830 0203 01       		.byte	0x1
 831 0204 C6       		.byte	0xc6
 832 0205 6B000000 		.4byte	0x6b
 833 0209 E5000000 		.4byte	.LLST6
 834 020d 10       		.uleb128 0x10
 835 020e 00000000 		.4byte	.LASF30
 836 0212 01       		.byte	0x1
 837 0213 C7       		.byte	0xc7
 838 0214 76000000 		.4byte	0x76
 839 0218 01       		.uleb128 0x1
 840 0219 50       		.byte	0x50
 841 021a 11       		.uleb128 0x11
 842 021b 0A000000 		.4byte	.LVL8
 843 021f A6010000 		.4byte	0x1a6
 844 0223 11       		.uleb128 0x11
 845 0224 10000000 		.4byte	.LVL10
 846 0228 2C010000 		.4byte	0x12c
 847 022c 00       		.byte	0
 848 022d 12       		.uleb128 0x12
 849 022e CC020000 		.4byte	.LASF39
 850 0232 01       		.byte	0x1
 851 0233 A301     		.2byte	0x1a3
 852 0235 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 25


 853 0239 5C000000 		.4byte	.LFE9-.LFB9
 854 023d 01       		.uleb128 0x1
 855 023e 9C       		.byte	0x9c
 856 023f 0E       		.uleb128 0xe
 857 0240 55020000 		.4byte	.LASF33
 858 0244 01       		.byte	0x1
 859 0245 A301     		.2byte	0x1a3
 860 0247 6B000000 		.4byte	0x6b
 861 024b F8000000 		.4byte	.LLST7
 862 024f 13       		.uleb128 0x13
 863 0250 0B000000 		.4byte	.LASF34
 864 0254 01       		.byte	0x1
 865 0255 A501     		.2byte	0x1a5
 866 0257 76000000 		.4byte	0x76
 867 025b 19010000 		.4byte	.LLST8
 868 025f 14       		.uleb128 0x14
 869 0260 9A000000 		.4byte	.LASF35
 870 0264 01       		.byte	0x1
 871 0265 A601     		.2byte	0x1a6
 872 0267 6B000000 		.4byte	0x6b
 873 026b 01       		.uleb128 0x1
 874 026c 50       		.byte	0x50
 875 026d 11       		.uleb128 0x11
 876 026e 08000000 		.4byte	.LVL24
 877 0272 2C010000 		.4byte	0x12c
 878 0276 11       		.uleb128 0x11
 879 0277 0E000000 		.4byte	.LVL26
 880 027b A6010000 		.4byte	0x1a6
 881 027f 00       		.byte	0
 882 0280 00       		.byte	0
 883              		.section	.debug_abbrev,"",%progbits
 884              	.Ldebug_abbrev0:
 885 0000 01       		.uleb128 0x1
 886 0001 11       		.uleb128 0x11
 887 0002 01       		.byte	0x1
 888 0003 25       		.uleb128 0x25
 889 0004 0E       		.uleb128 0xe
 890 0005 13       		.uleb128 0x13
 891 0006 0B       		.uleb128 0xb
 892 0007 03       		.uleb128 0x3
 893 0008 0E       		.uleb128 0xe
 894 0009 1B       		.uleb128 0x1b
 895 000a 0E       		.uleb128 0xe
 896 000b 55       		.uleb128 0x55
 897 000c 17       		.uleb128 0x17
 898 000d 11       		.uleb128 0x11
 899 000e 01       		.uleb128 0x1
 900 000f 10       		.uleb128 0x10
 901 0010 17       		.uleb128 0x17
 902 0011 00       		.byte	0
 903 0012 00       		.byte	0
 904 0013 02       		.uleb128 0x2
 905 0014 24       		.uleb128 0x24
 906 0015 00       		.byte	0
 907 0016 0B       		.uleb128 0xb
 908 0017 0B       		.uleb128 0xb
 909 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 26


 910 0019 0B       		.uleb128 0xb
 911 001a 03       		.uleb128 0x3
 912 001b 0E       		.uleb128 0xe
 913 001c 00       		.byte	0
 914 001d 00       		.byte	0
 915 001e 03       		.uleb128 0x3
 916 001f 24       		.uleb128 0x24
 917 0020 00       		.byte	0
 918 0021 0B       		.uleb128 0xb
 919 0022 0B       		.uleb128 0xb
 920 0023 3E       		.uleb128 0x3e
 921 0024 0B       		.uleb128 0xb
 922 0025 03       		.uleb128 0x3
 923 0026 08       		.uleb128 0x8
 924 0027 00       		.byte	0
 925 0028 00       		.byte	0
 926 0029 04       		.uleb128 0x4
 927 002a 16       		.uleb128 0x16
 928 002b 00       		.byte	0
 929 002c 03       		.uleb128 0x3
 930 002d 0E       		.uleb128 0xe
 931 002e 3A       		.uleb128 0x3a
 932 002f 0B       		.uleb128 0xb
 933 0030 3B       		.uleb128 0x3b
 934 0031 0B       		.uleb128 0xb
 935 0032 49       		.uleb128 0x49
 936 0033 13       		.uleb128 0x13
 937 0034 00       		.byte	0
 938 0035 00       		.byte	0
 939 0036 05       		.uleb128 0x5
 940 0037 16       		.uleb128 0x16
 941 0038 00       		.byte	0
 942 0039 03       		.uleb128 0x3
 943 003a 0E       		.uleb128 0xe
 944 003b 3A       		.uleb128 0x3a
 945 003c 0B       		.uleb128 0xb
 946 003d 3B       		.uleb128 0x3b
 947 003e 05       		.uleb128 0x5
 948 003f 49       		.uleb128 0x49
 949 0040 13       		.uleb128 0x13
 950 0041 00       		.byte	0
 951 0042 00       		.byte	0
 952 0043 06       		.uleb128 0x6
 953 0044 35       		.uleb128 0x35
 954 0045 00       		.byte	0
 955 0046 49       		.uleb128 0x49
 956 0047 13       		.uleb128 0x13
 957 0048 00       		.byte	0
 958 0049 00       		.byte	0
 959 004a 07       		.uleb128 0x7
 960 004b 2E       		.uleb128 0x2e
 961 004c 00       		.byte	0
 962 004d 3F       		.uleb128 0x3f
 963 004e 19       		.uleb128 0x19
 964 004f 03       		.uleb128 0x3
 965 0050 0E       		.uleb128 0xe
 966 0051 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 27


 967 0052 0B       		.uleb128 0xb
 968 0053 3B       		.uleb128 0x3b
 969 0054 0B       		.uleb128 0xb
 970 0055 27       		.uleb128 0x27
 971 0056 19       		.uleb128 0x19
 972 0057 11       		.uleb128 0x11
 973 0058 01       		.uleb128 0x1
 974 0059 12       		.uleb128 0x12
 975 005a 06       		.uleb128 0x6
 976 005b 40       		.uleb128 0x40
 977 005c 18       		.uleb128 0x18
 978 005d 9742     		.uleb128 0x2117
 979 005f 19       		.uleb128 0x19
 980 0060 00       		.byte	0
 981 0061 00       		.byte	0
 982 0062 08       		.uleb128 0x8
 983 0063 2E       		.uleb128 0x2e
 984 0064 01       		.byte	0x1
 985 0065 3F       		.uleb128 0x3f
 986 0066 19       		.uleb128 0x19
 987 0067 03       		.uleb128 0x3
 988 0068 0E       		.uleb128 0xe
 989 0069 3A       		.uleb128 0x3a
 990 006a 0B       		.uleb128 0xb
 991 006b 3B       		.uleb128 0x3b
 992 006c 0B       		.uleb128 0xb
 993 006d 27       		.uleb128 0x27
 994 006e 19       		.uleb128 0x19
 995 006f 11       		.uleb128 0x11
 996 0070 01       		.uleb128 0x1
 997 0071 12       		.uleb128 0x12
 998 0072 06       		.uleb128 0x6
 999 0073 40       		.uleb128 0x40
 1000 0074 18       		.uleb128 0x18
 1001 0075 9742     		.uleb128 0x2117
 1002 0077 19       		.uleb128 0x19
 1003 0078 01       		.uleb128 0x1
 1004 0079 13       		.uleb128 0x13
 1005 007a 00       		.byte	0
 1006 007b 00       		.byte	0
 1007 007c 09       		.uleb128 0x9
 1008 007d 0B       		.uleb128 0xb
 1009 007e 01       		.byte	0x1
 1010 007f 11       		.uleb128 0x11
 1011 0080 01       		.uleb128 0x1
 1012 0081 12       		.uleb128 0x12
 1013 0082 06       		.uleb128 0x6
 1014 0083 00       		.byte	0
 1015 0084 00       		.byte	0
 1016 0085 0A       		.uleb128 0xa
 1017 0086 34       		.uleb128 0x34
 1018 0087 00       		.byte	0
 1019 0088 03       		.uleb128 0x3
 1020 0089 0E       		.uleb128 0xe
 1021 008a 3A       		.uleb128 0x3a
 1022 008b 0B       		.uleb128 0xb
 1023 008c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 28


 1024 008d 0B       		.uleb128 0xb
 1025 008e 49       		.uleb128 0x49
 1026 008f 13       		.uleb128 0x13
 1027 0090 02       		.uleb128 0x2
 1028 0091 17       		.uleb128 0x17
 1029 0092 00       		.byte	0
 1030 0093 00       		.byte	0
 1031 0094 0B       		.uleb128 0xb
 1032 0095 05       		.uleb128 0x5
 1033 0096 00       		.byte	0
 1034 0097 03       		.uleb128 0x3
 1035 0098 0E       		.uleb128 0xe
 1036 0099 3A       		.uleb128 0x3a
 1037 009a 0B       		.uleb128 0xb
 1038 009b 3B       		.uleb128 0x3b
 1039 009c 0B       		.uleb128 0xb
 1040 009d 49       		.uleb128 0x49
 1041 009e 13       		.uleb128 0x13
 1042 009f 02       		.uleb128 0x2
 1043 00a0 18       		.uleb128 0x18
 1044 00a1 00       		.byte	0
 1045 00a2 00       		.byte	0
 1046 00a3 0C       		.uleb128 0xc
 1047 00a4 2E       		.uleb128 0x2e
 1048 00a5 00       		.byte	0
 1049 00a6 3F       		.uleb128 0x3f
 1050 00a7 19       		.uleb128 0x19
 1051 00a8 03       		.uleb128 0x3
 1052 00a9 0E       		.uleb128 0xe
 1053 00aa 3A       		.uleb128 0x3a
 1054 00ab 0B       		.uleb128 0xb
 1055 00ac 3B       		.uleb128 0x3b
 1056 00ad 05       		.uleb128 0x5
 1057 00ae 27       		.uleb128 0x27
 1058 00af 19       		.uleb128 0x19
 1059 00b0 49       		.uleb128 0x49
 1060 00b1 13       		.uleb128 0x13
 1061 00b2 11       		.uleb128 0x11
 1062 00b3 01       		.uleb128 0x1
 1063 00b4 12       		.uleb128 0x12
 1064 00b5 06       		.uleb128 0x6
 1065 00b6 40       		.uleb128 0x40
 1066 00b7 18       		.uleb128 0x18
 1067 00b8 9742     		.uleb128 0x2117
 1068 00ba 19       		.uleb128 0x19
 1069 00bb 00       		.byte	0
 1070 00bc 00       		.byte	0
 1071 00bd 0D       		.uleb128 0xd
 1072 00be 2E       		.uleb128 0x2e
 1073 00bf 01       		.byte	0x1
 1074 00c0 3F       		.uleb128 0x3f
 1075 00c1 19       		.uleb128 0x19
 1076 00c2 03       		.uleb128 0x3
 1077 00c3 0E       		.uleb128 0xe
 1078 00c4 3A       		.uleb128 0x3a
 1079 00c5 0B       		.uleb128 0xb
 1080 00c6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 29


 1081 00c7 05       		.uleb128 0x5
 1082 00c8 27       		.uleb128 0x27
 1083 00c9 19       		.uleb128 0x19
 1084 00ca 11       		.uleb128 0x11
 1085 00cb 01       		.uleb128 0x1
 1086 00cc 12       		.uleb128 0x12
 1087 00cd 06       		.uleb128 0x6
 1088 00ce 40       		.uleb128 0x40
 1089 00cf 18       		.uleb128 0x18
 1090 00d0 9742     		.uleb128 0x2117
 1091 00d2 19       		.uleb128 0x19
 1092 00d3 01       		.uleb128 0x1
 1093 00d4 13       		.uleb128 0x13
 1094 00d5 00       		.byte	0
 1095 00d6 00       		.byte	0
 1096 00d7 0E       		.uleb128 0xe
 1097 00d8 05       		.uleb128 0x5
 1098 00d9 00       		.byte	0
 1099 00da 03       		.uleb128 0x3
 1100 00db 0E       		.uleb128 0xe
 1101 00dc 3A       		.uleb128 0x3a
 1102 00dd 0B       		.uleb128 0xb
 1103 00de 3B       		.uleb128 0x3b
 1104 00df 05       		.uleb128 0x5
 1105 00e0 49       		.uleb128 0x49
 1106 00e1 13       		.uleb128 0x13
 1107 00e2 02       		.uleb128 0x2
 1108 00e3 17       		.uleb128 0x17
 1109 00e4 00       		.byte	0
 1110 00e5 00       		.byte	0
 1111 00e6 0F       		.uleb128 0xf
 1112 00e7 05       		.uleb128 0x5
 1113 00e8 00       		.byte	0
 1114 00e9 03       		.uleb128 0x3
 1115 00ea 0E       		.uleb128 0xe
 1116 00eb 3A       		.uleb128 0x3a
 1117 00ec 0B       		.uleb128 0xb
 1118 00ed 3B       		.uleb128 0x3b
 1119 00ee 0B       		.uleb128 0xb
 1120 00ef 49       		.uleb128 0x49
 1121 00f0 13       		.uleb128 0x13
 1122 00f1 02       		.uleb128 0x2
 1123 00f2 17       		.uleb128 0x17
 1124 00f3 00       		.byte	0
 1125 00f4 00       		.byte	0
 1126 00f5 10       		.uleb128 0x10
 1127 00f6 34       		.uleb128 0x34
 1128 00f7 00       		.byte	0
 1129 00f8 03       		.uleb128 0x3
 1130 00f9 0E       		.uleb128 0xe
 1131 00fa 3A       		.uleb128 0x3a
 1132 00fb 0B       		.uleb128 0xb
 1133 00fc 3B       		.uleb128 0x3b
 1134 00fd 0B       		.uleb128 0xb
 1135 00fe 49       		.uleb128 0x49
 1136 00ff 13       		.uleb128 0x13
 1137 0100 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 30


 1138 0101 18       		.uleb128 0x18
 1139 0102 00       		.byte	0
 1140 0103 00       		.byte	0
 1141 0104 11       		.uleb128 0x11
 1142 0105 898201   		.uleb128 0x4109
 1143 0108 00       		.byte	0
 1144 0109 11       		.uleb128 0x11
 1145 010a 01       		.uleb128 0x1
 1146 010b 31       		.uleb128 0x31
 1147 010c 13       		.uleb128 0x13
 1148 010d 00       		.byte	0
 1149 010e 00       		.byte	0
 1150 010f 12       		.uleb128 0x12
 1151 0110 2E       		.uleb128 0x2e
 1152 0111 01       		.byte	0x1
 1153 0112 3F       		.uleb128 0x3f
 1154 0113 19       		.uleb128 0x19
 1155 0114 03       		.uleb128 0x3
 1156 0115 0E       		.uleb128 0xe
 1157 0116 3A       		.uleb128 0x3a
 1158 0117 0B       		.uleb128 0xb
 1159 0118 3B       		.uleb128 0x3b
 1160 0119 05       		.uleb128 0x5
 1161 011a 27       		.uleb128 0x27
 1162 011b 19       		.uleb128 0x19
 1163 011c 11       		.uleb128 0x11
 1164 011d 01       		.uleb128 0x1
 1165 011e 12       		.uleb128 0x12
 1166 011f 06       		.uleb128 0x6
 1167 0120 40       		.uleb128 0x40
 1168 0121 18       		.uleb128 0x18
 1169 0122 9742     		.uleb128 0x2117
 1170 0124 19       		.uleb128 0x19
 1171 0125 00       		.byte	0
 1172 0126 00       		.byte	0
 1173 0127 13       		.uleb128 0x13
 1174 0128 34       		.uleb128 0x34
 1175 0129 00       		.byte	0
 1176 012a 03       		.uleb128 0x3
 1177 012b 0E       		.uleb128 0xe
 1178 012c 3A       		.uleb128 0x3a
 1179 012d 0B       		.uleb128 0xb
 1180 012e 3B       		.uleb128 0x3b
 1181 012f 05       		.uleb128 0x5
 1182 0130 49       		.uleb128 0x49
 1183 0131 13       		.uleb128 0x13
 1184 0132 02       		.uleb128 0x2
 1185 0133 17       		.uleb128 0x17
 1186 0134 00       		.byte	0
 1187 0135 00       		.byte	0
 1188 0136 14       		.uleb128 0x14
 1189 0137 34       		.uleb128 0x34
 1190 0138 00       		.byte	0
 1191 0139 03       		.uleb128 0x3
 1192 013a 0E       		.uleb128 0xe
 1193 013b 3A       		.uleb128 0x3a
 1194 013c 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 31


 1195 013d 3B       		.uleb128 0x3b
 1196 013e 05       		.uleb128 0x5
 1197 013f 49       		.uleb128 0x49
 1198 0140 13       		.uleb128 0x13
 1199 0141 02       		.uleb128 0x2
 1200 0142 18       		.uleb128 0x18
 1201 0143 00       		.byte	0
 1202 0144 00       		.byte	0
 1203 0145 00       		.byte	0
 1204              		.section	.debug_loc,"",%progbits
 1205              	.Ldebug_loc0:
 1206              	.LLST0:
 1207 0000 2A000000 		.4byte	.LVL0
 1208 0004 5A000000 		.4byte	.LVL1
 1209 0008 0100     		.2byte	0x1
 1210 000a 52       		.byte	0x52
 1211 000b 00000000 		.4byte	0
 1212 000f 00000000 		.4byte	0
 1213              	.LLST1:
 1214 0013 00000000 		.4byte	.LVL3
 1215 0017 08000000 		.4byte	.LVL4
 1216 001b 0100     		.2byte	0x1
 1217 001d 50       		.byte	0x50
 1218 001e 08000000 		.4byte	.LVL4
 1219 0022 14000000 		.4byte	.LFE6
 1220 0026 0400     		.2byte	0x4
 1221 0028 F3       		.byte	0xf3
 1222 0029 01       		.uleb128 0x1
 1223 002a 50       		.byte	0x50
 1224 002b 9F       		.byte	0x9f
 1225 002c 00000000 		.4byte	0
 1226 0030 00000000 		.4byte	0
 1227              	.LLST2:
 1228 0034 00000000 		.4byte	.LVL5
 1229 0038 06000000 		.4byte	.LVL6
 1230 003c 0100     		.2byte	0x1
 1231 003e 50       		.byte	0x50
 1232 003f 06000000 		.4byte	.LVL6
 1233 0043 18000000 		.4byte	.LFE7
 1234 0047 0400     		.2byte	0x4
 1235 0049 F3       		.byte	0xf3
 1236 004a 01       		.uleb128 0x1
 1237 004b 50       		.byte	0x50
 1238 004c 9F       		.byte	0x9f
 1239 004d 00000000 		.4byte	0
 1240 0051 00000000 		.4byte	0
 1241              	.LLST3:
 1242 0055 00000000 		.4byte	.LVL7
 1243 0059 09000000 		.4byte	.LVL8-1
 1244 005d 0100     		.2byte	0x1
 1245 005f 50       		.byte	0x50
 1246 0060 09000000 		.4byte	.LVL8-1
 1247 0064 D8000000 		.4byte	.LFE4
 1248 0068 0400     		.2byte	0x4
 1249 006a F3       		.byte	0xf3
 1250 006b 01       		.uleb128 0x1
 1251 006c 50       		.byte	0x50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 32


 1252 006d 9F       		.byte	0x9f
 1253 006e 00000000 		.4byte	0
 1254 0072 00000000 		.4byte	0
 1255              	.LLST4:
 1256 0076 00000000 		.4byte	.LVL7
 1257 007a 09000000 		.4byte	.LVL8-1
 1258 007e 0100     		.2byte	0x1
 1259 0080 51       		.byte	0x51
 1260 0081 09000000 		.4byte	.LVL8-1
 1261 0085 D8000000 		.4byte	.LFE4
 1262 0089 0400     		.2byte	0x4
 1263 008b F3       		.byte	0xf3
 1264 008c 01       		.uleb128 0x1
 1265 008d 51       		.byte	0x51
 1266 008e 9F       		.byte	0x9f
 1267 008f 00000000 		.4byte	0
 1268 0093 00000000 		.4byte	0
 1269              	.LLST5:
 1270 0097 1C000000 		.4byte	.LVL11
 1271 009b 2A000000 		.4byte	.LVL12
 1272 009f 0100     		.2byte	0x1
 1273 00a1 52       		.byte	0x52
 1274 00a2 34000000 		.4byte	.LVL13
 1275 00a6 36000000 		.4byte	.LVL14
 1276 00aa 0100     		.2byte	0x1
 1277 00ac 52       		.byte	0x52
 1278 00ad 36000000 		.4byte	.LVL14
 1279 00b1 38000000 		.4byte	.LVL15
 1280 00b5 0500     		.2byte	0x5
 1281 00b7 73       		.byte	0x73
 1282 00b8 00       		.sleb128 0
 1283 00b9 31       		.byte	0x31
 1284 00ba 1A       		.byte	0x1a
 1285 00bb 9F       		.byte	0x9f
 1286 00bc 44000000 		.4byte	.LVL16
 1287 00c0 A2000000 		.4byte	.LVL18
 1288 00c4 0100     		.2byte	0x1
 1289 00c6 52       		.byte	0x52
 1290 00c7 A4000000 		.4byte	.LVL19
 1291 00cb A6000000 		.4byte	.LVL20
 1292 00cf 0100     		.2byte	0x1
 1293 00d1 52       		.byte	0x52
 1294 00d2 B6000000 		.4byte	.LVL21
 1295 00d6 C2000000 		.4byte	.LVL22
 1296 00da 0100     		.2byte	0x1
 1297 00dc 52       		.byte	0x52
 1298 00dd 00000000 		.4byte	0
 1299 00e1 00000000 		.4byte	0
 1300              	.LLST6:
 1301 00e5 0C000000 		.4byte	.LVL9
 1302 00e9 4E000000 		.4byte	.LVL17
 1303 00ed 0100     		.2byte	0x1
 1304 00ef 54       		.byte	0x54
 1305 00f0 00000000 		.4byte	0
 1306 00f4 00000000 		.4byte	0
 1307              	.LLST7:
 1308 00f8 00000000 		.4byte	.LVL23
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 33


 1309 00fc 07000000 		.4byte	.LVL24-1
 1310 0100 0100     		.2byte	0x1
 1311 0102 50       		.byte	0x50
 1312 0103 07000000 		.4byte	.LVL24-1
 1313 0107 5C000000 		.4byte	.LFE9
 1314 010b 0400     		.2byte	0x4
 1315 010d F3       		.byte	0xf3
 1316 010e 01       		.uleb128 0x1
 1317 010f 50       		.byte	0x50
 1318 0110 9F       		.byte	0x9f
 1319 0111 00000000 		.4byte	0
 1320 0115 00000000 		.4byte	0
 1321              	.LLST8:
 1322 0119 0A000000 		.4byte	.LVL25
 1323 011d 56000000 		.4byte	.LVL29
 1324 0121 0100     		.2byte	0x1
 1325 0123 55       		.byte	0x55
 1326 0124 00000000 		.4byte	0
 1327 0128 00000000 		.4byte	0
 1328              		.section	.debug_aranges,"",%progbits
 1329 0000 6C000000 		.4byte	0x6c
 1330 0004 0200     		.2byte	0x2
 1331 0006 00000000 		.4byte	.Ldebug_info0
 1332 000a 04       		.byte	0x4
 1333 000b 00       		.byte	0
 1334 000c 0000     		.2byte	0
 1335 000e 0000     		.2byte	0
 1336 0010 00000000 		.4byte	.LFB0
 1337 0014 1C000000 		.4byte	.LFE0-.LFB0
 1338 0018 00000000 		.4byte	.LFB1
 1339 001c 1C000000 		.4byte	.LFE1-.LFB1
 1340 0020 00000000 		.4byte	.LFB2
 1341 0024 6C000000 		.4byte	.LFE2-.LFB2
 1342 0028 00000000 		.4byte	.LFB3
 1343 002c 20000000 		.4byte	.LFE3-.LFB3
 1344 0030 00000000 		.4byte	.LFB5
 1345 0034 0C000000 		.4byte	.LFE5-.LFB5
 1346 0038 00000000 		.4byte	.LFB6
 1347 003c 14000000 		.4byte	.LFE6-.LFB6
 1348 0040 00000000 		.4byte	.LFB7
 1349 0044 18000000 		.4byte	.LFE7-.LFB7
 1350 0048 00000000 		.4byte	.LFB8
 1351 004c 10000000 		.4byte	.LFE8-.LFB8
 1352 0050 00000000 		.4byte	.LFB10
 1353 0054 10000000 		.4byte	.LFE10-.LFB10
 1354 0058 00000000 		.4byte	.LFB4
 1355 005c D8000000 		.4byte	.LFE4-.LFB4
 1356 0060 00000000 		.4byte	.LFB9
 1357 0064 5C000000 		.4byte	.LFE9-.LFB9
 1358 0068 00000000 		.4byte	0
 1359 006c 00000000 		.4byte	0
 1360              		.section	.debug_ranges,"",%progbits
 1361              	.Ldebug_ranges0:
 1362 0000 00000000 		.4byte	.LFB0
 1363 0004 1C000000 		.4byte	.LFE0
 1364 0008 00000000 		.4byte	.LFB1
 1365 000c 1C000000 		.4byte	.LFE1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 34


 1366 0010 00000000 		.4byte	.LFB2
 1367 0014 6C000000 		.4byte	.LFE2
 1368 0018 00000000 		.4byte	.LFB3
 1369 001c 20000000 		.4byte	.LFE3
 1370 0020 00000000 		.4byte	.LFB5
 1371 0024 0C000000 		.4byte	.LFE5
 1372 0028 00000000 		.4byte	.LFB6
 1373 002c 14000000 		.4byte	.LFE6
 1374 0030 00000000 		.4byte	.LFB7
 1375 0034 18000000 		.4byte	.LFE7
 1376 0038 00000000 		.4byte	.LFB8
 1377 003c 10000000 		.4byte	.LFE8
 1378 0040 00000000 		.4byte	.LFB10
 1379 0044 10000000 		.4byte	.LFE10
 1380 0048 00000000 		.4byte	.LFB4
 1381 004c D8000000 		.4byte	.LFE4
 1382 0050 00000000 		.4byte	.LFB9
 1383 0054 5C000000 		.4byte	.LFE9
 1384 0058 00000000 		.4byte	0
 1385 005c 00000000 		.4byte	0
 1386              		.section	.debug_line,"",%progbits
 1387              	.Ldebug_line0:
 1388 0000 98010000 		.section	.debug_str,"MS",%progbits,1
 1388      02006A00 
 1388      00000201 
 1388      FB0E0D00 
 1388      01010101 
 1389              	.LASF30:
 1390 0000 6F6C6444 		.ascii	"oldDivider\000"
 1390      69766964 
 1390      657200
 1391              	.LASF34:
 1392 000b 63757272 		.ascii	"currDiv\000"
 1392      44697600 
 1393              	.LASF15:
 1394 0013 72656731 		.ascii	"reg16\000"
 1394      3600
 1395              	.LASF2:
 1396 0019 73686F72 		.ascii	"short int\000"
 1396      7420696E 
 1396      7400
 1397              	.LASF27:
 1398 0023 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_SetDividerRegister\000"
 1398      455F4144 
 1398      435F4578 
 1398      745F4350 
 1398      5F436C6B 
 1399              	.LASF25:
 1400 004b 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_GetModeRegister\000"
 1400      455F4144 
 1400      435F4578 
 1400      745F4350 
 1400      5F436C6B 
 1401              	.LASF16:
 1402 0070 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_Start\000"
 1402      455F4144 
 1402      435F4578 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 35


 1402      745F4350 
 1402      5F436C6B 
 1403              	.LASF10:
 1404 008b 75696E74 		.ascii	"uint16\000"
 1404      313600
 1405              	.LASF29:
 1406 0092 72657374 		.ascii	"restart\000"
 1406      61727400 
 1407              	.LASF35:
 1408 009a 6F6C6453 		.ascii	"oldSrc\000"
 1408      726300
 1409              	.LASF9:
 1410 00a1 75696E74 		.ascii	"uint8\000"
 1410      3800
 1411              	.LASF28:
 1412 00a7 636C6B44 		.ascii	"clkDivider\000"
 1412      69766964 
 1412      657200
 1413              	.LASF26:
 1414 00b2 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_GetSourceRegister\000"
 1414      455F4144 
 1414      435F4578 
 1414      745F4350 
 1414      5F436C6B 
 1415              	.LASF11:
 1416 00d9 666C6F61 		.ascii	"float\000"
 1416      7400
 1417              	.LASF6:
 1418 00df 6C6F6E67 		.ascii	"long long int\000"
 1418      206C6F6E 
 1418      6720696E 
 1418      7400
 1419              	.LASF4:
 1420 00ed 6C6F6E67 		.ascii	"long int\000"
 1420      20696E74 
 1420      00
 1421              	.LASF21:
 1422 00f6 73746174 		.ascii	"state\000"
 1422      6500
 1423              	.LASF1:
 1424 00fc 756E7369 		.ascii	"unsigned char\000"
 1424      676E6564 
 1424      20636861 
 1424      7200
 1425              	.LASF22:
 1426 010a 6D6F6465 		.ascii	"modeBitMask\000"
 1426      4269744D 
 1426      61736B00 
 1427              	.LASF0:
 1428 0116 7369676E 		.ascii	"signed char\000"
 1428      65642063 
 1428      68617200 
 1429              	.LASF7:
 1430 0122 6C6F6E67 		.ascii	"long long unsigned int\000"
 1430      206C6F6E 
 1430      6720756E 
 1430      7369676E 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 36


 1430      65642069 
 1431              	.LASF23:
 1432 0139 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_ClearModeRegister\000"
 1432      455F4144 
 1432      435F4578 
 1432      745F4350 
 1432      5F436C6B 
 1433              	.LASF8:
 1434 0160 756E7369 		.ascii	"unsigned int\000"
 1434      676E6564 
 1434      20696E74 
 1434      00
 1435              	.LASF3:
 1436 016d 73686F72 		.ascii	"short unsigned int\000"
 1436      7420756E 
 1436      7369676E 
 1436      65642069 
 1436      6E7400
 1437              	.LASF13:
 1438 0180 63686172 		.ascii	"char\000"
 1438      00
 1439              	.LASF38:
 1440 0185 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\FSAE\\E-Throttle\\P"
 1440      73657273 
 1440      5C6D6974 
 1440      6368656C 
 1440      6C5C446F 
 1441 01b2 536F435C 		.ascii	"SoC\\E-Throttle.cydsn\000"
 1441      452D5468 
 1441      726F7474 
 1441      6C652E63 
 1441      7964736E 
 1442              	.LASF36:
 1443 01c7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1443      4320342E 
 1443      392E3320 
 1443      32303135 
 1443      30333033 
 1444 01fa 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1444      20726576 
 1444      6973696F 
 1444      6E203232 
 1444      31323230 
 1445 022d 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1445      66756E63 
 1445      74696F6E 
 1445      2D736563 
 1445      74696F6E 
 1446              	.LASF33:
 1447 0255 636C6B53 		.ascii	"clkSource\000"
 1447      6F757263 
 1447      6500
 1448              	.LASF32:
 1449 025f 63757272 		.ascii	"currSrc\000"
 1449      53726300 
 1450              	.LASF18:
 1451 0267 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_StopBlock\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccfSpJJr.s 			page 37


 1451      455F4144 
 1451      435F4578 
 1451      745F4350 
 1451      5F436C6B 
 1452              	.LASF24:
 1453 0286 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_GetDividerRegister\000"
 1453      455F4144 
 1453      435F4578 
 1453      745F4350 
 1453      5F436C6B 
 1454              	.LASF14:
 1455 02ae 72656738 		.ascii	"reg8\000"
 1455      00
 1456              	.LASF5:
 1457 02b3 6C6F6E67 		.ascii	"long unsigned int\000"
 1457      20756E73 
 1457      69676E65 
 1457      6420696E 
 1457      7400
 1458              	.LASF12:
 1459 02c5 646F7562 		.ascii	"double\000"
 1459      6C6500
 1460              	.LASF39:
 1461 02cc 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_SetSourceRegister\000"
 1461      455F4144 
 1461      435F4578 
 1461      745F4350 
 1461      5F436C6B 
 1462              	.LASF31:
 1463 02f3 656E6162 		.ascii	"enabled\000"
 1463      6C656400 
 1464              	.LASF19:
 1465 02fb 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_StandbyPower\000"
 1465      455F4144 
 1465      435F4578 
 1465      745F4350 
 1465      5F436C6B 
 1466              	.LASF17:
 1467 031d 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_Stop\000"
 1467      455F4144 
 1467      435F4578 
 1467      745F4350 
 1467      5F436C6B 
 1468              	.LASF20:
 1469 0337 4252414B 		.ascii	"BRAKE_ADC_Ext_CP_Clk_SetModeRegister\000"
 1469      455F4144 
 1469      435F4578 
 1469      745F4350 
 1469      5F436C6B 
 1470              	.LASF37:
 1471 035c 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\BRAKE_ADC_Ext_CP_Clk.c\000"
 1471      6E657261 
 1471      7465645F 
 1471      536F7572 
 1471      63655C50 
 1472              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
