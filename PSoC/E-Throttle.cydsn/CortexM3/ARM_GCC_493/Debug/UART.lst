ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_Init,"ax",%progbits
  19              		.align	2
  20              		.global	UART_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_Init, %function
  24              	UART_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART.c"
   1:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART.c **** *
   5:.\Generated_Source\PSoC5/UART.c **** * Description:
   6:.\Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART.c **** *
   8:.\Generated_Source\PSoC5/UART.c **** * Note:
   9:.\Generated_Source\PSoC5/UART.c **** *
  10:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART.c **** 
  17:.\Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:.\Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:.\Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART.c **** 
  22:.\Generated_Source\PSoC5/UART.c **** 
  23:.\Generated_Source\PSoC5/UART.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART.c **** 
  27:.\Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART.c **** 
  29:.\Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 2


  32:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART.c **** 
  35:.\Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART.c **** 
  48:.\Generated_Source\PSoC5/UART.c **** 
  49:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART.c **** *
  53:.\Generated_Source\PSoC5/UART.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:.\Generated_Source\PSoC5/UART.c **** *
  59:.\Generated_Source\PSoC5/UART.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART.c **** *  None.
  61:.\Generated_Source\PSoC5/UART.c **** *
  62:.\Generated_Source\PSoC5/UART.c **** * Return:
  63:.\Generated_Source\PSoC5/UART.c **** *  None.
  64:.\Generated_Source\PSoC5/UART.c **** *
  65:.\Generated_Source\PSoC5/UART.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:.\Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:.\Generated_Source\PSoC5/UART.c **** *
  72:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART.c **** *  No.
  74:.\Generated_Source\PSoC5/UART.c **** *
  75:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:.\Generated_Source\PSoC5/UART.c **** {
  78:.\Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:.\Generated_Source\PSoC5/UART.c ****     {
  81:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:.\Generated_Source\PSoC5/UART.c ****     }
  84:.\Generated_Source\PSoC5/UART.c **** 
  85:.\Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:.\Generated_Source\PSoC5/UART.c **** }
  87:.\Generated_Source\PSoC5/UART.c **** 
  88:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 3


  89:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART.c **** *
  93:.\Generated_Source\PSoC5/UART.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:.\Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART.c **** *
  99:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART.c **** *  None.
 101:.\Generated_Source\PSoC5/UART.c **** *
 102:.\Generated_Source\PSoC5/UART.c **** * Return:
 103:.\Generated_Source\PSoC5/UART.c **** *  None.
 104:.\Generated_Source\PSoC5/UART.c **** *
 105:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:.\Generated_Source\PSoC5/UART.c **** {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 108:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART.c **** 
 110:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART.c **** 
 117:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART.c **** 
 123:.\Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  32              		.loc 1 124 0
  33 0000 7222     		movs	r2, #114
  34 0002 084B     		ldr	r3, .L2
  35 0004 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  36              		.loc 1 126 0
  37 0006 2022     		movs	r2, #32
  38 0008 073B     		subs	r3, r3, #7
  39 000a 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART.c **** 
 129:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 4


 133:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART.c **** 
 136:.\Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  40              		.loc 1 138 0
  41 000c 0622     		movs	r2, #6
  42 000e A3F5AC73 		sub	r3, r3, #344
  43 0012 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  44              		.loc 1 139 0
  45 0014 4722     		movs	r2, #71
  46 0016 1033     		adds	r3, r3, #16
  47 0018 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART.c ****         #else
 142:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART.c **** 
 146:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART.c ****         #else
 150:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
  48              		.loc 1 150 0
  49 001a 0022     		movs	r2, #0
  50 001c 4C33     		adds	r3, r3, #76
  51 001e 1A70     		strb	r2, [r3]
  52 0020 7047     		bx	lr
  53              	.L3:
  54 0022 00BF     		.align	2
  55              	.L2:
  56 0024 8B650040 		.word	1073767819
  57              		.cfi_endproc
  58              	.LFE1:
  59              		.size	UART_Init, .-UART_Init
  60              		.section	.text.UART_Enable,"ax",%progbits
  61              		.align	2
  62              		.global	UART_Enable
  63              		.thumb
  64              		.thumb_func
  65              		.type	UART_Enable, %function
  66              	UART_Enable:
  67              	.LFB2:
 151:.\Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART.c **** 
 153:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART.c **** 
 155:.\Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART.c **** }
 161:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 5


 162:.\Generated_Source\PSoC5/UART.c **** 
 163:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART.c **** *
 167:.\Generated_Source\PSoC5/UART.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:.\Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART.c **** 
 173:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART.c **** *  None.
 175:.\Generated_Source\PSoC5/UART.c **** *
 176:.\Generated_Source\PSoC5/UART.c **** * Return:
 177:.\Generated_Source\PSoC5/UART.c **** *  None.
 178:.\Generated_Source\PSoC5/UART.c **** *
 179:.\Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART.c **** *
 182:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:.\Generated_Source\PSoC5/UART.c **** {
  68              		.loc 1 184 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 10B5     		push	{r4, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 4, -8
  75              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  76              		.loc 1 186 0
  77 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  78              	.LVL0:
  79 0006 0446     		mov	r4, r0
  80              	.LVL1:
 187:.\Generated_Source\PSoC5/UART.c **** 
 188:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  81              		.loc 1 190 0
  82 0008 0A4A     		ldr	r2, .L6
  83 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  84 000c 43F02003 		orr	r3, r3, #32
  85 0010 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/UART.c **** 
 192:.\Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
  86              		.loc 1 193 0
  87 0012 073A     		subs	r2, r2, #7
  88 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  89 0016 43F01003 		orr	r3, r3, #16
  90 001a 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/UART.c **** 
 195:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 6


 196:.\Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:.\Generated_Source\PSoC5/UART.c **** 
 198:.\Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART.c **** 
 204:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART.c **** 
 210:.\Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
  91              		.loc 1 211 0
  92 001c FC3A     		subs	r2, r2, #252
  93 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  94 0020 43F01003 		orr	r3, r3, #16
  95 0024 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART.c **** 
 218:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
  96              		.loc 1 219 0
  97 0026 FFF7FEFF 		bl	UART_IntClock_Start
  98              	.LVL2:
 220:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART.c **** 
 222:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
  99              		.loc 1 222 0
 100 002a 2046     		mov	r0, r4
 101 002c FFF7FEFF 		bl	CyExitCriticalSection
 102              	.LVL3:
 103 0030 10BD     		pop	{r4, pc}
 104              	.LVL4:
 105              	.L7:
 106 0032 00BF     		.align	2
 107              	.L6:
 108 0034 9B650040 		.word	1073767835
 109              		.cfi_endproc
 110              	.LFE2:
 111              		.size	UART_Enable, .-UART_Enable
 112              		.section	.text.UART_Start,"ax",%progbits
 113              		.align	2
 114              		.global	UART_Start
 115              		.thumb
 116              		.thumb_func
 117              		.type	UART_Start, %function
 118              	UART_Start:
 119              	.LFB0:
  77:.\Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 7


 120              		.loc 1 77 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124 0000 08B5     		push	{r3, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 3, -8
 127              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC5/UART.c ****     {
 128              		.loc 1 79 0
 129 0002 054B     		ldr	r3, .L11
 130 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131 0006 23B9     		cbnz	r3, .L9
  81:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 132              		.loc 1 81 0
 133 0008 FFF7FEFF 		bl	UART_Init
 134              	.LVL5:
  82:.\Generated_Source\PSoC5/UART.c ****     }
 135              		.loc 1 82 0
 136 000c 0122     		movs	r2, #1
 137 000e 024B     		ldr	r3, .L11
 138 0010 1A70     		strb	r2, [r3]
 139              	.L9:
  85:.\Generated_Source\PSoC5/UART.c **** }
 140              		.loc 1 85 0
 141 0012 FFF7FEFF 		bl	UART_Enable
 142              	.LVL6:
 143 0016 08BD     		pop	{r3, pc}
 144              	.L12:
 145              		.align	2
 146              	.L11:
 147 0018 00000000 		.word	.LANCHOR0
 148              		.cfi_endproc
 149              	.LFE0:
 150              		.size	UART_Start, .-UART_Start
 151              		.section	.text.UART_Stop,"ax",%progbits
 152              		.align	2
 153              		.global	UART_Stop
 154              		.thumb
 155              		.thumb_func
 156              		.type	UART_Stop, %function
 157              	UART_Stop:
 158              	.LFB3:
 223:.\Generated_Source\PSoC5/UART.c **** }
 224:.\Generated_Source\PSoC5/UART.c **** 
 225:.\Generated_Source\PSoC5/UART.c **** 
 226:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART.c **** *
 230:.\Generated_Source\PSoC5/UART.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART.c **** *
 233:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART.c **** *  None.
 235:.\Generated_Source\PSoC5/UART.c **** *
 236:.\Generated_Source\PSoC5/UART.c **** * Return:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 8


 237:.\Generated_Source\PSoC5/UART.c **** *  None.
 238:.\Generated_Source\PSoC5/UART.c **** *
 239:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:.\Generated_Source\PSoC5/UART.c **** {
 159              		.loc 1 241 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163 0000 10B5     		push	{r4, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 167              		.loc 1 243 0
 168 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 169              	.LVL7:
 170 0006 0446     		mov	r4, r0
 171              	.LVL8:
 244:.\Generated_Source\PSoC5/UART.c **** 
 245:.\Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 172              		.loc 1 247 0
 173 0008 0A4A     		ldr	r2, .L15
 174 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 175 000c 03F0DF03 		and	r3, r3, #223
 176 0010 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART.c **** 
 250:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART.c **** 
 256:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 177              		.loc 1 257 0
 178 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 179              	.LVL9:
 258:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART.c **** 
 260:.\Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 180              		.loc 1 262 0
 181 0016 084A     		ldr	r2, .L15+4
 182 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 183 001a 03F0EF03 		and	r3, r3, #239
 184 001e 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/UART.c **** 
 264:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 9


 268:.\Generated_Source\PSoC5/UART.c **** 
 269:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 185              		.loc 1 270 0
 186 0020 FC3A     		subs	r2, r2, #252
 187 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 188 0024 03F0EF03 		and	r3, r3, #239
 189 0028 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/UART.c **** 
 272:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART.c **** 
 277:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 190              		.loc 1 277 0
 191 002a 2046     		mov	r0, r4
 192 002c FFF7FEFF 		bl	CyExitCriticalSection
 193              	.LVL10:
 194 0030 10BD     		pop	{r4, pc}
 195              	.LVL11:
 196              	.L16:
 197 0032 00BF     		.align	2
 198              	.L15:
 199 0034 9B650040 		.word	1073767835
 200 0038 94650040 		.word	1073767828
 201              		.cfi_endproc
 202              	.LFE3:
 203              		.size	UART_Stop, .-UART_Stop
 204              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 205              		.align	2
 206              		.global	UART_ReadControlRegister
 207              		.thumb
 208              		.thumb_func
 209              		.type	UART_ReadControlRegister, %function
 210              	UART_ReadControlRegister:
 211              	.LFB4:
 278:.\Generated_Source\PSoC5/UART.c **** }
 279:.\Generated_Source\PSoC5/UART.c **** 
 280:.\Generated_Source\PSoC5/UART.c **** 
 281:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART.c **** *
 285:.\Generated_Source\PSoC5/UART.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART.c **** *
 288:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART.c **** *  None.
 290:.\Generated_Source\PSoC5/UART.c **** *
 291:.\Generated_Source\PSoC5/UART.c **** * Return:
 292:.\Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART.c **** *
 294:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART.c **** {
 212              		.loc 1 296 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 10


 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 297:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART.c ****     #else
 300:.\Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART.c **** }
 217              		.loc 1 302 0
 218 0000 0020     		movs	r0, #0
 219 0002 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE4:
 222              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 223              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 224              		.align	2
 225              		.global	UART_WriteControlRegister
 226              		.thumb
 227              		.thumb_func
 228              		.type	UART_WriteControlRegister, %function
 229              	UART_WriteControlRegister:
 230              	.LFB5:
 303:.\Generated_Source\PSoC5/UART.c **** 
 304:.\Generated_Source\PSoC5/UART.c **** 
 305:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART.c **** *
 309:.\Generated_Source\PSoC5/UART.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART.c **** *
 312:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART.c **** *
 315:.\Generated_Source\PSoC5/UART.c **** * Return:
 316:.\Generated_Source\PSoC5/UART.c **** *  None.
 317:.\Generated_Source\PSoC5/UART.c **** *
 318:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART.c **** {
 231              		.loc 1 320 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL12:
 237 0000 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE5:
 240              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 241 0002 00BF     		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 242              		.align	2
 243              		.global	UART_SetRxInterruptMode
 244              		.thumb
 245              		.thumb_func
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 11


 246              		.type	UART_SetRxInterruptMode, %function
 247              	UART_SetRxInterruptMode:
 248              	.LFB6:
 321:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART.c ****         {
 324:.\Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART.c ****         }
 326:.\Generated_Source\PSoC5/UART.c ****     #else
 327:.\Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART.c **** }
 330:.\Generated_Source\PSoC5/UART.c **** 
 331:.\Generated_Source\PSoC5/UART.c **** 
 332:.\Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART.c ****     *
 337:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART.c ****     *
 340:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART.c ****     *
 352:.\Generated_Source\PSoC5/UART.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART.c ****     *
 355:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART.c ****     *
 358:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART.c ****     {
 249              		.loc 1 360 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL13:
 361:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 255              		.loc 1 361 0
 256 0000 014B     		ldr	r3, .L20
 257 0002 1870     		strb	r0, [r3]
 258 0004 7047     		bx	lr
 259              	.L21:
 260 0006 00BF     		.align	2
 261              	.L20:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 12


 262 0008 84650040 		.word	1073767812
 263              		.cfi_endproc
 264              	.LFE6:
 265              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 266              		.section	.text.UART_ReadRxData,"ax",%progbits
 267              		.align	2
 268              		.global	UART_ReadRxData
 269              		.thumb
 270              		.thumb_func
 271              		.type	UART_ReadRxData, %function
 272              	UART_ReadRxData:
 273              	.LFB7:
 362:.\Generated_Source\PSoC5/UART.c ****     }
 363:.\Generated_Source\PSoC5/UART.c **** 
 364:.\Generated_Source\PSoC5/UART.c **** 
 365:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART.c ****     *
 369:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART.c ****     *
 373:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART.c ****     *
 376:.\Generated_Source\PSoC5/UART.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART.c ****     *
 379:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART.c ****     *
 388:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART.c ****     *
 391:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART.c ****     {
 274              		.loc 1 393 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 394:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART.c **** 
 396:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART.c **** 
 398:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART.c **** 
 401:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 13


 402:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:.\Generated_Source\PSoC5/UART.c **** 
 404:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:.\Generated_Source\PSoC5/UART.c **** 
 407:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/UART.c ****         {
 409:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC5/UART.c **** 
 412:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/UART.c ****             {
 414:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/UART.c ****             }
 416:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/UART.c **** 
 419:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/UART.c ****             {
 421:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART.c ****                             */
 430:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART.c ****                         }
 432:.\Generated_Source\PSoC5/UART.c ****                     #else
 433:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART.c ****             }
 437:.\Generated_Source\PSoC5/UART.c ****         }
 438:.\Generated_Source\PSoC5/UART.c ****         else
 439:.\Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:.\Generated_Source\PSoC5/UART.c ****         }
 442:.\Generated_Source\PSoC5/UART.c **** 
 443:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:.\Generated_Source\PSoC5/UART.c **** 
 445:.\Generated_Source\PSoC5/UART.c ****     #else
 446:.\Generated_Source\PSoC5/UART.c **** 
 447:.\Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 279              		.loc 1 448 0
 280 0000 014B     		ldr	r3, .L23
 281 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 282              	.LVL14:
 449:.\Generated_Source\PSoC5/UART.c **** 
 450:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART.c **** 
 452:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:.\Generated_Source\PSoC5/UART.c ****     }
 283              		.loc 1 453 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 14


 284 0004 7047     		bx	lr
 285              	.L24:
 286 0006 00BF     		.align	2
 287              	.L23:
 288 0008 48650040 		.word	1073767752
 289              		.cfi_endproc
 290              	.LFE7:
 291              		.size	UART_ReadRxData, .-UART_ReadRxData
 292              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 293              		.align	2
 294              		.global	UART_ReadRxStatus
 295              		.thumb
 296              		.thumb_func
 297              		.type	UART_ReadRxStatus, %function
 298              	UART_ReadRxStatus:
 299              	.LFB8:
 454:.\Generated_Source\PSoC5/UART.c **** 
 455:.\Generated_Source\PSoC5/UART.c **** 
 456:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART.c ****     *
 460:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART.c ****     *
 464:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART.c ****     *
 467:.\Generated_Source\PSoC5/UART.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART.c ****     *
 470:.\Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART.c ****     *
 476:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART.c ****     *
 484:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART.c ****     {
 300              		.loc 1 486 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 487:.\Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART.c **** 
 489:.\Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 15


 305              		.loc 1 489 0
 306 0000 024B     		ldr	r3, .L26
 307 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 308              	.LVL15:
 490:.\Generated_Source\PSoC5/UART.c **** 
 491:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/UART.c ****         {
 494:.\Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/UART.c ****         }
 497:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART.c **** 
 499:.\Generated_Source\PSoC5/UART.c ****         return(status);
 500:.\Generated_Source\PSoC5/UART.c ****     }
 309              		.loc 1 500 0
 310 0004 00F07F00 		and	r0, r0, #127
 311              	.LVL16:
 312 0008 7047     		bx	lr
 313              	.L27:
 314 000a 00BF     		.align	2
 315              	.L26:
 316 000c 64650040 		.word	1073767780
 317              		.cfi_endproc
 318              	.LFE8:
 319              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 320              		.section	.text.UART_GetChar,"ax",%progbits
 321              		.align	2
 322              		.global	UART_GetChar
 323              		.thumb
 324              		.thumb_func
 325              		.type	UART_GetChar, %function
 326              	UART_GetChar:
 327              	.LFB9:
 501:.\Generated_Source\PSoC5/UART.c **** 
 502:.\Generated_Source\PSoC5/UART.c **** 
 503:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART.c ****     *
 507:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:.\Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART.c ****     *
 512:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART.c ****     *
 515:.\Generated_Source\PSoC5/UART.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART.c ****     *
 519:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 16


 524:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART.c ****     *
 528:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART.c ****     *
 531:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART.c ****     {
 328              		.loc 1 533 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333              	.LVL17:
 534:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART.c **** 
 537:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART.c **** 
 541:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:.\Generated_Source\PSoC5/UART.c **** 
 544:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:.\Generated_Source\PSoC5/UART.c **** 
 547:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC5/UART.c ****         {
 549:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/UART.c ****             {
 553:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/UART.c ****             }
 555:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/UART.c **** 
 558:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/UART.c ****             {
 560:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART.c ****                             */
 569:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART.c ****                         }
 571:.\Generated_Source\PSoC5/UART.c ****                     #else
 572:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 17


 575:.\Generated_Source\PSoC5/UART.c ****             }
 576:.\Generated_Source\PSoC5/UART.c **** 
 577:.\Generated_Source\PSoC5/UART.c ****         }
 578:.\Generated_Source\PSoC5/UART.c ****         else
 579:.\Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:.\Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART.c ****                 {
 587:.\Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/UART.c ****                 }
 589:.\Generated_Source\PSoC5/UART.c ****             }
 590:.\Generated_Source\PSoC5/UART.c ****         }
 591:.\Generated_Source\PSoC5/UART.c **** 
 592:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:.\Generated_Source\PSoC5/UART.c **** 
 594:.\Generated_Source\PSoC5/UART.c ****     #else
 595:.\Generated_Source\PSoC5/UART.c **** 
 596:.\Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 334              		.loc 1 596 0
 335 0000 084B     		ldr	r3, .L32
 336 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 337 0004 DBB2     		uxtb	r3, r3
 338              	.LVL18:
 597:.\Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 339              		.loc 1 597 0
 340 0006 13F0200F 		tst	r3, #32
 341 000a 06D0     		beq	.L30
 598:.\Generated_Source\PSoC5/UART.c ****         {
 599:.\Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 342              		.loc 1 600 0
 343 000c 064A     		ldr	r2, .L32+4
 344 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 345 0010 C0B2     		uxtb	r0, r0
 346              	.LVL19:
 601:.\Generated_Source\PSoC5/UART.c **** 
 602:.\Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 347              		.loc 1 603 0
 348 0012 13F01E0F 		tst	r3, #30
 349 0016 02D1     		bne	.L31
 350 0018 7047     		bx	lr
 351              	.LVL20:
 352              	.L30:
 534:.\Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 353              		.loc 1 534 0
 354 001a 0020     		movs	r0, #0
 355 001c 7047     		bx	lr
 356              	.LVL21:
 357              	.L31:
 604:.\Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART.c ****             {
 606:.\Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 18


 358              		.loc 1 606 0
 359 001e 0020     		movs	r0, #0
 360              	.LVL22:
 607:.\Generated_Source\PSoC5/UART.c ****             }
 608:.\Generated_Source\PSoC5/UART.c ****         }
 609:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART.c **** 
 611:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:.\Generated_Source\PSoC5/UART.c ****     }
 361              		.loc 1 612 0
 362 0020 7047     		bx	lr
 363              	.L33:
 364 0022 00BF     		.align	2
 365              	.L32:
 366 0024 64650040 		.word	1073767780
 367 0028 48650040 		.word	1073767752
 368              		.cfi_endproc
 369              	.LFE9:
 370              		.size	UART_GetChar, .-UART_GetChar
 371              		.section	.text.UART_GetByte,"ax",%progbits
 372              		.align	2
 373              		.global	UART_GetByte
 374              		.thumb
 375              		.thumb_func
 376              		.type	UART_GetByte, %function
 377              	UART_GetByte:
 378              	.LFB10:
 613:.\Generated_Source\PSoC5/UART.c **** 
 614:.\Generated_Source\PSoC5/UART.c **** 
 615:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART.c ****     *
 619:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART.c ****     *
 623:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART.c ****     *
 626:.\Generated_Source\PSoC5/UART.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART.c ****     *
 630:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART.c ****     *
 633:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART.c ****     {
 379              		.loc 1 635 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 10B5     		push	{r4, lr}
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 4, -8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 19


 386              		.cfi_offset 14, -4
 636:.\Generated_Source\PSoC5/UART.c ****         
 637:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:.\Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:.\Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:.\Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:.\Generated_Source\PSoC5/UART.c ****     #else
 646:.\Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 387              		.loc 1 646 0
 388 0002 FFF7FEFF 		bl	UART_ReadRxStatus
 389              	.LVL23:
 390 0006 0402     		lsls	r4, r0, #8
 391 0008 FFF7FEFF 		bl	UART_ReadRxData
 392              	.LVL24:
 393 000c 2043     		orrs	r0, r0, r4
 647:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART.c ****         
 649:.\Generated_Source\PSoC5/UART.c ****     }
 394              		.loc 1 649 0
 395 000e 80B2     		uxth	r0, r0
 396 0010 10BD     		pop	{r4, pc}
 397              		.cfi_endproc
 398              	.LFE10:
 399              		.size	UART_GetByte, .-UART_GetByte
 400 0012 00BF     		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 401              		.align	2
 402              		.global	UART_GetRxBufferSize
 403              		.thumb
 404              		.thumb_func
 405              		.type	UART_GetRxBufferSize, %function
 406              	UART_GetRxBufferSize:
 407              	.LFB11:
 650:.\Generated_Source\PSoC5/UART.c **** 
 651:.\Generated_Source\PSoC5/UART.c **** 
 652:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART.c ****     *
 656:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART.c ****     *
 664:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART.c ****     *
 667:.\Generated_Source\PSoC5/UART.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 20


 671:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART.c ****     *
 676:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART.c ****     *
 679:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART.c ****     *
 682:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART.c ****                                                             
 685:.\Generated_Source\PSoC5/UART.c ****     {
 408              		.loc 1 685 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 686:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART.c **** 
 688:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART.c **** 
 690:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:.\Generated_Source\PSoC5/UART.c **** 
 693:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:.\Generated_Source\PSoC5/UART.c ****         {
 695:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/UART.c ****             {
 697:.\Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/UART.c ****             }
 699:.\Generated_Source\PSoC5/UART.c ****             else
 700:.\Generated_Source\PSoC5/UART.c ****             {
 701:.\Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART.c ****             }
 703:.\Generated_Source\PSoC5/UART.c ****         }
 704:.\Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART.c ****         {
 706:.\Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:.\Generated_Source\PSoC5/UART.c ****         }
 708:.\Generated_Source\PSoC5/UART.c ****         else
 709:.\Generated_Source\PSoC5/UART.c ****         {
 710:.\Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:.\Generated_Source\PSoC5/UART.c ****         }
 712:.\Generated_Source\PSoC5/UART.c **** 
 713:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:.\Generated_Source\PSoC5/UART.c **** 
 715:.\Generated_Source\PSoC5/UART.c ****     #else
 716:.\Generated_Source\PSoC5/UART.c **** 
 717:.\Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 413              		.loc 1 718 0
 414 0000 044B     		ldr	r3, .L39
 415 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 416 0004 13F0200F 		tst	r3, #32
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 21


 417 0008 01D0     		beq	.L38
 418 000a 0120     		movs	r0, #1
 419 000c 7047     		bx	lr
 420              	.L38:
 421 000e 0020     		movs	r0, #0
 422              	.LVL25:
 719:.\Generated_Source\PSoC5/UART.c **** 
 720:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART.c **** 
 722:.\Generated_Source\PSoC5/UART.c ****         return(size);
 723:.\Generated_Source\PSoC5/UART.c ****     }
 423              		.loc 1 723 0
 424 0010 7047     		bx	lr
 425              	.L40:
 426 0012 00BF     		.align	2
 427              	.L39:
 428 0014 64650040 		.word	1073767780
 429              		.cfi_endproc
 430              	.LFE11:
 431              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 432              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 433              		.align	2
 434              		.global	UART_ClearRxBuffer
 435              		.thumb
 436              		.thumb_func
 437              		.type	UART_ClearRxBuffer, %function
 438              	UART_ClearRxBuffer:
 439              	.LFB12:
 724:.\Generated_Source\PSoC5/UART.c **** 
 725:.\Generated_Source\PSoC5/UART.c **** 
 726:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART.c ****     *
 730:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART.c ****     *
 733:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART.c ****     *
 736:.\Generated_Source\PSoC5/UART.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART.c ****     *
 739:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART.c ****     *
 745:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART.c ****     *
 748:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 22


 753:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART.c ****     *
 756:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART.c ****     {
 440              		.loc 1 758 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 3, -8
 447              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART.c **** 
 761:.\Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 448              		.loc 1 762 0
 449 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 450              	.LVL26:
 763:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 451              		.loc 1 763 0
 452 0006 064B     		ldr	r3, .L43
 453 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 454 000a 42F00102 		orr	r2, r2, #1
 455 000e 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 456              		.loc 1 764 0
 457 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 458 0012 02F0FE02 		and	r2, r2, #254
 459 0016 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 460              		.loc 1 765 0
 461 0018 FFF7FEFF 		bl	CyExitCriticalSection
 462              	.LVL27:
 463 001c 08BD     		pop	{r3, pc}
 464              	.L44:
 465 001e 00BF     		.align	2
 466              	.L43:
 467 0020 98650040 		.word	1073767832
 468              		.cfi_endproc
 469              	.LFE12:
 470              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 471              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 472              		.align	2
 473              		.global	UART_SetRxAddressMode
 474              		.thumb
 475              		.thumb_func
 476              		.type	UART_SetRxAddressMode, %function
 477              	UART_SetRxAddressMode:
 478              	.LFB13:
 766:.\Generated_Source\PSoC5/UART.c **** 
 767:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART.c **** 
 769:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 23


 771:.\Generated_Source\PSoC5/UART.c **** 
 772:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC5/UART.c **** 
 777:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:.\Generated_Source\PSoC5/UART.c **** 
 779:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART.c **** 
 781:.\Generated_Source\PSoC5/UART.c ****     }
 782:.\Generated_Source\PSoC5/UART.c **** 
 783:.\Generated_Source\PSoC5/UART.c **** 
 784:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART.c ****     *
 788:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART.c ****     *
 792:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART.c ****     *
 804:.\Generated_Source\PSoC5/UART.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART.c ****     *
 807:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART.c ****     *
 812:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART.c ****                                                         
 815:.\Generated_Source\PSoC5/UART.c ****     {
 479              		.loc 1 815 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484              	.LVL28:
 485 0000 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE13:
 488              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 489 0002 00BF     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 490              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 24


 491              		.global	UART_SetRxAddress1
 492              		.thumb
 493              		.thumb_func
 494              		.type	UART_SetRxAddress1, %function
 495              	UART_SetRxAddress1:
 496              	.LFB14:
 816:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART.c ****                 {
 820:.\Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART.c ****                 }
 822:.\Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART.c **** 
 828:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART.c ****             {
 837:.\Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART.c ****             }
 839:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART.c ****     }
 841:.\Generated_Source\PSoC5/UART.c **** 
 842:.\Generated_Source\PSoC5/UART.c **** 
 843:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART.c ****     *
 847:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART.c ****     *
 850:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART.c ****     *
 853:.\Generated_Source\PSoC5/UART.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART.c ****     *
 856:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART.c ****     {
 497              		.loc 1 858 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 502              	.LVL29:
 859:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 503              		.loc 1 859 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 25


 504 0000 014B     		ldr	r3, .L47
 505 0002 1870     		strb	r0, [r3]
 506 0004 7047     		bx	lr
 507              	.L48:
 508 0006 00BF     		.align	2
 509              	.L47:
 510 0008 28650040 		.word	1073767720
 511              		.cfi_endproc
 512              	.LFE14:
 513              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 514              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 515              		.align	2
 516              		.global	UART_SetRxAddress2
 517              		.thumb
 518              		.thumb_func
 519              		.type	UART_SetRxAddress2, %function
 520              	UART_SetRxAddress2:
 521              	.LFB15:
 860:.\Generated_Source\PSoC5/UART.c ****     }
 861:.\Generated_Source\PSoC5/UART.c **** 
 862:.\Generated_Source\PSoC5/UART.c **** 
 863:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART.c ****     *
 867:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART.c ****     *
 870:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART.c ****     *
 873:.\Generated_Source\PSoC5/UART.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART.c ****     *
 876:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART.c ****     {
 522              		.loc 1 878 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527              	.LVL30:
 879:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 528              		.loc 1 879 0
 529 0000 014B     		ldr	r3, .L50
 530 0002 1870     		strb	r0, [r3]
 531 0004 7047     		bx	lr
 532              	.L51:
 533 0006 00BF     		.align	2
 534              	.L50:
 535 0008 38650040 		.word	1073767736
 536              		.cfi_endproc
 537              	.LFE15:
 538              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 539              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 540              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 26


 541              		.global	UART_SetTxInterruptMode
 542              		.thumb
 543              		.thumb_func
 544              		.type	UART_SetTxInterruptMode, %function
 545              	UART_SetTxInterruptMode:
 546              	.LFB16:
 880:.\Generated_Source\PSoC5/UART.c ****     }
 881:.\Generated_Source\PSoC5/UART.c **** 
 882:.\Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART.c **** 
 884:.\Generated_Source\PSoC5/UART.c **** 
 885:.\Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART.c ****     *
 890:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART.c ****     *
 894:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART.c ****     *
 901:.\Generated_Source\PSoC5/UART.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART.c ****     *
 904:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART.c ****     *
 907:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART.c ****     {
 547              		.loc 1 909 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552              	.LVL31:
 910:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 553              		.loc 1 910 0
 554 0000 014B     		ldr	r3, .L53
 555 0002 1870     		strb	r0, [r3]
 556 0004 7047     		bx	lr
 557              	.L54:
 558 0006 00BF     		.align	2
 559              	.L53:
 560 0008 88640040 		.word	1073767560
 561              		.cfi_endproc
 562              	.LFE16:
 563              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 564              		.section	.text.UART_WriteTxData,"ax",%progbits
 565              		.align	2
 566              		.global	UART_WriteTxData
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 27


 567              		.thumb
 568              		.thumb_func
 569              		.type	UART_WriteTxData, %function
 570              	UART_WriteTxData:
 571              	.LFB17:
 911:.\Generated_Source\PSoC5/UART.c ****     }
 912:.\Generated_Source\PSoC5/UART.c **** 
 913:.\Generated_Source\PSoC5/UART.c **** 
 914:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART.c ****     *
 918:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART.c ****     *
 923:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART.c ****     *
 926:.\Generated_Source\PSoC5/UART.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART.c ****     * None.
 928:.\Generated_Source\PSoC5/UART.c ****     *
 929:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART.c ****     *
 938:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART.c ****     *
 941:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART.c ****     {
 572              		.loc 1 943 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577              	.LVL32:
 944:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 578              		.loc 1 945 0
 579 0000 024B     		ldr	r3, .L57
 580 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 581 0004 0BB1     		cbz	r3, .L55
 946:.\Generated_Source\PSoC5/UART.c ****         {
 947:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART.c **** 
 949:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:.\Generated_Source\PSoC5/UART.c **** 
 952:.\Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 28


 953:.\Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/UART.c ****             {
 955:.\Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/UART.c ****             }
 958:.\Generated_Source\PSoC5/UART.c ****             else
 959:.\Generated_Source\PSoC5/UART.c ****             {
 960:.\Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/UART.c ****                 {
 962:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/UART.c ****                 }
 964:.\Generated_Source\PSoC5/UART.c **** 
 965:.\Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/UART.c **** 
 967:.\Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:.\Generated_Source\PSoC5/UART.c ****             }
 970:.\Generated_Source\PSoC5/UART.c **** 
 971:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:.\Generated_Source\PSoC5/UART.c **** 
 973:.\Generated_Source\PSoC5/UART.c ****         #else
 974:.\Generated_Source\PSoC5/UART.c **** 
 975:.\Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 582              		.loc 1 976 0
 583 0006 024B     		ldr	r3, .L57+4
 584 0008 1870     		strb	r0, [r3]
 585              	.L55:
 586 000a 7047     		bx	lr
 587              	.L58:
 588              		.align	2
 589              	.L57:
 590 000c 00000000 		.word	.LANCHOR0
 591 0010 4B640040 		.word	1073767499
 592              		.cfi_endproc
 593              	.LFE17:
 594              		.size	UART_WriteTxData, .-UART_WriteTxData
 595              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 596              		.align	2
 597              		.global	UART_ReadTxStatus
 598              		.thumb
 599              		.thumb_func
 600              		.type	UART_ReadTxStatus, %function
 601              	UART_ReadTxStatus:
 602              	.LFB18:
 977:.\Generated_Source\PSoC5/UART.c **** 
 978:.\Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART.c ****         }
 980:.\Generated_Source\PSoC5/UART.c ****     }
 981:.\Generated_Source\PSoC5/UART.c **** 
 982:.\Generated_Source\PSoC5/UART.c **** 
 983:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART.c ****     *
 987:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 29


 989:.\Generated_Source\PSoC5/UART.c ****     *
 990:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART.c ****     *
 993:.\Generated_Source\PSoC5/UART.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART.c ****     *
 996:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART.c ****     *
1002:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART.c ****     {
 603              		.loc 1 1004 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
1005:.\Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 608              		.loc 1 1005 0
 609 0000 014B     		ldr	r3, .L60
 610 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:.\Generated_Source\PSoC5/UART.c ****     }
 611              		.loc 1 1006 0
 612 0004 7047     		bx	lr
 613              	.L61:
 614 0006 00BF     		.align	2
 615              	.L60:
 616 0008 68640040 		.word	1073767528
 617              		.cfi_endproc
 618              	.LFE18:
 619              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 620              		.section	.text.UART_PutChar,"ax",%progbits
 621              		.align	2
 622              		.global	UART_PutChar
 623              		.thumb
 624              		.thumb_func
 625              		.type	UART_PutChar, %function
 626              	UART_PutChar:
 627              	.LFB19:
1007:.\Generated_Source\PSoC5/UART.c **** 
1008:.\Generated_Source\PSoC5/UART.c **** 
1009:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART.c ****     *
1013:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART.c ****     *
1018:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 30


1021:.\Generated_Source\PSoC5/UART.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART.c ****     *
1024:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART.c ****     *
1034:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART.c ****     *
1037:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART.c ****     *
1040:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART.c ****     {
 628              		.loc 1 1042 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL33:
 634              	.L63:
1043:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART.c ****         */
1048:.\Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART.c **** 
1051:.\Generated_Source\PSoC5/UART.c ****         do
1052:.\Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART.c **** 
1054:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART.c **** 
1059:.\Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:.\Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:.\Generated_Source\PSoC5/UART.c **** 
1062:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART.c ****         }
1067:.\Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 31


1071:.\Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/UART.c ****         {
1074:.\Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/UART.c ****         }
1077:.\Generated_Source\PSoC5/UART.c ****         else
1078:.\Generated_Source\PSoC5/UART.c ****         {
1079:.\Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/UART.c ****             {
1081:.\Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/UART.c ****             }
1083:.\Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/UART.c **** 
1087:.\Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART.c **** 
1092:.\Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/UART.c **** 
1094:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART.c **** 
1098:.\Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/UART.c ****             {
1100:.\Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/UART.c ****             }
1103:.\Generated_Source\PSoC5/UART.c ****         }
1104:.\Generated_Source\PSoC5/UART.c **** 
1105:.\Generated_Source\PSoC5/UART.c ****     #else
1106:.\Generated_Source\PSoC5/UART.c **** 
1107:.\Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 635              		.loc 1 1107 0 discriminator 1
 636 0000 034B     		ldr	r3, .L64
 637 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638 0004 13F0040F 		tst	r3, #4
 639 0008 FAD1     		bne	.L63
1108:.\Generated_Source\PSoC5/UART.c ****         {
1109:.\Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART.c ****         }
1111:.\Generated_Source\PSoC5/UART.c **** 
1112:.\Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 640              		.loc 1 1113 0
 641 000a 024B     		ldr	r3, .L64+4
 642 000c 1870     		strb	r0, [r3]
 643 000e 7047     		bx	lr
 644              	.L65:
 645              		.align	2
 646              	.L64:
 647 0010 68640040 		.word	1073767528
 648 0014 4B640040 		.word	1073767499
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 32


 649              		.cfi_endproc
 650              	.LFE19:
 651              		.size	UART_PutChar, .-UART_PutChar
 652              		.section	.text.UART_PutString,"ax",%progbits
 653              		.align	2
 654              		.global	UART_PutString
 655              		.thumb
 656              		.thumb_func
 657              		.type	UART_PutString, %function
 658              	UART_PutString:
 659              	.LFB20:
1114:.\Generated_Source\PSoC5/UART.c **** 
1115:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART.c ****     }
1117:.\Generated_Source\PSoC5/UART.c **** 
1118:.\Generated_Source\PSoC5/UART.c **** 
1119:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART.c ****     *
1123:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART.c ****     *
1126:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART.c ****     *
1129:.\Generated_Source\PSoC5/UART.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART.c ****     *
1132:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART.c ****     *
1136:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART.c ****     *
1139:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART.c ****     *
1144:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART.c ****     {
 660              		.loc 1 1146 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              	.LVL34:
 665 0000 38B5     		push	{r3, r4, r5, lr}
 666              		.cfi_def_cfa_offset 16
 667              		.cfi_offset 3, -16
 668              		.cfi_offset 4, -12
 669              		.cfi_offset 5, -8
 670              		.cfi_offset 14, -4
 671              	.LVL35:
1147:.\Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 33


1148:.\Generated_Source\PSoC5/UART.c **** 
1149:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 672              		.loc 1 1150 0
 673 0002 074B     		ldr	r3, .L72
 674 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 675 0006 2BB9     		cbnz	r3, .L70
 676 0008 38BD     		pop	{r3, r4, r5, pc}
 677              	.LVL36:
 678              	.L69:
1151:.\Generated_Source\PSoC5/UART.c ****         {
1152:.\Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:.\Generated_Source\PSoC5/UART.c ****             {
1155:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 679              		.loc 1 1155 0
 680 000a FFF7FEFF 		bl	UART_PutChar
 681              	.LVL37:
1156:.\Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 682              		.loc 1 1156 0
 683 000e 0134     		adds	r4, r4, #1
 684              	.LVL38:
 685 0010 A4B2     		uxth	r4, r4
 686              	.LVL39:
 687 0012 01E0     		b	.L67
 688              	.LVL40:
 689              	.L70:
 690 0014 0546     		mov	r5, r0
 691 0016 0024     		movs	r4, #0
 692              	.LVL41:
 693              	.L67:
1153:.\Generated_Source\PSoC5/UART.c ****             {
 694              		.loc 1 1153 0
 695 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 696 001a 0028     		cmp	r0, #0
 697 001c F5D1     		bne	.L69
 698 001e 38BD     		pop	{r3, r4, r5, pc}
 699              	.LVL42:
 700              	.L73:
 701              		.align	2
 702              	.L72:
 703 0020 00000000 		.word	.LANCHOR0
 704              		.cfi_endproc
 705              	.LFE20:
 706              		.size	UART_PutString, .-UART_PutString
 707              		.section	.text.UART_PutArray,"ax",%progbits
 708              		.align	2
 709              		.global	UART_PutArray
 710              		.thumb
 711              		.thumb_func
 712              		.type	UART_PutArray, %function
 713              	UART_PutArray:
 714              	.LFB21:
1157:.\Generated_Source\PSoC5/UART.c ****             }
1158:.\Generated_Source\PSoC5/UART.c ****         }
1159:.\Generated_Source\PSoC5/UART.c ****     }
1160:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 34


1161:.\Generated_Source\PSoC5/UART.c **** 
1162:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART.c ****     *
1166:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART.c ****     *
1170:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART.c ****     *
1175:.\Generated_Source\PSoC5/UART.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART.c ****     *
1178:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART.c ****     *
1182:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART.c ****     *
1185:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART.c ****     *
1190:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART.c ****     {
 715              		.loc 1 1193 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              	.LVL43:
1194:.\Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC5/UART.c **** 
1196:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 720              		.loc 1 1197 0
 721 0000 084B     		ldr	r3, .L80
 722 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 723 0004 33B9     		cbnz	r3, .L78
 724 0006 7047     		bx	lr
 725              	.LVL44:
 726              	.L77:
 727              		.cfi_def_cfa_offset 16
 728              		.cfi_offset 4, -16
 729              		.cfi_offset 5, -12
 730              		.cfi_offset 6, -8
 731              		.cfi_offset 14, -4
1198:.\Generated_Source\PSoC5/UART.c ****         {
1199:.\Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:.\Generated_Source\PSoC5/UART.c ****             {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 35


1201:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 732              		.loc 1 1201 0
 733 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 734 000a FFF7FEFF 		bl	UART_PutChar
 735              	.LVL45:
1202:.\Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 736              		.loc 1 1202 0
 737 000e 0134     		adds	r4, r4, #1
 738              	.LVL46:
 739 0010 E4B2     		uxtb	r4, r4
 740              	.LVL47:
 741 0012 03E0     		b	.L75
 742              	.LVL48:
 743              	.L78:
 744              		.cfi_def_cfa_offset 0
 745              		.cfi_restore 4
 746              		.cfi_restore 5
 747              		.cfi_restore 6
 748              		.cfi_restore 14
1193:.\Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
 749              		.loc 1 1193 0
 750 0014 70B5     		push	{r4, r5, r6, lr}
 751              		.cfi_def_cfa_offset 16
 752              		.cfi_offset 4, -16
 753              		.cfi_offset 5, -12
 754              		.cfi_offset 6, -8
 755              		.cfi_offset 14, -4
 756 0016 0D46     		mov	r5, r1
 757 0018 0646     		mov	r6, r0
 758 001a 0024     		movs	r4, #0
 759              	.LVL49:
 760              	.L75:
1199:.\Generated_Source\PSoC5/UART.c ****             {
 761              		.loc 1 1199 0
 762 001c AC42     		cmp	r4, r5
 763 001e F3D3     		bcc	.L77
 764 0020 70BD     		pop	{r4, r5, r6, pc}
 765              	.LVL50:
 766              	.L81:
 767 0022 00BF     		.align	2
 768              	.L80:
 769 0024 00000000 		.word	.LANCHOR0
 770              		.cfi_endproc
 771              	.LFE21:
 772              		.size	UART_PutArray, .-UART_PutArray
 773              		.section	.text.UART_PutCRLF,"ax",%progbits
 774              		.align	2
 775              		.global	UART_PutCRLF
 776              		.thumb
 777              		.thumb_func
 778              		.type	UART_PutCRLF, %function
 779              	UART_PutCRLF:
 780              	.LFB22:
1203:.\Generated_Source\PSoC5/UART.c ****             }
1204:.\Generated_Source\PSoC5/UART.c ****         }
1205:.\Generated_Source\PSoC5/UART.c ****     }
1206:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 36


1207:.\Generated_Source\PSoC5/UART.c **** 
1208:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART.c ****     *
1212:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART.c ****     *
1216:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART.c ****     *
1219:.\Generated_Source\PSoC5/UART.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART.c ****     *
1222:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART.c ****     *
1226:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART.c ****     *
1229:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART.c ****     {
 781              		.loc 1 1231 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              	.LVL51:
 786 0000 08B5     		push	{r3, lr}
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 3, -8
 789              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 790              		.loc 1 1233 0
 791 0002 064B     		ldr	r3, .L85
 792 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 793 0006 3BB1     		cbz	r3, .L82
1234:.\Generated_Source\PSoC5/UART.c ****         {
1235:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 794              		.loc 1 1235 0
 795 0008 FFF7FEFF 		bl	UART_PutChar
 796              	.LVL52:
1236:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 797              		.loc 1 1236 0
 798 000c 0D20     		movs	r0, #13
 799 000e FFF7FEFF 		bl	UART_PutChar
 800              	.LVL53:
1237:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 801              		.loc 1 1237 0
 802 0012 0A20     		movs	r0, #10
 803 0014 FFF7FEFF 		bl	UART_PutChar
 804              	.LVL54:
 805              	.L82:
 806 0018 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 37


 807              	.L86:
 808 001a 00BF     		.align	2
 809              	.L85:
 810 001c 00000000 		.word	.LANCHOR0
 811              		.cfi_endproc
 812              	.LFE22:
 813              		.size	UART_PutCRLF, .-UART_PutCRLF
 814              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 815              		.align	2
 816              		.global	UART_GetTxBufferSize
 817              		.thumb
 818              		.thumb_func
 819              		.type	UART_GetTxBufferSize, %function
 820              	UART_GetTxBufferSize:
 821              	.LFB23:
1238:.\Generated_Source\PSoC5/UART.c ****         }
1239:.\Generated_Source\PSoC5/UART.c ****     }
1240:.\Generated_Source\PSoC5/UART.c **** 
1241:.\Generated_Source\PSoC5/UART.c **** 
1242:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART.c ****     *
1246:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART.c ****     *
1255:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART.c ****     *
1258:.\Generated_Source\PSoC5/UART.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART.c ****     *
1262:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART.c ****     *
1266:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART.c ****     *
1269:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART.c ****     *
1272:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART.c ****                                                             
1275:.\Generated_Source\PSoC5/UART.c ****     {
 822              		.loc 1 1275 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 38


 826              		@ link register save eliminated.
1276:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART.c **** 
1278:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART.c **** 
1280:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:.\Generated_Source\PSoC5/UART.c **** 
1283:.\Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:.\Generated_Source\PSoC5/UART.c ****         {
1285:.\Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART.c ****         }
1287:.\Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:.\Generated_Source\PSoC5/UART.c ****         {
1289:.\Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:.\Generated_Source\PSoC5/UART.c ****         }
1291:.\Generated_Source\PSoC5/UART.c ****         else
1292:.\Generated_Source\PSoC5/UART.c ****         {
1293:.\Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART.c ****         }
1296:.\Generated_Source\PSoC5/UART.c **** 
1297:.\Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:.\Generated_Source\PSoC5/UART.c **** 
1299:.\Generated_Source\PSoC5/UART.c ****     #else
1300:.\Generated_Source\PSoC5/UART.c **** 
1301:.\Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 827              		.loc 1 1301 0
 828 0000 074B     		ldr	r3, .L91
 829 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 830 0004 DBB2     		uxtb	r3, r3
 831              	.LVL55:
1302:.\Generated_Source\PSoC5/UART.c **** 
1303:.\Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 832              		.loc 1 1304 0
 833 0006 13F0040F 		tst	r3, #4
 834 000a 04D1     		bne	.L89
1305:.\Generated_Source\PSoC5/UART.c ****         {
1306:.\Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/UART.c ****         }
1308:.\Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 835              		.loc 1 1308 0
 836 000c 13F0020F 		tst	r3, #2
 837 0010 03D0     		beq	.L90
1309:.\Generated_Source\PSoC5/UART.c ****         {
1310:.\Generated_Source\PSoC5/UART.c ****             size = 0u;
 838              		.loc 1 1310 0
 839 0012 0020     		movs	r0, #0
 840 0014 7047     		bx	lr
 841              	.L89:
1306:.\Generated_Source\PSoC5/UART.c ****         }
 842              		.loc 1 1306 0
 843 0016 0420     		movs	r0, #4
 844 0018 7047     		bx	lr
 845              	.L90:
1311:.\Generated_Source\PSoC5/UART.c ****         }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 39


1312:.\Generated_Source\PSoC5/UART.c ****         else
1313:.\Generated_Source\PSoC5/UART.c ****         {
1314:.\Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART.c ****             size = 1u;
 846              		.loc 1 1315 0
 847 001a 0120     		movs	r0, #1
 848              	.LVL56:
1316:.\Generated_Source\PSoC5/UART.c ****         }
1317:.\Generated_Source\PSoC5/UART.c **** 
1318:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART.c **** 
1320:.\Generated_Source\PSoC5/UART.c ****     return(size);
1321:.\Generated_Source\PSoC5/UART.c ****     }
 849              		.loc 1 1321 0
 850 001c 7047     		bx	lr
 851              	.L92:
 852 001e 00BF     		.align	2
 853              	.L91:
 854 0020 68640040 		.word	1073767528
 855              		.cfi_endproc
 856              	.LFE23:
 857              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 858              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 859              		.align	2
 860              		.global	UART_ClearTxBuffer
 861              		.thumb
 862              		.thumb_func
 863              		.type	UART_ClearTxBuffer, %function
 864              	UART_ClearTxBuffer:
 865              	.LFB24:
1322:.\Generated_Source\PSoC5/UART.c **** 
1323:.\Generated_Source\PSoC5/UART.c **** 
1324:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART.c ****     *
1328:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART.c ****     *
1331:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART.c ****     *
1334:.\Generated_Source\PSoC5/UART.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART.c ****     *
1337:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART.c ****     *
1341:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART.c ****     *
1344:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 40


1349:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART.c ****     *
1353:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART.c ****     {
 866              		.loc 1 1355 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 0, uses_anonymous_args = 0
 870 0000 08B5     		push	{r3, lr}
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 3, -8
 873              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART.c **** 
1358:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 874              		.loc 1 1358 0
 875 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 876              	.LVL57:
1359:.\Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 877              		.loc 1 1360 0
 878 0006 064B     		ldr	r3, .L95
 879 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 880 000a 42F00102 		orr	r2, r2, #1
 881 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 882              		.loc 1 1361 0
 883 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 884 0012 02F0FE02 		and	r2, r2, #254
 885 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 886              		.loc 1 1362 0
 887 0018 FFF7FEFF 		bl	CyExitCriticalSection
 888              	.LVL58:
 889 001c 08BD     		pop	{r3, pc}
 890              	.L96:
 891 001e 00BF     		.align	2
 892              	.L95:
 893 0020 9B640040 		.word	1073767579
 894              		.cfi_endproc
 895              	.LFE24:
 896              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 897              		.section	.text.UART_SendBreak,"ax",%progbits
 898              		.align	2
 899              		.global	UART_SendBreak
 900              		.thumb
 901              		.thumb_func
 902              		.type	UART_SendBreak, %function
 903              	UART_SendBreak:
 904              	.LFB25:
1363:.\Generated_Source\PSoC5/UART.c **** 
1364:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART.c **** 
1366:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 41


1367:.\Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:.\Generated_Source\PSoC5/UART.c **** 
1369:.\Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/UART.c **** 
1372:.\Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:.\Generated_Source\PSoC5/UART.c **** 
1375:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART.c ****     }
1377:.\Generated_Source\PSoC5/UART.c **** 
1378:.\Generated_Source\PSoC5/UART.c **** 
1379:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART.c ****     *
1383:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART.c ****     *
1386:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART.c ****     *
1398:.\Generated_Source\PSoC5/UART.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART.c ****     *
1401:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART.c ****     *
1406:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART.c ****     *
1409:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 42


1424:.\Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART.c ****     *
1432:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART.c ****     *
1439:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART.c ****     {
 905              		.loc 1 1441 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910              	.LVL59:
1442:.\Generated_Source\PSoC5/UART.c **** 
1443:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 911              		.loc 1 1444 0
 912 0000 124B     		ldr	r3, .L104
 913 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 914 0004 0BB3     		cbz	r3, .L97
 915              	.LBB2:
1445:.\Generated_Source\PSoC5/UART.c ****         {
1446:.\Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART.c **** 
1450:.\Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART.c **** 
1452:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART.c ****             {
1455:.\Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/UART.c **** 
1461:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART.c ****                 {
1463:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/UART.c ****                 }
1465:.\Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/UART.c ****             }
1467:.\Generated_Source\PSoC5/UART.c **** 
1468:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 43


1470:.\Generated_Source\PSoC5/UART.c ****             {
1471:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART.c ****                 {
1473:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/UART.c ****                 }
1475:.\Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/UART.c ****             }
1477:.\Generated_Source\PSoC5/UART.c **** 
1478:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART.c ****             {
1482:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART.c ****             }
1485:.\Generated_Source\PSoC5/UART.c **** 
1486:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART.c **** 
1488:.\Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART.c **** 
1490:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 916              		.loc 1 1490 0
 917 0006 08B1     		cbz	r0, .L99
 918              		.loc 1 1490 0 is_stmt 0 discriminator 1
 919 0008 0328     		cmp	r0, #3
 920 000a 0DD1     		bne	.L100
 921              	.L99:
1491:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART.c ****             {
1493:.\Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART.c **** 
1500:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 922              		.loc 1 1501 0 is_stmt 1
 923 000c 104B     		ldr	r3, .L104+4
 924 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 925 0010 0E4A     		ldr	r2, .L104
 926 0012 5170     		strb	r1, [r2, #1]
1502:.\Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 927              		.loc 1 1502 0
 928 0014 6722     		movs	r2, #103
 929 0016 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/UART.c ****                 #else
1504:.\Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART.c **** 
1508:.\Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 930              		.loc 1 1509 0
 931 0018 0022     		movs	r2, #0
 932 001a 0F33     		adds	r3, r3, #15
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 44


 933 001c 1A70     		strb	r2, [r3]
 934              	.L101:
1510:.\Generated_Source\PSoC5/UART.c **** 
1511:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART.c ****                 {
1513:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 935              		.loc 1 1513 0 discriminator 1
 936 001e 0D4B     		ldr	r3, .L104+8
 937 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 938              	.LVL60:
1514:.\Generated_Source\PSoC5/UART.c ****                 }
1515:.\Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 939              		.loc 1 1515 0 discriminator 1
 940 0022 13F0020F 		tst	r3, #2
 941 0026 FAD1     		bne	.L101
 942              	.LVL61:
 943              	.L100:
1516:.\Generated_Source\PSoC5/UART.c ****             }
1517:.\Generated_Source\PSoC5/UART.c **** 
1518:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 944              		.loc 1 1518 0
 945 0028 0128     		cmp	r0, #1
 946 002a 01D0     		beq	.L102
 947              		.loc 1 1518 0 is_stmt 0 discriminator 1
 948 002c 0328     		cmp	r0, #3
 949 002e 04D1     		bne	.L103
 950              	.L102:
1519:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART.c ****             {
1521:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART.c ****                 {
1523:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 951              		.loc 1 1523 0 is_stmt 1 discriminator 1
 952 0030 084B     		ldr	r3, .L104+8
 953 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 954              	.LVL62:
1524:.\Generated_Source\PSoC5/UART.c ****                 }
1525:.\Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 955              		.loc 1 1525 0 discriminator 1
 956 0034 13F0010F 		tst	r3, #1
 957 0038 FAD0     		beq	.L102
 958              	.LVL63:
 959              	.L103:
1526:.\Generated_Source\PSoC5/UART.c ****             }
1527:.\Generated_Source\PSoC5/UART.c **** 
1528:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 960              		.loc 1 1529 0
 961 003a 0138     		subs	r0, r0, #1
 962              	.LVL64:
 963 003c C0B2     		uxtb	r0, r0
1528:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 964              		.loc 1 1528 0
 965 003e 0228     		cmp	r0, #2
 966 0040 03D8     		bhi	.L97
1530:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART.c ****             {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 45


1532:.\Generated_Source\PSoC5/UART.c **** 
1533:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 967              		.loc 1 1534 0
 968 0042 024B     		ldr	r3, .L104
 969 0044 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 970 0046 024B     		ldr	r3, .L104+4
 971 0048 1A70     		strb	r2, [r3]
 972              	.L97:
 973 004a 7047     		bx	lr
 974              	.L105:
 975              		.align	2
 976              	.L104:
 977 004c 00000000 		.word	.LANCHOR0
 978 0050 3C640040 		.word	1073767484
 979 0054 68640040 		.word	1073767528
 980              	.LBE2:
 981              		.cfi_endproc
 982              	.LFE25:
 983              		.size	UART_SendBreak, .-UART_SendBreak
 984              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 985              		.align	2
 986              		.global	UART_SetTxAddressMode
 987              		.thumb
 988              		.thumb_func
 989              		.type	UART_SetTxAddressMode, %function
 990              	UART_SetTxAddressMode:
 991              	.LFB26:
1535:.\Generated_Source\PSoC5/UART.c ****             #else
1536:.\Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART.c **** 
1539:.\Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART.c ****             }
1545:.\Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART.c ****         }
1547:.\Generated_Source\PSoC5/UART.c ****     }
1548:.\Generated_Source\PSoC5/UART.c **** 
1549:.\Generated_Source\PSoC5/UART.c **** 
1550:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART.c ****     *
1554:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART.c ****     *
1557:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 46


1564:.\Generated_Source\PSoC5/UART.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART.c ****     *
1567:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART.c ****     *
1571:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART.c ****     {
 992              		.loc 1 1573 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996              		@ link register save eliminated.
 997              	.LVL65:
 998 0000 7047     		bx	lr
 999              		.cfi_endproc
 1000              	.LFE26:
 1001              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1002              		.global	UART_initVar
 1003 0002 00BF     		.bss
 1004              		.set	.LANCHOR0,. + 0
 1005              		.type	UART_initVar, %object
 1006              		.size	UART_initVar, 1
 1007              	UART_initVar:
 1008 0000 00       		.space	1
 1009              		.type	txPeriod.4989, %object
 1010              		.size	txPeriod.4989, 1
 1011              	txPeriod.4989:
 1012 0001 00       		.space	1
 1013              		.text
 1014              	.Letext0:
 1015              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1016              		.file 3 ".\\Generated_Source\\PSoC5\\UART_IntClock.h"
 1017              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1018              		.section	.debug_info,"",%progbits
 1019              	.Ldebug_info0:
 1020 0000 FC050000 		.4byte	0x5fc
 1021 0004 0400     		.2byte	0x4
 1022 0006 00000000 		.4byte	.Ldebug_abbrev0
 1023 000a 04       		.byte	0x4
 1024 000b 01       		.uleb128 0x1
 1025 000c 55030000 		.4byte	.LASF61
 1026 0010 01       		.byte	0x1
 1027 0011 69000000 		.4byte	.LASF62
 1028 0015 29040000 		.4byte	.LASF63
 1029 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1030 001d 00000000 		.4byte	0
 1031 0021 00000000 		.4byte	.Ldebug_line0
 1032 0025 02       		.uleb128 0x2
 1033 0026 01       		.byte	0x1
 1034 0027 06       		.byte	0x6
 1035 0028 97000000 		.4byte	.LASF0
 1036 002c 02       		.uleb128 0x2
 1037 002d 01       		.byte	0x1
 1038 002e 08       		.byte	0x8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 47


 1039 002f 84020000 		.4byte	.LASF1
 1040 0033 02       		.uleb128 0x2
 1041 0034 02       		.byte	0x2
 1042 0035 05       		.byte	0x5
 1043 0036 A3020000 		.4byte	.LASF2
 1044 003a 02       		.uleb128 0x2
 1045 003b 02       		.byte	0x2
 1046 003c 07       		.byte	0x7
 1047 003d 94010000 		.4byte	.LASF3
 1048 0041 02       		.uleb128 0x2
 1049 0042 04       		.byte	0x4
 1050 0043 05       		.byte	0x5
 1051 0044 AC000000 		.4byte	.LASF4
 1052 0048 02       		.uleb128 0x2
 1053 0049 04       		.byte	0x4
 1054 004a 07       		.byte	0x7
 1055 004b 58010000 		.4byte	.LASF5
 1056 004f 02       		.uleb128 0x2
 1057 0050 08       		.byte	0x8
 1058 0051 05       		.byte	0x5
 1059 0052 89000000 		.4byte	.LASF6
 1060 0056 02       		.uleb128 0x2
 1061 0057 08       		.byte	0x8
 1062 0058 07       		.byte	0x7
 1063 0059 2F000000 		.4byte	.LASF7
 1064 005d 03       		.uleb128 0x3
 1065 005e 04       		.byte	0x4
 1066 005f 05       		.byte	0x5
 1067 0060 696E7400 		.ascii	"int\000"
 1068 0064 02       		.uleb128 0x2
 1069 0065 04       		.byte	0x4
 1070 0066 07       		.byte	0x7
 1071 0067 2B010000 		.4byte	.LASF8
 1072 006b 04       		.uleb128 0x4
 1073 006c D2000000 		.4byte	.LASF9
 1074 0070 02       		.byte	0x2
 1075 0071 B4       		.byte	0xb4
 1076 0072 2C000000 		.4byte	0x2c
 1077 0076 04       		.uleb128 0x4
 1078 0077 00000000 		.4byte	.LASF10
 1079 007b 02       		.byte	0x2
 1080 007c B5       		.byte	0xb5
 1081 007d 3A000000 		.4byte	0x3a
 1082 0081 02       		.uleb128 0x2
 1083 0082 04       		.byte	0x4
 1084 0083 04       		.byte	0x4
 1085 0084 4E020000 		.4byte	.LASF11
 1086 0088 02       		.uleb128 0x2
 1087 0089 08       		.byte	0x8
 1088 008a 04       		.byte	0x4
 1089 008b F1000000 		.4byte	.LASF12
 1090 008f 04       		.uleb128 0x4
 1091 0090 F0020000 		.4byte	.LASF13
 1092 0094 02       		.byte	0x2
 1093 0095 C5       		.byte	0xc5
 1094 0096 9A000000 		.4byte	0x9a
 1095 009a 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 48


 1096 009b 01       		.byte	0x1
 1097 009c 08       		.byte	0x8
 1098 009d EB020000 		.4byte	.LASF14
 1099 00a1 05       		.uleb128 0x5
 1100 00a2 69020000 		.4byte	.LASF15
 1101 00a6 02       		.byte	0x2
 1102 00a7 5E01     		.2byte	0x15e
 1103 00a9 AD000000 		.4byte	0xad
 1104 00ad 06       		.uleb128 0x6
 1105 00ae 6B000000 		.4byte	0x6b
 1106 00b2 02       		.uleb128 0x2
 1107 00b3 04       		.byte	0x4
 1108 00b4 07       		.byte	0x7
 1109 00b5 FB010000 		.4byte	.LASF16
 1110 00b9 07       		.uleb128 0x7
 1111 00ba 0C010000 		.4byte	.LASF64
 1112 00be 01       		.byte	0x1
 1113 00bf 6A       		.byte	0x6a
 1114 00c0 00000000 		.4byte	.LFB1
 1115 00c4 28000000 		.4byte	.LFE1-.LFB1
 1116 00c8 01       		.uleb128 0x1
 1117 00c9 9C       		.byte	0x9c
 1118 00ca 08       		.uleb128 0x8
 1119 00cb CD020000 		.4byte	.LASF17
 1120 00cf 01       		.byte	0x1
 1121 00d0 B7       		.byte	0xb7
 1122 00d1 00000000 		.4byte	.LFB2
 1123 00d5 38000000 		.4byte	.LFE2-.LFB2
 1124 00d9 01       		.uleb128 0x1
 1125 00da 9C       		.byte	0x9c
 1126 00db 11010000 		.4byte	0x111
 1127 00df 09       		.uleb128 0x9
 1128 00e0 1B030000 		.4byte	.LASF20
 1129 00e4 01       		.byte	0x1
 1130 00e5 B9       		.byte	0xb9
 1131 00e6 6B000000 		.4byte	0x6b
 1132 00ea 00000000 		.4byte	.LLST0
 1133 00ee 0A       		.uleb128 0xa
 1134 00ef 06000000 		.4byte	.LVL0
 1135 00f3 D5050000 		.4byte	0x5d5
 1136 00f7 0A       		.uleb128 0xa
 1137 00f8 2A000000 		.4byte	.LVL2
 1138 00fc E0050000 		.4byte	0x5e0
 1139 0100 0B       		.uleb128 0xb
 1140 0101 30000000 		.4byte	.LVL3
 1141 0105 E7050000 		.4byte	0x5e7
 1142 0109 0C       		.uleb128 0xc
 1143 010a 01       		.uleb128 0x1
 1144 010b 50       		.byte	0x50
 1145 010c 02       		.uleb128 0x2
 1146 010d 74       		.byte	0x74
 1147 010e 00       		.sleb128 0
 1148 010f 00       		.byte	0
 1149 0110 00       		.byte	0
 1150 0111 08       		.uleb128 0x8
 1151 0112 46000000 		.4byte	.LASF18
 1152 0116 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 49


 1153 0117 4C       		.byte	0x4c
 1154 0118 00000000 		.4byte	.LFB0
 1155 011c 1C000000 		.4byte	.LFE0-.LFB0
 1156 0120 01       		.uleb128 0x1
 1157 0121 9C       		.byte	0x9c
 1158 0122 39010000 		.4byte	0x139
 1159 0126 0A       		.uleb128 0xa
 1160 0127 0C000000 		.4byte	.LVL5
 1161 012b B9000000 		.4byte	0xb9
 1162 012f 0A       		.uleb128 0xa
 1163 0130 16000000 		.4byte	.LVL6
 1164 0134 CA000000 		.4byte	0xca
 1165 0138 00       		.byte	0
 1166 0139 08       		.uleb128 0x8
 1167 013a E3030000 		.4byte	.LASF19
 1168 013e 01       		.byte	0x1
 1169 013f F0       		.byte	0xf0
 1170 0140 00000000 		.4byte	.LFB3
 1171 0144 3C000000 		.4byte	.LFE3-.LFB3
 1172 0148 01       		.uleb128 0x1
 1173 0149 9C       		.byte	0x9c
 1174 014a 80010000 		.4byte	0x180
 1175 014e 09       		.uleb128 0x9
 1176 014f 1B030000 		.4byte	.LASF20
 1177 0153 01       		.byte	0x1
 1178 0154 F2       		.byte	0xf2
 1179 0155 6B000000 		.4byte	0x6b
 1180 0159 13000000 		.4byte	.LLST1
 1181 015d 0A       		.uleb128 0xa
 1182 015e 06000000 		.4byte	.LVL7
 1183 0162 D5050000 		.4byte	0x5d5
 1184 0166 0A       		.uleb128 0xa
 1185 0167 16000000 		.4byte	.LVL9
 1186 016b F8050000 		.4byte	0x5f8
 1187 016f 0B       		.uleb128 0xb
 1188 0170 30000000 		.4byte	.LVL10
 1189 0174 E7050000 		.4byte	0x5e7
 1190 0178 0C       		.uleb128 0xc
 1191 0179 01       		.uleb128 0x1
 1192 017a 50       		.byte	0x50
 1193 017b 02       		.uleb128 0x2
 1194 017c 74       		.byte	0x74
 1195 017d 00       		.sleb128 0
 1196 017e 00       		.byte	0
 1197 017f 00       		.byte	0
 1198 0180 0D       		.uleb128 0xd
 1199 0181 D8000000 		.4byte	.LASF43
 1200 0185 01       		.byte	0x1
 1201 0186 2701     		.2byte	0x127
 1202 0188 6B000000 		.4byte	0x6b
 1203 018c 00000000 		.4byte	.LFB4
 1204 0190 04000000 		.4byte	.LFE4-.LFB4
 1205 0194 01       		.uleb128 0x1
 1206 0195 9C       		.byte	0x9c
 1207 0196 0E       		.uleb128 0xe
 1208 0197 FC030000 		.4byte	.LASF21
 1209 019b 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 50


 1210 019c 3F01     		.2byte	0x13f
 1211 019e 00000000 		.4byte	.LFB5
 1212 01a2 02000000 		.4byte	.LFE5-.LFB5
 1213 01a6 01       		.uleb128 0x1
 1214 01a7 9C       		.byte	0x9c
 1215 01a8 BB010000 		.4byte	0x1bb
 1216 01ac 0F       		.uleb128 0xf
 1217 01ad 04010000 		.4byte	.LASF23
 1218 01b1 01       		.byte	0x1
 1219 01b2 3F01     		.2byte	0x13f
 1220 01b4 6B000000 		.4byte	0x6b
 1221 01b8 01       		.uleb128 0x1
 1222 01b9 50       		.byte	0x50
 1223 01ba 00       		.byte	0
 1224 01bb 0E       		.uleb128 0xe
 1225 01bc F6020000 		.4byte	.LASF22
 1226 01c0 01       		.byte	0x1
 1227 01c1 6701     		.2byte	0x167
 1228 01c3 00000000 		.4byte	.LFB6
 1229 01c7 0C000000 		.4byte	.LFE6-.LFB6
 1230 01cb 01       		.uleb128 0x1
 1231 01cc 9C       		.byte	0x9c
 1232 01cd E0010000 		.4byte	0x1e0
 1233 01d1 0F       		.uleb128 0xf
 1234 01d2 B0010000 		.4byte	.LASF24
 1235 01d6 01       		.byte	0x1
 1236 01d7 6701     		.2byte	0x167
 1237 01d9 6B000000 		.4byte	0x6b
 1238 01dd 01       		.uleb128 0x1
 1239 01de 50       		.byte	0x50
 1240 01df 00       		.byte	0
 1241 01e0 10       		.uleb128 0x10
 1242 01e1 C2000000 		.4byte	.LASF26
 1243 01e5 01       		.byte	0x1
 1244 01e6 8801     		.2byte	0x188
 1245 01e8 6B000000 		.4byte	0x6b
 1246 01ec 00000000 		.4byte	.LFB7
 1247 01f0 0C000000 		.4byte	.LFE7-.LFB7
 1248 01f4 01       		.uleb128 0x1
 1249 01f5 9C       		.byte	0x9c
 1250 01f6 09020000 		.4byte	0x209
 1251 01fa 11       		.uleb128 0x11
 1252 01fb C6020000 		.4byte	.LASF25
 1253 01ff 01       		.byte	0x1
 1254 0200 8A01     		.2byte	0x18a
 1255 0202 6B000000 		.4byte	0x6b
 1256 0206 01       		.uleb128 0x1
 1257 0207 50       		.byte	0x50
 1258 0208 00       		.byte	0
 1259 0209 10       		.uleb128 0x10
 1260 020a D9020000 		.4byte	.LASF27
 1261 020e 01       		.byte	0x1
 1262 020f E501     		.2byte	0x1e5
 1263 0211 6B000000 		.4byte	0x6b
 1264 0215 00000000 		.4byte	.LFB8
 1265 0219 10000000 		.4byte	.LFE8-.LFB8
 1266 021d 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 51


 1267 021e 9C       		.byte	0x9c
 1268 021f 34020000 		.4byte	0x234
 1269 0223 12       		.uleb128 0x12
 1270 0224 4E030000 		.4byte	.LASF28
 1271 0228 01       		.byte	0x1
 1272 0229 E701     		.2byte	0x1e7
 1273 022b 6B000000 		.4byte	0x6b
 1274 022f 26000000 		.4byte	.LLST2
 1275 0233 00       		.byte	0
 1276 0234 10       		.uleb128 0x10
 1277 0235 0E030000 		.4byte	.LASF29
 1278 0239 01       		.byte	0x1
 1279 023a 1402     		.2byte	0x214
 1280 023c 6B000000 		.4byte	0x6b
 1281 0240 00000000 		.4byte	.LFB9
 1282 0244 2C000000 		.4byte	.LFE9-.LFB9
 1283 0248 01       		.uleb128 0x1
 1284 0249 9C       		.byte	0x9c
 1285 024a 6D020000 		.4byte	0x26d
 1286 024e 12       		.uleb128 0x12
 1287 024f C6020000 		.4byte	.LASF25
 1288 0253 01       		.byte	0x1
 1289 0254 1602     		.2byte	0x216
 1290 0256 6B000000 		.4byte	0x6b
 1291 025a 3E000000 		.4byte	.LLST3
 1292 025e 11       		.uleb128 0x11
 1293 025f 32020000 		.4byte	.LASF30
 1294 0263 01       		.byte	0x1
 1295 0264 1702     		.2byte	0x217
 1296 0266 6B000000 		.4byte	0x6b
 1297 026a 01       		.uleb128 0x1
 1298 026b 53       		.byte	0x53
 1299 026c 00       		.byte	0
 1300 026d 10       		.uleb128 0x10
 1301 026e 1E010000 		.4byte	.LASF31
 1302 0272 01       		.byte	0x1
 1303 0273 7A02     		.2byte	0x27a
 1304 0275 76000000 		.4byte	0x76
 1305 0279 00000000 		.4byte	.LFB10
 1306 027d 12000000 		.4byte	.LFE10-.LFB10
 1307 0281 01       		.uleb128 0x1
 1308 0282 9C       		.byte	0x9c
 1309 0283 9A020000 		.4byte	0x29a
 1310 0287 0A       		.uleb128 0xa
 1311 0288 06000000 		.4byte	.LVL23
 1312 028c 09020000 		.4byte	0x209
 1313 0290 0A       		.uleb128 0xa
 1314 0291 0C000000 		.4byte	.LVL24
 1315 0295 E0010000 		.4byte	0x1e0
 1316 0299 00       		.byte	0
 1317 029a 10       		.uleb128 0x10
 1318 029b 39030000 		.4byte	.LASF32
 1319 029f 01       		.byte	0x1
 1320 02a0 AB02     		.2byte	0x2ab
 1321 02a2 6B000000 		.4byte	0x6b
 1322 02a6 00000000 		.4byte	.LFB11
 1323 02aa 18000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 52


 1324 02ae 01       		.uleb128 0x1
 1325 02af 9C       		.byte	0x9c
 1326 02b0 C3020000 		.4byte	0x2c3
 1327 02b4 11       		.uleb128 0x11
 1328 02b5 8F010000 		.4byte	.LASF33
 1329 02b9 01       		.byte	0x1
 1330 02ba AE02     		.2byte	0x2ae
 1331 02bc 6B000000 		.4byte	0x6b
 1332 02c0 01       		.uleb128 0x1
 1333 02c1 50       		.byte	0x50
 1334 02c2 00       		.byte	0
 1335 02c3 0E       		.uleb128 0xe
 1336 02c4 16040000 		.4byte	.LASF34
 1337 02c8 01       		.byte	0x1
 1338 02c9 F502     		.2byte	0x2f5
 1339 02cb 00000000 		.4byte	.LFB12
 1340 02cf 24000000 		.4byte	.LFE12-.LFB12
 1341 02d3 01       		.uleb128 0x1
 1342 02d4 9C       		.byte	0x9c
 1343 02d5 FC020000 		.4byte	0x2fc
 1344 02d9 12       		.uleb128 0x12
 1345 02da 1B030000 		.4byte	.LASF20
 1346 02de 01       		.byte	0x1
 1347 02df F702     		.2byte	0x2f7
 1348 02e1 6B000000 		.4byte	0x6b
 1349 02e5 74000000 		.4byte	.LLST4
 1350 02e9 0A       		.uleb128 0xa
 1351 02ea 06000000 		.4byte	.LVL26
 1352 02ee D5050000 		.4byte	0x5d5
 1353 02f2 0A       		.uleb128 0xa
 1354 02f3 1C000000 		.4byte	.LVL27
 1355 02f7 E7050000 		.4byte	0x5e7
 1356 02fb 00       		.byte	0
 1357 02fc 0E       		.uleb128 0xe
 1358 02fd 6E020000 		.4byte	.LASF35
 1359 0301 01       		.byte	0x1
 1360 0302 2D03     		.2byte	0x32d
 1361 0304 00000000 		.4byte	.LFB13
 1362 0308 02000000 		.4byte	.LFE13-.LFB13
 1363 030c 01       		.uleb128 0x1
 1364 030d 9C       		.byte	0x9c
 1365 030e 21030000 		.4byte	0x321
 1366 0312 0F       		.uleb128 0xf
 1367 0313 F8000000 		.4byte	.LASF36
 1368 0317 01       		.byte	0x1
 1369 0318 2D03     		.2byte	0x32d
 1370 031a 6B000000 		.4byte	0x6b
 1371 031e 01       		.uleb128 0x1
 1372 031f 50       		.byte	0x50
 1373 0320 00       		.byte	0
 1374 0321 0E       		.uleb128 0xe
 1375 0322 0C020000 		.4byte	.LASF37
 1376 0326 01       		.byte	0x1
 1377 0327 5903     		.2byte	0x359
 1378 0329 00000000 		.4byte	.LFB14
 1379 032d 0C000000 		.4byte	.LFE14-.LFB14
 1380 0331 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 53


 1381 0332 9C       		.byte	0x9c
 1382 0333 46030000 		.4byte	0x346
 1383 0337 0F       		.uleb128 0xf
 1384 0338 04020000 		.4byte	.LASF38
 1385 033c 01       		.byte	0x1
 1386 033d 5903     		.2byte	0x359
 1387 033f 6B000000 		.4byte	0x6b
 1388 0343 01       		.uleb128 0x1
 1389 0344 50       		.byte	0x50
 1390 0345 00       		.byte	0
 1391 0346 0E       		.uleb128 0xe
 1392 0347 1F020000 		.4byte	.LASF39
 1393 034b 01       		.byte	0x1
 1394 034c 6D03     		.2byte	0x36d
 1395 034e 00000000 		.4byte	.LFB15
 1396 0352 0C000000 		.4byte	.LFE15-.LFB15
 1397 0356 01       		.uleb128 0x1
 1398 0357 9C       		.byte	0x9c
 1399 0358 6B030000 		.4byte	0x36b
 1400 035c 0F       		.uleb128 0xf
 1401 035d 04020000 		.4byte	.LASF38
 1402 0361 01       		.byte	0x1
 1403 0362 6D03     		.2byte	0x36d
 1404 0364 6B000000 		.4byte	0x6b
 1405 0368 01       		.uleb128 0x1
 1406 0369 50       		.byte	0x50
 1407 036a 00       		.byte	0
 1408 036b 0E       		.uleb128 0xe
 1409 036c 51000000 		.4byte	.LASF40
 1410 0370 01       		.byte	0x1
 1411 0371 8C03     		.2byte	0x38c
 1412 0373 00000000 		.4byte	.LFB16
 1413 0377 0C000000 		.4byte	.LFE16-.LFB16
 1414 037b 01       		.uleb128 0x1
 1415 037c 9C       		.byte	0x9c
 1416 037d 90030000 		.4byte	0x390
 1417 0381 0F       		.uleb128 0xf
 1418 0382 B0010000 		.4byte	.LASF24
 1419 0386 01       		.byte	0x1
 1420 0387 8C03     		.2byte	0x38c
 1421 0389 6B000000 		.4byte	0x6b
 1422 038d 01       		.uleb128 0x1
 1423 038e 50       		.byte	0x50
 1424 038f 00       		.byte	0
 1425 0390 0E       		.uleb128 0xe
 1426 0391 92020000 		.4byte	.LASF41
 1427 0395 01       		.byte	0x1
 1428 0396 AE03     		.2byte	0x3ae
 1429 0398 00000000 		.4byte	.LFB17
 1430 039c 14000000 		.4byte	.LFE17-.LFB17
 1431 03a0 01       		.uleb128 0x1
 1432 03a1 9C       		.byte	0x9c
 1433 03a2 B5030000 		.4byte	0x3b5
 1434 03a6 0F       		.uleb128 0xf
 1435 03a7 1D000000 		.4byte	.LASF42
 1436 03ab 01       		.byte	0x1
 1437 03ac AE03     		.2byte	0x3ae
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 54


 1438 03ae 6B000000 		.4byte	0x6b
 1439 03b2 01       		.uleb128 0x1
 1440 03b3 50       		.byte	0x50
 1441 03b4 00       		.byte	0
 1442 03b5 0D       		.uleb128 0xd
 1443 03b6 CD010000 		.4byte	.LASF44
 1444 03ba 01       		.byte	0x1
 1445 03bb EB03     		.2byte	0x3eb
 1446 03bd 6B000000 		.4byte	0x6b
 1447 03c1 00000000 		.4byte	.LFB18
 1448 03c5 0C000000 		.4byte	.LFE18-.LFB18
 1449 03c9 01       		.uleb128 0x1
 1450 03ca 9C       		.byte	0x9c
 1451 03cb 0E       		.uleb128 0xe
 1452 03cc B5000000 		.4byte	.LASF45
 1453 03d0 01       		.byte	0x1
 1454 03d1 1104     		.2byte	0x411
 1455 03d3 00000000 		.4byte	.LFB19
 1456 03d7 18000000 		.4byte	.LFE19-.LFB19
 1457 03db 01       		.uleb128 0x1
 1458 03dc 9C       		.byte	0x9c
 1459 03dd F0030000 		.4byte	0x3f0
 1460 03e1 0F       		.uleb128 0xf
 1461 03e2 1D000000 		.4byte	.LASF42
 1462 03e6 01       		.byte	0x1
 1463 03e7 1104     		.2byte	0x411
 1464 03e9 6B000000 		.4byte	0x6b
 1465 03ed 01       		.uleb128 0x1
 1466 03ee 50       		.byte	0x50
 1467 03ef 00       		.byte	0
 1468 03f0 0E       		.uleb128 0xe
 1469 03f1 ED030000 		.4byte	.LASF46
 1470 03f5 01       		.byte	0x1
 1471 03f6 7904     		.2byte	0x479
 1472 03f8 00000000 		.4byte	.LFB20
 1473 03fc 24000000 		.4byte	.LFE20-.LFB20
 1474 0400 01       		.uleb128 0x1
 1475 0401 9C       		.byte	0x9c
 1476 0402 30040000 		.4byte	0x430
 1477 0406 13       		.uleb128 0x13
 1478 0407 28000000 		.4byte	.LASF47
 1479 040b 01       		.byte	0x1
 1480 040c 7904     		.2byte	0x479
 1481 040e 30040000 		.4byte	0x430
 1482 0412 87000000 		.4byte	.LLST5
 1483 0416 12       		.uleb128 0x12
 1484 0417 A7010000 		.4byte	.LASF48
 1485 041b 01       		.byte	0x1
 1486 041c 7B04     		.2byte	0x47b
 1487 041e 76000000 		.4byte	0x76
 1488 0422 C9000000 		.4byte	.LLST6
 1489 0426 0A       		.uleb128 0xa
 1490 0427 0E000000 		.4byte	.LVL37
 1491 042b CB030000 		.4byte	0x3cb
 1492 042f 00       		.byte	0
 1493 0430 14       		.uleb128 0x14
 1494 0431 04       		.byte	0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 55


 1495 0432 36040000 		.4byte	0x436
 1496 0436 15       		.uleb128 0x15
 1497 0437 8F000000 		.4byte	0x8f
 1498 043b 0E       		.uleb128 0xe
 1499 043c 6A010000 		.4byte	.LASF49
 1500 0440 01       		.byte	0x1
 1501 0441 A704     		.2byte	0x4a7
 1502 0443 00000000 		.4byte	.LFB21
 1503 0447 28000000 		.4byte	.LFE21-.LFB21
 1504 044b 01       		.uleb128 0x1
 1505 044c 9C       		.byte	0x9c
 1506 044d 8B040000 		.4byte	0x48b
 1507 0451 13       		.uleb128 0x13
 1508 0452 28000000 		.4byte	.LASF47
 1509 0456 01       		.byte	0x1
 1510 0457 A704     		.2byte	0x4a7
 1511 0459 8B040000 		.4byte	0x48b
 1512 045d 0A010000 		.4byte	.LLST7
 1513 0461 13       		.uleb128 0x13
 1514 0462 BC020000 		.4byte	.LASF50
 1515 0466 01       		.byte	0x1
 1516 0467 A704     		.2byte	0x4a7
 1517 0469 6B000000 		.4byte	0x6b
 1518 046d 4C010000 		.4byte	.LLST8
 1519 0471 12       		.uleb128 0x12
 1520 0472 A7010000 		.4byte	.LASF48
 1521 0476 01       		.byte	0x1
 1522 0477 AA04     		.2byte	0x4aa
 1523 0479 6B000000 		.4byte	0x6b
 1524 047d 86010000 		.4byte	.LLST9
 1525 0481 0A       		.uleb128 0xa
 1526 0482 0E000000 		.4byte	.LVL45
 1527 0486 CB030000 		.4byte	0x3cb
 1528 048a 00       		.byte	0
 1529 048b 14       		.uleb128 0x14
 1530 048c 04       		.byte	0x4
 1531 048d 91040000 		.4byte	0x491
 1532 0491 15       		.uleb128 0x15
 1533 0492 6B000000 		.4byte	0x6b
 1534 0496 0E       		.uleb128 0xe
 1535 0497 4B010000 		.4byte	.LASF51
 1536 049b 01       		.byte	0x1
 1537 049c CE04     		.2byte	0x4ce
 1538 049e 00000000 		.4byte	.LFB22
 1539 04a2 20000000 		.4byte	.LFE22-.LFB22
 1540 04a6 01       		.uleb128 0x1
 1541 04a7 9C       		.byte	0x9c
 1542 04a8 E8040000 		.4byte	0x4e8
 1543 04ac 13       		.uleb128 0x13
 1544 04ad 1D000000 		.4byte	.LASF42
 1545 04b1 01       		.byte	0x1
 1546 04b2 CE04     		.2byte	0x4ce
 1547 04b4 6B000000 		.4byte	0x6b
 1548 04b8 C7010000 		.4byte	.LLST10
 1549 04bc 0A       		.uleb128 0xa
 1550 04bd 0C000000 		.4byte	.LVL52
 1551 04c1 CB030000 		.4byte	0x3cb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 56


 1552 04c5 16       		.uleb128 0x16
 1553 04c6 12000000 		.4byte	.LVL53
 1554 04ca CB030000 		.4byte	0x3cb
 1555 04ce D8040000 		.4byte	0x4d8
 1556 04d2 0C       		.uleb128 0xc
 1557 04d3 01       		.uleb128 0x1
 1558 04d4 50       		.byte	0x50
 1559 04d5 01       		.uleb128 0x1
 1560 04d6 3D       		.byte	0x3d
 1561 04d7 00       		.byte	0
 1562 04d8 0B       		.uleb128 0xb
 1563 04d9 18000000 		.4byte	.LVL54
 1564 04dd CB030000 		.4byte	0x3cb
 1565 04e1 0C       		.uleb128 0xc
 1566 04e2 01       		.uleb128 0x1
 1567 04e3 50       		.byte	0x50
 1568 04e4 01       		.uleb128 0x1
 1569 04e5 3A       		.byte	0x3a
 1570 04e6 00       		.byte	0
 1571 04e7 00       		.byte	0
 1572 04e8 10       		.uleb128 0x10
 1573 04e9 54020000 		.4byte	.LASF52
 1574 04ed 01       		.byte	0x1
 1575 04ee F904     		.2byte	0x4f9
 1576 04f0 6B000000 		.4byte	0x6b
 1577 04f4 00000000 		.4byte	.LFB23
 1578 04f8 24000000 		.4byte	.LFE23-.LFB23
 1579 04fc 01       		.uleb128 0x1
 1580 04fd 9C       		.byte	0x9c
 1581 04fe 13050000 		.4byte	0x513
 1582 0502 12       		.uleb128 0x12
 1583 0503 8F010000 		.4byte	.LASF33
 1584 0507 01       		.byte	0x1
 1585 0508 FC04     		.2byte	0x4fc
 1586 050a 6B000000 		.4byte	0x6b
 1587 050e E8010000 		.4byte	.LLST11
 1588 0512 00       		.byte	0
 1589 0513 0E       		.uleb128 0xe
 1590 0514 38010000 		.4byte	.LASF53
 1591 0518 01       		.byte	0x1
 1592 0519 4A05     		.2byte	0x54a
 1593 051b 00000000 		.4byte	.LFB24
 1594 051f 24000000 		.4byte	.LFE24-.LFB24
 1595 0523 01       		.uleb128 0x1
 1596 0524 9C       		.byte	0x9c
 1597 0525 4C050000 		.4byte	0x54c
 1598 0529 12       		.uleb128 0x12
 1599 052a 1B030000 		.4byte	.LASF20
 1600 052e 01       		.byte	0x1
 1601 052f 4C05     		.2byte	0x54c
 1602 0531 6B000000 		.4byte	0x6b
 1603 0535 06020000 		.4byte	.LLST12
 1604 0539 0A       		.uleb128 0xa
 1605 053a 06000000 		.4byte	.LVL57
 1606 053e D5050000 		.4byte	0x5d5
 1607 0542 0A       		.uleb128 0xa
 1608 0543 1C000000 		.4byte	.LVL58
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 57


 1609 0547 E7050000 		.4byte	0x5e7
 1610 054b 00       		.byte	0
 1611 054c 0E       		.uleb128 0xe
 1612 054d AD020000 		.4byte	.LASF54
 1613 0551 01       		.byte	0x1
 1614 0552 A005     		.2byte	0x5a0
 1615 0554 00000000 		.4byte	.LFB25
 1616 0558 58000000 		.4byte	.LFE25-.LFB25
 1617 055c 01       		.uleb128 0x1
 1618 055d 9C       		.byte	0x9c
 1619 055e 9F050000 		.4byte	0x59f
 1620 0562 13       		.uleb128 0x13
 1621 0563 16010000 		.4byte	.LASF55
 1622 0567 01       		.byte	0x1
 1623 0568 A005     		.2byte	0x5a0
 1624 056a 6B000000 		.4byte	0x6b
 1625 056e 19020000 		.4byte	.LLST13
 1626 0572 17       		.uleb128 0x17
 1627 0573 06000000 		.4byte	.LBB2
 1628 0577 52000000 		.4byte	.LBE2-.LBB2
 1629 057b 12       		.uleb128 0x12
 1630 057c F3010000 		.4byte	.LASF56
 1631 0580 01       		.byte	0x1
 1632 0581 A805     		.2byte	0x5a8
 1633 0583 6B000000 		.4byte	0x6b
 1634 0587 3A020000 		.4byte	.LLST14
 1635 058b 11       		.uleb128 0x11
 1636 058c A3000000 		.4byte	.LASF57
 1637 0590 01       		.byte	0x1
 1638 0591 D005     		.2byte	0x5d0
 1639 0593 6B000000 		.4byte	0x6b
 1640 0597 05       		.uleb128 0x5
 1641 0598 03       		.byte	0x3
 1642 0599 01000000 		.4byte	txPeriod.4989
 1643 059d 00       		.byte	0
 1644 059e 00       		.byte	0
 1645 059f 0E       		.uleb128 0xe
 1646 05a0 B7010000 		.4byte	.LASF58
 1647 05a4 01       		.byte	0x1
 1648 05a5 2406     		.2byte	0x624
 1649 05a7 00000000 		.4byte	.LFB26
 1650 05ab 02000000 		.4byte	.LFE26-.LFB26
 1651 05af 01       		.uleb128 0x1
 1652 05b0 9C       		.byte	0x9c
 1653 05b1 C4050000 		.4byte	0x5c4
 1654 05b5 0F       		.uleb128 0xf
 1655 05b6 F8000000 		.4byte	.LASF36
 1656 05ba 01       		.byte	0x1
 1657 05bb 2406     		.2byte	0x624
 1658 05bd 6B000000 		.4byte	0x6b
 1659 05c1 01       		.uleb128 0x1
 1660 05c2 50       		.byte	0x50
 1661 05c3 00       		.byte	0
 1662 05c4 18       		.uleb128 0x18
 1663 05c5 2C030000 		.4byte	.LASF65
 1664 05c9 01       		.byte	0x1
 1665 05ca 1B       		.byte	0x1b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 58


 1666 05cb 6B000000 		.4byte	0x6b
 1667 05cf 05       		.uleb128 0x5
 1668 05d0 03       		.byte	0x3
 1669 05d1 00000000 		.4byte	UART_initVar
 1670 05d5 19       		.uleb128 0x19
 1671 05d6 78010000 		.4byte	.LASF66
 1672 05da 04       		.byte	0x4
 1673 05db 7E       		.byte	0x7e
 1674 05dc 6B000000 		.4byte	0x6b
 1675 05e0 1A       		.uleb128 0x1a
 1676 05e1 DF010000 		.4byte	.LASF59
 1677 05e5 03       		.byte	0x3
 1678 05e6 27       		.byte	0x27
 1679 05e7 1B       		.uleb128 0x1b
 1680 05e8 07000000 		.4byte	.LASF67
 1681 05ec 04       		.byte	0x4
 1682 05ed 7F       		.byte	0x7f
 1683 05ee F8050000 		.4byte	0x5f8
 1684 05f2 1C       		.uleb128 0x1c
 1685 05f3 6B000000 		.4byte	0x6b
 1686 05f7 00       		.byte	0
 1687 05f8 1A       		.uleb128 0x1a
 1688 05f9 3B020000 		.4byte	.LASF60
 1689 05fd 03       		.byte	0x3
 1690 05fe 28       		.byte	0x28
 1691 05ff 00       		.byte	0
 1692              		.section	.debug_abbrev,"",%progbits
 1693              	.Ldebug_abbrev0:
 1694 0000 01       		.uleb128 0x1
 1695 0001 11       		.uleb128 0x11
 1696 0002 01       		.byte	0x1
 1697 0003 25       		.uleb128 0x25
 1698 0004 0E       		.uleb128 0xe
 1699 0005 13       		.uleb128 0x13
 1700 0006 0B       		.uleb128 0xb
 1701 0007 03       		.uleb128 0x3
 1702 0008 0E       		.uleb128 0xe
 1703 0009 1B       		.uleb128 0x1b
 1704 000a 0E       		.uleb128 0xe
 1705 000b 55       		.uleb128 0x55
 1706 000c 17       		.uleb128 0x17
 1707 000d 11       		.uleb128 0x11
 1708 000e 01       		.uleb128 0x1
 1709 000f 10       		.uleb128 0x10
 1710 0010 17       		.uleb128 0x17
 1711 0011 00       		.byte	0
 1712 0012 00       		.byte	0
 1713 0013 02       		.uleb128 0x2
 1714 0014 24       		.uleb128 0x24
 1715 0015 00       		.byte	0
 1716 0016 0B       		.uleb128 0xb
 1717 0017 0B       		.uleb128 0xb
 1718 0018 3E       		.uleb128 0x3e
 1719 0019 0B       		.uleb128 0xb
 1720 001a 03       		.uleb128 0x3
 1721 001b 0E       		.uleb128 0xe
 1722 001c 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 59


 1723 001d 00       		.byte	0
 1724 001e 03       		.uleb128 0x3
 1725 001f 24       		.uleb128 0x24
 1726 0020 00       		.byte	0
 1727 0021 0B       		.uleb128 0xb
 1728 0022 0B       		.uleb128 0xb
 1729 0023 3E       		.uleb128 0x3e
 1730 0024 0B       		.uleb128 0xb
 1731 0025 03       		.uleb128 0x3
 1732 0026 08       		.uleb128 0x8
 1733 0027 00       		.byte	0
 1734 0028 00       		.byte	0
 1735 0029 04       		.uleb128 0x4
 1736 002a 16       		.uleb128 0x16
 1737 002b 00       		.byte	0
 1738 002c 03       		.uleb128 0x3
 1739 002d 0E       		.uleb128 0xe
 1740 002e 3A       		.uleb128 0x3a
 1741 002f 0B       		.uleb128 0xb
 1742 0030 3B       		.uleb128 0x3b
 1743 0031 0B       		.uleb128 0xb
 1744 0032 49       		.uleb128 0x49
 1745 0033 13       		.uleb128 0x13
 1746 0034 00       		.byte	0
 1747 0035 00       		.byte	0
 1748 0036 05       		.uleb128 0x5
 1749 0037 16       		.uleb128 0x16
 1750 0038 00       		.byte	0
 1751 0039 03       		.uleb128 0x3
 1752 003a 0E       		.uleb128 0xe
 1753 003b 3A       		.uleb128 0x3a
 1754 003c 0B       		.uleb128 0xb
 1755 003d 3B       		.uleb128 0x3b
 1756 003e 05       		.uleb128 0x5
 1757 003f 49       		.uleb128 0x49
 1758 0040 13       		.uleb128 0x13
 1759 0041 00       		.byte	0
 1760 0042 00       		.byte	0
 1761 0043 06       		.uleb128 0x6
 1762 0044 35       		.uleb128 0x35
 1763 0045 00       		.byte	0
 1764 0046 49       		.uleb128 0x49
 1765 0047 13       		.uleb128 0x13
 1766 0048 00       		.byte	0
 1767 0049 00       		.byte	0
 1768 004a 07       		.uleb128 0x7
 1769 004b 2E       		.uleb128 0x2e
 1770 004c 00       		.byte	0
 1771 004d 3F       		.uleb128 0x3f
 1772 004e 19       		.uleb128 0x19
 1773 004f 03       		.uleb128 0x3
 1774 0050 0E       		.uleb128 0xe
 1775 0051 3A       		.uleb128 0x3a
 1776 0052 0B       		.uleb128 0xb
 1777 0053 3B       		.uleb128 0x3b
 1778 0054 0B       		.uleb128 0xb
 1779 0055 27       		.uleb128 0x27
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 60


 1780 0056 19       		.uleb128 0x19
 1781 0057 11       		.uleb128 0x11
 1782 0058 01       		.uleb128 0x1
 1783 0059 12       		.uleb128 0x12
 1784 005a 06       		.uleb128 0x6
 1785 005b 40       		.uleb128 0x40
 1786 005c 18       		.uleb128 0x18
 1787 005d 9742     		.uleb128 0x2117
 1788 005f 19       		.uleb128 0x19
 1789 0060 00       		.byte	0
 1790 0061 00       		.byte	0
 1791 0062 08       		.uleb128 0x8
 1792 0063 2E       		.uleb128 0x2e
 1793 0064 01       		.byte	0x1
 1794 0065 3F       		.uleb128 0x3f
 1795 0066 19       		.uleb128 0x19
 1796 0067 03       		.uleb128 0x3
 1797 0068 0E       		.uleb128 0xe
 1798 0069 3A       		.uleb128 0x3a
 1799 006a 0B       		.uleb128 0xb
 1800 006b 3B       		.uleb128 0x3b
 1801 006c 0B       		.uleb128 0xb
 1802 006d 27       		.uleb128 0x27
 1803 006e 19       		.uleb128 0x19
 1804 006f 11       		.uleb128 0x11
 1805 0070 01       		.uleb128 0x1
 1806 0071 12       		.uleb128 0x12
 1807 0072 06       		.uleb128 0x6
 1808 0073 40       		.uleb128 0x40
 1809 0074 18       		.uleb128 0x18
 1810 0075 9742     		.uleb128 0x2117
 1811 0077 19       		.uleb128 0x19
 1812 0078 01       		.uleb128 0x1
 1813 0079 13       		.uleb128 0x13
 1814 007a 00       		.byte	0
 1815 007b 00       		.byte	0
 1816 007c 09       		.uleb128 0x9
 1817 007d 34       		.uleb128 0x34
 1818 007e 00       		.byte	0
 1819 007f 03       		.uleb128 0x3
 1820 0080 0E       		.uleb128 0xe
 1821 0081 3A       		.uleb128 0x3a
 1822 0082 0B       		.uleb128 0xb
 1823 0083 3B       		.uleb128 0x3b
 1824 0084 0B       		.uleb128 0xb
 1825 0085 49       		.uleb128 0x49
 1826 0086 13       		.uleb128 0x13
 1827 0087 02       		.uleb128 0x2
 1828 0088 17       		.uleb128 0x17
 1829 0089 00       		.byte	0
 1830 008a 00       		.byte	0
 1831 008b 0A       		.uleb128 0xa
 1832 008c 898201   		.uleb128 0x4109
 1833 008f 00       		.byte	0
 1834 0090 11       		.uleb128 0x11
 1835 0091 01       		.uleb128 0x1
 1836 0092 31       		.uleb128 0x31
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 61


 1837 0093 13       		.uleb128 0x13
 1838 0094 00       		.byte	0
 1839 0095 00       		.byte	0
 1840 0096 0B       		.uleb128 0xb
 1841 0097 898201   		.uleb128 0x4109
 1842 009a 01       		.byte	0x1
 1843 009b 11       		.uleb128 0x11
 1844 009c 01       		.uleb128 0x1
 1845 009d 31       		.uleb128 0x31
 1846 009e 13       		.uleb128 0x13
 1847 009f 00       		.byte	0
 1848 00a0 00       		.byte	0
 1849 00a1 0C       		.uleb128 0xc
 1850 00a2 8A8201   		.uleb128 0x410a
 1851 00a5 00       		.byte	0
 1852 00a6 02       		.uleb128 0x2
 1853 00a7 18       		.uleb128 0x18
 1854 00a8 9142     		.uleb128 0x2111
 1855 00aa 18       		.uleb128 0x18
 1856 00ab 00       		.byte	0
 1857 00ac 00       		.byte	0
 1858 00ad 0D       		.uleb128 0xd
 1859 00ae 2E       		.uleb128 0x2e
 1860 00af 00       		.byte	0
 1861 00b0 3F       		.uleb128 0x3f
 1862 00b1 19       		.uleb128 0x19
 1863 00b2 03       		.uleb128 0x3
 1864 00b3 0E       		.uleb128 0xe
 1865 00b4 3A       		.uleb128 0x3a
 1866 00b5 0B       		.uleb128 0xb
 1867 00b6 3B       		.uleb128 0x3b
 1868 00b7 05       		.uleb128 0x5
 1869 00b8 27       		.uleb128 0x27
 1870 00b9 19       		.uleb128 0x19
 1871 00ba 49       		.uleb128 0x49
 1872 00bb 13       		.uleb128 0x13
 1873 00bc 11       		.uleb128 0x11
 1874 00bd 01       		.uleb128 0x1
 1875 00be 12       		.uleb128 0x12
 1876 00bf 06       		.uleb128 0x6
 1877 00c0 40       		.uleb128 0x40
 1878 00c1 18       		.uleb128 0x18
 1879 00c2 9742     		.uleb128 0x2117
 1880 00c4 19       		.uleb128 0x19
 1881 00c5 00       		.byte	0
 1882 00c6 00       		.byte	0
 1883 00c7 0E       		.uleb128 0xe
 1884 00c8 2E       		.uleb128 0x2e
 1885 00c9 01       		.byte	0x1
 1886 00ca 3F       		.uleb128 0x3f
 1887 00cb 19       		.uleb128 0x19
 1888 00cc 03       		.uleb128 0x3
 1889 00cd 0E       		.uleb128 0xe
 1890 00ce 3A       		.uleb128 0x3a
 1891 00cf 0B       		.uleb128 0xb
 1892 00d0 3B       		.uleb128 0x3b
 1893 00d1 05       		.uleb128 0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 62


 1894 00d2 27       		.uleb128 0x27
 1895 00d3 19       		.uleb128 0x19
 1896 00d4 11       		.uleb128 0x11
 1897 00d5 01       		.uleb128 0x1
 1898 00d6 12       		.uleb128 0x12
 1899 00d7 06       		.uleb128 0x6
 1900 00d8 40       		.uleb128 0x40
 1901 00d9 18       		.uleb128 0x18
 1902 00da 9742     		.uleb128 0x2117
 1903 00dc 19       		.uleb128 0x19
 1904 00dd 01       		.uleb128 0x1
 1905 00de 13       		.uleb128 0x13
 1906 00df 00       		.byte	0
 1907 00e0 00       		.byte	0
 1908 00e1 0F       		.uleb128 0xf
 1909 00e2 05       		.uleb128 0x5
 1910 00e3 00       		.byte	0
 1911 00e4 03       		.uleb128 0x3
 1912 00e5 0E       		.uleb128 0xe
 1913 00e6 3A       		.uleb128 0x3a
 1914 00e7 0B       		.uleb128 0xb
 1915 00e8 3B       		.uleb128 0x3b
 1916 00e9 05       		.uleb128 0x5
 1917 00ea 49       		.uleb128 0x49
 1918 00eb 13       		.uleb128 0x13
 1919 00ec 02       		.uleb128 0x2
 1920 00ed 18       		.uleb128 0x18
 1921 00ee 00       		.byte	0
 1922 00ef 00       		.byte	0
 1923 00f0 10       		.uleb128 0x10
 1924 00f1 2E       		.uleb128 0x2e
 1925 00f2 01       		.byte	0x1
 1926 00f3 3F       		.uleb128 0x3f
 1927 00f4 19       		.uleb128 0x19
 1928 00f5 03       		.uleb128 0x3
 1929 00f6 0E       		.uleb128 0xe
 1930 00f7 3A       		.uleb128 0x3a
 1931 00f8 0B       		.uleb128 0xb
 1932 00f9 3B       		.uleb128 0x3b
 1933 00fa 05       		.uleb128 0x5
 1934 00fb 27       		.uleb128 0x27
 1935 00fc 19       		.uleb128 0x19
 1936 00fd 49       		.uleb128 0x49
 1937 00fe 13       		.uleb128 0x13
 1938 00ff 11       		.uleb128 0x11
 1939 0100 01       		.uleb128 0x1
 1940 0101 12       		.uleb128 0x12
 1941 0102 06       		.uleb128 0x6
 1942 0103 40       		.uleb128 0x40
 1943 0104 18       		.uleb128 0x18
 1944 0105 9742     		.uleb128 0x2117
 1945 0107 19       		.uleb128 0x19
 1946 0108 01       		.uleb128 0x1
 1947 0109 13       		.uleb128 0x13
 1948 010a 00       		.byte	0
 1949 010b 00       		.byte	0
 1950 010c 11       		.uleb128 0x11
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 63


 1951 010d 34       		.uleb128 0x34
 1952 010e 00       		.byte	0
 1953 010f 03       		.uleb128 0x3
 1954 0110 0E       		.uleb128 0xe
 1955 0111 3A       		.uleb128 0x3a
 1956 0112 0B       		.uleb128 0xb
 1957 0113 3B       		.uleb128 0x3b
 1958 0114 05       		.uleb128 0x5
 1959 0115 49       		.uleb128 0x49
 1960 0116 13       		.uleb128 0x13
 1961 0117 02       		.uleb128 0x2
 1962 0118 18       		.uleb128 0x18
 1963 0119 00       		.byte	0
 1964 011a 00       		.byte	0
 1965 011b 12       		.uleb128 0x12
 1966 011c 34       		.uleb128 0x34
 1967 011d 00       		.byte	0
 1968 011e 03       		.uleb128 0x3
 1969 011f 0E       		.uleb128 0xe
 1970 0120 3A       		.uleb128 0x3a
 1971 0121 0B       		.uleb128 0xb
 1972 0122 3B       		.uleb128 0x3b
 1973 0123 05       		.uleb128 0x5
 1974 0124 49       		.uleb128 0x49
 1975 0125 13       		.uleb128 0x13
 1976 0126 02       		.uleb128 0x2
 1977 0127 17       		.uleb128 0x17
 1978 0128 00       		.byte	0
 1979 0129 00       		.byte	0
 1980 012a 13       		.uleb128 0x13
 1981 012b 05       		.uleb128 0x5
 1982 012c 00       		.byte	0
 1983 012d 03       		.uleb128 0x3
 1984 012e 0E       		.uleb128 0xe
 1985 012f 3A       		.uleb128 0x3a
 1986 0130 0B       		.uleb128 0xb
 1987 0131 3B       		.uleb128 0x3b
 1988 0132 05       		.uleb128 0x5
 1989 0133 49       		.uleb128 0x49
 1990 0134 13       		.uleb128 0x13
 1991 0135 02       		.uleb128 0x2
 1992 0136 17       		.uleb128 0x17
 1993 0137 00       		.byte	0
 1994 0138 00       		.byte	0
 1995 0139 14       		.uleb128 0x14
 1996 013a 0F       		.uleb128 0xf
 1997 013b 00       		.byte	0
 1998 013c 0B       		.uleb128 0xb
 1999 013d 0B       		.uleb128 0xb
 2000 013e 49       		.uleb128 0x49
 2001 013f 13       		.uleb128 0x13
 2002 0140 00       		.byte	0
 2003 0141 00       		.byte	0
 2004 0142 15       		.uleb128 0x15
 2005 0143 26       		.uleb128 0x26
 2006 0144 00       		.byte	0
 2007 0145 49       		.uleb128 0x49
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 64


 2008 0146 13       		.uleb128 0x13
 2009 0147 00       		.byte	0
 2010 0148 00       		.byte	0
 2011 0149 16       		.uleb128 0x16
 2012 014a 898201   		.uleb128 0x4109
 2013 014d 01       		.byte	0x1
 2014 014e 11       		.uleb128 0x11
 2015 014f 01       		.uleb128 0x1
 2016 0150 31       		.uleb128 0x31
 2017 0151 13       		.uleb128 0x13
 2018 0152 01       		.uleb128 0x1
 2019 0153 13       		.uleb128 0x13
 2020 0154 00       		.byte	0
 2021 0155 00       		.byte	0
 2022 0156 17       		.uleb128 0x17
 2023 0157 0B       		.uleb128 0xb
 2024 0158 01       		.byte	0x1
 2025 0159 11       		.uleb128 0x11
 2026 015a 01       		.uleb128 0x1
 2027 015b 12       		.uleb128 0x12
 2028 015c 06       		.uleb128 0x6
 2029 015d 00       		.byte	0
 2030 015e 00       		.byte	0
 2031 015f 18       		.uleb128 0x18
 2032 0160 34       		.uleb128 0x34
 2033 0161 00       		.byte	0
 2034 0162 03       		.uleb128 0x3
 2035 0163 0E       		.uleb128 0xe
 2036 0164 3A       		.uleb128 0x3a
 2037 0165 0B       		.uleb128 0xb
 2038 0166 3B       		.uleb128 0x3b
 2039 0167 0B       		.uleb128 0xb
 2040 0168 49       		.uleb128 0x49
 2041 0169 13       		.uleb128 0x13
 2042 016a 3F       		.uleb128 0x3f
 2043 016b 19       		.uleb128 0x19
 2044 016c 02       		.uleb128 0x2
 2045 016d 18       		.uleb128 0x18
 2046 016e 00       		.byte	0
 2047 016f 00       		.byte	0
 2048 0170 19       		.uleb128 0x19
 2049 0171 2E       		.uleb128 0x2e
 2050 0172 00       		.byte	0
 2051 0173 3F       		.uleb128 0x3f
 2052 0174 19       		.uleb128 0x19
 2053 0175 03       		.uleb128 0x3
 2054 0176 0E       		.uleb128 0xe
 2055 0177 3A       		.uleb128 0x3a
 2056 0178 0B       		.uleb128 0xb
 2057 0179 3B       		.uleb128 0x3b
 2058 017a 0B       		.uleb128 0xb
 2059 017b 27       		.uleb128 0x27
 2060 017c 19       		.uleb128 0x19
 2061 017d 49       		.uleb128 0x49
 2062 017e 13       		.uleb128 0x13
 2063 017f 3C       		.uleb128 0x3c
 2064 0180 19       		.uleb128 0x19
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 65


 2065 0181 00       		.byte	0
 2066 0182 00       		.byte	0
 2067 0183 1A       		.uleb128 0x1a
 2068 0184 2E       		.uleb128 0x2e
 2069 0185 00       		.byte	0
 2070 0186 3F       		.uleb128 0x3f
 2071 0187 19       		.uleb128 0x19
 2072 0188 03       		.uleb128 0x3
 2073 0189 0E       		.uleb128 0xe
 2074 018a 3A       		.uleb128 0x3a
 2075 018b 0B       		.uleb128 0xb
 2076 018c 3B       		.uleb128 0x3b
 2077 018d 0B       		.uleb128 0xb
 2078 018e 27       		.uleb128 0x27
 2079 018f 19       		.uleb128 0x19
 2080 0190 3C       		.uleb128 0x3c
 2081 0191 19       		.uleb128 0x19
 2082 0192 00       		.byte	0
 2083 0193 00       		.byte	0
 2084 0194 1B       		.uleb128 0x1b
 2085 0195 2E       		.uleb128 0x2e
 2086 0196 01       		.byte	0x1
 2087 0197 3F       		.uleb128 0x3f
 2088 0198 19       		.uleb128 0x19
 2089 0199 03       		.uleb128 0x3
 2090 019a 0E       		.uleb128 0xe
 2091 019b 3A       		.uleb128 0x3a
 2092 019c 0B       		.uleb128 0xb
 2093 019d 3B       		.uleb128 0x3b
 2094 019e 0B       		.uleb128 0xb
 2095 019f 27       		.uleb128 0x27
 2096 01a0 19       		.uleb128 0x19
 2097 01a1 3C       		.uleb128 0x3c
 2098 01a2 19       		.uleb128 0x19
 2099 01a3 01       		.uleb128 0x1
 2100 01a4 13       		.uleb128 0x13
 2101 01a5 00       		.byte	0
 2102 01a6 00       		.byte	0
 2103 01a7 1C       		.uleb128 0x1c
 2104 01a8 05       		.uleb128 0x5
 2105 01a9 00       		.byte	0
 2106 01aa 49       		.uleb128 0x49
 2107 01ab 13       		.uleb128 0x13
 2108 01ac 00       		.byte	0
 2109 01ad 00       		.byte	0
 2110 01ae 00       		.byte	0
 2111              		.section	.debug_loc,"",%progbits
 2112              	.Ldebug_loc0:
 2113              	.LLST0:
 2114 0000 08000000 		.4byte	.LVL1
 2115 0004 32000000 		.4byte	.LVL4
 2116 0008 0100     		.2byte	0x1
 2117 000a 54       		.byte	0x54
 2118 000b 00000000 		.4byte	0
 2119 000f 00000000 		.4byte	0
 2120              	.LLST1:
 2121 0013 08000000 		.4byte	.LVL8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 66


 2122 0017 32000000 		.4byte	.LVL11
 2123 001b 0100     		.2byte	0x1
 2124 001d 54       		.byte	0x54
 2125 001e 00000000 		.4byte	0
 2126 0022 00000000 		.4byte	0
 2127              	.LLST2:
 2128 0026 04000000 		.4byte	.LVL15
 2129 002a 08000000 		.4byte	.LVL16
 2130 002e 0600     		.2byte	0x6
 2131 0030 70       		.byte	0x70
 2132 0031 00       		.sleb128 0
 2133 0032 08       		.byte	0x8
 2134 0033 7F       		.byte	0x7f
 2135 0034 1A       		.byte	0x1a
 2136 0035 9F       		.byte	0x9f
 2137 0036 00000000 		.4byte	0
 2138 003a 00000000 		.4byte	0
 2139              	.LLST3:
 2140 003e 00000000 		.4byte	.LVL17
 2141 0042 12000000 		.4byte	.LVL19
 2142 0046 0200     		.2byte	0x2
 2143 0048 30       		.byte	0x30
 2144 0049 9F       		.byte	0x9f
 2145 004a 12000000 		.4byte	.LVL19
 2146 004e 1A000000 		.4byte	.LVL20
 2147 0052 0100     		.2byte	0x1
 2148 0054 50       		.byte	0x50
 2149 0055 1A000000 		.4byte	.LVL20
 2150 0059 1E000000 		.4byte	.LVL21
 2151 005d 0200     		.2byte	0x2
 2152 005f 30       		.byte	0x30
 2153 0060 9F       		.byte	0x9f
 2154 0061 1E000000 		.4byte	.LVL21
 2155 0065 2C000000 		.4byte	.LFE9
 2156 0069 0100     		.2byte	0x1
 2157 006b 50       		.byte	0x50
 2158 006c 00000000 		.4byte	0
 2159 0070 00000000 		.4byte	0
 2160              	.LLST4:
 2161 0074 06000000 		.4byte	.LVL26
 2162 0078 1B000000 		.4byte	.LVL27-1
 2163 007c 0100     		.2byte	0x1
 2164 007e 50       		.byte	0x50
 2165 007f 00000000 		.4byte	0
 2166 0083 00000000 		.4byte	0
 2167              	.LLST5:
 2168 0087 00000000 		.4byte	.LVL34
 2169 008b 0A000000 		.4byte	.LVL36
 2170 008f 0100     		.2byte	0x1
 2171 0091 50       		.byte	0x50
 2172 0092 0A000000 		.4byte	.LVL36
 2173 0096 14000000 		.4byte	.LVL40
 2174 009a 0100     		.2byte	0x1
 2175 009c 55       		.byte	0x55
 2176 009d 14000000 		.4byte	.LVL40
 2177 00a1 18000000 		.4byte	.LVL41
 2178 00a5 0100     		.2byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 67


 2179 00a7 50       		.byte	0x50
 2180 00a8 18000000 		.4byte	.LVL41
 2181 00ac 20000000 		.4byte	.LVL42
 2182 00b0 0100     		.2byte	0x1
 2183 00b2 55       		.byte	0x55
 2184 00b3 20000000 		.4byte	.LVL42
 2185 00b7 24000000 		.4byte	.LFE20
 2186 00bb 0400     		.2byte	0x4
 2187 00bd F3       		.byte	0xf3
 2188 00be 01       		.uleb128 0x1
 2189 00bf 50       		.byte	0x50
 2190 00c0 9F       		.byte	0x9f
 2191 00c1 00000000 		.4byte	0
 2192 00c5 00000000 		.4byte	0
 2193              	.LLST6:
 2194 00c9 02000000 		.4byte	.LVL35
 2195 00cd 0A000000 		.4byte	.LVL36
 2196 00d1 0200     		.2byte	0x2
 2197 00d3 30       		.byte	0x30
 2198 00d4 9F       		.byte	0x9f
 2199 00d5 0A000000 		.4byte	.LVL36
 2200 00d9 10000000 		.4byte	.LVL38
 2201 00dd 0100     		.2byte	0x1
 2202 00df 54       		.byte	0x54
 2203 00e0 12000000 		.4byte	.LVL39
 2204 00e4 14000000 		.4byte	.LVL40
 2205 00e8 0100     		.2byte	0x1
 2206 00ea 54       		.byte	0x54
 2207 00eb 14000000 		.4byte	.LVL40
 2208 00ef 18000000 		.4byte	.LVL41
 2209 00f3 0200     		.2byte	0x2
 2210 00f5 30       		.byte	0x30
 2211 00f6 9F       		.byte	0x9f
 2212 00f7 18000000 		.4byte	.LVL41
 2213 00fb 20000000 		.4byte	.LVL42
 2214 00ff 0100     		.2byte	0x1
 2215 0101 54       		.byte	0x54
 2216 0102 00000000 		.4byte	0
 2217 0106 00000000 		.4byte	0
 2218              	.LLST7:
 2219 010a 00000000 		.4byte	.LVL43
 2220 010e 08000000 		.4byte	.LVL44
 2221 0112 0100     		.2byte	0x1
 2222 0114 50       		.byte	0x50
 2223 0115 08000000 		.4byte	.LVL44
 2224 0119 14000000 		.4byte	.LVL48
 2225 011d 0100     		.2byte	0x1
 2226 011f 56       		.byte	0x56
 2227 0120 14000000 		.4byte	.LVL48
 2228 0124 1C000000 		.4byte	.LVL49
 2229 0128 0100     		.2byte	0x1
 2230 012a 50       		.byte	0x50
 2231 012b 1C000000 		.4byte	.LVL49
 2232 012f 22000000 		.4byte	.LVL50
 2233 0133 0100     		.2byte	0x1
 2234 0135 56       		.byte	0x56
 2235 0136 22000000 		.4byte	.LVL50
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 68


 2236 013a 28000000 		.4byte	.LFE21
 2237 013e 0400     		.2byte	0x4
 2238 0140 F3       		.byte	0xf3
 2239 0141 01       		.uleb128 0x1
 2240 0142 50       		.byte	0x50
 2241 0143 9F       		.byte	0x9f
 2242 0144 00000000 		.4byte	0
 2243 0148 00000000 		.4byte	0
 2244              	.LLST8:
 2245 014c 00000000 		.4byte	.LVL43
 2246 0150 08000000 		.4byte	.LVL44
 2247 0154 0100     		.2byte	0x1
 2248 0156 51       		.byte	0x51
 2249 0157 08000000 		.4byte	.LVL44
 2250 015b 14000000 		.4byte	.LVL48
 2251 015f 0400     		.2byte	0x4
 2252 0161 F3       		.byte	0xf3
 2253 0162 01       		.uleb128 0x1
 2254 0163 51       		.byte	0x51
 2255 0164 9F       		.byte	0x9f
 2256 0165 14000000 		.4byte	.LVL48
 2257 0169 1C000000 		.4byte	.LVL49
 2258 016d 0100     		.2byte	0x1
 2259 016f 51       		.byte	0x51
 2260 0170 1C000000 		.4byte	.LVL49
 2261 0174 28000000 		.4byte	.LFE21
 2262 0178 0400     		.2byte	0x4
 2263 017a F3       		.byte	0xf3
 2264 017b 01       		.uleb128 0x1
 2265 017c 51       		.byte	0x51
 2266 017d 9F       		.byte	0x9f
 2267 017e 00000000 		.4byte	0
 2268 0182 00000000 		.4byte	0
 2269              	.LLST9:
 2270 0186 00000000 		.4byte	.LVL43
 2271 018a 08000000 		.4byte	.LVL44
 2272 018e 0200     		.2byte	0x2
 2273 0190 30       		.byte	0x30
 2274 0191 9F       		.byte	0x9f
 2275 0192 08000000 		.4byte	.LVL44
 2276 0196 10000000 		.4byte	.LVL46
 2277 019a 0100     		.2byte	0x1
 2278 019c 54       		.byte	0x54
 2279 019d 12000000 		.4byte	.LVL47
 2280 01a1 14000000 		.4byte	.LVL48
 2281 01a5 0100     		.2byte	0x1
 2282 01a7 54       		.byte	0x54
 2283 01a8 14000000 		.4byte	.LVL48
 2284 01ac 1C000000 		.4byte	.LVL49
 2285 01b0 0200     		.2byte	0x2
 2286 01b2 30       		.byte	0x30
 2287 01b3 9F       		.byte	0x9f
 2288 01b4 1C000000 		.4byte	.LVL49
 2289 01b8 22000000 		.4byte	.LVL50
 2290 01bc 0100     		.2byte	0x1
 2291 01be 54       		.byte	0x54
 2292 01bf 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 69


 2293 01c3 00000000 		.4byte	0
 2294              	.LLST10:
 2295 01c7 00000000 		.4byte	.LVL51
 2296 01cb 0B000000 		.4byte	.LVL52-1
 2297 01cf 0100     		.2byte	0x1
 2298 01d1 50       		.byte	0x50
 2299 01d2 0B000000 		.4byte	.LVL52-1
 2300 01d6 20000000 		.4byte	.LFE22
 2301 01da 0400     		.2byte	0x4
 2302 01dc F3       		.byte	0xf3
 2303 01dd 01       		.uleb128 0x1
 2304 01de 50       		.byte	0x50
 2305 01df 9F       		.byte	0x9f
 2306 01e0 00000000 		.4byte	0
 2307 01e4 00000000 		.4byte	0
 2308              	.LLST11:
 2309 01e8 06000000 		.4byte	.LVL55
 2310 01ec 1C000000 		.4byte	.LVL56
 2311 01f0 0100     		.2byte	0x1
 2312 01f2 53       		.byte	0x53
 2313 01f3 1C000000 		.4byte	.LVL56
 2314 01f7 24000000 		.4byte	.LFE23
 2315 01fb 0100     		.2byte	0x1
 2316 01fd 50       		.byte	0x50
 2317 01fe 00000000 		.4byte	0
 2318 0202 00000000 		.4byte	0
 2319              	.LLST12:
 2320 0206 06000000 		.4byte	.LVL57
 2321 020a 1B000000 		.4byte	.LVL58-1
 2322 020e 0100     		.2byte	0x1
 2323 0210 50       		.byte	0x50
 2324 0211 00000000 		.4byte	0
 2325 0215 00000000 		.4byte	0
 2326              	.LLST13:
 2327 0219 00000000 		.4byte	.LVL59
 2328 021d 3C000000 		.4byte	.LVL64
 2329 0221 0100     		.2byte	0x1
 2330 0223 50       		.byte	0x50
 2331 0224 3C000000 		.4byte	.LVL64
 2332 0228 58000000 		.4byte	.LFE25
 2333 022c 0400     		.2byte	0x4
 2334 022e F3       		.byte	0xf3
 2335 022f 01       		.uleb128 0x1
 2336 0230 50       		.byte	0x50
 2337 0231 9F       		.byte	0x9f
 2338 0232 00000000 		.4byte	0
 2339 0236 00000000 		.4byte	0
 2340              	.LLST14:
 2341 023a 22000000 		.4byte	.LVL60
 2342 023e 28000000 		.4byte	.LVL61
 2343 0242 0100     		.2byte	0x1
 2344 0244 53       		.byte	0x53
 2345 0245 34000000 		.4byte	.LVL62
 2346 0249 3A000000 		.4byte	.LVL63
 2347 024d 0100     		.2byte	0x1
 2348 024f 53       		.byte	0x53
 2349 0250 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 70


 2350 0254 00000000 		.4byte	0
 2351              		.section	.debug_aranges,"",%progbits
 2352 0000 EC000000 		.4byte	0xec
 2353 0004 0200     		.2byte	0x2
 2354 0006 00000000 		.4byte	.Ldebug_info0
 2355 000a 04       		.byte	0x4
 2356 000b 00       		.byte	0
 2357 000c 0000     		.2byte	0
 2358 000e 0000     		.2byte	0
 2359 0010 00000000 		.4byte	.LFB1
 2360 0014 28000000 		.4byte	.LFE1-.LFB1
 2361 0018 00000000 		.4byte	.LFB2
 2362 001c 38000000 		.4byte	.LFE2-.LFB2
 2363 0020 00000000 		.4byte	.LFB0
 2364 0024 1C000000 		.4byte	.LFE0-.LFB0
 2365 0028 00000000 		.4byte	.LFB3
 2366 002c 3C000000 		.4byte	.LFE3-.LFB3
 2367 0030 00000000 		.4byte	.LFB4
 2368 0034 04000000 		.4byte	.LFE4-.LFB4
 2369 0038 00000000 		.4byte	.LFB5
 2370 003c 02000000 		.4byte	.LFE5-.LFB5
 2371 0040 00000000 		.4byte	.LFB6
 2372 0044 0C000000 		.4byte	.LFE6-.LFB6
 2373 0048 00000000 		.4byte	.LFB7
 2374 004c 0C000000 		.4byte	.LFE7-.LFB7
 2375 0050 00000000 		.4byte	.LFB8
 2376 0054 10000000 		.4byte	.LFE8-.LFB8
 2377 0058 00000000 		.4byte	.LFB9
 2378 005c 2C000000 		.4byte	.LFE9-.LFB9
 2379 0060 00000000 		.4byte	.LFB10
 2380 0064 12000000 		.4byte	.LFE10-.LFB10
 2381 0068 00000000 		.4byte	.LFB11
 2382 006c 18000000 		.4byte	.LFE11-.LFB11
 2383 0070 00000000 		.4byte	.LFB12
 2384 0074 24000000 		.4byte	.LFE12-.LFB12
 2385 0078 00000000 		.4byte	.LFB13
 2386 007c 02000000 		.4byte	.LFE13-.LFB13
 2387 0080 00000000 		.4byte	.LFB14
 2388 0084 0C000000 		.4byte	.LFE14-.LFB14
 2389 0088 00000000 		.4byte	.LFB15
 2390 008c 0C000000 		.4byte	.LFE15-.LFB15
 2391 0090 00000000 		.4byte	.LFB16
 2392 0094 0C000000 		.4byte	.LFE16-.LFB16
 2393 0098 00000000 		.4byte	.LFB17
 2394 009c 14000000 		.4byte	.LFE17-.LFB17
 2395 00a0 00000000 		.4byte	.LFB18
 2396 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2397 00a8 00000000 		.4byte	.LFB19
 2398 00ac 18000000 		.4byte	.LFE19-.LFB19
 2399 00b0 00000000 		.4byte	.LFB20
 2400 00b4 24000000 		.4byte	.LFE20-.LFB20
 2401 00b8 00000000 		.4byte	.LFB21
 2402 00bc 28000000 		.4byte	.LFE21-.LFB21
 2403 00c0 00000000 		.4byte	.LFB22
 2404 00c4 20000000 		.4byte	.LFE22-.LFB22
 2405 00c8 00000000 		.4byte	.LFB23
 2406 00cc 24000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 71


 2407 00d0 00000000 		.4byte	.LFB24
 2408 00d4 24000000 		.4byte	.LFE24-.LFB24
 2409 00d8 00000000 		.4byte	.LFB25
 2410 00dc 58000000 		.4byte	.LFE25-.LFB25
 2411 00e0 00000000 		.4byte	.LFB26
 2412 00e4 02000000 		.4byte	.LFE26-.LFB26
 2413 00e8 00000000 		.4byte	0
 2414 00ec 00000000 		.4byte	0
 2415              		.section	.debug_ranges,"",%progbits
 2416              	.Ldebug_ranges0:
 2417 0000 00000000 		.4byte	.LFB1
 2418 0004 28000000 		.4byte	.LFE1
 2419 0008 00000000 		.4byte	.LFB2
 2420 000c 38000000 		.4byte	.LFE2
 2421 0010 00000000 		.4byte	.LFB0
 2422 0014 1C000000 		.4byte	.LFE0
 2423 0018 00000000 		.4byte	.LFB3
 2424 001c 3C000000 		.4byte	.LFE3
 2425 0020 00000000 		.4byte	.LFB4
 2426 0024 04000000 		.4byte	.LFE4
 2427 0028 00000000 		.4byte	.LFB5
 2428 002c 02000000 		.4byte	.LFE5
 2429 0030 00000000 		.4byte	.LFB6
 2430 0034 0C000000 		.4byte	.LFE6
 2431 0038 00000000 		.4byte	.LFB7
 2432 003c 0C000000 		.4byte	.LFE7
 2433 0040 00000000 		.4byte	.LFB8
 2434 0044 10000000 		.4byte	.LFE8
 2435 0048 00000000 		.4byte	.LFB9
 2436 004c 2C000000 		.4byte	.LFE9
 2437 0050 00000000 		.4byte	.LFB10
 2438 0054 12000000 		.4byte	.LFE10
 2439 0058 00000000 		.4byte	.LFB11
 2440 005c 18000000 		.4byte	.LFE11
 2441 0060 00000000 		.4byte	.LFB12
 2442 0064 24000000 		.4byte	.LFE12
 2443 0068 00000000 		.4byte	.LFB13
 2444 006c 02000000 		.4byte	.LFE13
 2445 0070 00000000 		.4byte	.LFB14
 2446 0074 0C000000 		.4byte	.LFE14
 2447 0078 00000000 		.4byte	.LFB15
 2448 007c 0C000000 		.4byte	.LFE15
 2449 0080 00000000 		.4byte	.LFB16
 2450 0084 0C000000 		.4byte	.LFE16
 2451 0088 00000000 		.4byte	.LFB17
 2452 008c 14000000 		.4byte	.LFE17
 2453 0090 00000000 		.4byte	.LFB18
 2454 0094 0C000000 		.4byte	.LFE18
 2455 0098 00000000 		.4byte	.LFB19
 2456 009c 18000000 		.4byte	.LFE19
 2457 00a0 00000000 		.4byte	.LFB20
 2458 00a4 24000000 		.4byte	.LFE20
 2459 00a8 00000000 		.4byte	.LFB21
 2460 00ac 28000000 		.4byte	.LFE21
 2461 00b0 00000000 		.4byte	.LFB22
 2462 00b4 20000000 		.4byte	.LFE22
 2463 00b8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 72


 2464 00bc 24000000 		.4byte	.LFE23
 2465 00c0 00000000 		.4byte	.LFB24
 2466 00c4 24000000 		.4byte	.LFE24
 2467 00c8 00000000 		.4byte	.LFB25
 2468 00cc 58000000 		.4byte	.LFE25
 2469 00d0 00000000 		.4byte	.LFB26
 2470 00d4 02000000 		.4byte	.LFE26
 2471 00d8 00000000 		.4byte	0
 2472 00dc 00000000 		.4byte	0
 2473              		.section	.debug_line,"",%progbits
 2474              	.Ldebug_line0:
 2475 0000 BA020000 		.section	.debug_str,"MS",%progbits,1
 2475      02006100 
 2475      00000201 
 2475      FB0E0D00 
 2475      01010101 
 2476              	.LASF10:
 2477 0000 75696E74 		.ascii	"uint16\000"
 2477      313600
 2478              	.LASF67:
 2479 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2479      69744372 
 2479      69746963 
 2479      616C5365 
 2479      6374696F 
 2480              	.LASF42:
 2481 001d 74784461 		.ascii	"txDataByte\000"
 2481      74614279 
 2481      746500
 2482              	.LASF47:
 2483 0028 73747269 		.ascii	"string\000"
 2483      6E6700
 2484              	.LASF7:
 2485 002f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2485      206C6F6E 
 2485      6720756E 
 2485      7369676E 
 2485      65642069 
 2486              	.LASF18:
 2487 0046 55415254 		.ascii	"UART_Start\000"
 2487      5F537461 
 2487      727400
 2488              	.LASF40:
 2489 0051 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2489      5F536574 
 2489      5478496E 
 2489      74657272 
 2489      7570744D 
 2490              	.LASF62:
 2491 0069 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART.c\000"
 2491      6E657261 
 2491      7465645F 
 2491      536F7572 
 2491      63655C50 
 2492              	.LASF6:
 2493 0089 6C6F6E67 		.ascii	"long long int\000"
 2493      206C6F6E 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 73


 2493      6720696E 
 2493      7400
 2494              	.LASF0:
 2495 0097 7369676E 		.ascii	"signed char\000"
 2495      65642063 
 2495      68617200 
 2496              	.LASF57:
 2497 00a3 74785065 		.ascii	"txPeriod\000"
 2497      72696F64 
 2497      00
 2498              	.LASF4:
 2499 00ac 6C6F6E67 		.ascii	"long int\000"
 2499      20696E74 
 2499      00
 2500              	.LASF45:
 2501 00b5 55415254 		.ascii	"UART_PutChar\000"
 2501      5F507574 
 2501      43686172 
 2501      00
 2502              	.LASF26:
 2503 00c2 55415254 		.ascii	"UART_ReadRxData\000"
 2503      5F526561 
 2503      64527844 
 2503      61746100 
 2504              	.LASF9:
 2505 00d2 75696E74 		.ascii	"uint8\000"
 2505      3800
 2506              	.LASF43:
 2507 00d8 55415254 		.ascii	"UART_ReadControlRegister\000"
 2507      5F526561 
 2507      64436F6E 
 2507      74726F6C 
 2507      52656769 
 2508              	.LASF12:
 2509 00f1 646F7562 		.ascii	"double\000"
 2509      6C6500
 2510              	.LASF36:
 2511 00f8 61646472 		.ascii	"addressMode\000"
 2511      6573734D 
 2511      6F646500 
 2512              	.LASF23:
 2513 0104 636F6E74 		.ascii	"control\000"
 2513      726F6C00 
 2514              	.LASF64:
 2515 010c 55415254 		.ascii	"UART_Init\000"
 2515      5F496E69 
 2515      7400
 2516              	.LASF55:
 2517 0116 7265744D 		.ascii	"retMode\000"
 2517      6F646500 
 2518              	.LASF31:
 2519 011e 55415254 		.ascii	"UART_GetByte\000"
 2519      5F476574 
 2519      42797465 
 2519      00
 2520              	.LASF8:
 2521 012b 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 74


 2521      676E6564 
 2521      20696E74 
 2521      00
 2522              	.LASF53:
 2523 0138 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2523      5F436C65 
 2523      61725478 
 2523      42756666 
 2523      657200
 2524              	.LASF51:
 2525 014b 55415254 		.ascii	"UART_PutCRLF\000"
 2525      5F507574 
 2525      43524C46 
 2525      00
 2526              	.LASF5:
 2527 0158 6C6F6E67 		.ascii	"long unsigned int\000"
 2527      20756E73 
 2527      69676E65 
 2527      6420696E 
 2527      7400
 2528              	.LASF49:
 2529 016a 55415254 		.ascii	"UART_PutArray\000"
 2529      5F507574 
 2529      41727261 
 2529      7900
 2530              	.LASF66:
 2531 0178 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2531      74657243 
 2531      72697469 
 2531      63616C53 
 2531      65637469 
 2532              	.LASF33:
 2533 018f 73697A65 		.ascii	"size\000"
 2533      00
 2534              	.LASF3:
 2535 0194 73686F72 		.ascii	"short unsigned int\000"
 2535      7420756E 
 2535      7369676E 
 2535      65642069 
 2535      6E7400
 2536              	.LASF48:
 2537 01a7 62756649 		.ascii	"bufIndex\000"
 2537      6E646578 
 2537      00
 2538              	.LASF24:
 2539 01b0 696E7453 		.ascii	"intSrc\000"
 2539      726300
 2540              	.LASF58:
 2541 01b7 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2541      5F536574 
 2541      54784164 
 2541      64726573 
 2541      734D6F64 
 2542              	.LASF44:
 2543 01cd 55415254 		.ascii	"UART_ReadTxStatus\000"
 2543      5F526561 
 2543      64547853 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 75


 2543      74617475 
 2543      7300
 2544              	.LASF59:
 2545 01df 55415254 		.ascii	"UART_IntClock_Start\000"
 2545      5F496E74 
 2545      436C6F63 
 2545      6B5F5374 
 2545      61727400 
 2546              	.LASF56:
 2547 01f3 746D7053 		.ascii	"tmpStat\000"
 2547      74617400 
 2548              	.LASF16:
 2549 01fb 73697A65 		.ascii	"sizetype\000"
 2549      74797065 
 2549      00
 2550              	.LASF38:
 2551 0204 61646472 		.ascii	"address\000"
 2551      65737300 
 2552              	.LASF37:
 2553 020c 55415254 		.ascii	"UART_SetRxAddress1\000"
 2553      5F536574 
 2553      52784164 
 2553      64726573 
 2553      733100
 2554              	.LASF39:
 2555 021f 55415254 		.ascii	"UART_SetRxAddress2\000"
 2555      5F536574 
 2555      52784164 
 2555      64726573 
 2555      733200
 2556              	.LASF30:
 2557 0232 72785374 		.ascii	"rxStatus\000"
 2557      61747573 
 2557      00
 2558              	.LASF60:
 2559 023b 55415254 		.ascii	"UART_IntClock_Stop\000"
 2559      5F496E74 
 2559      436C6F63 
 2559      6B5F5374 
 2559      6F7000
 2560              	.LASF11:
 2561 024e 666C6F61 		.ascii	"float\000"
 2561      7400
 2562              	.LASF52:
 2563 0254 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2563      5F476574 
 2563      54784275 
 2563      66666572 
 2563      53697A65 
 2564              	.LASF15:
 2565 0269 72656738 		.ascii	"reg8\000"
 2565      00
 2566              	.LASF35:
 2567 026e 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2567      5F536574 
 2567      52784164 
 2567      64726573 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 76


 2567      734D6F64 
 2568              	.LASF1:
 2569 0284 756E7369 		.ascii	"unsigned char\000"
 2569      676E6564 
 2569      20636861 
 2569      7200
 2570              	.LASF41:
 2571 0292 55415254 		.ascii	"UART_WriteTxData\000"
 2571      5F577269 
 2571      74655478 
 2571      44617461 
 2571      00
 2572              	.LASF2:
 2573 02a3 73686F72 		.ascii	"short int\000"
 2573      7420696E 
 2573      7400
 2574              	.LASF54:
 2575 02ad 55415254 		.ascii	"UART_SendBreak\000"
 2575      5F53656E 
 2575      64427265 
 2575      616B00
 2576              	.LASF50:
 2577 02bc 62797465 		.ascii	"byteCount\000"
 2577      436F756E 
 2577      7400
 2578              	.LASF25:
 2579 02c6 72784461 		.ascii	"rxData\000"
 2579      746100
 2580              	.LASF17:
 2581 02cd 55415254 		.ascii	"UART_Enable\000"
 2581      5F456E61 
 2581      626C6500 
 2582              	.LASF27:
 2583 02d9 55415254 		.ascii	"UART_ReadRxStatus\000"
 2583      5F526561 
 2583      64527853 
 2583      74617475 
 2583      7300
 2584              	.LASF14:
 2585 02eb 63686172 		.ascii	"char\000"
 2585      00
 2586              	.LASF13:
 2587 02f0 63686172 		.ascii	"char8\000"
 2587      3800
 2588              	.LASF22:
 2589 02f6 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2589      5F536574 
 2589      5278496E 
 2589      74657272 
 2589      7570744D 
 2590              	.LASF29:
 2591 030e 55415254 		.ascii	"UART_GetChar\000"
 2591      5F476574 
 2591      43686172 
 2591      00
 2592              	.LASF20:
 2593 031b 656E6162 		.ascii	"enableInterrupts\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 77


 2593      6C65496E 
 2593      74657272 
 2593      75707473 
 2593      00
 2594              	.LASF65:
 2595 032c 55415254 		.ascii	"UART_initVar\000"
 2595      5F696E69 
 2595      74566172 
 2595      00
 2596              	.LASF32:
 2597 0339 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2597      5F476574 
 2597      52784275 
 2597      66666572 
 2597      53697A65 
 2598              	.LASF28:
 2599 034e 73746174 		.ascii	"status\000"
 2599      757300
 2600              	.LASF61:
 2601 0355 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2601      4320342E 
 2601      392E3320 
 2601      32303135 
 2601      30333033 
 2602 0388 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2602      20726576 
 2602      6973696F 
 2602      6E203232 
 2602      31323230 
 2603 03bb 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2603      66756E63 
 2603      74696F6E 
 2603      2D736563 
 2603      74696F6E 
 2604              	.LASF19:
 2605 03e3 55415254 		.ascii	"UART_Stop\000"
 2605      5F53746F 
 2605      7000
 2606              	.LASF46:
 2607 03ed 55415254 		.ascii	"UART_PutString\000"
 2607      5F507574 
 2607      53747269 
 2607      6E6700
 2608              	.LASF21:
 2609 03fc 55415254 		.ascii	"UART_WriteControlRegister\000"
 2609      5F577269 
 2609      7465436F 
 2609      6E74726F 
 2609      6C526567 
 2610              	.LASF34:
 2611 0416 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2611      5F436C65 
 2611      61725278 
 2611      42756666 
 2611      657200
 2612              	.LASF63:
 2613 0429 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\FSAE\\E-Throttle\\P"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\cckjS2u3.s 			page 78


 2613      73657273 
 2613      5C6D6974 
 2613      6368656C 
 2613      6C5C446F 
 2614 0456 536F435C 		.ascii	"SoC\\E-Throttle.cydsn\000"
 2614      452D5468 
 2614      726F7474 
 2614      6C652E63 
 2614      7964736E 
 2615              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
