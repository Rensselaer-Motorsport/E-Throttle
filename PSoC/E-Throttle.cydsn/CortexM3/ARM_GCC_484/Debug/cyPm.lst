ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"cyPm.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CyPmHibSlpSaveSet,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	CyPmHibSlpSaveSet, %function
  23              	CyPmHibSlpSaveSet:
  24              	.LFB12:
  25              		.file 1 ".\\Generated_Source\\PSoC5\\cyPm.c"
   1:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/cyPm.c **** * File Name: cyPm.c
   3:.\Generated_Source\PSoC5/cyPm.c **** * Version 5.10
   4:.\Generated_Source\PSoC5/cyPm.c **** *
   5:.\Generated_Source\PSoC5/cyPm.c **** * Description:
   6:.\Generated_Source\PSoC5/cyPm.c **** *  Provides an API for the power management.
   7:.\Generated_Source\PSoC5/cyPm.c **** *
   8:.\Generated_Source\PSoC5/cyPm.c **** * Note:
   9:.\Generated_Source\PSoC5/cyPm.c **** *  Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC5/cyPm.c **** *  System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC5/cyPm.c **** *
  12:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/cyPm.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/cyPm.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC5/cyPm.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC5/cyPm.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/cyPm.c **** 
  19:.\Generated_Source\PSoC5/cyPm.c **** #include "cyPm.h"
  20:.\Generated_Source\PSoC5/cyPm.c **** 
  21:.\Generated_Source\PSoC5/cyPm.c **** #ifdef CY_USE_CALLBACKS
  22:.\Generated_Source\PSoC5/cyPm.c ****     #include "CyAPICallbacks.h"
  23:.\Generated_Source\PSoC5/cyPm.c **** #endif  /* CY_USE_CALLBACKS */
  24:.\Generated_Source\PSoC5/cyPm.c **** 
  25:.\Generated_Source\PSoC5/cyPm.c **** 
  26:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************
  27:.\Generated_Source\PSoC5/cyPm.c **** * Place your includes, defines, and code here. Do not use the merge
  28:.\Generated_Source\PSoC5/cyPm.c **** * region below unless any component datasheet suggests doing so.
  29:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************/
  30:.\Generated_Source\PSoC5/cyPm.c **** /* `#START CY_PM_HEADER_INCLUDE` */
  31:.\Generated_Source\PSoC5/cyPm.c **** 
  32:.\Generated_Source\PSoC5/cyPm.c **** /* `#END` */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 2


  33:.\Generated_Source\PSoC5/cyPm.c **** 
  34:.\Generated_Source\PSoC5/cyPm.c **** 
  35:.\Generated_Source\PSoC5/cyPm.c **** static CY_PM_BACKUP_STRUCT          cyPmBackup;
  36:.\Generated_Source\PSoC5/cyPm.c **** static CY_PM_CLOCK_BACKUP_STRUCT    cyPmClockBackup;
  37:.\Generated_Source\PSoC5/cyPm.c **** 
  38:.\Generated_Source\PSoC5/cyPm.c **** /* Convertion table between register's values and frequency in MHz  */
  39:.\Generated_Source\PSoC5/cyPm.c **** static const uint8 CYCODE cyPmImoFreqReg2Mhz[7u] = {12u, 6u, 24u, 3u, 48u, 62u, 74u};
  40:.\Generated_Source\PSoC5/cyPm.c **** 
  41:.\Generated_Source\PSoC5/cyPm.c **** /* Function Prototypes */
  42:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSaveSet(void);
  43:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibRestore(void) ;
  44:.\Generated_Source\PSoC5/cyPm.c **** 
  45:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpSaveSet(void) ;
  46:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpRestore(void) ;
  47:.\Generated_Source\PSoC5/cyPm.c **** 
  48:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviSaveDisable(void) ;
  49:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviRestore(void) ;
  50:.\Generated_Source\PSoC5/cyPm.c **** 
  51:.\Generated_Source\PSoC5/cyPm.c **** 
  52:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
  53:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmSaveClocks
  54:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
  55:.\Generated_Source\PSoC5/cyPm.c **** *
  56:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
  57:.\Generated_Source\PSoC5/cyPm.c **** *  This function is called in preparation for entering sleep or hibernate low
  58:.\Generated_Source\PSoC5/cyPm.c **** *  power modes. Saves all the states of the clocking system that do not persist
  59:.\Generated_Source\PSoC5/cyPm.c **** *  during sleep/hibernate or that need to be altered in preparation for
  60:.\Generated_Source\PSoC5/cyPm.c **** *  sleep/hibernate. Shutdowns all the digital and analog clock dividers for the
  61:.\Generated_Source\PSoC5/cyPm.c **** *  active power mode configuration.
  62:.\Generated_Source\PSoC5/cyPm.c **** *
  63:.\Generated_Source\PSoC5/cyPm.c **** *  Switches the master clock over to the IMO and shuts down the PLL and MHz
  64:.\Generated_Source\PSoC5/cyPm.c **** *  Crystal. The IMO frequency is set to either 12 MHz or 48 MHz to match the
  65:.\Generated_Source\PSoC5/cyPm.c **** *  Design-Wide Resources System Editor "Enable Fast IMO During Startup" setting.
  66:.\Generated_Source\PSoC5/cyPm.c **** *  The ILO and 32 KHz oscillators are not impacted. The current Flash wait state
  67:.\Generated_Source\PSoC5/cyPm.c **** *  setting is saved and the Flash wait state setting is set for the current IMO
  68:.\Generated_Source\PSoC5/cyPm.c **** *  speed.
  69:.\Generated_Source\PSoC5/cyPm.c **** *
  70:.\Generated_Source\PSoC5/cyPm.c **** *  Note If the Master Clock source is routed through the DSI inputs, then it
  71:.\Generated_Source\PSoC5/cyPm.c **** *  must be set manually to another source before using the
  72:.\Generated_Source\PSoC5/cyPm.c **** *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
  73:.\Generated_Source\PSoC5/cyPm.c **** *
  74:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
  75:.\Generated_Source\PSoC5/cyPm.c **** *  None
  76:.\Generated_Source\PSoC5/cyPm.c **** *
  77:.\Generated_Source\PSoC5/cyPm.c **** * Return:
  78:.\Generated_Source\PSoC5/cyPm.c **** *  None
  79:.\Generated_Source\PSoC5/cyPm.c **** *
  80:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
  81:.\Generated_Source\PSoC5/cyPm.c **** *  All peripheral clocks are going to be off after this API method call.
  82:.\Generated_Source\PSoC5/cyPm.c **** *
  83:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/cyPm.c **** void CyPmSaveClocks(void) 
  85:.\Generated_Source\PSoC5/cyPm.c **** {
  86:.\Generated_Source\PSoC5/cyPm.c ****     /* Digital and analog clocks - save enable state and disable them all */
  87:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
  88:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
  89:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_A_MASK));
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 3


  90:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_D_MASK));
  91:.\Generated_Source\PSoC5/cyPm.c **** 
  92:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current flash wait cycles and set the maximum value */
  93:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
  94:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
  95:.\Generated_Source\PSoC5/cyPm.c **** 
  96:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - save current IMO MHz OSC frequency and USB mode is on bit */
  97:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
  98:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoUsbClk = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_USB;
  99:.\Generated_Source\PSoC5/cyPm.c **** 
 100:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO doubler - save enable state */
 101:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 102:.\Generated_Source\PSoC5/cyPm.c ****     {
 103:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO doubler enabled - save and disable */
 104:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_ENABLED;
 105:.\Generated_Source\PSoC5/cyPm.c ****     }
 106:.\Generated_Source\PSoC5/cyPm.c ****     else
 107:.\Generated_Source\PSoC5/cyPm.c ****     {
 108:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO doubler disabled */
 109:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_DISABLED;
 110:.\Generated_Source\PSoC5/cyPm.c ****     }
 111:.\Generated_Source\PSoC5/cyPm.c **** 
 112:.\Generated_Source\PSoC5/cyPm.c ****     /* Master clock - save source */
 113:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 114:.\Generated_Source\PSoC5/cyPm.c **** 
 115:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch Master clock's source from PLL's output to PLL's source */
 116:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_PLL == cyPmClockBackup.masterClkSrc)
 117:.\Generated_Source\PSoC5/cyPm.c ****     {
 118:.\Generated_Source\PSoC5/cyPm.c ****         switch (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_PLL_SRC_MASK)
 119:.\Generated_Source\PSoC5/cyPm.c ****         {
 120:.\Generated_Source\PSoC5/cyPm.c ****         case CY_PM_CLKDIST_PLL_SRC_IMO:
 121:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 122:.\Generated_Source\PSoC5/cyPm.c ****             break;
 123:.\Generated_Source\PSoC5/cyPm.c **** 
 124:.\Generated_Source\PSoC5/cyPm.c ****         case CY_PM_CLKDIST_PLL_SRC_XTAL:
 125:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_XTAL);
 126:.\Generated_Source\PSoC5/cyPm.c ****             break;
 127:.\Generated_Source\PSoC5/cyPm.c **** 
 128:.\Generated_Source\PSoC5/cyPm.c ****         case CY_PM_CLKDIST_PLL_SRC_DSI:
 129:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_DSI);
 130:.\Generated_Source\PSoC5/cyPm.c ****             break;
 131:.\Generated_Source\PSoC5/cyPm.c **** 
 132:.\Generated_Source\PSoC5/cyPm.c ****         default:
 133:.\Generated_Source\PSoC5/cyPm.c ****             CYASSERT(0u != 0u);
 134:.\Generated_Source\PSoC5/cyPm.c ****             break;
 135:.\Generated_Source\PSoC5/cyPm.c ****         }
 136:.\Generated_Source\PSoC5/cyPm.c ****     }
 137:.\Generated_Source\PSoC5/cyPm.c **** 
 138:.\Generated_Source\PSoC5/cyPm.c ****     /* PLL - check enable state, disable if needed */
 139:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_PLL_CFG0_REG & CY_PM_PLL_CFG0_ENABLE))
 140:.\Generated_Source\PSoC5/cyPm.c ****     {
 141:.\Generated_Source\PSoC5/cyPm.c ****         /* PLL is enabled - save state and disable */
 142:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_ENABLED;
 143:.\Generated_Source\PSoC5/cyPm.c ****         CyPLL_OUT_Stop();
 144:.\Generated_Source\PSoC5/cyPm.c ****     }
 145:.\Generated_Source\PSoC5/cyPm.c ****     else
 146:.\Generated_Source\PSoC5/cyPm.c ****     {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 4


 147:.\Generated_Source\PSoC5/cyPm.c ****         /* PLL is disabled - save state */
 148:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_DISABLED;
 149:.\Generated_Source\PSoC5/cyPm.c ****     }
 150:.\Generated_Source\PSoC5/cyPm.c **** 
 151:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - set appropriate frequency for LPM */
 152:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetFreq(CY_PM_IMO_FREQ_LPM);
 153:.\Generated_Source\PSoC5/cyPm.c **** 
 154:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - save enable state and enable without wait to settle */
 155:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG))
 156:.\Generated_Source\PSoC5/cyPm.c ****     {
 157:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO - save enabled state */
 158:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_ENABLED;
 159:.\Generated_Source\PSoC5/cyPm.c ****     }
 160:.\Generated_Source\PSoC5/cyPm.c ****     else
 161:.\Generated_Source\PSoC5/cyPm.c ****     {
 162:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO - save disabled state */
 163:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_DISABLED;
 164:.\Generated_Source\PSoC5/cyPm.c **** 
 165:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable the IMO. Use software delay instead of the FTW-based inside */
 166:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 167:.\Generated_Source\PSoC5/cyPm.c **** 
 168:.\Generated_Source\PSoC5/cyPm.c ****         /* Settling time of the IMO is of the order of less than 6us */
 169:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs(6u);
 170:.\Generated_Source\PSoC5/cyPm.c ****     }
 171:.\Generated_Source\PSoC5/cyPm.c **** 
 172:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - save the current IMOCLK source and set to IMO if not yet */
 173:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_XCLKEN))
 174:.\Generated_Source\PSoC5/cyPm.c ****     {
 175:.\Generated_Source\PSoC5/cyPm.c ****         /* DSI or XTAL CLK */
 176:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc =
 177:.\Generated_Source\PSoC5/cyPm.c ****             (0u == (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO2X_SRC)) ? CY_IMO_SOURCE_DSI : CY_IMO_S
 178:.\Generated_Source\PSoC5/cyPm.c **** 
 179:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO -  set IMOCLK source to IMO */
 180:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetSource(CY_IMO_SOURCE_IMO);
 181:.\Generated_Source\PSoC5/cyPm.c ****     }
 182:.\Generated_Source\PSoC5/cyPm.c ****     else
 183:.\Generated_Source\PSoC5/cyPm.c ****     {
 184:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO */
 185:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc = CY_IMO_SOURCE_IMO;
 186:.\Generated_Source\PSoC5/cyPm.c ****     }
 187:.\Generated_Source\PSoC5/cyPm.c **** 
 188:.\Generated_Source\PSoC5/cyPm.c ****     /* Save clk_imo source */
 189:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkImoSrc = CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK;
 190:.\Generated_Source\PSoC5/cyPm.c **** 
 191:.\Generated_Source\PSoC5/cyPm.c ****     /* If IMOCLK2X or SPC OSC is source for clk_imo, set it to IMOCLK */
 192:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_CLKDIST_IMO_OUT_IMO != cyPmClockBackup.clkImoSrc)
 193:.\Generated_Source\PSoC5/cyPm.c ****     {
 194:.\Generated_Source\PSoC5/cyPm.c ****         /* Set IMOCLK to source for clk_imo */
 195:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 196:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_CLKDIST_IMO_OUT_IMO;
 197:.\Generated_Source\PSoC5/cyPm.c ****     }    /* Need to change nothing if IMOCLK is source clk_imo */
 198:.\Generated_Source\PSoC5/cyPm.c **** 
 199:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO doubler - disable it (saved above) */
 200:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 201:.\Generated_Source\PSoC5/cyPm.c ****     {
 202:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_DisableDoubler();
 203:.\Generated_Source\PSoC5/cyPm.c ****     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 5


 204:.\Generated_Source\PSoC5/cyPm.c **** 
 205:.\Generated_Source\PSoC5/cyPm.c ****     /* Master clock - save divider and set it to divide-by-one (if no yet) */
 206:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkSyncDiv = CY_PM_CLKDIST_MSTR0_REG;
 207:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DIV_BY_ONE != cyPmClockBackup.clkSyncDiv)
 208:.\Generated_Source\PSoC5/cyPm.c ****     {
 209:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetDivider(CY_PM_DIV_BY_ONE);
 210:.\Generated_Source\PSoC5/cyPm.c ****     }    /* No change if master clock divider is 1 */
 211:.\Generated_Source\PSoC5/cyPm.c **** 
 212:.\Generated_Source\PSoC5/cyPm.c ****     /* Master clock source - set it to IMO if not yet. */
 213:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_IMO != cyPmClockBackup.masterClkSrc)
 214:.\Generated_Source\PSoC5/cyPm.c ****     {
 215:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 216:.\Generated_Source\PSoC5/cyPm.c ****     }    /* No change if master clock source is IMO */
 217:.\Generated_Source\PSoC5/cyPm.c **** 
 218:.\Generated_Source\PSoC5/cyPm.c ****     /* Bus clock - save divider and set it, if needed, to divide-by-one */
 219:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv = (uint16) ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 220:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv |= CY_PM_CLK_BUS_LSB_DIV_REG;
 221:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_BUS_CLK_DIV_BY_ONE != cyPmClockBackup.clkBusDiv)
 222:.\Generated_Source\PSoC5/cyPm.c ****     {
 223:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(CY_PM_BUS_CLK_DIV_BY_ONE);
 224:.\Generated_Source\PSoC5/cyPm.c ****     }    /* Do nothing if saved and actual values are equal */
 225:.\Generated_Source\PSoC5/cyPm.c **** 
 226:.\Generated_Source\PSoC5/cyPm.c ****     /* Set number of wait cycles for flash according to CPU frequency in MHz */
 227:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles((uint8)CY_PM_GET_CPU_FREQ_MHZ);
 228:.\Generated_Source\PSoC5/cyPm.c **** 
 229:.\Generated_Source\PSoC5/cyPm.c ****     /* MHz ECO - check enable state and disable if needed */
 230:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_ENABLE))
 231:.\Generated_Source\PSoC5/cyPm.c ****     {
 232:.\Generated_Source\PSoC5/cyPm.c ****         /* MHz ECO is enabled - save state and disable */
 233:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_ENABLED;
 234:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_Stop();
 235:.\Generated_Source\PSoC5/cyPm.c ****     }
 236:.\Generated_Source\PSoC5/cyPm.c ****     else
 237:.\Generated_Source\PSoC5/cyPm.c ****     {
 238:.\Generated_Source\PSoC5/cyPm.c ****         /* MHz ECO is disabled - save state */
 239:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_DISABLED;
 240:.\Generated_Source\PSoC5/cyPm.c ****     }
 241:.\Generated_Source\PSoC5/cyPm.c **** 
 242:.\Generated_Source\PSoC5/cyPm.c **** 
 243:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
 244:.\Generated_Source\PSoC5/cyPm.c ****     * Save the enable state of delay between the system bus clock and each of the
 245:.\Generated_Source\PSoC5/cyPm.c ****     * 4 individual analog clocks. This bit non-retention and its value should
 246:.\Generated_Source\PSoC5/cyPm.c ****     * be restored on wakeup.
 247:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
 248:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_CLKDIST_DELAY_REG & CY_PM_CLKDIST_DELAY_EN))
 249:.\Generated_Source\PSoC5/cyPm.c ****     {
 250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_ENABLED;
 251:.\Generated_Source\PSoC5/cyPm.c ****     }
 252:.\Generated_Source\PSoC5/cyPm.c ****     else
 253:.\Generated_Source\PSoC5/cyPm.c ****     {
 254:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_DISABLED;
 255:.\Generated_Source\PSoC5/cyPm.c ****     }
 256:.\Generated_Source\PSoC5/cyPm.c **** }
 257:.\Generated_Source\PSoC5/cyPm.c **** 
 258:.\Generated_Source\PSoC5/cyPm.c **** 
 259:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmRestoreClocks
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 6


 261:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
 262:.\Generated_Source\PSoC5/cyPm.c **** *
 263:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
 264:.\Generated_Source\PSoC5/cyPm.c **** *  Restores any state that was preserved by the last call to CyPmSaveClocks().
 265:.\Generated_Source\PSoC5/cyPm.c **** *  The Flash wait state setting is also restored.
 266:.\Generated_Source\PSoC5/cyPm.c **** *
 267:.\Generated_Source\PSoC5/cyPm.c **** *  Note If the Master Clock source is routed through the DSI inputs, then it
 268:.\Generated_Source\PSoC5/cyPm.c **** *  must be set manually to another source before using the
 269:.\Generated_Source\PSoC5/cyPm.c **** *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
 270:.\Generated_Source\PSoC5/cyPm.c **** *
 271:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3 and PSoC 5LP:
 272:.\Generated_Source\PSoC5/cyPm.c **** *  The merge region could be used to process state when the megahertz crystal is
 273:.\Generated_Source\PSoC5/cyPm.c **** *  not ready after a hold-off timeout.
 274:.\Generated_Source\PSoC5/cyPm.c **** *
 275:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 5:
 276:.\Generated_Source\PSoC5/cyPm.c **** *  The 130 ms is given for the megahertz crystal to stabilize. Its readiness is
 277:.\Generated_Source\PSoC5/cyPm.c **** *  not verified after a hold-off timeout.
 278:.\Generated_Source\PSoC5/cyPm.c **** *
 279:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
 280:.\Generated_Source\PSoC5/cyPm.c **** *  None
 281:.\Generated_Source\PSoC5/cyPm.c **** *
 282:.\Generated_Source\PSoC5/cyPm.c **** * Return:
 283:.\Generated_Source\PSoC5/cyPm.c **** *  None
 284:.\Generated_Source\PSoC5/cyPm.c **** *
 285:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
 286:.\Generated_Source\PSoC5/cyPm.c **** void CyPmRestoreClocks(void) 
 287:.\Generated_Source\PSoC5/cyPm.c **** {
 288:.\Generated_Source\PSoC5/cyPm.c ****     cystatus status = CYRET_TIMEOUT;
 289:.\Generated_Source\PSoC5/cyPm.c ****     uint16 i;
 290:.\Generated_Source\PSoC5/cyPm.c ****     uint16 clkBusDivTmp;
 291:.\Generated_Source\PSoC5/cyPm.c **** 
 292:.\Generated_Source\PSoC5/cyPm.c **** 
 293:.\Generated_Source\PSoC5/cyPm.c ****     /* Convertion table between CyIMO_SetFreq() parameters and register's value */
 294:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 295:.\Generated_Source\PSoC5/cyPm.c ****         CY_IMO_FREQ_12MHZ, CY_IMO_FREQ_6MHZ,  CY_IMO_FREQ_24MHZ, CY_IMO_FREQ_3MHZ,
 296:.\Generated_Source\PSoC5/cyPm.c ****         CY_IMO_FREQ_48MHZ, 5u, 6u};
 297:.\Generated_Source\PSoC5/cyPm.c **** 
 298:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore enable state of delay between system bus clock and ACLKs. */
 299:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 300:.\Generated_Source\PSoC5/cyPm.c ****     {
 301:.\Generated_Source\PSoC5/cyPm.c ****         /* Delay for both bandgap and delay line to settle out */
 302:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayCycles((uint32)(CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_SETTLE_US) 
 303:.\Generated_Source\PSoC5/cyPm.c ****                         CY_PM_GET_CPU_FREQ_MHZ);
 304:.\Generated_Source\PSoC5/cyPm.c **** 
 305:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_DELAY_REG |= CY_PM_CLKDIST_DELAY_EN;
 306:.\Generated_Source\PSoC5/cyPm.c ****     }
 307:.\Generated_Source\PSoC5/cyPm.c **** 
 308:.\Generated_Source\PSoC5/cyPm.c ****     /* MHz ECO restore state */
 309:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState)
 310:.\Generated_Source\PSoC5/cyPm.c ****     {
 311:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
 312:.\Generated_Source\PSoC5/cyPm.c ****         * Enabling XMHZ XTAL. The actual CyXTAL_Start() with a non zero wait
 313:.\Generated_Source\PSoC5/cyPm.c ****         * period uses FTW for period measurement. This could cause a problem
 314:.\Generated_Source\PSoC5/cyPm.c ****         * if CTW/FTW is used as a wake up time in the low power modes APIs.
 315:.\Generated_Source\PSoC5/cyPm.c ****         * So, the XTAL wait procedure is implemented with a software delay.
 316:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
 317:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 7


 318:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable XMHZ XTAL with no wait */
 319:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyXTAL_Start(CY_PM_XTAL_MHZ_NO_WAIT);
 320:.\Generated_Source\PSoC5/cyPm.c **** 
 321:.\Generated_Source\PSoC5/cyPm.c ****         /* Read XERR bit to clear it */
 322:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_XMHZ_CSR_REG;
 323:.\Generated_Source\PSoC5/cyPm.c **** 
 324:.\Generated_Source\PSoC5/cyPm.c ****         /* Wait */
 325:.\Generated_Source\PSoC5/cyPm.c ****         for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 326:.\Generated_Source\PSoC5/cyPm.c ****         {
 327:.\Generated_Source\PSoC5/cyPm.c ****             /* Make a 200 microseconds delay */
 328:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayCycles((uint32)CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 329:.\Generated_Source\PSoC5/cyPm.c **** 
 330:.\Generated_Source\PSoC5/cyPm.c ****             /* High output indicates oscillator failure */
 331:.\Generated_Source\PSoC5/cyPm.c ****             if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 332:.\Generated_Source\PSoC5/cyPm.c ****             {
 333:.\Generated_Source\PSoC5/cyPm.c ****                 status = CYRET_SUCCESS;
 334:.\Generated_Source\PSoC5/cyPm.c ****                 break;
 335:.\Generated_Source\PSoC5/cyPm.c ****             }
 336:.\Generated_Source\PSoC5/cyPm.c ****         }
 337:.\Generated_Source\PSoC5/cyPm.c **** 
 338:.\Generated_Source\PSoC5/cyPm.c ****         if(CYRET_TIMEOUT == status)
 339:.\Generated_Source\PSoC5/cyPm.c ****         {
 340:.\Generated_Source\PSoC5/cyPm.c ****             /*******************************************************************
 341:.\Generated_Source\PSoC5/cyPm.c ****             * Process the situation when megahertz crystal is not ready.
 342:.\Generated_Source\PSoC5/cyPm.c ****             * Time to stabilize the value is crystal specific.
 343:.\Generated_Source\PSoC5/cyPm.c ****             *******************************************************************/
 344:.\Generated_Source\PSoC5/cyPm.c ****            /* `#START_MHZ_ECO_TIMEOUT` */
 345:.\Generated_Source\PSoC5/cyPm.c **** 
 346:.\Generated_Source\PSoC5/cyPm.c ****            /* `#END` */
 347:.\Generated_Source\PSoC5/cyPm.c **** 
 348:.\Generated_Source\PSoC5/cyPm.c ****         #ifdef CY_BOOT_CY_PM_RESTORE_CLOCKS_ECO_TIMEOUT_CALLBACK
 349:.\Generated_Source\PSoC5/cyPm.c ****             CyBoot_CyPmRestoreClocks_EcoTimeout_Callback();
 350:.\Generated_Source\PSoC5/cyPm.c ****         #endif /* CY_BOOT_CY_PM_RESTORE_CLOCKS_ECO_TIMEOUT_CALLBACK */
 351:.\Generated_Source\PSoC5/cyPm.c ****         }
 352:.\Generated_Source\PSoC5/cyPm.c ****     }   /* (CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState) */
 353:.\Generated_Source\PSoC5/cyPm.c **** 
 354:.\Generated_Source\PSoC5/cyPm.c **** 
 355:.\Generated_Source\PSoC5/cyPm.c ****     /* Temporary set maximum flash wait cycles */
 356:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 357:.\Generated_Source\PSoC5/cyPm.c **** 
 358:.\Generated_Source\PSoC5/cyPm.c ****     /* XTAL and DSI clocks are ready to be source for Master clock. */
 359:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 360:.\Generated_Source\PSoC5/cyPm.c ****        (CY_PM_MASTER_CLK_SRC_DSI  == cyPmClockBackup.masterClkSrc))
 361:.\Generated_Source\PSoC5/cyPm.c ****     {
 362:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock's divider */
 363:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 364:.\Generated_Source\PSoC5/cyPm.c ****         {
 365:.\Generated_Source\PSoC5/cyPm.c ****             /* Restore Master clock divider */
 366:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 367:.\Generated_Source\PSoC5/cyPm.c ****         }
 368:.\Generated_Source\PSoC5/cyPm.c **** 
 369:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock source */
 370:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 371:.\Generated_Source\PSoC5/cyPm.c ****     }
 372:.\Generated_Source\PSoC5/cyPm.c **** 
 373:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore IMO frequency */
 374:.\Generated_Source\PSoC5/cyPm.c ****     if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 8


 375:.\Generated_Source\PSoC5/cyPm.c ****         (CY_IMO_FREQ_24MHZ == cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]))
 376:.\Generated_Source\PSoC5/cyPm.c ****     {
 377:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore IMO frequency (24 MHz) and trim it for USB */
 378:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(CY_IMO_FREQ_USB);
 379:.\Generated_Source\PSoC5/cyPm.c ****     }
 380:.\Generated_Source\PSoC5/cyPm.c ****     else
 381:.\Generated_Source\PSoC5/cyPm.c ****     {
 382:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore IMO frequency */
 383:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]);
 384:.\Generated_Source\PSoC5/cyPm.c **** 
 385:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB))
 386:.\Generated_Source\PSoC5/cyPm.c ****         {
 387:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG |= CY_PM_FASTCLK_IMO_CR_USB;
 388:.\Generated_Source\PSoC5/cyPm.c ****         }
 389:.\Generated_Source\PSoC5/cyPm.c ****         else
 390:.\Generated_Source\PSoC5/cyPm.c ****         {
 391:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG &= ((uint8)(~CY_PM_FASTCLK_IMO_CR_USB));
 392:.\Generated_Source\PSoC5/cyPm.c ****         }
 393:.\Generated_Source\PSoC5/cyPm.c ****     }
 394:.\Generated_Source\PSoC5/cyPm.c **** 
 395:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore enable state if needed */
 396:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 397:.\Generated_Source\PSoC5/cyPm.c ****        (0u == (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 398:.\Generated_Source\PSoC5/cyPm.c ****     {
 399:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO - restore enabled state */
 400:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 401:.\Generated_Source\PSoC5/cyPm.c ****     }
 402:.\Generated_Source\PSoC5/cyPm.c **** 
 403:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore IMOCLK source */
 404:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetSource(cyPmClockBackup.imoClkSrc);
 405:.\Generated_Source\PSoC5/cyPm.c **** 
 406:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore IMO doubler enable state (turned off by CyPmSaveClocks()) */
 407:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.imo2x)
 408:.\Generated_Source\PSoC5/cyPm.c ****     {
 409:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_EnableDoubler();
 410:.\Generated_Source\PSoC5/cyPm.c ****     }
 411:.\Generated_Source\PSoC5/cyPm.c **** 
 412:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - restore clk_imo source, if needed */
 413:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkImoSrc != (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK))
 414:.\Generated_Source\PSoC5/cyPm.c ****     {
 415:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 416:.\Generated_Source\PSoC5/cyPm.c ****                                 cyPmClockBackup.clkImoSrc;
 417:.\Generated_Source\PSoC5/cyPm.c ****     }
 418:.\Generated_Source\PSoC5/cyPm.c **** 
 419:.\Generated_Source\PSoC5/cyPm.c **** 
 420:.\Generated_Source\PSoC5/cyPm.c ****     /* PLL restore state */
 421:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.pllEnableState)
 422:.\Generated_Source\PSoC5/cyPm.c ****     {
 423:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
 424:.\Generated_Source\PSoC5/cyPm.c ****         * Enable PLL. The actual CyPLL_OUT_Start() without wait period uses FTW
 425:.\Generated_Source\PSoC5/cyPm.c ****         * for period measurement. This could cause a problem if CTW/FTW is used
 426:.\Generated_Source\PSoC5/cyPm.c ****         * as a wakeup time in the low power modes APIs. To omit this issue PLL
 427:.\Generated_Source\PSoC5/cyPm.c ****         * wait procedure is implemented with a software delay.
 428:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
 429:.\Generated_Source\PSoC5/cyPm.c ****         status = CYRET_TIMEOUT;
 430:.\Generated_Source\PSoC5/cyPm.c **** 
 431:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable PLL */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 9


 432:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyPLL_OUT_Start(CY_PM_PLL_OUT_NO_WAIT);
 433:.\Generated_Source\PSoC5/cyPm.c **** 
 434:.\Generated_Source\PSoC5/cyPm.c ****         /* Read to clear lock status after delay */
 435:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs((uint32)80u);
 436:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_PLL_SR_REG;
 437:.\Generated_Source\PSoC5/cyPm.c **** 
 438:.\Generated_Source\PSoC5/cyPm.c ****         /* It should take 250 us lock: 251-80 = 171 */
 439:.\Generated_Source\PSoC5/cyPm.c ****         for(i = 171u; i > 0u; i--)
 440:.\Generated_Source\PSoC5/cyPm.c ****         {
 441:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayUs((uint32)1u);
 442:.\Generated_Source\PSoC5/cyPm.c **** 
 443:.\Generated_Source\PSoC5/cyPm.c ****             /* Accept PLL is OK after two consecutive polls indicate PLL lock */
 444:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 445:.\Generated_Source\PSoC5/cyPm.c ****                (0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)))
 446:.\Generated_Source\PSoC5/cyPm.c ****             {
 447:.\Generated_Source\PSoC5/cyPm.c ****                 status = CYRET_SUCCESS;
 448:.\Generated_Source\PSoC5/cyPm.c ****                 break;
 449:.\Generated_Source\PSoC5/cyPm.c ****             }
 450:.\Generated_Source\PSoC5/cyPm.c ****         }
 451:.\Generated_Source\PSoC5/cyPm.c **** 
 452:.\Generated_Source\PSoC5/cyPm.c ****         if(CYRET_TIMEOUT == status)
 453:.\Generated_Source\PSoC5/cyPm.c ****         {
 454:.\Generated_Source\PSoC5/cyPm.c ****             /*******************************************************************
 455:.\Generated_Source\PSoC5/cyPm.c ****             * Process the situation when PLL is not ready.
 456:.\Generated_Source\PSoC5/cyPm.c ****             *******************************************************************/
 457:.\Generated_Source\PSoC5/cyPm.c ****            /* `#START_PLL_TIMEOUT` */
 458:.\Generated_Source\PSoC5/cyPm.c **** 
 459:.\Generated_Source\PSoC5/cyPm.c ****            /* `#END` */
 460:.\Generated_Source\PSoC5/cyPm.c **** 
 461:.\Generated_Source\PSoC5/cyPm.c ****         #ifdef CY_BOOT_CY_PM_RESTORE_CLOCKS_PLL_TIMEOUT_CALLBACK
 462:.\Generated_Source\PSoC5/cyPm.c ****             CyBoot_CyPmRestoreClocks_PllTimeout_Callback();
 463:.\Generated_Source\PSoC5/cyPm.c ****         #endif /* CY_BOOT_CY_PM_RESTORE_CLOCKS_PLL_TIMEOUT_CALLBACK */
 464:.\Generated_Source\PSoC5/cyPm.c ****         }
 465:.\Generated_Source\PSoC5/cyPm.c ****     }   /* (CY_PM_ENABLED == cyPmClockBackup.pllEnableState) */
 466:.\Generated_Source\PSoC5/cyPm.c **** 
 467:.\Generated_Source\PSoC5/cyPm.c **** 
 468:.\Generated_Source\PSoC5/cyPm.c ****     /* PLL and IMO is ready to be source for Master clock */
 469:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_IMO == cyPmClockBackup.masterClkSrc) ||
 470:.\Generated_Source\PSoC5/cyPm.c ****        (CY_PM_MASTER_CLK_SRC_PLL == cyPmClockBackup.masterClkSrc))
 471:.\Generated_Source\PSoC5/cyPm.c ****     {
 472:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock divider */
 473:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 474:.\Generated_Source\PSoC5/cyPm.c ****         {
 475:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 476:.\Generated_Source\PSoC5/cyPm.c ****         }
 477:.\Generated_Source\PSoC5/cyPm.c **** 
 478:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore Master clock source */
 479:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 480:.\Generated_Source\PSoC5/cyPm.c ****     }
 481:.\Generated_Source\PSoC5/cyPm.c **** 
 482:.\Generated_Source\PSoC5/cyPm.c ****     /* IMO - disable if it was originally disabled */
 483:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 484:.\Generated_Source\PSoC5/cyPm.c ****        (0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 485:.\Generated_Source\PSoC5/cyPm.c ****     {
 486:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Stop();
 487:.\Generated_Source\PSoC5/cyPm.c ****     }
 488:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 10


 489:.\Generated_Source\PSoC5/cyPm.c ****     /* Bus clock - restore divider, if needed */
 490:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp = (uint16) ((uint16)CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 491:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp |= CY_PM_CLK_BUS_LSB_DIV_REG;
 492:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkBusDiv != clkBusDivTmp)
 493:.\Generated_Source\PSoC5/cyPm.c ****     {
 494:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(cyPmClockBackup.clkBusDiv);
 495:.\Generated_Source\PSoC5/cyPm.c ****     }
 496:.\Generated_Source\PSoC5/cyPm.c **** 
 497:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore flash wait cycles */
 498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ((uint8)(~CY_PM_CACHE_CR_CYCLES_MASK))) |
 499:.\Generated_Source\PSoC5/cyPm.c ****                            cyPmClockBackup.flashWaitCycles);
 500:.\Generated_Source\PSoC5/cyPm.c **** 
 501:.\Generated_Source\PSoC5/cyPm.c ****     /* Digital and analog clocks - restore state */
 502:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 503:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG = cyPmClockBackup.enClkD;
 504:.\Generated_Source\PSoC5/cyPm.c **** }
 505:.\Generated_Source\PSoC5/cyPm.c **** 
 506:.\Generated_Source\PSoC5/cyPm.c **** 
 507:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
 508:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmAltAct
 509:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
 510:.\Generated_Source\PSoC5/cyPm.c **** *
 511:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
 512:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Alternate Active (Standby) state. The Alternate Active
 513:.\Generated_Source\PSoC5/cyPm.c **** *  state can allow for any of the capabilities of the device to be active, but
 514:.\Generated_Source\PSoC5/cyPm.c **** *  the operation of this function is dependent on the CPU being disabled during
 515:.\Generated_Source\PSoC5/cyPm.c **** *  the Alternate Active state. The configuration code and the component APIs
 516:.\Generated_Source\PSoC5/cyPm.c **** *  will configure the template for the Alternate Active state to be the same as
 517:.\Generated_Source\PSoC5/cyPm.c **** *  the Active state with the exception that the CPU will be disabled during
 518:.\Generated_Source\PSoC5/cyPm.c **** *  Alternate Active.
 519:.\Generated_Source\PSoC5/cyPm.c **** *
 520:.\Generated_Source\PSoC5/cyPm.c **** *  Note Before calling this function, you must manually configure the power mode
 521:.\Generated_Source\PSoC5/cyPm.c **** *  of the source clocks for the timer that is used as the wakeup timer.
 522:.\Generated_Source\PSoC5/cyPm.c **** *
 523:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3:
 524:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Alternate Active, if a wakeupTime other than NONE is
 525:.\Generated_Source\PSoC5/cyPm.c **** *  specified, then the appropriate timer state is configured as specified with
 526:.\Generated_Source\PSoC5/cyPm.c **** *  the interrupt for that timer disabled.  The wakeup source will be the
 527:.\Generated_Source\PSoC5/cyPm.c **** *  combination of the values specified in the wakeupSource and any timer
 528:.\Generated_Source\PSoC5/cyPm.c **** *  specified in the wakeupTime argument.  Once the wakeup condition is
 529:.\Generated_Source\PSoC5/cyPm.c **** *  satisfied, then all saved state is restored and the function returns in the
 530:.\Generated_Source\PSoC5/cyPm.c **** *  Active state.
 531:.\Generated_Source\PSoC5/cyPm.c **** *
 532:.\Generated_Source\PSoC5/cyPm.c **** *  Note that if the wakeupTime is made with a different value, the period before
 533:.\Generated_Source\PSoC5/cyPm.c **** *  the wakeup occurs can be significantly shorter than the specified time.  If
 534:.\Generated_Source\PSoC5/cyPm.c **** *  the next call is made with the same wakeupTime value, then the wakeup will
 535:.\Generated_Source\PSoC5/cyPm.c **** *  occur the specified period after the previous wakeup occurred.
 536:.\Generated_Source\PSoC5/cyPm.c **** *
 537:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 538:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 539:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled.  If the CTW, FTW or One PPS is already
 540:.\Generated_Source\PSoC5/cyPm.c **** *  configured for wakeup, for example with the SleepTimer or RTC components,
 541:.\Generated_Source\PSoC5/cyPm.c **** *  then specify NONE for the wakeupTime and include the appropriate source for
 542:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupSource.
 543:.\Generated_Source\PSoC5/cyPm.c **** *
 544:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 5LP:
 545:.\Generated_Source\PSoC5/cyPm.c **** *  This function is used to both enter the Alternate Active mode and halt the
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 11


 546:.\Generated_Source\PSoC5/cyPm.c **** *  processor.  For PSoC 3 these two actions must be paired together.  With PSoC
 547:.\Generated_Source\PSoC5/cyPm.c **** *  5LP the processor can be halted independently with the __WFI() function from
 548:.\Generated_Source\PSoC5/cyPm.c **** *  the CMSIS library that is included in Creator.  This function should be used
 549:.\Generated_Source\PSoC5/cyPm.c **** *  instead when the action required is just to halt the processor until an
 550:.\Generated_Source\PSoC5/cyPm.c **** *  enabled interrupt occurs.
 551:.\Generated_Source\PSoC5/cyPm.c **** *
 552:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeupTime parameter is not used for this device. It must be set to zero
 553:.\Generated_Source\PSoC5/cyPm.c **** *  (PM_ALT_ACT_TIME_NONE). The wake up time configuration can be done by a
 554:.\Generated_Source\PSoC5/cyPm.c **** *  separate component: the CTW wakeup interval should be configured with the
 555:.\Generated_Source\PSoC5/cyPm.c **** *  Sleep Timer component and one second interval should be configured with the
 556:.\Generated_Source\PSoC5/cyPm.c **** *  RTC component.
 557:.\Generated_Source\PSoC5/cyPm.c **** *
 558:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeup behavior depends on the wakeupSource parameter in the following
 559:.\Generated_Source\PSoC5/cyPm.c **** *  manner: upon function execution the device will be switched from Active to
 560:.\Generated_Source\PSoC5/cyPm.c **** *  Alternate Active mode and then the CPU will be halted. When an enabled wakeup
 561:.\Generated_Source\PSoC5/cyPm.c **** *  event occurs the device will return to Active mode.  Similarly when an
 562:.\Generated_Source\PSoC5/cyPm.c **** *  enabled interrupt occurs the CPU will be started. These two actions will
 563:.\Generated_Source\PSoC5/cyPm.c **** *  occur together provided that the event that occurs is an enabled wakeup
 564:.\Generated_Source\PSoC5/cyPm.c **** *  source and also generates an interrupt. If just the wakeup event occurs then
 565:.\Generated_Source\PSoC5/cyPm.c **** *  the device will be in Active mode, but the CPU will remain halted waiting for
 566:.\Generated_Source\PSoC5/cyPm.c **** *  an interrupt. If an interrupt occurs from something other than a wakeup
 567:.\Generated_Source\PSoC5/cyPm.c **** *  source, then the CPU will restart with the device in Alternate Active mode
 568:.\Generated_Source\PSoC5/cyPm.c **** *  until a wakeup event occurs.
 569:.\Generated_Source\PSoC5/cyPm.c **** *
 570:.\Generated_Source\PSoC5/cyPm.c **** *  For example, if CyPmAltAct(PM_ALT_ACT_TIME_NONE, PM_ALT_ACT_SRC_PICU) is
 571:.\Generated_Source\PSoC5/cyPm.c **** *  called and PICU interrupt occurs, the CPU will be started and device will be
 572:.\Generated_Source\PSoC5/cyPm.c **** *  switched into Active mode. And if CyPmAltAct(PM_ALT_ACT_TIME_NONE,
 573:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_NONE) is called and PICU interrupt occurs, the CPU will be
 574:.\Generated_Source\PSoC5/cyPm.c **** *  started while device remains in Alternate Active mode.
 575:.\Generated_Source\PSoC5/cyPm.c **** *
 576:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
 577:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupTime: Specifies a timer wakeup source and the frequency of that
 578:.\Generated_Source\PSoC5/cyPm.c **** *              source. For PSoC 5LP this parameter is ignored.
 579:.\Generated_Source\PSoC5/cyPm.c **** *
 580:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Time
 581:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_NONE             None
 582:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_ONE_PPS          One PPS: 1 second
 583:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_2MS          CTW: 2 ms
 584:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_4MS          CTW: 4 ms
 585:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_8MS          CTW: 8 ms
 586:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_16MS         CTW: 16 ms
 587:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_32MS         CTW: 32 ms
 588:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_64MS         CTW: 64 ms
 589:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_128MS        CTW: 128 ms
 590:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_256MS        CTW: 256 ms
 591:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_512MS        CTW: 512 ms
 592:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_1024MS       CTW: 1024 ms
 593:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_2048MS       CTW: 2048 ms
 594:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_CTW_4096MS       CTW: 4096 ms
 595:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_TIME_FTW(1-256)*       FTW: 10us to 2.56 ms
 596:.\Generated_Source\PSoC5/cyPm.c **** *
 597:.\Generated_Source\PSoC5/cyPm.c **** *  *Note:   PM_ALT_ACT_TIME_FTW() is a macro that takes an argument that
 598:.\Generated_Source\PSoC5/cyPm.c **** *           specifies how many increments of 10 us to delay.
 599:.\Generated_Source\PSoC5/cyPm.c ****             For PSoC 3 silicon the valid range of  values is 1 to 256.
 600:.\Generated_Source\PSoC5/cyPm.c **** *
 601:.\Generated_Source\PSoC5/cyPm.c **** *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 602:.\Generated_Source\PSoC5/cyPm.c **** *                   a wakeupTime has been specified, the associated timer will
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 12


 603:.\Generated_Source\PSoC5/cyPm.c **** *                   be included as a wakeup source.
 604:.\Generated_Source\PSoC5/cyPm.c **** *
 605:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Source
 606:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_NONE              None
 607:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR0       Comparator 0
 608:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR1       Comparator 1
 609:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR2       Comparator 2
 610:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_COMPARATOR3       Comparator 3
 611:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_INTERRUPT         Interrupt
 612:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_PICU              PICU
 613:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_I2C               I2C
 614:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_BOOSTCONVERTER    Boost Converter
 615:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_FTW               Fast Timewheel*
 616:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_VD                High and Low Voltage Detection (HVI, LVI)*
 617:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_CTW               Central Timewheel**
 618:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_ONE_PPS           One PPS**
 619:.\Generated_Source\PSoC5/cyPm.c **** *  PM_ALT_ACT_SRC_LCD               LCD
 620:.\Generated_Source\PSoC5/cyPm.c **** *
 621:.\Generated_Source\PSoC5/cyPm.c **** *  *Note : FTW and HVI/LVI wakeup signals are in the same mask bit.
 622:.\Generated_Source\PSoC5/cyPm.c **** *  **Note: CTW and One PPS wakeup signals are in the same mask bit.
 623:.\Generated_Source\PSoC5/cyPm.c **** *
 624:.\Generated_Source\PSoC5/cyPm.c **** *  When specifying a Comparator as the wakeupSource, an instance specific define
 625:.\Generated_Source\PSoC5/cyPm.c **** *  that will track with the specific comparator that the instance
 626:.\Generated_Source\PSoC5/cyPm.c **** *  is placed into should be used. As an example, for a Comparator instance named
 627:.\Generated_Source\PSoC5/cyPm.c **** *  MyComp the value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 628:.\Generated_Source\PSoC5/cyPm.c **** *
 629:.\Generated_Source\PSoC5/cyPm.c **** *  When CTW, FTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 630:.\Generated_Source\PSoC5/cyPm.c **** *  function must be called upon wakeup with a corresponding parameter. Please
 631:.\Generated_Source\PSoC5/cyPm.c **** *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 632:.\Generated_Source\PSoC5/cyPm.c **** *  information.
 633:.\Generated_Source\PSoC5/cyPm.c **** *
 634:.\Generated_Source\PSoC5/cyPm.c **** * Return:
 635:.\Generated_Source\PSoC5/cyPm.c **** *  None
 636:.\Generated_Source\PSoC5/cyPm.c **** *
 637:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
 638:.\Generated_Source\PSoC5/cyPm.c **** *  No
 639:.\Generated_Source\PSoC5/cyPm.c **** *
 640:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
 641:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 642:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 643:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled.  Also, the ILO 1 KHz (if CTW timer is
 644:.\Generated_Source\PSoC5/cyPm.c **** *  used as wakeup time) or ILO 100 KHz (if the FTW timer is used as wakeup time)
 645:.\Generated_Source\PSoC5/cyPm.c **** *  will be left started.
 646:.\Generated_Source\PSoC5/cyPm.c **** *
 647:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
 648:.\Generated_Source\PSoC5/cyPm.c **** void CyPmAltAct(uint16 wakeupTime, uint16 wakeupSource) 
 649:.\Generated_Source\PSoC5/cyPm.c **** {
 650:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC5)
 651:.\Generated_Source\PSoC5/cyPm.c **** 
 652:.\Generated_Source\PSoC5/cyPm.c ****         /* Arguments expected to be 0 */
 653:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_ALT_ACT_TIME_NONE == wakeupTime);
 654:.\Generated_Source\PSoC5/cyPm.c **** 
 655:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != wakeupTime)
 656:.\Generated_Source\PSoC5/cyPm.c ****         {
 657:.\Generated_Source\PSoC5/cyPm.c ****             /* To remove unreferenced local variable warning */
 658:.\Generated_Source\PSoC5/cyPm.c ****         }
 659:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 13


 660:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC5) */
 661:.\Generated_Source\PSoC5/cyPm.c **** 
 662:.\Generated_Source\PSoC5/cyPm.c **** 
 663:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
 664:.\Generated_Source\PSoC5/cyPm.c **** 
 665:.\Generated_Source\PSoC5/cyPm.c ****         /* FTW - save current and set new configuration */
 666:.\Generated_Source\PSoC5/cyPm.c ****         if((wakeupTime >= PM_ALT_ACT_TIME_FTW(1u)) && (wakeupTime <= PM_ALT_ACT_TIME_FTW(256u)))
 667:.\Generated_Source\PSoC5/cyPm.c ****         {
 668:.\Generated_Source\PSoC5/cyPm.c ****             CyPmFtwSetInterval(PM_ALT_ACT_FTW_INTERVAL(wakeupTime));
 669:.\Generated_Source\PSoC5/cyPm.c **** 
 670:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 671:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_ALT_ACT_SRC_FTW;
 672:.\Generated_Source\PSoC5/cyPm.c ****         }
 673:.\Generated_Source\PSoC5/cyPm.c **** 
 674:.\Generated_Source\PSoC5/cyPm.c ****         /* CTW - save current and set new configuration */
 675:.\Generated_Source\PSoC5/cyPm.c ****         if((wakeupTime >= PM_ALT_ACT_TIME_CTW_2MS) && (wakeupTime <= PM_ALT_ACT_TIME_CTW_4096MS))
 676:.\Generated_Source\PSoC5/cyPm.c ****         {
 677:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current CTW configuration and set new one */
 678:.\Generated_Source\PSoC5/cyPm.c ****             CyPmCtwSetInterval((uint8)(wakeupTime - 1u));
 679:.\Generated_Source\PSoC5/cyPm.c **** 
 680:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 681:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_ALT_ACT_SRC_CTW;
 682:.\Generated_Source\PSoC5/cyPm.c ****         }
 683:.\Generated_Source\PSoC5/cyPm.c **** 
 684:.\Generated_Source\PSoC5/cyPm.c ****         /* 1PPS - save current and set new configuration */
 685:.\Generated_Source\PSoC5/cyPm.c ****         if(PM_ALT_ACT_TIME_ONE_PPS == wakeupTime)
 686:.\Generated_Source\PSoC5/cyPm.c ****         {
 687:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current 1PPS configuration and set new one */
 688:.\Generated_Source\PSoC5/cyPm.c ****             CyPmOppsSet();
 689:.\Generated_Source\PSoC5/cyPm.c **** 
 690:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 691:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_ALT_ACT_SRC_ONE_PPS;
 692:.\Generated_Source\PSoC5/cyPm.c ****         }
 693:.\Generated_Source\PSoC5/cyPm.c **** 
 694:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
 695:.\Generated_Source\PSoC5/cyPm.c **** 
 696:.\Generated_Source\PSoC5/cyPm.c **** 
 697:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and set new wake up configuration */
 698:.\Generated_Source\PSoC5/cyPm.c **** 
 699:.\Generated_Source\PSoC5/cyPm.c ****     /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 700:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 701:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 702:.\Generated_Source\PSoC5/cyPm.c **** 
 703:.\Generated_Source\PSoC5/cyPm.c ****     /* Comparators */
 704:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 705:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 706:.\Generated_Source\PSoC5/cyPm.c **** 
 707:.\Generated_Source\PSoC5/cyPm.c ****     /* LCD */
 708:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 709:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 710:.\Generated_Source\PSoC5/cyPm.c **** 
 711:.\Generated_Source\PSoC5/cyPm.c **** 
 712:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch to the Alternate Active mode */
 713:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_A
 714:.\Generated_Source\PSoC5/cyPm.c **** 
 715:.\Generated_Source\PSoC5/cyPm.c ****     /* Recommended readback. */
 716:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 14


 717:.\Generated_Source\PSoC5/cyPm.c **** 
 718:.\Generated_Source\PSoC5/cyPm.c ****     /* Two recommended NOPs to get into the mode. */
 719:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 720:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 721:.\Generated_Source\PSoC5/cyPm.c **** 
 722:.\Generated_Source\PSoC5/cyPm.c ****     /* Execute WFI instruction (for ARM-based devices only) */
 723:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 724:.\Generated_Source\PSoC5/cyPm.c **** 
 725:.\Generated_Source\PSoC5/cyPm.c ****     /* Point of return from Alternate Active Mode */
 726:.\Generated_Source\PSoC5/cyPm.c **** 
 727:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore wake up configuration */
 728:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 729:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 730:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 731:.\Generated_Source\PSoC5/cyPm.c **** }
 732:.\Generated_Source\PSoC5/cyPm.c **** 
 733:.\Generated_Source\PSoC5/cyPm.c **** 
 734:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
 735:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmSleep
 736:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
 737:.\Generated_Source\PSoC5/cyPm.c **** *
 738:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
 739:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Sleep state.
 740:.\Generated_Source\PSoC5/cyPm.c **** *
 741:.\Generated_Source\PSoC5/cyPm.c **** *  Note Before calling this function, you must manually configure the power
 742:.\Generated_Source\PSoC5/cyPm.c **** *  mode of the source clocks for the timer that is used as the wakeup timer.
 743:.\Generated_Source\PSoC5/cyPm.c **** *
 744:.\Generated_Source\PSoC5/cyPm.c **** *  Note Before calling this function, you must prepare clock tree configuration
 745:.\Generated_Source\PSoC5/cyPm.c **** *  for the low power mode by calling CyPmSaveClocks(). And restore clock
 746:.\Generated_Source\PSoC5/cyPm.c **** *  configuration after CyPmSleep() execution by calling CyPmRestoreClocks(). See
 747:.\Generated_Source\PSoC5/cyPm.c **** *  Power Management section, Clock Configuration subsection of the System
 748:.\Generated_Source\PSoC5/cyPm.c **** *  Reference Guide for more information.
 749:.\Generated_Source\PSoC5/cyPm.c **** *
 750:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 3:
 751:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Sleep, if a wakeupTime other than NONE is specified,
 752:.\Generated_Source\PSoC5/cyPm.c **** *  then the appropriate timer state is configured as specified with the
 753:.\Generated_Source\PSoC5/cyPm.c **** *  interrupt for that timer disabled.  The wakeup source will be a combination
 754:.\Generated_Source\PSoC5/cyPm.c **** *  of the values specified in the wakeupSource and any timer specified in the
 755:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupTime argument.  Once the wakeup condition is satisfied, then all saved
 756:.\Generated_Source\PSoC5/cyPm.c **** *  state is restored and the function returns in the Active state.
 757:.\Generated_Source\PSoC5/cyPm.c **** *
 758:.\Generated_Source\PSoC5/cyPm.c **** *  Note that if the wakeupTime is made with a different value, the period before
 759:.\Generated_Source\PSoC5/cyPm.c **** *  the wakeup occurs can be significantly shorter than the specified time.  If
 760:.\Generated_Source\PSoC5/cyPm.c **** *  the next call is made with the same wakeupTime value, then the wakeup will
 761:.\Generated_Source\PSoC5/cyPm.c **** *  occur the specified period after the previous wakeup occurred.
 762:.\Generated_Source\PSoC5/cyPm.c **** *
 763:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 764:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 765:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled.  If the CTW or One PPS is already
 766:.\Generated_Source\PSoC5/cyPm.c **** *  configured for wakeup, for example with the SleepTimer or RTC components,
 767:.\Generated_Source\PSoC5/cyPm.c **** *  then specify NONE for the wakeupTime and include the appropriate source for
 768:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupSource.
 769:.\Generated_Source\PSoC5/cyPm.c **** *
 770:.\Generated_Source\PSoC5/cyPm.c **** *  PSoC 5LP:
 771:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeupTime parameter is not used and the only NONE can be specified.
 772:.\Generated_Source\PSoC5/cyPm.c **** *  The wakeup time must be configured with the component, SleepTimer for CTW
 773:.\Generated_Source\PSoC5/cyPm.c **** *  intervals and RTC for 1PPS interval. The component must be configured to
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 15


 774:.\Generated_Source\PSoC5/cyPm.c **** *  generate interrupt.
 775:.\Generated_Source\PSoC5/cyPm.c **** *
 776:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
 777:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupTime:      Specifies a timer wakeup source and the frequency of that
 778:.\Generated_Source\PSoC5/cyPm.c **** *                   source. For PSoC 5LP, this parameter is ignored.
 779:.\Generated_Source\PSoC5/cyPm.c **** *
 780:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Time
 781:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_NONE               None
 782:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_ONE_PPS            One PPS: 1 second
 783:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_2MS            CTW: 2 ms
 784:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_4MS            CTW: 4 ms
 785:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_8MS            CTW: 8 ms
 786:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_16MS           CTW: 16 ms
 787:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_32MS           CTW: 32 ms
 788:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_64MS           CTW: 64 ms
 789:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_128MS          CTW: 128 ms
 790:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_256MS          CTW: 256 ms
 791:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_512MS          CTW: 512 ms
 792:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_1024MS         CTW: 1024 ms
 793:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_2048MS         CTW: 2048 ms
 794:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_TIME_CTW_4096MS         CTW: 4096 ms
 795:.\Generated_Source\PSoC5/cyPm.c **** *
 796:.\Generated_Source\PSoC5/cyPm.c **** *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 797:.\Generated_Source\PSoC5/cyPm.c **** *                   a wakeupTime has been specified the associated timer will be
 798:.\Generated_Source\PSoC5/cyPm.c **** *                   included as a wakeup source.
 799:.\Generated_Source\PSoC5/cyPm.c **** *
 800:.\Generated_Source\PSoC5/cyPm.c **** *           Define                      Source
 801:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_NONE                None
 802:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR0         Comparator 0
 803:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR1         Comparator 1
 804:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR2         Comparator 2
 805:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_COMPARATOR3         Comparator 3
 806:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_PICU                PICU
 807:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_I2C                 I2C
 808:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_BOOSTCONVERTER      Boost Converter
 809:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_VD                  High and Low Voltage Detection (HVI, LVI)
 810:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_CTW                 Central Timewheel*
 811:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_ONE_PPS             One PPS*
 812:.\Generated_Source\PSoC5/cyPm.c **** *  PM_SLEEP_SRC_LCD                 LCD
 813:.\Generated_Source\PSoC5/cyPm.c **** *
 814:.\Generated_Source\PSoC5/cyPm.c **** *  *Note:   CTW and One PPS wakeup signals are in the same mask bit.
 815:.\Generated_Source\PSoC5/cyPm.c **** *
 816:.\Generated_Source\PSoC5/cyPm.c **** *  When specifying a Comparator as the wakeupSource an instance specific define
 817:.\Generated_Source\PSoC5/cyPm.c **** *  should be used that will track with the specific comparator that the instance
 818:.\Generated_Source\PSoC5/cyPm.c **** *  is placed into. As an example for a Comparator instance named MyComp the
 819:.\Generated_Source\PSoC5/cyPm.c **** *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 820:.\Generated_Source\PSoC5/cyPm.c **** *
 821:.\Generated_Source\PSoC5/cyPm.c **** *  When CTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 822:.\Generated_Source\PSoC5/cyPm.c **** *  function must be called upon wakeup with corresponding parameter. Please
 823:.\Generated_Source\PSoC5/cyPm.c **** *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 824:.\Generated_Source\PSoC5/cyPm.c **** *  information.
 825:.\Generated_Source\PSoC5/cyPm.c **** *
 826:.\Generated_Source\PSoC5/cyPm.c **** * Return:
 827:.\Generated_Source\PSoC5/cyPm.c **** *  None
 828:.\Generated_Source\PSoC5/cyPm.c **** *
 829:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
 830:.\Generated_Source\PSoC5/cyPm.c **** *  No
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 16


 831:.\Generated_Source\PSoC5/cyPm.c **** *
 832:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects and Restrictions:
 833:.\Generated_Source\PSoC5/cyPm.c **** *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 834:.\Generated_Source\PSoC5/cyPm.c **** *  specified timer will be left as specified by wakeupTime with the timer
 835:.\Generated_Source\PSoC5/cyPm.c **** *  enabled and the interrupt disabled. Also, the ILO 1 KHz (if CTW timer is
 836:.\Generated_Source\PSoC5/cyPm.c **** *  used as wake up time) will be left started.
 837:.\Generated_Source\PSoC5/cyPm.c **** *
 838:.\Generated_Source\PSoC5/cyPm.c **** *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
 839:.\Generated_Source\PSoC5/cyPm.c **** *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
 840:.\Generated_Source\PSoC5/cyPm.c **** *  delay is measured using rising edges of the 1 kHz ILO.
 841:.\Generated_Source\PSoC5/cyPm.c **** *
 842:.\Generated_Source\PSoC5/cyPm.c **** *  For PSoC 3 silicon hardware buzz should be disabled before entering a sleep
 843:.\Generated_Source\PSoC5/cyPm.c **** *  power mode. It is disabled by PSoC Creator during startup.
 844:.\Generated_Source\PSoC5/cyPm.c **** *  If a Low Voltage Interrupt (LVI), High Voltage Interrupt (HVI) or Brown Out
 845:.\Generated_Source\PSoC5/cyPm.c **** *  detect (power supply supervising capabilities) are required in a design
 846:.\Generated_Source\PSoC5/cyPm.c **** *  during sleep, use the Central Time Wheel (CTW) to periodically wake the
 847:.\Generated_Source\PSoC5/cyPm.c **** *  device, perform software buzz, and refresh the supervisory services. If LVI,
 848:.\Generated_Source\PSoC5/cyPm.c **** *  HVI, or Brown Out is not required, then CTW is not required.
 849:.\Generated_Source\PSoC5/cyPm.c **** *  Refer to the device errata for more information.
 850:.\Generated_Source\PSoC5/cyPm.c **** *
 851:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
 852:.\Generated_Source\PSoC5/cyPm.c **** void CyPmSleep(uint8 wakeupTime, uint16 wakeupSource) 
 853:.\Generated_Source\PSoC5/cyPm.c **** {
 854:.\Generated_Source\PSoC5/cyPm.c ****     uint8 interruptState;
 855:.\Generated_Source\PSoC5/cyPm.c **** 
 856:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current global interrupt enable and disable it */
 857:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 858:.\Generated_Source\PSoC5/cyPm.c **** 
 859:.\Generated_Source\PSoC5/cyPm.c **** 
 860:.\Generated_Source\PSoC5/cyPm.c ****     /***********************************************************************
 861:.\Generated_Source\PSoC5/cyPm.c ****     * The Hibernate/Sleep regulator has a settling time after a reset.
 862:.\Generated_Source\PSoC5/cyPm.c ****     * During this time, the system ignores requests to enter Sleep and
 863:.\Generated_Source\PSoC5/cyPm.c ****     * Hibernate modes. The holdoff delay is measured using rising edges of
 864:.\Generated_Source\PSoC5/cyPm.c ****     * the 1 kHz ILO.
 865:.\Generated_Source\PSoC5/cyPm.c ****     ***********************************************************************/
 866:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 867:.\Generated_Source\PSoC5/cyPm.c ****     {
 868:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable hold off - no action on restore */
 869:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 870:.\Generated_Source\PSoC5/cyPm.c ****     }
 871:.\Generated_Source\PSoC5/cyPm.c ****     else
 872:.\Generated_Source\PSoC5/cyPm.c ****     {
 873:.\Generated_Source\PSoC5/cyPm.c ****         /* Abort, device is not ready for low power mode entry */
 874:.\Generated_Source\PSoC5/cyPm.c **** 
 875:.\Generated_Source\PSoC5/cyPm.c ****         /* Restore global interrupt enable state */
 876:.\Generated_Source\PSoC5/cyPm.c ****         CyExitCriticalSection(interruptState);
 877:.\Generated_Source\PSoC5/cyPm.c **** 
 878:.\Generated_Source\PSoC5/cyPm.c ****         return;
 879:.\Generated_Source\PSoC5/cyPm.c ****     }
 880:.\Generated_Source\PSoC5/cyPm.c **** 
 881:.\Generated_Source\PSoC5/cyPm.c **** 
 882:.\Generated_Source\PSoC5/cyPm.c ****     /***********************************************************************
 883:.\Generated_Source\PSoC5/cyPm.c ****     * PSoC3 < TO6:
 884:.\Generated_Source\PSoC5/cyPm.c ****     * - Hardware buzz must be disabled before the sleep mode entry.
 885:.\Generated_Source\PSoC5/cyPm.c ****     * - Voltage supervision (HVI/LVI) requires hardware buzz, so they must
 886:.\Generated_Source\PSoC5/cyPm.c ****     *   be also disabled.
 887:.\Generated_Source\PSoC5/cyPm.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 17


 888:.\Generated_Source\PSoC5/cyPm.c ****     * PSoC3 >= TO6:
 889:.\Generated_Source\PSoC5/cyPm.c ****     * - Voltage supervision (HVI/LVI) requires hardware buzz, so hardware
 890:.\Generated_Source\PSoC5/cyPm.c ****     *   buzz must be enabled before the sleep mode entry and restored on
 891:.\Generated_Source\PSoC5/cyPm.c ****     *   the wakeup.
 892:.\Generated_Source\PSoC5/cyPm.c ****     ***********************************************************************/
 893:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
 894:.\Generated_Source\PSoC5/cyPm.c **** 
 895:.\Generated_Source\PSoC5/cyPm.c ****         /* Silicon Revision ID is below TO6 */
 896:.\Generated_Source\PSoC5/cyPm.c ****         if(CYDEV_CHIP_REV_ACTUAL < 5u)
 897:.\Generated_Source\PSoC5/cyPm.c ****         {
 898:.\Generated_Source\PSoC5/cyPm.c ****             /* Hardware buzz expected to be disabled in Sleep mode */
 899:.\Generated_Source\PSoC5/cyPm.c ****             CYASSERT(0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ));
 900:.\Generated_Source\PSoC5/cyPm.c ****         }
 901:.\Generated_Source\PSoC5/cyPm.c **** 
 902:.\Generated_Source\PSoC5/cyPm.c **** 
 903:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
 904:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
 905:.\Generated_Source\PSoC5/cyPm.c ****         {
 906:.\Generated_Source\PSoC5/cyPm.c ****             if(CYDEV_CHIP_REV_ACTUAL < 5u)
 907:.\Generated_Source\PSoC5/cyPm.c ****             {
 908:.\Generated_Source\PSoC5/cyPm.c ****                 /* LVI/HVI requires hardware buzz to be enabled */
 909:.\Generated_Source\PSoC5/cyPm.c ****                 CYASSERT(0u != 0u);
 910:.\Generated_Source\PSoC5/cyPm.c ****             }
 911:.\Generated_Source\PSoC5/cyPm.c ****             else
 912:.\Generated_Source\PSoC5/cyPm.c ****             {
 913:.\Generated_Source\PSoC5/cyPm.c ****                 if (0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ))
 914:.\Generated_Source\PSoC5/cyPm.c ****                 {
 915:.\Generated_Source\PSoC5/cyPm.c ****                     cyPmBackup.hardwareBuzz = CY_PM_DISABLED;
 916:.\Generated_Source\PSoC5/cyPm.c ****                     CY_PM_PWRSYS_WAKE_TR2_REG |= CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ;
 917:.\Generated_Source\PSoC5/cyPm.c ****                 }
 918:.\Generated_Source\PSoC5/cyPm.c ****                 else
 919:.\Generated_Source\PSoC5/cyPm.c ****                 {
 920:.\Generated_Source\PSoC5/cyPm.c ****                     cyPmBackup.hardwareBuzz = CY_PM_ENABLED;
 921:.\Generated_Source\PSoC5/cyPm.c ****                 }
 922:.\Generated_Source\PSoC5/cyPm.c ****             }
 923:.\Generated_Source\PSoC5/cyPm.c ****         }
 924:.\Generated_Source\PSoC5/cyPm.c **** 
 925:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
 926:.\Generated_Source\PSoC5/cyPm.c **** 
 927:.\Generated_Source\PSoC5/cyPm.c **** 
 928:.\Generated_Source\PSoC5/cyPm.c ****     /*******************************************************************************
 929:.\Generated_Source\PSoC5/cyPm.c ****     * For ARM-based devices,interrupt is required for the CPU to wake up. The
 930:.\Generated_Source\PSoC5/cyPm.c ****     * Power Management implementation assumes that wakeup time is configured with a
 931:.\Generated_Source\PSoC5/cyPm.c ****     * separate component (component-based wakeup time configuration) for
 932:.\Generated_Source\PSoC5/cyPm.c ****     * interrupt to be issued on terminal count. For more information, refer to the
 933:.\Generated_Source\PSoC5/cyPm.c ****     * Wakeup Time Configuration section of System Reference Guide.
 934:.\Generated_Source\PSoC5/cyPm.c ****     *******************************************************************************/
 935:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC5)
 936:.\Generated_Source\PSoC5/cyPm.c **** 
 937:.\Generated_Source\PSoC5/cyPm.c ****         /* Arguments expected to be 0 */
 938:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_SLEEP_TIME_NONE == wakeupTime);
 939:.\Generated_Source\PSoC5/cyPm.c **** 
 940:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != wakeupTime)
 941:.\Generated_Source\PSoC5/cyPm.c ****         {
 942:.\Generated_Source\PSoC5/cyPm.c ****             /* To remove unreferenced local variable warning */
 943:.\Generated_Source\PSoC5/cyPm.c ****         }
 944:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 18


 945:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC5) */
 946:.\Generated_Source\PSoC5/cyPm.c **** 
 947:.\Generated_Source\PSoC5/cyPm.c **** 
 948:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
 949:.\Generated_Source\PSoC5/cyPm.c **** 
 950:.\Generated_Source\PSoC5/cyPm.c **** 
 951:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
 952:.\Generated_Source\PSoC5/cyPm.c **** 
 953:.\Generated_Source\PSoC5/cyPm.c ****         /* CTW - save current and set new configuration */
 954:.\Generated_Source\PSoC5/cyPm.c ****         if((wakeupTime >= PM_SLEEP_TIME_CTW_2MS) && (wakeupTime <= PM_SLEEP_TIME_CTW_4096MS))
 955:.\Generated_Source\PSoC5/cyPm.c ****         {
 956:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current and set new configuration of CTW */
 957:.\Generated_Source\PSoC5/cyPm.c ****             CyPmCtwSetInterval((uint8)(wakeupTime - 1u));
 958:.\Generated_Source\PSoC5/cyPm.c **** 
 959:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 960:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_SLEEP_SRC_CTW;
 961:.\Generated_Source\PSoC5/cyPm.c ****         }
 962:.\Generated_Source\PSoC5/cyPm.c **** 
 963:.\Generated_Source\PSoC5/cyPm.c ****         /* 1PPS - save current and set new configuration */
 964:.\Generated_Source\PSoC5/cyPm.c ****         if(PM_SLEEP_TIME_ONE_PPS == wakeupTime)
 965:.\Generated_Source\PSoC5/cyPm.c ****         {
 966:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current and set new configuration of the 1PPS */
 967:.\Generated_Source\PSoC5/cyPm.c ****             CyPmOppsSet();
 968:.\Generated_Source\PSoC5/cyPm.c **** 
 969:.\Generated_Source\PSoC5/cyPm.c ****             /* Include associated timer to wakeupSource */
 970:.\Generated_Source\PSoC5/cyPm.c ****             wakeupSource |= PM_SLEEP_SRC_ONE_PPS;
 971:.\Generated_Source\PSoC5/cyPm.c ****         }
 972:.\Generated_Source\PSoC5/cyPm.c **** 
 973:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
 974:.\Generated_Source\PSoC5/cyPm.c **** 
 975:.\Generated_Source\PSoC5/cyPm.c **** 
 976:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and set new wake up configuration */
 977:.\Generated_Source\PSoC5/cyPm.c **** 
 978:.\Generated_Source\PSoC5/cyPm.c ****     /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 979:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 980:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 981:.\Generated_Source\PSoC5/cyPm.c **** 
 982:.\Generated_Source\PSoC5/cyPm.c ****     /* Comparators */
 983:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 984:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 985:.\Generated_Source\PSoC5/cyPm.c **** 
 986:.\Generated_Source\PSoC5/cyPm.c ****     /* LCD */
 987:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 988:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 989:.\Generated_Source\PSoC5/cyPm.c **** 
 990:.\Generated_Source\PSoC5/cyPm.c **** 
 991:.\Generated_Source\PSoC5/cyPm.c ****     /*******************************************************************
 992:.\Generated_Source\PSoC5/cyPm.c ****     * Do not use the merge region below unless any component datasheet
 993:.\Generated_Source\PSoC5/cyPm.c ****     * suggests doing so.
 994:.\Generated_Source\PSoC5/cyPm.c ****     *******************************************************************/
 995:.\Generated_Source\PSoC5/cyPm.c ****     /* `#START CY_PM_JUST_BEFORE_SLEEP` */
 996:.\Generated_Source\PSoC5/cyPm.c **** 
 997:.\Generated_Source\PSoC5/cyPm.c ****     /* `#END` */
 998:.\Generated_Source\PSoC5/cyPm.c **** 
 999:.\Generated_Source\PSoC5/cyPm.c ****     #ifdef CY_BOOT_CY_PM_SLEEP_BEFORE_SLEEP_CALLBACK
1000:.\Generated_Source\PSoC5/cyPm.c ****         CyBoot_CyPmSleep_BeforeSleep_Callback();
1001:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* CY_BOOT_CY_PM_SLEEP_BEFORE_SLEEP_CALLBACK */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 19


1002:.\Generated_Source\PSoC5/cyPm.c **** 
1003:.\Generated_Source\PSoC5/cyPm.c ****     /* Last moment IMO frequency change */
1004:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
1005:.\Generated_Source\PSoC5/cyPm.c ****     {
1006:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is 12 MHz */
1007:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
1008:.\Generated_Source\PSoC5/cyPm.c ****     }
1009:.\Generated_Source\PSoC5/cyPm.c ****     else
1010:.\Generated_Source\PSoC5/cyPm.c ****     {
1011:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is not 12 MHz */
1012:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
1013:.\Generated_Source\PSoC5/cyPm.c **** 
1014:.\Generated_Source\PSoC5/cyPm.c ****         /* Save IMO frequency */
1015:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1016:.\Generated_Source\PSoC5/cyPm.c **** 
1017:.\Generated_Source\PSoC5/cyPm.c ****         /* Set IMO frequency to 12 MHz */
1018:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
1019:.\Generated_Source\PSoC5/cyPm.c ****     }
1020:.\Generated_Source\PSoC5/cyPm.c **** 
1021:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch to Sleep mode */
1022:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_S
1023:.\Generated_Source\PSoC5/cyPm.c **** 
1024:.\Generated_Source\PSoC5/cyPm.c ****     /* Recommended readback. */
1025:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
1026:.\Generated_Source\PSoC5/cyPm.c **** 
1027:.\Generated_Source\PSoC5/cyPm.c ****     /* Two recommended NOPs to get into mode. */
1028:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1029:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1030:.\Generated_Source\PSoC5/cyPm.c **** 
1031:.\Generated_Source\PSoC5/cyPm.c ****     /* Execute WFI instruction (for ARM-based devices only) */
1032:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
1033:.\Generated_Source\PSoC5/cyPm.c **** 
1034:.\Generated_Source\PSoC5/cyPm.c ****     /* Point of return from Sleep Mode */
1035:.\Generated_Source\PSoC5/cyPm.c **** 
1036:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore last moment IMO frequency change */
1037:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1038:.\Generated_Source\PSoC5/cyPm.c ****     {
1039:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
1040:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.imoActFreq;
1041:.\Generated_Source\PSoC5/cyPm.c ****     }
1042:.\Generated_Source\PSoC5/cyPm.c **** 
1043:.\Generated_Source\PSoC5/cyPm.c **** 
1044:.\Generated_Source\PSoC5/cyPm.c ****     /*******************************************************************
1045:.\Generated_Source\PSoC5/cyPm.c ****     * Do not use merge region below unless any component datasheet
1046:.\Generated_Source\PSoC5/cyPm.c ****     * suggest to do so.
1047:.\Generated_Source\PSoC5/cyPm.c ****     *******************************************************************/
1048:.\Generated_Source\PSoC5/cyPm.c ****     /* `#START CY_PM_JUST_AFTER_WAKEUP_FROM_SLEEP` */
1049:.\Generated_Source\PSoC5/cyPm.c **** 
1050:.\Generated_Source\PSoC5/cyPm.c ****     /* `#END` */
1051:.\Generated_Source\PSoC5/cyPm.c **** 
1052:.\Generated_Source\PSoC5/cyPm.c ****     #ifdef CY_BOOT_CY_PM_SLEEP_AFTER_SLEEP_CALLBACK
1053:.\Generated_Source\PSoC5/cyPm.c ****         CyBoot_CyPmSleep_AfterSleep_Callback();
1054:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* CY_BOOT_CY_PM_SLEEP_AFTER_SLEEP_CALLBACK */
1055:.\Generated_Source\PSoC5/cyPm.c **** 
1056:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore hardware configuration */
1057:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
1058:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 20


1059:.\Generated_Source\PSoC5/cyPm.c **** 
1060:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable hardware buzz, if it was previously enabled */
1061:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
1062:.\Generated_Source\PSoC5/cyPm.c **** 
1063:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
1064:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
1065:.\Generated_Source\PSoC5/cyPm.c ****         {
1066:.\Generated_Source\PSoC5/cyPm.c ****             if(CYDEV_CHIP_REV_ACTUAL >= 5u)
1067:.\Generated_Source\PSoC5/cyPm.c ****             {
1068:.\Generated_Source\PSoC5/cyPm.c ****                 if (CY_PM_DISABLED == cyPmBackup.hardwareBuzz)
1069:.\Generated_Source\PSoC5/cyPm.c ****                 {
1070:.\Generated_Source\PSoC5/cyPm.c ****                     CY_PM_PWRSYS_WAKE_TR2_REG &= (uint8)(~CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ);
1071:.\Generated_Source\PSoC5/cyPm.c ****                 }
1072:.\Generated_Source\PSoC5/cyPm.c ****             }
1073:.\Generated_Source\PSoC5/cyPm.c ****         }
1074:.\Generated_Source\PSoC5/cyPm.c **** 
1075:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
1076:.\Generated_Source\PSoC5/cyPm.c **** 
1077:.\Generated_Source\PSoC5/cyPm.c **** 
1078:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore current wake up configuration */
1079:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1080:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1081:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1082:.\Generated_Source\PSoC5/cyPm.c **** 
1083:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore global interrupt enable state */
1084:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
1085:.\Generated_Source\PSoC5/cyPm.c **** }
1086:.\Generated_Source\PSoC5/cyPm.c **** 
1087:.\Generated_Source\PSoC5/cyPm.c **** 
1088:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1089:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibernate
1090:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1091:.\Generated_Source\PSoC5/cyPm.c **** *
1092:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1093:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Hibernate state.
1094:.\Generated_Source\PSoC5/cyPm.c **** *
1095:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Hibernate, the current status of the PICU wakeup source
1096:.\Generated_Source\PSoC5/cyPm.c **** *  bit is saved and then set. This configures the device to wake up from the
1097:.\Generated_Source\PSoC5/cyPm.c **** *  PICU. Make sure you have at least one pin configured to generate PICU
1098:.\Generated_Source\PSoC5/cyPm.c **** *  interrupt. For pin Px.y, the register "PICU_INTTYPE_PICUx_INTTYPEy" controls
1099:.\Generated_Source\PSoC5/cyPm.c **** *  the PICU behavior. In the TRM, this register is "PICU[0..15]_INTTYPE[0..7]."
1100:.\Generated_Source\PSoC5/cyPm.c **** *  In the Pins component datasheet, this register is referred to as the IRQ
1101:.\Generated_Source\PSoC5/cyPm.c **** *  option. Once the wakeup occurs, the PICU wakeup source bit is restored and
1102:.\Generated_Source\PSoC5/cyPm.c **** *  the PSoC returns to the Active state.
1103:.\Generated_Source\PSoC5/cyPm.c **** *
1104:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1105:.\Generated_Source\PSoC5/cyPm.c **** *  None
1106:.\Generated_Source\PSoC5/cyPm.c **** *
1107:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1108:.\Generated_Source\PSoC5/cyPm.c **** *  None
1109:.\Generated_Source\PSoC5/cyPm.c **** *
1110:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1111:.\Generated_Source\PSoC5/cyPm.c **** *  No
1112:.\Generated_Source\PSoC5/cyPm.c **** *
1113:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1114:.\Generated_Source\PSoC5/cyPm.c **** *  Applications must wait 20 us before re-entering hibernate or sleep after
1115:.\Generated_Source\PSoC5/cyPm.c **** *  waking up from hibernate. The 20 us allows the sleep regulator time to
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 21


1116:.\Generated_Source\PSoC5/cyPm.c **** *  stabilize before the next hibernate / sleep event occurs. The 20 us
1117:.\Generated_Source\PSoC5/cyPm.c **** *  requirement begins when the device wakes up. There is no hardware check that
1118:.\Generated_Source\PSoC5/cyPm.c **** *  this requirement is met. The specified delay should be done on ISR entry.
1119:.\Generated_Source\PSoC5/cyPm.c **** *
1120:.\Generated_Source\PSoC5/cyPm.c **** *  After the wakeup PICU interrupt occurs, the Pin_ClearInterrupt() (where Pin
1121:.\Generated_Source\PSoC5/cyPm.c **** *  is instance name of the Pins component) function must be called to clear the
1122:.\Generated_Source\PSoC5/cyPm.c **** *  latched pin events to allow the proper Hibernate mode entry and to enable
1123:.\Generated_Source\PSoC5/cyPm.c **** *  detection of future events.
1124:.\Generated_Source\PSoC5/cyPm.c **** *
1125:.\Generated_Source\PSoC5/cyPm.c **** *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
1126:.\Generated_Source\PSoC5/cyPm.c **** *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
1127:.\Generated_Source\PSoC5/cyPm.c **** *  delay is measured using the rising edges of the 1 kHz ILO.
1128:.\Generated_Source\PSoC5/cyPm.c **** *
1129:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1130:.\Generated_Source\PSoC5/cyPm.c **** void CyPmHibernate(void) 
1131:.\Generated_Source\PSoC5/cyPm.c **** {
1132:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibernateEx(CY_PM_HIB_SRC_PICU);
1133:.\Generated_Source\PSoC5/cyPm.c **** }
1134:.\Generated_Source\PSoC5/cyPm.c **** 
1135:.\Generated_Source\PSoC5/cyPm.c **** 
1136:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1137:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibernateEx
1138:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1139:.\Generated_Source\PSoC5/cyPm.c **** *
1140:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1141:.\Generated_Source\PSoC5/cyPm.c **** *  Puts the part into the Hibernate state.
1142:.\Generated_Source\PSoC5/cyPm.c **** *
1143:.\Generated_Source\PSoC5/cyPm.c **** *  The following wake up sources can be configured: PICU interrupt, Comparator0,
1144:.\Generated_Source\PSoC5/cyPm.c **** *  Comparator1, Comparator2, and Comparator3 output.
1145:.\Generated_Source\PSoC5/cyPm.c **** *
1146:.\Generated_Source\PSoC5/cyPm.c **** *  Before switching to Hibernate, the current status of the PICU wakeup source
1147:.\Generated_Source\PSoC5/cyPm.c **** *  bit is saved and then set.
1148:.\Generated_Source\PSoC5/cyPm.c **** *
1149:.\Generated_Source\PSoC5/cyPm.c **** *  If using PICU as the wake up source, make sure you have at least one pin
1150:.\Generated_Source\PSoC5/cyPm.c **** *  configured to generate a PICU interrupt. For pin Px.y, the register
1151:.\Generated_Source\PSoC5/cyPm.c **** *  "PICU_INTTYPE_PICUx_INTTYPEy" controls  the PICU behavior. In the TRM, this
1152:.\Generated_Source\PSoC5/cyPm.c **** *  register is "PICU[0..15]_INTTYPE[0..7]." In the Pins component datasheet,
1153:.\Generated_Source\PSoC5/cyPm.c **** *  this register is referred to as the IRQ option. Once the wakeup occurs, the
1154:.\Generated_Source\PSoC5/cyPm.c **** *  PICU wakeup source bit is restored and the PSoC returns to the Active state.
1155:.\Generated_Source\PSoC5/cyPm.c **** *
1156:.\Generated_Source\PSoC5/cyPm.c **** *  If using a comparator as the wake up source, make sure you call this function
1157:.\Generated_Source\PSoC5/cyPm.c **** *  with the 'wakeupSource' parameter set to the appropriate comparator. The part
1158:.\Generated_Source\PSoC5/cyPm.c **** *  is configured for the requested wakeup source by setting the corresponding
1159:.\Generated_Source\PSoC5/cyPm.c **** *  bits in PM_WAKEUP_CFG1 register.
1160:.\Generated_Source\PSoC5/cyPm.c **** *
1161:.\Generated_Source\PSoC5/cyPm.c **** *  Function call CyPmHibernateEx(CY_PM_HIB_SRC_PICU) will act in the same way as
1162:.\Generated_Source\PSoC5/cyPm.c **** *  CyPmHibernate().
1163:.\Generated_Source\PSoC5/cyPm.c **** *
1164:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1165:.\Generated_Source\PSoC5/cyPm.c **** *  wakeupSource:
1166:.\Generated_Source\PSoC5/cyPm.c **** *           Parameter Value             Description
1167:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_PICU          PICU interrupt is set as the wake up source.
1168:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_COMPARATOR0   Comparator 0 is set as the wake up source.
1169:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_COMPARATOR1   Comparator 1 is set as the wake up source.
1170:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_COMPARATOR2   Comparator 2 is set as the wake up source.
1171:.\Generated_Source\PSoC5/cyPm.c **** *       CY_PM_HIB_SRC_COMPARATOR3   Comparator 3 is set as the wake up source.
1172:.\Generated_Source\PSoC5/cyPm.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 22


1173:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1174:.\Generated_Source\PSoC5/cyPm.c **** *  None
1175:.\Generated_Source\PSoC5/cyPm.c **** *
1176:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1177:.\Generated_Source\PSoC5/cyPm.c **** *  No
1178:.\Generated_Source\PSoC5/cyPm.c **** *
1179:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1180:.\Generated_Source\PSoC5/cyPm.c **** *  Applications must wait 20 us before re-entering hibernate or sleep after
1181:.\Generated_Source\PSoC5/cyPm.c **** *  waking up from hibernate. The 20 us allows the sleep regulator time to
1182:.\Generated_Source\PSoC5/cyPm.c **** *  stabilize before the next hibernate / sleep event occurs. The 20 us
1183:.\Generated_Source\PSoC5/cyPm.c **** *  requirement begins when the device wakes up. There is no hardware check that
1184:.\Generated_Source\PSoC5/cyPm.c **** *  this requirement is met. The specified delay should be done on ISR entry.
1185:.\Generated_Source\PSoC5/cyPm.c **** *
1186:.\Generated_Source\PSoC5/cyPm.c **** *  After the wakeup PICU interrupt occurs, the Pin_ClearInterrupt() (where Pin
1187:.\Generated_Source\PSoC5/cyPm.c **** *  is instance name of the Pins component) function must be called to clear the
1188:.\Generated_Source\PSoC5/cyPm.c **** *  latched pin events to allow the proper Hibernate mode entry and to enable
1189:.\Generated_Source\PSoC5/cyPm.c **** *  detection of future events.
1190:.\Generated_Source\PSoC5/cyPm.c **** *
1191:.\Generated_Source\PSoC5/cyPm.c **** *  The 1 kHz ILO clock is expected to be enabled for PSoC 3 and PSoC 5LP to
1192:.\Generated_Source\PSoC5/cyPm.c **** *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
1193:.\Generated_Source\PSoC5/cyPm.c **** *  delay is measured using the rising edges of the 1 kHz ILO.
1194:.\Generated_Source\PSoC5/cyPm.c **** *
1195:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1196:.\Generated_Source\PSoC5/cyPm.c **** void CyPmHibernateEx(uint16 wakeupSource) 
1197:.\Generated_Source\PSoC5/cyPm.c **** {
1198:.\Generated_Source\PSoC5/cyPm.c ****     uint8 interruptState;
1199:.\Generated_Source\PSoC5/cyPm.c **** 
1200:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current global interrupt enable and disable it */
1201:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
1202:.\Generated_Source\PSoC5/cyPm.c **** 
1203:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
1204:.\Generated_Source\PSoC5/cyPm.c ****         * The Hibernate/Sleep regulator has a settling time after a reset.
1205:.\Generated_Source\PSoC5/cyPm.c ****         * During this time, the system ignores requests to enter the Sleep and
1206:.\Generated_Source\PSoC5/cyPm.c ****         * Hibernate modes. The holdoff delay is measured using the rising edges of
1207:.\Generated_Source\PSoC5/cyPm.c ****         * the 1 kHz ILO.
1208:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
1209:.\Generated_Source\PSoC5/cyPm.c ****         if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
1210:.\Generated_Source\PSoC5/cyPm.c ****         {
1211:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable hold off - no action on restore */
1212:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
1213:.\Generated_Source\PSoC5/cyPm.c ****         }
1214:.\Generated_Source\PSoC5/cyPm.c ****         else
1215:.\Generated_Source\PSoC5/cyPm.c ****         {
1216:.\Generated_Source\PSoC5/cyPm.c ****             /* Abort, device is not ready for low power mode entry */
1217:.\Generated_Source\PSoC5/cyPm.c **** 
1218:.\Generated_Source\PSoC5/cyPm.c ****             /* Restore global interrupt enable state */
1219:.\Generated_Source\PSoC5/cyPm.c ****             CyExitCriticalSection(interruptState);
1220:.\Generated_Source\PSoC5/cyPm.c **** 
1221:.\Generated_Source\PSoC5/cyPm.c ****             return;
1222:.\Generated_Source\PSoC5/cyPm.c ****         }
1223:.\Generated_Source\PSoC5/cyPm.c **** 
1224:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSaveSet();
1225:.\Generated_Source\PSoC5/cyPm.c **** 
1226:.\Generated_Source\PSoC5/cyPm.c **** 
1227:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and set new wake up configuration */
1228:.\Generated_Source\PSoC5/cyPm.c **** 
1229:.\Generated_Source\PSoC5/cyPm.c ****     /* Save and enable only wakeup on PICU */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 23


1230:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
1231:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = ((uint8) (wakeupSource >> 4u) & CY_PM_WAKEUP_PICU);
1232:.\Generated_Source\PSoC5/cyPm.c **** 
1233:.\Generated_Source\PSoC5/cyPm.c ****     /* Comparators */
1234:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
1235:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
1236:.\Generated_Source\PSoC5/cyPm.c **** 
1237:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
1238:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = 0x00u;
1239:.\Generated_Source\PSoC5/cyPm.c **** 
1240:.\Generated_Source\PSoC5/cyPm.c **** 
1241:.\Generated_Source\PSoC5/cyPm.c ****     /* Last moment IMO frequency change */
1242:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
1243:.\Generated_Source\PSoC5/cyPm.c ****     {
1244:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is 12 MHz */
1245:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
1246:.\Generated_Source\PSoC5/cyPm.c ****     }
1247:.\Generated_Source\PSoC5/cyPm.c ****     else
1248:.\Generated_Source\PSoC5/cyPm.c ****     {
1249:.\Generated_Source\PSoC5/cyPm.c ****         /* IMO frequency is not 12 MHz */
1250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
1251:.\Generated_Source\PSoC5/cyPm.c **** 
1252:.\Generated_Source\PSoC5/cyPm.c ****         /* Save IMO frequency */
1253:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1254:.\Generated_Source\PSoC5/cyPm.c **** 
1255:.\Generated_Source\PSoC5/cyPm.c ****         /* Set IMO frequency to 12 MHz */
1256:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
1257:.\Generated_Source\PSoC5/cyPm.c ****     }
1258:.\Generated_Source\PSoC5/cyPm.c **** 
1259:.\Generated_Source\PSoC5/cyPm.c **** 
1260:.\Generated_Source\PSoC5/cyPm.c ****     /* Switch to Hibernate Mode */
1261:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = (CY_PM_MODE_CSR_REG & ((uint8) (~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_H
1262:.\Generated_Source\PSoC5/cyPm.c **** 
1263:.\Generated_Source\PSoC5/cyPm.c ****     /* Recommended readback. */
1264:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
1265:.\Generated_Source\PSoC5/cyPm.c **** 
1266:.\Generated_Source\PSoC5/cyPm.c ****     /* Two recommended NOPs to get into mode. */
1267:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1268:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
1269:.\Generated_Source\PSoC5/cyPm.c **** 
1270:.\Generated_Source\PSoC5/cyPm.c ****     /* Execute WFI instruction (for ARM-based devices only) */
1271:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
1272:.\Generated_Source\PSoC5/cyPm.c **** 
1273:.\Generated_Source\PSoC5/cyPm.c **** 
1274:.\Generated_Source\PSoC5/cyPm.c ****     /* Point of return from Hibernate mode */
1275:.\Generated_Source\PSoC5/cyPm.c **** 
1276:.\Generated_Source\PSoC5/cyPm.c **** 
1277:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore last moment IMO frequency change */
1278:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1279:.\Generated_Source\PSoC5/cyPm.c ****     {
1280:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
1281:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.imoActFreq;
1282:.\Generated_Source\PSoC5/cyPm.c ****     }
1283:.\Generated_Source\PSoC5/cyPm.c **** 
1284:.\Generated_Source\PSoC5/cyPm.c **** 
1285:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore device for proper Hibernate mode exit*/
1286:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibRestore();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 24


1287:.\Generated_Source\PSoC5/cyPm.c **** 
1288:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore current wake up configuration */
1289:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1290:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1291:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1292:.\Generated_Source\PSoC5/cyPm.c **** 
1293:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore global interrupt enable state */
1294:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
1295:.\Generated_Source\PSoC5/cyPm.c **** }
1296:.\Generated_Source\PSoC5/cyPm.c **** 
1297:.\Generated_Source\PSoC5/cyPm.c **** 
1298:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1299:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmReadStatus
1300:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1301:.\Generated_Source\PSoC5/cyPm.c **** *
1302:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1303:.\Generated_Source\PSoC5/cyPm.c **** *  Manages the Power Manager Interrupt Status Register.  This register has the
1304:.\Generated_Source\PSoC5/cyPm.c **** *  interrupt status for the one pulse per second, central timewheel and fast
1305:.\Generated_Source\PSoC5/cyPm.c **** *  timewheel timers.  This hardware register clears on read.  To allow for only
1306:.\Generated_Source\PSoC5/cyPm.c **** *  clearing the bits of interest and preserving the other bits, this function
1307:.\Generated_Source\PSoC5/cyPm.c **** *  uses a shadow register that retains the state.  This function reads the
1308:.\Generated_Source\PSoC5/cyPm.c **** *  status register and ORs that value with the shadow register.  That is the
1309:.\Generated_Source\PSoC5/cyPm.c **** *  value that is returned.  Then the bits in the mask that are set are cleared
1310:.\Generated_Source\PSoC5/cyPm.c **** *  from this value and written back to the shadow register.
1311:.\Generated_Source\PSoC5/cyPm.c **** *
1312:.\Generated_Source\PSoC5/cyPm.c **** *  Note You must call this function within 1 ms (1 clock cycle of the ILO)
1313:.\Generated_Source\PSoC5/cyPm.c **** *  after a CTW event has occurred.
1314:.\Generated_Source\PSoC5/cyPm.c **** *
1315:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1316:.\Generated_Source\PSoC5/cyPm.c **** *  mask: Bits in the shadow register to clear.
1317:.\Generated_Source\PSoC5/cyPm.c **** *
1318:.\Generated_Source\PSoC5/cyPm.c **** *       Define                      Source
1319:.\Generated_Source\PSoC5/cyPm.c **** *  CY_PM_FTW_INT                Fast Timewheel
1320:.\Generated_Source\PSoC5/cyPm.c **** *  CY_PM_CTW_INT                Central Timewheel
1321:.\Generated_Source\PSoC5/cyPm.c **** *  CY_PM_ONEPPS_INT             One Pulse Per Second
1322:.\Generated_Source\PSoC5/cyPm.c **** *
1323:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1324:.\Generated_Source\PSoC5/cyPm.c **** *  Status.  Same bits values as the mask parameter.
1325:.\Generated_Source\PSoC5/cyPm.c **** *
1326:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1327:.\Generated_Source\PSoC5/cyPm.c **** uint8 CyPmReadStatus(uint8 mask) 
1328:.\Generated_Source\PSoC5/cyPm.c **** {
1329:.\Generated_Source\PSoC5/cyPm.c ****     static uint8 interruptStatus;
1330:.\Generated_Source\PSoC5/cyPm.c ****     uint8 interruptState;
1331:.\Generated_Source\PSoC5/cyPm.c ****     uint8 tmpStatus;
1332:.\Generated_Source\PSoC5/cyPm.c **** 
1333:.\Generated_Source\PSoC5/cyPm.c ****     /* Enter critical section */
1334:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
1335:.\Generated_Source\PSoC5/cyPm.c **** 
1336:.\Generated_Source\PSoC5/cyPm.c ****     /* Save value of register, copy it and clear desired bit */
1337:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus |= CY_PM_INT_SR_REG;
1338:.\Generated_Source\PSoC5/cyPm.c ****     tmpStatus = interruptStatus & (CY_PM_FTW_INT | CY_PM_CTW_INT | CY_PM_ONEPPS_INT);
1339:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus &= ((uint8)(~mask));
1340:.\Generated_Source\PSoC5/cyPm.c **** 
1341:.\Generated_Source\PSoC5/cyPm.c ****     /* Exit critical section */
1342:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
1343:.\Generated_Source\PSoC5/cyPm.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 25


1344:.\Generated_Source\PSoC5/cyPm.c ****     return(tmpStatus);
1345:.\Generated_Source\PSoC5/cyPm.c **** }
1346:.\Generated_Source\PSoC5/cyPm.c **** 
1347:.\Generated_Source\PSoC5/cyPm.c **** 
1348:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibSaveSet
1350:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1351:.\Generated_Source\PSoC5/cyPm.c **** *
1352:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1353:.\Generated_Source\PSoC5/cyPm.c **** *  Prepare device for proper Hibernate low power mode entry:
1354:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables I2C backup regulator
1355:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves ILO power down mode state and enable it
1356:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves state of 1 kHz and 100 kHz ILO and disable them
1357:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables sleep regulator and shorts vccd to vpwrsleep
1358:.\Generated_Source\PSoC5/cyPm.c **** *  - Save LVI/HVI configuration and disable them - CyPmHviLviSaveDisable()
1359:.\Generated_Source\PSoC5/cyPm.c **** *  - CyPmHibSlpSaveSet() function is called
1360:.\Generated_Source\PSoC5/cyPm.c **** *
1361:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1362:.\Generated_Source\PSoC5/cyPm.c **** *  None
1363:.\Generated_Source\PSoC5/cyPm.c **** *
1364:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1365:.\Generated_Source\PSoC5/cyPm.c **** *  None
1366:.\Generated_Source\PSoC5/cyPm.c **** *
1367:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1368:.\Generated_Source\PSoC5/cyPm.c **** *  No
1369:.\Generated_Source\PSoC5/cyPm.c **** *
1370:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1371:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSaveSet(void) 
1372:.\Generated_Source\PSoC5/cyPm.c **** {
1373:.\Generated_Source\PSoC5/cyPm.c ****     /* I2C backup reg must be off when the sleep regulator is unavailable */
1374:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
1375:.\Generated_Source\PSoC5/cyPm.c ****     {
1376:.\Generated_Source\PSoC5/cyPm.c ****         /***********************************************************************
1377:.\Generated_Source\PSoC5/cyPm.c ****         * If the I2C backup regulator is enabled, all the fixed-function registers
1378:.\Generated_Source\PSoC5/cyPm.c ****         * store their values while the device is in the low power mode, otherwise their
1379:.\Generated_Source\PSoC5/cyPm.c ****         * configuration is lost. The I2C API makes a decision to restore or not
1380:.\Generated_Source\PSoC5/cyPm.c ****         * to restore I2C registers based on this. If this regulator will be
1381:.\Generated_Source\PSoC5/cyPm.c ****         * disabled and then enabled, I2C API will suppose that the I2C block
1382:.\Generated_Source\PSoC5/cyPm.c ****         * registers preserved their values, while this is not true. So, the
1383:.\Generated_Source\PSoC5/cyPm.c ****         * backup regulator is disabled. The I2C sleep APIs is responsible for
1384:.\Generated_Source\PSoC5/cyPm.c ****         * restoration.
1385:.\Generated_Source\PSoC5/cyPm.c ****         ***********************************************************************/
1386:.\Generated_Source\PSoC5/cyPm.c **** 
1387:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable I2C backup register */
1388:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_CR1_REG &= ((uint8)(~CY_PM_PWRSYS_CR1_I2CREG_BACKUP));
1389:.\Generated_Source\PSoC5/cyPm.c ****     }
1390:.\Generated_Source\PSoC5/cyPm.c **** 
1391:.\Generated_Source\PSoC5/cyPm.c **** 
1392:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current ILO power mode and ensure low power mode */
1393:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
1394:.\Generated_Source\PSoC5/cyPm.c **** 
1395:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current 1kHz ILO enable state. Disabled automatically. */
1396:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
1397:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
1398:.\Generated_Source\PSoC5/cyPm.c **** 
1399:.\Generated_Source\PSoC5/cyPm.c ****     /* Save current 100kHz ILO enable state. Disabled automatically. */
1400:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 26


1401:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
1402:.\Generated_Source\PSoC5/cyPm.c **** 
1403:.\Generated_Source\PSoC5/cyPm.c **** 
1404:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable the sleep regulator and shorts vccd to vpwrsleep */
1405:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
1406:.\Generated_Source\PSoC5/cyPm.c ****     {
1407:.\Generated_Source\PSoC5/cyPm.c ****         /* Save current bypass state */
1408:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_DISABLED;
1409:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG |= CY_PM_PWRSYS_SLP_TR_BYPASS;
1410:.\Generated_Source\PSoC5/cyPm.c ****     }
1411:.\Generated_Source\PSoC5/cyPm.c ****     else
1412:.\Generated_Source\PSoC5/cyPm.c ****     {
1413:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_ENABLED;
1414:.\Generated_Source\PSoC5/cyPm.c ****     }
1415:.\Generated_Source\PSoC5/cyPm.c **** 
1416:.\Generated_Source\PSoC5/cyPm.c ****     /* LPCOMPs are always enabled (even when BOTH ext_vccd=1 and ext_vcca=1)*/
1417:.\Generated_Source\PSoC5/cyPm.c **** 
1418:.\Generated_Source\PSoC5/cyPm.c **** 
1419:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1420:.\Generated_Source\PSoC5/cyPm.c ****     * LVI/HVI must be disabled in Hibernate
1421:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1422:.\Generated_Source\PSoC5/cyPm.c **** 
1423:.\Generated_Source\PSoC5/cyPm.c ****     /* Save LVI/HVI configuration and disable them */
1424:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHviLviSaveDisable();
1425:.\Generated_Source\PSoC5/cyPm.c **** 
1426:.\Generated_Source\PSoC5/cyPm.c **** 
1427:.\Generated_Source\PSoC5/cyPm.c ****     /* Make the same preparations for Hibernate and Sleep modes */
1428:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
1429:.\Generated_Source\PSoC5/cyPm.c **** 
1430:.\Generated_Source\PSoC5/cyPm.c **** 
1431:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1432:.\Generated_Source\PSoC5/cyPm.c ****     * Save and set the power mode wakeup trim registers
1433:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1434:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
1435:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
1436:.\Generated_Source\PSoC5/cyPm.c **** 
1437:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = CY_PM_PWRSYS_WAKE_TR0;
1438:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = CY_PM_PWRSYS_WAKE_TR1;
1439:.\Generated_Source\PSoC5/cyPm.c **** }
1440:.\Generated_Source\PSoC5/cyPm.c **** 
1441:.\Generated_Source\PSoC5/cyPm.c **** 
1442:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1443:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibRestore
1444:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1445:.\Generated_Source\PSoC5/cyPm.c **** *
1446:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1447:.\Generated_Source\PSoC5/cyPm.c **** *  Restores the device for the proper Hibernate mode exit:
1448:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores LVI/HVI configuration - calsl CyPmHviLviRestore()
1449:.\Generated_Source\PSoC5/cyPm.c **** *  - CyPmHibSlpSaveRestore() function is called
1450:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores ILO power down mode state and enables it
1451:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the state of 1 kHz and 100 kHz ILO and disables them
1452:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the sleep regulator settings
1453:.\Generated_Source\PSoC5/cyPm.c **** *
1454:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1455:.\Generated_Source\PSoC5/cyPm.c **** *  None
1456:.\Generated_Source\PSoC5/cyPm.c **** *
1457:.\Generated_Source\PSoC5/cyPm.c **** * Return:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 27


1458:.\Generated_Source\PSoC5/cyPm.c **** *  None
1459:.\Generated_Source\PSoC5/cyPm.c **** *
1460:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1461:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibRestore(void) 
1462:.\Generated_Source\PSoC5/cyPm.c **** {
1463:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore LVI/HVI configuration */
1464:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHviLviRestore();
1465:.\Generated_Source\PSoC5/cyPm.c **** 
1466:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore the same configuration for Hibernate and Sleep modes */
1467:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
1468:.\Generated_Source\PSoC5/cyPm.c **** 
1469:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore 1kHz ILO enable state */
1470:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
1471:.\Generated_Source\PSoC5/cyPm.c ****     {
1472:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable 1kHz ILO */
1473:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start1K();
1474:.\Generated_Source\PSoC5/cyPm.c ****     }
1475:.\Generated_Source\PSoC5/cyPm.c **** 
1476:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore 100kHz ILO enable state */
1477:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo100kEnable)
1478:.\Generated_Source\PSoC5/cyPm.c ****     {
1479:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable 100kHz ILO */
1480:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start100K();
1481:.\Generated_Source\PSoC5/cyPm.c ****     }
1482:.\Generated_Source\PSoC5/cyPm.c **** 
1483:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore ILO power mode */
1484:.\Generated_Source\PSoC5/cyPm.c ****     (void) CyILO_SetPowerMode(cyPmBackup.iloPowerMode);
1485:.\Generated_Source\PSoC5/cyPm.c **** 
1486:.\Generated_Source\PSoC5/cyPm.c **** 
1487:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DISABLED == cyPmBackup.slpTrBypass)
1488:.\Generated_Source\PSoC5/cyPm.c ****     {
1489:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable the sleep regulator */
1490:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= ((uint8)(~CY_PM_PWRSYS_SLP_TR_BYPASS));
1491:.\Generated_Source\PSoC5/cyPm.c ****     }
1492:.\Generated_Source\PSoC5/cyPm.c **** 
1493:.\Generated_Source\PSoC5/cyPm.c **** 
1494:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1495:.\Generated_Source\PSoC5/cyPm.c ****     * Restore the power mode wakeup trim registers
1496:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1497:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = cyPmBackup.wakeupTrim0;
1498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = cyPmBackup.wakeupTrim1;
1499:.\Generated_Source\PSoC5/cyPm.c **** }
1500:.\Generated_Source\PSoC5/cyPm.c **** 
1501:.\Generated_Source\PSoC5/cyPm.c **** 
1502:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1503:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmCtwSetInterval
1504:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1505:.\Generated_Source\PSoC5/cyPm.c **** *
1506:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1507:.\Generated_Source\PSoC5/cyPm.c **** *  Performs the CTW configuration:
1508:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables the CTW interrupt
1509:.\Generated_Source\PSoC5/cyPm.c **** *  - Enables 1 kHz ILO
1510:.\Generated_Source\PSoC5/cyPm.c **** *  - Sets a new CTW interval
1511:.\Generated_Source\PSoC5/cyPm.c **** *
1512:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1513:.\Generated_Source\PSoC5/cyPm.c **** *  ctwInterval: the CTW interval to be set.
1514:.\Generated_Source\PSoC5/cyPm.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 28


1515:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1516:.\Generated_Source\PSoC5/cyPm.c **** *  None
1517:.\Generated_Source\PSoC5/cyPm.c **** *
1518:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1519:.\Generated_Source\PSoC5/cyPm.c **** *  Enables ILO 1 KHz clock and leaves it enabled.
1520:.\Generated_Source\PSoC5/cyPm.c **** *
1521:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1522:.\Generated_Source\PSoC5/cyPm.c **** void CyPmCtwSetInterval(uint8 ctwInterval) 
1523:.\Generated_Source\PSoC5/cyPm.c **** {
1524:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable CTW interrupt enable */
1525:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_IE));
1526:.\Generated_Source\PSoC5/cyPm.c **** 
1527:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 1kHz ILO (required for CTW operation) */
1528:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start1K();
1529:.\Generated_Source\PSoC5/cyPm.c **** 
1530:.\Generated_Source\PSoC5/cyPm.c ****     /* Interval could be set only while CTW is disabled */
1531:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_CTW_EN))
1532:.\Generated_Source\PSoC5/cyPm.c ****     {
1533:.\Generated_Source\PSoC5/cyPm.c ****         /* Set CTW interval if needed */
1534:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
1535:.\Generated_Source\PSoC5/cyPm.c ****         {
1536:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable the CTW, set new CTW interval and enable it again */
1537:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_EN));
1538:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
1539:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1540:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1541:.\Generated_Source\PSoC5/cyPm.c ****     }
1542:.\Generated_Source\PSoC5/cyPm.c ****     else
1543:.\Generated_Source\PSoC5/cyPm.c ****     {
1544:.\Generated_Source\PSoC5/cyPm.c ****         /* Set CTW interval if needed */
1545:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
1546:.\Generated_Source\PSoC5/cyPm.c ****         {
1547:.\Generated_Source\PSoC5/cyPm.c ****             /* Set new CTW interval. Could be changed if CTW is disabled */
1548:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
1549:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1550:.\Generated_Source\PSoC5/cyPm.c **** 
1551:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable CTW */
1552:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1553:.\Generated_Source\PSoC5/cyPm.c ****     }
1554:.\Generated_Source\PSoC5/cyPm.c **** }
1555:.\Generated_Source\PSoC5/cyPm.c **** 
1556:.\Generated_Source\PSoC5/cyPm.c **** 
1557:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1558:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmOppsSet
1559:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1560:.\Generated_Source\PSoC5/cyPm.c **** *
1561:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1562:.\Generated_Source\PSoC5/cyPm.c **** *  Performs 1PPS configuration:
1563:.\Generated_Source\PSoC5/cyPm.c **** *  - Starts 32 KHz XTAL
1564:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables 1PPS interrupts
1565:.\Generated_Source\PSoC5/cyPm.c **** *  - Enables 1PPS
1566:.\Generated_Source\PSoC5/cyPm.c **** *
1567:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1568:.\Generated_Source\PSoC5/cyPm.c **** *  None
1569:.\Generated_Source\PSoC5/cyPm.c **** *
1570:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1571:.\Generated_Source\PSoC5/cyPm.c **** *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 29


1572:.\Generated_Source\PSoC5/cyPm.c **** *
1573:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1574:.\Generated_Source\PSoC5/cyPm.c **** void CyPmOppsSet(void) 
1575:.\Generated_Source\PSoC5/cyPm.c **** {
1576:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 32kHz XTAL if needed */
1577:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_SLOWCLK_X32_CR_REG & CY_PM_X32_CR_X32EN))
1578:.\Generated_Source\PSoC5/cyPm.c ****     {
1579:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable 32kHz XTAL */
1580:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_32KHZ_Start();
1581:.\Generated_Source\PSoC5/cyPm.c ****     }
1582:.\Generated_Source\PSoC5/cyPm.c **** 
1583:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable 1PPS interrupt enable */
1584:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_1PPS_IE));
1585:.\Generated_Source\PSoC5/cyPm.c **** 
1586:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 1PPS operation */
1587:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG |= CY_PM_1PPS_EN;
1588:.\Generated_Source\PSoC5/cyPm.c **** }
1589:.\Generated_Source\PSoC5/cyPm.c **** 
1590:.\Generated_Source\PSoC5/cyPm.c **** 
1591:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1592:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmFtwSetInterval
1593:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1594:.\Generated_Source\PSoC5/cyPm.c **** *
1595:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1596:.\Generated_Source\PSoC5/cyPm.c **** *  Performs the FTW configuration:
1597:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables the FTW interrupt
1598:.\Generated_Source\PSoC5/cyPm.c **** *  - Enables 100 kHz ILO
1599:.\Generated_Source\PSoC5/cyPm.c **** *  - Sets a new FTW interval.
1600:.\Generated_Source\PSoC5/cyPm.c **** *
1601:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1602:.\Generated_Source\PSoC5/cyPm.c **** *  ftwInterval - FTW counter interval.
1603:.\Generated_Source\PSoC5/cyPm.c **** *
1604:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1605:.\Generated_Source\PSoC5/cyPm.c **** *  None
1606:.\Generated_Source\PSoC5/cyPm.c **** *
1607:.\Generated_Source\PSoC5/cyPm.c **** * Side Effects:
1608:.\Generated_Source\PSoC5/cyPm.c **** *  Enables the ILO 100 KHz clock and leaves it enabled.
1609:.\Generated_Source\PSoC5/cyPm.c **** *
1610:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1611:.\Generated_Source\PSoC5/cyPm.c **** void CyPmFtwSetInterval(uint8 ftwInterval) 
1612:.\Generated_Source\PSoC5/cyPm.c **** {
1613:.\Generated_Source\PSoC5/cyPm.c ****     /* Disable FTW interrupt enable */
1614:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_IE));
1615:.\Generated_Source\PSoC5/cyPm.c **** 
1616:.\Generated_Source\PSoC5/cyPm.c ****     /* Enable 100kHz ILO */
1617:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start100K();
1618:.\Generated_Source\PSoC5/cyPm.c **** 
1619:.\Generated_Source\PSoC5/cyPm.c ****     /* Interval could be set only while FTW is disabled */
1620:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_FTW_EN))
1621:.\Generated_Source\PSoC5/cyPm.c ****     {
1622:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable FTW, set new FTW interval if needed and enable it again */
1623:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
1624:.\Generated_Source\PSoC5/cyPm.c ****         {
1625:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable CTW, set new CTW interval and enable it again */
1626:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_EN));
1627:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
1628:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 30


1629:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1630:.\Generated_Source\PSoC5/cyPm.c ****     }
1631:.\Generated_Source\PSoC5/cyPm.c ****     else
1632:.\Generated_Source\PSoC5/cyPm.c ****     {
1633:.\Generated_Source\PSoC5/cyPm.c ****         /* Set new FTW counter interval if needed. FTW is disabled. */
1634:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
1635:.\Generated_Source\PSoC5/cyPm.c ****         {
1636:.\Generated_Source\PSoC5/cyPm.c ****             /* Set new CTW interval. Could be changed if CTW is disabled */
1637:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
1638:.\Generated_Source\PSoC5/cyPm.c ****         }   /* Required interval is already set */
1639:.\Generated_Source\PSoC5/cyPm.c **** 
1640:.\Generated_Source\PSoC5/cyPm.c ****         /* Enable FTW */
1641:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1642:.\Generated_Source\PSoC5/cyPm.c ****     }
1643:.\Generated_Source\PSoC5/cyPm.c **** }
1644:.\Generated_Source\PSoC5/cyPm.c **** 
1645:.\Generated_Source\PSoC5/cyPm.c **** 
1646:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1647:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibSlpSaveSet
1648:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1649:.\Generated_Source\PSoC5/cyPm.c **** *
1650:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1651:.\Generated_Source\PSoC5/cyPm.c **** *  This API is used for preparing the device for the Sleep and Hibernate low
1652:.\Generated_Source\PSoC5/cyPm.c **** *  power modes entry:
1653:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves the COMP, VIDAC, DSM, and SAR routing connections (PSoC 5)
1654:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves the SC/CT routing connections (PSoC 3/5/5LP)
1655:.\Generated_Source\PSoC5/cyPm.c **** *  - Disables the Serial Wire Viewer (SWV) (PSoC 3)
1656:.\Generated_Source\PSoC5/cyPm.c **** *  - Saves the boost reference selection and sets it to internal
1657:.\Generated_Source\PSoC5/cyPm.c **** *
1658:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1659:.\Generated_Source\PSoC5/cyPm.c **** *  None
1660:.\Generated_Source\PSoC5/cyPm.c **** *
1661:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1662:.\Generated_Source\PSoC5/cyPm.c **** *  None
1663:.\Generated_Source\PSoC5/cyPm.c **** *
1664:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1665:.\Generated_Source\PSoC5/cyPm.c **** *  No
1666:.\Generated_Source\PSoC5/cyPm.c **** *
1667:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1668:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpSaveSet(void) 
1669:.\Generated_Source\PSoC5/cyPm.c **** {
  26              		.loc 1 1669 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 2DE9F00F 		push	{r4, r5, r6, r7, r8, r9, r10, fp}
  32              		.cfi_def_cfa_offset 32
  33              		.cfi_offset 4, -32
  34              		.cfi_offset 5, -28
  35              		.cfi_offset 6, -24
  36              		.cfi_offset 7, -20
  37              		.cfi_offset 8, -16
  38              		.cfi_offset 9, -12
  39              		.cfi_offset 10, -8
  40              		.cfi_offset 11, -4
  41 0004 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 31


  42              		.cfi_def_cfa_offset 40
1670:.\Generated_Source\PSoC5/cyPm.c ****     /* Save SC/CT routing registers */
1671:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[0u]   = CY_GET_REG8(CYREG_SC0_SW0 );
  43              		.loc 1 1671 0
  44 0006 6F49     		ldr	r1, .L4
  45 0008 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  46 000a 6F4B     		ldr	r3, .L4+4
  47 000c 5A72     		strb	r2, [r3, #9]
1672:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[1u]   = CY_GET_REG8(CYREG_SC0_SW2 );
  48              		.loc 1 1672 0
  49 000e DFF8D8B1 		ldr	fp, .L4+36
  50 0012 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
  51 0016 9A72     		strb	r2, [r3, #10]
1673:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[2u]   = CY_GET_REG8(CYREG_SC0_SW3 );
  52              		.loc 1 1673 0
  53 0018 0331     		adds	r1, r1, #3
  54 001a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  55 001c DA72     		strb	r2, [r3, #11]
1674:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
  56              		.loc 1 1674 0
  57 001e 0BF1020B 		add	fp, fp, #2
  58 0022 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
  59 0026 1A73     		strb	r2, [r3, #12]
1675:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
  60              		.loc 1 1675 0
  61 0028 0331     		adds	r1, r1, #3
  62 002a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  63 002c 5A73     		strb	r2, [r3, #13]
1676:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
  64              		.loc 1 1676 0
  65 002e 0BF1040B 		add	fp, fp, #4
  66 0032 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
  67 0036 9A73     		strb	r2, [r3, #14]
1677:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[6u]   = CY_GET_REG8(CYREG_SC0_SW10);
  68              		.loc 1 1677 0
  69 0038 0431     		adds	r1, r1, #4
  70 003a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  71 003c DA73     		strb	r2, [r3, #15]
1678:.\Generated_Source\PSoC5/cyPm.c **** 
1679:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[7u]   = CY_GET_REG8(CYREG_SC1_SW0 );
  72              		.loc 1 1679 0
  73 003e 0BF1080B 		add	fp, fp, #8
  74 0042 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
  75 0046 1A74     		strb	r2, [r3, #16]
1680:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[8u]   = CY_GET_REG8(CYREG_SC1_SW2 );
  76              		.loc 1 1680 0
  77 0048 0831     		adds	r1, r1, #8
  78 004a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  79 004c 5A74     		strb	r2, [r3, #17]
1681:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[9u]   = CY_GET_REG8(CYREG_SC1_SW3 );
  80              		.loc 1 1681 0
  81 004e 0BF1030B 		add	fp, fp, #3
  82 0052 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
  83 0056 9A74     		strb	r2, [r3, #18]
1682:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[10u]  = CY_GET_REG8(CYREG_SC1_SW4 );
  84              		.loc 1 1682 0
  85 0058 0231     		adds	r1, r1, #2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 32


  86 005a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  87 005c DA74     		strb	r2, [r3, #19]
1683:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[11u]  = CY_GET_REG8(CYREG_SC1_SW6 );
  88              		.loc 1 1683 0
  89 005e 0BF1030B 		add	fp, fp, #3
  90 0062 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
  91 0066 1A75     		strb	r2, [r3, #20]
1684:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[12u]  = CY_GET_REG8(CYREG_SC1_SW8 );
  92              		.loc 1 1684 0
  93 0068 0431     		adds	r1, r1, #4
  94 006a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  95 006c 5A75     		strb	r2, [r3, #21]
1685:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[13u]  = CY_GET_REG8(CYREG_SC1_SW10);
  96              		.loc 1 1685 0
  97 006e 0BF1040B 		add	fp, fp, #4
  98 0072 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
  99 0076 9A75     		strb	r2, [r3, #22]
1686:.\Generated_Source\PSoC5/cyPm.c **** 
1687:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[14u]  = CY_GET_REG8(CYREG_SC2_SW0 );
 100              		.loc 1 1687 0
 101 0078 0831     		adds	r1, r1, #8
 102 007a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 103 007c DA75     		strb	r2, [r3, #23]
1688:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[15u]  = CY_GET_REG8(CYREG_SC2_SW2 );
 104              		.loc 1 1688 0
 105 007e 0BF1080B 		add	fp, fp, #8
 106 0082 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
 107 0086 1A76     		strb	r2, [r3, #24]
1689:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[16u]  = CY_GET_REG8(CYREG_SC2_SW3 );
 108              		.loc 1 1689 0
 109 0088 0331     		adds	r1, r1, #3
 110 008a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 111 008c 5A76     		strb	r2, [r3, #25]
1690:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[17u]  = CY_GET_REG8(CYREG_SC2_SW4 );
 112              		.loc 1 1690 0
 113 008e DFF85CA1 		ldr	r10, .L4+40
 114 0092 9AF80020 		ldrb	r2, [r10]	@ zero_extendqisi2
 115 0096 9A76     		strb	r2, [r3, #26]
1691:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[18u]  = CY_GET_REG8(CYREG_SC2_SW6 );
 116              		.loc 1 1691 0
 117 0098 DFF85491 		ldr	r9, .L4+44
 118 009c 99F80020 		ldrb	r2, [r9]	@ zero_extendqisi2
 119 00a0 DA76     		strb	r2, [r3, #27]
1692:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[19u]  = CY_GET_REG8(CYREG_SC2_SW8 );
 120              		.loc 1 1692 0
 121 00a2 DFF85081 		ldr	r8, .L4+48
 122 00a6 98F80020 		ldrb	r2, [r8]	@ zero_extendqisi2
 123 00aa 1A77     		strb	r2, [r3, #28]
1693:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[20u]  = CY_GET_REG8(CYREG_SC2_SW10);
 124              		.loc 1 1693 0
 125 00ac DFF848C1 		ldr	ip, .L4+52
 126 00b0 9CF80020 		ldrb	r2, [ip]	@ zero_extendqisi2
 127 00b4 5A77     		strb	r2, [r3, #29]
1694:.\Generated_Source\PSoC5/cyPm.c **** 
1695:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[21u]  = CY_GET_REG8(CYREG_SC3_SW0 );
 128              		.loc 1 1695 0
 129 00b6 454F     		ldr	r7, .L4+8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 33


 130 00b8 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 131 00ba 9A77     		strb	r2, [r3, #30]
1696:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[22u]  = CY_GET_REG8(CYREG_SC3_SW2 );
 132              		.loc 1 1696 0
 133 00bc 444E     		ldr	r6, .L4+12
 134 00be 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 135 00c0 DA77     		strb	r2, [r3, #31]
1697:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[23u]  = CY_GET_REG8(CYREG_SC3_SW3 );
 136              		.loc 1 1697 0
 137 00c2 444D     		ldr	r5, .L4+16
 138 00c4 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 139 00c6 83F82020 		strb	r2, [r3, #32]
1698:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[24u]  = CY_GET_REG8(CYREG_SC3_SW4 );
 140              		.loc 1 1698 0
 141 00ca 434C     		ldr	r4, .L4+20
 142 00cc 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 143 00ce 83F82120 		strb	r2, [r3, #33]
1699:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[25u]  = CY_GET_REG8(CYREG_SC3_SW6 );
 144              		.loc 1 1699 0
 145 00d2 4248     		ldr	r0, .L4+24
 146 00d4 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 147 00d6 83F82220 		strb	r2, [r3, #34]
1700:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[26u]  = CY_GET_REG8(CYREG_SC3_SW8 );
 148              		.loc 1 1700 0
 149 00da 1531     		adds	r1, r1, #21
 150 00dc 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 151 00de 83F82320 		strb	r2, [r3, #35]
1701:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.scctData[27u]  = CY_GET_REG8(CYREG_SC3_SW10);
 152              		.loc 1 1701 0
 153 00e2 3F4A     		ldr	r2, .L4+28
 154 00e4 92F800B0 		ldrb	fp, [r2]	@ zero_extendqisi2
 155 00e8 83F824B0 		strb	fp, [r3, #36]
1702:.\Generated_Source\PSoC5/cyPm.c **** 
1703:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW0 , 0u);
 156              		.loc 1 1703 0
 157 00ec 0023     		movs	r3, #0
 158 00ee DFF8D4B0 		ldr	fp, .L4
 159 00f2 8BF80030 		strb	r3, [fp]
1704:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW2 , 0u);
 160              		.loc 1 1704 0
 161 00f6 0BF1020B 		add	fp, fp, #2
 162 00fa 8BF80030 		strb	r3, [fp]
1705:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW3 , 0u);
 163              		.loc 1 1705 0
 164 00fe 0BF1010B 		add	fp, fp, #1
 165 0102 8BF80030 		strb	r3, [fp]
1706:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW4 , 0u);
 166              		.loc 1 1706 0
 167 0106 0BF1010B 		add	fp, fp, #1
 168 010a 8BF80030 		strb	r3, [fp]
1707:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW6 , 0u);
 169              		.loc 1 1707 0
 170 010e 0BF1020B 		add	fp, fp, #2
 171 0112 8BF80030 		strb	r3, [fp]
1708:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW8 , 0u);
 172              		.loc 1 1708 0
 173 0116 0BF1020B 		add	fp, fp, #2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 34


 174 011a 8BF80030 		strb	r3, [fp]
1709:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW10, 0u);
 175              		.loc 1 1709 0
 176 011e 0BF1020B 		add	fp, fp, #2
 177 0122 8BF80030 		strb	r3, [fp]
1710:.\Generated_Source\PSoC5/cyPm.c **** 
1711:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW0 , 0u);
 178              		.loc 1 1711 0
 179 0126 0BF1060B 		add	fp, fp, #6
 180 012a 8BF80030 		strb	r3, [fp]
1712:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW2 , 0u);
 181              		.loc 1 1712 0
 182 012e 0BF1020B 		add	fp, fp, #2
 183 0132 8BF80030 		strb	r3, [fp]
1713:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW3 , 0u);
 184              		.loc 1 1713 0
 185 0136 0BF1010B 		add	fp, fp, #1
 186 013a 8BF80030 		strb	r3, [fp]
1714:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW4 , 0u);
 187              		.loc 1 1714 0
 188 013e 0BF1010B 		add	fp, fp, #1
 189 0142 8BF80030 		strb	r3, [fp]
1715:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW6 , 0u);
 190              		.loc 1 1715 0
 191 0146 0BF1020B 		add	fp, fp, #2
 192 014a 8BF80030 		strb	r3, [fp]
1716:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW8 , 0u);
 193              		.loc 1 1716 0
 194 014e 0BF1020B 		add	fp, fp, #2
 195 0152 8BF80030 		strb	r3, [fp]
1717:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW10, 0u);
 196              		.loc 1 1717 0
 197 0156 0BF1020B 		add	fp, fp, #2
 198 015a 8BF80030 		strb	r3, [fp]
1718:.\Generated_Source\PSoC5/cyPm.c **** 
1719:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW0 , 0u);
 199              		.loc 1 1719 0
 200 015e 0BF1060B 		add	fp, fp, #6
 201 0162 8BF80030 		strb	r3, [fp]
1720:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW2 , 0u);
 202              		.loc 1 1720 0
 203 0166 0BF1020B 		add	fp, fp, #2
 204 016a 8BF80030 		strb	r3, [fp]
1721:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW3 , 0u);
 205              		.loc 1 1721 0
 206 016e 0BF1010B 		add	fp, fp, #1
 207 0172 8BF80030 		strb	r3, [fp]
1722:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW4 , 0u);
 208              		.loc 1 1722 0
 209 0176 8AF80030 		strb	r3, [r10]
1723:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW6 , 0u);
 210              		.loc 1 1723 0
 211 017a 89F80030 		strb	r3, [r9]
1724:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW8 , 0u);
 212              		.loc 1 1724 0
 213 017e 88F80030 		strb	r3, [r8]
1725:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW10, 0u);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 35


 214              		.loc 1 1725 0
 215 0182 8CF80030 		strb	r3, [ip]
1726:.\Generated_Source\PSoC5/cyPm.c **** 
1727:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW0 , 0u);
 216              		.loc 1 1727 0
 217 0186 3B70     		strb	r3, [r7]
1728:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW2 , 0u);
 218              		.loc 1 1728 0
 219 0188 3370     		strb	r3, [r6]
1729:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW3 , 0u);
 220              		.loc 1 1729 0
 221 018a 2B70     		strb	r3, [r5]
1730:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW4 , 0u);
 222              		.loc 1 1730 0
 223 018c 2370     		strb	r3, [r4]
1731:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW6 , 0u);
 224              		.loc 1 1731 0
 225 018e 0370     		strb	r3, [r0]
1732:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW8 , 0u);
 226              		.loc 1 1732 0
 227 0190 0B70     		strb	r3, [r1]
1733:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW10, 0u);
 228              		.loc 1 1733 0
 229 0192 1370     		strb	r3, [r2]
1734:.\Generated_Source\PSoC5/cyPm.c **** 
1735:.\Generated_Source\PSoC5/cyPm.c **** 
1736:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
1737:.\Generated_Source\PSoC5/cyPm.c **** 
1738:.\Generated_Source\PSoC5/cyPm.c ****         /* Serial Wire Viewer (SWV) workaround */
1739:.\Generated_Source\PSoC5/cyPm.c **** 
1740:.\Generated_Source\PSoC5/cyPm.c ****         /* Disable SWV before entering low power mode */
1741:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (CY_PM_MLOGIC_DBG_REG & CY_PM_MLOGIC_DBG_SWV_CLK_EN))
1742:.\Generated_Source\PSoC5/cyPm.c ****         {
1743:.\Generated_Source\PSoC5/cyPm.c ****             /* Save SWV clock enabled state */
1744:.\Generated_Source\PSoC5/cyPm.c ****             cyPmBackup.swvClkEnabled = CY_PM_ENABLED;
1745:.\Generated_Source\PSoC5/cyPm.c **** 
1746:.\Generated_Source\PSoC5/cyPm.c ****             /* Save current ports drive mode settings */
1747:.\Generated_Source\PSoC5/cyPm.c ****             cyPmBackup.prt1Dm = CY_PM_PRT1_PC3_REG & ((uint8)(~CY_PM_PRT1_PC3_DM_MASK));
1748:.\Generated_Source\PSoC5/cyPm.c **** 
1749:.\Generated_Source\PSoC5/cyPm.c ****             /* Set drive mode to strong output */
1750:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
1751:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_PRT1_PC3_DM_STRONG;
1752:.\Generated_Source\PSoC5/cyPm.c **** 
1753:.\Generated_Source\PSoC5/cyPm.c ****             /* Disable SWV clocks */
1754:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_MLOGIC_DBG_REG &= ((uint8)(~CY_PM_MLOGIC_DBG_SWV_CLK_EN));
1755:.\Generated_Source\PSoC5/cyPm.c ****         }
1756:.\Generated_Source\PSoC5/cyPm.c ****         else
1757:.\Generated_Source\PSoC5/cyPm.c ****         {
1758:.\Generated_Source\PSoC5/cyPm.c ****             /* Save SWV clock disabled state */
1759:.\Generated_Source\PSoC5/cyPm.c ****             cyPmBackup.swvClkEnabled = CY_PM_DISABLED;
1760:.\Generated_Source\PSoC5/cyPm.c ****         }
1761:.\Generated_Source\PSoC5/cyPm.c **** 
1762:.\Generated_Source\PSoC5/cyPm.c ****     #endif  /* (CY_PSOC3) */
1763:.\Generated_Source\PSoC5/cyPm.c **** 
1764:.\Generated_Source\PSoC5/cyPm.c **** 
1765:.\Generated_Source\PSoC5/cyPm.c ****     /***************************************************************************
1766:.\Generated_Source\PSoC5/cyPm.c ****     * Save boost reference and set it to boost's internal by clearing the bit.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 36


1767:.\Generated_Source\PSoC5/cyPm.c ****     * External (chip bandgap) reference is not available in Sleep and Hibernate.
1768:.\Generated_Source\PSoC5/cyPm.c ****     ***************************************************************************/
1769:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_BOOST_CR2_REG & CY_PM_BOOST_CR2_EREFSEL_EXT))
 230              		.loc 1 1769 0
 231 0194 134B     		ldr	r3, .L4+32
 232 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 233 0198 13F0080F 		tst	r3, #8
 234 019c 09D0     		beq	.L2
1770:.\Generated_Source\PSoC5/cyPm.c ****     {
1771:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.boostRefExt = CY_PM_ENABLED;
 235              		.loc 1 1771 0
 236 019e 0122     		movs	r2, #1
 237 01a0 094B     		ldr	r3, .L4+4
 238 01a2 83F82E20 		strb	r2, [r3, #46]
1772:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_BOOST_CR2_REG &= ((uint8)(~CY_PM_BOOST_CR2_EREFSEL_EXT));
 239              		.loc 1 1772 0
 240 01a6 0F4B     		ldr	r3, .L4+32
 241 01a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 242 01aa 02F0F702 		and	r2, r2, #247
 243 01ae 1A70     		strb	r2, [r3]
 244 01b0 03E0     		b	.L1
 245              	.L2:
1773:.\Generated_Source\PSoC5/cyPm.c ****     }
1774:.\Generated_Source\PSoC5/cyPm.c ****     else
1775:.\Generated_Source\PSoC5/cyPm.c ****     {
1776:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.boostRefExt = CY_PM_DISABLED;
 246              		.loc 1 1776 0
 247 01b2 0022     		movs	r2, #0
 248 01b4 044B     		ldr	r3, .L4+4
 249 01b6 83F82E20 		strb	r2, [r3, #46]
 250              	.L1:
1777:.\Generated_Source\PSoC5/cyPm.c ****     }
1778:.\Generated_Source\PSoC5/cyPm.c **** }
 251              		.loc 1 1778 0
 252 01ba 02B0     		add	sp, sp, #8
 253              		@ sp needed
 254 01bc BDE8F00F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp}
 255 01c0 7047     		bx	lr
 256              	.L5:
 257 01c2 00BF     		.align	2
 258              	.L4:
 259 01c4 005A0040 		.word	1073764864
 260 01c8 00000000 		.word	.LANCHOR0
 261 01cc 305A0040 		.word	1073764912
 262 01d0 325A0040 		.word	1073764914
 263 01d4 335A0040 		.word	1073764915
 264 01d8 345A0040 		.word	1073764916
 265 01dc 365A0040 		.word	1073764918
 266 01e0 3A5A0040 		.word	1073764922
 267 01e4 22430040 		.word	1073759010
 268 01e8 025A0040 		.word	1073764866
 269 01ec 245A0040 		.word	1073764900
 270 01f0 265A0040 		.word	1073764902
 271 01f4 285A0040 		.word	1073764904
 272 01f8 2A5A0040 		.word	1073764906
 273              		.cfi_endproc
 274              	.LFE12:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 37


 275              		.size	CyPmHibSlpSaveSet, .-CyPmHibSlpSaveSet
 276              		.section	.text.CyPmHibSlpRestore,"ax",%progbits
 277              		.align	2
 278              		.thumb
 279              		.thumb_func
 280              		.type	CyPmHibSlpRestore, %function
 281              	CyPmHibSlpRestore:
 282              	.LFB13:
1779:.\Generated_Source\PSoC5/cyPm.c **** 
1780:.\Generated_Source\PSoC5/cyPm.c **** 
1781:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1782:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHibSlpRestore
1783:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1784:.\Generated_Source\PSoC5/cyPm.c **** *
1785:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1786:.\Generated_Source\PSoC5/cyPm.c **** *  This API is used for restoring the device configurations after wakeup from
1787:.\Generated_Source\PSoC5/cyPm.c **** *  the Sleep and Hibernate low power modes:
1788:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the SC/CT routing connections
1789:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the enable state of the Serial Wire Viewer (SWV) (PSoC 3)
1790:.\Generated_Source\PSoC5/cyPm.c **** *  - Restores the  boost reference selection
1791:.\Generated_Source\PSoC5/cyPm.c **** *
1792:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1793:.\Generated_Source\PSoC5/cyPm.c **** *  None
1794:.\Generated_Source\PSoC5/cyPm.c **** *
1795:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1796:.\Generated_Source\PSoC5/cyPm.c **** *  None
1797:.\Generated_Source\PSoC5/cyPm.c **** *
1798:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1799:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHibSlpRestore(void) 
1800:.\Generated_Source\PSoC5/cyPm.c **** {
 283              		.loc 1 1800 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
1801:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore SC/CT routing registers */
1802:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW0 , cyPmBackup.scctData[0u] );
 288              		.loc 1 1802 0
 289 0000 314B     		ldr	r3, .L8
 290 0002 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 291 0004 314A     		ldr	r2, .L8+4
 292 0006 1170     		strb	r1, [r2]
1803:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW2 , cyPmBackup.scctData[1u] );
 293              		.loc 1 1803 0
 294 0008 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 295 000a 0232     		adds	r2, r2, #2
 296 000c 1170     		strb	r1, [r2]
1804:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW3 , cyPmBackup.scctData[2u] );
 297              		.loc 1 1804 0
 298 000e D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 299 0010 0132     		adds	r2, r2, #1
 300 0012 1170     		strb	r1, [r2]
1805:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW4 , cyPmBackup.scctData[3u] );
 301              		.loc 1 1805 0
 302 0014 197B     		ldrb	r1, [r3, #12]	@ zero_extendqisi2
 303 0016 0132     		adds	r2, r2, #1
 304 0018 1170     		strb	r1, [r2]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 38


1806:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW6 , cyPmBackup.scctData[4u] );
 305              		.loc 1 1806 0
 306 001a 597B     		ldrb	r1, [r3, #13]	@ zero_extendqisi2
 307 001c 0232     		adds	r2, r2, #2
 308 001e 1170     		strb	r1, [r2]
1807:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW8 , cyPmBackup.scctData[5u] );
 309              		.loc 1 1807 0
 310 0020 997B     		ldrb	r1, [r3, #14]	@ zero_extendqisi2
 311 0022 0232     		adds	r2, r2, #2
 312 0024 1170     		strb	r1, [r2]
1808:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC0_SW10, cyPmBackup.scctData[6u] );
 313              		.loc 1 1808 0
 314 0026 D97B     		ldrb	r1, [r3, #15]	@ zero_extendqisi2
 315 0028 0232     		adds	r2, r2, #2
 316 002a 1170     		strb	r1, [r2]
1809:.\Generated_Source\PSoC5/cyPm.c **** 
1810:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW0 , cyPmBackup.scctData[7u] );
 317              		.loc 1 1810 0
 318 002c 197C     		ldrb	r1, [r3, #16]	@ zero_extendqisi2
 319 002e 0632     		adds	r2, r2, #6
 320 0030 1170     		strb	r1, [r2]
1811:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW2 , cyPmBackup.scctData[8u] );
 321              		.loc 1 1811 0
 322 0032 597C     		ldrb	r1, [r3, #17]	@ zero_extendqisi2
 323 0034 0232     		adds	r2, r2, #2
 324 0036 1170     		strb	r1, [r2]
1812:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW3 , cyPmBackup.scctData[9u] );
 325              		.loc 1 1812 0
 326 0038 997C     		ldrb	r1, [r3, #18]	@ zero_extendqisi2
 327 003a 0132     		adds	r2, r2, #1
 328 003c 1170     		strb	r1, [r2]
1813:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW4 , cyPmBackup.scctData[10u]);
 329              		.loc 1 1813 0
 330 003e D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
 331 0040 0132     		adds	r2, r2, #1
 332 0042 1170     		strb	r1, [r2]
1814:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW6 , cyPmBackup.scctData[11u]);
 333              		.loc 1 1814 0
 334 0044 197D     		ldrb	r1, [r3, #20]	@ zero_extendqisi2
 335 0046 0232     		adds	r2, r2, #2
 336 0048 1170     		strb	r1, [r2]
1815:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW8 , cyPmBackup.scctData[12u]);
 337              		.loc 1 1815 0
 338 004a 597D     		ldrb	r1, [r3, #21]	@ zero_extendqisi2
 339 004c 0232     		adds	r2, r2, #2
 340 004e 1170     		strb	r1, [r2]
1816:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC1_SW10, cyPmBackup.scctData[13u]);
 341              		.loc 1 1816 0
 342 0050 997D     		ldrb	r1, [r3, #22]	@ zero_extendqisi2
 343 0052 0232     		adds	r2, r2, #2
 344 0054 1170     		strb	r1, [r2]
1817:.\Generated_Source\PSoC5/cyPm.c **** 
1818:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW0 , cyPmBackup.scctData[14u]);
 345              		.loc 1 1818 0
 346 0056 D97D     		ldrb	r1, [r3, #23]	@ zero_extendqisi2
 347 0058 0632     		adds	r2, r2, #6
 348 005a 1170     		strb	r1, [r2]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 39


1819:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW2 , cyPmBackup.scctData[15u]);
 349              		.loc 1 1819 0
 350 005c 197E     		ldrb	r1, [r3, #24]	@ zero_extendqisi2
 351 005e 0232     		adds	r2, r2, #2
 352 0060 1170     		strb	r1, [r2]
1820:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW3 , cyPmBackup.scctData[16u]);
 353              		.loc 1 1820 0
 354 0062 597E     		ldrb	r1, [r3, #25]	@ zero_extendqisi2
 355 0064 0132     		adds	r2, r2, #1
 356 0066 1170     		strb	r1, [r2]
1821:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW4 , cyPmBackup.scctData[17u]);
 357              		.loc 1 1821 0
 358 0068 997E     		ldrb	r1, [r3, #26]	@ zero_extendqisi2
 359 006a 0132     		adds	r2, r2, #1
 360 006c 1170     		strb	r1, [r2]
1822:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW6 , cyPmBackup.scctData[18u]);
 361              		.loc 1 1822 0
 362 006e D97E     		ldrb	r1, [r3, #27]	@ zero_extendqisi2
 363 0070 0232     		adds	r2, r2, #2
 364 0072 1170     		strb	r1, [r2]
1823:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW8 , cyPmBackup.scctData[19u]);
 365              		.loc 1 1823 0
 366 0074 197F     		ldrb	r1, [r3, #28]	@ zero_extendqisi2
 367 0076 0232     		adds	r2, r2, #2
 368 0078 1170     		strb	r1, [r2]
1824:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC2_SW10, cyPmBackup.scctData[20u]);
 369              		.loc 1 1824 0
 370 007a 597F     		ldrb	r1, [r3, #29]	@ zero_extendqisi2
 371 007c 0232     		adds	r2, r2, #2
 372 007e 1170     		strb	r1, [r2]
1825:.\Generated_Source\PSoC5/cyPm.c **** 
1826:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW0 , cyPmBackup.scctData[21u]);
 373              		.loc 1 1826 0
 374 0080 997F     		ldrb	r1, [r3, #30]	@ zero_extendqisi2
 375 0082 0632     		adds	r2, r2, #6
 376 0084 1170     		strb	r1, [r2]
1827:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW2 , cyPmBackup.scctData[22u]);
 377              		.loc 1 1827 0
 378 0086 D97F     		ldrb	r1, [r3, #31]	@ zero_extendqisi2
 379 0088 0232     		adds	r2, r2, #2
 380 008a 1170     		strb	r1, [r2]
1828:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW3 , cyPmBackup.scctData[23u]);
 381              		.loc 1 1828 0
 382 008c 93F82010 		ldrb	r1, [r3, #32]	@ zero_extendqisi2
 383 0090 0132     		adds	r2, r2, #1
 384 0092 1170     		strb	r1, [r2]
1829:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW4 , cyPmBackup.scctData[24u]);
 385              		.loc 1 1829 0
 386 0094 93F82110 		ldrb	r1, [r3, #33]	@ zero_extendqisi2
 387 0098 0132     		adds	r2, r2, #1
 388 009a 1170     		strb	r1, [r2]
1830:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW6 , cyPmBackup.scctData[25u]);
 389              		.loc 1 1830 0
 390 009c 93F82210 		ldrb	r1, [r3, #34]	@ zero_extendqisi2
 391 00a0 0232     		adds	r2, r2, #2
 392 00a2 1170     		strb	r1, [r2]
1831:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW8 , cyPmBackup.scctData[26u]);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 40


 393              		.loc 1 1831 0
 394 00a4 93F82310 		ldrb	r1, [r3, #35]	@ zero_extendqisi2
 395 00a8 0232     		adds	r2, r2, #2
 396 00aa 1170     		strb	r1, [r2]
1832:.\Generated_Source\PSoC5/cyPm.c ****     CY_SET_REG8(CYREG_SC3_SW10, cyPmBackup.scctData[27u]);
 397              		.loc 1 1832 0
 398 00ac 93F82410 		ldrb	r1, [r3, #36]	@ zero_extendqisi2
 399 00b0 0232     		adds	r2, r2, #2
 400 00b2 1170     		strb	r1, [r2]
1833:.\Generated_Source\PSoC5/cyPm.c **** 
1834:.\Generated_Source\PSoC5/cyPm.c **** 
1835:.\Generated_Source\PSoC5/cyPm.c ****     #if(CY_PSOC3)
1836:.\Generated_Source\PSoC5/cyPm.c **** 
1837:.\Generated_Source\PSoC5/cyPm.c ****         /* Serial Wire Viewer (SWV) workaround */
1838:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_ENABLED == cyPmBackup.swvClkEnabled)
1839:.\Generated_Source\PSoC5/cyPm.c ****         {
1840:.\Generated_Source\PSoC5/cyPm.c ****             /* Restore ports drive mode */
1841:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
1842:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.prt1Dm;
1843:.\Generated_Source\PSoC5/cyPm.c **** 
1844:.\Generated_Source\PSoC5/cyPm.c ****             /* Enable SWV clocks */
1845:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_MLOGIC_DBG_REG |= CY_PM_MLOGIC_DBG_SWV_CLK_EN;
1846:.\Generated_Source\PSoC5/cyPm.c ****         }
1847:.\Generated_Source\PSoC5/cyPm.c **** 
1848:.\Generated_Source\PSoC5/cyPm.c ****     #endif /* (CY_PSOC3) */
1849:.\Generated_Source\PSoC5/cyPm.c **** 
1850:.\Generated_Source\PSoC5/cyPm.c **** 
1851:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore boost reference */
1852:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.boostRefExt)
 401              		.loc 1 1852 0
 402 00b4 93F82E30 		ldrb	r3, [r3, #46]	@ zero_extendqisi2
 403 00b8 012B     		cmp	r3, #1
 404 00ba 04D1     		bne	.L6
1853:.\Generated_Source\PSoC5/cyPm.c ****     {
1854:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_BOOST_CR2_REG |= CY_PM_BOOST_CR2_EREFSEL_EXT;
 405              		.loc 1 1854 0
 406 00bc 044B     		ldr	r3, .L8+8
 407 00be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 408 00c0 42F00802 		orr	r2, r2, #8
 409 00c4 1A70     		strb	r2, [r3]
 410              	.L6:
 411 00c6 7047     		bx	lr
 412              	.L9:
 413              		.align	2
 414              	.L8:
 415 00c8 00000000 		.word	.LANCHOR0
 416 00cc 005A0040 		.word	1073764864
 417 00d0 22430040 		.word	1073759010
 418              		.cfi_endproc
 419              	.LFE13:
 420              		.size	CyPmHibSlpRestore, .-CyPmHibSlpRestore
 421              		.section	.text.CyPmHviLviSaveDisable,"ax",%progbits
 422              		.align	2
 423              		.thumb
 424              		.thumb_func
 425              		.type	CyPmHviLviSaveDisable, %function
 426              	CyPmHviLviSaveDisable:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 41


 427              	.LFB14:
1855:.\Generated_Source\PSoC5/cyPm.c ****     }
1856:.\Generated_Source\PSoC5/cyPm.c **** }
1857:.\Generated_Source\PSoC5/cyPm.c **** 
1858:.\Generated_Source\PSoC5/cyPm.c **** 
1859:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1860:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHviLviSaveDisable
1861:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1862:.\Generated_Source\PSoC5/cyPm.c **** *
1863:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1864:.\Generated_Source\PSoC5/cyPm.c **** *  Saves analog and digital LVI and HVI configuration and disables them.
1865:.\Generated_Source\PSoC5/cyPm.c **** *
1866:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1867:.\Generated_Source\PSoC5/cyPm.c **** *  None
1868:.\Generated_Source\PSoC5/cyPm.c **** *
1869:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1870:.\Generated_Source\PSoC5/cyPm.c **** *  None
1871:.\Generated_Source\PSoC5/cyPm.c **** *
1872:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1873:.\Generated_Source\PSoC5/cyPm.c **** *  No
1874:.\Generated_Source\PSoC5/cyPm.c **** *
1875:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1876:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviSaveDisable(void) 
1877:.\Generated_Source\PSoC5/cyPm.c **** {
 428              		.loc 1 1877 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 08B5     		push	{r3, lr}
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 3, -8
 435              		.cfi_offset 14, -4
1878:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVID_EN))
 436              		.loc 1 1878 0
 437 0002 234B     		ldr	r3, .L17
 438 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 439 0006 13F0010F 		tst	r3, #1
 440 000a 12D0     		beq	.L11
1879:.\Generated_Source\PSoC5/cyPm.c ****     {
1880:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidEn = CY_PM_ENABLED;
 441              		.loc 1 1880 0
 442 000c 214B     		ldr	r3, .L17+4
 443 000e 0122     		movs	r2, #1
 444 0010 83F82520 		strb	r2, [r3, #37]
1881:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidTrip = CY_VD_LVI_TRIP_REG & CY_VD_LVI_TRIP_LVID_MASK;
 445              		.loc 1 1881 0
 446 0014 204A     		ldr	r2, .L17+8
 447 0016 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 448 0018 02F00F02 		and	r2, r2, #15
 449 001c 83F82620 		strb	r2, [r3, #38]
1882:.\Generated_Source\PSoC5/cyPm.c **** 
1883:.\Generated_Source\PSoC5/cyPm.c ****         /* Save state of reset device at specified Vddd threshold */
1884:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESD_EN)) ? \
 450              		.loc 1 1884 0
 451 0020 1E4A     		ldr	r2, .L17+12
 452 0022 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1885:.\Generated_Source\PSoC5/cyPm.c ****                              CY_PM_DISABLED : CY_PM_ENABLED;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 42


 453              		.loc 1 1885 0
 454 0024 C2F38012 		ubfx	r2, r2, #6, #1
1884:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESD_EN)) ? \
 455              		.loc 1 1884 0
 456 0028 83F82A20 		strb	r2, [r3, #42]
1886:.\Generated_Source\PSoC5/cyPm.c **** 
1887:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvDigitDisable();
 457              		.loc 1 1887 0
 458 002c FFF7FEFF 		bl	CyVdLvDigitDisable
 459              	.LVL0:
 460 0030 03E0     		b	.L12
 461              	.L11:
1888:.\Generated_Source\PSoC5/cyPm.c ****     }
1889:.\Generated_Source\PSoC5/cyPm.c ****     else
1890:.\Generated_Source\PSoC5/cyPm.c ****     {
1891:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lvidEn = CY_PM_DISABLED;
 462              		.loc 1 1891 0
 463 0032 0022     		movs	r2, #0
 464 0034 174B     		ldr	r3, .L17+4
 465 0036 83F82520 		strb	r2, [r3, #37]
 466              	.L12:
1892:.\Generated_Source\PSoC5/cyPm.c ****     }
1893:.\Generated_Source\PSoC5/cyPm.c **** 
1894:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_LVIA_EN))
 467              		.loc 1 1894 0
 468 003a 154B     		ldr	r3, .L17
 469 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 470 003e 13F0020F 		tst	r3, #2
 471 0042 10D0     		beq	.L13
1895:.\Generated_Source\PSoC5/cyPm.c ****     {
1896:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaEn = CY_PM_ENABLED;
 472              		.loc 1 1896 0
 473 0044 134B     		ldr	r3, .L17+4
 474 0046 0122     		movs	r2, #1
 475 0048 83F82720 		strb	r2, [r3, #39]
1897:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaTrip = CY_VD_LVI_TRIP_REG >> 4u;
 476              		.loc 1 1897 0
 477 004c 124A     		ldr	r2, .L17+8
 478 004e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 479 0050 1209     		lsrs	r2, r2, #4
 480 0052 83F82820 		strb	r2, [r3, #40]
1898:.\Generated_Source\PSoC5/cyPm.c **** 
1899:.\Generated_Source\PSoC5/cyPm.c ****         /* Save state of reset device at specified Vdda threshold */
1900:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESA_EN)) ? \
 481              		.loc 1 1900 0
 482 0056 114A     		ldr	r2, .L17+12
 483 0058 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1901:.\Generated_Source\PSoC5/cyPm.c ****                              CY_PM_DISABLED : CY_PM_ENABLED;
 484              		.loc 1 1901 0
 485 005a D209     		lsrs	r2, r2, #7
1900:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaRst = (0u == (CY_VD_PRES_CONTROL_REG & CY_VD_PRESA_EN)) ? \
 486              		.loc 1 1900 0
 487 005c 83F82B20 		strb	r2, [r3, #43]
1902:.\Generated_Source\PSoC5/cyPm.c **** 
1903:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvAnalogDisable();
 488              		.loc 1 1903 0
 489 0060 FFF7FEFF 		bl	CyVdLvAnalogDisable
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 43


 490              	.LVL1:
 491 0064 03E0     		b	.L14
 492              	.L13:
1904:.\Generated_Source\PSoC5/cyPm.c ****     }
1905:.\Generated_Source\PSoC5/cyPm.c ****     else
1906:.\Generated_Source\PSoC5/cyPm.c ****     {
1907:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.lviaEn = CY_PM_DISABLED;
 493              		.loc 1 1907 0
 494 0066 0022     		movs	r2, #0
 495 0068 0A4B     		ldr	r3, .L17+4
 496 006a 83F82720 		strb	r2, [r3, #39]
 497              	.L14:
1908:.\Generated_Source\PSoC5/cyPm.c ****     }
1909:.\Generated_Source\PSoC5/cyPm.c **** 
1910:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_VD_LVI_HVI_CONTROL_REG & CY_VD_HVIA_EN))
 498              		.loc 1 1910 0
 499 006e 084B     		ldr	r3, .L17
 500 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501 0072 13F0040F 		tst	r3, #4
 502 0076 06D0     		beq	.L15
1911:.\Generated_Source\PSoC5/cyPm.c ****     {
1912:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.hviaEn = CY_PM_ENABLED;
 503              		.loc 1 1912 0
 504 0078 0122     		movs	r2, #1
 505 007a 064B     		ldr	r3, .L17+4
 506 007c 83F82920 		strb	r2, [r3, #41]
1913:.\Generated_Source\PSoC5/cyPm.c ****         CyVdHvAnalogDisable();
 507              		.loc 1 1913 0
 508 0080 FFF7FEFF 		bl	CyVdHvAnalogDisable
 509              	.LVL2:
 510 0084 08BD     		pop	{r3, pc}
 511              	.L15:
1914:.\Generated_Source\PSoC5/cyPm.c ****     }
1915:.\Generated_Source\PSoC5/cyPm.c ****     else
1916:.\Generated_Source\PSoC5/cyPm.c ****     {
1917:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.hviaEn = CY_PM_DISABLED;
 512              		.loc 1 1917 0
 513 0086 0022     		movs	r2, #0
 514 0088 024B     		ldr	r3, .L17+4
 515 008a 83F82920 		strb	r2, [r3, #41]
 516 008e 08BD     		pop	{r3, pc}
 517              	.L18:
 518              		.align	2
 519              	.L17:
 520 0090 F5460040 		.word	1073759989
 521 0094 00000000 		.word	.LANCHOR0
 522 0098 F4460040 		.word	1073759988
 523 009c F7460040 		.word	1073759991
 524              		.cfi_endproc
 525              	.LFE14:
 526              		.size	CyPmHviLviSaveDisable, .-CyPmHviLviSaveDisable
 527              		.section	.text.CyPmHibSaveSet,"ax",%progbits
 528              		.align	2
 529              		.thumb
 530              		.thumb_func
 531              		.type	CyPmHibSaveSet, %function
 532              	CyPmHibSaveSet:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 44


 533              	.LFB7:
1372:.\Generated_Source\PSoC5/cyPm.c **** {
 534              		.loc 1 1372 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538 0000 08B5     		push	{r3, lr}
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 3, -8
 541              		.cfi_offset 14, -4
1374:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
 542              		.loc 1 1374 0
 543 0002 1C4B     		ldr	r3, .L23
 544 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 545 0006 13F0040F 		tst	r3, #4
 546 000a 04D0     		beq	.L20
1388:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_CR1_REG &= ((uint8)(~CY_PM_PWRSYS_CR1_I2CREG_BACKUP));
 547              		.loc 1 1388 0
 548 000c 194B     		ldr	r3, .L23
 549 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 550 0010 02F0FB02 		and	r2, r2, #251
 551 0014 1A70     		strb	r2, [r3]
 552              	.L20:
1393:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
 553              		.loc 1 1393 0
 554 0016 0120     		movs	r0, #1
 555 0018 FFF7FEFF 		bl	CyILO_SetPowerMode
 556              	.LVL3:
 557 001c 164B     		ldr	r3, .L23+4
 558 001e 1870     		strb	r0, [r3]
1396:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
 559              		.loc 1 1396 0
 560 0020 164A     		ldr	r2, .L23+8
 561 0022 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
1397:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
 562              		.loc 1 1397 0
 563 0024 C1F34001 		ubfx	r1, r1, #1, #1
1396:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
 564              		.loc 1 1396 0
 565 0028 5970     		strb	r1, [r3, #1]
1400:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
 566              		.loc 1 1400 0
 567 002a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
1401:.\Generated_Source\PSoC5/cyPm.c ****                                 CY_PM_DISABLED : CY_PM_ENABLED;
 568              		.loc 1 1401 0
 569 002c C2F38002 		ubfx	r2, r2, #2, #1
1400:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
 570              		.loc 1 1400 0
 571 0030 9A70     		strb	r2, [r3, #2]
1405:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
 572              		.loc 1 1405 0
 573 0032 134B     		ldr	r3, .L23+12
 574 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 575 0036 13F0100F 		tst	r3, #16
 576 003a 08D1     		bne	.L21
1408:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_DISABLED;
 577              		.loc 1 1408 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 45


 578 003c 0022     		movs	r2, #0
 579 003e 0E4B     		ldr	r3, .L23+4
 580 0040 DA70     		strb	r2, [r3, #3]
1409:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG |= CY_PM_PWRSYS_SLP_TR_BYPASS;
 581              		.loc 1 1409 0
 582 0042 0F4B     		ldr	r3, .L23+12
 583 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 584 0046 42F01002 		orr	r2, r2, #16
 585 004a 1A70     		strb	r2, [r3]
 586 004c 02E0     		b	.L22
 587              	.L21:
1413:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.slpTrBypass = CY_PM_ENABLED;
 588              		.loc 1 1413 0
 589 004e 0122     		movs	r2, #1
 590 0050 094B     		ldr	r3, .L23+4
 591 0052 DA70     		strb	r2, [r3, #3]
 592              	.L22:
1424:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHviLviSaveDisable();
 593              		.loc 1 1424 0
 594 0054 FFF7FEFF 		bl	CyPmHviLviSaveDisable
 595              	.LVL4:
1428:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
 596              		.loc 1 1428 0
 597 0058 FFF7FEFF 		bl	CyPmHibSlpSaveSet
 598              	.LVL5:
1434:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim0 = CY_PM_PWRSYS_WAKE_TR0_REG;
 599              		.loc 1 1434 0
 600 005c 094A     		ldr	r2, .L23+16
 601 005e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 602 0060 0549     		ldr	r1, .L23+4
 603 0062 CB71     		strb	r3, [r1, #7]
1435:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupTrim1 = CY_PM_PWRSYS_WAKE_TR1_REG;
 604              		.loc 1 1435 0
 605 0064 084B     		ldr	r3, .L23+20
 606 0066 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 607 0068 0872     		strb	r0, [r1, #8]
1437:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = CY_PM_PWRSYS_WAKE_TR0;
 608              		.loc 1 1437 0
 609 006a FF21     		movs	r1, #255
 610 006c 1170     		strb	r1, [r2]
1438:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = CY_PM_PWRSYS_WAKE_TR1;
 611              		.loc 1 1438 0
 612 006e B022     		movs	r2, #176
 613 0070 1A70     		strb	r2, [r3]
 614 0072 08BD     		pop	{r3, pc}
 615              	.L24:
 616              		.align	2
 617              	.L23:
 618 0074 31430040 		.word	1073759025
 619 0078 00000000 		.word	.LANCHOR0
 620 007c 00430040 		.word	1073758976
 621 0080 83460040 		.word	1073759875
 622 0084 85460040 		.word	1073759877
 623 0088 86460040 		.word	1073759878
 624              		.cfi_endproc
 625              	.LFE7:
 626              		.size	CyPmHibSaveSet, .-CyPmHibSaveSet
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 46


 627              		.section	.text.CyPmHviLviRestore,"ax",%progbits
 628              		.align	2
 629              		.thumb
 630              		.thumb_func
 631              		.type	CyPmHviLviRestore, %function
 632              	CyPmHviLviRestore:
 633              	.LFB15:
1918:.\Generated_Source\PSoC5/cyPm.c ****     }
1919:.\Generated_Source\PSoC5/cyPm.c **** }
1920:.\Generated_Source\PSoC5/cyPm.c **** 
1921:.\Generated_Source\PSoC5/cyPm.c **** 
1922:.\Generated_Source\PSoC5/cyPm.c **** /*******************************************************************************
1923:.\Generated_Source\PSoC5/cyPm.c **** * Function Name: CyPmHviLviRestore
1924:.\Generated_Source\PSoC5/cyPm.c **** ********************************************************************************
1925:.\Generated_Source\PSoC5/cyPm.c **** *
1926:.\Generated_Source\PSoC5/cyPm.c **** * Summary:
1927:.\Generated_Source\PSoC5/cyPm.c **** *  Restores the analog and digital LVI and HVI configuration.
1928:.\Generated_Source\PSoC5/cyPm.c **** *
1929:.\Generated_Source\PSoC5/cyPm.c **** * Parameters:
1930:.\Generated_Source\PSoC5/cyPm.c **** *  None
1931:.\Generated_Source\PSoC5/cyPm.c **** *
1932:.\Generated_Source\PSoC5/cyPm.c **** * Return:
1933:.\Generated_Source\PSoC5/cyPm.c **** *  None
1934:.\Generated_Source\PSoC5/cyPm.c **** *
1935:.\Generated_Source\PSoC5/cyPm.c **** * Reentrant:
1936:.\Generated_Source\PSoC5/cyPm.c **** *  No
1937:.\Generated_Source\PSoC5/cyPm.c **** *
1938:.\Generated_Source\PSoC5/cyPm.c **** *******************************************************************************/
1939:.\Generated_Source\PSoC5/cyPm.c **** static void CyPmHviLviRestore(void) 
1940:.\Generated_Source\PSoC5/cyPm.c **** {
 634              		.loc 1 1940 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638 0000 08B5     		push	{r3, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 3, -8
 641              		.cfi_offset 14, -4
1941:.\Generated_Source\PSoC5/cyPm.c ****     /* Restore LVI/HVI configuration */
1942:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.lvidEn)
 642              		.loc 1 1942 0
 643 0002 104B     		ldr	r3, .L29
 644 0004 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 645 0008 012B     		cmp	r3, #1
 646 000a 06D1     		bne	.L26
1943:.\Generated_Source\PSoC5/cyPm.c ****     {
1944:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvDigitEnable(cyPmBackup.lvidRst, cyPmBackup.lvidTrip);
 647              		.loc 1 1944 0
 648 000c 0D4B     		ldr	r3, .L29
 649 000e 93F82A00 		ldrb	r0, [r3, #42]	@ zero_extendqisi2
 650 0012 93F82610 		ldrb	r1, [r3, #38]	@ zero_extendqisi2
 651 0016 FFF7FEFF 		bl	CyVdLvDigitEnable
 652              	.LVL6:
 653              	.L26:
1945:.\Generated_Source\PSoC5/cyPm.c ****     }
1946:.\Generated_Source\PSoC5/cyPm.c **** 
1947:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.lviaEn)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 47


 654              		.loc 1 1947 0
 655 001a 0A4B     		ldr	r3, .L29
 656 001c 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 657 0020 012B     		cmp	r3, #1
 658 0022 06D1     		bne	.L27
1948:.\Generated_Source\PSoC5/cyPm.c ****     {
1949:.\Generated_Source\PSoC5/cyPm.c ****         CyVdLvAnalogEnable(cyPmBackup.lviaRst, cyPmBackup.lviaTrip);
 659              		.loc 1 1949 0
 660 0024 074B     		ldr	r3, .L29
 661 0026 93F82B00 		ldrb	r0, [r3, #43]	@ zero_extendqisi2
 662 002a 93F82810 		ldrb	r1, [r3, #40]	@ zero_extendqisi2
 663 002e FFF7FEFF 		bl	CyVdLvAnalogEnable
 664              	.LVL7:
 665              	.L27:
1950:.\Generated_Source\PSoC5/cyPm.c ****     }
1951:.\Generated_Source\PSoC5/cyPm.c **** 
1952:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.hviaEn)
 666              		.loc 1 1952 0
 667 0032 044B     		ldr	r3, .L29
 668 0034 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 669 0038 012B     		cmp	r3, #1
 670 003a 01D1     		bne	.L25
1953:.\Generated_Source\PSoC5/cyPm.c ****     {
1954:.\Generated_Source\PSoC5/cyPm.c ****         CyVdHvAnalogEnable();
 671              		.loc 1 1954 0
 672 003c FFF7FEFF 		bl	CyVdHvAnalogEnable
 673              	.LVL8:
 674              	.L25:
 675 0040 08BD     		pop	{r3, pc}
 676              	.L30:
 677 0042 00BF     		.align	2
 678              	.L29:
 679 0044 00000000 		.word	.LANCHOR0
 680              		.cfi_endproc
 681              	.LFE15:
 682              		.size	CyPmHviLviRestore, .-CyPmHviLviRestore
 683              		.section	.text.CyPmHibRestore,"ax",%progbits
 684              		.align	2
 685              		.thumb
 686              		.thumb_func
 687              		.type	CyPmHibRestore, %function
 688              	CyPmHibRestore:
 689              	.LFB8:
1462:.\Generated_Source\PSoC5/cyPm.c **** {
 690              		.loc 1 1462 0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694 0000 10B5     		push	{r4, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 4, -8
 697              		.cfi_offset 14, -4
1464:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHviLviRestore();
 698              		.loc 1 1464 0
 699 0002 FFF7FEFF 		bl	CyPmHviLviRestore
 700              	.LVL9:
1467:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 48


 701              		.loc 1 1467 0
 702 0006 FFF7FEFF 		bl	CyPmHibSlpRestore
 703              	.LVL10:
1470:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
 704              		.loc 1 1470 0
 705 000a 0F4B     		ldr	r3, .L35
 706 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 707 000e 012B     		cmp	r3, #1
 708 0010 01D1     		bne	.L32
1473:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start1K();
 709              		.loc 1 1473 0
 710 0012 FFF7FEFF 		bl	CyILO_Start1K
 711              	.LVL11:
 712              	.L32:
1477:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmBackup.ilo100kEnable)
 713              		.loc 1 1477 0
 714 0016 0C4B     		ldr	r3, .L35
 715 0018 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 716 001a 012B     		cmp	r3, #1
 717 001c 01D1     		bne	.L33
1480:.\Generated_Source\PSoC5/cyPm.c ****         CyILO_Start100K();
 718              		.loc 1 1480 0
 719 001e FFF7FEFF 		bl	CyILO_Start100K
 720              	.LVL12:
 721              	.L33:
1484:.\Generated_Source\PSoC5/cyPm.c ****     (void) CyILO_SetPowerMode(cyPmBackup.iloPowerMode);
 722              		.loc 1 1484 0
 723 0022 094C     		ldr	r4, .L35
 724 0024 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 725 0026 FFF7FEFF 		bl	CyILO_SetPowerMode
 726              	.LVL13:
1487:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DISABLED == cyPmBackup.slpTrBypass)
 727              		.loc 1 1487 0
 728 002a E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 729 002c 23B9     		cbnz	r3, .L34
1490:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= ((uint8)(~CY_PM_PWRSYS_SLP_TR_BYPASS));
 730              		.loc 1 1490 0
 731 002e 074B     		ldr	r3, .L35+4
 732 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 733 0032 02F0EF02 		and	r2, r2, #239
 734 0036 1A70     		strb	r2, [r3]
 735              	.L34:
1497:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR0_REG = cyPmBackup.wakeupTrim0;
 736              		.loc 1 1497 0
 737 0038 034B     		ldr	r3, .L35
 738 003a D979     		ldrb	r1, [r3, #7]	@ zero_extendqisi2
 739 003c 044A     		ldr	r2, .L35+8
 740 003e 1170     		strb	r1, [r2]
1498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_PWRSYS_WAKE_TR1_REG = cyPmBackup.wakeupTrim1;
 741              		.loc 1 1498 0
 742 0040 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 743 0042 044B     		ldr	r3, .L35+12
 744 0044 1A70     		strb	r2, [r3]
 745 0046 10BD     		pop	{r4, pc}
 746              	.L36:
 747              		.align	2
 748              	.L35:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 49


 749 0048 00000000 		.word	.LANCHOR0
 750 004c 83460040 		.word	1073759875
 751 0050 85460040 		.word	1073759877
 752 0054 86460040 		.word	1073759878
 753              		.cfi_endproc
 754              	.LFE8:
 755              		.size	CyPmHibRestore, .-CyPmHibRestore
 756              		.section	.text.CyPmSaveClocks,"ax",%progbits
 757              		.align	2
 758              		.global	CyPmSaveClocks
 759              		.thumb
 760              		.thumb_func
 761              		.type	CyPmSaveClocks, %function
 762              	CyPmSaveClocks:
 763              	.LFB0:
  85:.\Generated_Source\PSoC5/cyPm.c **** {
 764              		.loc 1 85 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768 0000 10B5     		push	{r4, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 4, -8
 771              		.cfi_offset 14, -4
  87:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
 772              		.loc 1 87 0
 773 0002 784A     		ldr	r2, .L63
 774 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 775 0006 784C     		ldr	r4, .L63+4
 776 0008 03F00F03 		and	r3, r3, #15
 777 000c 84F83030 		strb	r3, [r4, #48]
  88:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
 778              		.loc 1 88 0
 779 0010 764B     		ldr	r3, .L63+8
 780 0012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 781 0014 84F83110 		strb	r1, [r4, #49]
  89:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_A_MASK));
 782              		.loc 1 89 0
 783 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 784 001a 01F0F001 		and	r1, r1, #240
 785 001e 1170     		strb	r1, [r2]
  90:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG &= ((uint8)(~CY_PM_ACT_EN_CLK_D_MASK));
 786              		.loc 1 90 0
 787 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 788 0022 0022     		movs	r2, #0
 789 0024 1A70     		strb	r2, [r3]
  93:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
 790              		.loc 1 93 0
 791 0026 03F25E43 		addw	r3, r3, #1118
 792 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 793 002c 03F0C003 		and	r3, r3, #192
 794 0030 84F83530 		strb	r3, [r4, #53]
  94:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 795              		.loc 1 94 0
 796 0034 3720     		movs	r0, #55
 797 0036 FFF7FEFF 		bl	CyFlash_SetWaitCycles
 798              	.LVL14:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 50


  97:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 799              		.loc 1 97 0
 800 003a 6D4B     		ldr	r3, .L63+12
 801 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 802 003e 02F00702 		and	r2, r2, #7
 803 0042 84F83320 		strb	r2, [r4, #51]
  98:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.imoUsbClk = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_USB;
 804              		.loc 1 98 0
 805 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 806 0048 02F04002 		and	r2, r2, #64
 807 004c 84F83420 		strb	r2, [r4, #52]
 101:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 808              		.loc 1 101 0
 809 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 810 0052 13F0100F 		tst	r3, #16
 811 0056 03D0     		beq	.L38
 104:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_ENABLED;
 812              		.loc 1 104 0
 813 0058 0122     		movs	r2, #1
 814 005a 84F83920 		strb	r2, [r4, #57]
 815 005e 03E0     		b	.L39
 816              	.L38:
 109:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imo2x = CY_PM_DISABLED;
 817              		.loc 1 109 0
 818 0060 0022     		movs	r2, #0
 819 0062 614B     		ldr	r3, .L63+4
 820 0064 83F83920 		strb	r2, [r3, #57]
 821              	.L39:
 113:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 822              		.loc 1 113 0
 823 0068 624B     		ldr	r3, .L63+16
 824 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 825 006c 03F00303 		and	r3, r3, #3
 826 0070 5D4A     		ldr	r2, .L63+4
 827 0072 82F83230 		strb	r3, [r2, #50]
 116:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_PLL == cyPmClockBackup.masterClkSrc)
 828              		.loc 1 116 0
 829 0076 012B     		cmp	r3, #1
 830 0078 19D1     		bne	.L40
 118:.\Generated_Source\PSoC5/cyPm.c ****         switch (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_PLL_SRC_MASK)
 831              		.loc 1 118 0
 832 007a 4FF04023 		mov	r3, #1073758208
 833 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 834 0080 03F00303 		and	r3, r3, #3
 835 0084 012B     		cmp	r3, #1
 836 0086 07D0     		beq	.L42
 837 0088 13B1     		cbz	r3, .L43
 838 008a 022B     		cmp	r3, #2
 839 008c 08D0     		beq	.L44
 840 008e 0BE0     		b	.L62
 841              	.L43:
 121:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 842              		.loc 1 121 0
 843 0090 0020     		movs	r0, #0
 844 0092 FFF7FEFF 		bl	CyMasterClk_SetSource
 845              	.LVL15:
 122:.\Generated_Source\PSoC5/cyPm.c ****             break;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 51


 846              		.loc 1 122 0
 847 0096 0AE0     		b	.L40
 848              	.L42:
 125:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_XTAL);
 849              		.loc 1 125 0
 850 0098 0220     		movs	r0, #2
 851 009a FFF7FEFF 		bl	CyMasterClk_SetSource
 852              	.LVL16:
 126:.\Generated_Source\PSoC5/cyPm.c ****             break;
 853              		.loc 1 126 0
 854 009e 06E0     		b	.L40
 855              	.L44:
 129:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetSource(CY_MASTER_SOURCE_DSI);
 856              		.loc 1 129 0
 857 00a0 0320     		movs	r0, #3
 858 00a2 FFF7FEFF 		bl	CyMasterClk_SetSource
 859              	.LVL17:
 130:.\Generated_Source\PSoC5/cyPm.c ****             break;
 860              		.loc 1 130 0
 861 00a6 02E0     		b	.L40
 862              	.L62:
 133:.\Generated_Source\PSoC5/cyPm.c ****             CYASSERT(0u != 0u);
 863              		.loc 1 133 0 discriminator 1
 864 00a8 0020     		movs	r0, #0
 865 00aa FFF7FEFF 		bl	CyHalt
 866              	.LVL18:
 867              	.L40:
 139:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_PLL_CFG0_REG & CY_PM_PLL_CFG0_ENABLE))
 868              		.loc 1 139 0
 869 00ae 524B     		ldr	r3, .L63+20
 870 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 871 00b2 13F0010F 		tst	r3, #1
 872 00b6 06D0     		beq	.L45
 142:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_ENABLED;
 873              		.loc 1 142 0
 874 00b8 0122     		movs	r2, #1
 875 00ba 4B4B     		ldr	r3, .L63+4
 876 00bc 83F83E20 		strb	r2, [r3, #62]
 143:.\Generated_Source\PSoC5/cyPm.c ****         CyPLL_OUT_Stop();
 877              		.loc 1 143 0
 878 00c0 FFF7FEFF 		bl	CyPLL_OUT_Stop
 879              	.LVL19:
 880 00c4 03E0     		b	.L46
 881              	.L45:
 148:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.pllEnableState = CY_PM_DISABLED;
 882              		.loc 1 148 0
 883 00c6 0022     		movs	r2, #0
 884 00c8 474B     		ldr	r3, .L63+4
 885 00ca 83F83E20 		strb	r2, [r3, #62]
 886              	.L46:
 152:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetFreq(CY_PM_IMO_FREQ_LPM);
 887              		.loc 1 152 0
 888 00ce 0420     		movs	r0, #4
 889 00d0 FFF7FEFF 		bl	CyIMO_SetFreq
 890              	.LVL20:
 155:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG))
 891              		.loc 1 155 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 52


 892 00d4 494B     		ldr	r3, .L63+24
 893 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 00d8 13F0100F 		tst	r3, #16
 895 00dc 04D0     		beq	.L47
 158:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_ENABLED;
 896              		.loc 1 158 0
 897 00de 0122     		movs	r2, #1
 898 00e0 414B     		ldr	r3, .L63+4
 899 00e2 83F83620 		strb	r2, [r3, #54]
 900 00e6 08E0     		b	.L48
 901              	.L47:
 163:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoEnable = CY_PM_DISABLED;
 902              		.loc 1 163 0
 903 00e8 0020     		movs	r0, #0
 904 00ea 3F4B     		ldr	r3, .L63+4
 905 00ec 83F83600 		strb	r0, [r3, #54]
 166:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 906              		.loc 1 166 0
 907 00f0 FFF7FEFF 		bl	CyIMO_Start
 908              	.LVL21:
 169:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs(6u);
 909              		.loc 1 169 0
 910 00f4 0620     		movs	r0, #6
 911 00f6 FFF7FEFF 		bl	CyDelayUs
 912              	.LVL22:
 913              	.L48:
 173:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_XCLKEN))
 914              		.loc 1 173 0
 915 00fa 3D4B     		ldr	r3, .L63+12
 916 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 917 00fe 13F0200F 		tst	r3, #32
 918 0102 0FD0     		beq	.L49
 177:.\Generated_Source\PSoC5/cyPm.c ****             (0u == (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO2X_SRC)) ? CY_IMO_SOURCE_DSI : CY_IMO_S
 919              		.loc 1 177 0
 920 0104 4FF04023 		mov	r3, #1073758208
 921 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 176:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc =
 922              		.loc 1 176 0
 923 010a 13F0400F 		tst	r3, #64
 924 010e 01D1     		bne	.L61
 925 0110 0222     		movs	r2, #2
 926 0112 00E0     		b	.L50
 927              	.L61:
 928 0114 0122     		movs	r2, #1
 929              	.L50:
 176:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc =
 930              		.loc 1 176 0 is_stmt 0 discriminator 1
 931 0116 344B     		ldr	r3, .L63+4
 932 0118 83F83720 		strb	r2, [r3, #55]
 180:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetSource(CY_IMO_SOURCE_IMO);
 933              		.loc 1 180 0 is_stmt 1 discriminator 1
 934 011c 0020     		movs	r0, #0
 935 011e FFF7FEFF 		bl	CyIMO_SetSource
 936              	.LVL23:
 937 0122 03E0     		b	.L51
 938              	.L49:
 185:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.imoClkSrc = CY_IMO_SOURCE_IMO;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 53


 939              		.loc 1 185 0
 940 0124 0022     		movs	r2, #0
 941 0126 304B     		ldr	r3, .L63+4
 942 0128 83F83720 		strb	r2, [r3, #55]
 943              	.L51:
 189:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkImoSrc = CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK;
 944              		.loc 1 189 0
 945 012c 4FF04023 		mov	r3, #1073758208
 946 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 947 0132 03F03003 		and	r3, r3, #48
 948 0136 2C4A     		ldr	r2, .L63+4
 949 0138 82F83830 		strb	r3, [r2, #56]
 192:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_CLKDIST_IMO_OUT_IMO != cyPmClockBackup.clkImoSrc)
 950              		.loc 1 192 0
 951 013c 2BB1     		cbz	r3, .L52
 195:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 952              		.loc 1 195 0
 953 013e 4FF04023 		mov	r3, #1073758208
 954 0142 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 955 0144 02F0CF02 		and	r2, r2, #207
 956 0148 1A70     		strb	r2, [r3]
 957              	.L52:
 200:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 958              		.loc 1 200 0
 959 014a 294B     		ldr	r3, .L63+12
 960 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 961 014e 13F0100F 		tst	r3, #16
 962 0152 01D0     		beq	.L53
 202:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_DisableDoubler();
 963              		.loc 1 202 0
 964 0154 FFF7FEFF 		bl	CyIMO_DisableDoubler
 965              	.LVL24:
 966              	.L53:
 206:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkSyncDiv = CY_PM_CLKDIST_MSTR0_REG;
 967              		.loc 1 206 0
 968 0158 294B     		ldr	r3, .L63+28
 969 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 970 015c DBB2     		uxtb	r3, r3
 971 015e 224A     		ldr	r2, .L63+4
 972 0160 82F83A30 		strb	r3, [r2, #58]
 207:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_DIV_BY_ONE != cyPmClockBackup.clkSyncDiv)
 973              		.loc 1 207 0
 974 0164 13B1     		cbz	r3, .L54
 209:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetDivider(CY_PM_DIV_BY_ONE);
 975              		.loc 1 209 0
 976 0166 0020     		movs	r0, #0
 977 0168 FFF7FEFF 		bl	CyMasterClk_SetDivider
 978              	.LVL25:
 979              	.L54:
 213:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_MASTER_SOURCE_IMO != cyPmClockBackup.masterClkSrc)
 980              		.loc 1 213 0
 981 016c 1E4B     		ldr	r3, .L63+4
 982 016e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 983 0172 13B1     		cbz	r3, .L55
 215:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 984              		.loc 1 215 0
 985 0174 0020     		movs	r0, #0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 54


 986 0176 FFF7FEFF 		bl	CyMasterClk_SetSource
 987              	.LVL26:
 988              	.L55:
 219:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv = (uint16) ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 989              		.loc 1 219 0
 990 017a 224B     		ldr	r3, .L63+32
 991 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 992 017e 1B02     		lsls	r3, r3, #8
 993 0180 194A     		ldr	r2, .L63+4
 994 0182 9387     		strh	r3, [r2, #60]	@ movhi
 220:.\Generated_Source\PSoC5/cyPm.c ****     cyPmClockBackup.clkBusDiv |= CY_PM_CLK_BUS_LSB_DIV_REG;
 995              		.loc 1 220 0
 996 0184 2049     		ldr	r1, .L63+36
 997 0186 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 998 0188 0B43     		orrs	r3, r3, r1
 999 018a 9387     		strh	r3, [r2, #60]	@ movhi
 221:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_BUS_CLK_DIV_BY_ONE != cyPmClockBackup.clkBusDiv)
 1000              		.loc 1 221 0
 1001 018c 13B1     		cbz	r3, .L56
 223:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(CY_PM_BUS_CLK_DIV_BY_ONE);
 1002              		.loc 1 223 0
 1003 018e 0020     		movs	r0, #0
 1004 0190 FFF7FEFF 		bl	CyBusClk_SetDivider
 1005              	.LVL27:
 1006              	.L56:
 227:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles((uint8)CY_PM_GET_CPU_FREQ_MHZ);
 1007              		.loc 1 227 0
 1008 0194 164B     		ldr	r3, .L63+12
 1009 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1010 0198 03F00703 		and	r3, r3, #7
 1011 019c 1B4A     		ldr	r2, .L63+40
 1012 019e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 1013 01a0 FFF7FEFF 		bl	CyFlash_SetWaitCycles
 1014              	.LVL28:
 230:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_ENABLE))
 1015              		.loc 1 230 0
 1016 01a4 1A4B     		ldr	r3, .L63+44
 1017 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1018 01a8 13F0010F 		tst	r3, #1
 1019 01ac 06D0     		beq	.L57
 233:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_ENABLED;
 1020              		.loc 1 233 0
 1021 01ae 0122     		movs	r2, #1
 1022 01b0 0D4B     		ldr	r3, .L63+4
 1023 01b2 83F83F20 		strb	r2, [r3, #63]
 234:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_Stop();
 1024              		.loc 1 234 0
 1025 01b6 FFF7FEFF 		bl	CyXTAL_Stop
 1026              	.LVL29:
 1027 01ba 03E0     		b	.L58
 1028              	.L57:
 239:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.xmhzEnableState = CY_PM_DISABLED;
 1029              		.loc 1 239 0
 1030 01bc 0022     		movs	r2, #0
 1031 01be 0A4B     		ldr	r3, .L63+4
 1032 01c0 83F83F20 		strb	r2, [r3, #63]
 1033              	.L58:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 55


 248:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_CLKDIST_DELAY_REG & CY_PM_CLKDIST_DELAY_EN))
 1034              		.loc 1 248 0
 1035 01c4 134B     		ldr	r3, .L63+48
 1036 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1037 01c8 13F0040F 		tst	r3, #4
 1038 01cc 04D0     		beq	.L59
 250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_ENABLED;
 1039              		.loc 1 250 0
 1040 01ce 0122     		movs	r2, #1
 1041 01d0 054B     		ldr	r3, .L63+4
 1042 01d2 83F84020 		strb	r2, [r3, #64]
 1043 01d6 10BD     		pop	{r4, pc}
 1044              	.L59:
 254:.\Generated_Source\PSoC5/cyPm.c ****         cyPmClockBackup.clkDistDelay = CY_PM_DISABLED;
 1045              		.loc 1 254 0
 1046 01d8 0022     		movs	r2, #0
 1047 01da 034B     		ldr	r3, .L63+4
 1048 01dc 83F84020 		strb	r2, [r3, #64]
 1049 01e0 10BD     		pop	{r4, pc}
 1050              	.L64:
 1051 01e2 00BF     		.align	2
 1052              	.L63:
 1053 01e4 A1430040 		.word	1073759137
 1054 01e8 00000000 		.word	.LANCHOR0
 1055 01ec A2430040 		.word	1073759138
 1056 01f0 00420040 		.word	1073758720
 1057 01f4 05400040 		.word	1073758213
 1058 01f8 20420040 		.word	1073758752
 1059 01fc A0430040 		.word	1073759136
 1060 0200 04400040 		.word	1073758212
 1061 0204 07400040 		.word	1073758215
 1062 0208 06400040 		.word	1073758214
 1063 020c 00000000 		.word	.LANCHOR1
 1064 0210 10420040 		.word	1073758736
 1065 0214 0B400040 		.word	1073758219
 1066              		.cfi_endproc
 1067              	.LFE0:
 1068              		.size	CyPmSaveClocks, .-CyPmSaveClocks
 1069              		.section	.text.CyPmRestoreClocks,"ax",%progbits
 1070              		.align	2
 1071              		.global	CyPmRestoreClocks
 1072              		.thumb
 1073              		.thumb_func
 1074              		.type	CyPmRestoreClocks, %function
 1075              	CyPmRestoreClocks:
 1076              	.LFB1:
 287:.\Generated_Source\PSoC5/cyPm.c **** {
 1077              		.loc 1 287 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 8
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1082              		.cfi_def_cfa_offset 20
 1083              		.cfi_offset 4, -20
 1084              		.cfi_offset 5, -16
 1085              		.cfi_offset 6, -12
 1086              		.cfi_offset 7, -8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 56


 1087              		.cfi_offset 14, -4
 1088 0002 83B0     		sub	sp, sp, #12
 1089              		.cfi_def_cfa_offset 32
 1090              	.LVL30:
 294:.\Generated_Source\PSoC5/cyPm.c ****     const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 1091              		.loc 1 294 0
 1092 0004 864B     		ldr	r3, .L86
 1093 0006 53F8080F 		ldr	r0, [r3, #8]!	@ unaligned
 1094 000a 0090     		str	r0, [sp]	@ unaligned
 1095 000c 9A88     		ldrh	r2, [r3, #4]	@ unaligned
 1096 000e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1097 0010 ADF80420 		strh	r2, [sp, #4]	@ unaligned
 1098 0014 8DF80630 		strb	r3, [sp, #6]
 299:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.clkDistDelay)
 1099              		.loc 1 299 0
 1100 0018 824B     		ldr	r3, .L86+4
 1101 001a 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 1102 001e 012B     		cmp	r3, #1
 1103 0020 10D1     		bne	.L66
 303:.\Generated_Source\PSoC5/cyPm.c ****                         CY_PM_GET_CPU_FREQ_MHZ);
 1104              		.loc 1 303 0
 1105 0022 814B     		ldr	r3, .L86+8
 1106 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 0026 03F00703 		and	r3, r3, #7
 1108 002a 7D4A     		ldr	r2, .L86
 1109 002c D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 302:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayCycles((uint32)(CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_SETTLE_US) 
 1110              		.loc 1 302 0
 1111 002e 00EB8000 		add	r0, r0, r0, lsl #2
 1112 0032 C0EB0010 		rsb	r0, r0, r0, lsl #4
 1113 0036 FFF7FEFF 		bl	CyDelayCycles
 1114              	.LVL31:
 305:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_DELAY_REG |= CY_PM_CLKDIST_DELAY_EN;
 1115              		.loc 1 305 0
 1116 003a 7C4B     		ldr	r3, .L86+12
 1117 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1118 003e 42F00402 		orr	r2, r2, #4
 1119 0042 1A70     		strb	r2, [r3]
 1120              	.L66:
 309:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState)
 1121              		.loc 1 309 0
 1122 0044 774B     		ldr	r3, .L86+4
 1123 0046 93F83F30 		ldrb	r3, [r3, #63]	@ zero_extendqisi2
 1124 004a 012B     		cmp	r3, #1
 1125 004c 1AD1     		bne	.L67
 319:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyXTAL_Start(CY_PM_XTAL_MHZ_NO_WAIT);
 1126              		.loc 1 319 0
 1127 004e 0020     		movs	r0, #0
 1128 0050 FFF7FEFF 		bl	CyXTAL_Start
 1129              	.LVL32:
 322:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_XMHZ_CSR_REG;
 1130              		.loc 1 322 0
 1131 0054 764B     		ldr	r3, .L86+16
 1132 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1133              	.LVL33:
 325:.\Generated_Source\PSoC5/cyPm.c ****         for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 1134              		.loc 1 325 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 57


 1135 0058 0524     		movs	r4, #5
 328:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayCycles((uint32)CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 1136              		.loc 1 328 0
 1137 005a 734F     		ldr	r7, .L86+8
 1138 005c 704E     		ldr	r6, .L86
 331:.\Generated_Source\PSoC5/cyPm.c ****             if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 1139              		.loc 1 331 0
 1140 005e 744D     		ldr	r5, .L86+16
 325:.\Generated_Source\PSoC5/cyPm.c ****         for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 1141              		.loc 1 325 0
 1142 0060 0EE0     		b	.L68
 1143              	.LVL34:
 1144              	.L69:
 328:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayCycles((uint32)CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 1145              		.loc 1 328 0
 1146 0062 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1147 0064 03F00703 		and	r3, r3, #7
 1148 0068 F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 1149 006a C820     		movs	r0, #200
 1150 006c 00FB03F0 		mul	r0, r0, r3
 1151 0070 FFF7FEFF 		bl	CyDelayCycles
 1152              	.LVL35:
 331:.\Generated_Source\PSoC5/cyPm.c ****             if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 1153              		.loc 1 331 0
 1154 0074 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1155 0076 13F0800F 		tst	r3, #128
 1156 007a 03D0     		beq	.L67
 325:.\Generated_Source\PSoC5/cyPm.c ****         for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 1157              		.loc 1 325 0
 1158 007c 013C     		subs	r4, r4, #1
 1159              	.LVL36:
 1160 007e A4B2     		uxth	r4, r4
 1161              	.LVL37:
 1162              	.L68:
 325:.\Generated_Source\PSoC5/cyPm.c ****         for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 1163              		.loc 1 325 0 is_stmt 0 discriminator 1
 1164 0080 002C     		cmp	r4, #0
 1165 0082 EED1     		bne	.L69
 1166              	.LVL38:
 1167              	.L67:
 356:.\Generated_Source\PSoC5/cyPm.c ****     CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 1168              		.loc 1 356 0 is_stmt 1
 1169 0084 3720     		movs	r0, #55
 1170 0086 FFF7FEFF 		bl	CyFlash_SetWaitCycles
 1171              	.LVL39:
 359:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 1172              		.loc 1 359 0
 1173 008a 664B     		ldr	r3, .L86+4
 1174 008c 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1175 0090 023B     		subs	r3, r3, #2
 1176 0092 DBB2     		uxtb	r3, r3
 1177 0094 012B     		cmp	r3, #1
 1178 0096 0ED8     		bhi	.L70
 363:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 1179              		.loc 1 363 0
 1180 0098 664B     		ldr	r3, .L86+20
 1181 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 58


 1182 009c DBB2     		uxtb	r3, r3
 1183 009e 614A     		ldr	r2, .L86+4
 1184 00a0 92F83A00 		ldrb	r0, [r2, #58]	@ zero_extendqisi2
 1185 00a4 8342     		cmp	r3, r0
 1186 00a6 01D0     		beq	.L71
 366:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 1187              		.loc 1 366 0
 1188 00a8 FFF7FEFF 		bl	CyMasterClk_SetDivider
 1189              	.LVL40:
 1190              	.L71:
 370:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 1191              		.loc 1 370 0
 1192 00ac 5D4B     		ldr	r3, .L86+4
 1193 00ae 93F83200 		ldrb	r0, [r3, #50]	@ zero_extendqisi2
 1194 00b2 FFF7FEFF 		bl	CyMasterClk_SetSource
 1195              	.LVL41:
 1196              	.L70:
 374:.\Generated_Source\PSoC5/cyPm.c ****     if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 1197              		.loc 1 374 0
 1198 00b6 5B4B     		ldr	r3, .L86+4
 1199 00b8 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1200 00bc 13F0400F 		tst	r3, #64
 1201 00c0 0CD0     		beq	.L72
 375:.\Generated_Source\PSoC5/cyPm.c ****         (CY_IMO_FREQ_24MHZ == cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]))
 1202              		.loc 1 375 0 discriminator 1
 1203 00c2 584B     		ldr	r3, .L86+4
 1204 00c4 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 1205 00c8 02AA     		add	r2, sp, #8
 1206 00ca 1344     		add	r3, r3, r2
 1207 00cc 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 374:.\Generated_Source\PSoC5/cyPm.c ****     if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 1208              		.loc 1 374 0 discriminator 1
 1209 00d0 032B     		cmp	r3, #3
 1210 00d2 03D1     		bne	.L72
 378:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(CY_IMO_FREQ_USB);
 1211              		.loc 1 378 0
 1212 00d4 0820     		movs	r0, #8
 1213 00d6 FFF7FEFF 		bl	CyIMO_SetFreq
 1214              	.LVL42:
 1215 00da 18E0     		b	.L73
 1216              	.L72:
 383:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_SetFreq(cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]);
 1217              		.loc 1 383 0
 1218 00dc 514C     		ldr	r4, .L86+4
 1219 00de 94F83330 		ldrb	r3, [r4, #51]	@ zero_extendqisi2
 1220 00e2 02AA     		add	r2, sp, #8
 1221 00e4 1344     		add	r3, r3, r2
 1222 00e6 13F8080C 		ldrb	r0, [r3, #-8]	@ zero_extendqisi2
 1223 00ea FFF7FEFF 		bl	CyIMO_SetFreq
 1224              	.LVL43:
 385:.\Generated_Source\PSoC5/cyPm.c ****         if(0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB))
 1225              		.loc 1 385 0
 1226 00ee 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 1227 00f2 13F0400F 		tst	r3, #64
 1228 00f6 05D0     		beq	.L74
 387:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG |= CY_PM_FASTCLK_IMO_CR_USB;
 1229              		.loc 1 387 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 59


 1230 00f8 4B4B     		ldr	r3, .L86+8
 1231 00fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1232 00fc 42F04002 		orr	r2, r2, #64
 1233 0100 1A70     		strb	r2, [r3]
 1234 0102 04E0     		b	.L73
 1235              	.L74:
 391:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_FASTCLK_IMO_CR_REG &= ((uint8)(~CY_PM_FASTCLK_IMO_CR_USB));
 1236              		.loc 1 391 0
 1237 0104 484B     		ldr	r3, .L86+8
 1238 0106 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1239 0108 02F0BF02 		and	r2, r2, #191
 1240 010c 1A70     		strb	r2, [r3]
 1241              	.L73:
 396:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 1242              		.loc 1 396 0
 1243 010e 454B     		ldr	r3, .L86+4
 1244 0110 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 1245 0114 012B     		cmp	r3, #1
 1246 0116 07D1     		bne	.L75
 397:.\Generated_Source\PSoC5/cyPm.c ****        (0u == (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 1247              		.loc 1 397 0 discriminator 1
 1248 0118 474B     		ldr	r3, .L86+24
 1249 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 1250              		.loc 1 396 0 discriminator 1
 1251 011c 13F0100F 		tst	r3, #16
 1252 0120 02D1     		bne	.L75
 400:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 1253              		.loc 1 400 0
 1254 0122 0020     		movs	r0, #0
 1255 0124 FFF7FEFF 		bl	CyIMO_Start
 1256              	.LVL44:
 1257              	.L75:
 404:.\Generated_Source\PSoC5/cyPm.c ****     CyIMO_SetSource(cyPmClockBackup.imoClkSrc);
 1258              		.loc 1 404 0
 1259 0128 3E4C     		ldr	r4, .L86+4
 1260 012a 94F83700 		ldrb	r0, [r4, #55]	@ zero_extendqisi2
 1261 012e FFF7FEFF 		bl	CyIMO_SetSource
 1262              	.LVL45:
 407:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.imo2x)
 1263              		.loc 1 407 0
 1264 0132 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 1265 0136 012B     		cmp	r3, #1
 1266 0138 01D1     		bne	.L76
 409:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_EnableDoubler();
 1267              		.loc 1 409 0
 1268 013a FFF7FEFF 		bl	CyIMO_EnableDoubler
 1269              	.LVL46:
 1270              	.L76:
 413:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkImoSrc != (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK))
 1271              		.loc 1 413 0
 1272 013e 394B     		ldr	r3, .L86+4
 1273 0140 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1274 0144 4FF04022 		mov	r2, #1073758208
 1275 0148 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1276 014a 02F03002 		and	r2, r2, #48
 1277 014e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 60


 1278 0150 06D0     		beq	.L77
 415:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ((uint8)(~CY_PM_CLKDIST_IMO_OUT_MASK))) |
 1279              		.loc 1 415 0
 1280 0152 4FF04022 		mov	r2, #1073758208
 1281 0156 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1282 0158 01F0CF01 		and	r1, r1, #207
 1283 015c 0B43     		orrs	r3, r3, r1
 1284 015e 1370     		strb	r3, [r2]
 1285              	.L77:
 421:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED == cyPmClockBackup.pllEnableState)
 1286              		.loc 1 421 0
 1287 0160 304B     		ldr	r3, .L86+4
 1288 0162 93F83E30 		ldrb	r3, [r3, #62]	@ zero_extendqisi2
 1289 0166 012B     		cmp	r3, #1
 1290 0168 1AD1     		bne	.L78
 432:.\Generated_Source\PSoC5/cyPm.c ****         (void) CyPLL_OUT_Start(CY_PM_PLL_OUT_NO_WAIT);
 1291              		.loc 1 432 0
 1292 016a 0020     		movs	r0, #0
 1293 016c FFF7FEFF 		bl	CyPLL_OUT_Start
 1294              	.LVL47:
 435:.\Generated_Source\PSoC5/cyPm.c ****         CyDelayUs((uint32)80u);
 1295              		.loc 1 435 0
 1296 0170 5020     		movs	r0, #80
 1297 0172 FFF7FEFF 		bl	CyDelayUs
 1298              	.LVL48:
 436:.\Generated_Source\PSoC5/cyPm.c ****         (void) CY_PM_FASTCLK_PLL_SR_REG;
 1299              		.loc 1 436 0
 1300 0176 314B     		ldr	r3, .L86+28
 1301 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1302              	.LVL49:
 439:.\Generated_Source\PSoC5/cyPm.c ****         for(i = 171u; i > 0u; i--)
 1303              		.loc 1 439 0
 1304 017a AB24     		movs	r4, #171
 441:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayUs((uint32)1u);
 1305              		.loc 1 441 0
 1306 017c 0126     		movs	r6, #1
 444:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 1307              		.loc 1 444 0
 1308 017e 2F4D     		ldr	r5, .L86+28
 439:.\Generated_Source\PSoC5/cyPm.c ****         for(i = 171u; i > 0u; i--)
 1309              		.loc 1 439 0
 1310 0180 0CE0     		b	.L79
 1311              	.LVL50:
 1312              	.L81:
 441:.\Generated_Source\PSoC5/cyPm.c ****             CyDelayUs((uint32)1u);
 1313              		.loc 1 441 0
 1314 0182 3046     		mov	r0, r6
 1315 0184 FFF7FEFF 		bl	CyDelayUs
 1316              	.LVL51:
 444:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 1317              		.loc 1 444 0
 1318 0188 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1319 018a 13F0010F 		tst	r3, #1
 1320 018e 03D0     		beq	.L80
 445:.\Generated_Source\PSoC5/cyPm.c ****                (0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)))
 1321              		.loc 1 445 0 discriminator 1
 1322 0190 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 61


 444:.\Generated_Source\PSoC5/cyPm.c ****             if((0u != (CY_PM_FASTCLK_PLL_SR_REG & CY_PM_FASTCLK_PLL_LOCKED)) &&
 1323              		.loc 1 444 0 discriminator 1
 1324 0192 13F0010F 		tst	r3, #1
 1325 0196 03D1     		bne	.L78
 1326              	.L80:
 439:.\Generated_Source\PSoC5/cyPm.c ****         for(i = 171u; i > 0u; i--)
 1327              		.loc 1 439 0
 1328 0198 013C     		subs	r4, r4, #1
 1329              	.LVL52:
 1330 019a A4B2     		uxth	r4, r4
 1331              	.LVL53:
 1332              	.L79:
 439:.\Generated_Source\PSoC5/cyPm.c ****         for(i = 171u; i > 0u; i--)
 1333              		.loc 1 439 0 is_stmt 0 discriminator 1
 1334 019c 002C     		cmp	r4, #0
 1335 019e F0D1     		bne	.L81
 1336              	.LVL54:
 1337              	.L78:
 469:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_MASTER_CLK_SRC_IMO == cyPmClockBackup.masterClkSrc) ||
 1338              		.loc 1 469 0 is_stmt 1
 1339 01a0 204B     		ldr	r3, .L86+4
 1340 01a2 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 1341 01a6 012B     		cmp	r3, #1
 1342 01a8 0ED8     		bhi	.L82
 473:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 1343              		.loc 1 473 0
 1344 01aa 224B     		ldr	r3, .L86+20
 1345 01ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1346 01ae DBB2     		uxtb	r3, r3
 1347 01b0 1C4A     		ldr	r2, .L86+4
 1348 01b2 92F83A00 		ldrb	r0, [r2, #58]	@ zero_extendqisi2
 1349 01b6 8342     		cmp	r3, r0
 1350 01b8 01D0     		beq	.L83
 475:.\Generated_Source\PSoC5/cyPm.c ****             CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 1351              		.loc 1 475 0
 1352 01ba FFF7FEFF 		bl	CyMasterClk_SetDivider
 1353              	.LVL55:
 1354              	.L83:
 479:.\Generated_Source\PSoC5/cyPm.c ****         CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 1355              		.loc 1 479 0
 1356 01be 194B     		ldr	r3, .L86+4
 1357 01c0 93F83200 		ldrb	r0, [r3, #50]	@ zero_extendqisi2
 1358 01c4 FFF7FEFF 		bl	CyMasterClk_SetSource
 1359              	.LVL56:
 1360              	.L82:
 483:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 1361              		.loc 1 483 0
 1362 01c8 164B     		ldr	r3, .L86+4
 1363 01ca 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 1364 01ce 33B9     		cbnz	r3, .L84
 484:.\Generated_Source\PSoC5/cyPm.c ****        (0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 1365              		.loc 1 484 0 discriminator 1
 1366 01d0 194B     		ldr	r3, .L86+24
 1367 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 483:.\Generated_Source\PSoC5/cyPm.c ****     if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
 1368              		.loc 1 483 0 discriminator 1
 1369 01d4 13F0100F 		tst	r3, #16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 62


 1370 01d8 01D0     		beq	.L84
 486:.\Generated_Source\PSoC5/cyPm.c ****         CyIMO_Stop();
 1371              		.loc 1 486 0
 1372 01da FFF7FEFF 		bl	CyIMO_Stop
 1373              	.LVL57:
 1374              	.L84:
 490:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp = (uint16) ((uint16)CY_PM_CLK_BUS_MSB_DIV_REG << 8u);
 1375              		.loc 1 490 0
 1376 01de 184B     		ldr	r3, .L86+32
 1377 01e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1378              	.LVL58:
 491:.\Generated_Source\PSoC5/cyPm.c ****     clkBusDivTmp |= CY_PM_CLK_BUS_LSB_DIV_REG;
 1379              		.loc 1 491 0
 1380 01e2 013B     		subs	r3, r3, #1
 1381 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 01e6 43EA0223 		orr	r3, r3, r2, lsl #8
 1383              	.LVL59:
 492:.\Generated_Source\PSoC5/cyPm.c ****     if(cyPmClockBackup.clkBusDiv != clkBusDivTmp)
 1384              		.loc 1 492 0
 1385 01ea 0E4A     		ldr	r2, .L86+4
 1386 01ec 908F     		ldrh	r0, [r2, #60]
 1387 01ee 9842     		cmp	r0, r3
 1388 01f0 01D0     		beq	.L85
 494:.\Generated_Source\PSoC5/cyPm.c ****         CyBusClk_SetDivider(cyPmClockBackup.clkBusDiv);
 1389              		.loc 1 494 0
 1390 01f2 FFF7FEFF 		bl	CyBusClk_SetDivider
 1391              	.LVL60:
 1392              	.L85:
 498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ((uint8)(~CY_PM_CACHE_CR_CYCLES_MASK))) |
 1393              		.loc 1 498 0
 1394 01f6 134A     		ldr	r2, .L86+36
 1395 01f8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 499:.\Generated_Source\PSoC5/cyPm.c ****                            cyPmClockBackup.flashWaitCycles);
 1396              		.loc 1 499 0
 1397 01fa 0A4B     		ldr	r3, .L86+4
 1398 01fc 93F83500 		ldrb	r0, [r3, #53]	@ zero_extendqisi2
 498:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ((uint8)(~CY_PM_CACHE_CR_CYCLES_MASK))) |
 1399              		.loc 1 498 0
 1400 0200 01F03F01 		and	r1, r1, #63
 1401 0204 0143     		orrs	r1, r1, r0
 1402 0206 1170     		strb	r1, [r2]
 502:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 1403              		.loc 1 502 0
 1404 0208 93F83010 		ldrb	r1, [r3, #48]	@ zero_extendqisi2
 1405 020c A2F25F42 		subw	r2, r2, #1119
 1406 0210 1170     		strb	r1, [r2]
 503:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_ACT_CFG2_REG = cyPmClockBackup.enClkD;
 1407              		.loc 1 503 0
 1408 0212 93F83120 		ldrb	r2, [r3, #49]	@ zero_extendqisi2
 1409 0216 0C4B     		ldr	r3, .L86+40
 1410 0218 1A70     		strb	r2, [r3]
 504:.\Generated_Source\PSoC5/cyPm.c **** }
 1411              		.loc 1 504 0
 1412 021a 03B0     		add	sp, sp, #12
 1413              		@ sp needed
 1414 021c F0BD     		pop	{r4, r5, r6, r7, pc}
 1415              	.L87:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 63


 1416 021e 00BF     		.align	2
 1417              	.L86:
 1418 0220 00000000 		.word	.LANCHOR1
 1419 0224 00000000 		.word	.LANCHOR0
 1420 0228 00420040 		.word	1073758720
 1421 022c 0B400040 		.word	1073758219
 1422 0230 10420040 		.word	1073758736
 1423 0234 04400040 		.word	1073758212
 1424 0238 A0430040 		.word	1073759136
 1425 023c 25420040 		.word	1073758757
 1426 0240 07400040 		.word	1073758215
 1427 0244 00480040 		.word	1073760256
 1428 0248 A2430040 		.word	1073759138
 1429              		.cfi_endproc
 1430              	.LFE1:
 1431              		.size	CyPmRestoreClocks, .-CyPmRestoreClocks
 1432              		.section	.text.CyPmAltAct,"ax",%progbits
 1433              		.align	2
 1434              		.global	CyPmAltAct
 1435              		.thumb
 1436              		.thumb_func
 1437              		.type	CyPmAltAct, %function
 1438              	CyPmAltAct:
 1439              	.LFB2:
 649:.\Generated_Source\PSoC5/cyPm.c **** {
 1440              		.loc 1 649 0
 1441              		.cfi_startproc
 1442              		@ args = 0, pretend = 0, frame = 0
 1443              		@ frame_needed = 0, uses_anonymous_args = 0
 1444              	.LVL61:
 1445 0000 38B5     		push	{r3, r4, r5, lr}
 1446              		.cfi_def_cfa_offset 16
 1447              		.cfi_offset 3, -16
 1448              		.cfi_offset 4, -12
 1449              		.cfi_offset 5, -8
 1450              		.cfi_offset 14, -4
 1451 0002 0C46     		mov	r4, r1
 653:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_ALT_ACT_TIME_NONE == wakeupTime);
 1452              		.loc 1 653 0
 1453 0004 10B1     		cbz	r0, .L89
 653:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_ALT_ACT_TIME_NONE == wakeupTime);
 1454              		.loc 1 653 0 is_stmt 0 discriminator 1
 1455 0006 0020     		movs	r0, #0
 1456              	.LVL62:
 1457 0008 FFF7FEFF 		bl	CyHalt
 1458              	.LVL63:
 1459              	.L89:
 700:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1460              		.loc 1 700 0 is_stmt 1
 1461 000c 1248     		ldr	r0, .L90
 1462 000e 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 1463 0010 124B     		ldr	r3, .L90+4
 1464 0012 1A71     		strb	r2, [r3, #4]
 701:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 1465              		.loc 1 701 0
 1466 0014 C4F30712 		ubfx	r2, r4, #4, #8
 1467 0018 0270     		strb	r2, [r0]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 64


 704:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1468              		.loc 1 704 0
 1469 001a 1149     		ldr	r1, .L90+8
 1470 001c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1471 001e 5A71     		strb	r2, [r3, #5]
 705:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1472              		.loc 1 705 0
 1473 0020 04F00F02 		and	r2, r4, #15
 1474 0024 0A70     		strb	r2, [r1]
 708:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1475              		.loc 1 708 0
 1476 0026 0F4A     		ldr	r2, .L90+12
 1477 0028 1578     		ldrb	r5, [r2]	@ zero_extendqisi2
 1478 002a 9D71     		strb	r5, [r3, #6]
 709:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1479              		.loc 1 709 0
 1480 002c C4F30034 		ubfx	r4, r4, #12, #1
 1481 0030 1470     		strb	r4, [r2]
 713:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_A
 1482              		.loc 1 713 0
 1483 0032 0D4C     		ldr	r4, .L90+16
 1484 0034 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
 1485 0036 05F0F805 		and	r5, r5, #248
 1486 003a 45F00105 		orr	r5, r5, #1
 1487 003e 2570     		strb	r5, [r4]
 716:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
 1488              		.loc 1 716 0
 1489 0040 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 719:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1490              		.loc 1 719 0
 1491              	@ 719 ".\Generated_Source\PSoC5\cyPm.c" 1
 1492 0042 00BF     		NOP
 1493              	
 1494              	@ 0 "" 2
 720:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1495              		.loc 1 720 0
 1496              	@ 720 ".\Generated_Source\PSoC5\cyPm.c" 1
 1497 0044 00BF     		NOP
 1498              	
 1499              	@ 0 "" 2
 723:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 1500              		.loc 1 723 0
 1501              	@ 723 ".\Generated_Source\PSoC5\cyPm.c" 1
 1502 0046 30BF     		WFI 
 1503              	
 1504              	@ 0 "" 2
 728:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1505              		.loc 1 728 0
 1506              		.thumb
 1507 0048 1C79     		ldrb	r4, [r3, #4]	@ zero_extendqisi2
 1508 004a 0470     		strb	r4, [r0]
 729:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 1509              		.loc 1 729 0
 1510 004c 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 1511 004e 0870     		strb	r0, [r1]
 730:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1512              		.loc 1 730 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 65


 1513 0050 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1514 0052 1370     		strb	r3, [r2]
 1515 0054 38BD     		pop	{r3, r4, r5, pc}
 1516              	.L91:
 1517 0056 00BF     		.align	2
 1518              	.L90:
 1519 0058 98430040 		.word	1073759128
 1520 005c 00000000 		.word	.LANCHOR0
 1521 0060 99430040 		.word	1073759129
 1522 0064 9A430040 		.word	1073759130
 1523 0068 93430040 		.word	1073759123
 1524              		.cfi_endproc
 1525              	.LFE2:
 1526              		.size	CyPmAltAct, .-CyPmAltAct
 1527              		.section	.text.CyPmSleep,"ax",%progbits
 1528              		.align	2
 1529              		.global	CyPmSleep
 1530              		.thumb
 1531              		.thumb_func
 1532              		.type	CyPmSleep, %function
 1533              	CyPmSleep:
 1534              	.LFB3:
 853:.\Generated_Source\PSoC5/cyPm.c **** {
 1535              		.loc 1 853 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 1539              	.LVL64:
 1540 0000 70B5     		push	{r4, r5, r6, lr}
 1541              		.cfi_def_cfa_offset 16
 1542              		.cfi_offset 4, -16
 1543              		.cfi_offset 5, -12
 1544              		.cfi_offset 6, -8
 1545              		.cfi_offset 14, -4
 1546 0002 0646     		mov	r6, r0
 1547 0004 0C46     		mov	r4, r1
 857:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1548              		.loc 1 857 0
 1549 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1550              	.LVL65:
 1551 000a 0546     		mov	r5, r0
 1552              	.LVL66:
 866:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1553              		.loc 1 866 0
 1554 000c 334B     		ldr	r3, .L100
 1555 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1556 0010 13F0080F 		tst	r3, #8
 1557 0014 06D1     		bne	.L93
 869:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 1558              		.loc 1 869 0
 1559 0016 324B     		ldr	r3, .L100+4
 1560 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1561 001a 02F01F02 		and	r2, r2, #31
 1562 001e 1A70     		strb	r2, [r3]
 938:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_SLEEP_TIME_NONE == wakeupTime);
 1563              		.loc 1 938 0
 1564 0020 36B1     		cbz	r6, .L95
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 66


 1565 0022 02E0     		b	.L94
 1566              	.L93:
 876:.\Generated_Source\PSoC5/cyPm.c ****         CyExitCriticalSection(interruptState);
 1567              		.loc 1 876 0
 1568 0024 FFF7FEFF 		bl	CyExitCriticalSection
 1569              	.LVL67:
 878:.\Generated_Source\PSoC5/cyPm.c ****         return;
 1570              		.loc 1 878 0
 1571 0028 70BD     		pop	{r4, r5, r6, pc}
 1572              	.LVL68:
 1573              	.L94:
 938:.\Generated_Source\PSoC5/cyPm.c ****         CYASSERT(PM_SLEEP_TIME_NONE == wakeupTime);
 1574              		.loc 1 938 0 discriminator 1
 1575 002a 0020     		movs	r0, #0
 1576              	.LVL69:
 1577 002c FFF7FEFF 		bl	CyHalt
 1578              	.LVL70:
 1579              	.L95:
 948:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpSaveSet();
 1580              		.loc 1 948 0
 1581 0030 FFF7FEFF 		bl	CyPmHibSlpSaveSet
 1582              	.LVL71:
 979:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1583              		.loc 1 979 0
 1584 0034 2B4A     		ldr	r2, .L100+8
 1585 0036 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1586 0038 2B4B     		ldr	r3, .L100+12
 1587 003a 1971     		strb	r1, [r3, #4]
 980:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 1588              		.loc 1 980 0
 1589 003c C4F30711 		ubfx	r1, r4, #4, #8
 1590 0040 1170     		strb	r1, [r2]
 983:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1591              		.loc 1 983 0
 1592 0042 0132     		adds	r2, r2, #1
 1593 0044 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1594 0046 5971     		strb	r1, [r3, #5]
 984:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1595              		.loc 1 984 0
 1596 0048 04F00F01 		and	r1, r4, #15
 1597 004c 1170     		strb	r1, [r2]
 987:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1598              		.loc 1 987 0
 1599 004e 0132     		adds	r2, r2, #1
 1600 0050 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1601 0052 9971     		strb	r1, [r3, #6]
 988:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 1602              		.loc 1 988 0
 1603 0054 C4F30034 		ubfx	r4, r4, #12, #1
 1604 0058 1470     		strb	r4, [r2]
1004:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 1605              		.loc 1 1004 0
 1606 005a 244B     		ldr	r3, .L100+16
 1607 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1608 005e 13F0070F 		tst	r3, #7
 1609 0062 04D1     		bne	.L97
1007:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 67


 1610              		.loc 1 1007 0
 1611 0064 0122     		movs	r2, #1
 1612 0066 204B     		ldr	r3, .L100+12
 1613 0068 83F82D20 		strb	r2, [r3, #45]
 1614 006c 0DE0     		b	.L98
 1615              	.L97:
1012:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 1616              		.loc 1 1012 0
 1617 006e 1E4A     		ldr	r2, .L100+12
 1618 0070 0023     		movs	r3, #0
 1619 0072 82F82D30 		strb	r3, [r2, #45]
1015:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 1620              		.loc 1 1015 0
 1621 0076 1D4B     		ldr	r3, .L100+16
 1622 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1623 007a 01F00701 		and	r1, r1, #7
 1624 007e 82F82C10 		strb	r1, [r2, #44]
1018:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
 1625              		.loc 1 1018 0
 1626 0082 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1627 0084 02F0F802 		and	r2, r2, #248
 1628 0088 1A70     		strb	r2, [r3]
 1629              	.L98:
1022:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ((uint8)(~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_S
 1630              		.loc 1 1022 0
 1631 008a 144B     		ldr	r3, .L100
 1632 008c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1633 008e 02F0F802 		and	r2, r2, #248
 1634 0092 42F00302 		orr	r2, r2, #3
 1635 0096 1A70     		strb	r2, [r3]
1025:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
 1636              		.loc 1 1025 0
 1637 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1028:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1638              		.loc 1 1028 0
 1639              	@ 1028 ".\Generated_Source\PSoC5\cyPm.c" 1
 1640 009a 00BF     		NOP
 1641              	
 1642              	@ 0 "" 2
1029:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1643              		.loc 1 1029 0
 1644              	@ 1029 ".\Generated_Source\PSoC5\cyPm.c" 1
 1645 009c 00BF     		NOP
 1646              	
 1647              	@ 0 "" 2
1032:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 1648              		.loc 1 1032 0
 1649              	@ 1032 ".\Generated_Source\PSoC5\cyPm.c" 1
 1650 009e 30BF     		WFI 
 1651              	
 1652              	@ 0 "" 2
1037:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
 1653              		.loc 1 1037 0
 1654              		.thumb
 1655 00a0 114B     		ldr	r3, .L100+12
 1656 00a2 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 1657 00a6 012B     		cmp	r3, #1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 68


 1658 00a8 08D0     		beq	.L99
1039:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
 1659              		.loc 1 1039 0
 1660 00aa 104B     		ldr	r3, .L100+16
 1661 00ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1040:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.imoActFreq;
 1662              		.loc 1 1040 0
 1663 00ae 0E49     		ldr	r1, .L100+12
 1664 00b0 91F82C10 		ldrb	r1, [r1, #44]	@ zero_extendqisi2
1039:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
 1665              		.loc 1 1039 0
 1666 00b4 02F0F802 		and	r2, r2, #248
 1667 00b8 0A43     		orrs	r2, r2, r1
 1668 00ba 1A70     		strb	r2, [r3]
 1669              	.L99:
1057:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSlpRestore();
 1670              		.loc 1 1057 0
 1671 00bc FFF7FEFF 		bl	CyPmHibSlpRestore
 1672              	.LVL72:
1079:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1673              		.loc 1 1079 0
 1674 00c0 094B     		ldr	r3, .L100+12
 1675 00c2 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1676 00c4 074A     		ldr	r2, .L100+8
 1677 00c6 1170     		strb	r1, [r2]
1080:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 1678              		.loc 1 1080 0
 1679 00c8 5979     		ldrb	r1, [r3, #5]	@ zero_extendqisi2
 1680 00ca 0132     		adds	r2, r2, #1
 1681 00cc 1170     		strb	r1, [r2]
1081:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1682              		.loc 1 1081 0
 1683 00ce 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1684 00d0 074B     		ldr	r3, .L100+20
 1685 00d2 1A70     		strb	r2, [r3]
1084:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1686              		.loc 1 1084 0
 1687 00d4 2846     		mov	r0, r5
 1688 00d6 FFF7FEFF 		bl	CyExitCriticalSection
 1689              	.LVL73:
 1690 00da 70BD     		pop	{r4, r5, r6, pc}
 1691              	.LVL74:
 1692              	.L101:
 1693              		.align	2
 1694              	.L100:
 1695 00dc 93430040 		.word	1073759123
 1696 00e0 83460040 		.word	1073759875
 1697 00e4 98430040 		.word	1073759128
 1698 00e8 00000000 		.word	.LANCHOR0
 1699 00ec 00420040 		.word	1073758720
 1700 00f0 9A430040 		.word	1073759130
 1701              		.cfi_endproc
 1702              	.LFE3:
 1703              		.size	CyPmSleep, .-CyPmSleep
 1704              		.section	.text.CyPmHibernateEx,"ax",%progbits
 1705              		.align	2
 1706              		.global	CyPmHibernateEx
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 69


 1707              		.thumb
 1708              		.thumb_func
 1709              		.type	CyPmHibernateEx, %function
 1710              	CyPmHibernateEx:
 1711              	.LFB5:
1197:.\Generated_Source\PSoC5/cyPm.c **** {
 1712              		.loc 1 1197 0
 1713              		.cfi_startproc
 1714              		@ args = 0, pretend = 0, frame = 0
 1715              		@ frame_needed = 0, uses_anonymous_args = 0
 1716              	.LVL75:
 1717 0000 38B5     		push	{r3, r4, r5, lr}
 1718              		.cfi_def_cfa_offset 16
 1719              		.cfi_offset 3, -16
 1720              		.cfi_offset 4, -12
 1721              		.cfi_offset 5, -8
 1722              		.cfi_offset 14, -4
 1723 0002 0446     		mov	r4, r0
1201:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1724              		.loc 1 1201 0
 1725 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1726              	.LVL76:
 1727 0008 0546     		mov	r5, r0
 1728              	.LVL77:
1209:.\Generated_Source\PSoC5/cyPm.c ****         if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 1729              		.loc 1 1209 0
 1730 000a 334B     		ldr	r3, .L110
 1731 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1732 000e 13F0080F 		tst	r3, #8
 1733 0012 21D1     		bne	.L103
1212:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 1734              		.loc 1 1212 0
 1735 0014 314B     		ldr	r3, .L110+4
 1736 0016 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1737 0018 02F01F02 		and	r2, r2, #31
 1738 001c 1A70     		strb	r2, [r3]
1224:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibSaveSet();
 1739              		.loc 1 1224 0
 1740 001e FFF7FEFF 		bl	CyPmHibSaveSet
 1741              	.LVL78:
1230:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 1742              		.loc 1 1230 0
 1743 0022 2F4A     		ldr	r2, .L110+8
 1744 0024 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1745 0026 2F4B     		ldr	r3, .L110+12
 1746 0028 1971     		strb	r1, [r3, #4]
1231:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = ((uint8) (wakeupSource >> 4u) & CY_PM_WAKEUP_PICU);
 1747              		.loc 1 1231 0
 1748 002a C4F30711 		ubfx	r1, r4, #4, #8
 1749 002e 01F00401 		and	r1, r1, #4
 1750 0032 C9B2     		uxtb	r1, r1
 1751 0034 1170     		strb	r1, [r2]
1234:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 1752              		.loc 1 1234 0
 1753 0036 0132     		adds	r2, r2, #1
 1754 0038 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1755 003a 5971     		strb	r1, [r3, #5]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 70


1235:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 1756              		.loc 1 1235 0
 1757 003c 04F00F04 		and	r4, r4, #15
 1758 0040 1470     		strb	r4, [r2]
1237:.\Generated_Source\PSoC5/cyPm.c ****     cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 1759              		.loc 1 1237 0
 1760 0042 0132     		adds	r2, r2, #1
 1761 0044 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1762 0046 9971     		strb	r1, [r3, #6]
1238:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = 0x00u;
 1763              		.loc 1 1238 0
 1764 0048 0023     		movs	r3, #0
 1765 004a 1370     		strb	r3, [r2]
1242:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 1766              		.loc 1 1242 0
 1767 004c 264B     		ldr	r3, .L110+16
 1768 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 0050 13F0070F 		tst	r3, #7
 1770 0054 03D0     		beq	.L104
 1771 0056 07E0     		b	.L109
 1772              	.LVL79:
 1773              	.L103:
1219:.\Generated_Source\PSoC5/cyPm.c ****             CyExitCriticalSection(interruptState);
 1774              		.loc 1 1219 0
 1775 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1776              	.LVL80:
1221:.\Generated_Source\PSoC5/cyPm.c ****             return;
 1777              		.loc 1 1221 0
 1778 005c 38BD     		pop	{r3, r4, r5, pc}
 1779              	.LVL81:
 1780              	.L104:
1245:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
 1781              		.loc 1 1245 0
 1782 005e 0122     		movs	r2, #1
 1783 0060 204B     		ldr	r3, .L110+12
 1784 0062 83F82D20 		strb	r2, [r3, #45]
 1785 0066 0DE0     		b	.L107
 1786              	.L109:
1250:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 1787              		.loc 1 1250 0
 1788 0068 1E4A     		ldr	r2, .L110+12
 1789 006a 0023     		movs	r3, #0
 1790 006c 82F82D30 		strb	r3, [r2, #45]
1253:.\Generated_Source\PSoC5/cyPm.c ****         cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 1791              		.loc 1 1253 0
 1792 0070 1D4B     		ldr	r3, .L110+16
 1793 0072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1794 0074 01F00701 		and	r1, r1, #7
 1795 0078 82F82C10 		strb	r1, [r2, #44]
1256:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG &= ((uint8) (~CY_PM_FASTCLK_IMO_CR_FREQ_MASK));
 1796              		.loc 1 1256 0
 1797 007c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1798 007e 02F0F802 		and	r2, r2, #248
 1799 0082 1A70     		strb	r2, [r3]
 1800              	.L107:
1261:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_MODE_CSR_REG = (CY_PM_MODE_CSR_REG & ((uint8) (~CY_PM_MODE_CSR_MASK))) | CY_PM_MODE_CSR_H
 1801              		.loc 1 1261 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 71


 1802 0084 144B     		ldr	r3, .L110
 1803 0086 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1804 0088 02F0F802 		and	r2, r2, #248
 1805 008c 42F00402 		orr	r2, r2, #4
 1806 0090 1A70     		strb	r2, [r3]
1264:.\Generated_Source\PSoC5/cyPm.c ****     (void) CY_PM_MODE_CSR_REG;
 1807              		.loc 1 1264 0
 1808 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1267:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1809              		.loc 1 1267 0
 1810              	@ 1267 ".\Generated_Source\PSoC5\cyPm.c" 1
 1811 0094 00BF     		NOP
 1812              	
 1813              	@ 0 "" 2
1268:.\Generated_Source\PSoC5/cyPm.c ****     CY_NOP;
 1814              		.loc 1 1268 0
 1815              	@ 1268 ".\Generated_Source\PSoC5\cyPm.c" 1
 1816 0096 00BF     		NOP
 1817              	
 1818              	@ 0 "" 2
1271:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WFI;
 1819              		.loc 1 1271 0
 1820              	@ 1271 ".\Generated_Source\PSoC5\cyPm.c" 1
 1821 0098 30BF     		WFI 
 1822              	
 1823              	@ 0 "" 2
1278:.\Generated_Source\PSoC5/cyPm.c ****     if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
 1824              		.loc 1 1278 0
 1825              		.thumb
 1826 009a 124B     		ldr	r3, .L110+12
 1827 009c 93F82D30 		ldrb	r3, [r3, #45]	@ zero_extendqisi2
 1828 00a0 012B     		cmp	r3, #1
 1829 00a2 08D0     		beq	.L108
1280:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
 1830              		.loc 1 1280 0
 1831 00a4 104B     		ldr	r3, .L110+16
 1832 00a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1281:.\Generated_Source\PSoC5/cyPm.c ****                                     cyPmBackup.imoActFreq;
 1833              		.loc 1 1281 0
 1834 00a8 0E49     		ldr	r1, .L110+12
 1835 00aa 91F82C10 		ldrb	r1, [r1, #44]	@ zero_extendqisi2
1280:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ((uint8)(~CY_PM_FASTCLK_IMO_CR_FREQ
 1836              		.loc 1 1280 0
 1837 00ae 02F0F802 		and	r2, r2, #248
 1838 00b2 0A43     		orrs	r2, r2, r1
 1839 00b4 1A70     		strb	r2, [r3]
 1840              	.L108:
1286:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibRestore();
 1841              		.loc 1 1286 0
 1842 00b6 FFF7FEFF 		bl	CyPmHibRestore
 1843              	.LVL82:
1289:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 1844              		.loc 1 1289 0
 1845 00ba 0A4B     		ldr	r3, .L110+12
 1846 00bc 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 1847 00be 084A     		ldr	r2, .L110+8
 1848 00c0 1170     		strb	r1, [r2]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 72


1290:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 1849              		.loc 1 1290 0
 1850 00c2 5979     		ldrb	r1, [r3, #5]	@ zero_extendqisi2
 1851 00c4 0132     		adds	r2, r2, #1
 1852 00c6 1170     		strb	r1, [r2]
1291:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 1853              		.loc 1 1291 0
 1854 00c8 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1855 00ca 084B     		ldr	r3, .L110+20
 1856 00cc 1A70     		strb	r2, [r3]
1294:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1857              		.loc 1 1294 0
 1858 00ce 2846     		mov	r0, r5
 1859 00d0 FFF7FEFF 		bl	CyExitCriticalSection
 1860              	.LVL83:
 1861 00d4 38BD     		pop	{r3, r4, r5, pc}
 1862              	.LVL84:
 1863              	.L111:
 1864 00d6 00BF     		.align	2
 1865              	.L110:
 1866 00d8 93430040 		.word	1073759123
 1867 00dc 83460040 		.word	1073759875
 1868 00e0 98430040 		.word	1073759128
 1869 00e4 00000000 		.word	.LANCHOR0
 1870 00e8 00420040 		.word	1073758720
 1871 00ec 9A430040 		.word	1073759130
 1872              		.cfi_endproc
 1873              	.LFE5:
 1874              		.size	CyPmHibernateEx, .-CyPmHibernateEx
 1875              		.section	.text.CyPmHibernate,"ax",%progbits
 1876              		.align	2
 1877              		.global	CyPmHibernate
 1878              		.thumb
 1879              		.thumb_func
 1880              		.type	CyPmHibernate, %function
 1881              	CyPmHibernate:
 1882              	.LFB4:
1131:.\Generated_Source\PSoC5/cyPm.c **** {
 1883              		.loc 1 1131 0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
 1887 0000 08B5     		push	{r3, lr}
 1888              		.cfi_def_cfa_offset 8
 1889              		.cfi_offset 3, -8
 1890              		.cfi_offset 14, -4
1132:.\Generated_Source\PSoC5/cyPm.c ****     CyPmHibernateEx(CY_PM_HIB_SRC_PICU);
 1891              		.loc 1 1132 0
 1892 0002 4020     		movs	r0, #64
 1893 0004 FFF7FEFF 		bl	CyPmHibernateEx
 1894              	.LVL85:
 1895 0008 08BD     		pop	{r3, pc}
 1896              		.cfi_endproc
 1897              	.LFE4:
 1898              		.size	CyPmHibernate, .-CyPmHibernate
 1899 000a 00BF     		.section	.text.CyPmReadStatus,"ax",%progbits
 1900              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 73


 1901              		.global	CyPmReadStatus
 1902              		.thumb
 1903              		.thumb_func
 1904              		.type	CyPmReadStatus, %function
 1905              	CyPmReadStatus:
 1906              	.LFB6:
1328:.\Generated_Source\PSoC5/cyPm.c **** {
 1907              		.loc 1 1328 0
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 0
 1910              		@ frame_needed = 0, uses_anonymous_args = 0
 1911              	.LVL86:
 1912 0000 38B5     		push	{r3, r4, r5, lr}
 1913              		.cfi_def_cfa_offset 16
 1914              		.cfi_offset 3, -16
 1915              		.cfi_offset 4, -12
 1916              		.cfi_offset 5, -8
 1917              		.cfi_offset 14, -4
 1918 0002 0546     		mov	r5, r0
1334:.\Generated_Source\PSoC5/cyPm.c ****     interruptState = CyEnterCriticalSection();
 1919              		.loc 1 1334 0
 1920 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1921              	.LVL87:
1337:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus |= CY_PM_INT_SR_REG;
 1922              		.loc 1 1337 0
 1923 0008 074B     		ldr	r3, .L114
 1924 000a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1925 000c 074B     		ldr	r3, .L114+4
 1926 000e 93F84220 		ldrb	r2, [r3, #66]	@ zero_extendqisi2
 1927 0012 0A43     		orrs	r2, r2, r1
1338:.\Generated_Source\PSoC5/cyPm.c ****     tmpStatus = interruptStatus & (CY_PM_FTW_INT | CY_PM_CTW_INT | CY_PM_ONEPPS_INT);
 1928              		.loc 1 1338 0
 1929 0014 02F00704 		and	r4, r2, #7
 1930              	.LVL88:
1339:.\Generated_Source\PSoC5/cyPm.c ****     interruptStatus &= ((uint8)(~mask));
 1931              		.loc 1 1339 0
 1932 0018 22EA0502 		bic	r2, r2, r5
 1933 001c 83F84220 		strb	r2, [r3, #66]
1342:.\Generated_Source\PSoC5/cyPm.c ****     CyExitCriticalSection(interruptState);
 1934              		.loc 1 1342 0
 1935 0020 FFF7FEFF 		bl	CyExitCriticalSection
 1936              	.LVL89:
1345:.\Generated_Source\PSoC5/cyPm.c **** }
 1937              		.loc 1 1345 0
 1938 0024 2046     		mov	r0, r4
 1939 0026 38BD     		pop	{r3, r4, r5, pc}
 1940              	.LVL90:
 1941              	.L115:
 1942              		.align	2
 1943              	.L114:
 1944 0028 90430040 		.word	1073759120
 1945 002c 00000000 		.word	.LANCHOR0
 1946              		.cfi_endproc
 1947              	.LFE6:
 1948              		.size	CyPmReadStatus, .-CyPmReadStatus
 1949              		.section	.text.CyPmCtwSetInterval,"ax",%progbits
 1950              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 74


 1951              		.global	CyPmCtwSetInterval
 1952              		.thumb
 1953              		.thumb_func
 1954              		.type	CyPmCtwSetInterval, %function
 1955              	CyPmCtwSetInterval:
 1956              	.LFB9:
1523:.\Generated_Source\PSoC5/cyPm.c **** {
 1957              		.loc 1 1523 0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961              	.LVL91:
 1962 0000 38B5     		push	{r3, r4, r5, lr}
 1963              		.cfi_def_cfa_offset 16
 1964              		.cfi_offset 3, -16
 1965              		.cfi_offset 4, -12
 1966              		.cfi_offset 5, -8
 1967              		.cfi_offset 14, -4
 1968 0002 0546     		mov	r5, r0
1525:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_IE));
 1969              		.loc 1 1525 0
 1970 0004 134C     		ldr	r4, .L120
 1971 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1972 0008 03F0F703 		and	r3, r3, #247
 1973 000c 2370     		strb	r3, [r4]
1528:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start1K();
 1974              		.loc 1 1528 0
 1975 000e FFF7FEFF 		bl	CyILO_Start1K
 1976              	.LVL92:
1531:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_CTW_EN))
 1977              		.loc 1 1531 0
 1978 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1979 0014 13F0040F 		tst	r3, #4
 1980 0018 0FD0     		beq	.L117
1534:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
 1981              		.loc 1 1534 0
 1982 001a 0F4B     		ldr	r3, .L120+4
 1983 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1984 001e DBB2     		uxtb	r3, r3
 1985 0020 AB42     		cmp	r3, r5
 1986 0022 16D0     		beq	.L116
1537:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_CTW_EN));
 1987              		.loc 1 1537 0
 1988 0024 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1989 0026 02F0FB02 		and	r2, r2, #251
 1990 002a 2270     		strb	r2, [r4]
1538:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
 1991              		.loc 1 1538 0
 1992 002c 0A4A     		ldr	r2, .L120+4
 1993 002e 1570     		strb	r5, [r2]
1539:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
 1994              		.loc 1 1539 0
 1995 0030 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1996 0032 42F00402 		orr	r2, r2, #4
 1997 0036 2270     		strb	r2, [r4]
 1998 0038 38BD     		pop	{r3, r4, r5, pc}
 1999              	.L117:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 75


1545:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG1_REG != ctwInterval)
 2000              		.loc 1 1545 0
 2001 003a 074B     		ldr	r3, .L120+4
 2002 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2003 003e DBB2     		uxtb	r3, r3
 2004 0040 AB42     		cmp	r3, r5
 2005 0042 01D0     		beq	.L119
1548:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG1_REG = ctwInterval;
 2006              		.loc 1 1548 0
 2007 0044 044B     		ldr	r3, .L120+4
 2008 0046 1D70     		strb	r5, [r3]
 2009              	.L119:
1552:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
 2010              		.loc 1 1552 0
 2011 0048 024B     		ldr	r3, .L120
 2012 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2013 004c 42F00402 		orr	r2, r2, #4
 2014 0050 1A70     		strb	r2, [r3]
 2015              	.L116:
 2016 0052 38BD     		pop	{r3, r4, r5, pc}
 2017              	.L121:
 2018              		.align	2
 2019              	.L120:
 2020 0054 82430040 		.word	1073759106
 2021 0058 81430040 		.word	1073759105
 2022              		.cfi_endproc
 2023              	.LFE9:
 2024              		.size	CyPmCtwSetInterval, .-CyPmCtwSetInterval
 2025              		.section	.text.CyPmOppsSet,"ax",%progbits
 2026              		.align	2
 2027              		.global	CyPmOppsSet
 2028              		.thumb
 2029              		.thumb_func
 2030              		.type	CyPmOppsSet, %function
 2031              	CyPmOppsSet:
 2032              	.LFB10:
1575:.\Generated_Source\PSoC5/cyPm.c **** {
 2033              		.loc 1 1575 0
 2034              		.cfi_startproc
 2035              		@ args = 0, pretend = 0, frame = 0
 2036              		@ frame_needed = 0, uses_anonymous_args = 0
 2037 0000 08B5     		push	{r3, lr}
 2038              		.cfi_def_cfa_offset 8
 2039              		.cfi_offset 3, -8
 2040              		.cfi_offset 14, -4
1577:.\Generated_Source\PSoC5/cyPm.c ****     if(0u == (CY_PM_SLOWCLK_X32_CR_REG & CY_PM_X32_CR_X32EN))
 2041              		.loc 1 1577 0
 2042 0002 084B     		ldr	r3, .L124
 2043 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2044 0006 13F0010F 		tst	r3, #1
 2045 000a 01D1     		bne	.L123
1580:.\Generated_Source\PSoC5/cyPm.c ****         CyXTAL_32KHZ_Start();
 2046              		.loc 1 1580 0
 2047 000c FFF7FEFF 		bl	CyXTAL_32KHZ_Start
 2048              	.LVL93:
 2049              	.L123:
1584:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_1PPS_IE));
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 76


 2050              		.loc 1 1584 0
 2051 0010 054B     		ldr	r3, .L124+4
 2052 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2053 0014 02F0DF02 		and	r2, r2, #223
 2054 0018 1A70     		strb	r2, [r3]
1587:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG |= CY_PM_1PPS_EN;
 2055              		.loc 1 1587 0
 2056 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2057 001c 42F01002 		orr	r2, r2, #16
 2058 0020 1A70     		strb	r2, [r3]
 2059 0022 08BD     		pop	{r3, pc}
 2060              	.L125:
 2061              		.align	2
 2062              	.L124:
 2063 0024 08430040 		.word	1073758984
 2064 0028 82430040 		.word	1073759106
 2065              		.cfi_endproc
 2066              	.LFE10:
 2067              		.size	CyPmOppsSet, .-CyPmOppsSet
 2068              		.section	.text.CyPmFtwSetInterval,"ax",%progbits
 2069              		.align	2
 2070              		.global	CyPmFtwSetInterval
 2071              		.thumb
 2072              		.thumb_func
 2073              		.type	CyPmFtwSetInterval, %function
 2074              	CyPmFtwSetInterval:
 2075              	.LFB11:
1612:.\Generated_Source\PSoC5/cyPm.c **** {
 2076              		.loc 1 1612 0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080              	.LVL94:
 2081 0000 38B5     		push	{r3, r4, r5, lr}
 2082              		.cfi_def_cfa_offset 16
 2083              		.cfi_offset 3, -16
 2084              		.cfi_offset 4, -12
 2085              		.cfi_offset 5, -8
 2086              		.cfi_offset 14, -4
 2087 0002 0546     		mov	r5, r0
1614:.\Generated_Source\PSoC5/cyPm.c ****     CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_IE));
 2088              		.loc 1 1614 0
 2089 0004 134C     		ldr	r4, .L130
 2090 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2091 0008 03F0FD03 		and	r3, r3, #253
 2092 000c 2370     		strb	r3, [r4]
1617:.\Generated_Source\PSoC5/cyPm.c ****     CyILO_Start100K();
 2093              		.loc 1 1617 0
 2094 000e FFF7FEFF 		bl	CyILO_Start100K
 2095              	.LVL95:
1620:.\Generated_Source\PSoC5/cyPm.c ****     if(0u != (CY_PM_TW_CFG2_REG & CY_PM_FTW_EN))
 2096              		.loc 1 1620 0
 2097 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2098 0014 13F0010F 		tst	r3, #1
 2099 0018 0FD0     		beq	.L127
1623:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
 2100              		.loc 1 1623 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 77


 2101 001a 0F4B     		ldr	r3, .L130+4
 2102 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2103 001e DBB2     		uxtb	r3, r3
 2104 0020 AB42     		cmp	r3, r5
 2105 0022 16D0     		beq	.L126
1626:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG &= ((uint8)(~CY_PM_FTW_EN));
 2106              		.loc 1 1626 0
 2107 0024 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 2108 0026 02F0FE02 		and	r2, r2, #254
 2109 002a 2270     		strb	r2, [r4]
1627:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
 2110              		.loc 1 1627 0
 2111 002c 0A4A     		ldr	r2, .L130+4
 2112 002e 1570     		strb	r5, [r2]
1628:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
 2113              		.loc 1 1628 0
 2114 0030 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 2115 0032 42F00102 		orr	r2, r2, #1
 2116 0036 2270     		strb	r2, [r4]
 2117 0038 38BD     		pop	{r3, r4, r5, pc}
 2118              	.L127:
1634:.\Generated_Source\PSoC5/cyPm.c ****         if(CY_PM_TW_CFG0_REG != ftwInterval)
 2119              		.loc 1 1634 0
 2120 003a 074B     		ldr	r3, .L130+4
 2121 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2122 003e DBB2     		uxtb	r3, r3
 2123 0040 AB42     		cmp	r3, r5
 2124 0042 01D0     		beq	.L129
1637:.\Generated_Source\PSoC5/cyPm.c ****             CY_PM_TW_CFG0_REG = ftwInterval;
 2125              		.loc 1 1637 0
 2126 0044 044B     		ldr	r3, .L130+4
 2127 0046 1D70     		strb	r5, [r3]
 2128              	.L129:
1641:.\Generated_Source\PSoC5/cyPm.c ****         CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
 2129              		.loc 1 1641 0
 2130 0048 024B     		ldr	r3, .L130
 2131 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2132 004c 42F00102 		orr	r2, r2, #1
 2133 0050 1A70     		strb	r2, [r3]
 2134              	.L126:
 2135 0052 38BD     		pop	{r3, r4, r5, pc}
 2136              	.L131:
 2137              		.align	2
 2138              	.L130:
 2139 0054 82430040 		.word	1073759106
 2140 0058 80430040 		.word	1073759104
 2141              		.cfi_endproc
 2142              	.LFE11:
 2143              		.size	CyPmFtwSetInterval, .-CyPmFtwSetInterval
 2144              		.section	.rodata
 2145              		.align	2
 2146              		.set	.LANCHOR1,. + 0
 2147              		.type	cyPmImoFreqReg2Mhz, %object
 2148              		.size	cyPmImoFreqReg2Mhz, 7
 2149              	cyPmImoFreqReg2Mhz:
 2150 0000 0C       		.byte	12
 2151 0001 06       		.byte	6
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 78


 2152 0002 18       		.byte	24
 2153 0003 03       		.byte	3
 2154 0004 30       		.byte	48
 2155 0005 3E       		.byte	62
 2156 0006 4A       		.byte	74
 2157 0007 00       		.space	1
 2158              	.LC0:
 2159 0008 02       		.byte	2
 2160 0009 01       		.byte	1
 2161 000a 03       		.byte	3
 2162 000b 00       		.byte	0
 2163 000c 04       		.byte	4
 2164 000d 05       		.byte	5
 2165 000e 06       		.byte	6
 2166 000f 00       		.bss
 2167              		.align	2
 2168              		.set	.LANCHOR0,. + 0
 2169              		.type	cyPmBackup, %object
 2170              		.size	cyPmBackup, 47
 2171              	cyPmBackup:
 2172 0000 00000000 		.space	47
 2172      00000000 
 2172      00000000 
 2172      00000000 
 2172      00000000 
 2173 002f 00       		.space	1
 2174              		.type	cyPmClockBackup, %object
 2175              		.size	cyPmClockBackup, 18
 2176              	cyPmClockBackup:
 2177 0030 00000000 		.space	18
 2177      00000000 
 2177      00000000 
 2177      00000000 
 2177      0000
 2178              		.type	interruptStatus.4855, %object
 2179              		.size	interruptStatus.4855, 1
 2180              	interruptStatus.4855:
 2181 0042 00       		.space	1
 2182 0043 00       		.text
 2183              	.Letext0:
 2184              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 2185              		.file 3 ".\\Generated_Source\\PSoC5\\cyPm.h"
 2186              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 2187              		.file 5 ".\\Generated_Source\\PSoC5\\CyFlash.h"
 2188              		.section	.debug_info,"",%progbits
 2189              	.Ldebug_info0:
 2190 0000 520A0000 		.4byte	0xa52
 2191 0004 0400     		.2byte	0x4
 2192 0006 00000000 		.4byte	.Ldebug_abbrev0
 2193 000a 04       		.byte	0x4
 2194 000b 01       		.uleb128 0x1
 2195 000c 27000000 		.4byte	.LASF114
 2196 0010 01       		.byte	0x1
 2197 0011 2A020000 		.4byte	.LASF115
 2198 0015 70020000 		.4byte	.LASF116
 2199 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2200 001d 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 79


 2201 0021 00000000 		.4byte	.Ldebug_line0
 2202 0025 02       		.uleb128 0x2
 2203 0026 01       		.byte	0x1
 2204 0027 06       		.byte	0x6
 2205 0028 AF010000 		.4byte	.LASF0
 2206 002c 02       		.uleb128 0x2
 2207 002d 01       		.byte	0x1
 2208 002e 08       		.byte	0x8
 2209 002f 1A050000 		.4byte	.LASF1
 2210 0033 02       		.uleb128 0x2
 2211 0034 02       		.byte	0x2
 2212 0035 05       		.byte	0x5
 2213 0036 53050000 		.4byte	.LASF2
 2214 003a 02       		.uleb128 0x2
 2215 003b 02       		.byte	0x2
 2216 003c 07       		.byte	0x7
 2217 003d 7F030000 		.4byte	.LASF3
 2218 0041 02       		.uleb128 0x2
 2219 0042 04       		.byte	0x4
 2220 0043 05       		.byte	0x5
 2221 0044 E8010000 		.4byte	.LASF4
 2222 0048 02       		.uleb128 0x2
 2223 0049 04       		.byte	0x4
 2224 004a 07       		.byte	0x7
 2225 004b F0020000 		.4byte	.LASF5
 2226 004f 02       		.uleb128 0x2
 2227 0050 08       		.byte	0x8
 2228 0051 05       		.byte	0x5
 2229 0052 A1010000 		.4byte	.LASF6
 2230 0056 02       		.uleb128 0x2
 2231 0057 08       		.byte	0x8
 2232 0058 07       		.byte	0x7
 2233 0059 1E010000 		.4byte	.LASF7
 2234 005d 03       		.uleb128 0x3
 2235 005e 04       		.byte	0x4
 2236 005f 05       		.byte	0x5
 2237 0060 696E7400 		.ascii	"int\000"
 2238 0064 02       		.uleb128 0x2
 2239 0065 04       		.byte	0x4
 2240 0066 07       		.byte	0x7
 2241 0067 C2020000 		.4byte	.LASF8
 2242 006b 04       		.uleb128 0x4
 2243 006c 03020000 		.4byte	.LASF9
 2244 0070 02       		.byte	0x2
 2245 0071 B4       		.byte	0xb4
 2246 0072 2C000000 		.4byte	0x2c
 2247 0076 04       		.uleb128 0x4
 2248 0077 14000000 		.4byte	.LASF10
 2249 007b 02       		.byte	0x2
 2250 007c B5       		.byte	0xb5
 2251 007d 3A000000 		.4byte	0x3a
 2252 0081 04       		.uleb128 0x4
 2253 0082 4A020000 		.4byte	.LASF11
 2254 0086 02       		.byte	0x2
 2255 0087 B6       		.byte	0xb6
 2256 0088 48000000 		.4byte	0x48
 2257 008c 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 80


 2258 008d 04       		.byte	0x4
 2259 008e 04       		.byte	0x4
 2260 008f BB040000 		.4byte	.LASF12
 2261 0093 02       		.uleb128 0x2
 2262 0094 08       		.byte	0x8
 2263 0095 04       		.byte	0x4
 2264 0096 23020000 		.4byte	.LASF13
 2265 009a 02       		.uleb128 0x2
 2266 009b 01       		.byte	0x1
 2267 009c 08       		.byte	0x8
 2268 009d 7D050000 		.4byte	.LASF14
 2269 00a1 05       		.uleb128 0x5
 2270 00a2 9D060000 		.4byte	.LASF15
 2271 00a6 02       		.byte	0x2
 2272 00a7 5601     		.2byte	0x156
 2273 00a9 48000000 		.4byte	0x48
 2274 00ad 05       		.uleb128 0x5
 2275 00ae 02050000 		.4byte	.LASF16
 2276 00b2 02       		.byte	0x2
 2277 00b3 5E01     		.2byte	0x15e
 2278 00b5 B9000000 		.4byte	0xb9
 2279 00b9 06       		.uleb128 0x6
 2280 00ba 6B000000 		.4byte	0x6b
 2281 00be 02       		.uleb128 0x2
 2282 00bf 04       		.byte	0x4
 2283 00c0 07       		.byte	0x7
 2284 00c1 34040000 		.4byte	.LASF17
 2285 00c5 07       		.uleb128 0x7
 2286 00c6 09030000 		.4byte	.LASF34
 2287 00ca 12       		.byte	0x12
 2288 00cb 03       		.byte	0x3
 2289 00cc F9       		.byte	0xf9
 2290 00cd 91010000 		.4byte	0x191
 2291 00d1 08       		.uleb128 0x8
 2292 00d2 60040000 		.4byte	.LASF18
 2293 00d6 03       		.byte	0x3
 2294 00d7 FC       		.byte	0xfc
 2295 00d8 6B000000 		.4byte	0x6b
 2296 00dc 00       		.byte	0
 2297 00dd 08       		.uleb128 0x8
 2298 00de 67040000 		.4byte	.LASF19
 2299 00e2 03       		.byte	0x3
 2300 00e3 FD       		.byte	0xfd
 2301 00e4 6B000000 		.4byte	0x6b
 2302 00e8 01       		.byte	0x1
 2303 00e9 08       		.uleb128 0x8
 2304 00ea CD000000 		.4byte	.LASF20
 2305 00ee 03       		.byte	0x3
 2306 00ef FE       		.byte	0xfe
 2307 00f0 6B000000 		.4byte	0x6b
 2308 00f4 02       		.byte	0x2
 2309 00f5 08       		.uleb128 0x8
 2310 00f6 E8020000 		.4byte	.LASF21
 2311 00fa 03       		.byte	0x3
 2312 00fb FF       		.byte	0xff
 2313 00fc 6B000000 		.4byte	0x6b
 2314 0100 03       		.byte	0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 81


 2315 0101 09       		.uleb128 0x9
 2316 0102 5E010000 		.4byte	.LASF22
 2317 0106 03       		.byte	0x3
 2318 0107 0001     		.2byte	0x100
 2319 0109 6B000000 		.4byte	0x6b
 2320 010d 04       		.byte	0x4
 2321 010e 09       		.uleb128 0x9
 2322 010f A6060000 		.4byte	.LASF23
 2323 0113 03       		.byte	0x3
 2324 0114 0101     		.2byte	0x101
 2325 0116 6B000000 		.4byte	0x6b
 2326 011a 05       		.byte	0x5
 2327 011b 09       		.uleb128 0x9
 2328 011c F1060000 		.4byte	.LASF24
 2329 0120 03       		.byte	0x3
 2330 0121 0201     		.2byte	0x102
 2331 0123 6B000000 		.4byte	0x6b
 2332 0127 06       		.byte	0x6
 2333 0128 09       		.uleb128 0x9
 2334 0129 B1040000 		.4byte	.LASF25
 2335 012d 03       		.byte	0x3
 2336 012e 0301     		.2byte	0x103
 2337 0130 6B000000 		.4byte	0x6b
 2338 0134 07       		.byte	0x7
 2339 0135 09       		.uleb128 0x9
 2340 0136 02040000 		.4byte	.LASF26
 2341 013a 03       		.byte	0x3
 2342 013b 0401     		.2byte	0x104
 2343 013d 6B000000 		.4byte	0x6b
 2344 0141 08       		.byte	0x8
 2345 0142 09       		.uleb128 0x9
 2346 0143 E2010000 		.4byte	.LASF27
 2347 0147 03       		.byte	0x3
 2348 0148 0501     		.2byte	0x105
 2349 014a 6B000000 		.4byte	0x6b
 2350 014e 09       		.byte	0x9
 2351 014f 09       		.uleb128 0x9
 2352 0150 01010000 		.4byte	.LASF28
 2353 0154 03       		.byte	0x3
 2354 0155 0601     		.2byte	0x106
 2355 0157 6B000000 		.4byte	0x6b
 2356 015b 0A       		.byte	0xa
 2357 015c 09       		.uleb128 0x9
 2358 015d BB010000 		.4byte	.LASF29
 2359 0161 03       		.byte	0x3
 2360 0162 0701     		.2byte	0x107
 2361 0164 76000000 		.4byte	0x76
 2362 0168 0C       		.byte	0xc
 2363 0169 09       		.uleb128 0x9
 2364 016a 38050000 		.4byte	.LASF30
 2365 016e 03       		.byte	0x3
 2366 016f 0801     		.2byte	0x108
 2367 0171 6B000000 		.4byte	0x6b
 2368 0175 0E       		.byte	0xe
 2369 0176 09       		.uleb128 0x9
 2370 0177 51020000 		.4byte	.LASF31
 2371 017b 03       		.byte	0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 82


 2372 017c 0901     		.2byte	0x109
 2373 017e 6B000000 		.4byte	0x6b
 2374 0182 0F       		.byte	0xf
 2375 0183 09       		.uleb128 0x9
 2376 0184 20060000 		.4byte	.LASF32
 2377 0188 03       		.byte	0x3
 2378 0189 0A01     		.2byte	0x10a
 2379 018b 6B000000 		.4byte	0x6b
 2380 018f 10       		.byte	0x10
 2381 0190 00       		.byte	0
 2382 0191 05       		.uleb128 0x5
 2383 0192 65030000 		.4byte	.LASF33
 2384 0196 03       		.byte	0x3
 2385 0197 0C01     		.2byte	0x10c
 2386 0199 C5000000 		.4byte	0xc5
 2387 019d 0A       		.uleb128 0xa
 2388 019e 36030000 		.4byte	.LASF35
 2389 01a2 2F       		.byte	0x2f
 2390 01a3 03       		.byte	0x3
 2391 01a4 0F01     		.2byte	0x10f
 2392 01a6 AF020000 		.4byte	0x2af
 2393 01aa 09       		.uleb128 0x9
 2394 01ab 94010000 		.4byte	.LASF36
 2395 01af 03       		.byte	0x3
 2396 01b0 1101     		.2byte	0x111
 2397 01b2 6B000000 		.4byte	0x6b
 2398 01b6 00       		.byte	0
 2399 01b7 09       		.uleb128 0x9
 2400 01b8 47050000 		.4byte	.LASF37
 2401 01bc 03       		.byte	0x3
 2402 01bd 1201     		.2byte	0x112
 2403 01bf 6B000000 		.4byte	0x6b
 2404 01c3 01       		.byte	0x1
 2405 01c4 09       		.uleb128 0x9
 2406 01c5 6F050000 		.4byte	.LASF38
 2407 01c9 03       		.byte	0x3
 2408 01ca 1301     		.2byte	0x113
 2409 01cc 6B000000 		.4byte	0x6b
 2410 01d0 02       		.byte	0x2
 2411 01d1 09       		.uleb128 0x9
 2412 01d2 28040000 		.4byte	.LASF39
 2413 01d6 03       		.byte	0x3
 2414 01d7 1501     		.2byte	0x115
 2415 01d9 6B000000 		.4byte	0x6b
 2416 01dd 03       		.byte	0x3
 2417 01de 09       		.uleb128 0x9
 2418 01df C8030000 		.4byte	.LASF40
 2419 01e3 03       		.byte	0x3
 2420 01e4 1F01     		.2byte	0x11f
 2421 01e6 6B000000 		.4byte	0x6b
 2422 01ea 04       		.byte	0x4
 2423 01eb 09       		.uleb128 0x9
 2424 01ec D3030000 		.4byte	.LASF41
 2425 01f0 03       		.byte	0x3
 2426 01f1 2001     		.2byte	0x120
 2427 01f3 6B000000 		.4byte	0x6b
 2428 01f7 05       		.byte	0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 83


 2429 01f8 09       		.uleb128 0x9
 2430 01f9 DE030000 		.4byte	.LASF42
 2431 01fd 03       		.byte	0x3
 2432 01fe 2101     		.2byte	0x121
 2433 0200 6B000000 		.4byte	0x6b
 2434 0204 06       		.byte	0x6
 2435 0205 09       		.uleb128 0x9
 2436 0206 B5000000 		.4byte	.LASF43
 2437 020a 03       		.byte	0x3
 2438 020b 2301     		.2byte	0x123
 2439 020d 6B000000 		.4byte	0x6b
 2440 0211 07       		.byte	0x7
 2441 0212 09       		.uleb128 0x9
 2442 0213 C1000000 		.4byte	.LASF44
 2443 0217 03       		.byte	0x3
 2444 0218 2401     		.2byte	0x124
 2445 021a 6B000000 		.4byte	0x6b
 2446 021e 08       		.byte	0x8
 2447 021f 09       		.uleb128 0x9
 2448 0220 CF020000 		.4byte	.LASF45
 2449 0224 03       		.byte	0x3
 2450 0225 2601     		.2byte	0x126
 2451 0227 AF020000 		.4byte	0x2af
 2452 022b 09       		.byte	0x9
 2453 022c 09       		.uleb128 0x9
 2454 022d 02030000 		.4byte	.LASF46
 2455 0231 03       		.byte	0x3
 2456 0232 2901     		.2byte	0x129
 2457 0234 6B000000 		.4byte	0x6b
 2458 0238 25       		.byte	0x25
 2459 0239 09       		.uleb128 0x9
 2460 023a E8060000 		.4byte	.LASF47
 2461 023e 03       		.byte	0x3
 2462 023f 2A01     		.2byte	0x12a
 2463 0241 6B000000 		.4byte	0x6b
 2464 0245 26       		.byte	0x26
 2465 0246 09       		.uleb128 0x9
 2466 0247 47060000 		.4byte	.LASF48
 2467 024b 03       		.byte	0x3
 2468 024c 2B01     		.2byte	0x12b
 2469 024e 6B000000 		.4byte	0x6b
 2470 0252 27       		.byte	0x27
 2471 0253 09       		.uleb128 0x9
 2472 0254 55010000 		.4byte	.LASF49
 2473 0258 03       		.byte	0x3
 2474 0259 2C01     		.2byte	0x12c
 2475 025b 6B000000 		.4byte	0x6b
 2476 025f 28       		.byte	0x28
 2477 0260 09       		.uleb128 0x9
 2478 0261 7B010000 		.4byte	.LASF50
 2479 0265 03       		.byte	0x3
 2480 0266 2D01     		.2byte	0x12d
 2481 0268 6B000000 		.4byte	0x6b
 2482 026c 29       		.byte	0x29
 2483 026d 09       		.uleb128 0x9
 2484 026e E1040000 		.4byte	.LASF51
 2485 0272 03       		.byte	0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 84


 2486 0273 2E01     		.2byte	0x12e
 2487 0275 6B000000 		.4byte	0x6b
 2488 0279 2A       		.byte	0x2a
 2489 027a 09       		.uleb128 0x9
 2490 027b B6060000 		.4byte	.LASF52
 2491 027f 03       		.byte	0x3
 2492 0280 2F01     		.2byte	0x12f
 2493 0282 6B000000 		.4byte	0x6b
 2494 0286 2B       		.byte	0x2b
 2495 0287 09       		.uleb128 0x9
 2496 0288 B7020000 		.4byte	.LASF53
 2497 028c 03       		.byte	0x3
 2498 028d 3101     		.2byte	0x131
 2499 028f 6B000000 		.4byte	0x6b
 2500 0293 2C       		.byte	0x2c
 2501 0294 09       		.uleb128 0x9
 2502 0295 AA050000 		.4byte	.LASF54
 2503 0299 03       		.byte	0x3
 2504 029a 3201     		.2byte	0x132
 2505 029c 6B000000 		.4byte	0x6b
 2506 02a0 2D       		.byte	0x2d
 2507 02a1 09       		.uleb128 0x9
 2508 02a2 F6030000 		.4byte	.LASF55
 2509 02a6 03       		.byte	0x3
 2510 02a7 3401     		.2byte	0x134
 2511 02a9 6B000000 		.4byte	0x6b
 2512 02ad 2E       		.byte	0x2e
 2513 02ae 00       		.byte	0
 2514 02af 0B       		.uleb128 0xb
 2515 02b0 6B000000 		.4byte	0x6b
 2516 02b4 BF020000 		.4byte	0x2bf
 2517 02b8 0C       		.uleb128 0xc
 2518 02b9 BE000000 		.4byte	0xbe
 2519 02bd 1B       		.byte	0x1b
 2520 02be 00       		.byte	0
 2521 02bf 05       		.uleb128 0x5
 2522 02c0 DA000000 		.4byte	.LASF56
 2523 02c4 03       		.byte	0x3
 2524 02c5 3601     		.2byte	0x136
 2525 02c7 9D010000 		.4byte	0x19d
 2526 02cb 0D       		.uleb128 0xd
 2527 02cc 5D050000 		.4byte	.LASF57
 2528 02d0 01       		.byte	0x1
 2529 02d1 8406     		.2byte	0x684
 2530 02d3 00000000 		.4byte	.LFB12
 2531 02d7 FC010000 		.4byte	.LFE12-.LFB12
 2532 02db 01       		.uleb128 0x1
 2533 02dc 9C       		.byte	0x9c
 2534 02dd 0D       		.uleb128 0xd
 2535 02de A3000000 		.4byte	.LASF58
 2536 02e2 01       		.byte	0x1
 2537 02e3 0707     		.2byte	0x707
 2538 02e5 00000000 		.4byte	.LFB13
 2539 02e9 D4000000 		.4byte	.LFE13-.LFB13
 2540 02ed 01       		.uleb128 0x1
 2541 02ee 9C       		.byte	0x9c
 2542 02ef 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 85


 2543 02f0 35010000 		.4byte	.LASF59
 2544 02f4 01       		.byte	0x1
 2545 02f5 5407     		.2byte	0x754
 2546 02f7 00000000 		.4byte	.LFB14
 2547 02fb A0000000 		.4byte	.LFE14-.LFB14
 2548 02ff 01       		.uleb128 0x1
 2549 0300 9C       		.byte	0x9c
 2550 0301 21030000 		.4byte	0x321
 2551 0305 0F       		.uleb128 0xf
 2552 0306 30000000 		.4byte	.LVL0
 2553 030a D0080000 		.4byte	0x8d0
 2554 030e 0F       		.uleb128 0xf
 2555 030f 64000000 		.4byte	.LVL1
 2556 0313 D7080000 		.4byte	0x8d7
 2557 0317 0F       		.uleb128 0xf
 2558 0318 84000000 		.4byte	.LVL2
 2559 031c DE080000 		.4byte	0x8de
 2560 0320 00       		.byte	0
 2561 0321 0E       		.uleb128 0xe
 2562 0322 70060000 		.4byte	.LASF60
 2563 0326 01       		.byte	0x1
 2564 0327 5B05     		.2byte	0x55b
 2565 0329 00000000 		.4byte	.LFB7
 2566 032d 8C000000 		.4byte	.LFE7-.LFB7
 2567 0331 01       		.uleb128 0x1
 2568 0332 9C       		.byte	0x9c
 2569 0333 5D030000 		.4byte	0x35d
 2570 0337 10       		.uleb128 0x10
 2571 0338 1C000000 		.4byte	.LVL3
 2572 033c E5080000 		.4byte	0x8e5
 2573 0340 4A030000 		.4byte	0x34a
 2574 0344 11       		.uleb128 0x11
 2575 0345 01       		.uleb128 0x1
 2576 0346 50       		.byte	0x50
 2577 0347 01       		.uleb128 0x1
 2578 0348 31       		.byte	0x31
 2579 0349 00       		.byte	0
 2580 034a 0F       		.uleb128 0xf
 2581 034b 58000000 		.4byte	.LVL4
 2582 034f EF020000 		.4byte	0x2ef
 2583 0353 0F       		.uleb128 0xf
 2584 0354 5C000000 		.4byte	.LVL5
 2585 0358 CB020000 		.4byte	0x2cb
 2586 035c 00       		.byte	0
 2587 035d 0E       		.uleb128 0xe
 2588 035e F1010000 		.4byte	.LASF61
 2589 0362 01       		.byte	0x1
 2590 0363 9307     		.2byte	0x793
 2591 0365 00000000 		.4byte	.LFB15
 2592 0369 48000000 		.4byte	.LFE15-.LFB15
 2593 036d 01       		.uleb128 0x1
 2594 036e 9C       		.byte	0x9c
 2595 036f 8F030000 		.4byte	0x38f
 2596 0373 0F       		.uleb128 0xf
 2597 0374 1A000000 		.4byte	.LVL6
 2598 0378 FA080000 		.4byte	0x8fa
 2599 037c 0F       		.uleb128 0xf
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 86


 2600 037d 32000000 		.4byte	.LVL7
 2601 0381 10090000 		.4byte	0x910
 2602 0385 0F       		.uleb128 0xf
 2603 0386 40000000 		.4byte	.LVL8
 2604 038a 26090000 		.4byte	0x926
 2605 038e 00       		.byte	0
 2606 038f 0E       		.uleb128 0xe
 2607 0390 61020000 		.4byte	.LASF62
 2608 0394 01       		.byte	0x1
 2609 0395 B505     		.2byte	0x5b5
 2610 0397 00000000 		.4byte	.LFB8
 2611 039b 58000000 		.4byte	.LFE8-.LFB8
 2612 039f 01       		.uleb128 0x1
 2613 03a0 9C       		.byte	0x9c
 2614 03a1 D3030000 		.4byte	0x3d3
 2615 03a5 0F       		.uleb128 0xf
 2616 03a6 06000000 		.4byte	.LVL9
 2617 03aa 5D030000 		.4byte	0x35d
 2618 03ae 0F       		.uleb128 0xf
 2619 03af 0A000000 		.4byte	.LVL10
 2620 03b3 DD020000 		.4byte	0x2dd
 2621 03b7 0F       		.uleb128 0xf
 2622 03b8 16000000 		.4byte	.LVL11
 2623 03bc 2D090000 		.4byte	0x92d
 2624 03c0 0F       		.uleb128 0xf
 2625 03c1 22000000 		.4byte	.LVL12
 2626 03c5 34090000 		.4byte	0x934
 2627 03c9 0F       		.uleb128 0xf
 2628 03ca 2A000000 		.4byte	.LVL13
 2629 03ce E5080000 		.4byte	0x8e5
 2630 03d2 00       		.byte	0
 2631 03d3 12       		.uleb128 0x12
 2632 03d4 0C040000 		.4byte	.LASF63
 2633 03d8 01       		.byte	0x1
 2634 03d9 54       		.byte	0x54
 2635 03da 00000000 		.4byte	.LFB0
 2636 03de 18020000 		.4byte	.LFE0-.LFB0
 2637 03e2 01       		.uleb128 0x1
 2638 03e3 9C       		.byte	0x9c
 2639 03e4 F2040000 		.4byte	0x4f2
 2640 03e8 10       		.uleb128 0x10
 2641 03e9 3A000000 		.4byte	.LVL14
 2642 03ed 3B090000 		.4byte	0x93b
 2643 03f1 FC030000 		.4byte	0x3fc
 2644 03f5 11       		.uleb128 0x11
 2645 03f6 01       		.uleb128 0x1
 2646 03f7 50       		.byte	0x50
 2647 03f8 02       		.uleb128 0x2
 2648 03f9 08       		.byte	0x8
 2649 03fa 37       		.byte	0x37
 2650 03fb 00       		.byte	0
 2651 03fc 10       		.uleb128 0x10
 2652 03fd 96000000 		.4byte	.LVL15
 2653 0401 4C090000 		.4byte	0x94c
 2654 0405 0F040000 		.4byte	0x40f
 2655 0409 11       		.uleb128 0x11
 2656 040a 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 87


 2657 040b 50       		.byte	0x50
 2658 040c 01       		.uleb128 0x1
 2659 040d 30       		.byte	0x30
 2660 040e 00       		.byte	0
 2661 040f 10       		.uleb128 0x10
 2662 0410 9E000000 		.4byte	.LVL16
 2663 0414 4C090000 		.4byte	0x94c
 2664 0418 22040000 		.4byte	0x422
 2665 041c 11       		.uleb128 0x11
 2666 041d 01       		.uleb128 0x1
 2667 041e 50       		.byte	0x50
 2668 041f 01       		.uleb128 0x1
 2669 0420 32       		.byte	0x32
 2670 0421 00       		.byte	0
 2671 0422 10       		.uleb128 0x10
 2672 0423 A6000000 		.4byte	.LVL17
 2673 0427 4C090000 		.4byte	0x94c
 2674 042b 35040000 		.4byte	0x435
 2675 042f 11       		.uleb128 0x11
 2676 0430 01       		.uleb128 0x1
 2677 0431 50       		.byte	0x50
 2678 0432 01       		.uleb128 0x1
 2679 0433 33       		.byte	0x33
 2680 0434 00       		.byte	0
 2681 0435 10       		.uleb128 0x10
 2682 0436 AE000000 		.4byte	.LVL18
 2683 043a 5D090000 		.4byte	0x95d
 2684 043e 48040000 		.4byte	0x448
 2685 0442 11       		.uleb128 0x11
 2686 0443 01       		.uleb128 0x1
 2687 0444 50       		.byte	0x50
 2688 0445 01       		.uleb128 0x1
 2689 0446 30       		.byte	0x30
 2690 0447 00       		.byte	0
 2691 0448 0F       		.uleb128 0xf
 2692 0449 C4000000 		.4byte	.LVL19
 2693 044d 6E090000 		.4byte	0x96e
 2694 0451 10       		.uleb128 0x10
 2695 0452 D4000000 		.4byte	.LVL20
 2696 0456 75090000 		.4byte	0x975
 2697 045a 64040000 		.4byte	0x464
 2698 045e 11       		.uleb128 0x11
 2699 045f 01       		.uleb128 0x1
 2700 0460 50       		.byte	0x50
 2701 0461 01       		.uleb128 0x1
 2702 0462 34       		.byte	0x34
 2703 0463 00       		.byte	0
 2704 0464 10       		.uleb128 0x10
 2705 0465 F4000000 		.4byte	.LVL21
 2706 0469 86090000 		.4byte	0x986
 2707 046d 77040000 		.4byte	0x477
 2708 0471 11       		.uleb128 0x11
 2709 0472 01       		.uleb128 0x1
 2710 0473 50       		.byte	0x50
 2711 0474 01       		.uleb128 0x1
 2712 0475 30       		.byte	0x30
 2713 0476 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 88


 2714 0477 10       		.uleb128 0x10
 2715 0478 FA000000 		.4byte	.LVL22
 2716 047c 97090000 		.4byte	0x997
 2717 0480 8A040000 		.4byte	0x48a
 2718 0484 11       		.uleb128 0x11
 2719 0485 01       		.uleb128 0x1
 2720 0486 50       		.byte	0x50
 2721 0487 01       		.uleb128 0x1
 2722 0488 36       		.byte	0x36
 2723 0489 00       		.byte	0
 2724 048a 10       		.uleb128 0x10
 2725 048b 22010000 		.4byte	.LVL23
 2726 048f A8090000 		.4byte	0x9a8
 2727 0493 9D040000 		.4byte	0x49d
 2728 0497 11       		.uleb128 0x11
 2729 0498 01       		.uleb128 0x1
 2730 0499 50       		.byte	0x50
 2731 049a 01       		.uleb128 0x1
 2732 049b 30       		.byte	0x30
 2733 049c 00       		.byte	0
 2734 049d 0F       		.uleb128 0xf
 2735 049e 58010000 		.4byte	.LVL24
 2736 04a2 B9090000 		.4byte	0x9b9
 2737 04a6 10       		.uleb128 0x10
 2738 04a7 6C010000 		.4byte	.LVL25
 2739 04ab C0090000 		.4byte	0x9c0
 2740 04af B9040000 		.4byte	0x4b9
 2741 04b3 11       		.uleb128 0x11
 2742 04b4 01       		.uleb128 0x1
 2743 04b5 50       		.byte	0x50
 2744 04b6 01       		.uleb128 0x1
 2745 04b7 30       		.byte	0x30
 2746 04b8 00       		.byte	0
 2747 04b9 10       		.uleb128 0x10
 2748 04ba 7A010000 		.4byte	.LVL26
 2749 04be 4C090000 		.4byte	0x94c
 2750 04c2 CC040000 		.4byte	0x4cc
 2751 04c6 11       		.uleb128 0x11
 2752 04c7 01       		.uleb128 0x1
 2753 04c8 50       		.byte	0x50
 2754 04c9 01       		.uleb128 0x1
 2755 04ca 30       		.byte	0x30
 2756 04cb 00       		.byte	0
 2757 04cc 10       		.uleb128 0x10
 2758 04cd 94010000 		.4byte	.LVL27
 2759 04d1 D1090000 		.4byte	0x9d1
 2760 04d5 DF040000 		.4byte	0x4df
 2761 04d9 11       		.uleb128 0x11
 2762 04da 01       		.uleb128 0x1
 2763 04db 50       		.byte	0x50
 2764 04dc 01       		.uleb128 0x1
 2765 04dd 30       		.byte	0x30
 2766 04de 00       		.byte	0
 2767 04df 0F       		.uleb128 0xf
 2768 04e0 A4010000 		.4byte	.LVL28
 2769 04e4 3B090000 		.4byte	0x93b
 2770 04e8 0F       		.uleb128 0xf
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 89


 2771 04e9 BA010000 		.4byte	.LVL29
 2772 04ed E2090000 		.4byte	0x9e2
 2773 04f1 00       		.byte	0
 2774 04f2 13       		.uleb128 0x13
 2775 04f3 0C010000 		.4byte	.LASF64
 2776 04f7 01       		.byte	0x1
 2777 04f8 1E01     		.2byte	0x11e
 2778 04fa 00000000 		.4byte	.LFB1
 2779 04fe 4C020000 		.4byte	.LFE1-.LFB1
 2780 0502 01       		.uleb128 0x1
 2781 0503 9C       		.byte	0x9c
 2782 0504 2E060000 		.4byte	0x62e
 2783 0508 14       		.uleb128 0x14
 2784 0509 40060000 		.4byte	.LASF65
 2785 050d 01       		.byte	0x1
 2786 050e 2001     		.2byte	0x120
 2787 0510 A1000000 		.4byte	0xa1
 2788 0514 10       		.byte	0x10
 2789 0515 15       		.uleb128 0x15
 2790 0516 6900     		.ascii	"i\000"
 2791 0518 01       		.byte	0x1
 2792 0519 2101     		.2byte	0x121
 2793 051b 76000000 		.4byte	0x76
 2794 051f 00000000 		.4byte	.LLST0
 2795 0523 16       		.uleb128 0x16
 2796 0524 E9030000 		.4byte	.LASF66
 2797 0528 01       		.byte	0x1
 2798 0529 2201     		.2byte	0x122
 2799 052b 76000000 		.4byte	0x76
 2800 052f 67000000 		.4byte	.LLST1
 2801 0533 17       		.uleb128 0x17
 2802 0534 4D040000 		.4byte	.LASF67
 2803 0538 01       		.byte	0x1
 2804 0539 2601     		.2byte	0x126
 2805 053b 3E060000 		.4byte	0x63e
 2806 053f 02       		.uleb128 0x2
 2807 0540 91       		.byte	0x91
 2808 0541 60       		.sleb128 -32
 2809 0542 0F       		.uleb128 0xf
 2810 0543 3A000000 		.4byte	.LVL31
 2811 0547 E9090000 		.4byte	0x9e9
 2812 054b 10       		.uleb128 0x10
 2813 054c 54000000 		.4byte	.LVL32
 2814 0550 FA090000 		.4byte	0x9fa
 2815 0554 5E050000 		.4byte	0x55e
 2816 0558 11       		.uleb128 0x11
 2817 0559 01       		.uleb128 0x1
 2818 055a 50       		.byte	0x50
 2819 055b 01       		.uleb128 0x1
 2820 055c 30       		.byte	0x30
 2821 055d 00       		.byte	0
 2822 055e 0F       		.uleb128 0xf
 2823 055f 74000000 		.4byte	.LVL35
 2824 0563 E9090000 		.4byte	0x9e9
 2825 0567 10       		.uleb128 0x10
 2826 0568 8A000000 		.4byte	.LVL39
 2827 056c 3B090000 		.4byte	0x93b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 90


 2828 0570 7B050000 		.4byte	0x57b
 2829 0574 11       		.uleb128 0x11
 2830 0575 01       		.uleb128 0x1
 2831 0576 50       		.byte	0x50
 2832 0577 02       		.uleb128 0x2
 2833 0578 08       		.byte	0x8
 2834 0579 37       		.byte	0x37
 2835 057a 00       		.byte	0
 2836 057b 0F       		.uleb128 0xf
 2837 057c AC000000 		.4byte	.LVL40
 2838 0580 C0090000 		.4byte	0x9c0
 2839 0584 0F       		.uleb128 0xf
 2840 0585 B6000000 		.4byte	.LVL41
 2841 0589 4C090000 		.4byte	0x94c
 2842 058d 10       		.uleb128 0x10
 2843 058e DA000000 		.4byte	.LVL42
 2844 0592 75090000 		.4byte	0x975
 2845 0596 A0050000 		.4byte	0x5a0
 2846 059a 11       		.uleb128 0x11
 2847 059b 01       		.uleb128 0x1
 2848 059c 50       		.byte	0x50
 2849 059d 01       		.uleb128 0x1
 2850 059e 38       		.byte	0x38
 2851 059f 00       		.byte	0
 2852 05a0 0F       		.uleb128 0xf
 2853 05a1 EE000000 		.4byte	.LVL43
 2854 05a5 75090000 		.4byte	0x975
 2855 05a9 10       		.uleb128 0x10
 2856 05aa 28010000 		.4byte	.LVL44
 2857 05ae 86090000 		.4byte	0x986
 2858 05b2 BC050000 		.4byte	0x5bc
 2859 05b6 11       		.uleb128 0x11
 2860 05b7 01       		.uleb128 0x1
 2861 05b8 50       		.byte	0x50
 2862 05b9 01       		.uleb128 0x1
 2863 05ba 30       		.byte	0x30
 2864 05bb 00       		.byte	0
 2865 05bc 0F       		.uleb128 0xf
 2866 05bd 32010000 		.4byte	.LVL45
 2867 05c1 A8090000 		.4byte	0x9a8
 2868 05c5 0F       		.uleb128 0xf
 2869 05c6 3E010000 		.4byte	.LVL46
 2870 05ca 0F0A0000 		.4byte	0xa0f
 2871 05ce 10       		.uleb128 0x10
 2872 05cf 70010000 		.4byte	.LVL47
 2873 05d3 160A0000 		.4byte	0xa16
 2874 05d7 E1050000 		.4byte	0x5e1
 2875 05db 11       		.uleb128 0x11
 2876 05dc 01       		.uleb128 0x1
 2877 05dd 50       		.byte	0x50
 2878 05de 01       		.uleb128 0x1
 2879 05df 30       		.byte	0x30
 2880 05e0 00       		.byte	0
 2881 05e1 10       		.uleb128 0x10
 2882 05e2 76010000 		.4byte	.LVL48
 2883 05e6 97090000 		.4byte	0x997
 2884 05ea F5050000 		.4byte	0x5f5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 91


 2885 05ee 11       		.uleb128 0x11
 2886 05ef 01       		.uleb128 0x1
 2887 05f0 50       		.byte	0x50
 2888 05f1 02       		.uleb128 0x2
 2889 05f2 08       		.byte	0x8
 2890 05f3 50       		.byte	0x50
 2891 05f4 00       		.byte	0
 2892 05f5 10       		.uleb128 0x10
 2893 05f6 88010000 		.4byte	.LVL51
 2894 05fa 97090000 		.4byte	0x997
 2895 05fe 09060000 		.4byte	0x609
 2896 0602 11       		.uleb128 0x11
 2897 0603 01       		.uleb128 0x1
 2898 0604 50       		.byte	0x50
 2899 0605 02       		.uleb128 0x2
 2900 0606 76       		.byte	0x76
 2901 0607 00       		.sleb128 0
 2902 0608 00       		.byte	0
 2903 0609 0F       		.uleb128 0xf
 2904 060a BE010000 		.4byte	.LVL55
 2905 060e C0090000 		.4byte	0x9c0
 2906 0612 0F       		.uleb128 0xf
 2907 0613 C8010000 		.4byte	.LVL56
 2908 0617 4C090000 		.4byte	0x94c
 2909 061b 0F       		.uleb128 0xf
 2910 061c DE010000 		.4byte	.LVL57
 2911 0620 2B0A0000 		.4byte	0xa2b
 2912 0624 0F       		.uleb128 0xf
 2913 0625 F6010000 		.4byte	.LVL60
 2914 0629 D1090000 		.4byte	0x9d1
 2915 062d 00       		.byte	0
 2916 062e 0B       		.uleb128 0xb
 2917 062f 6B000000 		.4byte	0x6b
 2918 0633 3E060000 		.4byte	0x63e
 2919 0637 0C       		.uleb128 0xc
 2920 0638 BE000000 		.4byte	0xbe
 2921 063c 06       		.byte	0x6
 2922 063d 00       		.byte	0
 2923 063e 18       		.uleb128 0x18
 2924 063f 2E060000 		.4byte	0x62e
 2925 0643 13       		.uleb128 0x13
 2926 0644 E9040000 		.4byte	.LASF68
 2927 0648 01       		.byte	0x1
 2928 0649 8802     		.2byte	0x288
 2929 064b 00000000 		.4byte	.LFB2
 2930 064f 6C000000 		.4byte	.LFE2-.LFB2
 2931 0653 01       		.uleb128 0x1
 2932 0654 9C       		.byte	0x9c
 2933 0655 89060000 		.4byte	0x689
 2934 0659 19       		.uleb128 0x19
 2935 065a 7F060000 		.4byte	.LASF69
 2936 065e 01       		.byte	0x1
 2937 065f 8802     		.2byte	0x288
 2938 0661 76000000 		.4byte	0x76
 2939 0665 89000000 		.4byte	.LLST2
 2940 0669 19       		.uleb128 0x19
 2941 066a 7E040000 		.4byte	.LASF70
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 92


 2942 066e 01       		.byte	0x1
 2943 066f 8802     		.2byte	0x288
 2944 0671 76000000 		.4byte	0x76
 2945 0675 AA000000 		.4byte	.LLST3
 2946 0679 1A       		.uleb128 0x1a
 2947 067a 0C000000 		.4byte	.LVL63
 2948 067e 5D090000 		.4byte	0x95d
 2949 0682 11       		.uleb128 0x11
 2950 0683 01       		.uleb128 0x1
 2951 0684 50       		.byte	0x50
 2952 0685 01       		.uleb128 0x1
 2953 0686 30       		.byte	0x30
 2954 0687 00       		.byte	0
 2955 0688 00       		.byte	0
 2956 0689 13       		.uleb128 0x13
 2957 068a D7040000 		.4byte	.LASF71
 2958 068e 01       		.byte	0x1
 2959 068f 5403     		.2byte	0x354
 2960 0691 00000000 		.4byte	.LFB3
 2961 0695 F4000000 		.4byte	.LFE3-.LFB3
 2962 0699 01       		.uleb128 0x1
 2963 069a 9C       		.byte	0x9c
 2964 069b 17070000 		.4byte	0x717
 2965 069f 19       		.uleb128 0x19
 2966 06a0 7F060000 		.4byte	.LASF69
 2967 06a4 01       		.byte	0x1
 2968 06a5 5403     		.2byte	0x354
 2969 06a7 6B000000 		.4byte	0x6b
 2970 06ab CB000000 		.4byte	.LLST4
 2971 06af 19       		.uleb128 0x19
 2972 06b0 7E040000 		.4byte	.LASF70
 2973 06b4 01       		.byte	0x1
 2974 06b5 5403     		.2byte	0x354
 2975 06b7 76000000 		.4byte	0x76
 2976 06bb EC000000 		.4byte	.LLST5
 2977 06bf 16       		.uleb128 0x16
 2978 06c0 C5010000 		.4byte	.LASF72
 2979 06c4 01       		.byte	0x1
 2980 06c5 5603     		.2byte	0x356
 2981 06c7 6B000000 		.4byte	0x6b
 2982 06cb 0D010000 		.4byte	.LLST6
 2983 06cf 0F       		.uleb128 0xf
 2984 06d0 0A000000 		.4byte	.LVL65
 2985 06d4 320A0000 		.4byte	0xa32
 2986 06d8 0F       		.uleb128 0xf
 2987 06d9 28000000 		.4byte	.LVL67
 2988 06dd 3D0A0000 		.4byte	0xa3d
 2989 06e1 10       		.uleb128 0x10
 2990 06e2 30000000 		.4byte	.LVL70
 2991 06e6 5D090000 		.4byte	0x95d
 2992 06ea F4060000 		.4byte	0x6f4
 2993 06ee 11       		.uleb128 0x11
 2994 06ef 01       		.uleb128 0x1
 2995 06f0 50       		.byte	0x50
 2996 06f1 01       		.uleb128 0x1
 2997 06f2 30       		.byte	0x30
 2998 06f3 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 93


 2999 06f4 0F       		.uleb128 0xf
 3000 06f5 34000000 		.4byte	.LVL71
 3001 06f9 CB020000 		.4byte	0x2cb
 3002 06fd 0F       		.uleb128 0xf
 3003 06fe C0000000 		.4byte	.LVL72
 3004 0702 DD020000 		.4byte	0x2dd
 3005 0706 1A       		.uleb128 0x1a
 3006 0707 DA000000 		.4byte	.LVL73
 3007 070b 3D0A0000 		.4byte	0xa3d
 3008 070f 11       		.uleb128 0x11
 3009 0710 01       		.uleb128 0x1
 3010 0711 50       		.byte	0x50
 3011 0712 02       		.uleb128 0x2
 3012 0713 75       		.byte	0x75
 3013 0714 00       		.sleb128 0
 3014 0715 00       		.byte	0
 3015 0716 00       		.byte	0
 3016 0717 13       		.uleb128 0x13
 3017 0718 3D040000 		.4byte	.LASF73
 3018 071c 01       		.byte	0x1
 3019 071d AC04     		.2byte	0x4ac
 3020 071f 00000000 		.4byte	.LFB5
 3021 0723 F0000000 		.4byte	.LFE5-.LFB5
 3022 0727 01       		.uleb128 0x1
 3023 0728 9C       		.byte	0x9c
 3024 0729 82070000 		.4byte	0x782
 3025 072d 19       		.uleb128 0x19
 3026 072e 7E040000 		.4byte	.LASF70
 3027 0732 01       		.byte	0x1
 3028 0733 AC04     		.2byte	0x4ac
 3029 0735 76000000 		.4byte	0x76
 3030 0739 41010000 		.4byte	.LLST7
 3031 073d 16       		.uleb128 0x16
 3032 073e C5010000 		.4byte	.LASF72
 3033 0742 01       		.byte	0x1
 3034 0743 AE04     		.2byte	0x4ae
 3035 0745 6B000000 		.4byte	0x6b
 3036 0749 62010000 		.4byte	.LLST8
 3037 074d 0F       		.uleb128 0xf
 3038 074e 08000000 		.4byte	.LVL76
 3039 0752 320A0000 		.4byte	0xa32
 3040 0756 0F       		.uleb128 0xf
 3041 0757 22000000 		.4byte	.LVL78
 3042 075b 21030000 		.4byte	0x321
 3043 075f 0F       		.uleb128 0xf
 3044 0760 5C000000 		.4byte	.LVL80
 3045 0764 3D0A0000 		.4byte	0xa3d
 3046 0768 0F       		.uleb128 0xf
 3047 0769 BA000000 		.4byte	.LVL82
 3048 076d 8F030000 		.4byte	0x38f
 3049 0771 1A       		.uleb128 0x1a
 3050 0772 D4000000 		.4byte	.LVL83
 3051 0776 3D0A0000 		.4byte	0xa3d
 3052 077a 11       		.uleb128 0x11
 3053 077b 01       		.uleb128 0x1
 3054 077c 50       		.byte	0x50
 3055 077d 02       		.uleb128 0x2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 94


 3056 077e 75       		.byte	0x75
 3057 077f 00       		.sleb128 0
 3058 0780 00       		.byte	0
 3059 0781 00       		.byte	0
 3060 0782 13       		.uleb128 0x13
 3061 0783 BA050000 		.4byte	.LASF74
 3062 0787 01       		.byte	0x1
 3063 0788 6A04     		.2byte	0x46a
 3064 078a 00000000 		.4byte	.LFB4
 3065 078e 0A000000 		.4byte	.LFE4-.LFB4
 3066 0792 01       		.uleb128 0x1
 3067 0793 9C       		.byte	0x9c
 3068 0794 A9070000 		.4byte	0x7a9
 3069 0798 1A       		.uleb128 0x1a
 3070 0799 08000000 		.4byte	.LVL85
 3071 079d 17070000 		.4byte	0x717
 3072 07a1 11       		.uleb128 0x11
 3073 07a2 01       		.uleb128 0x1
 3074 07a3 50       		.byte	0x50
 3075 07a4 02       		.uleb128 0x2
 3076 07a5 08       		.byte	0x8
 3077 07a6 40       		.byte	0x40
 3078 07a7 00       		.byte	0
 3079 07a8 00       		.byte	0
 3080 07a9 1B       		.uleb128 0x1b
 3081 07aa FD050000 		.4byte	.LASF117
 3082 07ae 01       		.byte	0x1
 3083 07af 2F05     		.2byte	0x52f
 3084 07b1 6B000000 		.4byte	0x6b
 3085 07b5 00000000 		.4byte	.LFB6
 3086 07b9 30000000 		.4byte	.LFE6-.LFB6
 3087 07bd 01       		.uleb128 0x1
 3088 07be 9C       		.byte	0x9c
 3089 07bf 18080000 		.4byte	0x818
 3090 07c3 19       		.uleb128 0x19
 3091 07c4 B2020000 		.4byte	.LASF75
 3092 07c8 01       		.byte	0x1
 3093 07c9 2F05     		.2byte	0x52f
 3094 07cb 6B000000 		.4byte	0x6b
 3095 07cf 96010000 		.4byte	.LLST9
 3096 07d3 17       		.uleb128 0x17
 3097 07d4 FB060000 		.4byte	.LASF76
 3098 07d8 01       		.byte	0x1
 3099 07d9 3105     		.2byte	0x531
 3100 07db 6B000000 		.4byte	0x6b
 3101 07df 05       		.uleb128 0x5
 3102 07e0 03       		.byte	0x3
 3103 07e1 42000000 		.4byte	interruptStatus.4855
 3104 07e5 16       		.uleb128 0x16
 3105 07e6 C5010000 		.4byte	.LASF72
 3106 07ea 01       		.byte	0x1
 3107 07eb 3205     		.2byte	0x532
 3108 07ed 6B000000 		.4byte	0x6b
 3109 07f1 B7010000 		.4byte	.LLST10
 3110 07f5 16       		.uleb128 0x16
 3111 07f6 4B010000 		.4byte	.LASF77
 3112 07fa 01       		.byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 95


 3113 07fb 3305     		.2byte	0x533
 3114 07fd 6B000000 		.4byte	0x6b
 3115 0801 CA010000 		.4byte	.LLST11
 3116 0805 0F       		.uleb128 0xf
 3117 0806 08000000 		.4byte	.LVL87
 3118 080a 320A0000 		.4byte	0xa32
 3119 080e 0F       		.uleb128 0xf
 3120 080f 24000000 		.4byte	.LVL89
 3121 0813 3D0A0000 		.4byte	0xa3d
 3122 0817 00       		.byte	0
 3123 0818 13       		.uleb128 0x13
 3124 0819 2D060000 		.4byte	.LASF78
 3125 081d 01       		.byte	0x1
 3126 081e F205     		.2byte	0x5f2
 3127 0820 00000000 		.4byte	.LFB9
 3128 0824 5C000000 		.4byte	.LFE9-.LFB9
 3129 0828 01       		.uleb128 0x1
 3130 0829 9C       		.byte	0x9c
 3131 082a 48080000 		.4byte	0x848
 3132 082e 19       		.uleb128 0x19
 3133 082f 92030000 		.4byte	.LASF79
 3134 0833 01       		.byte	0x1
 3135 0834 F205     		.2byte	0x5f2
 3136 0836 6B000000 		.4byte	0x6b
 3137 083a E8010000 		.4byte	.LLST12
 3138 083e 0F       		.uleb128 0xf
 3139 083f 12000000 		.4byte	.LVL92
 3140 0843 2D090000 		.4byte	0x92d
 3141 0847 00       		.byte	0
 3142 0848 13       		.uleb128 0x13
 3143 0849 0E050000 		.4byte	.LASF80
 3144 084d 01       		.byte	0x1
 3145 084e 2606     		.2byte	0x626
 3146 0850 00000000 		.4byte	.LFB10
 3147 0854 2C000000 		.4byte	.LFE10-.LFB10
 3148 0858 01       		.uleb128 0x1
 3149 0859 9C       		.byte	0x9c
 3150 085a 68080000 		.4byte	0x868
 3151 085e 0F       		.uleb128 0xf
 3152 085f 10000000 		.4byte	.LVL93
 3153 0863 4E0A0000 		.4byte	0xa4e
 3154 0867 00       		.byte	0
 3155 0868 13       		.uleb128 0x13
 3156 0869 68010000 		.4byte	.LASF81
 3157 086d 01       		.byte	0x1
 3158 086e 4B06     		.2byte	0x64b
 3159 0870 00000000 		.4byte	.LFB11
 3160 0874 5C000000 		.4byte	.LFE11-.LFB11
 3161 0878 01       		.uleb128 0x1
 3162 0879 9C       		.byte	0x9c
 3163 087a 98080000 		.4byte	0x898
 3164 087e 19       		.uleb128 0x19
 3165 087f DE050000 		.4byte	.LASF82
 3166 0883 01       		.byte	0x1
 3167 0884 4B06     		.2byte	0x64b
 3168 0886 6B000000 		.4byte	0x6b
 3169 088a 09020000 		.4byte	.LLST13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 96


 3170 088e 0F       		.uleb128 0xf
 3171 088f 12000000 		.4byte	.LVL95
 3172 0893 34090000 		.4byte	0x934
 3173 0897 00       		.byte	0
 3174 0898 1C       		.uleb128 0x1c
 3175 0899 DD060000 		.4byte	.LASF83
 3176 089d 01       		.byte	0x1
 3177 089e 23       		.byte	0x23
 3178 089f BF020000 		.4byte	0x2bf
 3179 08a3 05       		.uleb128 0x5
 3180 08a4 03       		.byte	0x3
 3181 08a5 00000000 		.4byte	cyPmBackup
 3182 08a9 1C       		.uleb128 0x1c
 3183 08aa 28050000 		.4byte	.LASF84
 3184 08ae 01       		.byte	0x1
 3185 08af 24       		.byte	0x24
 3186 08b0 91010000 		.4byte	0x191
 3187 08b4 05       		.uleb128 0x5
 3188 08b5 03       		.byte	0x3
 3189 08b6 30000000 		.4byte	cyPmClockBackup
 3190 08ba 1C       		.uleb128 0x1c
 3191 08bb EA050000 		.4byte	.LASF85
 3192 08bf 01       		.byte	0x1
 3193 08c0 27       		.byte	0x27
 3194 08c1 CB080000 		.4byte	0x8cb
 3195 08c5 05       		.uleb128 0x5
 3196 08c6 03       		.byte	0x3
 3197 08c7 00000000 		.4byte	cyPmImoFreqReg2Mhz
 3198 08cb 18       		.uleb128 0x18
 3199 08cc 2E060000 		.4byte	0x62e
 3200 08d0 1D       		.uleb128 0x1d
 3201 08d1 97050000 		.4byte	.LASF86
 3202 08d5 04       		.byte	0x4
 3203 08d6 9D       		.byte	0x9d
 3204 08d7 1D       		.uleb128 0x1d
 3205 08d8 00000000 		.4byte	.LASF87
 3206 08dc 04       		.byte	0x4
 3207 08dd 9E       		.byte	0x9e
 3208 08de 1D       		.uleb128 0x1d
 3209 08df 9E030000 		.4byte	.LASF88
 3210 08e3 04       		.byte	0x4
 3211 08e4 A0       		.byte	0xa0
 3212 08e5 1E       		.uleb128 0x1e
 3213 08e6 47030000 		.4byte	.LASF107
 3214 08ea 04       		.byte	0x4
 3215 08eb 5F       		.byte	0x5f
 3216 08ec 6B000000 		.4byte	0x6b
 3217 08f0 FA080000 		.4byte	0x8fa
 3218 08f4 1F       		.uleb128 0x1f
 3219 08f5 6B000000 		.4byte	0x6b
 3220 08f9 00       		.byte	0
 3221 08fa 20       		.uleb128 0x20
 3222 08fb 82010000 		.4byte	.LASF89
 3223 08ff 04       		.byte	0x4
 3224 0900 9B       		.byte	0x9b
 3225 0901 10090000 		.4byte	0x910
 3226 0905 1F       		.uleb128 0x1f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 97


 3227 0906 6B000000 		.4byte	0x6b
 3228 090a 1F       		.uleb128 0x1f
 3229 090b 6B000000 		.4byte	0x6b
 3230 090f 00       		.byte	0
 3231 0910 20       		.uleb128 0x20
 3232 0911 8A060000 		.4byte	.LASF90
 3233 0915 04       		.byte	0x4
 3234 0916 9C       		.byte	0x9c
 3235 0917 26090000 		.4byte	0x926
 3236 091b 1F       		.uleb128 0x1f
 3237 091c 6B000000 		.4byte	0x6b
 3238 0920 1F       		.uleb128 0x1f
 3239 0921 6B000000 		.4byte	0x6b
 3240 0925 00       		.byte	0
 3241 0926 1D       		.uleb128 0x1d
 3242 0927 BE060000 		.4byte	.LASF91
 3243 092b 04       		.byte	0x4
 3244 092c 9F       		.byte	0x9f
 3245 092d 1D       		.uleb128 0x1d
 3246 092e D4010000 		.4byte	.LASF92
 3247 0932 04       		.byte	0x4
 3248 0933 58       		.byte	0x58
 3249 0934 1D       		.uleb128 0x1d
 3250 0935 6E040000 		.4byte	.LASF93
 3251 0939 04       		.byte	0x4
 3252 093a 5A       		.byte	0x5a
 3253 093b 20       		.uleb128 0x20
 3254 093c C8050000 		.4byte	.LASF94
 3255 0940 05       		.byte	0x5
 3256 0941 51       		.byte	0x51
 3257 0942 4C090000 		.4byte	0x94c
 3258 0946 1F       		.uleb128 0x1f
 3259 0947 6B000000 		.4byte	0x6b
 3260 094b 00       		.byte	0
 3261 094c 20       		.uleb128 0x20
 3262 094d B2030000 		.4byte	.LASF95
 3263 0951 04       		.byte	0x4
 3264 0952 4E       		.byte	0x4e
 3265 0953 5D090000 		.4byte	0x95d
 3266 0957 1F       		.uleb128 0x1f
 3267 0958 6B000000 		.4byte	0x6b
 3268 095c 00       		.byte	0
 3269 095d 20       		.uleb128 0x20
 3270 095e 07050000 		.4byte	.LASF96
 3271 0962 04       		.byte	0x4
 3272 0963 80       		.byte	0x80
 3273 0964 6E090000 		.4byte	0x96e
 3274 0968 1F       		.uleb128 0x1f
 3275 0969 6B000000 		.4byte	0x6b
 3276 096d 00       		.byte	0
 3277 096e 1D       		.uleb128 0x1d
 3278 096f 8B040000 		.4byte	.LASF97
 3279 0973 04       		.byte	0x4
 3280 0974 43       		.byte	0x43
 3281 0975 20       		.uleb128 0x20
 3282 0976 4E060000 		.4byte	.LASF98
 3283 097a 04       		.byte	0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 98


 3284 097b 49       		.byte	0x49
 3285 097c 86090000 		.4byte	0x986
 3286 0980 1F       		.uleb128 0x1f
 3287 0981 6B000000 		.4byte	0x6b
 3288 0985 00       		.byte	0
 3289 0986 20       		.uleb128 0x20
 3290 0987 1B000000 		.4byte	.LASF99
 3291 098b 04       		.byte	0x4
 3292 098c 47       		.byte	0x47
 3293 098d 97090000 		.4byte	0x997
 3294 0991 1F       		.uleb128 0x1f
 3295 0992 6B000000 		.4byte	0x6b
 3296 0996 00       		.byte	0
 3297 0997 20       		.uleb128 0x20
 3298 0998 19020000 		.4byte	.LASF100
 3299 099c 04       		.byte	0x4
 3300 099d 78       		.byte	0x78
 3301 099e A8090000 		.4byte	0x9a8
 3302 09a2 1F       		.uleb128 0x1f
 3303 09a3 76000000 		.4byte	0x76
 3304 09a7 00       		.byte	0
 3305 09a8 20       		.uleb128 0x20
 3306 09a9 D8020000 		.4byte	.LASF101
 3307 09ad 04       		.byte	0x4
 3308 09ae 4A       		.byte	0x4a
 3309 09af B9090000 		.4byte	0x9b9
 3310 09b3 1F       		.uleb128 0x1f
 3311 09b4 6B000000 		.4byte	0x6b
 3312 09b8 00       		.byte	0
 3313 09b9 1D       		.uleb128 0x1d
 3314 09ba 82050000 		.4byte	.LASF102
 3315 09be 04       		.byte	0x4
 3316 09bf 4C       		.byte	0x4c
 3317 09c0 20       		.uleb128 0x20
 3318 09c1 9A040000 		.4byte	.LASF103
 3319 09c5 04       		.byte	0x4
 3320 09c6 4F       		.byte	0x4f
 3321 09c7 D1090000 		.4byte	0x9d1
 3322 09cb 1F       		.uleb128 0x1f
 3323 09cc 6B000000 		.4byte	0x6b
 3324 09d0 00       		.byte	0
 3325 09d1 20       		.uleb128 0x20
 3326 09d2 0C060000 		.4byte	.LASF104
 3327 09d6 04       		.byte	0x4
 3328 09d7 50       		.byte	0x50
 3329 09d8 E2090000 		.4byte	0x9e2
 3330 09dc 1F       		.uleb128 0x1f
 3331 09dd 76000000 		.4byte	0x76
 3332 09e1 00       		.byte	0
 3333 09e2 1D       		.uleb128 0x1d
 3334 09e3 D1060000 		.4byte	.LASF105
 3335 09e7 04       		.byte	0x4
 3336 09e8 67       		.byte	0x67
 3337 09e9 20       		.uleb128 0x20
 3338 09ea F4040000 		.4byte	.LASF106
 3339 09ee 04       		.byte	0x4
 3340 09ef 7A       		.byte	0x7a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 99


 3341 09f0 FA090000 		.4byte	0x9fa
 3342 09f4 1F       		.uleb128 0x1f
 3343 09f5 81000000 		.4byte	0x81
 3344 09f9 00       		.byte	0
 3345 09fa 1E       		.uleb128 0x1e
 3346 09fb 1B040000 		.4byte	.LASF108
 3347 09ff 04       		.byte	0x4
 3348 0a00 66       		.byte	0x66
 3349 0a01 A1000000 		.4byte	0xa1
 3350 0a05 0F0A0000 		.4byte	0xa0f
 3351 0a09 1F       		.uleb128 0x1f
 3352 0a0a 6B000000 		.4byte	0x6b
 3353 0a0e 00       		.byte	0
 3354 0a0f 1D       		.uleb128 0x1d
 3355 0a10 5C060000 		.4byte	.LASF109
 3356 0a14 04       		.byte	0x4
 3357 0a15 4B       		.byte	0x4b
 3358 0a16 1E       		.uleb128 0x1e
 3359 0a17 09020000 		.4byte	.LASF110
 3360 0a1b 04       		.byte	0x4
 3361 0a1c 42       		.byte	0x42
 3362 0a1d A1000000 		.4byte	0xa1
 3363 0a21 2B0A0000 		.4byte	0xa2b
 3364 0a25 1F       		.uleb128 0x1f
 3365 0a26 6B000000 		.4byte	0x6b
 3366 0a2a 00       		.byte	0
 3367 0a2b 1D       		.uleb128 0x1d
 3368 0a2c 5A030000 		.4byte	.LASF111
 3369 0a30 04       		.byte	0x4
 3370 0a31 48       		.byte	0x48
 3371 0a32 21       		.uleb128 0x21
 3372 0a33 1F030000 		.4byte	.LASF118
 3373 0a37 04       		.byte	0x4
 3374 0a38 7E       		.byte	0x7e
 3375 0a39 6B000000 		.4byte	0x6b
 3376 0a3d 20       		.uleb128 0x20
 3377 0a3e C1040000 		.4byte	.LASF112
 3378 0a42 04       		.byte	0x4
 3379 0a43 7F       		.byte	0x7f
 3380 0a44 4E0A0000 		.4byte	0xa4e
 3381 0a48 1F       		.uleb128 0x1f
 3382 0a49 6B000000 		.4byte	0x6b
 3383 0a4d 00       		.byte	0
 3384 0a4e 1D       		.uleb128 0x1d
 3385 0a4f EE000000 		.4byte	.LASF113
 3386 0a53 04       		.byte	0x4
 3387 0a54 63       		.byte	0x63
 3388 0a55 00       		.byte	0
 3389              		.section	.debug_abbrev,"",%progbits
 3390              	.Ldebug_abbrev0:
 3391 0000 01       		.uleb128 0x1
 3392 0001 11       		.uleb128 0x11
 3393 0002 01       		.byte	0x1
 3394 0003 25       		.uleb128 0x25
 3395 0004 0E       		.uleb128 0xe
 3396 0005 13       		.uleb128 0x13
 3397 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 100


 3398 0007 03       		.uleb128 0x3
 3399 0008 0E       		.uleb128 0xe
 3400 0009 1B       		.uleb128 0x1b
 3401 000a 0E       		.uleb128 0xe
 3402 000b 55       		.uleb128 0x55
 3403 000c 17       		.uleb128 0x17
 3404 000d 11       		.uleb128 0x11
 3405 000e 01       		.uleb128 0x1
 3406 000f 10       		.uleb128 0x10
 3407 0010 17       		.uleb128 0x17
 3408 0011 00       		.byte	0
 3409 0012 00       		.byte	0
 3410 0013 02       		.uleb128 0x2
 3411 0014 24       		.uleb128 0x24
 3412 0015 00       		.byte	0
 3413 0016 0B       		.uleb128 0xb
 3414 0017 0B       		.uleb128 0xb
 3415 0018 3E       		.uleb128 0x3e
 3416 0019 0B       		.uleb128 0xb
 3417 001a 03       		.uleb128 0x3
 3418 001b 0E       		.uleb128 0xe
 3419 001c 00       		.byte	0
 3420 001d 00       		.byte	0
 3421 001e 03       		.uleb128 0x3
 3422 001f 24       		.uleb128 0x24
 3423 0020 00       		.byte	0
 3424 0021 0B       		.uleb128 0xb
 3425 0022 0B       		.uleb128 0xb
 3426 0023 3E       		.uleb128 0x3e
 3427 0024 0B       		.uleb128 0xb
 3428 0025 03       		.uleb128 0x3
 3429 0026 08       		.uleb128 0x8
 3430 0027 00       		.byte	0
 3431 0028 00       		.byte	0
 3432 0029 04       		.uleb128 0x4
 3433 002a 16       		.uleb128 0x16
 3434 002b 00       		.byte	0
 3435 002c 03       		.uleb128 0x3
 3436 002d 0E       		.uleb128 0xe
 3437 002e 3A       		.uleb128 0x3a
 3438 002f 0B       		.uleb128 0xb
 3439 0030 3B       		.uleb128 0x3b
 3440 0031 0B       		.uleb128 0xb
 3441 0032 49       		.uleb128 0x49
 3442 0033 13       		.uleb128 0x13
 3443 0034 00       		.byte	0
 3444 0035 00       		.byte	0
 3445 0036 05       		.uleb128 0x5
 3446 0037 16       		.uleb128 0x16
 3447 0038 00       		.byte	0
 3448 0039 03       		.uleb128 0x3
 3449 003a 0E       		.uleb128 0xe
 3450 003b 3A       		.uleb128 0x3a
 3451 003c 0B       		.uleb128 0xb
 3452 003d 3B       		.uleb128 0x3b
 3453 003e 05       		.uleb128 0x5
 3454 003f 49       		.uleb128 0x49
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 101


 3455 0040 13       		.uleb128 0x13
 3456 0041 00       		.byte	0
 3457 0042 00       		.byte	0
 3458 0043 06       		.uleb128 0x6
 3459 0044 35       		.uleb128 0x35
 3460 0045 00       		.byte	0
 3461 0046 49       		.uleb128 0x49
 3462 0047 13       		.uleb128 0x13
 3463 0048 00       		.byte	0
 3464 0049 00       		.byte	0
 3465 004a 07       		.uleb128 0x7
 3466 004b 13       		.uleb128 0x13
 3467 004c 01       		.byte	0x1
 3468 004d 03       		.uleb128 0x3
 3469 004e 0E       		.uleb128 0xe
 3470 004f 0B       		.uleb128 0xb
 3471 0050 0B       		.uleb128 0xb
 3472 0051 3A       		.uleb128 0x3a
 3473 0052 0B       		.uleb128 0xb
 3474 0053 3B       		.uleb128 0x3b
 3475 0054 0B       		.uleb128 0xb
 3476 0055 01       		.uleb128 0x1
 3477 0056 13       		.uleb128 0x13
 3478 0057 00       		.byte	0
 3479 0058 00       		.byte	0
 3480 0059 08       		.uleb128 0x8
 3481 005a 0D       		.uleb128 0xd
 3482 005b 00       		.byte	0
 3483 005c 03       		.uleb128 0x3
 3484 005d 0E       		.uleb128 0xe
 3485 005e 3A       		.uleb128 0x3a
 3486 005f 0B       		.uleb128 0xb
 3487 0060 3B       		.uleb128 0x3b
 3488 0061 0B       		.uleb128 0xb
 3489 0062 49       		.uleb128 0x49
 3490 0063 13       		.uleb128 0x13
 3491 0064 38       		.uleb128 0x38
 3492 0065 0B       		.uleb128 0xb
 3493 0066 00       		.byte	0
 3494 0067 00       		.byte	0
 3495 0068 09       		.uleb128 0x9
 3496 0069 0D       		.uleb128 0xd
 3497 006a 00       		.byte	0
 3498 006b 03       		.uleb128 0x3
 3499 006c 0E       		.uleb128 0xe
 3500 006d 3A       		.uleb128 0x3a
 3501 006e 0B       		.uleb128 0xb
 3502 006f 3B       		.uleb128 0x3b
 3503 0070 05       		.uleb128 0x5
 3504 0071 49       		.uleb128 0x49
 3505 0072 13       		.uleb128 0x13
 3506 0073 38       		.uleb128 0x38
 3507 0074 0B       		.uleb128 0xb
 3508 0075 00       		.byte	0
 3509 0076 00       		.byte	0
 3510 0077 0A       		.uleb128 0xa
 3511 0078 13       		.uleb128 0x13
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 102


 3512 0079 01       		.byte	0x1
 3513 007a 03       		.uleb128 0x3
 3514 007b 0E       		.uleb128 0xe
 3515 007c 0B       		.uleb128 0xb
 3516 007d 0B       		.uleb128 0xb
 3517 007e 3A       		.uleb128 0x3a
 3518 007f 0B       		.uleb128 0xb
 3519 0080 3B       		.uleb128 0x3b
 3520 0081 05       		.uleb128 0x5
 3521 0082 01       		.uleb128 0x1
 3522 0083 13       		.uleb128 0x13
 3523 0084 00       		.byte	0
 3524 0085 00       		.byte	0
 3525 0086 0B       		.uleb128 0xb
 3526 0087 01       		.uleb128 0x1
 3527 0088 01       		.byte	0x1
 3528 0089 49       		.uleb128 0x49
 3529 008a 13       		.uleb128 0x13
 3530 008b 01       		.uleb128 0x1
 3531 008c 13       		.uleb128 0x13
 3532 008d 00       		.byte	0
 3533 008e 00       		.byte	0
 3534 008f 0C       		.uleb128 0xc
 3535 0090 21       		.uleb128 0x21
 3536 0091 00       		.byte	0
 3537 0092 49       		.uleb128 0x49
 3538 0093 13       		.uleb128 0x13
 3539 0094 2F       		.uleb128 0x2f
 3540 0095 0B       		.uleb128 0xb
 3541 0096 00       		.byte	0
 3542 0097 00       		.byte	0
 3543 0098 0D       		.uleb128 0xd
 3544 0099 2E       		.uleb128 0x2e
 3545 009a 00       		.byte	0
 3546 009b 03       		.uleb128 0x3
 3547 009c 0E       		.uleb128 0xe
 3548 009d 3A       		.uleb128 0x3a
 3549 009e 0B       		.uleb128 0xb
 3550 009f 3B       		.uleb128 0x3b
 3551 00a0 05       		.uleb128 0x5
 3552 00a1 27       		.uleb128 0x27
 3553 00a2 19       		.uleb128 0x19
 3554 00a3 11       		.uleb128 0x11
 3555 00a4 01       		.uleb128 0x1
 3556 00a5 12       		.uleb128 0x12
 3557 00a6 06       		.uleb128 0x6
 3558 00a7 40       		.uleb128 0x40
 3559 00a8 18       		.uleb128 0x18
 3560 00a9 9742     		.uleb128 0x2117
 3561 00ab 19       		.uleb128 0x19
 3562 00ac 00       		.byte	0
 3563 00ad 00       		.byte	0
 3564 00ae 0E       		.uleb128 0xe
 3565 00af 2E       		.uleb128 0x2e
 3566 00b0 01       		.byte	0x1
 3567 00b1 03       		.uleb128 0x3
 3568 00b2 0E       		.uleb128 0xe
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 103


 3569 00b3 3A       		.uleb128 0x3a
 3570 00b4 0B       		.uleb128 0xb
 3571 00b5 3B       		.uleb128 0x3b
 3572 00b6 05       		.uleb128 0x5
 3573 00b7 27       		.uleb128 0x27
 3574 00b8 19       		.uleb128 0x19
 3575 00b9 11       		.uleb128 0x11
 3576 00ba 01       		.uleb128 0x1
 3577 00bb 12       		.uleb128 0x12
 3578 00bc 06       		.uleb128 0x6
 3579 00bd 40       		.uleb128 0x40
 3580 00be 18       		.uleb128 0x18
 3581 00bf 9742     		.uleb128 0x2117
 3582 00c1 19       		.uleb128 0x19
 3583 00c2 01       		.uleb128 0x1
 3584 00c3 13       		.uleb128 0x13
 3585 00c4 00       		.byte	0
 3586 00c5 00       		.byte	0
 3587 00c6 0F       		.uleb128 0xf
 3588 00c7 898201   		.uleb128 0x4109
 3589 00ca 00       		.byte	0
 3590 00cb 11       		.uleb128 0x11
 3591 00cc 01       		.uleb128 0x1
 3592 00cd 31       		.uleb128 0x31
 3593 00ce 13       		.uleb128 0x13
 3594 00cf 00       		.byte	0
 3595 00d0 00       		.byte	0
 3596 00d1 10       		.uleb128 0x10
 3597 00d2 898201   		.uleb128 0x4109
 3598 00d5 01       		.byte	0x1
 3599 00d6 11       		.uleb128 0x11
 3600 00d7 01       		.uleb128 0x1
 3601 00d8 31       		.uleb128 0x31
 3602 00d9 13       		.uleb128 0x13
 3603 00da 01       		.uleb128 0x1
 3604 00db 13       		.uleb128 0x13
 3605 00dc 00       		.byte	0
 3606 00dd 00       		.byte	0
 3607 00de 11       		.uleb128 0x11
 3608 00df 8A8201   		.uleb128 0x410a
 3609 00e2 00       		.byte	0
 3610 00e3 02       		.uleb128 0x2
 3611 00e4 18       		.uleb128 0x18
 3612 00e5 9142     		.uleb128 0x2111
 3613 00e7 18       		.uleb128 0x18
 3614 00e8 00       		.byte	0
 3615 00e9 00       		.byte	0
 3616 00ea 12       		.uleb128 0x12
 3617 00eb 2E       		.uleb128 0x2e
 3618 00ec 01       		.byte	0x1
 3619 00ed 3F       		.uleb128 0x3f
 3620 00ee 19       		.uleb128 0x19
 3621 00ef 03       		.uleb128 0x3
 3622 00f0 0E       		.uleb128 0xe
 3623 00f1 3A       		.uleb128 0x3a
 3624 00f2 0B       		.uleb128 0xb
 3625 00f3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 104


 3626 00f4 0B       		.uleb128 0xb
 3627 00f5 27       		.uleb128 0x27
 3628 00f6 19       		.uleb128 0x19
 3629 00f7 11       		.uleb128 0x11
 3630 00f8 01       		.uleb128 0x1
 3631 00f9 12       		.uleb128 0x12
 3632 00fa 06       		.uleb128 0x6
 3633 00fb 40       		.uleb128 0x40
 3634 00fc 18       		.uleb128 0x18
 3635 00fd 9742     		.uleb128 0x2117
 3636 00ff 19       		.uleb128 0x19
 3637 0100 01       		.uleb128 0x1
 3638 0101 13       		.uleb128 0x13
 3639 0102 00       		.byte	0
 3640 0103 00       		.byte	0
 3641 0104 13       		.uleb128 0x13
 3642 0105 2E       		.uleb128 0x2e
 3643 0106 01       		.byte	0x1
 3644 0107 3F       		.uleb128 0x3f
 3645 0108 19       		.uleb128 0x19
 3646 0109 03       		.uleb128 0x3
 3647 010a 0E       		.uleb128 0xe
 3648 010b 3A       		.uleb128 0x3a
 3649 010c 0B       		.uleb128 0xb
 3650 010d 3B       		.uleb128 0x3b
 3651 010e 05       		.uleb128 0x5
 3652 010f 27       		.uleb128 0x27
 3653 0110 19       		.uleb128 0x19
 3654 0111 11       		.uleb128 0x11
 3655 0112 01       		.uleb128 0x1
 3656 0113 12       		.uleb128 0x12
 3657 0114 06       		.uleb128 0x6
 3658 0115 40       		.uleb128 0x40
 3659 0116 18       		.uleb128 0x18
 3660 0117 9742     		.uleb128 0x2117
 3661 0119 19       		.uleb128 0x19
 3662 011a 01       		.uleb128 0x1
 3663 011b 13       		.uleb128 0x13
 3664 011c 00       		.byte	0
 3665 011d 00       		.byte	0
 3666 011e 14       		.uleb128 0x14
 3667 011f 34       		.uleb128 0x34
 3668 0120 00       		.byte	0
 3669 0121 03       		.uleb128 0x3
 3670 0122 0E       		.uleb128 0xe
 3671 0123 3A       		.uleb128 0x3a
 3672 0124 0B       		.uleb128 0xb
 3673 0125 3B       		.uleb128 0x3b
 3674 0126 05       		.uleb128 0x5
 3675 0127 49       		.uleb128 0x49
 3676 0128 13       		.uleb128 0x13
 3677 0129 1C       		.uleb128 0x1c
 3678 012a 0B       		.uleb128 0xb
 3679 012b 00       		.byte	0
 3680 012c 00       		.byte	0
 3681 012d 15       		.uleb128 0x15
 3682 012e 34       		.uleb128 0x34
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 105


 3683 012f 00       		.byte	0
 3684 0130 03       		.uleb128 0x3
 3685 0131 08       		.uleb128 0x8
 3686 0132 3A       		.uleb128 0x3a
 3687 0133 0B       		.uleb128 0xb
 3688 0134 3B       		.uleb128 0x3b
 3689 0135 05       		.uleb128 0x5
 3690 0136 49       		.uleb128 0x49
 3691 0137 13       		.uleb128 0x13
 3692 0138 02       		.uleb128 0x2
 3693 0139 17       		.uleb128 0x17
 3694 013a 00       		.byte	0
 3695 013b 00       		.byte	0
 3696 013c 16       		.uleb128 0x16
 3697 013d 34       		.uleb128 0x34
 3698 013e 00       		.byte	0
 3699 013f 03       		.uleb128 0x3
 3700 0140 0E       		.uleb128 0xe
 3701 0141 3A       		.uleb128 0x3a
 3702 0142 0B       		.uleb128 0xb
 3703 0143 3B       		.uleb128 0x3b
 3704 0144 05       		.uleb128 0x5
 3705 0145 49       		.uleb128 0x49
 3706 0146 13       		.uleb128 0x13
 3707 0147 02       		.uleb128 0x2
 3708 0148 17       		.uleb128 0x17
 3709 0149 00       		.byte	0
 3710 014a 00       		.byte	0
 3711 014b 17       		.uleb128 0x17
 3712 014c 34       		.uleb128 0x34
 3713 014d 00       		.byte	0
 3714 014e 03       		.uleb128 0x3
 3715 014f 0E       		.uleb128 0xe
 3716 0150 3A       		.uleb128 0x3a
 3717 0151 0B       		.uleb128 0xb
 3718 0152 3B       		.uleb128 0x3b
 3719 0153 05       		.uleb128 0x5
 3720 0154 49       		.uleb128 0x49
 3721 0155 13       		.uleb128 0x13
 3722 0156 02       		.uleb128 0x2
 3723 0157 18       		.uleb128 0x18
 3724 0158 00       		.byte	0
 3725 0159 00       		.byte	0
 3726 015a 18       		.uleb128 0x18
 3727 015b 26       		.uleb128 0x26
 3728 015c 00       		.byte	0
 3729 015d 49       		.uleb128 0x49
 3730 015e 13       		.uleb128 0x13
 3731 015f 00       		.byte	0
 3732 0160 00       		.byte	0
 3733 0161 19       		.uleb128 0x19
 3734 0162 05       		.uleb128 0x5
 3735 0163 00       		.byte	0
 3736 0164 03       		.uleb128 0x3
 3737 0165 0E       		.uleb128 0xe
 3738 0166 3A       		.uleb128 0x3a
 3739 0167 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 106


 3740 0168 3B       		.uleb128 0x3b
 3741 0169 05       		.uleb128 0x5
 3742 016a 49       		.uleb128 0x49
 3743 016b 13       		.uleb128 0x13
 3744 016c 02       		.uleb128 0x2
 3745 016d 17       		.uleb128 0x17
 3746 016e 00       		.byte	0
 3747 016f 00       		.byte	0
 3748 0170 1A       		.uleb128 0x1a
 3749 0171 898201   		.uleb128 0x4109
 3750 0174 01       		.byte	0x1
 3751 0175 11       		.uleb128 0x11
 3752 0176 01       		.uleb128 0x1
 3753 0177 31       		.uleb128 0x31
 3754 0178 13       		.uleb128 0x13
 3755 0179 00       		.byte	0
 3756 017a 00       		.byte	0
 3757 017b 1B       		.uleb128 0x1b
 3758 017c 2E       		.uleb128 0x2e
 3759 017d 01       		.byte	0x1
 3760 017e 3F       		.uleb128 0x3f
 3761 017f 19       		.uleb128 0x19
 3762 0180 03       		.uleb128 0x3
 3763 0181 0E       		.uleb128 0xe
 3764 0182 3A       		.uleb128 0x3a
 3765 0183 0B       		.uleb128 0xb
 3766 0184 3B       		.uleb128 0x3b
 3767 0185 05       		.uleb128 0x5
 3768 0186 27       		.uleb128 0x27
 3769 0187 19       		.uleb128 0x19
 3770 0188 49       		.uleb128 0x49
 3771 0189 13       		.uleb128 0x13
 3772 018a 11       		.uleb128 0x11
 3773 018b 01       		.uleb128 0x1
 3774 018c 12       		.uleb128 0x12
 3775 018d 06       		.uleb128 0x6
 3776 018e 40       		.uleb128 0x40
 3777 018f 18       		.uleb128 0x18
 3778 0190 9742     		.uleb128 0x2117
 3779 0192 19       		.uleb128 0x19
 3780 0193 01       		.uleb128 0x1
 3781 0194 13       		.uleb128 0x13
 3782 0195 00       		.byte	0
 3783 0196 00       		.byte	0
 3784 0197 1C       		.uleb128 0x1c
 3785 0198 34       		.uleb128 0x34
 3786 0199 00       		.byte	0
 3787 019a 03       		.uleb128 0x3
 3788 019b 0E       		.uleb128 0xe
 3789 019c 3A       		.uleb128 0x3a
 3790 019d 0B       		.uleb128 0xb
 3791 019e 3B       		.uleb128 0x3b
 3792 019f 0B       		.uleb128 0xb
 3793 01a0 49       		.uleb128 0x49
 3794 01a1 13       		.uleb128 0x13
 3795 01a2 02       		.uleb128 0x2
 3796 01a3 18       		.uleb128 0x18
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 107


 3797 01a4 00       		.byte	0
 3798 01a5 00       		.byte	0
 3799 01a6 1D       		.uleb128 0x1d
 3800 01a7 2E       		.uleb128 0x2e
 3801 01a8 00       		.byte	0
 3802 01a9 3F       		.uleb128 0x3f
 3803 01aa 19       		.uleb128 0x19
 3804 01ab 03       		.uleb128 0x3
 3805 01ac 0E       		.uleb128 0xe
 3806 01ad 3A       		.uleb128 0x3a
 3807 01ae 0B       		.uleb128 0xb
 3808 01af 3B       		.uleb128 0x3b
 3809 01b0 0B       		.uleb128 0xb
 3810 01b1 27       		.uleb128 0x27
 3811 01b2 19       		.uleb128 0x19
 3812 01b3 3C       		.uleb128 0x3c
 3813 01b4 19       		.uleb128 0x19
 3814 01b5 00       		.byte	0
 3815 01b6 00       		.byte	0
 3816 01b7 1E       		.uleb128 0x1e
 3817 01b8 2E       		.uleb128 0x2e
 3818 01b9 01       		.byte	0x1
 3819 01ba 3F       		.uleb128 0x3f
 3820 01bb 19       		.uleb128 0x19
 3821 01bc 03       		.uleb128 0x3
 3822 01bd 0E       		.uleb128 0xe
 3823 01be 3A       		.uleb128 0x3a
 3824 01bf 0B       		.uleb128 0xb
 3825 01c0 3B       		.uleb128 0x3b
 3826 01c1 0B       		.uleb128 0xb
 3827 01c2 27       		.uleb128 0x27
 3828 01c3 19       		.uleb128 0x19
 3829 01c4 49       		.uleb128 0x49
 3830 01c5 13       		.uleb128 0x13
 3831 01c6 3C       		.uleb128 0x3c
 3832 01c7 19       		.uleb128 0x19
 3833 01c8 01       		.uleb128 0x1
 3834 01c9 13       		.uleb128 0x13
 3835 01ca 00       		.byte	0
 3836 01cb 00       		.byte	0
 3837 01cc 1F       		.uleb128 0x1f
 3838 01cd 05       		.uleb128 0x5
 3839 01ce 00       		.byte	0
 3840 01cf 49       		.uleb128 0x49
 3841 01d0 13       		.uleb128 0x13
 3842 01d1 00       		.byte	0
 3843 01d2 00       		.byte	0
 3844 01d3 20       		.uleb128 0x20
 3845 01d4 2E       		.uleb128 0x2e
 3846 01d5 01       		.byte	0x1
 3847 01d6 3F       		.uleb128 0x3f
 3848 01d7 19       		.uleb128 0x19
 3849 01d8 03       		.uleb128 0x3
 3850 01d9 0E       		.uleb128 0xe
 3851 01da 3A       		.uleb128 0x3a
 3852 01db 0B       		.uleb128 0xb
 3853 01dc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 108


 3854 01dd 0B       		.uleb128 0xb
 3855 01de 27       		.uleb128 0x27
 3856 01df 19       		.uleb128 0x19
 3857 01e0 3C       		.uleb128 0x3c
 3858 01e1 19       		.uleb128 0x19
 3859 01e2 01       		.uleb128 0x1
 3860 01e3 13       		.uleb128 0x13
 3861 01e4 00       		.byte	0
 3862 01e5 00       		.byte	0
 3863 01e6 21       		.uleb128 0x21
 3864 01e7 2E       		.uleb128 0x2e
 3865 01e8 00       		.byte	0
 3866 01e9 3F       		.uleb128 0x3f
 3867 01ea 19       		.uleb128 0x19
 3868 01eb 03       		.uleb128 0x3
 3869 01ec 0E       		.uleb128 0xe
 3870 01ed 3A       		.uleb128 0x3a
 3871 01ee 0B       		.uleb128 0xb
 3872 01ef 3B       		.uleb128 0x3b
 3873 01f0 0B       		.uleb128 0xb
 3874 01f1 27       		.uleb128 0x27
 3875 01f2 19       		.uleb128 0x19
 3876 01f3 49       		.uleb128 0x49
 3877 01f4 13       		.uleb128 0x13
 3878 01f5 3C       		.uleb128 0x3c
 3879 01f6 19       		.uleb128 0x19
 3880 01f7 00       		.byte	0
 3881 01f8 00       		.byte	0
 3882 01f9 00       		.byte	0
 3883              		.section	.debug_loc,"",%progbits
 3884              	.Ldebug_loc0:
 3885              	.LLST0:
 3886 0000 58000000 		.4byte	.LVL33
 3887 0004 62000000 		.4byte	.LVL34
 3888 0008 0200     		.2byte	0x2
 3889 000a 35       		.byte	0x35
 3890 000b 9F       		.byte	0x9f
 3891 000c 62000000 		.4byte	.LVL34
 3892 0010 7E000000 		.4byte	.LVL36
 3893 0014 0100     		.2byte	0x1
 3894 0016 54       		.byte	0x54
 3895 0017 7E000000 		.4byte	.LVL36
 3896 001b 80000000 		.4byte	.LVL37
 3897 001f 0300     		.2byte	0x3
 3898 0021 74       		.byte	0x74
 3899 0022 01       		.sleb128 1
 3900 0023 9F       		.byte	0x9f
 3901 0024 80000000 		.4byte	.LVL37
 3902 0028 84000000 		.4byte	.LVL38
 3903 002c 0100     		.2byte	0x1
 3904 002e 54       		.byte	0x54
 3905 002f 7A010000 		.4byte	.LVL49
 3906 0033 82010000 		.4byte	.LVL50
 3907 0037 0300     		.2byte	0x3
 3908 0039 08       		.byte	0x8
 3909 003a AB       		.byte	0xab
 3910 003b 9F       		.byte	0x9f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 109


 3911 003c 82010000 		.4byte	.LVL50
 3912 0040 9A010000 		.4byte	.LVL52
 3913 0044 0100     		.2byte	0x1
 3914 0046 54       		.byte	0x54
 3915 0047 9A010000 		.4byte	.LVL52
 3916 004b 9C010000 		.4byte	.LVL53
 3917 004f 0300     		.2byte	0x3
 3918 0051 74       		.byte	0x74
 3919 0052 01       		.sleb128 1
 3920 0053 9F       		.byte	0x9f
 3921 0054 9C010000 		.4byte	.LVL53
 3922 0058 A0010000 		.4byte	.LVL54
 3923 005c 0100     		.2byte	0x1
 3924 005e 54       		.byte	0x54
 3925 005f 00000000 		.4byte	0
 3926 0063 00000000 		.4byte	0
 3927              	.LLST1:
 3928 0067 E2010000 		.4byte	.LVL58
 3929 006b EA010000 		.4byte	.LVL59
 3930 006f 0500     		.2byte	0x5
 3931 0071 72       		.byte	0x72
 3932 0072 00       		.sleb128 0
 3933 0073 38       		.byte	0x38
 3934 0074 24       		.byte	0x24
 3935 0075 9F       		.byte	0x9f
 3936 0076 EA010000 		.4byte	.LVL59
 3937 007a F5010000 		.4byte	.LVL60-1
 3938 007e 0100     		.2byte	0x1
 3939 0080 53       		.byte	0x53
 3940 0081 00000000 		.4byte	0
 3941 0085 00000000 		.4byte	0
 3942              	.LLST2:
 3943 0089 00000000 		.4byte	.LVL61
 3944 008d 08000000 		.4byte	.LVL62
 3945 0091 0100     		.2byte	0x1
 3946 0093 50       		.byte	0x50
 3947 0094 08000000 		.4byte	.LVL62
 3948 0098 6C000000 		.4byte	.LFE2
 3949 009c 0400     		.2byte	0x4
 3950 009e F3       		.byte	0xf3
 3951 009f 01       		.uleb128 0x1
 3952 00a0 50       		.byte	0x50
 3953 00a1 9F       		.byte	0x9f
 3954 00a2 00000000 		.4byte	0
 3955 00a6 00000000 		.4byte	0
 3956              	.LLST3:
 3957 00aa 00000000 		.4byte	.LVL61
 3958 00ae 0B000000 		.4byte	.LVL63-1
 3959 00b2 0100     		.2byte	0x1
 3960 00b4 51       		.byte	0x51
 3961 00b5 0B000000 		.4byte	.LVL63-1
 3962 00b9 6C000000 		.4byte	.LFE2
 3963 00bd 0400     		.2byte	0x4
 3964 00bf F3       		.byte	0xf3
 3965 00c0 01       		.uleb128 0x1
 3966 00c1 51       		.byte	0x51
 3967 00c2 9F       		.byte	0x9f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 110


 3968 00c3 00000000 		.4byte	0
 3969 00c7 00000000 		.4byte	0
 3970              	.LLST4:
 3971 00cb 00000000 		.4byte	.LVL64
 3972 00cf 09000000 		.4byte	.LVL65-1
 3973 00d3 0100     		.2byte	0x1
 3974 00d5 50       		.byte	0x50
 3975 00d6 09000000 		.4byte	.LVL65-1
 3976 00da F4000000 		.4byte	.LFE3
 3977 00de 0400     		.2byte	0x4
 3978 00e0 F3       		.byte	0xf3
 3979 00e1 01       		.uleb128 0x1
 3980 00e2 50       		.byte	0x50
 3981 00e3 9F       		.byte	0x9f
 3982 00e4 00000000 		.4byte	0
 3983 00e8 00000000 		.4byte	0
 3984              	.LLST5:
 3985 00ec 00000000 		.4byte	.LVL64
 3986 00f0 09000000 		.4byte	.LVL65-1
 3987 00f4 0100     		.2byte	0x1
 3988 00f6 51       		.byte	0x51
 3989 00f7 09000000 		.4byte	.LVL65-1
 3990 00fb F4000000 		.4byte	.LFE3
 3991 00ff 0400     		.2byte	0x4
 3992 0101 F3       		.byte	0xf3
 3993 0102 01       		.uleb128 0x1
 3994 0103 51       		.byte	0x51
 3995 0104 9F       		.byte	0x9f
 3996 0105 00000000 		.4byte	0
 3997 0109 00000000 		.4byte	0
 3998              	.LLST6:
 3999 010d 0C000000 		.4byte	.LVL66
 4000 0111 27000000 		.4byte	.LVL67-1
 4001 0115 0100     		.2byte	0x1
 4002 0117 50       		.byte	0x50
 4003 0118 27000000 		.4byte	.LVL67-1
 4004 011c 2A000000 		.4byte	.LVL68
 4005 0120 0100     		.2byte	0x1
 4006 0122 55       		.byte	0x55
 4007 0123 2A000000 		.4byte	.LVL68
 4008 0127 2C000000 		.4byte	.LVL69
 4009 012b 0100     		.2byte	0x1
 4010 012d 50       		.byte	0x50
 4011 012e 2C000000 		.4byte	.LVL69
 4012 0132 DC000000 		.4byte	.LVL74
 4013 0136 0100     		.2byte	0x1
 4014 0138 55       		.byte	0x55
 4015 0139 00000000 		.4byte	0
 4016 013d 00000000 		.4byte	0
 4017              	.LLST7:
 4018 0141 00000000 		.4byte	.LVL75
 4019 0145 07000000 		.4byte	.LVL76-1
 4020 0149 0100     		.2byte	0x1
 4021 014b 50       		.byte	0x50
 4022 014c 07000000 		.4byte	.LVL76-1
 4023 0150 F0000000 		.4byte	.LFE5
 4024 0154 0400     		.2byte	0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 111


 4025 0156 F3       		.byte	0xf3
 4026 0157 01       		.uleb128 0x1
 4027 0158 50       		.byte	0x50
 4028 0159 9F       		.byte	0x9f
 4029 015a 00000000 		.4byte	0
 4030 015e 00000000 		.4byte	0
 4031              	.LLST8:
 4032 0162 0A000000 		.4byte	.LVL77
 4033 0166 21000000 		.4byte	.LVL78-1
 4034 016a 0100     		.2byte	0x1
 4035 016c 50       		.byte	0x50
 4036 016d 21000000 		.4byte	.LVL78-1
 4037 0171 58000000 		.4byte	.LVL79
 4038 0175 0100     		.2byte	0x1
 4039 0177 55       		.byte	0x55
 4040 0178 58000000 		.4byte	.LVL79
 4041 017c 5B000000 		.4byte	.LVL80-1
 4042 0180 0100     		.2byte	0x1
 4043 0182 50       		.byte	0x50
 4044 0183 5B000000 		.4byte	.LVL80-1
 4045 0187 D6000000 		.4byte	.LVL84
 4046 018b 0100     		.2byte	0x1
 4047 018d 55       		.byte	0x55
 4048 018e 00000000 		.4byte	0
 4049 0192 00000000 		.4byte	0
 4050              	.LLST9:
 4051 0196 00000000 		.4byte	.LVL86
 4052 019a 07000000 		.4byte	.LVL87-1
 4053 019e 0100     		.2byte	0x1
 4054 01a0 50       		.byte	0x50
 4055 01a1 07000000 		.4byte	.LVL87-1
 4056 01a5 30000000 		.4byte	.LFE6
 4057 01a9 0400     		.2byte	0x4
 4058 01ab F3       		.byte	0xf3
 4059 01ac 01       		.uleb128 0x1
 4060 01ad 50       		.byte	0x50
 4061 01ae 9F       		.byte	0x9f
 4062 01af 00000000 		.4byte	0
 4063 01b3 00000000 		.4byte	0
 4064              	.LLST10:
 4065 01b7 08000000 		.4byte	.LVL87
 4066 01bb 23000000 		.4byte	.LVL89-1
 4067 01bf 0100     		.2byte	0x1
 4068 01c1 50       		.byte	0x50
 4069 01c2 00000000 		.4byte	0
 4070 01c6 00000000 		.4byte	0
 4071              	.LLST11:
 4072 01ca 18000000 		.4byte	.LVL88
 4073 01ce 28000000 		.4byte	.LVL90
 4074 01d2 0100     		.2byte	0x1
 4075 01d4 54       		.byte	0x54
 4076 01d5 28000000 		.4byte	.LVL90
 4077 01d9 30000000 		.4byte	.LFE6
 4078 01dd 0100     		.2byte	0x1
 4079 01df 50       		.byte	0x50
 4080 01e0 00000000 		.4byte	0
 4081 01e4 00000000 		.4byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 112


 4082              	.LLST12:
 4083 01e8 00000000 		.4byte	.LVL91
 4084 01ec 11000000 		.4byte	.LVL92-1
 4085 01f0 0100     		.2byte	0x1
 4086 01f2 50       		.byte	0x50
 4087 01f3 11000000 		.4byte	.LVL92-1
 4088 01f7 5C000000 		.4byte	.LFE9
 4089 01fb 0400     		.2byte	0x4
 4090 01fd F3       		.byte	0xf3
 4091 01fe 01       		.uleb128 0x1
 4092 01ff 50       		.byte	0x50
 4093 0200 9F       		.byte	0x9f
 4094 0201 00000000 		.4byte	0
 4095 0205 00000000 		.4byte	0
 4096              	.LLST13:
 4097 0209 00000000 		.4byte	.LVL94
 4098 020d 11000000 		.4byte	.LVL95-1
 4099 0211 0100     		.2byte	0x1
 4100 0213 50       		.byte	0x50
 4101 0214 11000000 		.4byte	.LVL95-1
 4102 0218 5C000000 		.4byte	.LFE11
 4103 021c 0400     		.2byte	0x4
 4104 021e F3       		.byte	0xf3
 4105 021f 01       		.uleb128 0x1
 4106 0220 50       		.byte	0x50
 4107 0221 9F       		.byte	0x9f
 4108 0222 00000000 		.4byte	0
 4109 0226 00000000 		.4byte	0
 4110              		.section	.debug_aranges,"",%progbits
 4111 0000 94000000 		.4byte	0x94
 4112 0004 0200     		.2byte	0x2
 4113 0006 00000000 		.4byte	.Ldebug_info0
 4114 000a 04       		.byte	0x4
 4115 000b 00       		.byte	0
 4116 000c 0000     		.2byte	0
 4117 000e 0000     		.2byte	0
 4118 0010 00000000 		.4byte	.LFB12
 4119 0014 FC010000 		.4byte	.LFE12-.LFB12
 4120 0018 00000000 		.4byte	.LFB13
 4121 001c D4000000 		.4byte	.LFE13-.LFB13
 4122 0020 00000000 		.4byte	.LFB14
 4123 0024 A0000000 		.4byte	.LFE14-.LFB14
 4124 0028 00000000 		.4byte	.LFB7
 4125 002c 8C000000 		.4byte	.LFE7-.LFB7
 4126 0030 00000000 		.4byte	.LFB15
 4127 0034 48000000 		.4byte	.LFE15-.LFB15
 4128 0038 00000000 		.4byte	.LFB8
 4129 003c 58000000 		.4byte	.LFE8-.LFB8
 4130 0040 00000000 		.4byte	.LFB0
 4131 0044 18020000 		.4byte	.LFE0-.LFB0
 4132 0048 00000000 		.4byte	.LFB1
 4133 004c 4C020000 		.4byte	.LFE1-.LFB1
 4134 0050 00000000 		.4byte	.LFB2
 4135 0054 6C000000 		.4byte	.LFE2-.LFB2
 4136 0058 00000000 		.4byte	.LFB3
 4137 005c F4000000 		.4byte	.LFE3-.LFB3
 4138 0060 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 113


 4139 0064 F0000000 		.4byte	.LFE5-.LFB5
 4140 0068 00000000 		.4byte	.LFB4
 4141 006c 0A000000 		.4byte	.LFE4-.LFB4
 4142 0070 00000000 		.4byte	.LFB6
 4143 0074 30000000 		.4byte	.LFE6-.LFB6
 4144 0078 00000000 		.4byte	.LFB9
 4145 007c 5C000000 		.4byte	.LFE9-.LFB9
 4146 0080 00000000 		.4byte	.LFB10
 4147 0084 2C000000 		.4byte	.LFE10-.LFB10
 4148 0088 00000000 		.4byte	.LFB11
 4149 008c 5C000000 		.4byte	.LFE11-.LFB11
 4150 0090 00000000 		.4byte	0
 4151 0094 00000000 		.4byte	0
 4152              		.section	.debug_ranges,"",%progbits
 4153              	.Ldebug_ranges0:
 4154 0000 00000000 		.4byte	.LFB12
 4155 0004 FC010000 		.4byte	.LFE12
 4156 0008 00000000 		.4byte	.LFB13
 4157 000c D4000000 		.4byte	.LFE13
 4158 0010 00000000 		.4byte	.LFB14
 4159 0014 A0000000 		.4byte	.LFE14
 4160 0018 00000000 		.4byte	.LFB7
 4161 001c 8C000000 		.4byte	.LFE7
 4162 0020 00000000 		.4byte	.LFB15
 4163 0024 48000000 		.4byte	.LFE15
 4164 0028 00000000 		.4byte	.LFB8
 4165 002c 58000000 		.4byte	.LFE8
 4166 0030 00000000 		.4byte	.LFB0
 4167 0034 18020000 		.4byte	.LFE0
 4168 0038 00000000 		.4byte	.LFB1
 4169 003c 4C020000 		.4byte	.LFE1
 4170 0040 00000000 		.4byte	.LFB2
 4171 0044 6C000000 		.4byte	.LFE2
 4172 0048 00000000 		.4byte	.LFB3
 4173 004c F4000000 		.4byte	.LFE3
 4174 0050 00000000 		.4byte	.LFB5
 4175 0054 F0000000 		.4byte	.LFE5
 4176 0058 00000000 		.4byte	.LFB4
 4177 005c 0A000000 		.4byte	.LFE4
 4178 0060 00000000 		.4byte	.LFB6
 4179 0064 30000000 		.4byte	.LFE6
 4180 0068 00000000 		.4byte	.LFB9
 4181 006c 5C000000 		.4byte	.LFE9
 4182 0070 00000000 		.4byte	.LFB10
 4183 0074 2C000000 		.4byte	.LFE10
 4184 0078 00000000 		.4byte	.LFB11
 4185 007c 5C000000 		.4byte	.LFE11
 4186 0080 00000000 		.4byte	0
 4187 0084 00000000 		.4byte	0
 4188              		.section	.debug_line,"",%progbits
 4189              	.Ldebug_line0:
 4190 0000 62030000 		.section	.debug_str,"MS",%progbits,1
 4190      02006500 
 4190      00000201 
 4190      FB0E0D00 
 4190      01010101 
 4191              	.LASF87:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 114


 4192 0000 43795664 		.ascii	"CyVdLvAnalogDisable\000"
 4192      4C76416E 
 4192      616C6F67 
 4192      44697361 
 4192      626C6500 
 4193              	.LASF10:
 4194 0014 75696E74 		.ascii	"uint16\000"
 4194      313600
 4195              	.LASF99:
 4196 001b 4379494D 		.ascii	"CyIMO_Start\000"
 4196      4F5F5374 
 4196      61727400 
 4197              	.LASF114:
 4198 0027 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 4198      4320342E 
 4198      382E3420 
 4198      32303134 
 4198      30353236 
 4199 005a 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 4199      20726576 
 4199      6973696F 
 4199      6E203231 
 4199      31333538 
 4200 008d 67202D66 		.ascii	"g -ffunction-sections\000"
 4200      66756E63 
 4200      74696F6E 
 4200      2D736563 
 4200      74696F6E 
 4201              	.LASF58:
 4202 00a3 4379506D 		.ascii	"CyPmHibSlpRestore\000"
 4202      48696253 
 4202      6C705265 
 4202      73746F72 
 4202      6500
 4203              	.LASF43:
 4204 00b5 77616B65 		.ascii	"wakeupTrim0\000"
 4204      75705472 
 4204      696D3000 
 4205              	.LASF44:
 4206 00c1 77616B65 		.ascii	"wakeupTrim1\000"
 4206      75705472 
 4206      696D3100 
 4207              	.LASF20:
 4208 00cd 6D617374 		.ascii	"masterClkSrc\000"
 4208      6572436C 
 4208      6B537263 
 4208      00
 4209              	.LASF56:
 4210 00da 43595F50 		.ascii	"CY_PM_BACKUP_STRUCT\000"
 4210      4D5F4241 
 4210      434B5550 
 4210      5F535452 
 4210      55435400 
 4211              	.LASF113:
 4212 00ee 43795854 		.ascii	"CyXTAL_32KHZ_Start\000"
 4212      414C5F33 
 4212      324B485A 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 115


 4212      5F537461 
 4212      727400
 4213              	.LASF28:
 4214 0101 636C6B53 		.ascii	"clkSyncDiv\000"
 4214      796E6344 
 4214      697600
 4215              	.LASF64:
 4216 010c 4379506D 		.ascii	"CyPmRestoreClocks\000"
 4216      52657374 
 4216      6F726543 
 4216      6C6F636B 
 4216      7300
 4217              	.LASF7:
 4218 011e 6C6F6E67 		.ascii	"long long unsigned int\000"
 4218      206C6F6E 
 4218      6720756E 
 4218      7369676E 
 4218      65642069 
 4219              	.LASF59:
 4220 0135 4379506D 		.ascii	"CyPmHviLviSaveDisable\000"
 4220      4876694C 
 4220      76695361 
 4220      76654469 
 4220      7361626C 
 4221              	.LASF77:
 4222 014b 746D7053 		.ascii	"tmpStatus\000"
 4222      74617475 
 4222      7300
 4223              	.LASF49:
 4224 0155 6C766961 		.ascii	"lviaTrip\000"
 4224      54726970 
 4224      00
 4225              	.LASF22:
 4226 015e 696D6F55 		.ascii	"imoUsbClk\000"
 4226      7362436C 
 4226      6B00
 4227              	.LASF81:
 4228 0168 4379506D 		.ascii	"CyPmFtwSetInterval\000"
 4228      46747753 
 4228      6574496E 
 4228      74657276 
 4228      616C00
 4229              	.LASF50:
 4230 017b 68766961 		.ascii	"hviaEn\000"
 4230      456E00
 4231              	.LASF89:
 4232 0182 43795664 		.ascii	"CyVdLvDigitEnable\000"
 4232      4C764469 
 4232      67697445 
 4232      6E61626C 
 4232      6500
 4233              	.LASF36:
 4234 0194 696C6F50 		.ascii	"iloPowerMode\000"
 4234      6F776572 
 4234      4D6F6465 
 4234      00
 4235              	.LASF6:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 116


 4236 01a1 6C6F6E67 		.ascii	"long long int\000"
 4236      206C6F6E 
 4236      6720696E 
 4236      7400
 4237              	.LASF0:
 4238 01af 7369676E 		.ascii	"signed char\000"
 4238      65642063 
 4238      68617200 
 4239              	.LASF29:
 4240 01bb 636C6B42 		.ascii	"clkBusDiv\000"
 4240      75734469 
 4240      7600
 4241              	.LASF72:
 4242 01c5 696E7465 		.ascii	"interruptState\000"
 4242      72727570 
 4242      74537461 
 4242      746500
 4243              	.LASF92:
 4244 01d4 4379494C 		.ascii	"CyILO_Start1K\000"
 4244      4F5F5374 
 4244      61727431 
 4244      4B00
 4245              	.LASF27:
 4246 01e2 696D6F32 		.ascii	"imo2x\000"
 4246      7800
 4247              	.LASF4:
 4248 01e8 6C6F6E67 		.ascii	"long int\000"
 4248      20696E74 
 4248      00
 4249              	.LASF61:
 4250 01f1 4379506D 		.ascii	"CyPmHviLviRestore\000"
 4250      4876694C 
 4250      76695265 
 4250      73746F72 
 4250      6500
 4251              	.LASF9:
 4252 0203 75696E74 		.ascii	"uint8\000"
 4252      3800
 4253              	.LASF110:
 4254 0209 4379504C 		.ascii	"CyPLL_OUT_Start\000"
 4254      4C5F4F55 
 4254      545F5374 
 4254      61727400 
 4255              	.LASF100:
 4256 0219 43794465 		.ascii	"CyDelayUs\000"
 4256      6C617955 
 4256      7300
 4257              	.LASF13:
 4258 0223 646F7562 		.ascii	"double\000"
 4258      6C6500
 4259              	.LASF115:
 4260 022a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\cyPm.c\000"
 4260      6E657261 
 4260      7465645F 
 4260      536F7572 
 4260      63655C50 
 4261              	.LASF11:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 117


 4262 024a 75696E74 		.ascii	"uint32\000"
 4262      333200
 4263              	.LASF31:
 4264 0251 786D687A 		.ascii	"xmhzEnableState\000"
 4264      456E6162 
 4264      6C655374 
 4264      61746500 
 4265              	.LASF62:
 4266 0261 4379506D 		.ascii	"CyPmHibRestore\000"
 4266      48696252 
 4266      6573746F 
 4266      726500
 4267              	.LASF116:
 4268 0270 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\P"
 4268      73657273 
 4268      5C6D6974 
 4268      6368656C 
 4268      6C5C446F 
 4269 029d 536F435C 		.ascii	"SoC\\E-Throttle.cydsn\000"
 4269      452D5468 
 4269      726F7474 
 4269      6C652E63 
 4269      7964736E 
 4270              	.LASF75:
 4271 02b2 6D61736B 		.ascii	"mask\000"
 4271      00
 4272              	.LASF53:
 4273 02b7 696D6F41 		.ascii	"imoActFreq\000"
 4273      63744672 
 4273      657100
 4274              	.LASF8:
 4275 02c2 756E7369 		.ascii	"unsigned int\000"
 4275      676E6564 
 4275      20696E74 
 4275      00
 4276              	.LASF45:
 4277 02cf 73636374 		.ascii	"scctData\000"
 4277      44617461 
 4277      00
 4278              	.LASF101:
 4279 02d8 4379494D 		.ascii	"CyIMO_SetSource\000"
 4279      4F5F5365 
 4279      74536F75 
 4279      72636500 
 4280              	.LASF21:
 4281 02e8 696D6F46 		.ascii	"imoFreq\000"
 4281      72657100 
 4282              	.LASF5:
 4283 02f0 6C6F6E67 		.ascii	"long unsigned int\000"
 4283      20756E73 
 4283      69676E65 
 4283      6420696E 
 4283      7400
 4284              	.LASF46:
 4285 0302 6C766964 		.ascii	"lvidEn\000"
 4285      456E00
 4286              	.LASF34:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 118


 4287 0309 6379506D 		.ascii	"cyPmClockBackupStruct\000"
 4287      436C6F63 
 4287      6B426163 
 4287      6B757053 
 4287      74727563 
 4288              	.LASF118:
 4289 031f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4289      74657243 
 4289      72697469 
 4289      63616C53 
 4289      65637469 
 4290              	.LASF35:
 4291 0336 6379506D 		.ascii	"cyPmBackupStruct\000"
 4291      4261636B 
 4291      75705374 
 4291      72756374 
 4291      00
 4292              	.LASF107:
 4293 0347 4379494C 		.ascii	"CyILO_SetPowerMode\000"
 4293      4F5F5365 
 4293      74506F77 
 4293      65724D6F 
 4293      646500
 4294              	.LASF111:
 4295 035a 4379494D 		.ascii	"CyIMO_Stop\000"
 4295      4F5F5374 
 4295      6F7000
 4296              	.LASF33:
 4297 0365 43595F50 		.ascii	"CY_PM_CLOCK_BACKUP_STRUCT\000"
 4297      4D5F434C 
 4297      4F434B5F 
 4297      4241434B 
 4297      55505F53 
 4298              	.LASF3:
 4299 037f 73686F72 		.ascii	"short unsigned int\000"
 4299      7420756E 
 4299      7369676E 
 4299      65642069 
 4299      6E7400
 4300              	.LASF79:
 4301 0392 63747749 		.ascii	"ctwInterval\000"
 4301      6E746572 
 4301      76616C00 
 4302              	.LASF88:
 4303 039e 43795664 		.ascii	"CyVdHvAnalogDisable\000"
 4303      4876416E 
 4303      616C6F67 
 4303      44697361 
 4303      626C6500 
 4304              	.LASF95:
 4305 03b2 43794D61 		.ascii	"CyMasterClk_SetSource\000"
 4305      73746572 
 4305      436C6B5F 
 4305      53657453 
 4305      6F757263 
 4306              	.LASF40:
 4307 03c8 77616B65 		.ascii	"wakeupCfg0\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 119


 4307      75704366 
 4307      673000
 4308              	.LASF41:
 4309 03d3 77616B65 		.ascii	"wakeupCfg1\000"
 4309      75704366 
 4309      673100
 4310              	.LASF42:
 4311 03de 77616B65 		.ascii	"wakeupCfg2\000"
 4311      75704366 
 4311      673200
 4312              	.LASF66:
 4313 03e9 636C6B42 		.ascii	"clkBusDivTmp\000"
 4313      75734469 
 4313      76546D70 
 4313      00
 4314              	.LASF55:
 4315 03f6 626F6F73 		.ascii	"boostRefExt\000"
 4315      74526566 
 4315      45787400 
 4316              	.LASF26:
 4317 0402 636C6B49 		.ascii	"clkImoSrc\000"
 4317      6D6F5372 
 4317      6300
 4318              	.LASF63:
 4319 040c 4379506D 		.ascii	"CyPmSaveClocks\000"
 4319      53617665 
 4319      436C6F63 
 4319      6B7300
 4320              	.LASF108:
 4321 041b 43795854 		.ascii	"CyXTAL_Start\000"
 4321      414C5F53 
 4321      74617274 
 4321      00
 4322              	.LASF39:
 4323 0428 736C7054 		.ascii	"slpTrBypass\000"
 4323      72427970 
 4323      61737300 
 4324              	.LASF17:
 4325 0434 73697A65 		.ascii	"sizetype\000"
 4325      74797065 
 4325      00
 4326              	.LASF73:
 4327 043d 4379506D 		.ascii	"CyPmHibernateEx\000"
 4327      48696265 
 4327      726E6174 
 4327      65457800 
 4328              	.LASF67:
 4329 044d 6379506D 		.ascii	"cyPmImoFreqMhz2Reg\000"
 4329      496D6F46 
 4329      7265714D 
 4329      687A3252 
 4329      656700
 4330              	.LASF18:
 4331 0460 656E436C 		.ascii	"enClkA\000"
 4331      6B4100
 4332              	.LASF19:
 4333 0467 656E436C 		.ascii	"enClkD\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 120


 4333      6B4400
 4334              	.LASF93:
 4335 046e 4379494C 		.ascii	"CyILO_Start100K\000"
 4335      4F5F5374 
 4335      61727431 
 4335      30304B00 
 4336              	.LASF70:
 4337 047e 77616B65 		.ascii	"wakeupSource\000"
 4337      7570536F 
 4337      75726365 
 4337      00
 4338              	.LASF97:
 4339 048b 4379504C 		.ascii	"CyPLL_OUT_Stop\000"
 4339      4C5F4F55 
 4339      545F5374 
 4339      6F7000
 4340              	.LASF103:
 4341 049a 43794D61 		.ascii	"CyMasterClk_SetDivider\000"
 4341      73746572 
 4341      436C6B5F 
 4341      53657444 
 4341      69766964 
 4342              	.LASF25:
 4343 04b1 696D6F43 		.ascii	"imoClkSrc\000"
 4343      6C6B5372 
 4343      6300
 4344              	.LASF12:
 4345 04bb 666C6F61 		.ascii	"float\000"
 4345      7400
 4346              	.LASF112:
 4347 04c1 43794578 		.ascii	"CyExitCriticalSection\000"
 4347      69744372 
 4347      69746963 
 4347      616C5365 
 4347      6374696F 
 4348              	.LASF71:
 4349 04d7 4379506D 		.ascii	"CyPmSleep\000"
 4349      536C6565 
 4349      7000
 4350              	.LASF51:
 4351 04e1 6C766964 		.ascii	"lvidRst\000"
 4351      52737400 
 4352              	.LASF68:
 4353 04e9 4379506D 		.ascii	"CyPmAltAct\000"
 4353      416C7441 
 4353      637400
 4354              	.LASF106:
 4355 04f4 43794465 		.ascii	"CyDelayCycles\000"
 4355      6C617943 
 4355      79636C65 
 4355      7300
 4356              	.LASF16:
 4357 0502 72656738 		.ascii	"reg8\000"
 4357      00
 4358              	.LASF96:
 4359 0507 43794861 		.ascii	"CyHalt\000"
 4359      6C7400
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 121


 4360              	.LASF80:
 4361 050e 4379506D 		.ascii	"CyPmOppsSet\000"
 4361      4F707073 
 4361      53657400 
 4362              	.LASF1:
 4363 051a 756E7369 		.ascii	"unsigned char\000"
 4363      676E6564 
 4363      20636861 
 4363      7200
 4364              	.LASF84:
 4365 0528 6379506D 		.ascii	"cyPmClockBackup\000"
 4365      436C6F63 
 4365      6B426163 
 4365      6B757000 
 4366              	.LASF30:
 4367 0538 706C6C45 		.ascii	"pllEnableState\000"
 4367      6E61626C 
 4367      65537461 
 4367      746500
 4368              	.LASF37:
 4369 0547 696C6F31 		.ascii	"ilo1kEnable\000"
 4369      6B456E61 
 4369      626C6500 
 4370              	.LASF2:
 4371 0553 73686F72 		.ascii	"short int\000"
 4371      7420696E 
 4371      7400
 4372              	.LASF57:
 4373 055d 4379506D 		.ascii	"CyPmHibSlpSaveSet\000"
 4373      48696253 
 4373      6C705361 
 4373      76655365 
 4373      7400
 4374              	.LASF38:
 4375 056f 696C6F31 		.ascii	"ilo100kEnable\000"
 4375      30306B45 
 4375      6E61626C 
 4375      6500
 4376              	.LASF14:
 4377 057d 63686172 		.ascii	"char\000"
 4377      00
 4378              	.LASF102:
 4379 0582 4379494D 		.ascii	"CyIMO_DisableDoubler\000"
 4379      4F5F4469 
 4379      7361626C 
 4379      65446F75 
 4379      626C6572 
 4380              	.LASF86:
 4381 0597 43795664 		.ascii	"CyVdLvDigitDisable\000"
 4381      4C764469 
 4381      67697444 
 4381      69736162 
 4381      6C6500
 4382              	.LASF54:
 4383 05aa 696D6F41 		.ascii	"imoActFreq12Mhz\000"
 4383      63744672 
 4383      65713132 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 122


 4383      4D687A00 
 4384              	.LASF74:
 4385 05ba 4379506D 		.ascii	"CyPmHibernate\000"
 4385      48696265 
 4385      726E6174 
 4385      6500
 4386              	.LASF94:
 4387 05c8 4379466C 		.ascii	"CyFlash_SetWaitCycles\000"
 4387      6173685F 
 4387      53657457 
 4387      61697443 
 4387      79636C65 
 4388              	.LASF82:
 4389 05de 66747749 		.ascii	"ftwInterval\000"
 4389      6E746572 
 4389      76616C00 
 4390              	.LASF85:
 4391 05ea 6379506D 		.ascii	"cyPmImoFreqReg2Mhz\000"
 4391      496D6F46 
 4391      72657152 
 4391      6567324D 
 4391      687A00
 4392              	.LASF117:
 4393 05fd 4379506D 		.ascii	"CyPmReadStatus\000"
 4393      52656164 
 4393      53746174 
 4393      757300
 4394              	.LASF104:
 4395 060c 43794275 		.ascii	"CyBusClk_SetDivider\000"
 4395      73436C6B 
 4395      5F536574 
 4395      44697669 
 4395      64657200 
 4396              	.LASF32:
 4397 0620 636C6B44 		.ascii	"clkDistDelay\000"
 4397      69737444 
 4397      656C6179 
 4397      00
 4398              	.LASF78:
 4399 062d 4379506D 		.ascii	"CyPmCtwSetInterval\000"
 4399      43747753 
 4399      6574496E 
 4399      74657276 
 4399      616C00
 4400              	.LASF65:
 4401 0640 73746174 		.ascii	"status\000"
 4401      757300
 4402              	.LASF48:
 4403 0647 6C766961 		.ascii	"lviaEn\000"
 4403      456E00
 4404              	.LASF98:
 4405 064e 4379494D 		.ascii	"CyIMO_SetFreq\000"
 4405      4F5F5365 
 4405      74467265 
 4405      7100
 4406              	.LASF109:
 4407 065c 4379494D 		.ascii	"CyIMO_EnableDoubler\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 123


 4407      4F5F456E 
 4407      61626C65 
 4407      446F7562 
 4407      6C657200 
 4408              	.LASF60:
 4409 0670 4379506D 		.ascii	"CyPmHibSaveSet\000"
 4409      48696253 
 4409      61766553 
 4409      657400
 4410              	.LASF69:
 4411 067f 77616B65 		.ascii	"wakeupTime\000"
 4411      75705469 
 4411      6D6500
 4412              	.LASF90:
 4413 068a 43795664 		.ascii	"CyVdLvAnalogEnable\000"
 4413      4C76416E 
 4413      616C6F67 
 4413      456E6162 
 4413      6C6500
 4414              	.LASF15:
 4415 069d 63797374 		.ascii	"cystatus\000"
 4415      61747573 
 4415      00
 4416              	.LASF23:
 4417 06a6 666C6173 		.ascii	"flashWaitCycles\000"
 4417      68576169 
 4417      74437963 
 4417      6C657300 
 4418              	.LASF52:
 4419 06b6 6C766961 		.ascii	"lviaRst\000"
 4419      52737400 
 4420              	.LASF91:
 4421 06be 43795664 		.ascii	"CyVdHvAnalogEnable\000"
 4421      4876416E 
 4421      616C6F67 
 4421      456E6162 
 4421      6C6500
 4422              	.LASF105:
 4423 06d1 43795854 		.ascii	"CyXTAL_Stop\000"
 4423      414C5F53 
 4423      746F7000 
 4424              	.LASF83:
 4425 06dd 6379506D 		.ascii	"cyPmBackup\000"
 4425      4261636B 
 4425      757000
 4426              	.LASF47:
 4427 06e8 6C766964 		.ascii	"lvidTrip\000"
 4427      54726970 
 4427      00
 4428              	.LASF24:
 4429 06f1 696D6F45 		.ascii	"imoEnable\000"
 4429      6E61626C 
 4429      6500
 4430              	.LASF76:
 4431 06fb 696E7465 		.ascii	"interruptStatus\000"
 4431      72727570 
 4431      74537461 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccWgMjLk.s 			page 124


 4431      74757300 
 4432              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
