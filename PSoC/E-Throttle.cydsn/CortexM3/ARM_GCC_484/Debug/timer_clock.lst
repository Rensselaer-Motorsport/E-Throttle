ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"timer_clock.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.timer_clock_Start,"ax",%progbits
  19              		.align	2
  20              		.global	timer_clock_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	timer_clock_Start, %function
  24              	timer_clock_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\timer_clock.c"
   1:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/timer_clock.c **** * File Name: timer_clock.c
   3:.\Generated_Source\PSoC5/timer_clock.c **** * Version 2.20
   4:.\Generated_Source\PSoC5/timer_clock.c **** *
   5:.\Generated_Source\PSoC5/timer_clock.c **** *  Description:
   6:.\Generated_Source\PSoC5/timer_clock.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/timer_clock.c **** *
   8:.\Generated_Source\PSoC5/timer_clock.c **** *  Note:
   9:.\Generated_Source\PSoC5/timer_clock.c **** *
  10:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/timer_clock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/timer_clock.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/timer_clock.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/timer_clock.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/timer_clock.c **** 
  17:.\Generated_Source\PSoC5/timer_clock.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/timer_clock.c **** #include "timer_clock.h"
  19:.\Generated_Source\PSoC5/timer_clock.c **** 
  20:.\Generated_Source\PSoC5/timer_clock.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/timer_clock.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/timer_clock.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/timer_clock.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/timer_clock.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/timer_clock.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/timer_clock.c **** 
  27:.\Generated_Source\PSoC5/timer_clock.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/timer_clock.c **** 
  29:.\Generated_Source\PSoC5/timer_clock.c **** 
  30:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_Start
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 2


  32:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/timer_clock.c **** *
  34:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
  35:.\Generated_Source\PSoC5/timer_clock.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/timer_clock.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/timer_clock.c **** *
  38:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
  39:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  40:.\Generated_Source\PSoC5/timer_clock.c **** *
  41:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
  42:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  43:.\Generated_Source\PSoC5/timer_clock.c **** *
  44:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_Start(void) 
  46:.\Generated_Source\PSoC5/timer_clock.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/timer_clock.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/timer_clock.c ****     timer_clock_CLKEN |= timer_clock_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 054B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F02002 		orr	r2, r2, #32
  36 0008 1A70     		strb	r2, [r3]
  49:.\Generated_Source\PSoC5/timer_clock.c **** 	timer_clock_CLKSTBY |= timer_clock_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 1033     		adds	r3, r3, #16
  39 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  40 000e 42F02002 		orr	r2, r2, #32
  41 0012 1A70     		strb	r2, [r3]
  42 0014 7047     		bx	lr
  43              	.L3:
  44 0016 00BF     		.align	2
  45              	.L2:
  46 0018 A2430040 		.word	1073759138
  47              		.cfi_endproc
  48              	.LFE0:
  49              		.size	timer_clock_Start, .-timer_clock_Start
  50              		.section	.text.timer_clock_Stop,"ax",%progbits
  51              		.align	2
  52              		.global	timer_clock_Stop
  53              		.thumb
  54              		.thumb_func
  55              		.type	timer_clock_Stop, %function
  56              	timer_clock_Stop:
  57              	.LFB1:
  50:.\Generated_Source\PSoC5/timer_clock.c **** }
  51:.\Generated_Source\PSoC5/timer_clock.c **** 
  52:.\Generated_Source\PSoC5/timer_clock.c **** 
  53:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_Stop
  55:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/timer_clock.c **** *
  57:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 3


  58:.\Generated_Source\PSoC5/timer_clock.c **** *  Stops the clock and returns immediately. This API does not require the
  59:.\Generated_Source\PSoC5/timer_clock.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/timer_clock.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/timer_clock.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/timer_clock.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/timer_clock.c **** *
  64:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
  65:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  66:.\Generated_Source\PSoC5/timer_clock.c **** *
  67:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
  68:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  69:.\Generated_Source\PSoC5/timer_clock.c **** *
  70:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_Stop(void) 
  72:.\Generated_Source\PSoC5/timer_clock.c **** {
  58              		.loc 1 72 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/timer_clock.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/timer_clock.c ****     timer_clock_CLKEN &= (uint8)(~timer_clock_CLKEN_MASK);
  63              		.loc 1 74 0
  64 0000 054B     		ldr	r3, .L5
  65 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  66 0004 02F0DF02 		and	r2, r2, #223
  67 0008 1A70     		strb	r2, [r3]
  75:.\Generated_Source\PSoC5/timer_clock.c **** 	timer_clock_CLKSTBY &= (uint8)(~timer_clock_CLKSTBY_MASK);
  68              		.loc 1 75 0
  69 000a 1033     		adds	r3, r3, #16
  70 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  71 000e 02F0DF02 		and	r2, r2, #223
  72 0012 1A70     		strb	r2, [r3]
  73 0014 7047     		bx	lr
  74              	.L6:
  75 0016 00BF     		.align	2
  76              	.L5:
  77 0018 A2430040 		.word	1073759138
  78              		.cfi_endproc
  79              	.LFE1:
  80              		.size	timer_clock_Stop, .-timer_clock_Stop
  81              		.section	.text.timer_clock_StopBlock,"ax",%progbits
  82              		.align	2
  83              		.global	timer_clock_StopBlock
  84              		.thumb
  85              		.thumb_func
  86              		.type	timer_clock_StopBlock, %function
  87              	timer_clock_StopBlock:
  88              	.LFB2:
  76:.\Generated_Source\PSoC5/timer_clock.c **** }
  77:.\Generated_Source\PSoC5/timer_clock.c **** 
  78:.\Generated_Source\PSoC5/timer_clock.c **** 
  79:.\Generated_Source\PSoC5/timer_clock.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/timer_clock.c **** 
  81:.\Generated_Source\PSoC5/timer_clock.c **** 
  82:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_StopBlock
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 4


  84:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/timer_clock.c **** *
  86:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
  87:.\Generated_Source\PSoC5/timer_clock.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/timer_clock.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/timer_clock.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/timer_clock.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/timer_clock.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/timer_clock.c **** *
  93:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
  94:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  95:.\Generated_Source\PSoC5/timer_clock.c **** *
  96:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
  97:.\Generated_Source\PSoC5/timer_clock.c **** *  None
  98:.\Generated_Source\PSoC5/timer_clock.c **** *
  99:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_StopBlock(void) 
 101:.\Generated_Source\PSoC5/timer_clock.c **** {
  89              		.loc 1 101 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 102:.\Generated_Source\PSoC5/timer_clock.c ****     if ((timer_clock_CLKEN & timer_clock_CLKEN_MASK) != 0u)
  94              		.loc 1 102 0
  95 0000 174B     		ldr	r3, .L11
  96 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  97 0004 13F0200F 		tst	r3, #32
  98 0008 28D0     		beq	.L7
  99              	.LBB2:
 103:.\Generated_Source\PSoC5/timer_clock.c ****     {
 104:.\Generated_Source\PSoC5/timer_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/timer_clock.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/timer_clock.c **** 
 107:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_LD = 0u;
 100              		.loc 1 107 0
 101 000a 164B     		ldr	r3, .L11+4
 102 000c 0022     		movs	r2, #0
 103 000e 1A70     		strb	r2, [r3]
 108:.\Generated_Source\PSoC5/timer_clock.c **** 
 109:.\Generated_Source\PSoC5/timer_clock.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/timer_clock.c **** #if defined(timer_clock__CFG3)
 111:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_AMASK = timer_clock_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/timer_clock.c **** #else
 114:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_DMASK = timer_clock_CLKEN_MASK;
 104              		.loc 1 114 0
 105 0010 2020     		movs	r0, #32
 106 0012 1549     		ldr	r1, .L11+8
 107 0014 0870     		strb	r0, [r1]
 115:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_AMASK = 0x00u;
 108              		.loc 1 115 0
 109 0016 0431     		adds	r1, r1, #4
 110 0018 0A70     		strb	r2, [r1]
 116:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* timer_clock__CFG3 */
 117:.\Generated_Source\PSoC5/timer_clock.c **** 
 118:.\Generated_Source\PSoC5/timer_clock.c ****         /* Clear mask of bus clock. */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 5


 119:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 111              		.loc 1 119 0
 112 001a 144A     		ldr	r2, .L11+12
 113 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 114 001e 01F07F01 		and	r1, r1, #127
 115 0022 1170     		strb	r1, [r2]
 120:.\Generated_Source\PSoC5/timer_clock.c **** 
 121:.\Generated_Source\PSoC5/timer_clock.c ****         oldDivider = CY_GET_REG16(timer_clock_DIV_PTR);
 116              		.loc 1 121 0
 117 0024 8C32     		adds	r2, r2, #140
 118 0026 1188     		ldrh	r1, [r2]
 119 0028 89B2     		uxth	r1, r1
 120              	.LVL0:
 122:.\Generated_Source\PSoC5/timer_clock.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 121              		.loc 1 122 0
 122 002a 923A     		subs	r2, r2, #146
 123 002c 1180     		strh	r1, [r2]	@ movhi
 123:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 124              		.loc 1 123 0
 125 002e 0722     		movs	r2, #7
 126 0030 1A70     		strb	r2, [r3]
 124:.\Generated_Source\PSoC5/timer_clock.c **** 
 125:.\Generated_Source\PSoC5/timer_clock.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/timer_clock.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 127              		.loc 1 126 0
 128 0032 1A46     		mov	r2, r3
 129              	.L9:
 130              		.loc 1 126 0 is_stmt 0 discriminator 1
 131 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 132 0036 13F0010F 		tst	r3, #1
 133 003a FBD1     		bne	.L9
 127:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/timer_clock.c **** 
 129:.\Generated_Source\PSoC5/timer_clock.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_CLKEN &= (uint8)(~timer_clock_CLKEN_MASK);
 134              		.loc 1 130 0 is_stmt 1
 135 003c 084B     		ldr	r3, .L11
 136 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 137 0040 02F0DF02 		and	r2, r2, #223
 138 0044 1A70     		strb	r2, [r3]
 131:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_CLKSTBY &= (uint8)(~timer_clock_CLKSTBY_MASK);
 139              		.loc 1 131 0
 140 0046 1033     		adds	r3, r3, #16
 141 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 142 004a 02F0DF02 		and	r2, r2, #223
 143 004e 1A70     		strb	r2, [r3]
 132:.\Generated_Source\PSoC5/timer_clock.c **** 
 133:.\Generated_Source\PSoC5/timer_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/timer_clock.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/timer_clock.c ****         CLK_DIST_LD = 0x00u;
 144              		.loc 1 135 0
 145 0050 0022     		movs	r2, #0
 146 0052 A3F2B133 		subw	r3, r3, #945
 147 0056 1A70     		strb	r2, [r3]
 136:.\Generated_Source\PSoC5/timer_clock.c ****         CY_SET_REG16(timer_clock_DIV_PTR, oldDivider);
 148              		.loc 1 136 0
 149 0058 9333     		adds	r3, r3, #147
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 6


 150 005a 1980     		strh	r1, [r3]	@ movhi
 151              	.LVL1:
 152              	.L7:
 153 005c 7047     		bx	lr
 154              	.L12:
 155 005e 00BF     		.align	2
 156              	.L11:
 157 0060 A2430040 		.word	1073759138
 158 0064 01400040 		.word	1073758209
 159 0068 10400040 		.word	1073758224
 160 006c 08400040 		.word	1073758216
 161              	.LBE2:
 162              		.cfi_endproc
 163              	.LFE2:
 164              		.size	timer_clock_StopBlock, .-timer_clock_StopBlock
 165              		.section	.text.timer_clock_StandbyPower,"ax",%progbits
 166              		.align	2
 167              		.global	timer_clock_StandbyPower
 168              		.thumb
 169              		.thumb_func
 170              		.type	timer_clock_StandbyPower, %function
 171              	timer_clock_StandbyPower:
 172              	.LFB3:
 137:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/timer_clock.c ****     }
 139:.\Generated_Source\PSoC5/timer_clock.c **** }
 140:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/timer_clock.c **** 
 142:.\Generated_Source\PSoC5/timer_clock.c **** 
 143:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_StandbyPower
 145:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/timer_clock.c **** *
 147:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 148:.\Generated_Source\PSoC5/timer_clock.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/timer_clock.c **** *
 150:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 151:.\Generated_Source\PSoC5/timer_clock.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/timer_clock.c **** *
 153:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 154:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 155:.\Generated_Source\PSoC5/timer_clock.c **** *
 156:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/timer_clock.c **** {
 173              		.loc 1 158 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 159:.\Generated_Source\PSoC5/timer_clock.c ****     if(state == 0u)
 179              		.loc 1 159 0
 180 0000 28B9     		cbnz	r0, .L14
 160:.\Generated_Source\PSoC5/timer_clock.c ****     {
 161:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_CLKSTBY &= (uint8)(~timer_clock_CLKSTBY_MASK);
 181              		.loc 1 161 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 7


 182 0002 064B     		ldr	r3, .L16
 183 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 184 0006 02F0DF02 		and	r2, r2, #223
 185 000a 1A70     		strb	r2, [r3]
 186 000c 7047     		bx	lr
 187              	.L14:
 162:.\Generated_Source\PSoC5/timer_clock.c ****     }
 163:.\Generated_Source\PSoC5/timer_clock.c ****     else
 164:.\Generated_Source\PSoC5/timer_clock.c ****     {
 165:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_CLKSTBY |= timer_clock_CLKSTBY_MASK;
 188              		.loc 1 165 0
 189 000e 034B     		ldr	r3, .L16
 190 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 191 0012 42F02002 		orr	r2, r2, #32
 192 0016 1A70     		strb	r2, [r3]
 193 0018 7047     		bx	lr
 194              	.L17:
 195 001a 00BF     		.align	2
 196              	.L16:
 197 001c B2430040 		.word	1073759154
 198              		.cfi_endproc
 199              	.LFE3:
 200              		.size	timer_clock_StandbyPower, .-timer_clock_StandbyPower
 201              		.section	.text.timer_clock_GetDividerRegister,"ax",%progbits
 202              		.align	2
 203              		.global	timer_clock_GetDividerRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	timer_clock_GetDividerRegister, %function
 207              	timer_clock_GetDividerRegister:
 208              	.LFB5:
 166:.\Generated_Source\PSoC5/timer_clock.c ****     }
 167:.\Generated_Source\PSoC5/timer_clock.c **** }
 168:.\Generated_Source\PSoC5/timer_clock.c **** 
 169:.\Generated_Source\PSoC5/timer_clock.c **** 
 170:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_SetDividerRegister
 172:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/timer_clock.c **** *
 174:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 175:.\Generated_Source\PSoC5/timer_clock.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/timer_clock.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/timer_clock.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/timer_clock.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/timer_clock.c **** *
 180:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 181:.\Generated_Source\PSoC5/timer_clock.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/timer_clock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/timer_clock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/timer_clock.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/timer_clock.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/timer_clock.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/timer_clock.c **** *   cycle.
 188:.\Generated_Source\PSoC5/timer_clock.c **** *
 189:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 190:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 191:.\Generated_Source\PSoC5/timer_clock.c **** *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 8


 192:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/timer_clock.c ****                                 
 195:.\Generated_Source\PSoC5/timer_clock.c **** {
 196:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/timer_clock.c **** 
 198:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 currSrc = timer_clock_GetSourceRegister();
 199:.\Generated_Source\PSoC5/timer_clock.c ****     uint16 oldDivider = timer_clock_GetDividerRegister();
 200:.\Generated_Source\PSoC5/timer_clock.c **** 
 201:.\Generated_Source\PSoC5/timer_clock.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/timer_clock.c ****     {
 203:.\Generated_Source\PSoC5/timer_clock.c ****         enabled = timer_clock_CLKEN & timer_clock_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/timer_clock.c **** 
 205:.\Generated_Source\PSoC5/timer_clock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/timer_clock.c ****         {
 207:.\Generated_Source\PSoC5/timer_clock.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/timer_clock.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/timer_clock.c ****             {
 210:.\Generated_Source\PSoC5/timer_clock.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/timer_clock.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/timer_clock.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/timer_clock.c ****                 timer_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/timer_clock.c ****             }
 216:.\Generated_Source\PSoC5/timer_clock.c ****             else
 217:.\Generated_Source\PSoC5/timer_clock.c ****             {
 218:.\Generated_Source\PSoC5/timer_clock.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/timer_clock.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/timer_clock.c ****                 timer_clock_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/timer_clock.c ****             }
 223:.\Generated_Source\PSoC5/timer_clock.c ****         }
 224:.\Generated_Source\PSoC5/timer_clock.c ****         else
 225:.\Generated_Source\PSoC5/timer_clock.c ****         {
 226:.\Generated_Source\PSoC5/timer_clock.c **** 			
 227:.\Generated_Source\PSoC5/timer_clock.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/timer_clock.c ****             {
 229:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/timer_clock.c **** 
 231:.\Generated_Source\PSoC5/timer_clock.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/timer_clock.c **** #if defined(timer_clock__CFG3)
 233:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_AMASK = timer_clock_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/timer_clock.c **** #else
 236:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_DMASK = timer_clock_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* timer_clock__CFG3 */
 239:.\Generated_Source\PSoC5/timer_clock.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/timer_clock.c **** 
 242:.\Generated_Source\PSoC5/timer_clock.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/timer_clock.c ****                 if (((timer_clock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/timer_clock.c ****                 {
 245:.\Generated_Source\PSoC5/timer_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/timer_clock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/timer_clock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/timer_clock.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 9


 249:.\Generated_Source\PSoC5/timer_clock.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/timer_clock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/timer_clock.c **** 
 253:.\Generated_Source\PSoC5/timer_clock.c ****                     timer_clock_CLKEN &= (uint8)(~timer_clock_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/timer_clock.c **** 
 255:.\Generated_Source\PSoC5/timer_clock.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/timer_clock.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/timer_clock.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/timer_clock.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/timer_clock.c ****                 }
 260:.\Generated_Source\PSoC5/timer_clock.c ****             }
 261:.\Generated_Source\PSoC5/timer_clock.c **** 
 262:.\Generated_Source\PSoC5/timer_clock.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/timer_clock.c ****             if ((timer_clock_CLKEN & timer_clock_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/timer_clock.c ****             {
 265:.\Generated_Source\PSoC5/timer_clock.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/timer_clock.c **** 
 268:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/timer_clock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/timer_clock.c ****             }
 271:.\Generated_Source\PSoC5/timer_clock.c ****             else
 272:.\Generated_Source\PSoC5/timer_clock.c ****             {
 273:.\Generated_Source\PSoC5/timer_clock.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/timer_clock.c **** 				timer_clock_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/timer_clock.c ****             }
 277:.\Generated_Source\PSoC5/timer_clock.c ****         }
 278:.\Generated_Source\PSoC5/timer_clock.c ****     }
 279:.\Generated_Source\PSoC5/timer_clock.c **** }
 280:.\Generated_Source\PSoC5/timer_clock.c **** 
 281:.\Generated_Source\PSoC5/timer_clock.c **** 
 282:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_GetDividerRegister
 284:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/timer_clock.c **** *
 286:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 287:.\Generated_Source\PSoC5/timer_clock.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/timer_clock.c **** *
 289:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 290:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 291:.\Generated_Source\PSoC5/timer_clock.c **** *
 292:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 293:.\Generated_Source\PSoC5/timer_clock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/timer_clock.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/timer_clock.c **** *
 296:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/timer_clock.c **** uint16 timer_clock_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/timer_clock.c **** {
 209              		.loc 1 298 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/timer_clock.c ****     return CY_GET_REG16(timer_clock_DIV_PTR);
 214              		.loc 1 299 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 10


 215 0000 014B     		ldr	r3, .L19
 216 0002 1888     		ldrh	r0, [r3]
 300:.\Generated_Source\PSoC5/timer_clock.c **** }
 217              		.loc 1 300 0
 218 0004 80B2     		uxth	r0, r0
 219 0006 7047     		bx	lr
 220              	.L20:
 221              		.align	2
 222              	.L19:
 223 0008 94400040 		.word	1073758356
 224              		.cfi_endproc
 225              	.LFE5:
 226              		.size	timer_clock_GetDividerRegister, .-timer_clock_GetDividerRegister
 227              		.section	.text.timer_clock_SetModeRegister,"ax",%progbits
 228              		.align	2
 229              		.global	timer_clock_SetModeRegister
 230              		.thumb
 231              		.thumb_func
 232              		.type	timer_clock_SetModeRegister, %function
 233              	timer_clock_SetModeRegister:
 234              	.LFB6:
 301:.\Generated_Source\PSoC5/timer_clock.c **** 
 302:.\Generated_Source\PSoC5/timer_clock.c **** 
 303:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_SetModeRegister
 305:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/timer_clock.c **** *
 307:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 308:.\Generated_Source\PSoC5/timer_clock.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/timer_clock.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/timer_clock.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/timer_clock.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/timer_clock.c **** *
 313:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 314:.\Generated_Source\PSoC5/timer_clock.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/timer_clock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/timer_clock.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/timer_clock.c **** *                 value.
 319:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/timer_clock.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/timer_clock.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/timer_clock.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/timer_clock.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/timer_clock.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/timer_clock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/timer_clock.c **** *
 328:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 329:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 330:.\Generated_Source\PSoC5/timer_clock.c **** *
 331:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/timer_clock.c **** {
 235              		.loc 1 333 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 11


 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL3:
 334:.\Generated_Source\PSoC5/timer_clock.c ****     timer_clock_MOD_SRC |= modeBitMask & (uint8)timer_clock_MODE_MASK;
 241              		.loc 1 334 0
 242 0000 034B     		ldr	r3, .L22
 243 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 244 0004 00F0F800 		and	r0, r0, #248
 245              	.LVL4:
 246 0008 0243     		orrs	r2, r2, r0
 247 000a 1A70     		strb	r2, [r3]
 248 000c 7047     		bx	lr
 249              	.L23:
 250 000e 00BF     		.align	2
 251              	.L22:
 252 0010 96400040 		.word	1073758358
 253              		.cfi_endproc
 254              	.LFE6:
 255              		.size	timer_clock_SetModeRegister, .-timer_clock_SetModeRegister
 256              		.section	.text.timer_clock_ClearModeRegister,"ax",%progbits
 257              		.align	2
 258              		.global	timer_clock_ClearModeRegister
 259              		.thumb
 260              		.thumb_func
 261              		.type	timer_clock_ClearModeRegister, %function
 262              	timer_clock_ClearModeRegister:
 263              	.LFB7:
 335:.\Generated_Source\PSoC5/timer_clock.c **** }
 336:.\Generated_Source\PSoC5/timer_clock.c **** 
 337:.\Generated_Source\PSoC5/timer_clock.c **** 
 338:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_ClearModeRegister
 340:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/timer_clock.c **** *
 342:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 343:.\Generated_Source\PSoC5/timer_clock.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/timer_clock.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/timer_clock.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/timer_clock.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/timer_clock.c **** *
 348:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 349:.\Generated_Source\PSoC5/timer_clock.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/timer_clock.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/timer_clock.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/timer_clock.c **** *                 value.
 354:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/timer_clock.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/timer_clock.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/timer_clock.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/timer_clock.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/timer_clock.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/timer_clock.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/timer_clock.c **** *
 363:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 364:.\Generated_Source\PSoC5/timer_clock.c **** *  None
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 12


 365:.\Generated_Source\PSoC5/timer_clock.c **** *
 366:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/timer_clock.c **** {
 264              		.loc 1 368 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL5:
 369:.\Generated_Source\PSoC5/timer_clock.c ****     timer_clock_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(timer_clock_MODE_MASK));
 270              		.loc 1 369 0
 271 0000 044B     		ldr	r3, .L25
 272 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 273 0004 C043     		mvns	r0, r0
 274              	.LVL6:
 275 0006 C1B2     		uxtb	r1, r0
 276 0008 41F00701 		orr	r1, r1, #7
 277 000c 0A40     		ands	r2, r2, r1
 278 000e 1A70     		strb	r2, [r3]
 279 0010 7047     		bx	lr
 280              	.L26:
 281 0012 00BF     		.align	2
 282              	.L25:
 283 0014 96400040 		.word	1073758358
 284              		.cfi_endproc
 285              	.LFE7:
 286              		.size	timer_clock_ClearModeRegister, .-timer_clock_ClearModeRegister
 287              		.section	.text.timer_clock_GetModeRegister,"ax",%progbits
 288              		.align	2
 289              		.global	timer_clock_GetModeRegister
 290              		.thumb
 291              		.thumb_func
 292              		.type	timer_clock_GetModeRegister, %function
 293              	timer_clock_GetModeRegister:
 294              	.LFB8:
 370:.\Generated_Source\PSoC5/timer_clock.c **** }
 371:.\Generated_Source\PSoC5/timer_clock.c **** 
 372:.\Generated_Source\PSoC5/timer_clock.c **** 
 373:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_GetModeRegister
 375:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/timer_clock.c **** *
 377:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 378:.\Generated_Source\PSoC5/timer_clock.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/timer_clock.c **** *
 380:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 381:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 382:.\Generated_Source\PSoC5/timer_clock.c **** *
 383:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 384:.\Generated_Source\PSoC5/timer_clock.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/timer_clock.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/timer_clock.c **** *
 387:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/timer_clock.c **** uint8 timer_clock_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/timer_clock.c **** {
 295              		.loc 1 389 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 13


 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/timer_clock.c ****     return timer_clock_MOD_SRC & (uint8)(timer_clock_MODE_MASK);
 300              		.loc 1 390 0
 301 0000 024B     		ldr	r3, .L28
 302 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/timer_clock.c **** }
 303              		.loc 1 391 0
 304 0004 00F0F800 		and	r0, r0, #248
 305 0008 7047     		bx	lr
 306              	.L29:
 307 000a 00BF     		.align	2
 308              	.L28:
 309 000c 96400040 		.word	1073758358
 310              		.cfi_endproc
 311              	.LFE8:
 312              		.size	timer_clock_GetModeRegister, .-timer_clock_GetModeRegister
 313              		.section	.text.timer_clock_GetSourceRegister,"ax",%progbits
 314              		.align	2
 315              		.global	timer_clock_GetSourceRegister
 316              		.thumb
 317              		.thumb_func
 318              		.type	timer_clock_GetSourceRegister, %function
 319              	timer_clock_GetSourceRegister:
 320              	.LFB10:
 392:.\Generated_Source\PSoC5/timer_clock.c **** 
 393:.\Generated_Source\PSoC5/timer_clock.c **** 
 394:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_SetSourceRegister
 396:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/timer_clock.c **** *
 398:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 399:.\Generated_Source\PSoC5/timer_clock.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/timer_clock.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/timer_clock.c **** *
 402:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 403:.\Generated_Source\PSoC5/timer_clock.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/timer_clock.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/timer_clock.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/timer_clock.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/timer_clock.c **** *
 415:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 416:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 417:.\Generated_Source\PSoC5/timer_clock.c **** *
 418:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/timer_clock.c **** void timer_clock_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/timer_clock.c **** {
 421:.\Generated_Source\PSoC5/timer_clock.c ****     uint16 currDiv = timer_clock_GetDividerRegister();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 14


 422:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 oldSrc = timer_clock_GetSourceRegister();
 423:.\Generated_Source\PSoC5/timer_clock.c **** 
 424:.\Generated_Source\PSoC5/timer_clock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/timer_clock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/timer_clock.c ****     {
 427:.\Generated_Source\PSoC5/timer_clock.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/timer_clock.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 431:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/timer_clock.c ****     }
 433:.\Generated_Source\PSoC5/timer_clock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/timer_clock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/timer_clock.c ****     {
 436:.\Generated_Source\PSoC5/timer_clock.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/timer_clock.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 439:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/timer_clock.c ****     }
 442:.\Generated_Source\PSoC5/timer_clock.c ****     else
 443:.\Generated_Source\PSoC5/timer_clock.c ****     {
 444:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 445:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/timer_clock.c ****     }
 447:.\Generated_Source\PSoC5/timer_clock.c **** }
 448:.\Generated_Source\PSoC5/timer_clock.c **** 
 449:.\Generated_Source\PSoC5/timer_clock.c **** 
 450:.\Generated_Source\PSoC5/timer_clock.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/timer_clock.c **** * Function Name: timer_clock_GetSourceRegister
 452:.\Generated_Source\PSoC5/timer_clock.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/timer_clock.c **** *
 454:.\Generated_Source\PSoC5/timer_clock.c **** * Summary:
 455:.\Generated_Source\PSoC5/timer_clock.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/timer_clock.c **** *
 457:.\Generated_Source\PSoC5/timer_clock.c **** * Parameters:
 458:.\Generated_Source\PSoC5/timer_clock.c **** *  None
 459:.\Generated_Source\PSoC5/timer_clock.c **** *
 460:.\Generated_Source\PSoC5/timer_clock.c **** * Returns:
 461:.\Generated_Source\PSoC5/timer_clock.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/timer_clock.c **** *
 463:.\Generated_Source\PSoC5/timer_clock.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/timer_clock.c **** uint8 timer_clock_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/timer_clock.c **** {
 321              		.loc 1 465 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 466:.\Generated_Source\PSoC5/timer_clock.c ****     return timer_clock_MOD_SRC & timer_clock_SRC_SEL_MSK;
 326              		.loc 1 466 0
 327 0000 024B     		ldr	r3, .L31
 328 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/timer_clock.c **** }
 329              		.loc 1 467 0
 330 0004 00F00700 		and	r0, r0, #7
 331 0008 7047     		bx	lr
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 15


 332              	.L32:
 333 000a 00BF     		.align	2
 334              	.L31:
 335 000c 96400040 		.word	1073758358
 336              		.cfi_endproc
 337              	.LFE10:
 338              		.size	timer_clock_GetSourceRegister, .-timer_clock_GetSourceRegister
 339              		.section	.text.timer_clock_SetDividerRegister,"ax",%progbits
 340              		.align	2
 341              		.global	timer_clock_SetDividerRegister
 342              		.thumb
 343              		.thumb_func
 344              		.type	timer_clock_SetDividerRegister, %function
 345              	timer_clock_SetDividerRegister:
 346              	.LFB4:
 195:.\Generated_Source\PSoC5/timer_clock.c **** {
 347              		.loc 1 195 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              	.LVL7:
 352 0000 70B5     		push	{r4, r5, r6, lr}
 353              		.cfi_def_cfa_offset 16
 354              		.cfi_offset 4, -16
 355              		.cfi_offset 5, -12
 356              		.cfi_offset 6, -8
 357              		.cfi_offset 14, -4
 358 0002 0446     		mov	r4, r0
 359 0004 0E46     		mov	r6, r1
 198:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 currSrc = timer_clock_GetSourceRegister();
 360              		.loc 1 198 0
 361 0006 FFF7FEFF 		bl	timer_clock_GetSourceRegister
 362              	.LVL8:
 363 000a 0546     		mov	r5, r0
 364              	.LVL9:
 199:.\Generated_Source\PSoC5/timer_clock.c ****     uint16 oldDivider = timer_clock_GetDividerRegister();
 365              		.loc 1 199 0
 366 000c FFF7FEFF 		bl	timer_clock_GetDividerRegister
 367              	.LVL10:
 368 0010 0346     		mov	r3, r0
 369              	.LVL11:
 201:.\Generated_Source\PSoC5/timer_clock.c ****     if (clkDivider != oldDivider)
 370              		.loc 1 201 0
 371 0012 8442     		cmp	r4, r0
 372 0014 59D0     		beq	.L33
 203:.\Generated_Source\PSoC5/timer_clock.c ****         enabled = timer_clock_CLKEN & timer_clock_CLKEN_MASK;
 373              		.loc 1 203 0
 374 0016 2D4A     		ldr	r2, .L47
 375 0018 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 376 001a 02F02002 		and	r2, r2, #32
 377 001e D1B2     		uxtb	r1, r2
 378              	.LVL12:
 205:.\Generated_Source\PSoC5/timer_clock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 379              		.loc 1 205 0
 380 0020 95B9     		cbnz	r5, .L35
 205:.\Generated_Source\PSoC5/timer_clock.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 381              		.loc 1 205 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 16


 382 0022 00B1     		cbz	r0, .L36
 383 0024 84B9     		cbnz	r4, .L35
 384              	.L36:
 208:.\Generated_Source\PSoC5/timer_clock.c ****             if (oldDivider == 0u)
 385              		.loc 1 208 0 is_stmt 1
 386 0026 3BB9     		cbnz	r3, .L37
 213:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 387              		.loc 1 213 0
 388 0028 294B     		ldr	r3, .L47+4
 389 002a 1C80     		strh	r4, [r3]	@ movhi
 214:.\Generated_Source\PSoC5/timer_clock.c ****                 timer_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 390              		.loc 1 214 0
 391 002c 0233     		adds	r3, r3, #2
 392 002e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 393              	.LVL13:
 394 0030 02F0BF02 		and	r2, r2, #191
 395 0034 1A70     		strb	r2, [r3]
 396 0036 70BD     		pop	{r4, r5, r6, pc}
 397              	.LVL14:
 398              	.L37:
 220:.\Generated_Source\PSoC5/timer_clock.c ****                 timer_clock_MOD_SRC |= CYCLK_SSS;
 399              		.loc 1 220 0
 400 0038 264B     		ldr	r3, .L47+8
 401 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 402              	.LVL15:
 403 003c 42F04002 		orr	r2, r2, #64
 404 0040 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 405              		.loc 1 221 0
 406 0042 023B     		subs	r3, r3, #2
 407 0044 1C80     		strh	r4, [r3]	@ movhi
 408 0046 70BD     		pop	{r4, r5, r6, pc}
 409              	.LVL16:
 410              	.L35:
 227:.\Generated_Source\PSoC5/timer_clock.c ****             if (enabled != 0u)
 411              		.loc 1 227 0
 412 0048 29B3     		cbz	r1, .L38
 229:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_LD = 0x00u;
 413              		.loc 1 229 0
 414 004a 0022     		movs	r2, #0
 415              	.LVL17:
 416 004c 2248     		ldr	r0, .L47+12
 417              	.LVL18:
 418 004e 0270     		strb	r2, [r0]
 236:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_DMASK = timer_clock_CLKEN_MASK;
 419              		.loc 1 236 0
 420 0050 2025     		movs	r5, #32
 421              	.LVL19:
 422 0052 0F30     		adds	r0, r0, #15
 423 0054 0570     		strb	r5, [r0]
 237:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_AMASK = 0x00u;
 424              		.loc 1 237 0
 425 0056 0430     		adds	r0, r0, #4
 426 0058 0270     		strb	r2, [r0]
 240:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 427              		.loc 1 240 0
 428 005a 204A     		ldr	r2, .L47+16
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 17


 429 005c 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 430 005e 00F07F00 		and	r0, r0, #127
 431 0062 1070     		strb	r0, [r2]
 243:.\Generated_Source\PSoC5/timer_clock.c ****                 if (((timer_clock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 432              		.loc 1 243 0
 433 0064 8E32     		adds	r2, r2, #142
 434 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 435 0068 12F0080F 		tst	r2, #8
 436 006c 00D0     		beq	.L39
 243:.\Generated_Source\PSoC5/timer_clock.c ****                 if (((timer_clock_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 437              		.loc 1 243 0 is_stmt 0 discriminator 1
 438 006e 94B9     		cbnz	r4, .L38
 439              	.L39:
 246:.\Generated_Source\PSoC5/timer_clock.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 440              		.loc 1 246 0 is_stmt 1
 441 0070 1B4A     		ldr	r2, .L47+20
 442 0072 1380     		strh	r3, [r2]	@ movhi
 247:.\Generated_Source\PSoC5/timer_clock.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 443              		.loc 1 247 0
 444 0074 0722     		movs	r2, #7
 445 0076 184B     		ldr	r3, .L47+12
 446              	.LVL20:
 447 0078 1A70     		strb	r2, [r3]
 250:.\Generated_Source\PSoC5/timer_clock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 448              		.loc 1 250 0
 449 007a 1A46     		mov	r2, r3
 450              	.L40:
 250:.\Generated_Source\PSoC5/timer_clock.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 451              		.loc 1 250 0 is_stmt 0 discriminator 1
 452 007c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 453 007e 13F0010F 		tst	r3, #1
 454 0082 FBD1     		bne	.L40
 253:.\Generated_Source\PSoC5/timer_clock.c ****                     timer_clock_CLKEN &= (uint8)(~timer_clock_CLKEN_MASK);
 455              		.loc 1 253 0 is_stmt 1
 456 0084 114B     		ldr	r3, .L47
 457 0086 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 458 0088 02F0DF02 		and	r2, r2, #223
 459 008c 1A70     		strb	r2, [r3]
 257:.\Generated_Source\PSoC5/timer_clock.c ****                     CLK_DIST_LD = 0x00u;
 460              		.loc 1 257 0
 461 008e 0022     		movs	r2, #0
 462 0090 A3F2A133 		subw	r3, r3, #929
 463 0094 1A70     		strb	r2, [r3]
 464              	.L38:
 263:.\Generated_Source\PSoC5/timer_clock.c ****             if ((timer_clock_CLKEN & timer_clock_CLKEN_MASK) != 0u)
 465              		.loc 1 263 0
 466 0096 0D4B     		ldr	r3, .L47
 467 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 468 009a 13F0200F 		tst	r3, #32
 469 009e 0DD0     		beq	.L41
 266:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 470              		.loc 1 266 0
 471 00a0 0F4B     		ldr	r3, .L47+20
 472 00a2 1C80     		strh	r4, [r3]	@ movhi
 268:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 473              		.loc 1 268 0
 474 00a4 0EB1     		cbz	r6, .L44
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 18


 475 00a6 0322     		movs	r2, #3
 476 00a8 00E0     		b	.L42
 477              	.L44:
 478 00aa 0122     		movs	r2, #1
 479              	.L42:
 268:.\Generated_Source\PSoC5/timer_clock.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 480              		.loc 1 268 0 is_stmt 0 discriminator 3
 481 00ac 0A4B     		ldr	r3, .L47+12
 482 00ae 1A70     		strb	r2, [r3]
 269:.\Generated_Source\PSoC5/timer_clock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 483              		.loc 1 269 0 is_stmt 1 discriminator 3
 484 00b0 1A46     		mov	r2, r3
 485              	.L43:
 269:.\Generated_Source\PSoC5/timer_clock.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 486              		.loc 1 269 0 is_stmt 0 discriminator 1
 487 00b2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 488 00b4 13F0010F 		tst	r3, #1
 489 00b8 FBD1     		bne	.L43
 490 00ba 70BD     		pop	{r4, r5, r6, pc}
 491              	.L41:
 274:.\Generated_Source\PSoC5/timer_clock.c ****                 CY_SET_REG16(timer_clock_DIV_PTR, clkDivider);
 492              		.loc 1 274 0 is_stmt 1
 493 00bc 044B     		ldr	r3, .L47+4
 494 00be 1C80     		strh	r4, [r3]	@ movhi
 275:.\Generated_Source\PSoC5/timer_clock.c **** 				timer_clock_CLKEN |= enabled;
 495              		.loc 1 275 0
 496 00c0 03F20E33 		addw	r3, r3, #782
 497 00c4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 498 00c6 1143     		orrs	r1, r1, r2
 499              	.LVL21:
 500 00c8 1970     		strb	r1, [r3]
 501              	.L33:
 502 00ca 70BD     		pop	{r4, r5, r6, pc}
 503              	.L48:
 504              		.align	2
 505              	.L47:
 506 00cc A2430040 		.word	1073759138
 507 00d0 94400040 		.word	1073758356
 508 00d4 96400040 		.word	1073758358
 509 00d8 01400040 		.word	1073758209
 510 00dc 08400040 		.word	1073758216
 511 00e0 02400040 		.word	1073758210
 512              		.cfi_endproc
 513              	.LFE4:
 514              		.size	timer_clock_SetDividerRegister, .-timer_clock_SetDividerRegister
 515              		.section	.text.timer_clock_SetSourceRegister,"ax",%progbits
 516              		.align	2
 517              		.global	timer_clock_SetSourceRegister
 518              		.thumb
 519              		.thumb_func
 520              		.type	timer_clock_SetSourceRegister, %function
 521              	timer_clock_SetSourceRegister:
 522              	.LFB9:
 420:.\Generated_Source\PSoC5/timer_clock.c **** {
 523              		.loc 1 420 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 19


 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              	.LVL22:
 528 0000 38B5     		push	{r3, r4, r5, lr}
 529              		.cfi_def_cfa_offset 16
 530              		.cfi_offset 3, -16
 531              		.cfi_offset 4, -12
 532              		.cfi_offset 5, -8
 533              		.cfi_offset 14, -4
 534 0002 0446     		mov	r4, r0
 421:.\Generated_Source\PSoC5/timer_clock.c ****     uint16 currDiv = timer_clock_GetDividerRegister();
 535              		.loc 1 421 0
 536 0004 FFF7FEFF 		bl	timer_clock_GetDividerRegister
 537              	.LVL23:
 538 0008 0546     		mov	r5, r0
 539              	.LVL24:
 422:.\Generated_Source\PSoC5/timer_clock.c ****     uint8 oldSrc = timer_clock_GetSourceRegister();
 540              		.loc 1 422 0
 541 000a FFF7FEFF 		bl	timer_clock_GetSourceRegister
 542              	.LVL25:
 424:.\Generated_Source\PSoC5/timer_clock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 543              		.loc 1 424 0
 544 000e 0346     		mov	r3, r0
 545 0010 60B1     		cbz	r0, .L50
 424:.\Generated_Source\PSoC5/timer_clock.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 546              		.loc 1 424 0 is_stmt 0 discriminator 1
 547 0012 5CB9     		cbnz	r4, .L50
 425:.\Generated_Source\PSoC5/timer_clock.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 548              		.loc 1 425 0 is_stmt 1
 549 0014 55B9     		cbnz	r5, .L50
 429:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC |= CYCLK_SSS;
 550              		.loc 1 429 0
 551 0016 104B     		ldr	r3, .L53
 552 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 553 001a 42F04002 		orr	r2, r2, #64
 554 001e 1A70     		strb	r2, [r3]
 431:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 555              		.loc 1 431 0
 556 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 557              		.loc 1 430 0
 558 0022 02F0F802 		and	r2, r2, #248
 559 0026 1443     		orrs	r4, r4, r2
 560 0028 1C70     		strb	r4, [r3]
 561 002a 38BD     		pop	{r3, r4, r5, pc}
 562              	.LVL26:
 563              	.L50:
 433:.\Generated_Source\PSoC5/timer_clock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 564              		.loc 1 433 0
 565 002c 63B9     		cbnz	r3, .L52
 433:.\Generated_Source\PSoC5/timer_clock.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 566              		.loc 1 433 0 is_stmt 0 discriminator 1
 567 002e 5CB1     		cbz	r4, .L52
 434:.\Generated_Source\PSoC5/timer_clock.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 568              		.loc 1 434 0 is_stmt 1
 569 0030 55B9     		cbnz	r5, .L52
 439:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 570              		.loc 1 439 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 20


 571 0032 094B     		ldr	r3, .L53
 572 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 573              		.loc 1 438 0
 574 0036 02F0F802 		and	r2, r2, #248
 575 003a 1443     		orrs	r4, r4, r2
 576 003c 1C70     		strb	r4, [r3]
 440:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC &= (uint8)(~CYCLK_SSS);
 577              		.loc 1 440 0
 578 003e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 579 0040 02F0BF02 		and	r2, r2, #191
 580 0044 1A70     		strb	r2, [r3]
 581 0046 38BD     		pop	{r3, r4, r5, pc}
 582              	.LVL27:
 583              	.L52:
 445:.\Generated_Source\PSoC5/timer_clock.c ****             (timer_clock_MOD_SRC & (uint8)(~timer_clock_SRC_SEL_MSK)) | clkSource;
 584              		.loc 1 445 0
 585 0048 034B     		ldr	r3, .L53
 586 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/timer_clock.c ****         timer_clock_MOD_SRC =
 587              		.loc 1 444 0
 588 004c 02F0F802 		and	r2, r2, #248
 589 0050 1443     		orrs	r4, r4, r2
 590 0052 1C70     		strb	r4, [r3]
 591 0054 38BD     		pop	{r3, r4, r5, pc}
 592              	.LVL28:
 593              	.L54:
 594 0056 00BF     		.align	2
 595              	.L53:
 596 0058 96400040 		.word	1073758358
 597              		.cfi_endproc
 598              	.LFE9:
 599              		.size	timer_clock_SetSourceRegister, .-timer_clock_SetSourceRegister
 600              		.text
 601              	.Letext0:
 602              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 603              		.section	.debug_info,"",%progbits
 604              	.Ldebug_info0:
 605 0000 7F020000 		.4byte	0x27f
 606 0004 0400     		.2byte	0x4
 607 0006 00000000 		.4byte	.Ldebug_abbrev0
 608 000a 04       		.byte	0x4
 609 000b 01       		.uleb128 0x1
 610 000c 72000000 		.4byte	.LASF36
 611 0010 01       		.byte	0x1
 612 0011 9C020000 		.4byte	.LASF37
 613 0015 38010000 		.4byte	.LASF38
 614 0019 00000000 		.4byte	.Ldebug_ranges0+0
 615 001d 00000000 		.4byte	0
 616 0021 00000000 		.4byte	.Ldebug_line0
 617 0025 02       		.uleb128 0x2
 618 0026 01       		.byte	0x1
 619 0027 06       		.byte	0x6
 620 0028 A6010000 		.4byte	.LASF0
 621 002c 02       		.uleb128 0x2
 622 002d 01       		.byte	0x1
 623 002e 08       		.byte	0x8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 21


 624 002f 7A010000 		.4byte	.LASF1
 625 0033 02       		.uleb128 0x2
 626 0034 02       		.byte	0x2
 627 0035 05       		.byte	0x5
 628 0036 0E000000 		.4byte	.LASF2
 629 003a 02       		.uleb128 0x2
 630 003b 02       		.byte	0x2
 631 003c 07       		.byte	0x7
 632 003d 2B020000 		.4byte	.LASF3
 633 0041 02       		.uleb128 0x2
 634 0042 04       		.byte	0x4
 635 0043 05       		.byte	0x5
 636 0044 EE000000 		.4byte	.LASF4
 637 0048 02       		.uleb128 0x2
 638 0049 04       		.byte	0x4
 639 004a 07       		.byte	0x7
 640 004b 65020000 		.4byte	.LASF5
 641 004f 02       		.uleb128 0x2
 642 0050 08       		.byte	0x8
 643 0051 05       		.byte	0x5
 644 0052 64000000 		.4byte	.LASF6
 645 0056 02       		.uleb128 0x2
 646 0057 08       		.byte	0x8
 647 0058 07       		.byte	0x7
 648 0059 B2010000 		.4byte	.LASF7
 649 005d 03       		.uleb128 0x3
 650 005e 04       		.byte	0x4
 651 005f 05       		.byte	0x5
 652 0060 696E7400 		.ascii	"int\000"
 653 0064 02       		.uleb128 0x2
 654 0065 04       		.byte	0x4
 655 0066 07       		.byte	0x7
 656 0067 C9010000 		.4byte	.LASF8
 657 006b 04       		.uleb128 0x4
 658 006c 2E000000 		.4byte	.LASF9
 659 0070 02       		.byte	0x2
 660 0071 B4       		.byte	0xb4
 661 0072 2C000000 		.4byte	0x2c
 662 0076 04       		.uleb128 0x4
 663 0077 18000000 		.4byte	.LASF10
 664 007b 02       		.byte	0x2
 665 007c B5       		.byte	0xb5
 666 007d 3A000000 		.4byte	0x3a
 667 0081 02       		.uleb128 0x2
 668 0082 04       		.byte	0x4
 669 0083 04       		.byte	0x4
 670 0084 3F000000 		.4byte	.LASF11
 671 0088 02       		.uleb128 0x2
 672 0089 08       		.byte	0x8
 673 008a 04       		.byte	0x4
 674 008b 77020000 		.4byte	.LASF12
 675 008f 02       		.uleb128 0x2
 676 0090 01       		.byte	0x1
 677 0091 08       		.byte	0x8
 678 0092 3E020000 		.4byte	.LASF13
 679 0096 05       		.uleb128 0x5
 680 0097 60020000 		.4byte	.LASF14
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 22


 681 009b 02       		.byte	0x2
 682 009c 5E01     		.2byte	0x15e
 683 009e A2000000 		.4byte	0xa2
 684 00a2 06       		.uleb128 0x6
 685 00a3 6B000000 		.4byte	0x6b
 686 00a7 05       		.uleb128 0x5
 687 00a8 08000000 		.4byte	.LASF15
 688 00ac 02       		.byte	0x2
 689 00ad 5F01     		.2byte	0x15f
 690 00af B3000000 		.4byte	0xb3
 691 00b3 06       		.uleb128 0x6
 692 00b4 76000000 		.4byte	0x76
 693 00b8 07       		.uleb128 0x7
 694 00b9 94010000 		.4byte	.LASF16
 695 00bd 01       		.byte	0x1
 696 00be 2D       		.byte	0x2d
 697 00bf 00000000 		.4byte	.LFB0
 698 00c3 1C000000 		.4byte	.LFE0-.LFB0
 699 00c7 01       		.uleb128 0x1
 700 00c8 9C       		.byte	0x9c
 701 00c9 07       		.uleb128 0x7
 702 00ca E1020000 		.4byte	.LASF17
 703 00ce 01       		.byte	0x1
 704 00cf 47       		.byte	0x47
 705 00d0 00000000 		.4byte	.LFB1
 706 00d4 1C000000 		.4byte	.LFE1-.LFB1
 707 00d8 01       		.uleb128 0x1
 708 00d9 9C       		.byte	0x9c
 709 00da 08       		.uleb128 0x8
 710 00db C3020000 		.4byte	.LASF18
 711 00df 01       		.byte	0x1
 712 00e0 64       		.byte	0x64
 713 00e1 00000000 		.4byte	.LFB2
 714 00e5 70000000 		.4byte	.LFE2-.LFB2
 715 00e9 01       		.uleb128 0x1
 716 00ea 9C       		.byte	0x9c
 717 00eb 09010000 		.4byte	0x109
 718 00ef 09       		.uleb128 0x9
 719 00f0 0A000000 		.4byte	.LBB2
 720 00f4 66000000 		.4byte	.LBE2-.LBB2
 721 00f8 0A       		.uleb128 0xa
 722 00f9 55020000 		.4byte	.LASF30
 723 00fd 01       		.byte	0x1
 724 00fe 69       		.byte	0x69
 725 00ff 76000000 		.4byte	0x76
 726 0103 00000000 		.4byte	.LLST0
 727 0107 00       		.byte	0
 728 0108 00       		.byte	0
 729 0109 08       		.uleb128 0x8
 730 010a F4010000 		.4byte	.LASF19
 731 010e 01       		.byte	0x1
 732 010f 9D       		.byte	0x9d
 733 0110 00000000 		.4byte	.LFB3
 734 0114 20000000 		.4byte	.LFE3-.LFB3
 735 0118 01       		.uleb128 0x1
 736 0119 9C       		.byte	0x9c
 737 011a 2C010000 		.4byte	0x12c
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 23


 738 011e 0B       		.uleb128 0xb
 739 011f 32010000 		.4byte	.LASF21
 740 0123 01       		.byte	0x1
 741 0124 9D       		.byte	0x9d
 742 0125 6B000000 		.4byte	0x6b
 743 0129 01       		.uleb128 0x1
 744 012a 50       		.byte	0x50
 745 012b 00       		.byte	0
 746 012c 0C       		.uleb128 0xc
 747 012d 13010000 		.4byte	.LASF24
 748 0131 01       		.byte	0x1
 749 0132 2901     		.2byte	0x129
 750 0134 76000000 		.4byte	0x76
 751 0138 00000000 		.4byte	.LFB5
 752 013c 0C000000 		.4byte	.LFE5-.LFB5
 753 0140 01       		.uleb128 0x1
 754 0141 9C       		.byte	0x9c
 755 0142 0D       		.uleb128 0xd
 756 0143 F2020000 		.4byte	.LASF20
 757 0147 01       		.byte	0x1
 758 0148 4C01     		.2byte	0x14c
 759 014a 00000000 		.4byte	.LFB6
 760 014e 14000000 		.4byte	.LFE6-.LFB6
 761 0152 01       		.uleb128 0x1
 762 0153 9C       		.byte	0x9c
 763 0154 69010000 		.4byte	0x169
 764 0158 0E       		.uleb128 0xe
 765 0159 88010000 		.4byte	.LASF22
 766 015d 01       		.byte	0x1
 767 015e 4C01     		.2byte	0x14c
 768 0160 6B000000 		.4byte	0x6b
 769 0164 13000000 		.4byte	.LLST1
 770 0168 00       		.byte	0
 771 0169 0D       		.uleb128 0xd
 772 016a 7E020000 		.4byte	.LASF23
 773 016e 01       		.byte	0x1
 774 016f 6F01     		.2byte	0x16f
 775 0171 00000000 		.4byte	.LFB7
 776 0175 18000000 		.4byte	.LFE7-.LFB7
 777 0179 01       		.uleb128 0x1
 778 017a 9C       		.byte	0x9c
 779 017b 90010000 		.4byte	0x190
 780 017f 0E       		.uleb128 0xe
 781 0180 88010000 		.4byte	.LASF22
 782 0184 01       		.byte	0x1
 783 0185 6F01     		.2byte	0x16f
 784 0187 6B000000 		.4byte	0x6b
 785 018b 34000000 		.4byte	.LLST2
 786 018f 00       		.byte	0
 787 0190 0C       		.uleb128 0xc
 788 0191 F7000000 		.4byte	.LASF25
 789 0195 01       		.byte	0x1
 790 0196 8401     		.2byte	0x184
 791 0198 6B000000 		.4byte	0x6b
 792 019c 00000000 		.4byte	.LFB8
 793 01a0 10000000 		.4byte	.LFE8-.LFB8
 794 01a4 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 24


 795 01a5 9C       		.byte	0x9c
 796 01a6 0C       		.uleb128 0xc
 797 01a7 D6010000 		.4byte	.LASF26
 798 01ab 01       		.byte	0x1
 799 01ac D001     		.2byte	0x1d0
 800 01ae 6B000000 		.4byte	0x6b
 801 01b2 00000000 		.4byte	.LFB10
 802 01b6 10000000 		.4byte	.LFE10-.LFB10
 803 01ba 01       		.uleb128 0x1
 804 01bb 9C       		.byte	0x9c
 805 01bc 08       		.uleb128 0x8
 806 01bd 45000000 		.4byte	.LASF27
 807 01c1 01       		.byte	0x1
 808 01c2 C1       		.byte	0xc1
 809 01c3 00000000 		.4byte	.LFB4
 810 01c7 E4000000 		.4byte	.LFE4-.LFB4
 811 01cb 01       		.uleb128 0x1
 812 01cc 9C       		.byte	0x9c
 813 01cd 2F020000 		.4byte	0x22f
 814 01d1 0F       		.uleb128 0xf
 815 01d2 34000000 		.4byte	.LASF28
 816 01d6 01       		.byte	0x1
 817 01d7 C1       		.byte	0xc1
 818 01d8 76000000 		.4byte	0x76
 819 01dc 55000000 		.4byte	.LLST3
 820 01e0 0F       		.uleb128 0xf
 821 01e1 1F000000 		.4byte	.LASF29
 822 01e5 01       		.byte	0x1
 823 01e6 C1       		.byte	0xc1
 824 01e7 6B000000 		.4byte	0x6b
 825 01eb 76000000 		.4byte	.LLST4
 826 01ef 0A       		.uleb128 0xa
 827 01f0 D9020000 		.4byte	.LASF31
 828 01f4 01       		.byte	0x1
 829 01f5 C4       		.byte	0xc4
 830 01f6 6B000000 		.4byte	0x6b
 831 01fa 97000000 		.4byte	.LLST5
 832 01fe 0A       		.uleb128 0xa
 833 01ff 4D020000 		.4byte	.LASF32
 834 0203 01       		.byte	0x1
 835 0204 C6       		.byte	0xc6
 836 0205 6B000000 		.4byte	0x6b
 837 0209 E1000000 		.4byte	.LLST6
 838 020d 0A       		.uleb128 0xa
 839 020e 55020000 		.4byte	.LASF30
 840 0212 01       		.byte	0x1
 841 0213 C7       		.byte	0xc7
 842 0214 76000000 		.4byte	0x76
 843 0218 FF000000 		.4byte	.LLST7
 844 021c 10       		.uleb128 0x10
 845 021d 0A000000 		.4byte	.LVL8
 846 0221 A6010000 		.4byte	0x1a6
 847 0225 10       		.uleb128 0x10
 848 0226 10000000 		.4byte	.LVL10
 849 022a 2C010000 		.4byte	0x12c
 850 022e 00       		.byte	0
 851 022f 11       		.uleb128 0x11
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 25


 852 0230 0D020000 		.4byte	.LASF39
 853 0234 01       		.byte	0x1
 854 0235 A301     		.2byte	0x1a3
 855 0237 00000000 		.4byte	.LFB9
 856 023b 5C000000 		.4byte	.LFE9-.LFB9
 857 023f 01       		.uleb128 0x1
 858 0240 9C       		.byte	0x9c
 859 0241 0E       		.uleb128 0xe
 860 0242 43020000 		.4byte	.LASF33
 861 0246 01       		.byte	0x1
 862 0247 A301     		.2byte	0x1a3
 863 0249 6B000000 		.4byte	0x6b
 864 024d 1D010000 		.4byte	.LLST8
 865 0251 12       		.uleb128 0x12
 866 0252 00000000 		.4byte	.LASF34
 867 0256 01       		.byte	0x1
 868 0257 A501     		.2byte	0x1a5
 869 0259 76000000 		.4byte	0x76
 870 025d 3E010000 		.4byte	.LLST9
 871 0261 13       		.uleb128 0x13
 872 0262 27000000 		.4byte	.LASF35
 873 0266 01       		.byte	0x1
 874 0267 A601     		.2byte	0x1a6
 875 0269 6B000000 		.4byte	0x6b
 876 026d 01       		.uleb128 0x1
 877 026e 50       		.byte	0x50
 878 026f 10       		.uleb128 0x10
 879 0270 08000000 		.4byte	.LVL23
 880 0274 2C010000 		.4byte	0x12c
 881 0278 10       		.uleb128 0x10
 882 0279 0E000000 		.4byte	.LVL25
 883 027d A6010000 		.4byte	0x1a6
 884 0281 00       		.byte	0
 885 0282 00       		.byte	0
 886              		.section	.debug_abbrev,"",%progbits
 887              	.Ldebug_abbrev0:
 888 0000 01       		.uleb128 0x1
 889 0001 11       		.uleb128 0x11
 890 0002 01       		.byte	0x1
 891 0003 25       		.uleb128 0x25
 892 0004 0E       		.uleb128 0xe
 893 0005 13       		.uleb128 0x13
 894 0006 0B       		.uleb128 0xb
 895 0007 03       		.uleb128 0x3
 896 0008 0E       		.uleb128 0xe
 897 0009 1B       		.uleb128 0x1b
 898 000a 0E       		.uleb128 0xe
 899 000b 55       		.uleb128 0x55
 900 000c 17       		.uleb128 0x17
 901 000d 11       		.uleb128 0x11
 902 000e 01       		.uleb128 0x1
 903 000f 10       		.uleb128 0x10
 904 0010 17       		.uleb128 0x17
 905 0011 00       		.byte	0
 906 0012 00       		.byte	0
 907 0013 02       		.uleb128 0x2
 908 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 26


 909 0015 00       		.byte	0
 910 0016 0B       		.uleb128 0xb
 911 0017 0B       		.uleb128 0xb
 912 0018 3E       		.uleb128 0x3e
 913 0019 0B       		.uleb128 0xb
 914 001a 03       		.uleb128 0x3
 915 001b 0E       		.uleb128 0xe
 916 001c 00       		.byte	0
 917 001d 00       		.byte	0
 918 001e 03       		.uleb128 0x3
 919 001f 24       		.uleb128 0x24
 920 0020 00       		.byte	0
 921 0021 0B       		.uleb128 0xb
 922 0022 0B       		.uleb128 0xb
 923 0023 3E       		.uleb128 0x3e
 924 0024 0B       		.uleb128 0xb
 925 0025 03       		.uleb128 0x3
 926 0026 08       		.uleb128 0x8
 927 0027 00       		.byte	0
 928 0028 00       		.byte	0
 929 0029 04       		.uleb128 0x4
 930 002a 16       		.uleb128 0x16
 931 002b 00       		.byte	0
 932 002c 03       		.uleb128 0x3
 933 002d 0E       		.uleb128 0xe
 934 002e 3A       		.uleb128 0x3a
 935 002f 0B       		.uleb128 0xb
 936 0030 3B       		.uleb128 0x3b
 937 0031 0B       		.uleb128 0xb
 938 0032 49       		.uleb128 0x49
 939 0033 13       		.uleb128 0x13
 940 0034 00       		.byte	0
 941 0035 00       		.byte	0
 942 0036 05       		.uleb128 0x5
 943 0037 16       		.uleb128 0x16
 944 0038 00       		.byte	0
 945 0039 03       		.uleb128 0x3
 946 003a 0E       		.uleb128 0xe
 947 003b 3A       		.uleb128 0x3a
 948 003c 0B       		.uleb128 0xb
 949 003d 3B       		.uleb128 0x3b
 950 003e 05       		.uleb128 0x5
 951 003f 49       		.uleb128 0x49
 952 0040 13       		.uleb128 0x13
 953 0041 00       		.byte	0
 954 0042 00       		.byte	0
 955 0043 06       		.uleb128 0x6
 956 0044 35       		.uleb128 0x35
 957 0045 00       		.byte	0
 958 0046 49       		.uleb128 0x49
 959 0047 13       		.uleb128 0x13
 960 0048 00       		.byte	0
 961 0049 00       		.byte	0
 962 004a 07       		.uleb128 0x7
 963 004b 2E       		.uleb128 0x2e
 964 004c 00       		.byte	0
 965 004d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 27


 966 004e 19       		.uleb128 0x19
 967 004f 03       		.uleb128 0x3
 968 0050 0E       		.uleb128 0xe
 969 0051 3A       		.uleb128 0x3a
 970 0052 0B       		.uleb128 0xb
 971 0053 3B       		.uleb128 0x3b
 972 0054 0B       		.uleb128 0xb
 973 0055 27       		.uleb128 0x27
 974 0056 19       		.uleb128 0x19
 975 0057 11       		.uleb128 0x11
 976 0058 01       		.uleb128 0x1
 977 0059 12       		.uleb128 0x12
 978 005a 06       		.uleb128 0x6
 979 005b 40       		.uleb128 0x40
 980 005c 18       		.uleb128 0x18
 981 005d 9742     		.uleb128 0x2117
 982 005f 19       		.uleb128 0x19
 983 0060 00       		.byte	0
 984 0061 00       		.byte	0
 985 0062 08       		.uleb128 0x8
 986 0063 2E       		.uleb128 0x2e
 987 0064 01       		.byte	0x1
 988 0065 3F       		.uleb128 0x3f
 989 0066 19       		.uleb128 0x19
 990 0067 03       		.uleb128 0x3
 991 0068 0E       		.uleb128 0xe
 992 0069 3A       		.uleb128 0x3a
 993 006a 0B       		.uleb128 0xb
 994 006b 3B       		.uleb128 0x3b
 995 006c 0B       		.uleb128 0xb
 996 006d 27       		.uleb128 0x27
 997 006e 19       		.uleb128 0x19
 998 006f 11       		.uleb128 0x11
 999 0070 01       		.uleb128 0x1
 1000 0071 12       		.uleb128 0x12
 1001 0072 06       		.uleb128 0x6
 1002 0073 40       		.uleb128 0x40
 1003 0074 18       		.uleb128 0x18
 1004 0075 9742     		.uleb128 0x2117
 1005 0077 19       		.uleb128 0x19
 1006 0078 01       		.uleb128 0x1
 1007 0079 13       		.uleb128 0x13
 1008 007a 00       		.byte	0
 1009 007b 00       		.byte	0
 1010 007c 09       		.uleb128 0x9
 1011 007d 0B       		.uleb128 0xb
 1012 007e 01       		.byte	0x1
 1013 007f 11       		.uleb128 0x11
 1014 0080 01       		.uleb128 0x1
 1015 0081 12       		.uleb128 0x12
 1016 0082 06       		.uleb128 0x6
 1017 0083 00       		.byte	0
 1018 0084 00       		.byte	0
 1019 0085 0A       		.uleb128 0xa
 1020 0086 34       		.uleb128 0x34
 1021 0087 00       		.byte	0
 1022 0088 03       		.uleb128 0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 28


 1023 0089 0E       		.uleb128 0xe
 1024 008a 3A       		.uleb128 0x3a
 1025 008b 0B       		.uleb128 0xb
 1026 008c 3B       		.uleb128 0x3b
 1027 008d 0B       		.uleb128 0xb
 1028 008e 49       		.uleb128 0x49
 1029 008f 13       		.uleb128 0x13
 1030 0090 02       		.uleb128 0x2
 1031 0091 17       		.uleb128 0x17
 1032 0092 00       		.byte	0
 1033 0093 00       		.byte	0
 1034 0094 0B       		.uleb128 0xb
 1035 0095 05       		.uleb128 0x5
 1036 0096 00       		.byte	0
 1037 0097 03       		.uleb128 0x3
 1038 0098 0E       		.uleb128 0xe
 1039 0099 3A       		.uleb128 0x3a
 1040 009a 0B       		.uleb128 0xb
 1041 009b 3B       		.uleb128 0x3b
 1042 009c 0B       		.uleb128 0xb
 1043 009d 49       		.uleb128 0x49
 1044 009e 13       		.uleb128 0x13
 1045 009f 02       		.uleb128 0x2
 1046 00a0 18       		.uleb128 0x18
 1047 00a1 00       		.byte	0
 1048 00a2 00       		.byte	0
 1049 00a3 0C       		.uleb128 0xc
 1050 00a4 2E       		.uleb128 0x2e
 1051 00a5 00       		.byte	0
 1052 00a6 3F       		.uleb128 0x3f
 1053 00a7 19       		.uleb128 0x19
 1054 00a8 03       		.uleb128 0x3
 1055 00a9 0E       		.uleb128 0xe
 1056 00aa 3A       		.uleb128 0x3a
 1057 00ab 0B       		.uleb128 0xb
 1058 00ac 3B       		.uleb128 0x3b
 1059 00ad 05       		.uleb128 0x5
 1060 00ae 27       		.uleb128 0x27
 1061 00af 19       		.uleb128 0x19
 1062 00b0 49       		.uleb128 0x49
 1063 00b1 13       		.uleb128 0x13
 1064 00b2 11       		.uleb128 0x11
 1065 00b3 01       		.uleb128 0x1
 1066 00b4 12       		.uleb128 0x12
 1067 00b5 06       		.uleb128 0x6
 1068 00b6 40       		.uleb128 0x40
 1069 00b7 18       		.uleb128 0x18
 1070 00b8 9742     		.uleb128 0x2117
 1071 00ba 19       		.uleb128 0x19
 1072 00bb 00       		.byte	0
 1073 00bc 00       		.byte	0
 1074 00bd 0D       		.uleb128 0xd
 1075 00be 2E       		.uleb128 0x2e
 1076 00bf 01       		.byte	0x1
 1077 00c0 3F       		.uleb128 0x3f
 1078 00c1 19       		.uleb128 0x19
 1079 00c2 03       		.uleb128 0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 29


 1080 00c3 0E       		.uleb128 0xe
 1081 00c4 3A       		.uleb128 0x3a
 1082 00c5 0B       		.uleb128 0xb
 1083 00c6 3B       		.uleb128 0x3b
 1084 00c7 05       		.uleb128 0x5
 1085 00c8 27       		.uleb128 0x27
 1086 00c9 19       		.uleb128 0x19
 1087 00ca 11       		.uleb128 0x11
 1088 00cb 01       		.uleb128 0x1
 1089 00cc 12       		.uleb128 0x12
 1090 00cd 06       		.uleb128 0x6
 1091 00ce 40       		.uleb128 0x40
 1092 00cf 18       		.uleb128 0x18
 1093 00d0 9742     		.uleb128 0x2117
 1094 00d2 19       		.uleb128 0x19
 1095 00d3 01       		.uleb128 0x1
 1096 00d4 13       		.uleb128 0x13
 1097 00d5 00       		.byte	0
 1098 00d6 00       		.byte	0
 1099 00d7 0E       		.uleb128 0xe
 1100 00d8 05       		.uleb128 0x5
 1101 00d9 00       		.byte	0
 1102 00da 03       		.uleb128 0x3
 1103 00db 0E       		.uleb128 0xe
 1104 00dc 3A       		.uleb128 0x3a
 1105 00dd 0B       		.uleb128 0xb
 1106 00de 3B       		.uleb128 0x3b
 1107 00df 05       		.uleb128 0x5
 1108 00e0 49       		.uleb128 0x49
 1109 00e1 13       		.uleb128 0x13
 1110 00e2 02       		.uleb128 0x2
 1111 00e3 17       		.uleb128 0x17
 1112 00e4 00       		.byte	0
 1113 00e5 00       		.byte	0
 1114 00e6 0F       		.uleb128 0xf
 1115 00e7 05       		.uleb128 0x5
 1116 00e8 00       		.byte	0
 1117 00e9 03       		.uleb128 0x3
 1118 00ea 0E       		.uleb128 0xe
 1119 00eb 3A       		.uleb128 0x3a
 1120 00ec 0B       		.uleb128 0xb
 1121 00ed 3B       		.uleb128 0x3b
 1122 00ee 0B       		.uleb128 0xb
 1123 00ef 49       		.uleb128 0x49
 1124 00f0 13       		.uleb128 0x13
 1125 00f1 02       		.uleb128 0x2
 1126 00f2 17       		.uleb128 0x17
 1127 00f3 00       		.byte	0
 1128 00f4 00       		.byte	0
 1129 00f5 10       		.uleb128 0x10
 1130 00f6 898201   		.uleb128 0x4109
 1131 00f9 00       		.byte	0
 1132 00fa 11       		.uleb128 0x11
 1133 00fb 01       		.uleb128 0x1
 1134 00fc 31       		.uleb128 0x31
 1135 00fd 13       		.uleb128 0x13
 1136 00fe 00       		.byte	0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 30


 1137 00ff 00       		.byte	0
 1138 0100 11       		.uleb128 0x11
 1139 0101 2E       		.uleb128 0x2e
 1140 0102 01       		.byte	0x1
 1141 0103 3F       		.uleb128 0x3f
 1142 0104 19       		.uleb128 0x19
 1143 0105 03       		.uleb128 0x3
 1144 0106 0E       		.uleb128 0xe
 1145 0107 3A       		.uleb128 0x3a
 1146 0108 0B       		.uleb128 0xb
 1147 0109 3B       		.uleb128 0x3b
 1148 010a 05       		.uleb128 0x5
 1149 010b 27       		.uleb128 0x27
 1150 010c 19       		.uleb128 0x19
 1151 010d 11       		.uleb128 0x11
 1152 010e 01       		.uleb128 0x1
 1153 010f 12       		.uleb128 0x12
 1154 0110 06       		.uleb128 0x6
 1155 0111 40       		.uleb128 0x40
 1156 0112 18       		.uleb128 0x18
 1157 0113 9742     		.uleb128 0x2117
 1158 0115 19       		.uleb128 0x19
 1159 0116 00       		.byte	0
 1160 0117 00       		.byte	0
 1161 0118 12       		.uleb128 0x12
 1162 0119 34       		.uleb128 0x34
 1163 011a 00       		.byte	0
 1164 011b 03       		.uleb128 0x3
 1165 011c 0E       		.uleb128 0xe
 1166 011d 3A       		.uleb128 0x3a
 1167 011e 0B       		.uleb128 0xb
 1168 011f 3B       		.uleb128 0x3b
 1169 0120 05       		.uleb128 0x5
 1170 0121 49       		.uleb128 0x49
 1171 0122 13       		.uleb128 0x13
 1172 0123 02       		.uleb128 0x2
 1173 0124 17       		.uleb128 0x17
 1174 0125 00       		.byte	0
 1175 0126 00       		.byte	0
 1176 0127 13       		.uleb128 0x13
 1177 0128 34       		.uleb128 0x34
 1178 0129 00       		.byte	0
 1179 012a 03       		.uleb128 0x3
 1180 012b 0E       		.uleb128 0xe
 1181 012c 3A       		.uleb128 0x3a
 1182 012d 0B       		.uleb128 0xb
 1183 012e 3B       		.uleb128 0x3b
 1184 012f 05       		.uleb128 0x5
 1185 0130 49       		.uleb128 0x49
 1186 0131 13       		.uleb128 0x13
 1187 0132 02       		.uleb128 0x2
 1188 0133 18       		.uleb128 0x18
 1189 0134 00       		.byte	0
 1190 0135 00       		.byte	0
 1191 0136 00       		.byte	0
 1192              		.section	.debug_loc,"",%progbits
 1193              	.Ldebug_loc0:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 31


 1194              	.LLST0:
 1195 0000 2A000000 		.4byte	.LVL0
 1196 0004 5C000000 		.4byte	.LVL1
 1197 0008 0100     		.2byte	0x1
 1198 000a 51       		.byte	0x51
 1199 000b 00000000 		.4byte	0
 1200 000f 00000000 		.4byte	0
 1201              	.LLST1:
 1202 0013 00000000 		.4byte	.LVL3
 1203 0017 08000000 		.4byte	.LVL4
 1204 001b 0100     		.2byte	0x1
 1205 001d 50       		.byte	0x50
 1206 001e 08000000 		.4byte	.LVL4
 1207 0022 14000000 		.4byte	.LFE6
 1208 0026 0400     		.2byte	0x4
 1209 0028 F3       		.byte	0xf3
 1210 0029 01       		.uleb128 0x1
 1211 002a 50       		.byte	0x50
 1212 002b 9F       		.byte	0x9f
 1213 002c 00000000 		.4byte	0
 1214 0030 00000000 		.4byte	0
 1215              	.LLST2:
 1216 0034 00000000 		.4byte	.LVL5
 1217 0038 06000000 		.4byte	.LVL6
 1218 003c 0100     		.2byte	0x1
 1219 003e 50       		.byte	0x50
 1220 003f 06000000 		.4byte	.LVL6
 1221 0043 18000000 		.4byte	.LFE7
 1222 0047 0400     		.2byte	0x4
 1223 0049 F3       		.byte	0xf3
 1224 004a 01       		.uleb128 0x1
 1225 004b 50       		.byte	0x50
 1226 004c 9F       		.byte	0x9f
 1227 004d 00000000 		.4byte	0
 1228 0051 00000000 		.4byte	0
 1229              	.LLST3:
 1230 0055 00000000 		.4byte	.LVL7
 1231 0059 09000000 		.4byte	.LVL8-1
 1232 005d 0100     		.2byte	0x1
 1233 005f 50       		.byte	0x50
 1234 0060 09000000 		.4byte	.LVL8-1
 1235 0064 E4000000 		.4byte	.LFE4
 1236 0068 0400     		.2byte	0x4
 1237 006a F3       		.byte	0xf3
 1238 006b 01       		.uleb128 0x1
 1239 006c 50       		.byte	0x50
 1240 006d 9F       		.byte	0x9f
 1241 006e 00000000 		.4byte	0
 1242 0072 00000000 		.4byte	0
 1243              	.LLST4:
 1244 0076 00000000 		.4byte	.LVL7
 1245 007a 09000000 		.4byte	.LVL8-1
 1246 007e 0100     		.2byte	0x1
 1247 0080 51       		.byte	0x51
 1248 0081 09000000 		.4byte	.LVL8-1
 1249 0085 E4000000 		.4byte	.LFE4
 1250 0089 0400     		.2byte	0x4
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 32


 1251 008b F3       		.byte	0xf3
 1252 008c 01       		.uleb128 0x1
 1253 008d 51       		.byte	0x51
 1254 008e 9F       		.byte	0x9f
 1255 008f 00000000 		.4byte	0
 1256 0093 00000000 		.4byte	0
 1257              	.LLST5:
 1258 0097 20000000 		.4byte	.LVL12
 1259 009b 30000000 		.4byte	.LVL13
 1260 009f 0100     		.2byte	0x1
 1261 00a1 52       		.byte	0x52
 1262 00a2 30000000 		.4byte	.LVL13
 1263 00a6 38000000 		.4byte	.LVL14
 1264 00aa 0100     		.2byte	0x1
 1265 00ac 51       		.byte	0x51
 1266 00ad 38000000 		.4byte	.LVL14
 1267 00b1 3C000000 		.4byte	.LVL15
 1268 00b5 0100     		.2byte	0x1
 1269 00b7 52       		.byte	0x52
 1270 00b8 3C000000 		.4byte	.LVL15
 1271 00bc 48000000 		.4byte	.LVL16
 1272 00c0 0100     		.2byte	0x1
 1273 00c2 51       		.byte	0x51
 1274 00c3 48000000 		.4byte	.LVL16
 1275 00c7 4C000000 		.4byte	.LVL17
 1276 00cb 0100     		.2byte	0x1
 1277 00cd 52       		.byte	0x52
 1278 00ce 4C000000 		.4byte	.LVL17
 1279 00d2 C8000000 		.4byte	.LVL21
 1280 00d6 0100     		.2byte	0x1
 1281 00d8 51       		.byte	0x51
 1282 00d9 00000000 		.4byte	0
 1283 00dd 00000000 		.4byte	0
 1284              	.LLST6:
 1285 00e1 0C000000 		.4byte	.LVL9
 1286 00e5 0F000000 		.4byte	.LVL10-1
 1287 00e9 0100     		.2byte	0x1
 1288 00eb 50       		.byte	0x50
 1289 00ec 0F000000 		.4byte	.LVL10-1
 1290 00f0 52000000 		.4byte	.LVL19
 1291 00f4 0100     		.2byte	0x1
 1292 00f6 55       		.byte	0x55
 1293 00f7 00000000 		.4byte	0
 1294 00fb 00000000 		.4byte	0
 1295              	.LLST7:
 1296 00ff 12000000 		.4byte	.LVL11
 1297 0103 4E000000 		.4byte	.LVL18
 1298 0107 0100     		.2byte	0x1
 1299 0109 50       		.byte	0x50
 1300 010a 4E000000 		.4byte	.LVL18
 1301 010e 78000000 		.4byte	.LVL20
 1302 0112 0100     		.2byte	0x1
 1303 0114 53       		.byte	0x53
 1304 0115 00000000 		.4byte	0
 1305 0119 00000000 		.4byte	0
 1306              	.LLST8:
 1307 011d 00000000 		.4byte	.LVL22
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 33


 1308 0121 07000000 		.4byte	.LVL23-1
 1309 0125 0100     		.2byte	0x1
 1310 0127 50       		.byte	0x50
 1311 0128 07000000 		.4byte	.LVL23-1
 1312 012c 5C000000 		.4byte	.LFE9
 1313 0130 0400     		.2byte	0x4
 1314 0132 F3       		.byte	0xf3
 1315 0133 01       		.uleb128 0x1
 1316 0134 50       		.byte	0x50
 1317 0135 9F       		.byte	0x9f
 1318 0136 00000000 		.4byte	0
 1319 013a 00000000 		.4byte	0
 1320              	.LLST9:
 1321 013e 0A000000 		.4byte	.LVL24
 1322 0142 0D000000 		.4byte	.LVL25-1
 1323 0146 0100     		.2byte	0x1
 1324 0148 50       		.byte	0x50
 1325 0149 0D000000 		.4byte	.LVL25-1
 1326 014d 56000000 		.4byte	.LVL28
 1327 0151 0100     		.2byte	0x1
 1328 0153 55       		.byte	0x55
 1329 0154 00000000 		.4byte	0
 1330 0158 00000000 		.4byte	0
 1331              		.section	.debug_aranges,"",%progbits
 1332 0000 6C000000 		.4byte	0x6c
 1333 0004 0200     		.2byte	0x2
 1334 0006 00000000 		.4byte	.Ldebug_info0
 1335 000a 04       		.byte	0x4
 1336 000b 00       		.byte	0
 1337 000c 0000     		.2byte	0
 1338 000e 0000     		.2byte	0
 1339 0010 00000000 		.4byte	.LFB0
 1340 0014 1C000000 		.4byte	.LFE0-.LFB0
 1341 0018 00000000 		.4byte	.LFB1
 1342 001c 1C000000 		.4byte	.LFE1-.LFB1
 1343 0020 00000000 		.4byte	.LFB2
 1344 0024 70000000 		.4byte	.LFE2-.LFB2
 1345 0028 00000000 		.4byte	.LFB3
 1346 002c 20000000 		.4byte	.LFE3-.LFB3
 1347 0030 00000000 		.4byte	.LFB5
 1348 0034 0C000000 		.4byte	.LFE5-.LFB5
 1349 0038 00000000 		.4byte	.LFB6
 1350 003c 14000000 		.4byte	.LFE6-.LFB6
 1351 0040 00000000 		.4byte	.LFB7
 1352 0044 18000000 		.4byte	.LFE7-.LFB7
 1353 0048 00000000 		.4byte	.LFB8
 1354 004c 10000000 		.4byte	.LFE8-.LFB8
 1355 0050 00000000 		.4byte	.LFB10
 1356 0054 10000000 		.4byte	.LFE10-.LFB10
 1357 0058 00000000 		.4byte	.LFB4
 1358 005c E4000000 		.4byte	.LFE4-.LFB4
 1359 0060 00000000 		.4byte	.LFB9
 1360 0064 5C000000 		.4byte	.LFE9-.LFB9
 1361 0068 00000000 		.4byte	0
 1362 006c 00000000 		.4byte	0
 1363              		.section	.debug_ranges,"",%progbits
 1364              	.Ldebug_ranges0:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 34


 1365 0000 00000000 		.4byte	.LFB0
 1366 0004 1C000000 		.4byte	.LFE0
 1367 0008 00000000 		.4byte	.LFB1
 1368 000c 1C000000 		.4byte	.LFE1
 1369 0010 00000000 		.4byte	.LFB2
 1370 0014 70000000 		.4byte	.LFE2
 1371 0018 00000000 		.4byte	.LFB3
 1372 001c 20000000 		.4byte	.LFE3
 1373 0020 00000000 		.4byte	.LFB5
 1374 0024 0C000000 		.4byte	.LFE5
 1375 0028 00000000 		.4byte	.LFB6
 1376 002c 14000000 		.4byte	.LFE6
 1377 0030 00000000 		.4byte	.LFB7
 1378 0034 18000000 		.4byte	.LFE7
 1379 0038 00000000 		.4byte	.LFB8
 1380 003c 10000000 		.4byte	.LFE8
 1381 0040 00000000 		.4byte	.LFB10
 1382 0044 10000000 		.4byte	.LFE10
 1383 0048 00000000 		.4byte	.LFB4
 1384 004c E4000000 		.4byte	.LFE4
 1385 0050 00000000 		.4byte	.LFB9
 1386 0054 5C000000 		.4byte	.LFE9
 1387 0058 00000000 		.4byte	0
 1388 005c 00000000 		.4byte	0
 1389              		.section	.debug_line,"",%progbits
 1390              	.Ldebug_line0:
 1391 0000 97010000 		.section	.debug_str,"MS",%progbits,1
 1391      02006100 
 1391      00000201 
 1391      FB0E0D00 
 1391      01010101 
 1392              	.LASF34:
 1393 0000 63757272 		.ascii	"currDiv\000"
 1393      44697600 
 1394              	.LASF15:
 1395 0008 72656731 		.ascii	"reg16\000"
 1395      3600
 1396              	.LASF2:
 1397 000e 73686F72 		.ascii	"short int\000"
 1397      7420696E 
 1397      7400
 1398              	.LASF10:
 1399 0018 75696E74 		.ascii	"uint16\000"
 1399      313600
 1400              	.LASF29:
 1401 001f 72657374 		.ascii	"restart\000"
 1401      61727400 
 1402              	.LASF35:
 1403 0027 6F6C6453 		.ascii	"oldSrc\000"
 1403      726300
 1404              	.LASF9:
 1405 002e 75696E74 		.ascii	"uint8\000"
 1405      3800
 1406              	.LASF28:
 1407 0034 636C6B44 		.ascii	"clkDivider\000"
 1407      69766964 
 1407      657200
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 35


 1408              	.LASF11:
 1409 003f 666C6F61 		.ascii	"float\000"
 1409      7400
 1410              	.LASF27:
 1411 0045 74696D65 		.ascii	"timer_clock_SetDividerRegister\000"
 1411      725F636C 
 1411      6F636B5F 
 1411      53657444 
 1411      69766964 
 1412              	.LASF6:
 1413 0064 6C6F6E67 		.ascii	"long long int\000"
 1413      206C6F6E 
 1413      6720696E 
 1413      7400
 1414              	.LASF36:
 1415 0072 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1415      4320342E 
 1415      382E3420 
 1415      32303134 
 1415      30353236 
 1416 00a5 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1416      20726576 
 1416      6973696F 
 1416      6E203231 
 1416      31333538 
 1417 00d8 67202D66 		.ascii	"g -ffunction-sections\000"
 1417      66756E63 
 1417      74696F6E 
 1417      2D736563 
 1417      74696F6E 
 1418              	.LASF4:
 1419 00ee 6C6F6E67 		.ascii	"long int\000"
 1419      20696E74 
 1419      00
 1420              	.LASF25:
 1421 00f7 74696D65 		.ascii	"timer_clock_GetModeRegister\000"
 1421      725F636C 
 1421      6F636B5F 
 1421      4765744D 
 1421      6F646552 
 1422              	.LASF24:
 1423 0113 74696D65 		.ascii	"timer_clock_GetDividerRegister\000"
 1423      725F636C 
 1423      6F636B5F 
 1423      47657444 
 1423      69766964 
 1424              	.LASF21:
 1425 0132 73746174 		.ascii	"state\000"
 1425      6500
 1426              	.LASF38:
 1427 0138 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\P"
 1427      73657273 
 1427      5C6D6974 
 1427      6368656C 
 1427      6C5C446F 
 1428 0165 536F435C 		.ascii	"SoC\\E-Throttle.cydsn\000"
 1428      452D5468 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 36


 1428      726F7474 
 1428      6C652E63 
 1428      7964736E 
 1429              	.LASF1:
 1430 017a 756E7369 		.ascii	"unsigned char\000"
 1430      676E6564 
 1430      20636861 
 1430      7200
 1431              	.LASF22:
 1432 0188 6D6F6465 		.ascii	"modeBitMask\000"
 1432      4269744D 
 1432      61736B00 
 1433              	.LASF16:
 1434 0194 74696D65 		.ascii	"timer_clock_Start\000"
 1434      725F636C 
 1434      6F636B5F 
 1434      53746172 
 1434      7400
 1435              	.LASF0:
 1436 01a6 7369676E 		.ascii	"signed char\000"
 1436      65642063 
 1436      68617200 
 1437              	.LASF7:
 1438 01b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1438      206C6F6E 
 1438      6720756E 
 1438      7369676E 
 1438      65642069 
 1439              	.LASF8:
 1440 01c9 756E7369 		.ascii	"unsigned int\000"
 1440      676E6564 
 1440      20696E74 
 1440      00
 1441              	.LASF26:
 1442 01d6 74696D65 		.ascii	"timer_clock_GetSourceRegister\000"
 1442      725F636C 
 1442      6F636B5F 
 1442      47657453 
 1442      6F757263 
 1443              	.LASF19:
 1444 01f4 74696D65 		.ascii	"timer_clock_StandbyPower\000"
 1444      725F636C 
 1444      6F636B5F 
 1444      5374616E 
 1444      64627950 
 1445              	.LASF39:
 1446 020d 74696D65 		.ascii	"timer_clock_SetSourceRegister\000"
 1446      725F636C 
 1446      6F636B5F 
 1446      53657453 
 1446      6F757263 
 1447              	.LASF3:
 1448 022b 73686F72 		.ascii	"short unsigned int\000"
 1448      7420756E 
 1448      7369676E 
 1448      65642069 
 1448      6E7400
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 37


 1449              	.LASF13:
 1450 023e 63686172 		.ascii	"char\000"
 1450      00
 1451              	.LASF33:
 1452 0243 636C6B53 		.ascii	"clkSource\000"
 1452      6F757263 
 1452      6500
 1453              	.LASF32:
 1454 024d 63757272 		.ascii	"currSrc\000"
 1454      53726300 
 1455              	.LASF30:
 1456 0255 6F6C6444 		.ascii	"oldDivider\000"
 1456      69766964 
 1456      657200
 1457              	.LASF14:
 1458 0260 72656738 		.ascii	"reg8\000"
 1458      00
 1459              	.LASF5:
 1460 0265 6C6F6E67 		.ascii	"long unsigned int\000"
 1460      20756E73 
 1460      69676E65 
 1460      6420696E 
 1460      7400
 1461              	.LASF12:
 1462 0277 646F7562 		.ascii	"double\000"
 1462      6C6500
 1463              	.LASF23:
 1464 027e 74696D65 		.ascii	"timer_clock_ClearModeRegister\000"
 1464      725F636C 
 1464      6F636B5F 
 1464      436C6561 
 1464      724D6F64 
 1465              	.LASF37:
 1466 029c 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\timer_clock.c\000"
 1466      6E657261 
 1466      7465645F 
 1466      536F7572 
 1466      63655C50 
 1467              	.LASF18:
 1468 02c3 74696D65 		.ascii	"timer_clock_StopBlock\000"
 1468      725F636C 
 1468      6F636B5F 
 1468      53746F70 
 1468      426C6F63 
 1469              	.LASF31:
 1470 02d9 656E6162 		.ascii	"enabled\000"
 1470      6C656400 
 1471              	.LASF17:
 1472 02e1 74696D65 		.ascii	"timer_clock_Stop\000"
 1472      725F636C 
 1472      6F636B5F 
 1472      53746F70 
 1472      00
 1473              	.LASF20:
 1474 02f2 74696D65 		.ascii	"timer_clock_SetModeRegister\000"
 1474      725F636C 
 1474      6F636B5F 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccSLBqIb.s 			page 38


 1474      5365744D 
 1474      6F646552 
 1475              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
