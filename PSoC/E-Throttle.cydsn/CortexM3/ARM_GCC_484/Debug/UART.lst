ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_Init,"ax",%progbits
  19              		.align	2
  20              		.global	UART_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_Init, %function
  24              	UART_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART.c"
   1:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART.c **** *
   5:.\Generated_Source\PSoC5/UART.c **** * Description:
   6:.\Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART.c **** *
   8:.\Generated_Source\PSoC5/UART.c **** * Note:
   9:.\Generated_Source\PSoC5/UART.c **** *
  10:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART.c **** 
  17:.\Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:.\Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:.\Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART.c **** 
  22:.\Generated_Source\PSoC5/UART.c **** 
  23:.\Generated_Source\PSoC5/UART.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART.c **** 
  27:.\Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART.c **** 
  29:.\Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 2


  32:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART.c **** 
  35:.\Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART.c **** 
  48:.\Generated_Source\PSoC5/UART.c **** 
  49:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART.c **** *
  53:.\Generated_Source\PSoC5/UART.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:.\Generated_Source\PSoC5/UART.c **** *
  59:.\Generated_Source\PSoC5/UART.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART.c **** *  None.
  61:.\Generated_Source\PSoC5/UART.c **** *
  62:.\Generated_Source\PSoC5/UART.c **** * Return:
  63:.\Generated_Source\PSoC5/UART.c **** *  None.
  64:.\Generated_Source\PSoC5/UART.c **** *
  65:.\Generated_Source\PSoC5/UART.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:.\Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:.\Generated_Source\PSoC5/UART.c **** *
  72:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART.c **** *  No.
  74:.\Generated_Source\PSoC5/UART.c **** *
  75:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:.\Generated_Source\PSoC5/UART.c **** {
  78:.\Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:.\Generated_Source\PSoC5/UART.c ****     {
  81:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:.\Generated_Source\PSoC5/UART.c ****     }
  84:.\Generated_Source\PSoC5/UART.c **** 
  85:.\Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:.\Generated_Source\PSoC5/UART.c **** }
  87:.\Generated_Source\PSoC5/UART.c **** 
  88:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 3


  89:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART.c **** *
  93:.\Generated_Source\PSoC5/UART.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:.\Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART.c **** *
  99:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART.c **** *  None.
 101:.\Generated_Source\PSoC5/UART.c **** *
 102:.\Generated_Source\PSoC5/UART.c **** * Return:
 103:.\Generated_Source\PSoC5/UART.c **** *  None.
 104:.\Generated_Source\PSoC5/UART.c **** *
 105:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:.\Generated_Source\PSoC5/UART.c **** {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 108:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART.c **** 
 110:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART.c **** 
 117:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART.c **** 
 123:.\Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  32              		.loc 1 124 0
  33 0000 7222     		movs	r2, #114
  34 0002 084B     		ldr	r3, .L2
  35 0004 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  36              		.loc 1 126 0
  37 0006 2022     		movs	r2, #32
  38 0008 073B     		subs	r3, r3, #7
  39 000a 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART.c **** 
 129:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 4


 133:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART.c **** 
 136:.\Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  40              		.loc 1 138 0
  41 000c 0622     		movs	r2, #6
  42 000e A3F5AC73 		sub	r3, r3, #344
  43 0012 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  44              		.loc 1 139 0
  45 0014 4722     		movs	r2, #71
  46 0016 1033     		adds	r3, r3, #16
  47 0018 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART.c ****         #else
 142:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART.c **** 
 146:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART.c ****         #else
 150:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
  48              		.loc 1 150 0
  49 001a 0022     		movs	r2, #0
  50 001c 4F33     		adds	r3, r3, #79
  51 001e 1A70     		strb	r2, [r3]
  52 0020 7047     		bx	lr
  53              	.L3:
  54 0022 00BF     		.align	2
  55              	.L2:
  56 0024 8B650040 		.word	1073767819
  57              		.cfi_endproc
  58              	.LFE1:
  59              		.size	UART_Init, .-UART_Init
  60              		.section	.text.UART_Enable,"ax",%progbits
  61              		.align	2
  62              		.global	UART_Enable
  63              		.thumb
  64              		.thumb_func
  65              		.type	UART_Enable, %function
  66              	UART_Enable:
  67              	.LFB2:
 151:.\Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART.c **** 
 153:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART.c **** 
 155:.\Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART.c **** }
 161:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 5


 162:.\Generated_Source\PSoC5/UART.c **** 
 163:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART.c **** *
 167:.\Generated_Source\PSoC5/UART.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:.\Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART.c **** 
 173:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART.c **** *  None.
 175:.\Generated_Source\PSoC5/UART.c **** *
 176:.\Generated_Source\PSoC5/UART.c **** * Return:
 177:.\Generated_Source\PSoC5/UART.c **** *  None.
 178:.\Generated_Source\PSoC5/UART.c **** *
 179:.\Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART.c **** *
 182:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:.\Generated_Source\PSoC5/UART.c **** {
  68              		.loc 1 184 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 10B5     		push	{r4, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 4, -8
  75              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  76              		.loc 1 186 0
  77 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  78              	.LVL0:
  79 0006 0446     		mov	r4, r0
  80              	.LVL1:
 187:.\Generated_Source\PSoC5/UART.c **** 
 188:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
  81              		.loc 1 190 0
  82 0008 0A4B     		ldr	r3, .L5
  83 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  84 000c 42F02002 		orr	r2, r2, #32
  85 0010 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC5/UART.c **** 
 192:.\Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
  86              		.loc 1 193 0
  87 0012 073B     		subs	r3, r3, #7
  88 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  89 0016 42F01002 		orr	r2, r2, #16
  90 001a 1A70     		strb	r2, [r3]
 194:.\Generated_Source\PSoC5/UART.c **** 
 195:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 6


 196:.\Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:.\Generated_Source\PSoC5/UART.c **** 
 198:.\Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART.c **** 
 204:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART.c **** 
 210:.\Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
  91              		.loc 1 211 0
  92 001c F93B     		subs	r3, r3, #249
  93 001e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  94 0020 42F01002 		orr	r2, r2, #16
  95 0024 1A70     		strb	r2, [r3]
 212:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART.c **** 
 218:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
  96              		.loc 1 219 0
  97 0026 FFF7FEFF 		bl	UART_IntClock_Start
  98              	.LVL2:
 220:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART.c **** 
 222:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
  99              		.loc 1 222 0
 100 002a 2046     		mov	r0, r4
 101 002c FFF7FEFF 		bl	CyExitCriticalSection
 102              	.LVL3:
 103 0030 10BD     		pop	{r4, pc}
 104              	.LVL4:
 105              	.L6:
 106 0032 00BF     		.align	2
 107              	.L5:
 108 0034 9B650040 		.word	1073767835
 109              		.cfi_endproc
 110              	.LFE2:
 111              		.size	UART_Enable, .-UART_Enable
 112              		.section	.text.UART_Start,"ax",%progbits
 113              		.align	2
 114              		.global	UART_Start
 115              		.thumb
 116              		.thumb_func
 117              		.type	UART_Start, %function
 118              	UART_Start:
 119              	.LFB0:
  77:.\Generated_Source\PSoC5/UART.c **** {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 7


 120              		.loc 1 77 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124 0000 08B5     		push	{r3, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 3, -8
 127              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
 128              		.loc 1 79 0
 129 0002 054B     		ldr	r3, .L9
 130 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 131 0006 23B9     		cbnz	r3, .L8
  81:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
 132              		.loc 1 81 0
 133 0008 FFF7FEFF 		bl	UART_Init
 134              	.LVL5:
  82:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 135              		.loc 1 82 0
 136 000c 0122     		movs	r2, #1
 137 000e 024B     		ldr	r3, .L9
 138 0010 1A70     		strb	r2, [r3]
 139              	.L8:
  85:.\Generated_Source\PSoC5/UART.c ****     UART_Enable();
 140              		.loc 1 85 0
 141 0012 FFF7FEFF 		bl	UART_Enable
 142              	.LVL6:
 143 0016 08BD     		pop	{r3, pc}
 144              	.L10:
 145              		.align	2
 146              	.L9:
 147 0018 00000000 		.word	.LANCHOR0
 148              		.cfi_endproc
 149              	.LFE0:
 150              		.size	UART_Start, .-UART_Start
 151              		.section	.text.UART_Stop,"ax",%progbits
 152              		.align	2
 153              		.global	UART_Stop
 154              		.thumb
 155              		.thumb_func
 156              		.type	UART_Stop, %function
 157              	UART_Stop:
 158              	.LFB3:
 223:.\Generated_Source\PSoC5/UART.c **** }
 224:.\Generated_Source\PSoC5/UART.c **** 
 225:.\Generated_Source\PSoC5/UART.c **** 
 226:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART.c **** *
 230:.\Generated_Source\PSoC5/UART.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART.c **** *
 233:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART.c **** *  None.
 235:.\Generated_Source\PSoC5/UART.c **** *
 236:.\Generated_Source\PSoC5/UART.c **** * Return:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 8


 237:.\Generated_Source\PSoC5/UART.c **** *  None.
 238:.\Generated_Source\PSoC5/UART.c **** *
 239:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:.\Generated_Source\PSoC5/UART.c **** {
 159              		.loc 1 241 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163 0000 10B5     		push	{r4, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 167              		.loc 1 243 0
 168 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 169              	.LVL7:
 170 0006 0446     		mov	r4, r0
 171              	.LVL8:
 244:.\Generated_Source\PSoC5/UART.c **** 
 245:.\Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 172              		.loc 1 247 0
 173 0008 0A4B     		ldr	r3, .L12
 174 000a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 175 000c 02F0DF02 		and	r2, r2, #223
 176 0010 1A70     		strb	r2, [r3]
 248:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART.c **** 
 250:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART.c **** 
 256:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 177              		.loc 1 257 0
 178 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 179              	.LVL9:
 258:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART.c **** 
 260:.\Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 180              		.loc 1 262 0
 181 0016 084B     		ldr	r3, .L12+4
 182 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 183 001a 02F0EF02 		and	r2, r2, #239
 184 001e 1A70     		strb	r2, [r3]
 263:.\Generated_Source\PSoC5/UART.c **** 
 264:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 9


 268:.\Generated_Source\PSoC5/UART.c **** 
 269:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 185              		.loc 1 270 0
 186 0020 F93B     		subs	r3, r3, #249
 187 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 188 0024 02F0EF02 		and	r2, r2, #239
 189 0028 1A70     		strb	r2, [r3]
 271:.\Generated_Source\PSoC5/UART.c **** 
 272:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART.c **** 
 277:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 190              		.loc 1 277 0
 191 002a 2046     		mov	r0, r4
 192 002c FFF7FEFF 		bl	CyExitCriticalSection
 193              	.LVL10:
 194 0030 10BD     		pop	{r4, pc}
 195              	.LVL11:
 196              	.L13:
 197 0032 00BF     		.align	2
 198              	.L12:
 199 0034 9B650040 		.word	1073767835
 200 0038 94650040 		.word	1073767828
 201              		.cfi_endproc
 202              	.LFE3:
 203              		.size	UART_Stop, .-UART_Stop
 204              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 205              		.align	2
 206              		.global	UART_ReadControlRegister
 207              		.thumb
 208              		.thumb_func
 209              		.type	UART_ReadControlRegister, %function
 210              	UART_ReadControlRegister:
 211              	.LFB4:
 278:.\Generated_Source\PSoC5/UART.c **** }
 279:.\Generated_Source\PSoC5/UART.c **** 
 280:.\Generated_Source\PSoC5/UART.c **** 
 281:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART.c **** *
 285:.\Generated_Source\PSoC5/UART.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART.c **** *
 288:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART.c **** *  None.
 290:.\Generated_Source\PSoC5/UART.c **** *
 291:.\Generated_Source\PSoC5/UART.c **** * Return:
 292:.\Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART.c **** *
 294:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART.c **** {
 212              		.loc 1 296 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 10


 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 297:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART.c ****         return(0u);
 299:.\Generated_Source\PSoC5/UART.c ****     #else
 300:.\Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART.c **** }
 217              		.loc 1 302 0
 218 0000 0020     		movs	r0, #0
 219 0002 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE4:
 222              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 223              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 224              		.align	2
 225              		.global	UART_WriteControlRegister
 226              		.thumb
 227              		.thumb_func
 228              		.type	UART_WriteControlRegister, %function
 229              	UART_WriteControlRegister:
 230              	.LFB5:
 303:.\Generated_Source\PSoC5/UART.c **** 
 304:.\Generated_Source\PSoC5/UART.c **** 
 305:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART.c **** *
 309:.\Generated_Source\PSoC5/UART.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART.c **** *
 312:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART.c **** *
 315:.\Generated_Source\PSoC5/UART.c **** * Return:
 316:.\Generated_Source\PSoC5/UART.c **** *  None.
 317:.\Generated_Source\PSoC5/UART.c **** *
 318:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART.c **** {
 231              		.loc 1 320 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL12:
 237 0000 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE5:
 240              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 241 0002 00BF     		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 242              		.align	2
 243              		.global	UART_SetRxInterruptMode
 244              		.thumb
 245              		.thumb_func
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 11


 246              		.type	UART_SetRxInterruptMode, %function
 247              	UART_SetRxInterruptMode:
 248              	.LFB6:
 321:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART.c ****         {
 324:.\Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART.c ****         }
 326:.\Generated_Source\PSoC5/UART.c ****     #else
 327:.\Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART.c **** }
 330:.\Generated_Source\PSoC5/UART.c **** 
 331:.\Generated_Source\PSoC5/UART.c **** 
 332:.\Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART.c ****     *
 337:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART.c ****     *
 340:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART.c ****     *
 352:.\Generated_Source\PSoC5/UART.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART.c ****     *
 355:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART.c ****     *
 358:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART.c ****     {
 249              		.loc 1 360 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL13:
 361:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 255              		.loc 1 361 0
 256 0000 014B     		ldr	r3, .L17
 257 0002 1870     		strb	r0, [r3]
 258 0004 7047     		bx	lr
 259              	.L18:
 260 0006 00BF     		.align	2
 261              	.L17:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 12


 262 0008 84650040 		.word	1073767812
 263              		.cfi_endproc
 264              	.LFE6:
 265              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 266              		.section	.text.UART_ReadRxData,"ax",%progbits
 267              		.align	2
 268              		.global	UART_ReadRxData
 269              		.thumb
 270              		.thumb_func
 271              		.type	UART_ReadRxData, %function
 272              	UART_ReadRxData:
 273              	.LFB7:
 362:.\Generated_Source\PSoC5/UART.c ****     }
 363:.\Generated_Source\PSoC5/UART.c **** 
 364:.\Generated_Source\PSoC5/UART.c **** 
 365:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART.c ****     *
 369:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART.c ****     *
 373:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART.c ****     *
 376:.\Generated_Source\PSoC5/UART.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART.c ****     *
 379:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART.c ****     *
 388:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART.c ****     *
 391:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART.c ****     {
 274              		.loc 1 393 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 394:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART.c **** 
 396:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART.c **** 
 398:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART.c **** 
 401:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 13


 402:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:.\Generated_Source\PSoC5/UART.c **** 
 404:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:.\Generated_Source\PSoC5/UART.c **** 
 407:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/UART.c ****         {
 409:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC5/UART.c **** 
 412:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/UART.c ****             {
 414:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/UART.c ****             }
 416:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/UART.c **** 
 419:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/UART.c ****             {
 421:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART.c ****                             */
 430:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART.c ****                         }
 432:.\Generated_Source\PSoC5/UART.c ****                     #else
 433:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART.c ****             }
 437:.\Generated_Source\PSoC5/UART.c ****         }
 438:.\Generated_Source\PSoC5/UART.c ****         else
 439:.\Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:.\Generated_Source\PSoC5/UART.c ****         }
 442:.\Generated_Source\PSoC5/UART.c **** 
 443:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:.\Generated_Source\PSoC5/UART.c **** 
 445:.\Generated_Source\PSoC5/UART.c ****     #else
 446:.\Generated_Source\PSoC5/UART.c **** 
 447:.\Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 279              		.loc 1 448 0
 280 0000 014B     		ldr	r3, .L20
 281 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 282              	.LVL14:
 449:.\Generated_Source\PSoC5/UART.c **** 
 450:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART.c **** 
 452:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:.\Generated_Source\PSoC5/UART.c ****     }
 283              		.loc 1 453 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 14


 284 0004 7047     		bx	lr
 285              	.L21:
 286 0006 00BF     		.align	2
 287              	.L20:
 288 0008 48650040 		.word	1073767752
 289              		.cfi_endproc
 290              	.LFE7:
 291              		.size	UART_ReadRxData, .-UART_ReadRxData
 292              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 293              		.align	2
 294              		.global	UART_ReadRxStatus
 295              		.thumb
 296              		.thumb_func
 297              		.type	UART_ReadRxStatus, %function
 298              	UART_ReadRxStatus:
 299              	.LFB8:
 454:.\Generated_Source\PSoC5/UART.c **** 
 455:.\Generated_Source\PSoC5/UART.c **** 
 456:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART.c ****     *
 460:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART.c ****     *
 464:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART.c ****     *
 467:.\Generated_Source\PSoC5/UART.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART.c ****     *
 470:.\Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART.c ****     *
 476:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART.c ****     *
 484:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART.c ****     {
 300              		.loc 1 486 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 487:.\Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART.c **** 
 489:.\Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 15


 305              		.loc 1 489 0
 306 0000 024B     		ldr	r3, .L23
 307 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 308              	.LVL15:
 490:.\Generated_Source\PSoC5/UART.c **** 
 491:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/UART.c ****         {
 494:.\Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/UART.c ****         }
 497:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART.c **** 
 499:.\Generated_Source\PSoC5/UART.c ****         return(status);
 500:.\Generated_Source\PSoC5/UART.c ****     }
 309              		.loc 1 500 0
 310 0004 00F07F00 		and	r0, r0, #127
 311              	.LVL16:
 312 0008 7047     		bx	lr
 313              	.L24:
 314 000a 00BF     		.align	2
 315              	.L23:
 316 000c 64650040 		.word	1073767780
 317              		.cfi_endproc
 318              	.LFE8:
 319              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 320              		.section	.text.UART_GetChar,"ax",%progbits
 321              		.align	2
 322              		.global	UART_GetChar
 323              		.thumb
 324              		.thumb_func
 325              		.type	UART_GetChar, %function
 326              	UART_GetChar:
 327              	.LFB9:
 501:.\Generated_Source\PSoC5/UART.c **** 
 502:.\Generated_Source\PSoC5/UART.c **** 
 503:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART.c ****     *
 507:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:.\Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART.c ****     *
 512:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART.c ****     *
 515:.\Generated_Source\PSoC5/UART.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART.c ****     *
 519:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 16


 524:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART.c ****     *
 528:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART.c ****     *
 531:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART.c ****     {
 328              		.loc 1 533 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333              	.LVL17:
 534:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART.c **** 
 537:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART.c **** 
 541:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:.\Generated_Source\PSoC5/UART.c **** 
 544:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:.\Generated_Source\PSoC5/UART.c **** 
 547:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC5/UART.c ****         {
 549:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/UART.c ****             {
 553:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/UART.c ****             }
 555:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/UART.c **** 
 558:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/UART.c ****             {
 560:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART.c ****                             */
 569:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART.c ****                         }
 571:.\Generated_Source\PSoC5/UART.c ****                     #else
 572:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 17


 575:.\Generated_Source\PSoC5/UART.c ****             }
 576:.\Generated_Source\PSoC5/UART.c **** 
 577:.\Generated_Source\PSoC5/UART.c ****         }
 578:.\Generated_Source\PSoC5/UART.c ****         else
 579:.\Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:.\Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART.c ****                 {
 587:.\Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/UART.c ****                 }
 589:.\Generated_Source\PSoC5/UART.c ****             }
 590:.\Generated_Source\PSoC5/UART.c ****         }
 591:.\Generated_Source\PSoC5/UART.c **** 
 592:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:.\Generated_Source\PSoC5/UART.c **** 
 594:.\Generated_Source\PSoC5/UART.c ****     #else
 595:.\Generated_Source\PSoC5/UART.c **** 
 596:.\Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 334              		.loc 1 596 0
 335 0000 084B     		ldr	r3, .L29
 336 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 337 0004 DBB2     		uxtb	r3, r3
 338              	.LVL18:
 597:.\Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 339              		.loc 1 597 0
 340 0006 13F0200F 		tst	r3, #32
 341 000a 06D0     		beq	.L27
 598:.\Generated_Source\PSoC5/UART.c ****         {
 599:.\Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 342              		.loc 1 600 0
 343 000c 064A     		ldr	r2, .L29+4
 344 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 345 0010 C0B2     		uxtb	r0, r0
 346              	.LVL19:
 601:.\Generated_Source\PSoC5/UART.c **** 
 602:.\Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 347              		.loc 1 603 0
 348 0012 13F01E0F 		tst	r3, #30
 349 0016 02D1     		bne	.L28
 350 0018 7047     		bx	lr
 351              	.LVL20:
 352              	.L27:
 534:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 353              		.loc 1 534 0
 354 001a 0020     		movs	r0, #0
 355 001c 7047     		bx	lr
 356              	.LVL21:
 357              	.L28:
 604:.\Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART.c ****             {
 606:.\Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 18


 358              		.loc 1 606 0
 359 001e 0020     		movs	r0, #0
 360              	.LVL22:
 607:.\Generated_Source\PSoC5/UART.c ****             }
 608:.\Generated_Source\PSoC5/UART.c ****         }
 609:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART.c **** 
 611:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:.\Generated_Source\PSoC5/UART.c ****     }
 361              		.loc 1 612 0
 362 0020 7047     		bx	lr
 363              	.L30:
 364 0022 00BF     		.align	2
 365              	.L29:
 366 0024 64650040 		.word	1073767780
 367 0028 48650040 		.word	1073767752
 368              		.cfi_endproc
 369              	.LFE9:
 370              		.size	UART_GetChar, .-UART_GetChar
 371              		.section	.text.UART_GetByte,"ax",%progbits
 372              		.align	2
 373              		.global	UART_GetByte
 374              		.thumb
 375              		.thumb_func
 376              		.type	UART_GetByte, %function
 377              	UART_GetByte:
 378              	.LFB10:
 613:.\Generated_Source\PSoC5/UART.c **** 
 614:.\Generated_Source\PSoC5/UART.c **** 
 615:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART.c ****     *
 619:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART.c ****     *
 623:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART.c ****     *
 626:.\Generated_Source\PSoC5/UART.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART.c ****     *
 630:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART.c ****     *
 633:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART.c ****     {
 379              		.loc 1 635 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383 0000 10B5     		push	{r4, lr}
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 4, -8
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 19


 386              		.cfi_offset 14, -4
 636:.\Generated_Source\PSoC5/UART.c ****         
 637:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:.\Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:.\Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:.\Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:.\Generated_Source\PSoC5/UART.c ****     #else
 646:.\Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 387              		.loc 1 646 0
 388 0002 FFF7FEFF 		bl	UART_ReadRxStatus
 389              	.LVL23:
 390 0006 0402     		lsls	r4, r0, #8
 391 0008 FFF7FEFF 		bl	UART_ReadRxData
 392              	.LVL24:
 393 000c 2043     		orrs	r0, r0, r4
 647:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART.c ****         
 649:.\Generated_Source\PSoC5/UART.c ****     }
 394              		.loc 1 649 0
 395 000e 80B2     		uxth	r0, r0
 396 0010 10BD     		pop	{r4, pc}
 397              		.cfi_endproc
 398              	.LFE10:
 399              		.size	UART_GetByte, .-UART_GetByte
 400 0012 00BF     		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 401              		.align	2
 402              		.global	UART_GetRxBufferSize
 403              		.thumb
 404              		.thumb_func
 405              		.type	UART_GetRxBufferSize, %function
 406              	UART_GetRxBufferSize:
 407              	.LFB11:
 650:.\Generated_Source\PSoC5/UART.c **** 
 651:.\Generated_Source\PSoC5/UART.c **** 
 652:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART.c ****     *
 656:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART.c ****     *
 664:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART.c ****     *
 667:.\Generated_Source\PSoC5/UART.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 20


 671:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART.c ****     *
 676:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART.c ****     *
 679:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART.c ****     *
 682:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART.c ****                                                             
 685:.\Generated_Source\PSoC5/UART.c ****     {
 408              		.loc 1 685 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 686:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART.c **** 
 688:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART.c **** 
 690:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:.\Generated_Source\PSoC5/UART.c **** 
 693:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:.\Generated_Source\PSoC5/UART.c ****         {
 695:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/UART.c ****             {
 697:.\Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/UART.c ****             }
 699:.\Generated_Source\PSoC5/UART.c ****             else
 700:.\Generated_Source\PSoC5/UART.c ****             {
 701:.\Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART.c ****             }
 703:.\Generated_Source\PSoC5/UART.c ****         }
 704:.\Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART.c ****         {
 706:.\Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:.\Generated_Source\PSoC5/UART.c ****         }
 708:.\Generated_Source\PSoC5/UART.c ****         else
 709:.\Generated_Source\PSoC5/UART.c ****         {
 710:.\Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:.\Generated_Source\PSoC5/UART.c ****         }
 712:.\Generated_Source\PSoC5/UART.c **** 
 713:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:.\Generated_Source\PSoC5/UART.c **** 
 715:.\Generated_Source\PSoC5/UART.c ****     #else
 716:.\Generated_Source\PSoC5/UART.c **** 
 717:.\Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 413              		.loc 1 718 0
 414 0000 044B     		ldr	r3, .L35
 415 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 416 0004 13F0200F 		tst	r3, #32
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 21


 417 0008 01D0     		beq	.L34
 418 000a 0120     		movs	r0, #1
 419 000c 7047     		bx	lr
 420              	.L34:
 421 000e 0020     		movs	r0, #0
 422              	.LVL25:
 719:.\Generated_Source\PSoC5/UART.c **** 
 720:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART.c **** 
 722:.\Generated_Source\PSoC5/UART.c ****         return(size);
 723:.\Generated_Source\PSoC5/UART.c ****     }
 423              		.loc 1 723 0
 424 0010 7047     		bx	lr
 425              	.L36:
 426 0012 00BF     		.align	2
 427              	.L35:
 428 0014 64650040 		.word	1073767780
 429              		.cfi_endproc
 430              	.LFE11:
 431              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 432              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 433              		.align	2
 434              		.global	UART_ClearRxBuffer
 435              		.thumb
 436              		.thumb_func
 437              		.type	UART_ClearRxBuffer, %function
 438              	UART_ClearRxBuffer:
 439              	.LFB12:
 724:.\Generated_Source\PSoC5/UART.c **** 
 725:.\Generated_Source\PSoC5/UART.c **** 
 726:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART.c ****     *
 730:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART.c ****     *
 733:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART.c ****     *
 736:.\Generated_Source\PSoC5/UART.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART.c ****     *
 739:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART.c ****     *
 745:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART.c ****     *
 748:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 22


 753:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART.c ****     *
 756:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART.c ****     {
 440              		.loc 1 758 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 3, -8
 447              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART.c **** 
 761:.\Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 448              		.loc 1 762 0
 449 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 450              	.LVL26:
 763:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 451              		.loc 1 763 0
 452 0006 064B     		ldr	r3, .L38
 453 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 454 000a 42F00102 		orr	r2, r2, #1
 455 000e 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 456              		.loc 1 764 0
 457 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 458 0012 02F0FE02 		and	r2, r2, #254
 459 0016 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 460              		.loc 1 765 0
 461 0018 FFF7FEFF 		bl	CyExitCriticalSection
 462              	.LVL27:
 463 001c 08BD     		pop	{r3, pc}
 464              	.L39:
 465 001e 00BF     		.align	2
 466              	.L38:
 467 0020 98650040 		.word	1073767832
 468              		.cfi_endproc
 469              	.LFE12:
 470              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 471              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 472              		.align	2
 473              		.global	UART_SetRxAddressMode
 474              		.thumb
 475              		.thumb_func
 476              		.type	UART_SetRxAddressMode, %function
 477              	UART_SetRxAddressMode:
 478              	.LFB13:
 766:.\Generated_Source\PSoC5/UART.c **** 
 767:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART.c **** 
 769:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 23


 771:.\Generated_Source\PSoC5/UART.c **** 
 772:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC5/UART.c **** 
 777:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:.\Generated_Source\PSoC5/UART.c **** 
 779:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART.c **** 
 781:.\Generated_Source\PSoC5/UART.c ****     }
 782:.\Generated_Source\PSoC5/UART.c **** 
 783:.\Generated_Source\PSoC5/UART.c **** 
 784:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART.c ****     *
 788:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART.c ****     *
 792:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART.c ****     *
 804:.\Generated_Source\PSoC5/UART.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART.c ****     *
 807:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART.c ****     *
 812:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART.c ****                                                         
 815:.\Generated_Source\PSoC5/UART.c ****     {
 479              		.loc 1 815 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484              	.LVL28:
 485 0000 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE13:
 488              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 489 0002 00BF     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 490              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 24


 491              		.global	UART_SetRxAddress1
 492              		.thumb
 493              		.thumb_func
 494              		.type	UART_SetRxAddress1, %function
 495              	UART_SetRxAddress1:
 496              	.LFB14:
 816:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART.c ****                 {
 820:.\Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART.c ****                 }
 822:.\Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART.c **** 
 828:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART.c ****             {
 837:.\Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART.c ****             }
 839:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART.c ****     }
 841:.\Generated_Source\PSoC5/UART.c **** 
 842:.\Generated_Source\PSoC5/UART.c **** 
 843:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART.c ****     *
 847:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART.c ****     *
 850:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART.c ****     *
 853:.\Generated_Source\PSoC5/UART.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART.c ****     *
 856:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART.c ****     {
 497              		.loc 1 858 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 502              	.LVL29:
 859:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 503              		.loc 1 859 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 25


 504 0000 014B     		ldr	r3, .L42
 505 0002 1870     		strb	r0, [r3]
 506 0004 7047     		bx	lr
 507              	.L43:
 508 0006 00BF     		.align	2
 509              	.L42:
 510 0008 28650040 		.word	1073767720
 511              		.cfi_endproc
 512              	.LFE14:
 513              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 514              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 515              		.align	2
 516              		.global	UART_SetRxAddress2
 517              		.thumb
 518              		.thumb_func
 519              		.type	UART_SetRxAddress2, %function
 520              	UART_SetRxAddress2:
 521              	.LFB15:
 860:.\Generated_Source\PSoC5/UART.c ****     }
 861:.\Generated_Source\PSoC5/UART.c **** 
 862:.\Generated_Source\PSoC5/UART.c **** 
 863:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART.c ****     *
 867:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART.c ****     *
 870:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART.c ****     *
 873:.\Generated_Source\PSoC5/UART.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART.c ****     *
 876:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART.c ****     {
 522              		.loc 1 878 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527              	.LVL30:
 879:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 528              		.loc 1 879 0
 529 0000 014B     		ldr	r3, .L45
 530 0002 1870     		strb	r0, [r3]
 531 0004 7047     		bx	lr
 532              	.L46:
 533 0006 00BF     		.align	2
 534              	.L45:
 535 0008 38650040 		.word	1073767736
 536              		.cfi_endproc
 537              	.LFE15:
 538              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 539              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 540              		.align	2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 26


 541              		.global	UART_SetTxInterruptMode
 542              		.thumb
 543              		.thumb_func
 544              		.type	UART_SetTxInterruptMode, %function
 545              	UART_SetTxInterruptMode:
 546              	.LFB16:
 880:.\Generated_Source\PSoC5/UART.c ****     }
 881:.\Generated_Source\PSoC5/UART.c **** 
 882:.\Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART.c **** 
 884:.\Generated_Source\PSoC5/UART.c **** 
 885:.\Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART.c ****     *
 890:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART.c ****     *
 894:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART.c ****     *
 901:.\Generated_Source\PSoC5/UART.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART.c ****     *
 904:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART.c ****     *
 907:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART.c ****     {
 547              		.loc 1 909 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 552              	.LVL31:
 910:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 553              		.loc 1 910 0
 554 0000 014B     		ldr	r3, .L48
 555 0002 1870     		strb	r0, [r3]
 556 0004 7047     		bx	lr
 557              	.L49:
 558 0006 00BF     		.align	2
 559              	.L48:
 560 0008 8B640040 		.word	1073767563
 561              		.cfi_endproc
 562              	.LFE16:
 563              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 564              		.section	.text.UART_WriteTxData,"ax",%progbits
 565              		.align	2
 566              		.global	UART_WriteTxData
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 27


 567              		.thumb
 568              		.thumb_func
 569              		.type	UART_WriteTxData, %function
 570              	UART_WriteTxData:
 571              	.LFB17:
 911:.\Generated_Source\PSoC5/UART.c ****     }
 912:.\Generated_Source\PSoC5/UART.c **** 
 913:.\Generated_Source\PSoC5/UART.c **** 
 914:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART.c ****     *
 918:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART.c ****     *
 923:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART.c ****     *
 926:.\Generated_Source\PSoC5/UART.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART.c ****     * None.
 928:.\Generated_Source\PSoC5/UART.c ****     *
 929:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART.c ****     *
 938:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART.c ****     *
 941:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART.c ****     {
 572              		.loc 1 943 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577              	.LVL32:
 944:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 578              		.loc 1 945 0
 579 0000 024B     		ldr	r3, .L52
 580 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 581 0004 0BB1     		cbz	r3, .L50
 946:.\Generated_Source\PSoC5/UART.c ****         {
 947:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART.c **** 
 949:.\Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:.\Generated_Source\PSoC5/UART.c **** 
 952:.\Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 28


 953:.\Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/UART.c ****             {
 955:.\Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/UART.c ****             }
 958:.\Generated_Source\PSoC5/UART.c ****             else
 959:.\Generated_Source\PSoC5/UART.c ****             {
 960:.\Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/UART.c ****                 {
 962:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/UART.c ****                 }
 964:.\Generated_Source\PSoC5/UART.c **** 
 965:.\Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/UART.c **** 
 967:.\Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:.\Generated_Source\PSoC5/UART.c ****             }
 970:.\Generated_Source\PSoC5/UART.c **** 
 971:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:.\Generated_Source\PSoC5/UART.c **** 
 973:.\Generated_Source\PSoC5/UART.c ****         #else
 974:.\Generated_Source\PSoC5/UART.c **** 
 975:.\Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 582              		.loc 1 976 0
 583 0006 024B     		ldr	r3, .L52+4
 584 0008 1870     		strb	r0, [r3]
 585              	.L50:
 586 000a 7047     		bx	lr
 587              	.L53:
 588              		.align	2
 589              	.L52:
 590 000c 00000000 		.word	.LANCHOR0
 591 0010 48640040 		.word	1073767496
 592              		.cfi_endproc
 593              	.LFE17:
 594              		.size	UART_WriteTxData, .-UART_WriteTxData
 595              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 596              		.align	2
 597              		.global	UART_ReadTxStatus
 598              		.thumb
 599              		.thumb_func
 600              		.type	UART_ReadTxStatus, %function
 601              	UART_ReadTxStatus:
 602              	.LFB18:
 977:.\Generated_Source\PSoC5/UART.c **** 
 978:.\Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART.c ****         }
 980:.\Generated_Source\PSoC5/UART.c ****     }
 981:.\Generated_Source\PSoC5/UART.c **** 
 982:.\Generated_Source\PSoC5/UART.c **** 
 983:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART.c ****     *
 987:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 29


 989:.\Generated_Source\PSoC5/UART.c ****     *
 990:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART.c ****     *
 993:.\Generated_Source\PSoC5/UART.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART.c ****     *
 996:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART.c ****     *
1002:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART.c ****     {
 603              		.loc 1 1004 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
1005:.\Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 608              		.loc 1 1005 0
 609 0000 014B     		ldr	r3, .L55
 610 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:.\Generated_Source\PSoC5/UART.c ****     }
 611              		.loc 1 1006 0
 612 0004 7047     		bx	lr
 613              	.L56:
 614 0006 00BF     		.align	2
 615              	.L55:
 616 0008 6B640040 		.word	1073767531
 617              		.cfi_endproc
 618              	.LFE18:
 619              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 620              		.section	.text.UART_PutChar,"ax",%progbits
 621              		.align	2
 622              		.global	UART_PutChar
 623              		.thumb
 624              		.thumb_func
 625              		.type	UART_PutChar, %function
 626              	UART_PutChar:
 627              	.LFB19:
1007:.\Generated_Source\PSoC5/UART.c **** 
1008:.\Generated_Source\PSoC5/UART.c **** 
1009:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART.c ****     *
1013:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART.c ****     *
1018:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 30


1021:.\Generated_Source\PSoC5/UART.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART.c ****     *
1024:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART.c ****     *
1034:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART.c ****     *
1037:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART.c ****     *
1040:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART.c ****     {
 628              		.loc 1 1042 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633              	.LVL33:
1043:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART.c ****         */
1048:.\Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART.c **** 
1051:.\Generated_Source\PSoC5/UART.c ****         do
1052:.\Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART.c **** 
1054:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART.c **** 
1059:.\Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:.\Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:.\Generated_Source\PSoC5/UART.c **** 
1062:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART.c ****         }
1067:.\Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/UART.c **** 
1071:.\Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 31


1072:.\Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/UART.c ****         {
1074:.\Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/UART.c ****         }
1077:.\Generated_Source\PSoC5/UART.c ****         else
1078:.\Generated_Source\PSoC5/UART.c ****         {
1079:.\Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/UART.c ****             {
1081:.\Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/UART.c ****             }
1083:.\Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/UART.c **** 
1087:.\Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART.c **** 
1092:.\Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/UART.c **** 
1094:.\Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART.c **** 
1098:.\Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/UART.c ****             {
1100:.\Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/UART.c ****             }
1103:.\Generated_Source\PSoC5/UART.c ****         }
1104:.\Generated_Source\PSoC5/UART.c **** 
1105:.\Generated_Source\PSoC5/UART.c ****     #else
1106:.\Generated_Source\PSoC5/UART.c **** 
1107:.\Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 634              		.loc 1 1107 0
 635 0000 034A     		ldr	r2, .L60
 636              	.L58:
 637              		.loc 1 1107 0 is_stmt 0 discriminator 1
 638 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 639 0004 13F0040F 		tst	r3, #4
 640 0008 FBD1     		bne	.L58
1108:.\Generated_Source\PSoC5/UART.c ****         {
1109:.\Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART.c ****         }
1111:.\Generated_Source\PSoC5/UART.c **** 
1112:.\Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 641              		.loc 1 1113 0 is_stmt 1
 642 000a 024B     		ldr	r3, .L60+4
 643 000c 1870     		strb	r0, [r3]
 644 000e 7047     		bx	lr
 645              	.L61:
 646              		.align	2
 647              	.L60:
 648 0010 6B640040 		.word	1073767531
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 32


 649 0014 48640040 		.word	1073767496
 650              		.cfi_endproc
 651              	.LFE19:
 652              		.size	UART_PutChar, .-UART_PutChar
 653              		.section	.text.UART_PutString,"ax",%progbits
 654              		.align	2
 655              		.global	UART_PutString
 656              		.thumb
 657              		.thumb_func
 658              		.type	UART_PutString, %function
 659              	UART_PutString:
 660              	.LFB20:
1114:.\Generated_Source\PSoC5/UART.c **** 
1115:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART.c ****     }
1117:.\Generated_Source\PSoC5/UART.c **** 
1118:.\Generated_Source\PSoC5/UART.c **** 
1119:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/UART.c ****     *
1123:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART.c ****     *
1126:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART.c ****     *
1129:.\Generated_Source\PSoC5/UART.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART.c ****     *
1132:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART.c ****     *
1136:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART.c ****     *
1139:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART.c ****     *
1144:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART.c ****     {
 661              		.loc 1 1146 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              	.LVL34:
 666 0000 38B5     		push	{r3, r4, r5, lr}
 667              		.cfi_def_cfa_offset 16
 668              		.cfi_offset 3, -16
 669              		.cfi_offset 4, -12
 670              		.cfi_offset 5, -8
 671              		.cfi_offset 14, -4
 672 0002 0546     		mov	r5, r0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 33


 673              	.LVL35:
1147:.\Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC5/UART.c **** 
1149:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 674              		.loc 1 1150 0
 675 0004 064B     		ldr	r3, .L67
 676 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 677 0008 2BB9     		cbnz	r3, .L66
 678 000a 38BD     		pop	{r3, r4, r5, pc}
 679              	.LVL36:
 680              	.L65:
1151:.\Generated_Source\PSoC5/UART.c ****         {
1152:.\Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:.\Generated_Source\PSoC5/UART.c ****             {
1155:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 681              		.loc 1 1155 0
 682 000c FFF7FEFF 		bl	UART_PutChar
 683              	.LVL37:
1156:.\Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 684              		.loc 1 1156 0
 685 0010 0134     		adds	r4, r4, #1
 686              	.LVL38:
 687 0012 A4B2     		uxth	r4, r4
 688              	.LVL39:
 689 0014 00E0     		b	.L63
 690              	.LVL40:
 691              	.L66:
 692 0016 0024     		movs	r4, #0
 693              	.LVL41:
 694              	.L63:
1153:.\Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 695              		.loc 1 1153 0 discriminator 1
 696 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 697 001a 0028     		cmp	r0, #0
 698 001c F6D1     		bne	.L65
 699 001e 38BD     		pop	{r3, r4, r5, pc}
 700              	.LVL42:
 701              	.L68:
 702              		.align	2
 703              	.L67:
 704 0020 00000000 		.word	.LANCHOR0
 705              		.cfi_endproc
 706              	.LFE20:
 707              		.size	UART_PutString, .-UART_PutString
 708              		.section	.text.UART_PutArray,"ax",%progbits
 709              		.align	2
 710              		.global	UART_PutArray
 711              		.thumb
 712              		.thumb_func
 713              		.type	UART_PutArray, %function
 714              	UART_PutArray:
 715              	.LFB21:
1157:.\Generated_Source\PSoC5/UART.c ****             }
1158:.\Generated_Source\PSoC5/UART.c ****         }
1159:.\Generated_Source\PSoC5/UART.c ****     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 34


1160:.\Generated_Source\PSoC5/UART.c **** 
1161:.\Generated_Source\PSoC5/UART.c **** 
1162:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART.c ****     *
1166:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/UART.c ****     *
1170:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART.c ****     *
1175:.\Generated_Source\PSoC5/UART.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART.c ****     *
1178:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART.c ****     *
1182:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART.c ****     *
1185:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART.c ****     *
1190:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART.c ****     {
 716              		.loc 1 1193 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              	.LVL43:
 721 0000 70B5     		push	{r4, r5, r6, lr}
 722              		.cfi_def_cfa_offset 16
 723              		.cfi_offset 4, -16
 724              		.cfi_offset 5, -12
 725              		.cfi_offset 6, -8
 726              		.cfi_offset 14, -4
 727 0002 0646     		mov	r6, r0
 728 0004 0D46     		mov	r5, r1
 729              	.LVL44:
1194:.\Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC5/UART.c **** 
1196:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 730              		.loc 1 1197 0
 731 0006 074B     		ldr	r3, .L74
 732 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 733 000a 33B9     		cbnz	r3, .L73
 734 000c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 35


 735              	.LVL45:
 736              	.L72:
1198:.\Generated_Source\PSoC5/UART.c ****         {
1199:.\Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:.\Generated_Source\PSoC5/UART.c ****             {
1201:.\Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 737              		.loc 1 1201 0
 738 000e 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 739 0010 FFF7FEFF 		bl	UART_PutChar
 740              	.LVL46:
1202:.\Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 741              		.loc 1 1202 0
 742 0014 0134     		adds	r4, r4, #1
 743              	.LVL47:
 744 0016 E4B2     		uxtb	r4, r4
 745              	.LVL48:
 746 0018 00E0     		b	.L70
 747              	.LVL49:
 748              	.L73:
 749 001a 0024     		movs	r4, #0
 750              	.LVL50:
 751              	.L70:
1199:.\Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 752              		.loc 1 1199 0 discriminator 1
 753 001c AC42     		cmp	r4, r5
 754 001e F6D3     		bcc	.L72
 755 0020 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL51:
 757              	.L75:
 758 0022 00BF     		.align	2
 759              	.L74:
 760 0024 00000000 		.word	.LANCHOR0
 761              		.cfi_endproc
 762              	.LFE21:
 763              		.size	UART_PutArray, .-UART_PutArray
 764              		.section	.text.UART_PutCRLF,"ax",%progbits
 765              		.align	2
 766              		.global	UART_PutCRLF
 767              		.thumb
 768              		.thumb_func
 769              		.type	UART_PutCRLF, %function
 770              	UART_PutCRLF:
 771              	.LFB22:
1203:.\Generated_Source\PSoC5/UART.c ****             }
1204:.\Generated_Source\PSoC5/UART.c ****         }
1205:.\Generated_Source\PSoC5/UART.c ****     }
1206:.\Generated_Source\PSoC5/UART.c **** 
1207:.\Generated_Source\PSoC5/UART.c **** 
1208:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART.c ****     *
1212:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART.c ****     *
1216:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 36


1217:.\Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART.c ****     *
1219:.\Generated_Source\PSoC5/UART.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART.c ****     *
1222:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART.c ****     *
1226:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART.c ****     *
1229:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART.c ****     {
 772              		.loc 1 1231 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              	.LVL52:
 777 0000 08B5     		push	{r3, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 3, -8
 780              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 781              		.loc 1 1233 0
 782 0002 064B     		ldr	r3, .L78
 783 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 784 0006 3BB1     		cbz	r3, .L76
1234:.\Generated_Source\PSoC5/UART.c ****         {
1235:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 785              		.loc 1 1235 0
 786 0008 FFF7FEFF 		bl	UART_PutChar
 787              	.LVL53:
1236:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 788              		.loc 1 1236 0
 789 000c 0D20     		movs	r0, #13
 790 000e FFF7FEFF 		bl	UART_PutChar
 791              	.LVL54:
1237:.\Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 792              		.loc 1 1237 0
 793 0012 0A20     		movs	r0, #10
 794 0014 FFF7FEFF 		bl	UART_PutChar
 795              	.LVL55:
 796              	.L76:
 797 0018 08BD     		pop	{r3, pc}
 798              	.L79:
 799 001a 00BF     		.align	2
 800              	.L78:
 801 001c 00000000 		.word	.LANCHOR0
 802              		.cfi_endproc
 803              	.LFE22:
 804              		.size	UART_PutCRLF, .-UART_PutCRLF
 805              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 806              		.align	2
 807              		.global	UART_GetTxBufferSize
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 37


 808              		.thumb
 809              		.thumb_func
 810              		.type	UART_GetTxBufferSize, %function
 811              	UART_GetTxBufferSize:
 812              	.LFB23:
1238:.\Generated_Source\PSoC5/UART.c ****         }
1239:.\Generated_Source\PSoC5/UART.c ****     }
1240:.\Generated_Source\PSoC5/UART.c **** 
1241:.\Generated_Source\PSoC5/UART.c **** 
1242:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART.c ****     *
1246:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART.c ****     *
1255:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART.c ****     *
1258:.\Generated_Source\PSoC5/UART.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART.c ****     *
1262:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART.c ****     *
1266:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART.c ****     *
1269:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART.c ****     *
1272:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART.c ****                                                             
1275:.\Generated_Source\PSoC5/UART.c ****     {
 813              		.loc 1 1275 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              		@ link register save eliminated.
1276:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART.c **** 
1278:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART.c **** 
1280:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:.\Generated_Source\PSoC5/UART.c **** 
1283:.\Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:.\Generated_Source\PSoC5/UART.c ****         {
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 38


1285:.\Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/UART.c ****         }
1287:.\Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:.\Generated_Source\PSoC5/UART.c ****         {
1289:.\Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:.\Generated_Source\PSoC5/UART.c ****         }
1291:.\Generated_Source\PSoC5/UART.c ****         else
1292:.\Generated_Source\PSoC5/UART.c ****         {
1293:.\Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:.\Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART.c ****         }
1296:.\Generated_Source\PSoC5/UART.c **** 
1297:.\Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:.\Generated_Source\PSoC5/UART.c **** 
1299:.\Generated_Source\PSoC5/UART.c ****     #else
1300:.\Generated_Source\PSoC5/UART.c **** 
1301:.\Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 818              		.loc 1 1301 0
 819 0000 074B     		ldr	r3, .L84
 820 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 821 0004 DBB2     		uxtb	r3, r3
 822              	.LVL56:
1302:.\Generated_Source\PSoC5/UART.c **** 
1303:.\Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 823              		.loc 1 1304 0
 824 0006 13F0040F 		tst	r3, #4
 825 000a 04D1     		bne	.L82
1305:.\Generated_Source\PSoC5/UART.c ****         {
1306:.\Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/UART.c ****         }
1308:.\Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 826              		.loc 1 1308 0
 827 000c 13F0020F 		tst	r3, #2
 828 0010 03D0     		beq	.L83
1309:.\Generated_Source\PSoC5/UART.c ****         {
1310:.\Generated_Source\PSoC5/UART.c ****             size = 0u;
 829              		.loc 1 1310 0
 830 0012 0020     		movs	r0, #0
 831 0014 7047     		bx	lr
 832              	.L82:
1306:.\Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
 833              		.loc 1 1306 0
 834 0016 0420     		movs	r0, #4
 835 0018 7047     		bx	lr
 836              	.L83:
1311:.\Generated_Source\PSoC5/UART.c ****         }
1312:.\Generated_Source\PSoC5/UART.c ****         else
1313:.\Generated_Source\PSoC5/UART.c ****         {
1314:.\Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART.c ****             size = 1u;
 837              		.loc 1 1315 0
 838 001a 0120     		movs	r0, #1
 839              	.LVL57:
1316:.\Generated_Source\PSoC5/UART.c ****         }
1317:.\Generated_Source\PSoC5/UART.c **** 
1318:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 39


1319:.\Generated_Source\PSoC5/UART.c **** 
1320:.\Generated_Source\PSoC5/UART.c ****     return(size);
1321:.\Generated_Source\PSoC5/UART.c ****     }
 840              		.loc 1 1321 0
 841 001c 7047     		bx	lr
 842              	.L85:
 843 001e 00BF     		.align	2
 844              	.L84:
 845 0020 6B640040 		.word	1073767531
 846              		.cfi_endproc
 847              	.LFE23:
 848              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 849              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 850              		.align	2
 851              		.global	UART_ClearTxBuffer
 852              		.thumb
 853              		.thumb_func
 854              		.type	UART_ClearTxBuffer, %function
 855              	UART_ClearTxBuffer:
 856              	.LFB24:
1322:.\Generated_Source\PSoC5/UART.c **** 
1323:.\Generated_Source\PSoC5/UART.c **** 
1324:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART.c ****     *
1328:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART.c ****     *
1331:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART.c ****     *
1334:.\Generated_Source\PSoC5/UART.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART.c ****     *
1337:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART.c ****     *
1341:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART.c ****     *
1344:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART.c ****     *
1349:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART.c ****     *
1353:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART.c ****     {
 857              		.loc 1 1355 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 40


 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861 0000 08B5     		push	{r3, lr}
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 3, -8
 864              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART.c **** 
1358:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 865              		.loc 1 1358 0
 866 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 867              	.LVL58:
1359:.\Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 868              		.loc 1 1360 0
 869 0006 064B     		ldr	r3, .L87
 870 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 871 000a 42F00102 		orr	r2, r2, #1
 872 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 873              		.loc 1 1361 0
 874 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 875 0012 02F0FE02 		and	r2, r2, #254
 876 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 877              		.loc 1 1362 0
 878 0018 FFF7FEFF 		bl	CyExitCriticalSection
 879              	.LVL59:
 880 001c 08BD     		pop	{r3, pc}
 881              	.L88:
 882 001e 00BF     		.align	2
 883              	.L87:
 884 0020 98640040 		.word	1073767576
 885              		.cfi_endproc
 886              	.LFE24:
 887              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 888              		.section	.text.UART_SendBreak,"ax",%progbits
 889              		.align	2
 890              		.global	UART_SendBreak
 891              		.thumb
 892              		.thumb_func
 893              		.type	UART_SendBreak, %function
 894              	UART_SendBreak:
 895              	.LFB25:
1363:.\Generated_Source\PSoC5/UART.c **** 
1364:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART.c **** 
1366:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:.\Generated_Source\PSoC5/UART.c **** 
1369:.\Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/UART.c **** 
1372:.\Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:.\Generated_Source\PSoC5/UART.c **** 
1375:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART.c ****     }
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 41


1377:.\Generated_Source\PSoC5/UART.c **** 
1378:.\Generated_Source\PSoC5/UART.c **** 
1379:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART.c ****     *
1383:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART.c ****     *
1386:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART.c ****     *
1398:.\Generated_Source\PSoC5/UART.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART.c ****     *
1401:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART.c ****     *
1406:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART.c ****     *
1409:.\Generated_Source\PSoC5/UART.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART.c ****     *
1432:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 42


1434:.\Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART.c ****     *
1439:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART.c ****     {
 896              		.loc 1 1441 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901              	.LVL60:
1442:.\Generated_Source\PSoC5/UART.c **** 
1443:.\Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 902              		.loc 1 1444 0
 903 0000 124B     		ldr	r3, .L99
 904 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 905 0004 0BB3     		cbz	r3, .L89
 906              	.LBB2:
1445:.\Generated_Source\PSoC5/UART.c ****         {
1446:.\Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART.c **** 
1450:.\Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART.c **** 
1452:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART.c ****             {
1455:.\Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/UART.c **** 
1461:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART.c ****                 {
1463:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/UART.c ****                 }
1465:.\Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/UART.c ****             }
1467:.\Generated_Source\PSoC5/UART.c **** 
1468:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART.c ****             {
1471:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART.c ****                 {
1473:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/UART.c ****                 }
1475:.\Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/UART.c ****             }
1477:.\Generated_Source\PSoC5/UART.c **** 
1478:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 43


1480:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART.c ****             {
1482:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART.c ****             }
1485:.\Generated_Source\PSoC5/UART.c **** 
1486:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART.c **** 
1488:.\Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART.c **** 
1490:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 907              		.loc 1 1490 0
 908 0006 08B1     		cbz	r0, .L91
 909              		.loc 1 1490 0 is_stmt 0 discriminator 1
 910 0008 0328     		cmp	r0, #3
 911 000a 0DD1     		bne	.L92
 912              	.L91:
1491:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART.c ****             {
1493:.\Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART.c **** 
1500:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 913              		.loc 1 1501 0 is_stmt 1
 914 000c 104B     		ldr	r3, .L99+4
 915 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 916 0010 0E4A     		ldr	r2, .L99
 917 0012 5170     		strb	r1, [r2, #1]
1502:.\Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 918              		.loc 1 1502 0
 919 0014 6722     		movs	r2, #103
 920 0016 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/UART.c ****                 #else
1504:.\Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART.c **** 
1508:.\Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 921              		.loc 1 1509 0
 922 0018 0022     		movs	r2, #0
 923 001a 0C33     		adds	r3, r3, #12
 924 001c 1A70     		strb	r2, [r3]
1510:.\Generated_Source\PSoC5/UART.c **** 
1511:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART.c ****                 {
1513:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 925              		.loc 1 1513 0
 926 001e 0D4A     		ldr	r2, .L99+8
 927              	.L93:
 928              		.loc 1 1513 0 is_stmt 0 discriminator 1
 929 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 44


 930              	.LVL61:
1514:.\Generated_Source\PSoC5/UART.c ****                 }
1515:.\Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 931              		.loc 1 1515 0 is_stmt 1 discriminator 1
 932 0022 13F0020F 		tst	r3, #2
 933 0026 FBD1     		bne	.L93
 934              	.LVL62:
 935              	.L92:
1516:.\Generated_Source\PSoC5/UART.c ****             }
1517:.\Generated_Source\PSoC5/UART.c **** 
1518:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 936              		.loc 1 1518 0
 937 0028 0128     		cmp	r0, #1
 938 002a 01D0     		beq	.L94
 939              		.loc 1 1518 0 is_stmt 0 discriminator 1
 940 002c 0328     		cmp	r0, #3
 941 002e 04D1     		bne	.L95
 942              	.L94:
1519:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART.c ****             {
1521:.\Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART.c ****                 {
1523:.\Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 943              		.loc 1 1523 0 is_stmt 1 discriminator 1
 944 0030 084A     		ldr	r2, .L99+8
 945              	.L96:
 946 0032 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 947              	.LVL63:
1524:.\Generated_Source\PSoC5/UART.c ****                 }
1525:.\Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 948              		.loc 1 1525 0 discriminator 1
 949 0034 13F0010F 		tst	r3, #1
 950 0038 FBD0     		beq	.L96
 951              	.LVL64:
 952              	.L95:
1526:.\Generated_Source\PSoC5/UART.c ****             }
1527:.\Generated_Source\PSoC5/UART.c **** 
1528:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 953              		.loc 1 1529 0
 954 003a 0138     		subs	r0, r0, #1
 955              	.LVL65:
 956 003c C0B2     		uxtb	r0, r0
1528:.\Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 957              		.loc 1 1528 0
 958 003e 0228     		cmp	r0, #2
 959 0040 03D8     		bhi	.L89
1530:.\Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART.c ****             {
1532:.\Generated_Source\PSoC5/UART.c **** 
1533:.\Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 960              		.loc 1 1534 0
 961 0042 024B     		ldr	r3, .L99
 962 0044 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 963 0046 024B     		ldr	r3, .L99+4
 964 0048 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 45


 965              	.L89:
 966 004a 7047     		bx	lr
 967              	.L100:
 968              		.align	2
 969              	.L99:
 970 004c 00000000 		.word	.LANCHOR0
 971 0050 3C640040 		.word	1073767484
 972 0054 6B640040 		.word	1073767531
 973              	.LBE2:
 974              		.cfi_endproc
 975              	.LFE25:
 976              		.size	UART_SendBreak, .-UART_SendBreak
 977              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 978              		.align	2
 979              		.global	UART_SetTxAddressMode
 980              		.thumb
 981              		.thumb_func
 982              		.type	UART_SetTxAddressMode, %function
 983              	UART_SetTxAddressMode:
 984              	.LFB26:
1535:.\Generated_Source\PSoC5/UART.c ****             #else
1536:.\Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART.c **** 
1539:.\Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART.c ****             }
1545:.\Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART.c ****         }
1547:.\Generated_Source\PSoC5/UART.c ****     }
1548:.\Generated_Source\PSoC5/UART.c **** 
1549:.\Generated_Source\PSoC5/UART.c **** 
1550:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/UART.c ****     *
1554:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART.c ****     *
1557:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART.c ****     *
1564:.\Generated_Source\PSoC5/UART.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART.c ****     *
1567:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART.c ****     *
1571:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 46


1572:.\Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART.c ****     {
 985              		.loc 1 1573 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990              	.LVL66:
 991 0000 7047     		bx	lr
 992              		.cfi_endproc
 993              	.LFE26:
 994              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 995              		.global	UART_initVar
 996 0002 00BF     		.bss
 997              		.set	.LANCHOR0,. + 0
 998              		.type	UART_initVar, %object
 999              		.size	UART_initVar, 1
 1000              	UART_initVar:
 1001 0000 00       		.space	1
 1002              		.type	txPeriod.4992, %object
 1003              		.size	txPeriod.4992, 1
 1004              	txPeriod.4992:
 1005 0001 00       		.space	1
 1006              		.text
 1007              	.Letext0:
 1008              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1009              		.file 3 ".\\Generated_Source\\PSoC5\\UART_IntClock.h"
 1010              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1011              		.section	.debug_info,"",%progbits
 1012              	.Ldebug_info0:
 1013 0000 FC050000 		.4byte	0x5fc
 1014 0004 0400     		.2byte	0x4
 1015 0006 00000000 		.4byte	.Ldebug_abbrev0
 1016 000a 04       		.byte	0x4
 1017 000b 01       		.uleb128 0x1
 1018 000c 1D000000 		.4byte	.LASF61
 1019 0010 01       		.byte	0x1
 1020 0011 E5000000 		.4byte	.LASF62
 1021 0015 88010000 		.4byte	.LASF63
 1022 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1023 001d 00000000 		.4byte	0
 1024 0021 00000000 		.4byte	.Ldebug_line0
 1025 0025 02       		.uleb128 0x2
 1026 0026 01       		.byte	0x1
 1027 0027 06       		.byte	0x6
 1028 0028 13010000 		.4byte	.LASF0
 1029 002c 02       		.uleb128 0x2
 1030 002d 01       		.byte	0x1
 1031 002e 08       		.byte	0x8
 1032 002f 42030000 		.4byte	.LASF1
 1033 0033 02       		.uleb128 0x2
 1034 0034 02       		.byte	0x2
 1035 0035 05       		.byte	0x5
 1036 0036 61030000 		.4byte	.LASF2
 1037 003a 02       		.uleb128 0x2
 1038 003b 02       		.byte	0x2
 1039 003c 07       		.byte	0x7
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 47


 1040 003d 52020000 		.4byte	.LASF3
 1041 0041 02       		.uleb128 0x2
 1042 0042 04       		.byte	0x4
 1043 0043 05       		.byte	0x5
 1044 0044 28010000 		.4byte	.LASF4
 1045 0048 02       		.uleb128 0x2
 1046 0049 04       		.byte	0x4
 1047 004a 07       		.byte	0x7
 1048 004b 16020000 		.4byte	.LASF5
 1049 004f 02       		.uleb128 0x2
 1050 0050 08       		.byte	0x8
 1051 0051 05       		.byte	0x5
 1052 0052 05010000 		.4byte	.LASF6
 1053 0056 02       		.uleb128 0x2
 1054 0057 08       		.byte	0x8
 1055 0058 07       		.byte	0x7
 1056 0059 AB000000 		.4byte	.LASF7
 1057 005d 03       		.uleb128 0x3
 1058 005e 04       		.byte	0x4
 1059 005f 05       		.byte	0x5
 1060 0060 696E7400 		.ascii	"int\000"
 1061 0064 02       		.uleb128 0x2
 1062 0065 04       		.byte	0x4
 1063 0066 07       		.byte	0x7
 1064 0067 E9010000 		.4byte	.LASF8
 1065 006b 04       		.uleb128 0x4
 1066 006c 4E010000 		.4byte	.LASF9
 1067 0070 02       		.byte	0x2
 1068 0071 B4       		.byte	0xb4
 1069 0072 2C000000 		.4byte	0x2c
 1070 0076 04       		.uleb128 0x4
 1071 0077 00000000 		.4byte	.LASF10
 1072 007b 02       		.byte	0x2
 1073 007c B5       		.byte	0xb5
 1074 007d 3A000000 		.4byte	0x3a
 1075 0081 02       		.uleb128 0x2
 1076 0082 04       		.byte	0x4
 1077 0083 04       		.byte	0x4
 1078 0084 0C030000 		.4byte	.LASF11
 1079 0088 02       		.uleb128 0x2
 1080 0089 08       		.byte	0x8
 1081 008a 04       		.byte	0x4
 1082 008b 6D010000 		.4byte	.LASF12
 1083 008f 04       		.uleb128 0x4
 1084 0090 AE030000 		.4byte	.LASF13
 1085 0094 02       		.byte	0x2
 1086 0095 C5       		.byte	0xc5
 1087 0096 9A000000 		.4byte	0x9a
 1088 009a 02       		.uleb128 0x2
 1089 009b 01       		.byte	0x1
 1090 009c 08       		.byte	0x8
 1091 009d A9030000 		.4byte	.LASF14
 1092 00a1 05       		.uleb128 0x5
 1093 00a2 27030000 		.4byte	.LASF15
 1094 00a6 02       		.byte	0x2
 1095 00a7 5E01     		.2byte	0x15e
 1096 00a9 AD000000 		.4byte	0xad
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 48


 1097 00ad 06       		.uleb128 0x6
 1098 00ae 6B000000 		.4byte	0x6b
 1099 00b2 02       		.uleb128 0x2
 1100 00b3 04       		.byte	0x4
 1101 00b4 07       		.byte	0x7
 1102 00b5 B9020000 		.4byte	.LASF16
 1103 00b9 07       		.uleb128 0x7
 1104 00ba CA010000 		.4byte	.LASF64
 1105 00be 01       		.byte	0x1
 1106 00bf 6A       		.byte	0x6a
 1107 00c0 00000000 		.4byte	.LFB1
 1108 00c4 28000000 		.4byte	.LFE1-.LFB1
 1109 00c8 01       		.uleb128 0x1
 1110 00c9 9C       		.byte	0x9c
 1111 00ca 08       		.uleb128 0x8
 1112 00cb 8B030000 		.4byte	.LASF17
 1113 00cf 01       		.byte	0x1
 1114 00d0 B7       		.byte	0xb7
 1115 00d1 00000000 		.4byte	.LFB2
 1116 00d5 38000000 		.4byte	.LFE2-.LFB2
 1117 00d9 01       		.uleb128 0x1
 1118 00da 9C       		.byte	0x9c
 1119 00db 11010000 		.4byte	0x111
 1120 00df 09       		.uleb128 0x9
 1121 00e0 D9030000 		.4byte	.LASF20
 1122 00e4 01       		.byte	0x1
 1123 00e5 B9       		.byte	0xb9
 1124 00e6 6B000000 		.4byte	0x6b
 1125 00ea 00000000 		.4byte	.LLST0
 1126 00ee 0A       		.uleb128 0xa
 1127 00ef 06000000 		.4byte	.LVL0
 1128 00f3 D5050000 		.4byte	0x5d5
 1129 00f7 0A       		.uleb128 0xa
 1130 00f8 2A000000 		.4byte	.LVL2
 1131 00fc E0050000 		.4byte	0x5e0
 1132 0100 0B       		.uleb128 0xb
 1133 0101 30000000 		.4byte	.LVL3
 1134 0105 E7050000 		.4byte	0x5e7
 1135 0109 0C       		.uleb128 0xc
 1136 010a 01       		.uleb128 0x1
 1137 010b 50       		.byte	0x50
 1138 010c 02       		.uleb128 0x2
 1139 010d 74       		.byte	0x74
 1140 010e 00       		.sleb128 0
 1141 010f 00       		.byte	0
 1142 0110 00       		.byte	0
 1143 0111 08       		.uleb128 0x8
 1144 0112 C2000000 		.4byte	.LASF18
 1145 0116 01       		.byte	0x1
 1146 0117 4C       		.byte	0x4c
 1147 0118 00000000 		.4byte	.LFB0
 1148 011c 1C000000 		.4byte	.LFE0-.LFB0
 1149 0120 01       		.uleb128 0x1
 1150 0121 9C       		.byte	0x9c
 1151 0122 39010000 		.4byte	0x139
 1152 0126 0A       		.uleb128 0xa
 1153 0127 0C000000 		.4byte	.LVL5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 49


 1154 012b B9000000 		.4byte	0xb9
 1155 012f 0A       		.uleb128 0xa
 1156 0130 16000000 		.4byte	.LVL6
 1157 0134 CA000000 		.4byte	0xca
 1158 0138 00       		.byte	0
 1159 0139 08       		.uleb128 0x8
 1160 013a 13040000 		.4byte	.LASF19
 1161 013e 01       		.byte	0x1
 1162 013f F0       		.byte	0xf0
 1163 0140 00000000 		.4byte	.LFB3
 1164 0144 3C000000 		.4byte	.LFE3-.LFB3
 1165 0148 01       		.uleb128 0x1
 1166 0149 9C       		.byte	0x9c
 1167 014a 80010000 		.4byte	0x180
 1168 014e 09       		.uleb128 0x9
 1169 014f D9030000 		.4byte	.LASF20
 1170 0153 01       		.byte	0x1
 1171 0154 F2       		.byte	0xf2
 1172 0155 6B000000 		.4byte	0x6b
 1173 0159 1E000000 		.4byte	.LLST1
 1174 015d 0A       		.uleb128 0xa
 1175 015e 06000000 		.4byte	.LVL7
 1176 0162 D5050000 		.4byte	0x5d5
 1177 0166 0A       		.uleb128 0xa
 1178 0167 16000000 		.4byte	.LVL9
 1179 016b F8050000 		.4byte	0x5f8
 1180 016f 0B       		.uleb128 0xb
 1181 0170 30000000 		.4byte	.LVL10
 1182 0174 E7050000 		.4byte	0x5e7
 1183 0178 0C       		.uleb128 0xc
 1184 0179 01       		.uleb128 0x1
 1185 017a 50       		.byte	0x50
 1186 017b 02       		.uleb128 0x2
 1187 017c 74       		.byte	0x74
 1188 017d 00       		.sleb128 0
 1189 017e 00       		.byte	0
 1190 017f 00       		.byte	0
 1191 0180 0D       		.uleb128 0xd
 1192 0181 54010000 		.4byte	.LASF43
 1193 0185 01       		.byte	0x1
 1194 0186 2701     		.2byte	0x127
 1195 0188 6B000000 		.4byte	0x6b
 1196 018c 00000000 		.4byte	.LFB4
 1197 0190 04000000 		.4byte	.LFE4-.LFB4
 1198 0194 01       		.uleb128 0x1
 1199 0195 9C       		.byte	0x9c
 1200 0196 0E       		.uleb128 0xe
 1201 0197 2C040000 		.4byte	.LASF21
 1202 019b 01       		.byte	0x1
 1203 019c 3F01     		.2byte	0x13f
 1204 019e 00000000 		.4byte	.LFB5
 1205 01a2 02000000 		.4byte	.LFE5-.LFB5
 1206 01a6 01       		.uleb128 0x1
 1207 01a7 9C       		.byte	0x9c
 1208 01a8 BB010000 		.4byte	0x1bb
 1209 01ac 0F       		.uleb128 0xf
 1210 01ad 80010000 		.4byte	.LASF23
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 50


 1211 01b1 01       		.byte	0x1
 1212 01b2 3F01     		.2byte	0x13f
 1213 01b4 6B000000 		.4byte	0x6b
 1214 01b8 01       		.uleb128 0x1
 1215 01b9 50       		.byte	0x50
 1216 01ba 00       		.byte	0
 1217 01bb 0E       		.uleb128 0xe
 1218 01bc B4030000 		.4byte	.LASF22
 1219 01c0 01       		.byte	0x1
 1220 01c1 6701     		.2byte	0x167
 1221 01c3 00000000 		.4byte	.LFB6
 1222 01c7 0C000000 		.4byte	.LFE6-.LFB6
 1223 01cb 01       		.uleb128 0x1
 1224 01cc 9C       		.byte	0x9c
 1225 01cd E0010000 		.4byte	0x1e0
 1226 01d1 0F       		.uleb128 0xf
 1227 01d2 6E020000 		.4byte	.LASF24
 1228 01d6 01       		.byte	0x1
 1229 01d7 6701     		.2byte	0x167
 1230 01d9 6B000000 		.4byte	0x6b
 1231 01dd 01       		.uleb128 0x1
 1232 01de 50       		.byte	0x50
 1233 01df 00       		.byte	0
 1234 01e0 10       		.uleb128 0x10
 1235 01e1 3E010000 		.4byte	.LASF26
 1236 01e5 01       		.byte	0x1
 1237 01e6 8801     		.2byte	0x188
 1238 01e8 6B000000 		.4byte	0x6b
 1239 01ec 00000000 		.4byte	.LFB7
 1240 01f0 0C000000 		.4byte	.LFE7-.LFB7
 1241 01f4 01       		.uleb128 0x1
 1242 01f5 9C       		.byte	0x9c
 1243 01f6 09020000 		.4byte	0x209
 1244 01fa 11       		.uleb128 0x11
 1245 01fb 84030000 		.4byte	.LASF25
 1246 01ff 01       		.byte	0x1
 1247 0200 8A01     		.2byte	0x18a
 1248 0202 6B000000 		.4byte	0x6b
 1249 0206 01       		.uleb128 0x1
 1250 0207 50       		.byte	0x50
 1251 0208 00       		.byte	0
 1252 0209 10       		.uleb128 0x10
 1253 020a 97030000 		.4byte	.LASF27
 1254 020e 01       		.byte	0x1
 1255 020f E501     		.2byte	0x1e5
 1256 0211 6B000000 		.4byte	0x6b
 1257 0215 00000000 		.4byte	.LFB8
 1258 0219 10000000 		.4byte	.LFE8-.LFB8
 1259 021d 01       		.uleb128 0x1
 1260 021e 9C       		.byte	0x9c
 1261 021f 34020000 		.4byte	0x234
 1262 0223 12       		.uleb128 0x12
 1263 0224 0C040000 		.4byte	.LASF28
 1264 0228 01       		.byte	0x1
 1265 0229 E701     		.2byte	0x1e7
 1266 022b 6B000000 		.4byte	0x6b
 1267 022f 3C000000 		.4byte	.LLST2
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 51


 1268 0233 00       		.byte	0
 1269 0234 10       		.uleb128 0x10
 1270 0235 CC030000 		.4byte	.LASF29
 1271 0239 01       		.byte	0x1
 1272 023a 1402     		.2byte	0x214
 1273 023c 6B000000 		.4byte	0x6b
 1274 0240 00000000 		.4byte	.LFB9
 1275 0244 2C000000 		.4byte	.LFE9-.LFB9
 1276 0248 01       		.uleb128 0x1
 1277 0249 9C       		.byte	0x9c
 1278 024a 6D020000 		.4byte	0x26d
 1279 024e 12       		.uleb128 0x12
 1280 024f 84030000 		.4byte	.LASF25
 1281 0253 01       		.byte	0x1
 1282 0254 1602     		.2byte	0x216
 1283 0256 6B000000 		.4byte	0x6b
 1284 025a 54000000 		.4byte	.LLST3
 1285 025e 11       		.uleb128 0x11
 1286 025f F0020000 		.4byte	.LASF30
 1287 0263 01       		.byte	0x1
 1288 0264 1702     		.2byte	0x217
 1289 0266 6B000000 		.4byte	0x6b
 1290 026a 01       		.uleb128 0x1
 1291 026b 53       		.byte	0x53
 1292 026c 00       		.byte	0
 1293 026d 10       		.uleb128 0x10
 1294 026e DC010000 		.4byte	.LASF31
 1295 0272 01       		.byte	0x1
 1296 0273 7A02     		.2byte	0x27a
 1297 0275 76000000 		.4byte	0x76
 1298 0279 00000000 		.4byte	.LFB10
 1299 027d 12000000 		.4byte	.LFE10-.LFB10
 1300 0281 01       		.uleb128 0x1
 1301 0282 9C       		.byte	0x9c
 1302 0283 9A020000 		.4byte	0x29a
 1303 0287 0A       		.uleb128 0xa
 1304 0288 06000000 		.4byte	.LVL23
 1305 028c 09020000 		.4byte	0x209
 1306 0290 0A       		.uleb128 0xa
 1307 0291 0C000000 		.4byte	.LVL24
 1308 0295 E0010000 		.4byte	0x1e0
 1309 0299 00       		.byte	0
 1310 029a 10       		.uleb128 0x10
 1311 029b F7030000 		.4byte	.LASF32
 1312 029f 01       		.byte	0x1
 1313 02a0 AB02     		.2byte	0x2ab
 1314 02a2 6B000000 		.4byte	0x6b
 1315 02a6 00000000 		.4byte	.LFB11
 1316 02aa 18000000 		.4byte	.LFE11-.LFB11
 1317 02ae 01       		.uleb128 0x1
 1318 02af 9C       		.byte	0x9c
 1319 02b0 C3020000 		.4byte	0x2c3
 1320 02b4 11       		.uleb128 0x11
 1321 02b5 4D020000 		.4byte	.LASF33
 1322 02b9 01       		.byte	0x1
 1323 02ba AE02     		.2byte	0x2ae
 1324 02bc 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 52


 1325 02c0 01       		.uleb128 0x1
 1326 02c1 50       		.byte	0x50
 1327 02c2 00       		.byte	0
 1328 02c3 0E       		.uleb128 0xe
 1329 02c4 46040000 		.4byte	.LASF34
 1330 02c8 01       		.byte	0x1
 1331 02c9 F502     		.2byte	0x2f5
 1332 02cb 00000000 		.4byte	.LFB12
 1333 02cf 24000000 		.4byte	.LFE12-.LFB12
 1334 02d3 01       		.uleb128 0x1
 1335 02d4 9C       		.byte	0x9c
 1336 02d5 FC020000 		.4byte	0x2fc
 1337 02d9 12       		.uleb128 0x12
 1338 02da D9030000 		.4byte	.LASF20
 1339 02de 01       		.byte	0x1
 1340 02df F702     		.2byte	0x2f7
 1341 02e1 6B000000 		.4byte	0x6b
 1342 02e5 8A000000 		.4byte	.LLST4
 1343 02e9 0A       		.uleb128 0xa
 1344 02ea 06000000 		.4byte	.LVL26
 1345 02ee D5050000 		.4byte	0x5d5
 1346 02f2 0A       		.uleb128 0xa
 1347 02f3 1C000000 		.4byte	.LVL27
 1348 02f7 E7050000 		.4byte	0x5e7
 1349 02fb 00       		.byte	0
 1350 02fc 0E       		.uleb128 0xe
 1351 02fd 2C030000 		.4byte	.LASF35
 1352 0301 01       		.byte	0x1
 1353 0302 2D03     		.2byte	0x32d
 1354 0304 00000000 		.4byte	.LFB13
 1355 0308 02000000 		.4byte	.LFE13-.LFB13
 1356 030c 01       		.uleb128 0x1
 1357 030d 9C       		.byte	0x9c
 1358 030e 21030000 		.4byte	0x321
 1359 0312 0F       		.uleb128 0xf
 1360 0313 74010000 		.4byte	.LASF36
 1361 0317 01       		.byte	0x1
 1362 0318 2D03     		.2byte	0x32d
 1363 031a 6B000000 		.4byte	0x6b
 1364 031e 01       		.uleb128 0x1
 1365 031f 50       		.byte	0x50
 1366 0320 00       		.byte	0
 1367 0321 0E       		.uleb128 0xe
 1368 0322 CA020000 		.4byte	.LASF37
 1369 0326 01       		.byte	0x1
 1370 0327 5903     		.2byte	0x359
 1371 0329 00000000 		.4byte	.LFB14
 1372 032d 0C000000 		.4byte	.LFE14-.LFB14
 1373 0331 01       		.uleb128 0x1
 1374 0332 9C       		.byte	0x9c
 1375 0333 46030000 		.4byte	0x346
 1376 0337 0F       		.uleb128 0xf
 1377 0338 C2020000 		.4byte	.LASF38
 1378 033c 01       		.byte	0x1
 1379 033d 5903     		.2byte	0x359
 1380 033f 6B000000 		.4byte	0x6b
 1381 0343 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 53


 1382 0344 50       		.byte	0x50
 1383 0345 00       		.byte	0
 1384 0346 0E       		.uleb128 0xe
 1385 0347 DD020000 		.4byte	.LASF39
 1386 034b 01       		.byte	0x1
 1387 034c 6D03     		.2byte	0x36d
 1388 034e 00000000 		.4byte	.LFB15
 1389 0352 0C000000 		.4byte	.LFE15-.LFB15
 1390 0356 01       		.uleb128 0x1
 1391 0357 9C       		.byte	0x9c
 1392 0358 6B030000 		.4byte	0x36b
 1393 035c 0F       		.uleb128 0xf
 1394 035d C2020000 		.4byte	.LASF38
 1395 0361 01       		.byte	0x1
 1396 0362 6D03     		.2byte	0x36d
 1397 0364 6B000000 		.4byte	0x6b
 1398 0368 01       		.uleb128 0x1
 1399 0369 50       		.byte	0x50
 1400 036a 00       		.byte	0
 1401 036b 0E       		.uleb128 0xe
 1402 036c CD000000 		.4byte	.LASF40
 1403 0370 01       		.byte	0x1
 1404 0371 8C03     		.2byte	0x38c
 1405 0373 00000000 		.4byte	.LFB16
 1406 0377 0C000000 		.4byte	.LFE16-.LFB16
 1407 037b 01       		.uleb128 0x1
 1408 037c 9C       		.byte	0x9c
 1409 037d 90030000 		.4byte	0x390
 1410 0381 0F       		.uleb128 0xf
 1411 0382 6E020000 		.4byte	.LASF24
 1412 0386 01       		.byte	0x1
 1413 0387 8C03     		.2byte	0x38c
 1414 0389 6B000000 		.4byte	0x6b
 1415 038d 01       		.uleb128 0x1
 1416 038e 50       		.byte	0x50
 1417 038f 00       		.byte	0
 1418 0390 0E       		.uleb128 0xe
 1419 0391 50030000 		.4byte	.LASF41
 1420 0395 01       		.byte	0x1
 1421 0396 AE03     		.2byte	0x3ae
 1422 0398 00000000 		.4byte	.LFB17
 1423 039c 14000000 		.4byte	.LFE17-.LFB17
 1424 03a0 01       		.uleb128 0x1
 1425 03a1 9C       		.byte	0x9c
 1426 03a2 B5030000 		.4byte	0x3b5
 1427 03a6 0F       		.uleb128 0xf
 1428 03a7 99000000 		.4byte	.LASF42
 1429 03ab 01       		.byte	0x1
 1430 03ac AE03     		.2byte	0x3ae
 1431 03ae 6B000000 		.4byte	0x6b
 1432 03b2 01       		.uleb128 0x1
 1433 03b3 50       		.byte	0x50
 1434 03b4 00       		.byte	0
 1435 03b5 0D       		.uleb128 0xd
 1436 03b6 8B020000 		.4byte	.LASF44
 1437 03ba 01       		.byte	0x1
 1438 03bb EB03     		.2byte	0x3eb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 54


 1439 03bd 6B000000 		.4byte	0x6b
 1440 03c1 00000000 		.4byte	.LFB18
 1441 03c5 0C000000 		.4byte	.LFE18-.LFB18
 1442 03c9 01       		.uleb128 0x1
 1443 03ca 9C       		.byte	0x9c
 1444 03cb 0E       		.uleb128 0xe
 1445 03cc 31010000 		.4byte	.LASF45
 1446 03d0 01       		.byte	0x1
 1447 03d1 1104     		.2byte	0x411
 1448 03d3 00000000 		.4byte	.LFB19
 1449 03d7 18000000 		.4byte	.LFE19-.LFB19
 1450 03db 01       		.uleb128 0x1
 1451 03dc 9C       		.byte	0x9c
 1452 03dd F0030000 		.4byte	0x3f0
 1453 03e1 0F       		.uleb128 0xf
 1454 03e2 99000000 		.4byte	.LASF42
 1455 03e6 01       		.byte	0x1
 1456 03e7 1104     		.2byte	0x411
 1457 03e9 6B000000 		.4byte	0x6b
 1458 03ed 01       		.uleb128 0x1
 1459 03ee 50       		.byte	0x50
 1460 03ef 00       		.byte	0
 1461 03f0 0E       		.uleb128 0xe
 1462 03f1 1D040000 		.4byte	.LASF46
 1463 03f5 01       		.byte	0x1
 1464 03f6 7904     		.2byte	0x479
 1465 03f8 00000000 		.4byte	.LFB20
 1466 03fc 24000000 		.4byte	.LFE20-.LFB20
 1467 0400 01       		.uleb128 0x1
 1468 0401 9C       		.byte	0x9c
 1469 0402 30040000 		.4byte	0x430
 1470 0406 13       		.uleb128 0x13
 1471 0407 A4000000 		.4byte	.LASF47
 1472 040b 01       		.byte	0x1
 1473 040c 7904     		.2byte	0x479
 1474 040e 30040000 		.4byte	0x430
 1475 0412 9D000000 		.4byte	.LLST5
 1476 0416 12       		.uleb128 0x12
 1477 0417 65020000 		.4byte	.LASF48
 1478 041b 01       		.byte	0x1
 1479 041c 7B04     		.2byte	0x47b
 1480 041e 76000000 		.4byte	0x76
 1481 0422 DF000000 		.4byte	.LLST6
 1482 0426 0A       		.uleb128 0xa
 1483 0427 10000000 		.4byte	.LVL37
 1484 042b CB030000 		.4byte	0x3cb
 1485 042f 00       		.byte	0
 1486 0430 14       		.uleb128 0x14
 1487 0431 04       		.byte	0x4
 1488 0432 36040000 		.4byte	0x436
 1489 0436 15       		.uleb128 0x15
 1490 0437 8F000000 		.4byte	0x8f
 1491 043b 0E       		.uleb128 0xe
 1492 043c 28020000 		.4byte	.LASF49
 1493 0440 01       		.byte	0x1
 1494 0441 A704     		.2byte	0x4a7
 1495 0443 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 55


 1496 0447 28000000 		.4byte	.LFE21-.LFB21
 1497 044b 01       		.uleb128 0x1
 1498 044c 9C       		.byte	0x9c
 1499 044d 8B040000 		.4byte	0x48b
 1500 0451 13       		.uleb128 0x13
 1501 0452 A4000000 		.4byte	.LASF47
 1502 0456 01       		.byte	0x1
 1503 0457 A704     		.2byte	0x4a7
 1504 0459 8B040000 		.4byte	0x48b
 1505 045d 2D010000 		.4byte	.LLST7
 1506 0461 13       		.uleb128 0x13
 1507 0462 7A030000 		.4byte	.LASF50
 1508 0466 01       		.byte	0x1
 1509 0467 A704     		.2byte	0x4a7
 1510 0469 6B000000 		.4byte	0x6b
 1511 046d 6F010000 		.4byte	.LLST8
 1512 0471 12       		.uleb128 0x12
 1513 0472 65020000 		.4byte	.LASF48
 1514 0476 01       		.byte	0x1
 1515 0477 AA04     		.2byte	0x4aa
 1516 0479 6B000000 		.4byte	0x6b
 1517 047d A9010000 		.4byte	.LLST9
 1518 0481 0A       		.uleb128 0xa
 1519 0482 14000000 		.4byte	.LVL46
 1520 0486 CB030000 		.4byte	0x3cb
 1521 048a 00       		.byte	0
 1522 048b 14       		.uleb128 0x14
 1523 048c 04       		.byte	0x4
 1524 048d 91040000 		.4byte	0x491
 1525 0491 15       		.uleb128 0x15
 1526 0492 6B000000 		.4byte	0x6b
 1527 0496 0E       		.uleb128 0xe
 1528 0497 09020000 		.4byte	.LASF51
 1529 049b 01       		.byte	0x1
 1530 049c CE04     		.2byte	0x4ce
 1531 049e 00000000 		.4byte	.LFB22
 1532 04a2 20000000 		.4byte	.LFE22-.LFB22
 1533 04a6 01       		.uleb128 0x1
 1534 04a7 9C       		.byte	0x9c
 1535 04a8 E8040000 		.4byte	0x4e8
 1536 04ac 13       		.uleb128 0x13
 1537 04ad 99000000 		.4byte	.LASF42
 1538 04b1 01       		.byte	0x1
 1539 04b2 CE04     		.2byte	0x4ce
 1540 04b4 6B000000 		.4byte	0x6b
 1541 04b8 F7010000 		.4byte	.LLST10
 1542 04bc 0A       		.uleb128 0xa
 1543 04bd 0C000000 		.4byte	.LVL53
 1544 04c1 CB030000 		.4byte	0x3cb
 1545 04c5 16       		.uleb128 0x16
 1546 04c6 12000000 		.4byte	.LVL54
 1547 04ca CB030000 		.4byte	0x3cb
 1548 04ce D8040000 		.4byte	0x4d8
 1549 04d2 0C       		.uleb128 0xc
 1550 04d3 01       		.uleb128 0x1
 1551 04d4 50       		.byte	0x50
 1552 04d5 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 56


 1553 04d6 3D       		.byte	0x3d
 1554 04d7 00       		.byte	0
 1555 04d8 0B       		.uleb128 0xb
 1556 04d9 18000000 		.4byte	.LVL55
 1557 04dd CB030000 		.4byte	0x3cb
 1558 04e1 0C       		.uleb128 0xc
 1559 04e2 01       		.uleb128 0x1
 1560 04e3 50       		.byte	0x50
 1561 04e4 01       		.uleb128 0x1
 1562 04e5 3A       		.byte	0x3a
 1563 04e6 00       		.byte	0
 1564 04e7 00       		.byte	0
 1565 04e8 10       		.uleb128 0x10
 1566 04e9 12030000 		.4byte	.LASF52
 1567 04ed 01       		.byte	0x1
 1568 04ee F904     		.2byte	0x4f9
 1569 04f0 6B000000 		.4byte	0x6b
 1570 04f4 00000000 		.4byte	.LFB23
 1571 04f8 24000000 		.4byte	.LFE23-.LFB23
 1572 04fc 01       		.uleb128 0x1
 1573 04fd 9C       		.byte	0x9c
 1574 04fe 13050000 		.4byte	0x513
 1575 0502 12       		.uleb128 0x12
 1576 0503 4D020000 		.4byte	.LASF33
 1577 0507 01       		.byte	0x1
 1578 0508 FC04     		.2byte	0x4fc
 1579 050a 6B000000 		.4byte	0x6b
 1580 050e 18020000 		.4byte	.LLST11
 1581 0512 00       		.byte	0
 1582 0513 0E       		.uleb128 0xe
 1583 0514 F6010000 		.4byte	.LASF53
 1584 0518 01       		.byte	0x1
 1585 0519 4A05     		.2byte	0x54a
 1586 051b 00000000 		.4byte	.LFB24
 1587 051f 24000000 		.4byte	.LFE24-.LFB24
 1588 0523 01       		.uleb128 0x1
 1589 0524 9C       		.byte	0x9c
 1590 0525 4C050000 		.4byte	0x54c
 1591 0529 12       		.uleb128 0x12
 1592 052a D9030000 		.4byte	.LASF20
 1593 052e 01       		.byte	0x1
 1594 052f 4C05     		.2byte	0x54c
 1595 0531 6B000000 		.4byte	0x6b
 1596 0535 36020000 		.4byte	.LLST12
 1597 0539 0A       		.uleb128 0xa
 1598 053a 06000000 		.4byte	.LVL58
 1599 053e D5050000 		.4byte	0x5d5
 1600 0542 0A       		.uleb128 0xa
 1601 0543 1C000000 		.4byte	.LVL59
 1602 0547 E7050000 		.4byte	0x5e7
 1603 054b 00       		.byte	0
 1604 054c 0E       		.uleb128 0xe
 1605 054d 6B030000 		.4byte	.LASF54
 1606 0551 01       		.byte	0x1
 1607 0552 A005     		.2byte	0x5a0
 1608 0554 00000000 		.4byte	.LFB25
 1609 0558 58000000 		.4byte	.LFE25-.LFB25
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 57


 1610 055c 01       		.uleb128 0x1
 1611 055d 9C       		.byte	0x9c
 1612 055e 9F050000 		.4byte	0x59f
 1613 0562 13       		.uleb128 0x13
 1614 0563 D4010000 		.4byte	.LASF55
 1615 0567 01       		.byte	0x1
 1616 0568 A005     		.2byte	0x5a0
 1617 056a 6B000000 		.4byte	0x6b
 1618 056e 49020000 		.4byte	.LLST13
 1619 0572 17       		.uleb128 0x17
 1620 0573 06000000 		.4byte	.LBB2
 1621 0577 52000000 		.4byte	.LBE2-.LBB2
 1622 057b 12       		.uleb128 0x12
 1623 057c B1020000 		.4byte	.LASF56
 1624 0580 01       		.byte	0x1
 1625 0581 A805     		.2byte	0x5a8
 1626 0583 6B000000 		.4byte	0x6b
 1627 0587 6A020000 		.4byte	.LLST14
 1628 058b 11       		.uleb128 0x11
 1629 058c 1F010000 		.4byte	.LASF57
 1630 0590 01       		.byte	0x1
 1631 0591 D005     		.2byte	0x5d0
 1632 0593 6B000000 		.4byte	0x6b
 1633 0597 05       		.uleb128 0x5
 1634 0598 03       		.byte	0x3
 1635 0599 01000000 		.4byte	txPeriod.4992
 1636 059d 00       		.byte	0
 1637 059e 00       		.byte	0
 1638 059f 0E       		.uleb128 0xe
 1639 05a0 75020000 		.4byte	.LASF58
 1640 05a4 01       		.byte	0x1
 1641 05a5 2406     		.2byte	0x624
 1642 05a7 00000000 		.4byte	.LFB26
 1643 05ab 02000000 		.4byte	.LFE26-.LFB26
 1644 05af 01       		.uleb128 0x1
 1645 05b0 9C       		.byte	0x9c
 1646 05b1 C4050000 		.4byte	0x5c4
 1647 05b5 0F       		.uleb128 0xf
 1648 05b6 74010000 		.4byte	.LASF36
 1649 05ba 01       		.byte	0x1
 1650 05bb 2406     		.2byte	0x624
 1651 05bd 6B000000 		.4byte	0x6b
 1652 05c1 01       		.uleb128 0x1
 1653 05c2 50       		.byte	0x50
 1654 05c3 00       		.byte	0
 1655 05c4 18       		.uleb128 0x18
 1656 05c5 EA030000 		.4byte	.LASF65
 1657 05c9 01       		.byte	0x1
 1658 05ca 1B       		.byte	0x1b
 1659 05cb 6B000000 		.4byte	0x6b
 1660 05cf 05       		.uleb128 0x5
 1661 05d0 03       		.byte	0x3
 1662 05d1 00000000 		.4byte	UART_initVar
 1663 05d5 19       		.uleb128 0x19
 1664 05d6 36020000 		.4byte	.LASF66
 1665 05da 04       		.byte	0x4
 1666 05db 7E       		.byte	0x7e
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 58


 1667 05dc 6B000000 		.4byte	0x6b
 1668 05e0 1A       		.uleb128 0x1a
 1669 05e1 9D020000 		.4byte	.LASF59
 1670 05e5 03       		.byte	0x3
 1671 05e6 27       		.byte	0x27
 1672 05e7 1B       		.uleb128 0x1b
 1673 05e8 07000000 		.4byte	.LASF67
 1674 05ec 04       		.byte	0x4
 1675 05ed 7F       		.byte	0x7f
 1676 05ee F8050000 		.4byte	0x5f8
 1677 05f2 1C       		.uleb128 0x1c
 1678 05f3 6B000000 		.4byte	0x6b
 1679 05f7 00       		.byte	0
 1680 05f8 1A       		.uleb128 0x1a
 1681 05f9 F9020000 		.4byte	.LASF60
 1682 05fd 03       		.byte	0x3
 1683 05fe 28       		.byte	0x28
 1684 05ff 00       		.byte	0
 1685              		.section	.debug_abbrev,"",%progbits
 1686              	.Ldebug_abbrev0:
 1687 0000 01       		.uleb128 0x1
 1688 0001 11       		.uleb128 0x11
 1689 0002 01       		.byte	0x1
 1690 0003 25       		.uleb128 0x25
 1691 0004 0E       		.uleb128 0xe
 1692 0005 13       		.uleb128 0x13
 1693 0006 0B       		.uleb128 0xb
 1694 0007 03       		.uleb128 0x3
 1695 0008 0E       		.uleb128 0xe
 1696 0009 1B       		.uleb128 0x1b
 1697 000a 0E       		.uleb128 0xe
 1698 000b 55       		.uleb128 0x55
 1699 000c 17       		.uleb128 0x17
 1700 000d 11       		.uleb128 0x11
 1701 000e 01       		.uleb128 0x1
 1702 000f 10       		.uleb128 0x10
 1703 0010 17       		.uleb128 0x17
 1704 0011 00       		.byte	0
 1705 0012 00       		.byte	0
 1706 0013 02       		.uleb128 0x2
 1707 0014 24       		.uleb128 0x24
 1708 0015 00       		.byte	0
 1709 0016 0B       		.uleb128 0xb
 1710 0017 0B       		.uleb128 0xb
 1711 0018 3E       		.uleb128 0x3e
 1712 0019 0B       		.uleb128 0xb
 1713 001a 03       		.uleb128 0x3
 1714 001b 0E       		.uleb128 0xe
 1715 001c 00       		.byte	0
 1716 001d 00       		.byte	0
 1717 001e 03       		.uleb128 0x3
 1718 001f 24       		.uleb128 0x24
 1719 0020 00       		.byte	0
 1720 0021 0B       		.uleb128 0xb
 1721 0022 0B       		.uleb128 0xb
 1722 0023 3E       		.uleb128 0x3e
 1723 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 59


 1724 0025 03       		.uleb128 0x3
 1725 0026 08       		.uleb128 0x8
 1726 0027 00       		.byte	0
 1727 0028 00       		.byte	0
 1728 0029 04       		.uleb128 0x4
 1729 002a 16       		.uleb128 0x16
 1730 002b 00       		.byte	0
 1731 002c 03       		.uleb128 0x3
 1732 002d 0E       		.uleb128 0xe
 1733 002e 3A       		.uleb128 0x3a
 1734 002f 0B       		.uleb128 0xb
 1735 0030 3B       		.uleb128 0x3b
 1736 0031 0B       		.uleb128 0xb
 1737 0032 49       		.uleb128 0x49
 1738 0033 13       		.uleb128 0x13
 1739 0034 00       		.byte	0
 1740 0035 00       		.byte	0
 1741 0036 05       		.uleb128 0x5
 1742 0037 16       		.uleb128 0x16
 1743 0038 00       		.byte	0
 1744 0039 03       		.uleb128 0x3
 1745 003a 0E       		.uleb128 0xe
 1746 003b 3A       		.uleb128 0x3a
 1747 003c 0B       		.uleb128 0xb
 1748 003d 3B       		.uleb128 0x3b
 1749 003e 05       		.uleb128 0x5
 1750 003f 49       		.uleb128 0x49
 1751 0040 13       		.uleb128 0x13
 1752 0041 00       		.byte	0
 1753 0042 00       		.byte	0
 1754 0043 06       		.uleb128 0x6
 1755 0044 35       		.uleb128 0x35
 1756 0045 00       		.byte	0
 1757 0046 49       		.uleb128 0x49
 1758 0047 13       		.uleb128 0x13
 1759 0048 00       		.byte	0
 1760 0049 00       		.byte	0
 1761 004a 07       		.uleb128 0x7
 1762 004b 2E       		.uleb128 0x2e
 1763 004c 00       		.byte	0
 1764 004d 3F       		.uleb128 0x3f
 1765 004e 19       		.uleb128 0x19
 1766 004f 03       		.uleb128 0x3
 1767 0050 0E       		.uleb128 0xe
 1768 0051 3A       		.uleb128 0x3a
 1769 0052 0B       		.uleb128 0xb
 1770 0053 3B       		.uleb128 0x3b
 1771 0054 0B       		.uleb128 0xb
 1772 0055 27       		.uleb128 0x27
 1773 0056 19       		.uleb128 0x19
 1774 0057 11       		.uleb128 0x11
 1775 0058 01       		.uleb128 0x1
 1776 0059 12       		.uleb128 0x12
 1777 005a 06       		.uleb128 0x6
 1778 005b 40       		.uleb128 0x40
 1779 005c 18       		.uleb128 0x18
 1780 005d 9742     		.uleb128 0x2117
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 60


 1781 005f 19       		.uleb128 0x19
 1782 0060 00       		.byte	0
 1783 0061 00       		.byte	0
 1784 0062 08       		.uleb128 0x8
 1785 0063 2E       		.uleb128 0x2e
 1786 0064 01       		.byte	0x1
 1787 0065 3F       		.uleb128 0x3f
 1788 0066 19       		.uleb128 0x19
 1789 0067 03       		.uleb128 0x3
 1790 0068 0E       		.uleb128 0xe
 1791 0069 3A       		.uleb128 0x3a
 1792 006a 0B       		.uleb128 0xb
 1793 006b 3B       		.uleb128 0x3b
 1794 006c 0B       		.uleb128 0xb
 1795 006d 27       		.uleb128 0x27
 1796 006e 19       		.uleb128 0x19
 1797 006f 11       		.uleb128 0x11
 1798 0070 01       		.uleb128 0x1
 1799 0071 12       		.uleb128 0x12
 1800 0072 06       		.uleb128 0x6
 1801 0073 40       		.uleb128 0x40
 1802 0074 18       		.uleb128 0x18
 1803 0075 9742     		.uleb128 0x2117
 1804 0077 19       		.uleb128 0x19
 1805 0078 01       		.uleb128 0x1
 1806 0079 13       		.uleb128 0x13
 1807 007a 00       		.byte	0
 1808 007b 00       		.byte	0
 1809 007c 09       		.uleb128 0x9
 1810 007d 34       		.uleb128 0x34
 1811 007e 00       		.byte	0
 1812 007f 03       		.uleb128 0x3
 1813 0080 0E       		.uleb128 0xe
 1814 0081 3A       		.uleb128 0x3a
 1815 0082 0B       		.uleb128 0xb
 1816 0083 3B       		.uleb128 0x3b
 1817 0084 0B       		.uleb128 0xb
 1818 0085 49       		.uleb128 0x49
 1819 0086 13       		.uleb128 0x13
 1820 0087 02       		.uleb128 0x2
 1821 0088 17       		.uleb128 0x17
 1822 0089 00       		.byte	0
 1823 008a 00       		.byte	0
 1824 008b 0A       		.uleb128 0xa
 1825 008c 898201   		.uleb128 0x4109
 1826 008f 00       		.byte	0
 1827 0090 11       		.uleb128 0x11
 1828 0091 01       		.uleb128 0x1
 1829 0092 31       		.uleb128 0x31
 1830 0093 13       		.uleb128 0x13
 1831 0094 00       		.byte	0
 1832 0095 00       		.byte	0
 1833 0096 0B       		.uleb128 0xb
 1834 0097 898201   		.uleb128 0x4109
 1835 009a 01       		.byte	0x1
 1836 009b 11       		.uleb128 0x11
 1837 009c 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 61


 1838 009d 31       		.uleb128 0x31
 1839 009e 13       		.uleb128 0x13
 1840 009f 00       		.byte	0
 1841 00a0 00       		.byte	0
 1842 00a1 0C       		.uleb128 0xc
 1843 00a2 8A8201   		.uleb128 0x410a
 1844 00a5 00       		.byte	0
 1845 00a6 02       		.uleb128 0x2
 1846 00a7 18       		.uleb128 0x18
 1847 00a8 9142     		.uleb128 0x2111
 1848 00aa 18       		.uleb128 0x18
 1849 00ab 00       		.byte	0
 1850 00ac 00       		.byte	0
 1851 00ad 0D       		.uleb128 0xd
 1852 00ae 2E       		.uleb128 0x2e
 1853 00af 00       		.byte	0
 1854 00b0 3F       		.uleb128 0x3f
 1855 00b1 19       		.uleb128 0x19
 1856 00b2 03       		.uleb128 0x3
 1857 00b3 0E       		.uleb128 0xe
 1858 00b4 3A       		.uleb128 0x3a
 1859 00b5 0B       		.uleb128 0xb
 1860 00b6 3B       		.uleb128 0x3b
 1861 00b7 05       		.uleb128 0x5
 1862 00b8 27       		.uleb128 0x27
 1863 00b9 19       		.uleb128 0x19
 1864 00ba 49       		.uleb128 0x49
 1865 00bb 13       		.uleb128 0x13
 1866 00bc 11       		.uleb128 0x11
 1867 00bd 01       		.uleb128 0x1
 1868 00be 12       		.uleb128 0x12
 1869 00bf 06       		.uleb128 0x6
 1870 00c0 40       		.uleb128 0x40
 1871 00c1 18       		.uleb128 0x18
 1872 00c2 9742     		.uleb128 0x2117
 1873 00c4 19       		.uleb128 0x19
 1874 00c5 00       		.byte	0
 1875 00c6 00       		.byte	0
 1876 00c7 0E       		.uleb128 0xe
 1877 00c8 2E       		.uleb128 0x2e
 1878 00c9 01       		.byte	0x1
 1879 00ca 3F       		.uleb128 0x3f
 1880 00cb 19       		.uleb128 0x19
 1881 00cc 03       		.uleb128 0x3
 1882 00cd 0E       		.uleb128 0xe
 1883 00ce 3A       		.uleb128 0x3a
 1884 00cf 0B       		.uleb128 0xb
 1885 00d0 3B       		.uleb128 0x3b
 1886 00d1 05       		.uleb128 0x5
 1887 00d2 27       		.uleb128 0x27
 1888 00d3 19       		.uleb128 0x19
 1889 00d4 11       		.uleb128 0x11
 1890 00d5 01       		.uleb128 0x1
 1891 00d6 12       		.uleb128 0x12
 1892 00d7 06       		.uleb128 0x6
 1893 00d8 40       		.uleb128 0x40
 1894 00d9 18       		.uleb128 0x18
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 62


 1895 00da 9742     		.uleb128 0x2117
 1896 00dc 19       		.uleb128 0x19
 1897 00dd 01       		.uleb128 0x1
 1898 00de 13       		.uleb128 0x13
 1899 00df 00       		.byte	0
 1900 00e0 00       		.byte	0
 1901 00e1 0F       		.uleb128 0xf
 1902 00e2 05       		.uleb128 0x5
 1903 00e3 00       		.byte	0
 1904 00e4 03       		.uleb128 0x3
 1905 00e5 0E       		.uleb128 0xe
 1906 00e6 3A       		.uleb128 0x3a
 1907 00e7 0B       		.uleb128 0xb
 1908 00e8 3B       		.uleb128 0x3b
 1909 00e9 05       		.uleb128 0x5
 1910 00ea 49       		.uleb128 0x49
 1911 00eb 13       		.uleb128 0x13
 1912 00ec 02       		.uleb128 0x2
 1913 00ed 18       		.uleb128 0x18
 1914 00ee 00       		.byte	0
 1915 00ef 00       		.byte	0
 1916 00f0 10       		.uleb128 0x10
 1917 00f1 2E       		.uleb128 0x2e
 1918 00f2 01       		.byte	0x1
 1919 00f3 3F       		.uleb128 0x3f
 1920 00f4 19       		.uleb128 0x19
 1921 00f5 03       		.uleb128 0x3
 1922 00f6 0E       		.uleb128 0xe
 1923 00f7 3A       		.uleb128 0x3a
 1924 00f8 0B       		.uleb128 0xb
 1925 00f9 3B       		.uleb128 0x3b
 1926 00fa 05       		.uleb128 0x5
 1927 00fb 27       		.uleb128 0x27
 1928 00fc 19       		.uleb128 0x19
 1929 00fd 49       		.uleb128 0x49
 1930 00fe 13       		.uleb128 0x13
 1931 00ff 11       		.uleb128 0x11
 1932 0100 01       		.uleb128 0x1
 1933 0101 12       		.uleb128 0x12
 1934 0102 06       		.uleb128 0x6
 1935 0103 40       		.uleb128 0x40
 1936 0104 18       		.uleb128 0x18
 1937 0105 9742     		.uleb128 0x2117
 1938 0107 19       		.uleb128 0x19
 1939 0108 01       		.uleb128 0x1
 1940 0109 13       		.uleb128 0x13
 1941 010a 00       		.byte	0
 1942 010b 00       		.byte	0
 1943 010c 11       		.uleb128 0x11
 1944 010d 34       		.uleb128 0x34
 1945 010e 00       		.byte	0
 1946 010f 03       		.uleb128 0x3
 1947 0110 0E       		.uleb128 0xe
 1948 0111 3A       		.uleb128 0x3a
 1949 0112 0B       		.uleb128 0xb
 1950 0113 3B       		.uleb128 0x3b
 1951 0114 05       		.uleb128 0x5
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 63


 1952 0115 49       		.uleb128 0x49
 1953 0116 13       		.uleb128 0x13
 1954 0117 02       		.uleb128 0x2
 1955 0118 18       		.uleb128 0x18
 1956 0119 00       		.byte	0
 1957 011a 00       		.byte	0
 1958 011b 12       		.uleb128 0x12
 1959 011c 34       		.uleb128 0x34
 1960 011d 00       		.byte	0
 1961 011e 03       		.uleb128 0x3
 1962 011f 0E       		.uleb128 0xe
 1963 0120 3A       		.uleb128 0x3a
 1964 0121 0B       		.uleb128 0xb
 1965 0122 3B       		.uleb128 0x3b
 1966 0123 05       		.uleb128 0x5
 1967 0124 49       		.uleb128 0x49
 1968 0125 13       		.uleb128 0x13
 1969 0126 02       		.uleb128 0x2
 1970 0127 17       		.uleb128 0x17
 1971 0128 00       		.byte	0
 1972 0129 00       		.byte	0
 1973 012a 13       		.uleb128 0x13
 1974 012b 05       		.uleb128 0x5
 1975 012c 00       		.byte	0
 1976 012d 03       		.uleb128 0x3
 1977 012e 0E       		.uleb128 0xe
 1978 012f 3A       		.uleb128 0x3a
 1979 0130 0B       		.uleb128 0xb
 1980 0131 3B       		.uleb128 0x3b
 1981 0132 05       		.uleb128 0x5
 1982 0133 49       		.uleb128 0x49
 1983 0134 13       		.uleb128 0x13
 1984 0135 02       		.uleb128 0x2
 1985 0136 17       		.uleb128 0x17
 1986 0137 00       		.byte	0
 1987 0138 00       		.byte	0
 1988 0139 14       		.uleb128 0x14
 1989 013a 0F       		.uleb128 0xf
 1990 013b 00       		.byte	0
 1991 013c 0B       		.uleb128 0xb
 1992 013d 0B       		.uleb128 0xb
 1993 013e 49       		.uleb128 0x49
 1994 013f 13       		.uleb128 0x13
 1995 0140 00       		.byte	0
 1996 0141 00       		.byte	0
 1997 0142 15       		.uleb128 0x15
 1998 0143 26       		.uleb128 0x26
 1999 0144 00       		.byte	0
 2000 0145 49       		.uleb128 0x49
 2001 0146 13       		.uleb128 0x13
 2002 0147 00       		.byte	0
 2003 0148 00       		.byte	0
 2004 0149 16       		.uleb128 0x16
 2005 014a 898201   		.uleb128 0x4109
 2006 014d 01       		.byte	0x1
 2007 014e 11       		.uleb128 0x11
 2008 014f 01       		.uleb128 0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 64


 2009 0150 31       		.uleb128 0x31
 2010 0151 13       		.uleb128 0x13
 2011 0152 01       		.uleb128 0x1
 2012 0153 13       		.uleb128 0x13
 2013 0154 00       		.byte	0
 2014 0155 00       		.byte	0
 2015 0156 17       		.uleb128 0x17
 2016 0157 0B       		.uleb128 0xb
 2017 0158 01       		.byte	0x1
 2018 0159 11       		.uleb128 0x11
 2019 015a 01       		.uleb128 0x1
 2020 015b 12       		.uleb128 0x12
 2021 015c 06       		.uleb128 0x6
 2022 015d 00       		.byte	0
 2023 015e 00       		.byte	0
 2024 015f 18       		.uleb128 0x18
 2025 0160 34       		.uleb128 0x34
 2026 0161 00       		.byte	0
 2027 0162 03       		.uleb128 0x3
 2028 0163 0E       		.uleb128 0xe
 2029 0164 3A       		.uleb128 0x3a
 2030 0165 0B       		.uleb128 0xb
 2031 0166 3B       		.uleb128 0x3b
 2032 0167 0B       		.uleb128 0xb
 2033 0168 49       		.uleb128 0x49
 2034 0169 13       		.uleb128 0x13
 2035 016a 3F       		.uleb128 0x3f
 2036 016b 19       		.uleb128 0x19
 2037 016c 02       		.uleb128 0x2
 2038 016d 18       		.uleb128 0x18
 2039 016e 00       		.byte	0
 2040 016f 00       		.byte	0
 2041 0170 19       		.uleb128 0x19
 2042 0171 2E       		.uleb128 0x2e
 2043 0172 00       		.byte	0
 2044 0173 3F       		.uleb128 0x3f
 2045 0174 19       		.uleb128 0x19
 2046 0175 03       		.uleb128 0x3
 2047 0176 0E       		.uleb128 0xe
 2048 0177 3A       		.uleb128 0x3a
 2049 0178 0B       		.uleb128 0xb
 2050 0179 3B       		.uleb128 0x3b
 2051 017a 0B       		.uleb128 0xb
 2052 017b 27       		.uleb128 0x27
 2053 017c 19       		.uleb128 0x19
 2054 017d 49       		.uleb128 0x49
 2055 017e 13       		.uleb128 0x13
 2056 017f 3C       		.uleb128 0x3c
 2057 0180 19       		.uleb128 0x19
 2058 0181 00       		.byte	0
 2059 0182 00       		.byte	0
 2060 0183 1A       		.uleb128 0x1a
 2061 0184 2E       		.uleb128 0x2e
 2062 0185 00       		.byte	0
 2063 0186 3F       		.uleb128 0x3f
 2064 0187 19       		.uleb128 0x19
 2065 0188 03       		.uleb128 0x3
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 65


 2066 0189 0E       		.uleb128 0xe
 2067 018a 3A       		.uleb128 0x3a
 2068 018b 0B       		.uleb128 0xb
 2069 018c 3B       		.uleb128 0x3b
 2070 018d 0B       		.uleb128 0xb
 2071 018e 27       		.uleb128 0x27
 2072 018f 19       		.uleb128 0x19
 2073 0190 3C       		.uleb128 0x3c
 2074 0191 19       		.uleb128 0x19
 2075 0192 00       		.byte	0
 2076 0193 00       		.byte	0
 2077 0194 1B       		.uleb128 0x1b
 2078 0195 2E       		.uleb128 0x2e
 2079 0196 01       		.byte	0x1
 2080 0197 3F       		.uleb128 0x3f
 2081 0198 19       		.uleb128 0x19
 2082 0199 03       		.uleb128 0x3
 2083 019a 0E       		.uleb128 0xe
 2084 019b 3A       		.uleb128 0x3a
 2085 019c 0B       		.uleb128 0xb
 2086 019d 3B       		.uleb128 0x3b
 2087 019e 0B       		.uleb128 0xb
 2088 019f 27       		.uleb128 0x27
 2089 01a0 19       		.uleb128 0x19
 2090 01a1 3C       		.uleb128 0x3c
 2091 01a2 19       		.uleb128 0x19
 2092 01a3 01       		.uleb128 0x1
 2093 01a4 13       		.uleb128 0x13
 2094 01a5 00       		.byte	0
 2095 01a6 00       		.byte	0
 2096 01a7 1C       		.uleb128 0x1c
 2097 01a8 05       		.uleb128 0x5
 2098 01a9 00       		.byte	0
 2099 01aa 49       		.uleb128 0x49
 2100 01ab 13       		.uleb128 0x13
 2101 01ac 00       		.byte	0
 2102 01ad 00       		.byte	0
 2103 01ae 00       		.byte	0
 2104              		.section	.debug_loc,"",%progbits
 2105              	.Ldebug_loc0:
 2106              	.LLST0:
 2107 0000 08000000 		.4byte	.LVL1
 2108 0004 29000000 		.4byte	.LVL2-1
 2109 0008 0100     		.2byte	0x1
 2110 000a 50       		.byte	0x50
 2111 000b 29000000 		.4byte	.LVL2-1
 2112 000f 32000000 		.4byte	.LVL4
 2113 0013 0100     		.2byte	0x1
 2114 0015 54       		.byte	0x54
 2115 0016 00000000 		.4byte	0
 2116 001a 00000000 		.4byte	0
 2117              	.LLST1:
 2118 001e 08000000 		.4byte	.LVL8
 2119 0022 15000000 		.4byte	.LVL9-1
 2120 0026 0100     		.2byte	0x1
 2121 0028 50       		.byte	0x50
 2122 0029 15000000 		.4byte	.LVL9-1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 66


 2123 002d 32000000 		.4byte	.LVL11
 2124 0031 0100     		.2byte	0x1
 2125 0033 54       		.byte	0x54
 2126 0034 00000000 		.4byte	0
 2127 0038 00000000 		.4byte	0
 2128              	.LLST2:
 2129 003c 04000000 		.4byte	.LVL15
 2130 0040 08000000 		.4byte	.LVL16
 2131 0044 0600     		.2byte	0x6
 2132 0046 70       		.byte	0x70
 2133 0047 00       		.sleb128 0
 2134 0048 08       		.byte	0x8
 2135 0049 7F       		.byte	0x7f
 2136 004a 1A       		.byte	0x1a
 2137 004b 9F       		.byte	0x9f
 2138 004c 00000000 		.4byte	0
 2139 0050 00000000 		.4byte	0
 2140              	.LLST3:
 2141 0054 00000000 		.4byte	.LVL17
 2142 0058 12000000 		.4byte	.LVL19
 2143 005c 0200     		.2byte	0x2
 2144 005e 30       		.byte	0x30
 2145 005f 9F       		.byte	0x9f
 2146 0060 12000000 		.4byte	.LVL19
 2147 0064 1A000000 		.4byte	.LVL20
 2148 0068 0100     		.2byte	0x1
 2149 006a 50       		.byte	0x50
 2150 006b 1A000000 		.4byte	.LVL20
 2151 006f 1E000000 		.4byte	.LVL21
 2152 0073 0200     		.2byte	0x2
 2153 0075 30       		.byte	0x30
 2154 0076 9F       		.byte	0x9f
 2155 0077 1E000000 		.4byte	.LVL21
 2156 007b 2C000000 		.4byte	.LFE9
 2157 007f 0100     		.2byte	0x1
 2158 0081 50       		.byte	0x50
 2159 0082 00000000 		.4byte	0
 2160 0086 00000000 		.4byte	0
 2161              	.LLST4:
 2162 008a 06000000 		.4byte	.LVL26
 2163 008e 1B000000 		.4byte	.LVL27-1
 2164 0092 0100     		.2byte	0x1
 2165 0094 50       		.byte	0x50
 2166 0095 00000000 		.4byte	0
 2167 0099 00000000 		.4byte	0
 2168              	.LLST5:
 2169 009d 00000000 		.4byte	.LVL34
 2170 00a1 0C000000 		.4byte	.LVL36
 2171 00a5 0100     		.2byte	0x1
 2172 00a7 50       		.byte	0x50
 2173 00a8 0C000000 		.4byte	.LVL36
 2174 00ac 16000000 		.4byte	.LVL40
 2175 00b0 0100     		.2byte	0x1
 2176 00b2 55       		.byte	0x55
 2177 00b3 16000000 		.4byte	.LVL40
 2178 00b7 18000000 		.4byte	.LVL41
 2179 00bb 0100     		.2byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 67


 2180 00bd 50       		.byte	0x50
 2181 00be 18000000 		.4byte	.LVL41
 2182 00c2 20000000 		.4byte	.LVL42
 2183 00c6 0100     		.2byte	0x1
 2184 00c8 55       		.byte	0x55
 2185 00c9 20000000 		.4byte	.LVL42
 2186 00cd 24000000 		.4byte	.LFE20
 2187 00d1 0400     		.2byte	0x4
 2188 00d3 F3       		.byte	0xf3
 2189 00d4 01       		.uleb128 0x1
 2190 00d5 50       		.byte	0x50
 2191 00d6 9F       		.byte	0x9f
 2192 00d7 00000000 		.4byte	0
 2193 00db 00000000 		.4byte	0
 2194              	.LLST6:
 2195 00df 04000000 		.4byte	.LVL35
 2196 00e3 0C000000 		.4byte	.LVL36
 2197 00e7 0200     		.2byte	0x2
 2198 00e9 30       		.byte	0x30
 2199 00ea 9F       		.byte	0x9f
 2200 00eb 0C000000 		.4byte	.LVL36
 2201 00ef 12000000 		.4byte	.LVL38
 2202 00f3 0100     		.2byte	0x1
 2203 00f5 54       		.byte	0x54
 2204 00f6 12000000 		.4byte	.LVL38
 2205 00fa 14000000 		.4byte	.LVL39
 2206 00fe 0300     		.2byte	0x3
 2207 0100 74       		.byte	0x74
 2208 0101 7F       		.sleb128 -1
 2209 0102 9F       		.byte	0x9f
 2210 0103 14000000 		.4byte	.LVL39
 2211 0107 16000000 		.4byte	.LVL40
 2212 010b 0100     		.2byte	0x1
 2213 010d 54       		.byte	0x54
 2214 010e 16000000 		.4byte	.LVL40
 2215 0112 18000000 		.4byte	.LVL41
 2216 0116 0200     		.2byte	0x2
 2217 0118 30       		.byte	0x30
 2218 0119 9F       		.byte	0x9f
 2219 011a 18000000 		.4byte	.LVL41
 2220 011e 20000000 		.4byte	.LVL42
 2221 0122 0100     		.2byte	0x1
 2222 0124 54       		.byte	0x54
 2223 0125 00000000 		.4byte	0
 2224 0129 00000000 		.4byte	0
 2225              	.LLST7:
 2226 012d 00000000 		.4byte	.LVL43
 2227 0131 0E000000 		.4byte	.LVL45
 2228 0135 0100     		.2byte	0x1
 2229 0137 50       		.byte	0x50
 2230 0138 0E000000 		.4byte	.LVL45
 2231 013c 1A000000 		.4byte	.LVL49
 2232 0140 0100     		.2byte	0x1
 2233 0142 56       		.byte	0x56
 2234 0143 1A000000 		.4byte	.LVL49
 2235 0147 1C000000 		.4byte	.LVL50
 2236 014b 0100     		.2byte	0x1
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 68


 2237 014d 50       		.byte	0x50
 2238 014e 1C000000 		.4byte	.LVL50
 2239 0152 22000000 		.4byte	.LVL51
 2240 0156 0100     		.2byte	0x1
 2241 0158 56       		.byte	0x56
 2242 0159 22000000 		.4byte	.LVL51
 2243 015d 28000000 		.4byte	.LFE21
 2244 0161 0400     		.2byte	0x4
 2245 0163 F3       		.byte	0xf3
 2246 0164 01       		.uleb128 0x1
 2247 0165 50       		.byte	0x50
 2248 0166 9F       		.byte	0x9f
 2249 0167 00000000 		.4byte	0
 2250 016b 00000000 		.4byte	0
 2251              	.LLST8:
 2252 016f 00000000 		.4byte	.LVL43
 2253 0173 0E000000 		.4byte	.LVL45
 2254 0177 0100     		.2byte	0x1
 2255 0179 51       		.byte	0x51
 2256 017a 0E000000 		.4byte	.LVL45
 2257 017e 1A000000 		.4byte	.LVL49
 2258 0182 0400     		.2byte	0x4
 2259 0184 F3       		.byte	0xf3
 2260 0185 01       		.uleb128 0x1
 2261 0186 51       		.byte	0x51
 2262 0187 9F       		.byte	0x9f
 2263 0188 1A000000 		.4byte	.LVL49
 2264 018c 1C000000 		.4byte	.LVL50
 2265 0190 0100     		.2byte	0x1
 2266 0192 51       		.byte	0x51
 2267 0193 1C000000 		.4byte	.LVL50
 2268 0197 28000000 		.4byte	.LFE21
 2269 019b 0400     		.2byte	0x4
 2270 019d F3       		.byte	0xf3
 2271 019e 01       		.uleb128 0x1
 2272 019f 51       		.byte	0x51
 2273 01a0 9F       		.byte	0x9f
 2274 01a1 00000000 		.4byte	0
 2275 01a5 00000000 		.4byte	0
 2276              	.LLST9:
 2277 01a9 06000000 		.4byte	.LVL44
 2278 01ad 0E000000 		.4byte	.LVL45
 2279 01b1 0200     		.2byte	0x2
 2280 01b3 30       		.byte	0x30
 2281 01b4 9F       		.byte	0x9f
 2282 01b5 0E000000 		.4byte	.LVL45
 2283 01b9 16000000 		.4byte	.LVL47
 2284 01bd 0100     		.2byte	0x1
 2285 01bf 54       		.byte	0x54
 2286 01c0 16000000 		.4byte	.LVL47
 2287 01c4 18000000 		.4byte	.LVL48
 2288 01c8 0300     		.2byte	0x3
 2289 01ca 74       		.byte	0x74
 2290 01cb 7F       		.sleb128 -1
 2291 01cc 9F       		.byte	0x9f
 2292 01cd 18000000 		.4byte	.LVL48
 2293 01d1 1A000000 		.4byte	.LVL49
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 69


 2294 01d5 0100     		.2byte	0x1
 2295 01d7 54       		.byte	0x54
 2296 01d8 1A000000 		.4byte	.LVL49
 2297 01dc 1C000000 		.4byte	.LVL50
 2298 01e0 0200     		.2byte	0x2
 2299 01e2 30       		.byte	0x30
 2300 01e3 9F       		.byte	0x9f
 2301 01e4 1C000000 		.4byte	.LVL50
 2302 01e8 22000000 		.4byte	.LVL51
 2303 01ec 0100     		.2byte	0x1
 2304 01ee 54       		.byte	0x54
 2305 01ef 00000000 		.4byte	0
 2306 01f3 00000000 		.4byte	0
 2307              	.LLST10:
 2308 01f7 00000000 		.4byte	.LVL52
 2309 01fb 0B000000 		.4byte	.LVL53-1
 2310 01ff 0100     		.2byte	0x1
 2311 0201 50       		.byte	0x50
 2312 0202 0B000000 		.4byte	.LVL53-1
 2313 0206 20000000 		.4byte	.LFE22
 2314 020a 0400     		.2byte	0x4
 2315 020c F3       		.byte	0xf3
 2316 020d 01       		.uleb128 0x1
 2317 020e 50       		.byte	0x50
 2318 020f 9F       		.byte	0x9f
 2319 0210 00000000 		.4byte	0
 2320 0214 00000000 		.4byte	0
 2321              	.LLST11:
 2322 0218 06000000 		.4byte	.LVL56
 2323 021c 1C000000 		.4byte	.LVL57
 2324 0220 0100     		.2byte	0x1
 2325 0222 53       		.byte	0x53
 2326 0223 1C000000 		.4byte	.LVL57
 2327 0227 24000000 		.4byte	.LFE23
 2328 022b 0100     		.2byte	0x1
 2329 022d 50       		.byte	0x50
 2330 022e 00000000 		.4byte	0
 2331 0232 00000000 		.4byte	0
 2332              	.LLST12:
 2333 0236 06000000 		.4byte	.LVL58
 2334 023a 1B000000 		.4byte	.LVL59-1
 2335 023e 0100     		.2byte	0x1
 2336 0240 50       		.byte	0x50
 2337 0241 00000000 		.4byte	0
 2338 0245 00000000 		.4byte	0
 2339              	.LLST13:
 2340 0249 00000000 		.4byte	.LVL60
 2341 024d 3C000000 		.4byte	.LVL65
 2342 0251 0100     		.2byte	0x1
 2343 0253 50       		.byte	0x50
 2344 0254 3C000000 		.4byte	.LVL65
 2345 0258 58000000 		.4byte	.LFE25
 2346 025c 0400     		.2byte	0x4
 2347 025e F3       		.byte	0xf3
 2348 025f 01       		.uleb128 0x1
 2349 0260 50       		.byte	0x50
 2350 0261 9F       		.byte	0x9f
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 70


 2351 0262 00000000 		.4byte	0
 2352 0266 00000000 		.4byte	0
 2353              	.LLST14:
 2354 026a 22000000 		.4byte	.LVL61
 2355 026e 28000000 		.4byte	.LVL62
 2356 0272 0100     		.2byte	0x1
 2357 0274 53       		.byte	0x53
 2358 0275 34000000 		.4byte	.LVL63
 2359 0279 3A000000 		.4byte	.LVL64
 2360 027d 0100     		.2byte	0x1
 2361 027f 53       		.byte	0x53
 2362 0280 00000000 		.4byte	0
 2363 0284 00000000 		.4byte	0
 2364              		.section	.debug_aranges,"",%progbits
 2365 0000 EC000000 		.4byte	0xec
 2366 0004 0200     		.2byte	0x2
 2367 0006 00000000 		.4byte	.Ldebug_info0
 2368 000a 04       		.byte	0x4
 2369 000b 00       		.byte	0
 2370 000c 0000     		.2byte	0
 2371 000e 0000     		.2byte	0
 2372 0010 00000000 		.4byte	.LFB1
 2373 0014 28000000 		.4byte	.LFE1-.LFB1
 2374 0018 00000000 		.4byte	.LFB2
 2375 001c 38000000 		.4byte	.LFE2-.LFB2
 2376 0020 00000000 		.4byte	.LFB0
 2377 0024 1C000000 		.4byte	.LFE0-.LFB0
 2378 0028 00000000 		.4byte	.LFB3
 2379 002c 3C000000 		.4byte	.LFE3-.LFB3
 2380 0030 00000000 		.4byte	.LFB4
 2381 0034 04000000 		.4byte	.LFE4-.LFB4
 2382 0038 00000000 		.4byte	.LFB5
 2383 003c 02000000 		.4byte	.LFE5-.LFB5
 2384 0040 00000000 		.4byte	.LFB6
 2385 0044 0C000000 		.4byte	.LFE6-.LFB6
 2386 0048 00000000 		.4byte	.LFB7
 2387 004c 0C000000 		.4byte	.LFE7-.LFB7
 2388 0050 00000000 		.4byte	.LFB8
 2389 0054 10000000 		.4byte	.LFE8-.LFB8
 2390 0058 00000000 		.4byte	.LFB9
 2391 005c 2C000000 		.4byte	.LFE9-.LFB9
 2392 0060 00000000 		.4byte	.LFB10
 2393 0064 12000000 		.4byte	.LFE10-.LFB10
 2394 0068 00000000 		.4byte	.LFB11
 2395 006c 18000000 		.4byte	.LFE11-.LFB11
 2396 0070 00000000 		.4byte	.LFB12
 2397 0074 24000000 		.4byte	.LFE12-.LFB12
 2398 0078 00000000 		.4byte	.LFB13
 2399 007c 02000000 		.4byte	.LFE13-.LFB13
 2400 0080 00000000 		.4byte	.LFB14
 2401 0084 0C000000 		.4byte	.LFE14-.LFB14
 2402 0088 00000000 		.4byte	.LFB15
 2403 008c 0C000000 		.4byte	.LFE15-.LFB15
 2404 0090 00000000 		.4byte	.LFB16
 2405 0094 0C000000 		.4byte	.LFE16-.LFB16
 2406 0098 00000000 		.4byte	.LFB17
 2407 009c 14000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 71


 2408 00a0 00000000 		.4byte	.LFB18
 2409 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2410 00a8 00000000 		.4byte	.LFB19
 2411 00ac 18000000 		.4byte	.LFE19-.LFB19
 2412 00b0 00000000 		.4byte	.LFB20
 2413 00b4 24000000 		.4byte	.LFE20-.LFB20
 2414 00b8 00000000 		.4byte	.LFB21
 2415 00bc 28000000 		.4byte	.LFE21-.LFB21
 2416 00c0 00000000 		.4byte	.LFB22
 2417 00c4 20000000 		.4byte	.LFE22-.LFB22
 2418 00c8 00000000 		.4byte	.LFB23
 2419 00cc 24000000 		.4byte	.LFE23-.LFB23
 2420 00d0 00000000 		.4byte	.LFB24
 2421 00d4 24000000 		.4byte	.LFE24-.LFB24
 2422 00d8 00000000 		.4byte	.LFB25
 2423 00dc 58000000 		.4byte	.LFE25-.LFB25
 2424 00e0 00000000 		.4byte	.LFB26
 2425 00e4 02000000 		.4byte	.LFE26-.LFB26
 2426 00e8 00000000 		.4byte	0
 2427 00ec 00000000 		.4byte	0
 2428              		.section	.debug_ranges,"",%progbits
 2429              	.Ldebug_ranges0:
 2430 0000 00000000 		.4byte	.LFB1
 2431 0004 28000000 		.4byte	.LFE1
 2432 0008 00000000 		.4byte	.LFB2
 2433 000c 38000000 		.4byte	.LFE2
 2434 0010 00000000 		.4byte	.LFB0
 2435 0014 1C000000 		.4byte	.LFE0
 2436 0018 00000000 		.4byte	.LFB3
 2437 001c 3C000000 		.4byte	.LFE3
 2438 0020 00000000 		.4byte	.LFB4
 2439 0024 04000000 		.4byte	.LFE4
 2440 0028 00000000 		.4byte	.LFB5
 2441 002c 02000000 		.4byte	.LFE5
 2442 0030 00000000 		.4byte	.LFB6
 2443 0034 0C000000 		.4byte	.LFE6
 2444 0038 00000000 		.4byte	.LFB7
 2445 003c 0C000000 		.4byte	.LFE7
 2446 0040 00000000 		.4byte	.LFB8
 2447 0044 10000000 		.4byte	.LFE8
 2448 0048 00000000 		.4byte	.LFB9
 2449 004c 2C000000 		.4byte	.LFE9
 2450 0050 00000000 		.4byte	.LFB10
 2451 0054 12000000 		.4byte	.LFE10
 2452 0058 00000000 		.4byte	.LFB11
 2453 005c 18000000 		.4byte	.LFE11
 2454 0060 00000000 		.4byte	.LFB12
 2455 0064 24000000 		.4byte	.LFE12
 2456 0068 00000000 		.4byte	.LFB13
 2457 006c 02000000 		.4byte	.LFE13
 2458 0070 00000000 		.4byte	.LFB14
 2459 0074 0C000000 		.4byte	.LFE14
 2460 0078 00000000 		.4byte	.LFB15
 2461 007c 0C000000 		.4byte	.LFE15
 2462 0080 00000000 		.4byte	.LFB16
 2463 0084 0C000000 		.4byte	.LFE16
 2464 0088 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 72


 2465 008c 14000000 		.4byte	.LFE17
 2466 0090 00000000 		.4byte	.LFB18
 2467 0094 0C000000 		.4byte	.LFE18
 2468 0098 00000000 		.4byte	.LFB19
 2469 009c 18000000 		.4byte	.LFE19
 2470 00a0 00000000 		.4byte	.LFB20
 2471 00a4 24000000 		.4byte	.LFE20
 2472 00a8 00000000 		.4byte	.LFB21
 2473 00ac 28000000 		.4byte	.LFE21
 2474 00b0 00000000 		.4byte	.LFB22
 2475 00b4 20000000 		.4byte	.LFE22
 2476 00b8 00000000 		.4byte	.LFB23
 2477 00bc 24000000 		.4byte	.LFE23
 2478 00c0 00000000 		.4byte	.LFB24
 2479 00c4 24000000 		.4byte	.LFE24
 2480 00c8 00000000 		.4byte	.LFB25
 2481 00cc 58000000 		.4byte	.LFE25
 2482 00d0 00000000 		.4byte	.LFB26
 2483 00d4 02000000 		.4byte	.LFE26
 2484 00d8 00000000 		.4byte	0
 2485 00dc 00000000 		.4byte	0
 2486              		.section	.debug_line,"",%progbits
 2487              	.Ldebug_line0:
 2488 0000 C5020000 		.section	.debug_str,"MS",%progbits,1
 2488      02006100 
 2488      00000201 
 2488      FB0E0D00 
 2488      01010101 
 2489              	.LASF10:
 2490 0000 75696E74 		.ascii	"uint16\000"
 2490      313600
 2491              	.LASF67:
 2492 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2492      69744372 
 2492      69746963 
 2492      616C5365 
 2492      6374696F 
 2493              	.LASF61:
 2494 001d 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2494      4320342E 
 2494      382E3420 
 2494      32303134 
 2494      30353236 
 2495 0050 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2495      20726576 
 2495      6973696F 
 2495      6E203231 
 2495      31333538 
 2496 0083 67202D66 		.ascii	"g -ffunction-sections\000"
 2496      66756E63 
 2496      74696F6E 
 2496      2D736563 
 2496      74696F6E 
 2497              	.LASF42:
 2498 0099 74784461 		.ascii	"txDataByte\000"
 2498      74614279 
 2498      746500
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 73


 2499              	.LASF47:
 2500 00a4 73747269 		.ascii	"string\000"
 2500      6E6700
 2501              	.LASF7:
 2502 00ab 6C6F6E67 		.ascii	"long long unsigned int\000"
 2502      206C6F6E 
 2502      6720756E 
 2502      7369676E 
 2502      65642069 
 2503              	.LASF18:
 2504 00c2 55415254 		.ascii	"UART_Start\000"
 2504      5F537461 
 2504      727400
 2505              	.LASF40:
 2506 00cd 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2506      5F536574 
 2506      5478496E 
 2506      74657272 
 2506      7570744D 
 2507              	.LASF62:
 2508 00e5 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART.c\000"
 2508      6E657261 
 2508      7465645F 
 2508      536F7572 
 2508      63655C50 
 2509              	.LASF6:
 2510 0105 6C6F6E67 		.ascii	"long long int\000"
 2510      206C6F6E 
 2510      6720696E 
 2510      7400
 2511              	.LASF0:
 2512 0113 7369676E 		.ascii	"signed char\000"
 2512      65642063 
 2512      68617200 
 2513              	.LASF57:
 2514 011f 74785065 		.ascii	"txPeriod\000"
 2514      72696F64 
 2514      00
 2515              	.LASF4:
 2516 0128 6C6F6E67 		.ascii	"long int\000"
 2516      20696E74 
 2516      00
 2517              	.LASF45:
 2518 0131 55415254 		.ascii	"UART_PutChar\000"
 2518      5F507574 
 2518      43686172 
 2518      00
 2519              	.LASF26:
 2520 013e 55415254 		.ascii	"UART_ReadRxData\000"
 2520      5F526561 
 2520      64527844 
 2520      61746100 
 2521              	.LASF9:
 2522 014e 75696E74 		.ascii	"uint8\000"
 2522      3800
 2523              	.LASF43:
 2524 0154 55415254 		.ascii	"UART_ReadControlRegister\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 74


 2524      5F526561 
 2524      64436F6E 
 2524      74726F6C 
 2524      52656769 
 2525              	.LASF12:
 2526 016d 646F7562 		.ascii	"double\000"
 2526      6C6500
 2527              	.LASF36:
 2528 0174 61646472 		.ascii	"addressMode\000"
 2528      6573734D 
 2528      6F646500 
 2529              	.LASF23:
 2530 0180 636F6E74 		.ascii	"control\000"
 2530      726F6C00 
 2531              	.LASF63:
 2532 0188 433A5C55 		.ascii	"C:\\Users\\mitchell\\Documents\\fsae\\E-Throttle\\P"
 2532      73657273 
 2532      5C6D6974 
 2532      6368656C 
 2532      6C5C446F 
 2533 01b5 536F435C 		.ascii	"SoC\\E-Throttle.cydsn\000"
 2533      452D5468 
 2533      726F7474 
 2533      6C652E63 
 2533      7964736E 
 2534              	.LASF64:
 2535 01ca 55415254 		.ascii	"UART_Init\000"
 2535      5F496E69 
 2535      7400
 2536              	.LASF55:
 2537 01d4 7265744D 		.ascii	"retMode\000"
 2537      6F646500 
 2538              	.LASF31:
 2539 01dc 55415254 		.ascii	"UART_GetByte\000"
 2539      5F476574 
 2539      42797465 
 2539      00
 2540              	.LASF8:
 2541 01e9 756E7369 		.ascii	"unsigned int\000"
 2541      676E6564 
 2541      20696E74 
 2541      00
 2542              	.LASF53:
 2543 01f6 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2543      5F436C65 
 2543      61725478 
 2543      42756666 
 2543      657200
 2544              	.LASF51:
 2545 0209 55415254 		.ascii	"UART_PutCRLF\000"
 2545      5F507574 
 2545      43524C46 
 2545      00
 2546              	.LASF5:
 2547 0216 6C6F6E67 		.ascii	"long unsigned int\000"
 2547      20756E73 
 2547      69676E65 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 75


 2547      6420696E 
 2547      7400
 2548              	.LASF49:
 2549 0228 55415254 		.ascii	"UART_PutArray\000"
 2549      5F507574 
 2549      41727261 
 2549      7900
 2550              	.LASF66:
 2551 0236 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2551      74657243 
 2551      72697469 
 2551      63616C53 
 2551      65637469 
 2552              	.LASF33:
 2553 024d 73697A65 		.ascii	"size\000"
 2553      00
 2554              	.LASF3:
 2555 0252 73686F72 		.ascii	"short unsigned int\000"
 2555      7420756E 
 2555      7369676E 
 2555      65642069 
 2555      6E7400
 2556              	.LASF48:
 2557 0265 62756649 		.ascii	"bufIndex\000"
 2557      6E646578 
 2557      00
 2558              	.LASF24:
 2559 026e 696E7453 		.ascii	"intSrc\000"
 2559      726300
 2560              	.LASF58:
 2561 0275 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2561      5F536574 
 2561      54784164 
 2561      64726573 
 2561      734D6F64 
 2562              	.LASF44:
 2563 028b 55415254 		.ascii	"UART_ReadTxStatus\000"
 2563      5F526561 
 2563      64547853 
 2563      74617475 
 2563      7300
 2564              	.LASF59:
 2565 029d 55415254 		.ascii	"UART_IntClock_Start\000"
 2565      5F496E74 
 2565      436C6F63 
 2565      6B5F5374 
 2565      61727400 
 2566              	.LASF56:
 2567 02b1 746D7053 		.ascii	"tmpStat\000"
 2567      74617400 
 2568              	.LASF16:
 2569 02b9 73697A65 		.ascii	"sizetype\000"
 2569      74797065 
 2569      00
 2570              	.LASF38:
 2571 02c2 61646472 		.ascii	"address\000"
 2571      65737300 
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 76


 2572              	.LASF37:
 2573 02ca 55415254 		.ascii	"UART_SetRxAddress1\000"
 2573      5F536574 
 2573      52784164 
 2573      64726573 
 2573      733100
 2574              	.LASF39:
 2575 02dd 55415254 		.ascii	"UART_SetRxAddress2\000"
 2575      5F536574 
 2575      52784164 
 2575      64726573 
 2575      733200
 2576              	.LASF30:
 2577 02f0 72785374 		.ascii	"rxStatus\000"
 2577      61747573 
 2577      00
 2578              	.LASF60:
 2579 02f9 55415254 		.ascii	"UART_IntClock_Stop\000"
 2579      5F496E74 
 2579      436C6F63 
 2579      6B5F5374 
 2579      6F7000
 2580              	.LASF11:
 2581 030c 666C6F61 		.ascii	"float\000"
 2581      7400
 2582              	.LASF52:
 2583 0312 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2583      5F476574 
 2583      54784275 
 2583      66666572 
 2583      53697A65 
 2584              	.LASF15:
 2585 0327 72656738 		.ascii	"reg8\000"
 2585      00
 2586              	.LASF35:
 2587 032c 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2587      5F536574 
 2587      52784164 
 2587      64726573 
 2587      734D6F64 
 2588              	.LASF1:
 2589 0342 756E7369 		.ascii	"unsigned char\000"
 2589      676E6564 
 2589      20636861 
 2589      7200
 2590              	.LASF41:
 2591 0350 55415254 		.ascii	"UART_WriteTxData\000"
 2591      5F577269 
 2591      74655478 
 2591      44617461 
 2591      00
 2592              	.LASF2:
 2593 0361 73686F72 		.ascii	"short int\000"
 2593      7420696E 
 2593      7400
 2594              	.LASF54:
 2595 036b 55415254 		.ascii	"UART_SendBreak\000"
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 77


 2595      5F53656E 
 2595      64427265 
 2595      616B00
 2596              	.LASF50:
 2597 037a 62797465 		.ascii	"byteCount\000"
 2597      436F756E 
 2597      7400
 2598              	.LASF25:
 2599 0384 72784461 		.ascii	"rxData\000"
 2599      746100
 2600              	.LASF17:
 2601 038b 55415254 		.ascii	"UART_Enable\000"
 2601      5F456E61 
 2601      626C6500 
 2602              	.LASF27:
 2603 0397 55415254 		.ascii	"UART_ReadRxStatus\000"
 2603      5F526561 
 2603      64527853 
 2603      74617475 
 2603      7300
 2604              	.LASF14:
 2605 03a9 63686172 		.ascii	"char\000"
 2605      00
 2606              	.LASF13:
 2607 03ae 63686172 		.ascii	"char8\000"
 2607      3800
 2608              	.LASF22:
 2609 03b4 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2609      5F536574 
 2609      5278496E 
 2609      74657272 
 2609      7570744D 
 2610              	.LASF29:
 2611 03cc 55415254 		.ascii	"UART_GetChar\000"
 2611      5F476574 
 2611      43686172 
 2611      00
 2612              	.LASF20:
 2613 03d9 656E6162 		.ascii	"enableInterrupts\000"
 2613      6C65496E 
 2613      74657272 
 2613      75707473 
 2613      00
 2614              	.LASF65:
 2615 03ea 55415254 		.ascii	"UART_initVar\000"
 2615      5F696E69 
 2615      74566172 
 2615      00
 2616              	.LASF32:
 2617 03f7 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2617      5F476574 
 2617      52784275 
 2617      66666572 
 2617      53697A65 
 2618              	.LASF28:
 2619 040c 73746174 		.ascii	"status\000"
 2619      757300
ARM GAS  C:\Users\mitchell\AppData\Local\Temp\ccj8GlnW.s 			page 78


 2620              	.LASF19:
 2621 0413 55415254 		.ascii	"UART_Stop\000"
 2621      5F53746F 
 2621      7000
 2622              	.LASF46:
 2623 041d 55415254 		.ascii	"UART_PutString\000"
 2623      5F507574 
 2623      53747269 
 2623      6E6700
 2624              	.LASF21:
 2625 042c 55415254 		.ascii	"UART_WriteControlRegister\000"
 2625      5F577269 
 2625      7465436F 
 2625      6E74726F 
 2625      6C526567 
 2626              	.LASF34:
 2627 0446 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2627      5F436C65 
 2627      61725278 
 2627      42756666 
 2627      657200
 2628              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
